

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Feb 09 18:25:53 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    80                           	dabs	1,0x7E,2
    81  0000                     
    82                           ; Version 2.40
    83                           ; Generated 19/01/2022 GMT
    84                           ; 
    85                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC16F18345 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0090                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0097                     	;# 
   160  009B                     	;# 
   161  009B                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  0111                     	;# 
   170  0112                     	;# 
   171  0113                     	;# 
   172  0114                     	;# 
   173  0115                     	;# 
   174  0116                     	;# 
   175  0117                     	;# 
   176  0118                     	;# 
   177  0119                     	;# 
   178  018C                     	;# 
   179  018D                     	;# 
   180  018E                     	;# 
   181  0197                     	;# 
   182  0199                     	;# 
   183  0199                     	;# 
   184  0199                     	;# 
   185  019A                     	;# 
   186  019A                     	;# 
   187  019A                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019B                     	;# 
   192  019B                     	;# 
   193  019C                     	;# 
   194  019C                     	;# 
   195  019C                     	;# 
   196  019D                     	;# 
   197  019D                     	;# 
   198  019D                     	;# 
   199  019E                     	;# 
   200  019E                     	;# 
   201  019E                     	;# 
   202  019F                     	;# 
   203  019F                     	;# 
   204  019F                     	;# 
   205  019F                     	;# 
   206  019F                     	;# 
   207  020C                     	;# 
   208  020D                     	;# 
   209  020E                     	;# 
   210  0211                     	;# 
   211  0211                     	;# 
   212  0212                     	;# 
   213  0212                     	;# 
   214  0213                     	;# 
   215  0213                     	;# 
   216  0214                     	;# 
   217  0214                     	;# 
   218  0215                     	;# 
   219  0215                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0216                     	;# 
   223  0216                     	;# 
   224  0217                     	;# 
   225  0217                     	;# 
   226  0219                     	;# 
   227  021A                     	;# 
   228  021B                     	;# 
   229  021C                     	;# 
   230  021D                     	;# 
   231  021D                     	;# 
   232  021E                     	;# 
   233  021F                     	;# 
   234  028C                     	;# 
   235  028D                     	;# 
   236  028E                     	;# 
   237  0291                     	;# 
   238  0291                     	;# 
   239  0292                     	;# 
   240  0293                     	;# 
   241  0294                     	;# 
   242  0295                     	;# 
   243  0295                     	;# 
   244  0296                     	;# 
   245  0297                     	;# 
   246  0298                     	;# 
   247  029F                     	;# 
   248  030C                     	;# 
   249  030D                     	;# 
   250  030E                     	;# 
   251  0311                     	;# 
   252  0311                     	;# 
   253  0312                     	;# 
   254  0313                     	;# 
   255  0314                     	;# 
   256  0315                     	;# 
   257  0315                     	;# 
   258  0316                     	;# 
   259  0317                     	;# 
   260  0318                     	;# 
   261  038C                     	;# 
   262  038D                     	;# 
   263  038E                     	;# 
   264  0391                     	;# 
   265  0392                     	;# 
   266  0393                     	;# 
   267  0394                     	;# 
   268  0395                     	;# 
   269  0396                     	;# 
   270  0397                     	;# 
   271  0398                     	;# 
   272  0399                     	;# 
   273  039A                     	;# 
   274  039C                     	;# 
   275  039D                     	;# 
   276  039E                     	;# 
   277  039F                     	;# 
   278  0411                     	;# 
   279  0411                     	;# 
   280  0412                     	;# 
   281  0413                     	;# 
   282  0414                     	;# 
   283  0415                     	;# 
   284  0416                     	;# 
   285  0417                     	;# 
   286  0418                     	;# 
   287  0418                     	;# 
   288  0419                     	;# 
   289  041A                     	;# 
   290  041B                     	;# 
   291  041C                     	;# 
   292  041D                     	;# 
   293  041E                     	;# 
   294  041F                     	;# 
   295  0498                     	;# 
   296  0498                     	;# 
   297  0499                     	;# 
   298  049A                     	;# 
   299  049B                     	;# 
   300  049B                     	;# 
   301  049C                     	;# 
   302  049D                     	;# 
   303  049E                     	;# 
   304  049F                     	;# 
   305  0617                     	;# 
   306  0618                     	;# 
   307  0619                     	;# 
   308  0619                     	;# 
   309  061A                     	;# 
   310  061B                     	;# 
   311  061C                     	;# 
   312  061C                     	;# 
   313  061F                     	;# 
   314  0691                     	;# 
   315  0692                     	;# 
   316  0693                     	;# 
   317  0694                     	;# 
   318  0695                     	;# 
   319  0696                     	;# 
   320  0697                     	;# 
   321  0698                     	;# 
   322  0699                     	;# 
   323  0711                     	;# 
   324  0712                     	;# 
   325  0713                     	;# 
   326  0714                     	;# 
   327  0715                     	;# 
   328  0716                     	;# 
   329  0717                     	;# 
   330  0718                     	;# 
   331  0719                     	;# 
   332  0891                     	;# 
   333  0891                     	;# 
   334  0891                     	;# 
   335  0891                     	;# 
   336  0891                     	;# 
   337  0891                     	;# 
   338  0892                     	;# 
   339  0892                     	;# 
   340  0892                     	;# 
   341  0893                     	;# 
   342  0893                     	;# 
   343  0893                     	;# 
   344  0893                     	;# 
   345  0893                     	;# 
   346  0893                     	;# 
   347  0894                     	;# 
   348  0894                     	;# 
   349  0894                     	;# 
   350  0895                     	;# 
   351  0895                     	;# 
   352  0895                     	;# 
   353  0896                     	;# 
   354  0896                     	;# 
   355  0896                     	;# 
   356  089B                     	;# 
   357  0911                     	;# 
   358  0912                     	;# 
   359  0913                     	;# 
   360  0914                     	;# 
   361  0915                     	;# 
   362  0916                     	;# 
   363  0918                     	;# 
   364  0919                     	;# 
   365  091A                     	;# 
   366  091B                     	;# 
   367  091C                     	;# 
   368  091D                     	;# 
   369  091E                     	;# 
   370  091F                     	;# 
   371  0E0F                     	;# 
   372  0E10                     	;# 
   373  0E11                     	;# 
   374  0E12                     	;# 
   375  0E13                     	;# 
   376  0E14                     	;# 
   377  0E15                     	;# 
   378  0E16                     	;# 
   379  0E17                     	;# 
   380  0E18                     	;# 
   381  0E19                     	;# 
   382  0E1A                     	;# 
   383  0E1B                     	;# 
   384  0E1C                     	;# 
   385  0E1D                     	;# 
   386  0E1E                     	;# 
   387  0E1F                     	;# 
   388  0E20                     	;# 
   389  0E21                     	;# 
   390  0E22                     	;# 
   391  0E24                     	;# 
   392  0E25                     	;# 
   393  0E28                     	;# 
   394  0E29                     	;# 
   395  0E2A                     	;# 
   396  0E2B                     	;# 
   397  0E2C                     	;# 
   398  0E2D                     	;# 
   399  0E2E                     	;# 
   400  0E2F                     	;# 
   401  0E90                     	;# 
   402  0E91                     	;# 
   403  0E92                     	;# 
   404  0E94                     	;# 
   405  0E95                     	;# 
   406  0E9C                     	;# 
   407  0E9D                     	;# 
   408  0E9E                     	;# 
   409  0E9F                     	;# 
   410  0EA0                     	;# 
   411  0EA1                     	;# 
   412  0EA2                     	;# 
   413  0EA3                     	;# 
   414  0EA4                     	;# 
   415  0EA5                     	;# 
   416  0EA6                     	;# 
   417  0EA7                     	;# 
   418  0F0F                     	;# 
   419  0F10                     	;# 
   420  0F11                     	;# 
   421  0F12                     	;# 
   422  0F13                     	;# 
   423  0F14                     	;# 
   424  0F15                     	;# 
   425  0F16                     	;# 
   426  0F17                     	;# 
   427  0F18                     	;# 
   428  0F19                     	;# 
   429  0F1A                     	;# 
   430  0F1B                     	;# 
   431  0F1C                     	;# 
   432  0F1D                     	;# 
   433  0F1E                     	;# 
   434  0F1F                     	;# 
   435  0F20                     	;# 
   436  0F21                     	;# 
   437  0F22                     	;# 
   438  0F23                     	;# 
   439  0F24                     	;# 
   440  0F25                     	;# 
   441  0F26                     	;# 
   442  0F27                     	;# 
   443  0F28                     	;# 
   444  0F29                     	;# 
   445  0F2A                     	;# 
   446  0F2B                     	;# 
   447  0F2C                     	;# 
   448  0F2D                     	;# 
   449  0F2E                     	;# 
   450  0F2F                     	;# 
   451  0F30                     	;# 
   452  0F31                     	;# 
   453  0F32                     	;# 
   454  0F33                     	;# 
   455  0F34                     	;# 
   456  0F35                     	;# 
   457  0F36                     	;# 
   458  0F37                     	;# 
   459  0FE4                     	;# 
   460  0FE5                     	;# 
   461  0FE6                     	;# 
   462  0FE7                     	;# 
   463  0FE8                     	;# 
   464  0FE9                     	;# 
   465  0FEA                     	;# 
   466  0FEB                     	;# 
   467  0FED                     	;# 
   468  0FEE                     	;# 
   469  0FEF                     	;# 
   470  0000                     	;# 
   471  0001                     	;# 
   472  0002                     	;# 
   473  0003                     	;# 
   474  0004                     	;# 
   475  0005                     	;# 
   476  0006                     	;# 
   477  0007                     	;# 
   478  0008                     	;# 
   479  0009                     	;# 
   480  000A                     	;# 
   481  000B                     	;# 
   482  000C                     	;# 
   483  000D                     	;# 
   484  000E                     	;# 
   485  0010                     	;# 
   486  0011                     	;# 
   487  0012                     	;# 
   488  0013                     	;# 
   489  0014                     	;# 
   490  0015                     	;# 
   491  0015                     	;# 
   492  0016                     	;# 
   493  0016                     	;# 
   494  0017                     	;# 
   495  0018                     	;# 
   496  0019                     	;# 
   497  0019                     	;# 
   498  001A                     	;# 
   499  001B                     	;# 
   500  001C                     	;# 
   501  001D                     	;# 
   502  001E                     	;# 
   503  001F                     	;# 
   504  008C                     	;# 
   505  008D                     	;# 
   506  008E                     	;# 
   507  0090                     	;# 
   508  0091                     	;# 
   509  0092                     	;# 
   510  0093                     	;# 
   511  0094                     	;# 
   512  0097                     	;# 
   513  009B                     	;# 
   514  009B                     	;# 
   515  009C                     	;# 
   516  009D                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  010C                     	;# 
   520  010D                     	;# 
   521  010E                     	;# 
   522  0111                     	;# 
   523  0112                     	;# 
   524  0113                     	;# 
   525  0114                     	;# 
   526  0115                     	;# 
   527  0116                     	;# 
   528  0117                     	;# 
   529  0118                     	;# 
   530  0119                     	;# 
   531  018C                     	;# 
   532  018D                     	;# 
   533  018E                     	;# 
   534  0197                     	;# 
   535  0199                     	;# 
   536  0199                     	;# 
   537  0199                     	;# 
   538  019A                     	;# 
   539  019A                     	;# 
   540  019A                     	;# 
   541  019B                     	;# 
   542  019B                     	;# 
   543  019B                     	;# 
   544  019B                     	;# 
   545  019B                     	;# 
   546  019C                     	;# 
   547  019C                     	;# 
   548  019C                     	;# 
   549  019D                     	;# 
   550  019D                     	;# 
   551  019D                     	;# 
   552  019E                     	;# 
   553  019E                     	;# 
   554  019E                     	;# 
   555  019F                     	;# 
   556  019F                     	;# 
   557  019F                     	;# 
   558  019F                     	;# 
   559  019F                     	;# 
   560  020C                     	;# 
   561  020D                     	;# 
   562  020E                     	;# 
   563  0211                     	;# 
   564  0211                     	;# 
   565  0212                     	;# 
   566  0212                     	;# 
   567  0213                     	;# 
   568  0213                     	;# 
   569  0214                     	;# 
   570  0214                     	;# 
   571  0215                     	;# 
   572  0215                     	;# 
   573  0215                     	;# 
   574  0215                     	;# 
   575  0216                     	;# 
   576  0216                     	;# 
   577  0217                     	;# 
   578  0217                     	;# 
   579  0219                     	;# 
   580  021A                     	;# 
   581  021B                     	;# 
   582  021C                     	;# 
   583  021D                     	;# 
   584  021D                     	;# 
   585  021E                     	;# 
   586  021F                     	;# 
   587  028C                     	;# 
   588  028D                     	;# 
   589  028E                     	;# 
   590  0291                     	;# 
   591  0291                     	;# 
   592  0292                     	;# 
   593  0293                     	;# 
   594  0294                     	;# 
   595  0295                     	;# 
   596  0295                     	;# 
   597  0296                     	;# 
   598  0297                     	;# 
   599  0298                     	;# 
   600  029F                     	;# 
   601  030C                     	;# 
   602  030D                     	;# 
   603  030E                     	;# 
   604  0311                     	;# 
   605  0311                     	;# 
   606  0312                     	;# 
   607  0313                     	;# 
   608  0314                     	;# 
   609  0315                     	;# 
   610  0315                     	;# 
   611  0316                     	;# 
   612  0317                     	;# 
   613  0318                     	;# 
   614  038C                     	;# 
   615  038D                     	;# 
   616  038E                     	;# 
   617  0391                     	;# 
   618  0392                     	;# 
   619  0393                     	;# 
   620  0394                     	;# 
   621  0395                     	;# 
   622  0396                     	;# 
   623  0397                     	;# 
   624  0398                     	;# 
   625  0399                     	;# 
   626  039A                     	;# 
   627  039C                     	;# 
   628  039D                     	;# 
   629  039E                     	;# 
   630  039F                     	;# 
   631  0411                     	;# 
   632  0411                     	;# 
   633  0412                     	;# 
   634  0413                     	;# 
   635  0414                     	;# 
   636  0415                     	;# 
   637  0416                     	;# 
   638  0417                     	;# 
   639  0418                     	;# 
   640  0418                     	;# 
   641  0419                     	;# 
   642  041A                     	;# 
   643  041B                     	;# 
   644  041C                     	;# 
   645  041D                     	;# 
   646  041E                     	;# 
   647  041F                     	;# 
   648  0498                     	;# 
   649  0498                     	;# 
   650  0499                     	;# 
   651  049A                     	;# 
   652  049B                     	;# 
   653  049B                     	;# 
   654  049C                     	;# 
   655  049D                     	;# 
   656  049E                     	;# 
   657  049F                     	;# 
   658  0617                     	;# 
   659  0618                     	;# 
   660  0619                     	;# 
   661  0619                     	;# 
   662  061A                     	;# 
   663  061B                     	;# 
   664  061C                     	;# 
   665  061C                     	;# 
   666  061F                     	;# 
   667  0691                     	;# 
   668  0692                     	;# 
   669  0693                     	;# 
   670  0694                     	;# 
   671  0695                     	;# 
   672  0696                     	;# 
   673  0697                     	;# 
   674  0698                     	;# 
   675  0699                     	;# 
   676  0711                     	;# 
   677  0712                     	;# 
   678  0713                     	;# 
   679  0714                     	;# 
   680  0715                     	;# 
   681  0716                     	;# 
   682  0717                     	;# 
   683  0718                     	;# 
   684  0719                     	;# 
   685  0891                     	;# 
   686  0891                     	;# 
   687  0891                     	;# 
   688  0891                     	;# 
   689  0891                     	;# 
   690  0891                     	;# 
   691  0892                     	;# 
   692  0892                     	;# 
   693  0892                     	;# 
   694  0893                     	;# 
   695  0893                     	;# 
   696  0893                     	;# 
   697  0893                     	;# 
   698  0893                     	;# 
   699  0893                     	;# 
   700  0894                     	;# 
   701  0894                     	;# 
   702  0894                     	;# 
   703  0895                     	;# 
   704  0895                     	;# 
   705  0895                     	;# 
   706  0896                     	;# 
   707  0896                     	;# 
   708  0896                     	;# 
   709  089B                     	;# 
   710  0911                     	;# 
   711  0912                     	;# 
   712  0913                     	;# 
   713  0914                     	;# 
   714  0915                     	;# 
   715  0916                     	;# 
   716  0918                     	;# 
   717  0919                     	;# 
   718  091A                     	;# 
   719  091B                     	;# 
   720  091C                     	;# 
   721  091D                     	;# 
   722  091E                     	;# 
   723  091F                     	;# 
   724  0E0F                     	;# 
   725  0E10                     	;# 
   726  0E11                     	;# 
   727  0E12                     	;# 
   728  0E13                     	;# 
   729  0E14                     	;# 
   730  0E15                     	;# 
   731  0E16                     	;# 
   732  0E17                     	;# 
   733  0E18                     	;# 
   734  0E19                     	;# 
   735  0E1A                     	;# 
   736  0E1B                     	;# 
   737  0E1C                     	;# 
   738  0E1D                     	;# 
   739  0E1E                     	;# 
   740  0E1F                     	;# 
   741  0E20                     	;# 
   742  0E21                     	;# 
   743  0E22                     	;# 
   744  0E24                     	;# 
   745  0E25                     	;# 
   746  0E28                     	;# 
   747  0E29                     	;# 
   748  0E2A                     	;# 
   749  0E2B                     	;# 
   750  0E2C                     	;# 
   751  0E2D                     	;# 
   752  0E2E                     	;# 
   753  0E2F                     	;# 
   754  0E90                     	;# 
   755  0E91                     	;# 
   756  0E92                     	;# 
   757  0E94                     	;# 
   758  0E95                     	;# 
   759  0E9C                     	;# 
   760  0E9D                     	;# 
   761  0E9E                     	;# 
   762  0E9F                     	;# 
   763  0EA0                     	;# 
   764  0EA1                     	;# 
   765  0EA2                     	;# 
   766  0EA3                     	;# 
   767  0EA4                     	;# 
   768  0EA5                     	;# 
   769  0EA6                     	;# 
   770  0EA7                     	;# 
   771  0F0F                     	;# 
   772  0F10                     	;# 
   773  0F11                     	;# 
   774  0F12                     	;# 
   775  0F13                     	;# 
   776  0F14                     	;# 
   777  0F15                     	;# 
   778  0F16                     	;# 
   779  0F17                     	;# 
   780  0F18                     	;# 
   781  0F19                     	;# 
   782  0F1A                     	;# 
   783  0F1B                     	;# 
   784  0F1C                     	;# 
   785  0F1D                     	;# 
   786  0F1E                     	;# 
   787  0F1F                     	;# 
   788  0F20                     	;# 
   789  0F21                     	;# 
   790  0F22                     	;# 
   791  0F23                     	;# 
   792  0F24                     	;# 
   793  0F25                     	;# 
   794  0F26                     	;# 
   795  0F27                     	;# 
   796  0F28                     	;# 
   797  0F29                     	;# 
   798  0F2A                     	;# 
   799  0F2B                     	;# 
   800  0F2C                     	;# 
   801  0F2D                     	;# 
   802  0F2E                     	;# 
   803  0F2F                     	;# 
   804  0F30                     	;# 
   805  0F31                     	;# 
   806  0F32                     	;# 
   807  0F33                     	;# 
   808  0F34                     	;# 
   809  0F35                     	;# 
   810  0F36                     	;# 
   811  0F37                     	;# 
   812  0FE4                     	;# 
   813  0FE5                     	;# 
   814  0FE6                     	;# 
   815  0FE7                     	;# 
   816  0FE8                     	;# 
   817  0FE9                     	;# 
   818  0FEA                     	;# 
   819  0FEB                     	;# 
   820  0FED                     	;# 
   821  0FEE                     	;# 
   822  0FEF                     	;# 
   823  0000                     	;# 
   824  0001                     	;# 
   825  0002                     	;# 
   826  0003                     	;# 
   827  0004                     	;# 
   828  0005                     	;# 
   829  0006                     	;# 
   830  0007                     	;# 
   831  0008                     	;# 
   832  0009                     	;# 
   833  000A                     	;# 
   834  000B                     	;# 
   835  000C                     	;# 
   836  000D                     	;# 
   837  000E                     	;# 
   838  0010                     	;# 
   839  0011                     	;# 
   840  0012                     	;# 
   841  0013                     	;# 
   842  0014                     	;# 
   843  0015                     	;# 
   844  0015                     	;# 
   845  0016                     	;# 
   846  0016                     	;# 
   847  0017                     	;# 
   848  0018                     	;# 
   849  0019                     	;# 
   850  0019                     	;# 
   851  001A                     	;# 
   852  001B                     	;# 
   853  001C                     	;# 
   854  001D                     	;# 
   855  001E                     	;# 
   856  001F                     	;# 
   857  008C                     	;# 
   858  008D                     	;# 
   859  008E                     	;# 
   860  0090                     	;# 
   861  0091                     	;# 
   862  0092                     	;# 
   863  0093                     	;# 
   864  0094                     	;# 
   865  0097                     	;# 
   866  009B                     	;# 
   867  009B                     	;# 
   868  009C                     	;# 
   869  009D                     	;# 
   870  009E                     	;# 
   871  009F                     	;# 
   872  010C                     	;# 
   873  010D                     	;# 
   874  010E                     	;# 
   875  0111                     	;# 
   876  0112                     	;# 
   877  0113                     	;# 
   878  0114                     	;# 
   879  0115                     	;# 
   880  0116                     	;# 
   881  0117                     	;# 
   882  0118                     	;# 
   883  0119                     	;# 
   884  018C                     	;# 
   885  018D                     	;# 
   886  018E                     	;# 
   887  0197                     	;# 
   888  0199                     	;# 
   889  0199                     	;# 
   890  0199                     	;# 
   891  019A                     	;# 
   892  019A                     	;# 
   893  019A                     	;# 
   894  019B                     	;# 
   895  019B                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019C                     	;# 
   900  019C                     	;# 
   901  019C                     	;# 
   902  019D                     	;# 
   903  019D                     	;# 
   904  019D                     	;# 
   905  019E                     	;# 
   906  019E                     	;# 
   907  019E                     	;# 
   908  019F                     	;# 
   909  019F                     	;# 
   910  019F                     	;# 
   911  019F                     	;# 
   912  019F                     	;# 
   913  020C                     	;# 
   914  020D                     	;# 
   915  020E                     	;# 
   916  0211                     	;# 
   917  0211                     	;# 
   918  0212                     	;# 
   919  0212                     	;# 
   920  0213                     	;# 
   921  0213                     	;# 
   922  0214                     	;# 
   923  0214                     	;# 
   924  0215                     	;# 
   925  0215                     	;# 
   926  0215                     	;# 
   927  0215                     	;# 
   928  0216                     	;# 
   929  0216                     	;# 
   930  0217                     	;# 
   931  0217                     	;# 
   932  0219                     	;# 
   933  021A                     	;# 
   934  021B                     	;# 
   935  021C                     	;# 
   936  021D                     	;# 
   937  021D                     	;# 
   938  021E                     	;# 
   939  021F                     	;# 
   940  028C                     	;# 
   941  028D                     	;# 
   942  028E                     	;# 
   943  0291                     	;# 
   944  0291                     	;# 
   945  0292                     	;# 
   946  0293                     	;# 
   947  0294                     	;# 
   948  0295                     	;# 
   949  0295                     	;# 
   950  0296                     	;# 
   951  0297                     	;# 
   952  0298                     	;# 
   953  029F                     	;# 
   954  030C                     	;# 
   955  030D                     	;# 
   956  030E                     	;# 
   957  0311                     	;# 
   958  0311                     	;# 
   959  0312                     	;# 
   960  0313                     	;# 
   961  0314                     	;# 
   962  0315                     	;# 
   963  0315                     	;# 
   964  0316                     	;# 
   965  0317                     	;# 
   966  0318                     	;# 
   967  038C                     	;# 
   968  038D                     	;# 
   969  038E                     	;# 
   970  0391                     	;# 
   971  0392                     	;# 
   972  0393                     	;# 
   973  0394                     	;# 
   974  0395                     	;# 
   975  0396                     	;# 
   976  0397                     	;# 
   977  0398                     	;# 
   978  0399                     	;# 
   979  039A                     	;# 
   980  039C                     	;# 
   981  039D                     	;# 
   982  039E                     	;# 
   983  039F                     	;# 
   984  0411                     	;# 
   985  0411                     	;# 
   986  0412                     	;# 
   987  0413                     	;# 
   988  0414                     	;# 
   989  0415                     	;# 
   990  0416                     	;# 
   991  0417                     	;# 
   992  0418                     	;# 
   993  0418                     	;# 
   994  0419                     	;# 
   995  041A                     	;# 
   996  041B                     	;# 
   997  041C                     	;# 
   998  041D                     	;# 
   999  041E                     	;# 
  1000  041F                     	;# 
  1001  0498                     	;# 
  1002  0498                     	;# 
  1003  0499                     	;# 
  1004  049A                     	;# 
  1005  049B                     	;# 
  1006  049B                     	;# 
  1007  049C                     	;# 
  1008  049D                     	;# 
  1009  049E                     	;# 
  1010  049F                     	;# 
  1011  0617                     	;# 
  1012  0618                     	;# 
  1013  0619                     	;# 
  1014  0619                     	;# 
  1015  061A                     	;# 
  1016  061B                     	;# 
  1017  061C                     	;# 
  1018  061C                     	;# 
  1019  061F                     	;# 
  1020  0691                     	;# 
  1021  0692                     	;# 
  1022  0693                     	;# 
  1023  0694                     	;# 
  1024  0695                     	;# 
  1025  0696                     	;# 
  1026  0697                     	;# 
  1027  0698                     	;# 
  1028  0699                     	;# 
  1029  0711                     	;# 
  1030  0712                     	;# 
  1031  0713                     	;# 
  1032  0714                     	;# 
  1033  0715                     	;# 
  1034  0716                     	;# 
  1035  0717                     	;# 
  1036  0718                     	;# 
  1037  0719                     	;# 
  1038  0891                     	;# 
  1039  0891                     	;# 
  1040  0891                     	;# 
  1041  0891                     	;# 
  1042  0891                     	;# 
  1043  0891                     	;# 
  1044  0892                     	;# 
  1045  0892                     	;# 
  1046  0892                     	;# 
  1047  0893                     	;# 
  1048  0893                     	;# 
  1049  0893                     	;# 
  1050  0893                     	;# 
  1051  0893                     	;# 
  1052  0893                     	;# 
  1053  0894                     	;# 
  1054  0894                     	;# 
  1055  0894                     	;# 
  1056  0895                     	;# 
  1057  0895                     	;# 
  1058  0895                     	;# 
  1059  0896                     	;# 
  1060  0896                     	;# 
  1061  0896                     	;# 
  1062  089B                     	;# 
  1063  0911                     	;# 
  1064  0912                     	;# 
  1065  0913                     	;# 
  1066  0914                     	;# 
  1067  0915                     	;# 
  1068  0916                     	;# 
  1069  0918                     	;# 
  1070  0919                     	;# 
  1071  091A                     	;# 
  1072  091B                     	;# 
  1073  091C                     	;# 
  1074  091D                     	;# 
  1075  091E                     	;# 
  1076  091F                     	;# 
  1077  0E0F                     	;# 
  1078  0E10                     	;# 
  1079  0E11                     	;# 
  1080  0E12                     	;# 
  1081  0E13                     	;# 
  1082  0E14                     	;# 
  1083  0E15                     	;# 
  1084  0E16                     	;# 
  1085  0E17                     	;# 
  1086  0E18                     	;# 
  1087  0E19                     	;# 
  1088  0E1A                     	;# 
  1089  0E1B                     	;# 
  1090  0E1C                     	;# 
  1091  0E1D                     	;# 
  1092  0E1E                     	;# 
  1093  0E1F                     	;# 
  1094  0E20                     	;# 
  1095  0E21                     	;# 
  1096  0E22                     	;# 
  1097  0E24                     	;# 
  1098  0E25                     	;# 
  1099  0E28                     	;# 
  1100  0E29                     	;# 
  1101  0E2A                     	;# 
  1102  0E2B                     	;# 
  1103  0E2C                     	;# 
  1104  0E2D                     	;# 
  1105  0E2E                     	;# 
  1106  0E2F                     	;# 
  1107  0E90                     	;# 
  1108  0E91                     	;# 
  1109  0E92                     	;# 
  1110  0E94                     	;# 
  1111  0E95                     	;# 
  1112  0E9C                     	;# 
  1113  0E9D                     	;# 
  1114  0E9E                     	;# 
  1115  0E9F                     	;# 
  1116  0EA0                     	;# 
  1117  0EA1                     	;# 
  1118  0EA2                     	;# 
  1119  0EA3                     	;# 
  1120  0EA4                     	;# 
  1121  0EA5                     	;# 
  1122  0EA6                     	;# 
  1123  0EA7                     	;# 
  1124  0F0F                     	;# 
  1125  0F10                     	;# 
  1126  0F11                     	;# 
  1127  0F12                     	;# 
  1128  0F13                     	;# 
  1129  0F14                     	;# 
  1130  0F15                     	;# 
  1131  0F16                     	;# 
  1132  0F17                     	;# 
  1133  0F18                     	;# 
  1134  0F19                     	;# 
  1135  0F1A                     	;# 
  1136  0F1B                     	;# 
  1137  0F1C                     	;# 
  1138  0F1D                     	;# 
  1139  0F1E                     	;# 
  1140  0F1F                     	;# 
  1141  0F20                     	;# 
  1142  0F21                     	;# 
  1143  0F22                     	;# 
  1144  0F23                     	;# 
  1145  0F24                     	;# 
  1146  0F25                     	;# 
  1147  0F26                     	;# 
  1148  0F27                     	;# 
  1149  0F28                     	;# 
  1150  0F29                     	;# 
  1151  0F2A                     	;# 
  1152  0F2B                     	;# 
  1153  0F2C                     	;# 
  1154  0F2D                     	;# 
  1155  0F2E                     	;# 
  1156  0F2F                     	;# 
  1157  0F30                     	;# 
  1158  0F31                     	;# 
  1159  0F32                     	;# 
  1160  0F33                     	;# 
  1161  0F34                     	;# 
  1162  0F35                     	;# 
  1163  0F36                     	;# 
  1164  0F37                     	;# 
  1165  0FE4                     	;# 
  1166  0FE5                     	;# 
  1167  0FE6                     	;# 
  1168  0FE7                     	;# 
  1169  0FE8                     	;# 
  1170  0FE9                     	;# 
  1171  0FEA                     	;# 
  1172  0FEB                     	;# 
  1173  0FED                     	;# 
  1174  0FEE                     	;# 
  1175  0FEF                     	;# 
  1176  0000                     	;# 
  1177  0001                     	;# 
  1178  0002                     	;# 
  1179  0003                     	;# 
  1180  0004                     	;# 
  1181  0005                     	;# 
  1182  0006                     	;# 
  1183  0007                     	;# 
  1184  0008                     	;# 
  1185  0009                     	;# 
  1186  000A                     	;# 
  1187  000B                     	;# 
  1188  000C                     	;# 
  1189  000D                     	;# 
  1190  000E                     	;# 
  1191  0010                     	;# 
  1192  0011                     	;# 
  1193  0012                     	;# 
  1194  0013                     	;# 
  1195  0014                     	;# 
  1196  0015                     	;# 
  1197  0015                     	;# 
  1198  0016                     	;# 
  1199  0016                     	;# 
  1200  0017                     	;# 
  1201  0018                     	;# 
  1202  0019                     	;# 
  1203  0019                     	;# 
  1204  001A                     	;# 
  1205  001B                     	;# 
  1206  001C                     	;# 
  1207  001D                     	;# 
  1208  001E                     	;# 
  1209  001F                     	;# 
  1210  008C                     	;# 
  1211  008D                     	;# 
  1212  008E                     	;# 
  1213  0090                     	;# 
  1214  0091                     	;# 
  1215  0092                     	;# 
  1216  0093                     	;# 
  1217  0094                     	;# 
  1218  0097                     	;# 
  1219  009B                     	;# 
  1220  009B                     	;# 
  1221  009C                     	;# 
  1222  009D                     	;# 
  1223  009E                     	;# 
  1224  009F                     	;# 
  1225  010C                     	;# 
  1226  010D                     	;# 
  1227  010E                     	;# 
  1228  0111                     	;# 
  1229  0112                     	;# 
  1230  0113                     	;# 
  1231  0114                     	;# 
  1232  0115                     	;# 
  1233  0116                     	;# 
  1234  0117                     	;# 
  1235  0118                     	;# 
  1236  0119                     	;# 
  1237  018C                     	;# 
  1238  018D                     	;# 
  1239  018E                     	;# 
  1240  0197                     	;# 
  1241  0199                     	;# 
  1242  0199                     	;# 
  1243  0199                     	;# 
  1244  019A                     	;# 
  1245  019A                     	;# 
  1246  019A                     	;# 
  1247  019B                     	;# 
  1248  019B                     	;# 
  1249  019B                     	;# 
  1250  019B                     	;# 
  1251  019B                     	;# 
  1252  019C                     	;# 
  1253  019C                     	;# 
  1254  019C                     	;# 
  1255  019D                     	;# 
  1256  019D                     	;# 
  1257  019D                     	;# 
  1258  019E                     	;# 
  1259  019E                     	;# 
  1260  019E                     	;# 
  1261  019F                     	;# 
  1262  019F                     	;# 
  1263  019F                     	;# 
  1264  019F                     	;# 
  1265  019F                     	;# 
  1266  020C                     	;# 
  1267  020D                     	;# 
  1268  020E                     	;# 
  1269  0211                     	;# 
  1270  0211                     	;# 
  1271  0212                     	;# 
  1272  0212                     	;# 
  1273  0213                     	;# 
  1274  0213                     	;# 
  1275  0214                     	;# 
  1276  0214                     	;# 
  1277  0215                     	;# 
  1278  0215                     	;# 
  1279  0215                     	;# 
  1280  0215                     	;# 
  1281  0216                     	;# 
  1282  0216                     	;# 
  1283  0217                     	;# 
  1284  0217                     	;# 
  1285  0219                     	;# 
  1286  021A                     	;# 
  1287  021B                     	;# 
  1288  021C                     	;# 
  1289  021D                     	;# 
  1290  021D                     	;# 
  1291  021E                     	;# 
  1292  021F                     	;# 
  1293  028C                     	;# 
  1294  028D                     	;# 
  1295  028E                     	;# 
  1296  0291                     	;# 
  1297  0291                     	;# 
  1298  0292                     	;# 
  1299  0293                     	;# 
  1300  0294                     	;# 
  1301  0295                     	;# 
  1302  0295                     	;# 
  1303  0296                     	;# 
  1304  0297                     	;# 
  1305  0298                     	;# 
  1306  029F                     	;# 
  1307  030C                     	;# 
  1308  030D                     	;# 
  1309  030E                     	;# 
  1310  0311                     	;# 
  1311  0311                     	;# 
  1312  0312                     	;# 
  1313  0313                     	;# 
  1314  0314                     	;# 
  1315  0315                     	;# 
  1316  0315                     	;# 
  1317  0316                     	;# 
  1318  0317                     	;# 
  1319  0318                     	;# 
  1320  038C                     	;# 
  1321  038D                     	;# 
  1322  038E                     	;# 
  1323  0391                     	;# 
  1324  0392                     	;# 
  1325  0393                     	;# 
  1326  0394                     	;# 
  1327  0395                     	;# 
  1328  0396                     	;# 
  1329  0397                     	;# 
  1330  0398                     	;# 
  1331  0399                     	;# 
  1332  039A                     	;# 
  1333  039C                     	;# 
  1334  039D                     	;# 
  1335  039E                     	;# 
  1336  039F                     	;# 
  1337  0411                     	;# 
  1338  0411                     	;# 
  1339  0412                     	;# 
  1340  0413                     	;# 
  1341  0414                     	;# 
  1342  0415                     	;# 
  1343  0416                     	;# 
  1344  0417                     	;# 
  1345  0418                     	;# 
  1346  0418                     	;# 
  1347  0419                     	;# 
  1348  041A                     	;# 
  1349  041B                     	;# 
  1350  041C                     	;# 
  1351  041D                     	;# 
  1352  041E                     	;# 
  1353  041F                     	;# 
  1354  0498                     	;# 
  1355  0498                     	;# 
  1356  0499                     	;# 
  1357  049A                     	;# 
  1358  049B                     	;# 
  1359  049B                     	;# 
  1360  049C                     	;# 
  1361  049D                     	;# 
  1362  049E                     	;# 
  1363  049F                     	;# 
  1364  0617                     	;# 
  1365  0618                     	;# 
  1366  0619                     	;# 
  1367  0619                     	;# 
  1368  061A                     	;# 
  1369  061B                     	;# 
  1370  061C                     	;# 
  1371  061C                     	;# 
  1372  061F                     	;# 
  1373  0691                     	;# 
  1374  0692                     	;# 
  1375  0693                     	;# 
  1376  0694                     	;# 
  1377  0695                     	;# 
  1378  0696                     	;# 
  1379  0697                     	;# 
  1380  0698                     	;# 
  1381  0699                     	;# 
  1382  0711                     	;# 
  1383  0712                     	;# 
  1384  0713                     	;# 
  1385  0714                     	;# 
  1386  0715                     	;# 
  1387  0716                     	;# 
  1388  0717                     	;# 
  1389  0718                     	;# 
  1390  0719                     	;# 
  1391  0891                     	;# 
  1392  0891                     	;# 
  1393  0891                     	;# 
  1394  0891                     	;# 
  1395  0891                     	;# 
  1396  0891                     	;# 
  1397  0892                     	;# 
  1398  0892                     	;# 
  1399  0892                     	;# 
  1400  0893                     	;# 
  1401  0893                     	;# 
  1402  0893                     	;# 
  1403  0893                     	;# 
  1404  0893                     	;# 
  1405  0893                     	;# 
  1406  0894                     	;# 
  1407  0894                     	;# 
  1408  0894                     	;# 
  1409  0895                     	;# 
  1410  0895                     	;# 
  1411  0895                     	;# 
  1412  0896                     	;# 
  1413  0896                     	;# 
  1414  0896                     	;# 
  1415  089B                     	;# 
  1416  0911                     	;# 
  1417  0912                     	;# 
  1418  0913                     	;# 
  1419  0914                     	;# 
  1420  0915                     	;# 
  1421  0916                     	;# 
  1422  0918                     	;# 
  1423  0919                     	;# 
  1424  091A                     	;# 
  1425  091B                     	;# 
  1426  091C                     	;# 
  1427  091D                     	;# 
  1428  091E                     	;# 
  1429  091F                     	;# 
  1430  0E0F                     	;# 
  1431  0E10                     	;# 
  1432  0E11                     	;# 
  1433  0E12                     	;# 
  1434  0E13                     	;# 
  1435  0E14                     	;# 
  1436  0E15                     	;# 
  1437  0E16                     	;# 
  1438  0E17                     	;# 
  1439  0E18                     	;# 
  1440  0E19                     	;# 
  1441  0E1A                     	;# 
  1442  0E1B                     	;# 
  1443  0E1C                     	;# 
  1444  0E1D                     	;# 
  1445  0E1E                     	;# 
  1446  0E1F                     	;# 
  1447  0E20                     	;# 
  1448  0E21                     	;# 
  1449  0E22                     	;# 
  1450  0E24                     	;# 
  1451  0E25                     	;# 
  1452  0E28                     	;# 
  1453  0E29                     	;# 
  1454  0E2A                     	;# 
  1455  0E2B                     	;# 
  1456  0E2C                     	;# 
  1457  0E2D                     	;# 
  1458  0E2E                     	;# 
  1459  0E2F                     	;# 
  1460  0E90                     	;# 
  1461  0E91                     	;# 
  1462  0E92                     	;# 
  1463  0E94                     	;# 
  1464  0E95                     	;# 
  1465  0E9C                     	;# 
  1466  0E9D                     	;# 
  1467  0E9E                     	;# 
  1468  0E9F                     	;# 
  1469  0EA0                     	;# 
  1470  0EA1                     	;# 
  1471  0EA2                     	;# 
  1472  0EA3                     	;# 
  1473  0EA4                     	;# 
  1474  0EA5                     	;# 
  1475  0EA6                     	;# 
  1476  0EA7                     	;# 
  1477  0F0F                     	;# 
  1478  0F10                     	;# 
  1479  0F11                     	;# 
  1480  0F12                     	;# 
  1481  0F13                     	;# 
  1482  0F14                     	;# 
  1483  0F15                     	;# 
  1484  0F16                     	;# 
  1485  0F17                     	;# 
  1486  0F18                     	;# 
  1487  0F19                     	;# 
  1488  0F1A                     	;# 
  1489  0F1B                     	;# 
  1490  0F1C                     	;# 
  1491  0F1D                     	;# 
  1492  0F1E                     	;# 
  1493  0F1F                     	;# 
  1494  0F20                     	;# 
  1495  0F21                     	;# 
  1496  0F22                     	;# 
  1497  0F23                     	;# 
  1498  0F24                     	;# 
  1499  0F25                     	;# 
  1500  0F26                     	;# 
  1501  0F27                     	;# 
  1502  0F28                     	;# 
  1503  0F29                     	;# 
  1504  0F2A                     	;# 
  1505  0F2B                     	;# 
  1506  0F2C                     	;# 
  1507  0F2D                     	;# 
  1508  0F2E                     	;# 
  1509  0F2F                     	;# 
  1510  0F30                     	;# 
  1511  0F31                     	;# 
  1512  0F32                     	;# 
  1513  0F33                     	;# 
  1514  0F34                     	;# 
  1515  0F35                     	;# 
  1516  0F36                     	;# 
  1517  0F37                     	;# 
  1518  0FE4                     	;# 
  1519  0FE5                     	;# 
  1520  0FE6                     	;# 
  1521  0FE7                     	;# 
  1522  0FE8                     	;# 
  1523  0FE9                     	;# 
  1524  0FEA                     	;# 
  1525  0FEB                     	;# 
  1526  0FED                     	;# 
  1527  0FEE                     	;# 
  1528  0FEF                     	;# 
  1529  0000                     	;# 
  1530  0001                     	;# 
  1531  0002                     	;# 
  1532  0003                     	;# 
  1533  0004                     	;# 
  1534  0005                     	;# 
  1535  0006                     	;# 
  1536  0007                     	;# 
  1537  0008                     	;# 
  1538  0009                     	;# 
  1539  000A                     	;# 
  1540  000B                     	;# 
  1541  000C                     	;# 
  1542  000D                     	;# 
  1543  000E                     	;# 
  1544  0010                     	;# 
  1545  0011                     	;# 
  1546  0012                     	;# 
  1547  0013                     	;# 
  1548  0014                     	;# 
  1549  0015                     	;# 
  1550  0015                     	;# 
  1551  0016                     	;# 
  1552  0016                     	;# 
  1553  0017                     	;# 
  1554  0018                     	;# 
  1555  0019                     	;# 
  1556  0019                     	;# 
  1557  001A                     	;# 
  1558  001B                     	;# 
  1559  001C                     	;# 
  1560  001D                     	;# 
  1561  001E                     	;# 
  1562  001F                     	;# 
  1563  008C                     	;# 
  1564  008D                     	;# 
  1565  008E                     	;# 
  1566  0090                     	;# 
  1567  0091                     	;# 
  1568  0092                     	;# 
  1569  0093                     	;# 
  1570  0094                     	;# 
  1571  0097                     	;# 
  1572  009B                     	;# 
  1573  009B                     	;# 
  1574  009C                     	;# 
  1575  009D                     	;# 
  1576  009E                     	;# 
  1577  009F                     	;# 
  1578  010C                     	;# 
  1579  010D                     	;# 
  1580  010E                     	;# 
  1581  0111                     	;# 
  1582  0112                     	;# 
  1583  0113                     	;# 
  1584  0114                     	;# 
  1585  0115                     	;# 
  1586  0116                     	;# 
  1587  0117                     	;# 
  1588  0118                     	;# 
  1589  0119                     	;# 
  1590  018C                     	;# 
  1591  018D                     	;# 
  1592  018E                     	;# 
  1593  0197                     	;# 
  1594  0199                     	;# 
  1595  0199                     	;# 
  1596  0199                     	;# 
  1597  019A                     	;# 
  1598  019A                     	;# 
  1599  019A                     	;# 
  1600  019B                     	;# 
  1601  019B                     	;# 
  1602  019B                     	;# 
  1603  019B                     	;# 
  1604  019B                     	;# 
  1605  019C                     	;# 
  1606  019C                     	;# 
  1607  019C                     	;# 
  1608  019D                     	;# 
  1609  019D                     	;# 
  1610  019D                     	;# 
  1611  019E                     	;# 
  1612  019E                     	;# 
  1613  019E                     	;# 
  1614  019F                     	;# 
  1615  019F                     	;# 
  1616  019F                     	;# 
  1617  019F                     	;# 
  1618  019F                     	;# 
  1619  020C                     	;# 
  1620  020D                     	;# 
  1621  020E                     	;# 
  1622  0211                     	;# 
  1623  0211                     	;# 
  1624  0212                     	;# 
  1625  0212                     	;# 
  1626  0213                     	;# 
  1627  0213                     	;# 
  1628  0214                     	;# 
  1629  0214                     	;# 
  1630  0215                     	;# 
  1631  0215                     	;# 
  1632  0215                     	;# 
  1633  0215                     	;# 
  1634  0216                     	;# 
  1635  0216                     	;# 
  1636  0217                     	;# 
  1637  0217                     	;# 
  1638  0219                     	;# 
  1639  021A                     	;# 
  1640  021B                     	;# 
  1641  021C                     	;# 
  1642  021D                     	;# 
  1643  021D                     	;# 
  1644  021E                     	;# 
  1645  021F                     	;# 
  1646  028C                     	;# 
  1647  028D                     	;# 
  1648  028E                     	;# 
  1649  0291                     	;# 
  1650  0291                     	;# 
  1651  0292                     	;# 
  1652  0293                     	;# 
  1653  0294                     	;# 
  1654  0295                     	;# 
  1655  0295                     	;# 
  1656  0296                     	;# 
  1657  0297                     	;# 
  1658  0298                     	;# 
  1659  029F                     	;# 
  1660  030C                     	;# 
  1661  030D                     	;# 
  1662  030E                     	;# 
  1663  0311                     	;# 
  1664  0311                     	;# 
  1665  0312                     	;# 
  1666  0313                     	;# 
  1667  0314                     	;# 
  1668  0315                     	;# 
  1669  0315                     	;# 
  1670  0316                     	;# 
  1671  0317                     	;# 
  1672  0318                     	;# 
  1673  038C                     	;# 
  1674  038D                     	;# 
  1675  038E                     	;# 
  1676  0391                     	;# 
  1677  0392                     	;# 
  1678  0393                     	;# 
  1679  0394                     	;# 
  1680  0395                     	;# 
  1681  0396                     	;# 
  1682  0397                     	;# 
  1683  0398                     	;# 
  1684  0399                     	;# 
  1685  039A                     	;# 
  1686  039C                     	;# 
  1687  039D                     	;# 
  1688  039E                     	;# 
  1689  039F                     	;# 
  1690  0411                     	;# 
  1691  0411                     	;# 
  1692  0412                     	;# 
  1693  0413                     	;# 
  1694  0414                     	;# 
  1695  0415                     	;# 
  1696  0416                     	;# 
  1697  0417                     	;# 
  1698  0418                     	;# 
  1699  0418                     	;# 
  1700  0419                     	;# 
  1701  041A                     	;# 
  1702  041B                     	;# 
  1703  041C                     	;# 
  1704  041D                     	;# 
  1705  041E                     	;# 
  1706  041F                     	;# 
  1707  0498                     	;# 
  1708  0498                     	;# 
  1709  0499                     	;# 
  1710  049A                     	;# 
  1711  049B                     	;# 
  1712  049B                     	;# 
  1713  049C                     	;# 
  1714  049D                     	;# 
  1715  049E                     	;# 
  1716  049F                     	;# 
  1717  0617                     	;# 
  1718  0618                     	;# 
  1719  0619                     	;# 
  1720  0619                     	;# 
  1721  061A                     	;# 
  1722  061B                     	;# 
  1723  061C                     	;# 
  1724  061C                     	;# 
  1725  061F                     	;# 
  1726  0691                     	;# 
  1727  0692                     	;# 
  1728  0693                     	;# 
  1729  0694                     	;# 
  1730  0695                     	;# 
  1731  0696                     	;# 
  1732  0697                     	;# 
  1733  0698                     	;# 
  1734  0699                     	;# 
  1735  0711                     	;# 
  1736  0712                     	;# 
  1737  0713                     	;# 
  1738  0714                     	;# 
  1739  0715                     	;# 
  1740  0716                     	;# 
  1741  0717                     	;# 
  1742  0718                     	;# 
  1743  0719                     	;# 
  1744  0891                     	;# 
  1745  0891                     	;# 
  1746  0891                     	;# 
  1747  0891                     	;# 
  1748  0891                     	;# 
  1749  0891                     	;# 
  1750  0892                     	;# 
  1751  0892                     	;# 
  1752  0892                     	;# 
  1753  0893                     	;# 
  1754  0893                     	;# 
  1755  0893                     	;# 
  1756  0893                     	;# 
  1757  0893                     	;# 
  1758  0893                     	;# 
  1759  0894                     	;# 
  1760  0894                     	;# 
  1761  0894                     	;# 
  1762  0895                     	;# 
  1763  0895                     	;# 
  1764  0895                     	;# 
  1765  0896                     	;# 
  1766  0896                     	;# 
  1767  0896                     	;# 
  1768  089B                     	;# 
  1769  0911                     	;# 
  1770  0912                     	;# 
  1771  0913                     	;# 
  1772  0914                     	;# 
  1773  0915                     	;# 
  1774  0916                     	;# 
  1775  0918                     	;# 
  1776  0919                     	;# 
  1777  091A                     	;# 
  1778  091B                     	;# 
  1779  091C                     	;# 
  1780  091D                     	;# 
  1781  091E                     	;# 
  1782  091F                     	;# 
  1783  0E0F                     	;# 
  1784  0E10                     	;# 
  1785  0E11                     	;# 
  1786  0E12                     	;# 
  1787  0E13                     	;# 
  1788  0E14                     	;# 
  1789  0E15                     	;# 
  1790  0E16                     	;# 
  1791  0E17                     	;# 
  1792  0E18                     	;# 
  1793  0E19                     	;# 
  1794  0E1A                     	;# 
  1795  0E1B                     	;# 
  1796  0E1C                     	;# 
  1797  0E1D                     	;# 
  1798  0E1E                     	;# 
  1799  0E1F                     	;# 
  1800  0E20                     	;# 
  1801  0E21                     	;# 
  1802  0E22                     	;# 
  1803  0E24                     	;# 
  1804  0E25                     	;# 
  1805  0E28                     	;# 
  1806  0E29                     	;# 
  1807  0E2A                     	;# 
  1808  0E2B                     	;# 
  1809  0E2C                     	;# 
  1810  0E2D                     	;# 
  1811  0E2E                     	;# 
  1812  0E2F                     	;# 
  1813  0E90                     	;# 
  1814  0E91                     	;# 
  1815  0E92                     	;# 
  1816  0E94                     	;# 
  1817  0E95                     	;# 
  1818  0E9C                     	;# 
  1819  0E9D                     	;# 
  1820  0E9E                     	;# 
  1821  0E9F                     	;# 
  1822  0EA0                     	;# 
  1823  0EA1                     	;# 
  1824  0EA2                     	;# 
  1825  0EA3                     	;# 
  1826  0EA4                     	;# 
  1827  0EA5                     	;# 
  1828  0EA6                     	;# 
  1829  0EA7                     	;# 
  1830  0F0F                     	;# 
  1831  0F10                     	;# 
  1832  0F11                     	;# 
  1833  0F12                     	;# 
  1834  0F13                     	;# 
  1835  0F14                     	;# 
  1836  0F15                     	;# 
  1837  0F16                     	;# 
  1838  0F17                     	;# 
  1839  0F18                     	;# 
  1840  0F19                     	;# 
  1841  0F1A                     	;# 
  1842  0F1B                     	;# 
  1843  0F1C                     	;# 
  1844  0F1D                     	;# 
  1845  0F1E                     	;# 
  1846  0F1F                     	;# 
  1847  0F20                     	;# 
  1848  0F21                     	;# 
  1849  0F22                     	;# 
  1850  0F23                     	;# 
  1851  0F24                     	;# 
  1852  0F25                     	;# 
  1853  0F26                     	;# 
  1854  0F27                     	;# 
  1855  0F28                     	;# 
  1856  0F29                     	;# 
  1857  0F2A                     	;# 
  1858  0F2B                     	;# 
  1859  0F2C                     	;# 
  1860  0F2D                     	;# 
  1861  0F2E                     	;# 
  1862  0F2F                     	;# 
  1863  0F30                     	;# 
  1864  0F31                     	;# 
  1865  0F32                     	;# 
  1866  0F33                     	;# 
  1867  0F34                     	;# 
  1868  0F35                     	;# 
  1869  0F36                     	;# 
  1870  0F37                     	;# 
  1871  0FE4                     	;# 
  1872  0FE5                     	;# 
  1873  0FE6                     	;# 
  1874  0FE7                     	;# 
  1875  0FE8                     	;# 
  1876  0FE9                     	;# 
  1877  0FEA                     	;# 
  1878  0FEB                     	;# 
  1879  0FED                     	;# 
  1880  0FEE                     	;# 
  1881  0FEF                     	;# 
  1882  0000                     	;# 
  1883  0001                     	;# 
  1884  0002                     	;# 
  1885  0003                     	;# 
  1886  0004                     	;# 
  1887  0005                     	;# 
  1888  0006                     	;# 
  1889  0007                     	;# 
  1890  0008                     	;# 
  1891  0009                     	;# 
  1892  000A                     	;# 
  1893  000B                     	;# 
  1894  000C                     	;# 
  1895  000D                     	;# 
  1896  000E                     	;# 
  1897  0010                     	;# 
  1898  0011                     	;# 
  1899  0012                     	;# 
  1900  0013                     	;# 
  1901  0014                     	;# 
  1902  0015                     	;# 
  1903  0015                     	;# 
  1904  0016                     	;# 
  1905  0016                     	;# 
  1906  0017                     	;# 
  1907  0018                     	;# 
  1908  0019                     	;# 
  1909  0019                     	;# 
  1910  001A                     	;# 
  1911  001B                     	;# 
  1912  001C                     	;# 
  1913  001D                     	;# 
  1914  001E                     	;# 
  1915  001F                     	;# 
  1916  008C                     	;# 
  1917  008D                     	;# 
  1918  008E                     	;# 
  1919  0090                     	;# 
  1920  0091                     	;# 
  1921  0092                     	;# 
  1922  0093                     	;# 
  1923  0094                     	;# 
  1924  0097                     	;# 
  1925  009B                     	;# 
  1926  009B                     	;# 
  1927  009C                     	;# 
  1928  009D                     	;# 
  1929  009E                     	;# 
  1930  009F                     	;# 
  1931  010C                     	;# 
  1932  010D                     	;# 
  1933  010E                     	;# 
  1934  0111                     	;# 
  1935  0112                     	;# 
  1936  0113                     	;# 
  1937  0114                     	;# 
  1938  0115                     	;# 
  1939  0116                     	;# 
  1940  0117                     	;# 
  1941  0118                     	;# 
  1942  0119                     	;# 
  1943  018C                     	;# 
  1944  018D                     	;# 
  1945  018E                     	;# 
  1946  0197                     	;# 
  1947  0199                     	;# 
  1948  0199                     	;# 
  1949  0199                     	;# 
  1950  019A                     	;# 
  1951  019A                     	;# 
  1952  019A                     	;# 
  1953  019B                     	;# 
  1954  019B                     	;# 
  1955  019B                     	;# 
  1956  019B                     	;# 
  1957  019B                     	;# 
  1958  019C                     	;# 
  1959  019C                     	;# 
  1960  019C                     	;# 
  1961  019D                     	;# 
  1962  019D                     	;# 
  1963  019D                     	;# 
  1964  019E                     	;# 
  1965  019E                     	;# 
  1966  019E                     	;# 
  1967  019F                     	;# 
  1968  019F                     	;# 
  1969  019F                     	;# 
  1970  019F                     	;# 
  1971  019F                     	;# 
  1972  020C                     	;# 
  1973  020D                     	;# 
  1974  020E                     	;# 
  1975  0211                     	;# 
  1976  0211                     	;# 
  1977  0212                     	;# 
  1978  0212                     	;# 
  1979  0213                     	;# 
  1980  0213                     	;# 
  1981  0214                     	;# 
  1982  0214                     	;# 
  1983  0215                     	;# 
  1984  0215                     	;# 
  1985  0215                     	;# 
  1986  0215                     	;# 
  1987  0216                     	;# 
  1988  0216                     	;# 
  1989  0217                     	;# 
  1990  0217                     	;# 
  1991  0219                     	;# 
  1992  021A                     	;# 
  1993  021B                     	;# 
  1994  021C                     	;# 
  1995  021D                     	;# 
  1996  021D                     	;# 
  1997  021E                     	;# 
  1998  021F                     	;# 
  1999  028C                     	;# 
  2000  028D                     	;# 
  2001  028E                     	;# 
  2002  0291                     	;# 
  2003  0291                     	;# 
  2004  0292                     	;# 
  2005  0293                     	;# 
  2006  0294                     	;# 
  2007  0295                     	;# 
  2008  0295                     	;# 
  2009  0296                     	;# 
  2010  0297                     	;# 
  2011  0298                     	;# 
  2012  029F                     	;# 
  2013  030C                     	;# 
  2014  030D                     	;# 
  2015  030E                     	;# 
  2016  0311                     	;# 
  2017  0311                     	;# 
  2018  0312                     	;# 
  2019  0313                     	;# 
  2020  0314                     	;# 
  2021  0315                     	;# 
  2022  0315                     	;# 
  2023  0316                     	;# 
  2024  0317                     	;# 
  2025  0318                     	;# 
  2026  038C                     	;# 
  2027  038D                     	;# 
  2028  038E                     	;# 
  2029  0391                     	;# 
  2030  0392                     	;# 
  2031  0393                     	;# 
  2032  0394                     	;# 
  2033  0395                     	;# 
  2034  0396                     	;# 
  2035  0397                     	;# 
  2036  0398                     	;# 
  2037  0399                     	;# 
  2038  039A                     	;# 
  2039  039C                     	;# 
  2040  039D                     	;# 
  2041  039E                     	;# 
  2042  039F                     	;# 
  2043  0411                     	;# 
  2044  0411                     	;# 
  2045  0412                     	;# 
  2046  0413                     	;# 
  2047  0414                     	;# 
  2048  0415                     	;# 
  2049  0416                     	;# 
  2050  0417                     	;# 
  2051  0418                     	;# 
  2052  0418                     	;# 
  2053  0419                     	;# 
  2054  041A                     	;# 
  2055  041B                     	;# 
  2056  041C                     	;# 
  2057  041D                     	;# 
  2058  041E                     	;# 
  2059  041F                     	;# 
  2060  0498                     	;# 
  2061  0498                     	;# 
  2062  0499                     	;# 
  2063  049A                     	;# 
  2064  049B                     	;# 
  2065  049B                     	;# 
  2066  049C                     	;# 
  2067  049D                     	;# 
  2068  049E                     	;# 
  2069  049F                     	;# 
  2070  0617                     	;# 
  2071  0618                     	;# 
  2072  0619                     	;# 
  2073  0619                     	;# 
  2074  061A                     	;# 
  2075  061B                     	;# 
  2076  061C                     	;# 
  2077  061C                     	;# 
  2078  061F                     	;# 
  2079  0691                     	;# 
  2080  0692                     	;# 
  2081  0693                     	;# 
  2082  0694                     	;# 
  2083  0695                     	;# 
  2084  0696                     	;# 
  2085  0697                     	;# 
  2086  0698                     	;# 
  2087  0699                     	;# 
  2088  0711                     	;# 
  2089  0712                     	;# 
  2090  0713                     	;# 
  2091  0714                     	;# 
  2092  0715                     	;# 
  2093  0716                     	;# 
  2094  0717                     	;# 
  2095  0718                     	;# 
  2096  0719                     	;# 
  2097  0891                     	;# 
  2098  0891                     	;# 
  2099  0891                     	;# 
  2100  0891                     	;# 
  2101  0891                     	;# 
  2102  0891                     	;# 
  2103  0892                     	;# 
  2104  0892                     	;# 
  2105  0892                     	;# 
  2106  0893                     	;# 
  2107  0893                     	;# 
  2108  0893                     	;# 
  2109  0893                     	;# 
  2110  0893                     	;# 
  2111  0893                     	;# 
  2112  0894                     	;# 
  2113  0894                     	;# 
  2114  0894                     	;# 
  2115  0895                     	;# 
  2116  0895                     	;# 
  2117  0895                     	;# 
  2118  0896                     	;# 
  2119  0896                     	;# 
  2120  0896                     	;# 
  2121  089B                     	;# 
  2122  0911                     	;# 
  2123  0912                     	;# 
  2124  0913                     	;# 
  2125  0914                     	;# 
  2126  0915                     	;# 
  2127  0916                     	;# 
  2128  0918                     	;# 
  2129  0919                     	;# 
  2130  091A                     	;# 
  2131  091B                     	;# 
  2132  091C                     	;# 
  2133  091D                     	;# 
  2134  091E                     	;# 
  2135  091F                     	;# 
  2136  0E0F                     	;# 
  2137  0E10                     	;# 
  2138  0E11                     	;# 
  2139  0E12                     	;# 
  2140  0E13                     	;# 
  2141  0E14                     	;# 
  2142  0E15                     	;# 
  2143  0E16                     	;# 
  2144  0E17                     	;# 
  2145  0E18                     	;# 
  2146  0E19                     	;# 
  2147  0E1A                     	;# 
  2148  0E1B                     	;# 
  2149  0E1C                     	;# 
  2150  0E1D                     	;# 
  2151  0E1E                     	;# 
  2152  0E1F                     	;# 
  2153  0E20                     	;# 
  2154  0E21                     	;# 
  2155  0E22                     	;# 
  2156  0E24                     	;# 
  2157  0E25                     	;# 
  2158  0E28                     	;# 
  2159  0E29                     	;# 
  2160  0E2A                     	;# 
  2161  0E2B                     	;# 
  2162  0E2C                     	;# 
  2163  0E2D                     	;# 
  2164  0E2E                     	;# 
  2165  0E2F                     	;# 
  2166  0E90                     	;# 
  2167  0E91                     	;# 
  2168  0E92                     	;# 
  2169  0E94                     	;# 
  2170  0E95                     	;# 
  2171  0E9C                     	;# 
  2172  0E9D                     	;# 
  2173  0E9E                     	;# 
  2174  0E9F                     	;# 
  2175  0EA0                     	;# 
  2176  0EA1                     	;# 
  2177  0EA2                     	;# 
  2178  0EA3                     	;# 
  2179  0EA4                     	;# 
  2180  0EA5                     	;# 
  2181  0EA6                     	;# 
  2182  0EA7                     	;# 
  2183  0F0F                     	;# 
  2184  0F10                     	;# 
  2185  0F11                     	;# 
  2186  0F12                     	;# 
  2187  0F13                     	;# 
  2188  0F14                     	;# 
  2189  0F15                     	;# 
  2190  0F16                     	;# 
  2191  0F17                     	;# 
  2192  0F18                     	;# 
  2193  0F19                     	;# 
  2194  0F1A                     	;# 
  2195  0F1B                     	;# 
  2196  0F1C                     	;# 
  2197  0F1D                     	;# 
  2198  0F1E                     	;# 
  2199  0F1F                     	;# 
  2200  0F20                     	;# 
  2201  0F21                     	;# 
  2202  0F22                     	;# 
  2203  0F23                     	;# 
  2204  0F24                     	;# 
  2205  0F25                     	;# 
  2206  0F26                     	;# 
  2207  0F27                     	;# 
  2208  0F28                     	;# 
  2209  0F29                     	;# 
  2210  0F2A                     	;# 
  2211  0F2B                     	;# 
  2212  0F2C                     	;# 
  2213  0F2D                     	;# 
  2214  0F2E                     	;# 
  2215  0F2F                     	;# 
  2216  0F30                     	;# 
  2217  0F31                     	;# 
  2218  0F32                     	;# 
  2219  0F33                     	;# 
  2220  0F34                     	;# 
  2221  0F35                     	;# 
  2222  0F36                     	;# 
  2223  0F37                     	;# 
  2224  0FE4                     	;# 
  2225  0FE5                     	;# 
  2226  0FE6                     	;# 
  2227  0FE7                     	;# 
  2228  0FE8                     	;# 
  2229  0FE9                     	;# 
  2230  0FEA                     	;# 
  2231  0FEB                     	;# 
  2232  0FED                     	;# 
  2233  0FEE                     	;# 
  2234  0FEF                     	;# 
  2235  0000                     	;# 
  2236  0001                     	;# 
  2237  0002                     	;# 
  2238  0003                     	;# 
  2239  0004                     	;# 
  2240  0005                     	;# 
  2241  0006                     	;# 
  2242  0007                     	;# 
  2243  0008                     	;# 
  2244  0009                     	;# 
  2245  000A                     	;# 
  2246  000B                     	;# 
  2247  000C                     	;# 
  2248  000D                     	;# 
  2249  000E                     	;# 
  2250  0010                     	;# 
  2251  0011                     	;# 
  2252  0012                     	;# 
  2253  0013                     	;# 
  2254  0014                     	;# 
  2255  0015                     	;# 
  2256  0015                     	;# 
  2257  0016                     	;# 
  2258  0016                     	;# 
  2259  0017                     	;# 
  2260  0018                     	;# 
  2261  0019                     	;# 
  2262  0019                     	;# 
  2263  001A                     	;# 
  2264  001B                     	;# 
  2265  001C                     	;# 
  2266  001D                     	;# 
  2267  001E                     	;# 
  2268  001F                     	;# 
  2269  008C                     	;# 
  2270  008D                     	;# 
  2271  008E                     	;# 
  2272  0090                     	;# 
  2273  0091                     	;# 
  2274  0092                     	;# 
  2275  0093                     	;# 
  2276  0094                     	;# 
  2277  0097                     	;# 
  2278  009B                     	;# 
  2279  009B                     	;# 
  2280  009C                     	;# 
  2281  009D                     	;# 
  2282  009E                     	;# 
  2283  009F                     	;# 
  2284  010C                     	;# 
  2285  010D                     	;# 
  2286  010E                     	;# 
  2287  0111                     	;# 
  2288  0112                     	;# 
  2289  0113                     	;# 
  2290  0114                     	;# 
  2291  0115                     	;# 
  2292  0116                     	;# 
  2293  0117                     	;# 
  2294  0118                     	;# 
  2295  0119                     	;# 
  2296  018C                     	;# 
  2297  018D                     	;# 
  2298  018E                     	;# 
  2299  0197                     	;# 
  2300  0199                     	;# 
  2301  0199                     	;# 
  2302  0199                     	;# 
  2303  019A                     	;# 
  2304  019A                     	;# 
  2305  019A                     	;# 
  2306  019B                     	;# 
  2307  019B                     	;# 
  2308  019B                     	;# 
  2309  019B                     	;# 
  2310  019B                     	;# 
  2311  019C                     	;# 
  2312  019C                     	;# 
  2313  019C                     	;# 
  2314  019D                     	;# 
  2315  019D                     	;# 
  2316  019D                     	;# 
  2317  019E                     	;# 
  2318  019E                     	;# 
  2319  019E                     	;# 
  2320  019F                     	;# 
  2321  019F                     	;# 
  2322  019F                     	;# 
  2323  019F                     	;# 
  2324  019F                     	;# 
  2325  020C                     	;# 
  2326  020D                     	;# 
  2327  020E                     	;# 
  2328  0211                     	;# 
  2329  0211                     	;# 
  2330  0212                     	;# 
  2331  0212                     	;# 
  2332  0213                     	;# 
  2333  0213                     	;# 
  2334  0214                     	;# 
  2335  0214                     	;# 
  2336  0215                     	;# 
  2337  0215                     	;# 
  2338  0215                     	;# 
  2339  0215                     	;# 
  2340  0216                     	;# 
  2341  0216                     	;# 
  2342  0217                     	;# 
  2343  0217                     	;# 
  2344  0219                     	;# 
  2345  021A                     	;# 
  2346  021B                     	;# 
  2347  021C                     	;# 
  2348  021D                     	;# 
  2349  021D                     	;# 
  2350  021E                     	;# 
  2351  021F                     	;# 
  2352  028C                     	;# 
  2353  028D                     	;# 
  2354  028E                     	;# 
  2355  0291                     	;# 
  2356  0291                     	;# 
  2357  0292                     	;# 
  2358  0293                     	;# 
  2359  0294                     	;# 
  2360  0295                     	;# 
  2361  0295                     	;# 
  2362  0296                     	;# 
  2363  0297                     	;# 
  2364  0298                     	;# 
  2365  029F                     	;# 
  2366  030C                     	;# 
  2367  030D                     	;# 
  2368  030E                     	;# 
  2369  0311                     	;# 
  2370  0311                     	;# 
  2371  0312                     	;# 
  2372  0313                     	;# 
  2373  0314                     	;# 
  2374  0315                     	;# 
  2375  0315                     	;# 
  2376  0316                     	;# 
  2377  0317                     	;# 
  2378  0318                     	;# 
  2379  038C                     	;# 
  2380  038D                     	;# 
  2381  038E                     	;# 
  2382  0391                     	;# 
  2383  0392                     	;# 
  2384  0393                     	;# 
  2385  0394                     	;# 
  2386  0395                     	;# 
  2387  0396                     	;# 
  2388  0397                     	;# 
  2389  0398                     	;# 
  2390  0399                     	;# 
  2391  039A                     	;# 
  2392  039C                     	;# 
  2393  039D                     	;# 
  2394  039E                     	;# 
  2395  039F                     	;# 
  2396  0411                     	;# 
  2397  0411                     	;# 
  2398  0412                     	;# 
  2399  0413                     	;# 
  2400  0414                     	;# 
  2401  0415                     	;# 
  2402  0416                     	;# 
  2403  0417                     	;# 
  2404  0418                     	;# 
  2405  0418                     	;# 
  2406  0419                     	;# 
  2407  041A                     	;# 
  2408  041B                     	;# 
  2409  041C                     	;# 
  2410  041D                     	;# 
  2411  041E                     	;# 
  2412  041F                     	;# 
  2413  0498                     	;# 
  2414  0498                     	;# 
  2415  0499                     	;# 
  2416  049A                     	;# 
  2417  049B                     	;# 
  2418  049B                     	;# 
  2419  049C                     	;# 
  2420  049D                     	;# 
  2421  049E                     	;# 
  2422  049F                     	;# 
  2423  0617                     	;# 
  2424  0618                     	;# 
  2425  0619                     	;# 
  2426  0619                     	;# 
  2427  061A                     	;# 
  2428  061B                     	;# 
  2429  061C                     	;# 
  2430  061C                     	;# 
  2431  061F                     	;# 
  2432  0691                     	;# 
  2433  0692                     	;# 
  2434  0693                     	;# 
  2435  0694                     	;# 
  2436  0695                     	;# 
  2437  0696                     	;# 
  2438  0697                     	;# 
  2439  0698                     	;# 
  2440  0699                     	;# 
  2441  0711                     	;# 
  2442  0712                     	;# 
  2443  0713                     	;# 
  2444  0714                     	;# 
  2445  0715                     	;# 
  2446  0716                     	;# 
  2447  0717                     	;# 
  2448  0718                     	;# 
  2449  0719                     	;# 
  2450  0891                     	;# 
  2451  0891                     	;# 
  2452  0891                     	;# 
  2453  0891                     	;# 
  2454  0891                     	;# 
  2455  0891                     	;# 
  2456  0892                     	;# 
  2457  0892                     	;# 
  2458  0892                     	;# 
  2459  0893                     	;# 
  2460  0893                     	;# 
  2461  0893                     	;# 
  2462  0893                     	;# 
  2463  0893                     	;# 
  2464  0893                     	;# 
  2465  0894                     	;# 
  2466  0894                     	;# 
  2467  0894                     	;# 
  2468  0895                     	;# 
  2469  0895                     	;# 
  2470  0895                     	;# 
  2471  0896                     	;# 
  2472  0896                     	;# 
  2473  0896                     	;# 
  2474  089B                     	;# 
  2475  0911                     	;# 
  2476  0912                     	;# 
  2477  0913                     	;# 
  2478  0914                     	;# 
  2479  0915                     	;# 
  2480  0916                     	;# 
  2481  0918                     	;# 
  2482  0919                     	;# 
  2483  091A                     	;# 
  2484  091B                     	;# 
  2485  091C                     	;# 
  2486  091D                     	;# 
  2487  091E                     	;# 
  2488  091F                     	;# 
  2489  0E0F                     	;# 
  2490  0E10                     	;# 
  2491  0E11                     	;# 
  2492  0E12                     	;# 
  2493  0E13                     	;# 
  2494  0E14                     	;# 
  2495  0E15                     	;# 
  2496  0E16                     	;# 
  2497  0E17                     	;# 
  2498  0E18                     	;# 
  2499  0E19                     	;# 
  2500  0E1A                     	;# 
  2501  0E1B                     	;# 
  2502  0E1C                     	;# 
  2503  0E1D                     	;# 
  2504  0E1E                     	;# 
  2505  0E1F                     	;# 
  2506  0E20                     	;# 
  2507  0E21                     	;# 
  2508  0E22                     	;# 
  2509  0E24                     	;# 
  2510  0E25                     	;# 
  2511  0E28                     	;# 
  2512  0E29                     	;# 
  2513  0E2A                     	;# 
  2514  0E2B                     	;# 
  2515  0E2C                     	;# 
  2516  0E2D                     	;# 
  2517  0E2E                     	;# 
  2518  0E2F                     	;# 
  2519  0E90                     	;# 
  2520  0E91                     	;# 
  2521  0E92                     	;# 
  2522  0E94                     	;# 
  2523  0E95                     	;# 
  2524  0E9C                     	;# 
  2525  0E9D                     	;# 
  2526  0E9E                     	;# 
  2527  0E9F                     	;# 
  2528  0EA0                     	;# 
  2529  0EA1                     	;# 
  2530  0EA2                     	;# 
  2531  0EA3                     	;# 
  2532  0EA4                     	;# 
  2533  0EA5                     	;# 
  2534  0EA6                     	;# 
  2535  0EA7                     	;# 
  2536  0F0F                     	;# 
  2537  0F10                     	;# 
  2538  0F11                     	;# 
  2539  0F12                     	;# 
  2540  0F13                     	;# 
  2541  0F14                     	;# 
  2542  0F15                     	;# 
  2543  0F16                     	;# 
  2544  0F17                     	;# 
  2545  0F18                     	;# 
  2546  0F19                     	;# 
  2547  0F1A                     	;# 
  2548  0F1B                     	;# 
  2549  0F1C                     	;# 
  2550  0F1D                     	;# 
  2551  0F1E                     	;# 
  2552  0F1F                     	;# 
  2553  0F20                     	;# 
  2554  0F21                     	;# 
  2555  0F22                     	;# 
  2556  0F23                     	;# 
  2557  0F24                     	;# 
  2558  0F25                     	;# 
  2559  0F26                     	;# 
  2560  0F27                     	;# 
  2561  0F28                     	;# 
  2562  0F29                     	;# 
  2563  0F2A                     	;# 
  2564  0F2B                     	;# 
  2565  0F2C                     	;# 
  2566  0F2D                     	;# 
  2567  0F2E                     	;# 
  2568  0F2F                     	;# 
  2569  0F30                     	;# 
  2570  0F31                     	;# 
  2571  0F32                     	;# 
  2572  0F33                     	;# 
  2573  0F34                     	;# 
  2574  0F35                     	;# 
  2575  0F36                     	;# 
  2576  0F37                     	;# 
  2577  0FE4                     	;# 
  2578  0FE5                     	;# 
  2579  0FE6                     	;# 
  2580  0FE7                     	;# 
  2581  0FE8                     	;# 
  2582  0FE9                     	;# 
  2583  0FEA                     	;# 
  2584  0FEB                     	;# 
  2585  0FED                     	;# 
  2586  0FEE                     	;# 
  2587  0FEF                     	;# 
  2588  0000                     	;# 
  2589  0001                     	;# 
  2590  0002                     	;# 
  2591  0003                     	;# 
  2592  0004                     	;# 
  2593  0005                     	;# 
  2594  0006                     	;# 
  2595  0007                     	;# 
  2596  0008                     	;# 
  2597  0009                     	;# 
  2598  000A                     	;# 
  2599  000B                     	;# 
  2600  000C                     	;# 
  2601  000D                     	;# 
  2602  000E                     	;# 
  2603  0010                     	;# 
  2604  0011                     	;# 
  2605  0012                     	;# 
  2606  0013                     	;# 
  2607  0014                     	;# 
  2608  0015                     	;# 
  2609  0015                     	;# 
  2610  0016                     	;# 
  2611  0016                     	;# 
  2612  0017                     	;# 
  2613  0018                     	;# 
  2614  0019                     	;# 
  2615  0019                     	;# 
  2616  001A                     	;# 
  2617  001B                     	;# 
  2618  001C                     	;# 
  2619  001D                     	;# 
  2620  001E                     	;# 
  2621  001F                     	;# 
  2622  008C                     	;# 
  2623  008D                     	;# 
  2624  008E                     	;# 
  2625  0090                     	;# 
  2626  0091                     	;# 
  2627  0092                     	;# 
  2628  0093                     	;# 
  2629  0094                     	;# 
  2630  0097                     	;# 
  2631  009B                     	;# 
  2632  009B                     	;# 
  2633  009C                     	;# 
  2634  009D                     	;# 
  2635  009E                     	;# 
  2636  009F                     	;# 
  2637  010C                     	;# 
  2638  010D                     	;# 
  2639  010E                     	;# 
  2640  0111                     	;# 
  2641  0112                     	;# 
  2642  0113                     	;# 
  2643  0114                     	;# 
  2644  0115                     	;# 
  2645  0116                     	;# 
  2646  0117                     	;# 
  2647  0118                     	;# 
  2648  0119                     	;# 
  2649  018C                     	;# 
  2650  018D                     	;# 
  2651  018E                     	;# 
  2652  0197                     	;# 
  2653  0199                     	;# 
  2654  0199                     	;# 
  2655  0199                     	;# 
  2656  019A                     	;# 
  2657  019A                     	;# 
  2658  019A                     	;# 
  2659  019B                     	;# 
  2660  019B                     	;# 
  2661  019B                     	;# 
  2662  019B                     	;# 
  2663  019B                     	;# 
  2664  019C                     	;# 
  2665  019C                     	;# 
  2666  019C                     	;# 
  2667  019D                     	;# 
  2668  019D                     	;# 
  2669  019D                     	;# 
  2670  019E                     	;# 
  2671  019E                     	;# 
  2672  019E                     	;# 
  2673  019F                     	;# 
  2674  019F                     	;# 
  2675  019F                     	;# 
  2676  019F                     	;# 
  2677  019F                     	;# 
  2678  020C                     	;# 
  2679  020D                     	;# 
  2680  020E                     	;# 
  2681  0211                     	;# 
  2682  0211                     	;# 
  2683  0212                     	;# 
  2684  0212                     	;# 
  2685  0213                     	;# 
  2686  0213                     	;# 
  2687  0214                     	;# 
  2688  0214                     	;# 
  2689  0215                     	;# 
  2690  0215                     	;# 
  2691  0215                     	;# 
  2692  0215                     	;# 
  2693  0216                     	;# 
  2694  0216                     	;# 
  2695  0217                     	;# 
  2696  0217                     	;# 
  2697  0219                     	;# 
  2698  021A                     	;# 
  2699  021B                     	;# 
  2700  021C                     	;# 
  2701  021D                     	;# 
  2702  021D                     	;# 
  2703  021E                     	;# 
  2704  021F                     	;# 
  2705  028C                     	;# 
  2706  028D                     	;# 
  2707  028E                     	;# 
  2708  0291                     	;# 
  2709  0291                     	;# 
  2710  0292                     	;# 
  2711  0293                     	;# 
  2712  0294                     	;# 
  2713  0295                     	;# 
  2714  0295                     	;# 
  2715  0296                     	;# 
  2716  0297                     	;# 
  2717  0298                     	;# 
  2718  029F                     	;# 
  2719  030C                     	;# 
  2720  030D                     	;# 
  2721  030E                     	;# 
  2722  0311                     	;# 
  2723  0311                     	;# 
  2724  0312                     	;# 
  2725  0313                     	;# 
  2726  0314                     	;# 
  2727  0315                     	;# 
  2728  0315                     	;# 
  2729  0316                     	;# 
  2730  0317                     	;# 
  2731  0318                     	;# 
  2732  038C                     	;# 
  2733  038D                     	;# 
  2734  038E                     	;# 
  2735  0391                     	;# 
  2736  0392                     	;# 
  2737  0393                     	;# 
  2738  0394                     	;# 
  2739  0395                     	;# 
  2740  0396                     	;# 
  2741  0397                     	;# 
  2742  0398                     	;# 
  2743  0399                     	;# 
  2744  039A                     	;# 
  2745  039C                     	;# 
  2746  039D                     	;# 
  2747  039E                     	;# 
  2748  039F                     	;# 
  2749  0411                     	;# 
  2750  0411                     	;# 
  2751  0412                     	;# 
  2752  0413                     	;# 
  2753  0414                     	;# 
  2754  0415                     	;# 
  2755  0416                     	;# 
  2756  0417                     	;# 
  2757  0418                     	;# 
  2758  0418                     	;# 
  2759  0419                     	;# 
  2760  041A                     	;# 
  2761  041B                     	;# 
  2762  041C                     	;# 
  2763  041D                     	;# 
  2764  041E                     	;# 
  2765  041F                     	;# 
  2766  0498                     	;# 
  2767  0498                     	;# 
  2768  0499                     	;# 
  2769  049A                     	;# 
  2770  049B                     	;# 
  2771  049B                     	;# 
  2772  049C                     	;# 
  2773  049D                     	;# 
  2774  049E                     	;# 
  2775  049F                     	;# 
  2776  0617                     	;# 
  2777  0618                     	;# 
  2778  0619                     	;# 
  2779  0619                     	;# 
  2780  061A                     	;# 
  2781  061B                     	;# 
  2782  061C                     	;# 
  2783  061C                     	;# 
  2784  061F                     	;# 
  2785  0691                     	;# 
  2786  0692                     	;# 
  2787  0693                     	;# 
  2788  0694                     	;# 
  2789  0695                     	;# 
  2790  0696                     	;# 
  2791  0697                     	;# 
  2792  0698                     	;# 
  2793  0699                     	;# 
  2794  0711                     	;# 
  2795  0712                     	;# 
  2796  0713                     	;# 
  2797  0714                     	;# 
  2798  0715                     	;# 
  2799  0716                     	;# 
  2800  0717                     	;# 
  2801  0718                     	;# 
  2802  0719                     	;# 
  2803  0891                     	;# 
  2804  0891                     	;# 
  2805  0891                     	;# 
  2806  0891                     	;# 
  2807  0891                     	;# 
  2808  0891                     	;# 
  2809  0892                     	;# 
  2810  0892                     	;# 
  2811  0892                     	;# 
  2812  0893                     	;# 
  2813  0893                     	;# 
  2814  0893                     	;# 
  2815  0893                     	;# 
  2816  0893                     	;# 
  2817  0893                     	;# 
  2818  0894                     	;# 
  2819  0894                     	;# 
  2820  0894                     	;# 
  2821  0895                     	;# 
  2822  0895                     	;# 
  2823  0895                     	;# 
  2824  0896                     	;# 
  2825  0896                     	;# 
  2826  0896                     	;# 
  2827  089B                     	;# 
  2828  0911                     	;# 
  2829  0912                     	;# 
  2830  0913                     	;# 
  2831  0914                     	;# 
  2832  0915                     	;# 
  2833  0916                     	;# 
  2834  0918                     	;# 
  2835  0919                     	;# 
  2836  091A                     	;# 
  2837  091B                     	;# 
  2838  091C                     	;# 
  2839  091D                     	;# 
  2840  091E                     	;# 
  2841  091F                     	;# 
  2842  0E0F                     	;# 
  2843  0E10                     	;# 
  2844  0E11                     	;# 
  2845  0E12                     	;# 
  2846  0E13                     	;# 
  2847  0E14                     	;# 
  2848  0E15                     	;# 
  2849  0E16                     	;# 
  2850  0E17                     	;# 
  2851  0E18                     	;# 
  2852  0E19                     	;# 
  2853  0E1A                     	;# 
  2854  0E1B                     	;# 
  2855  0E1C                     	;# 
  2856  0E1D                     	;# 
  2857  0E1E                     	;# 
  2858  0E1F                     	;# 
  2859  0E20                     	;# 
  2860  0E21                     	;# 
  2861  0E22                     	;# 
  2862  0E24                     	;# 
  2863  0E25                     	;# 
  2864  0E28                     	;# 
  2865  0E29                     	;# 
  2866  0E2A                     	;# 
  2867  0E2B                     	;# 
  2868  0E2C                     	;# 
  2869  0E2D                     	;# 
  2870  0E2E                     	;# 
  2871  0E2F                     	;# 
  2872  0E90                     	;# 
  2873  0E91                     	;# 
  2874  0E92                     	;# 
  2875  0E94                     	;# 
  2876  0E95                     	;# 
  2877  0E9C                     	;# 
  2878  0E9D                     	;# 
  2879  0E9E                     	;# 
  2880  0E9F                     	;# 
  2881  0EA0                     	;# 
  2882  0EA1                     	;# 
  2883  0EA2                     	;# 
  2884  0EA3                     	;# 
  2885  0EA4                     	;# 
  2886  0EA5                     	;# 
  2887  0EA6                     	;# 
  2888  0EA7                     	;# 
  2889  0F0F                     	;# 
  2890  0F10                     	;# 
  2891  0F11                     	;# 
  2892  0F12                     	;# 
  2893  0F13                     	;# 
  2894  0F14                     	;# 
  2895  0F15                     	;# 
  2896  0F16                     	;# 
  2897  0F17                     	;# 
  2898  0F18                     	;# 
  2899  0F19                     	;# 
  2900  0F1A                     	;# 
  2901  0F1B                     	;# 
  2902  0F1C                     	;# 
  2903  0F1D                     	;# 
  2904  0F1E                     	;# 
  2905  0F1F                     	;# 
  2906  0F20                     	;# 
  2907  0F21                     	;# 
  2908  0F22                     	;# 
  2909  0F23                     	;# 
  2910  0F24                     	;# 
  2911  0F25                     	;# 
  2912  0F26                     	;# 
  2913  0F27                     	;# 
  2914  0F28                     	;# 
  2915  0F29                     	;# 
  2916  0F2A                     	;# 
  2917  0F2B                     	;# 
  2918  0F2C                     	;# 
  2919  0F2D                     	;# 
  2920  0F2E                     	;# 
  2921  0F2F                     	;# 
  2922  0F30                     	;# 
  2923  0F31                     	;# 
  2924  0F32                     	;# 
  2925  0F33                     	;# 
  2926  0F34                     	;# 
  2927  0F35                     	;# 
  2928  0F36                     	;# 
  2929  0F37                     	;# 
  2930  0FE4                     	;# 
  2931  0FE5                     	;# 
  2932  0FE6                     	;# 
  2933  0FE7                     	;# 
  2934  0FE8                     	;# 
  2935  0FE9                     	;# 
  2936  0FEA                     	;# 
  2937  0FEB                     	;# 
  2938  0FED                     	;# 
  2939  0FEE                     	;# 
  2940  0FEF                     	;# 
  2941  0000                     	;# 
  2942  0001                     	;# 
  2943  0002                     	;# 
  2944  0003                     	;# 
  2945  0004                     	;# 
  2946  0005                     	;# 
  2947  0006                     	;# 
  2948  0007                     	;# 
  2949  0008                     	;# 
  2950  0009                     	;# 
  2951  000A                     	;# 
  2952  000B                     	;# 
  2953  000C                     	;# 
  2954  000D                     	;# 
  2955  000E                     	;# 
  2956  0010                     	;# 
  2957  0011                     	;# 
  2958  0012                     	;# 
  2959  0013                     	;# 
  2960  0014                     	;# 
  2961  0015                     	;# 
  2962  0015                     	;# 
  2963  0016                     	;# 
  2964  0016                     	;# 
  2965  0017                     	;# 
  2966  0018                     	;# 
  2967  0019                     	;# 
  2968  0019                     	;# 
  2969  001A                     	;# 
  2970  001B                     	;# 
  2971  001C                     	;# 
  2972  001D                     	;# 
  2973  001E                     	;# 
  2974  001F                     	;# 
  2975  008C                     	;# 
  2976  008D                     	;# 
  2977  008E                     	;# 
  2978  0090                     	;# 
  2979  0091                     	;# 
  2980  0092                     	;# 
  2981  0093                     	;# 
  2982  0094                     	;# 
  2983  0097                     	;# 
  2984  009B                     	;# 
  2985  009B                     	;# 
  2986  009C                     	;# 
  2987  009D                     	;# 
  2988  009E                     	;# 
  2989  009F                     	;# 
  2990  010C                     	;# 
  2991  010D                     	;# 
  2992  010E                     	;# 
  2993  0111                     	;# 
  2994  0112                     	;# 
  2995  0113                     	;# 
  2996  0114                     	;# 
  2997  0115                     	;# 
  2998  0116                     	;# 
  2999  0117                     	;# 
  3000  0118                     	;# 
  3001  0119                     	;# 
  3002  018C                     	;# 
  3003  018D                     	;# 
  3004  018E                     	;# 
  3005  0197                     	;# 
  3006  0199                     	;# 
  3007  0199                     	;# 
  3008  0199                     	;# 
  3009  019A                     	;# 
  3010  019A                     	;# 
  3011  019A                     	;# 
  3012  019B                     	;# 
  3013  019B                     	;# 
  3014  019B                     	;# 
  3015  019B                     	;# 
  3016  019B                     	;# 
  3017  019C                     	;# 
  3018  019C                     	;# 
  3019  019C                     	;# 
  3020  019D                     	;# 
  3021  019D                     	;# 
  3022  019D                     	;# 
  3023  019E                     	;# 
  3024  019E                     	;# 
  3025  019E                     	;# 
  3026  019F                     	;# 
  3027  019F                     	;# 
  3028  019F                     	;# 
  3029  019F                     	;# 
  3030  019F                     	;# 
  3031  020C                     	;# 
  3032  020D                     	;# 
  3033  020E                     	;# 
  3034  0211                     	;# 
  3035  0211                     	;# 
  3036  0212                     	;# 
  3037  0212                     	;# 
  3038  0213                     	;# 
  3039  0213                     	;# 
  3040  0214                     	;# 
  3041  0214                     	;# 
  3042  0215                     	;# 
  3043  0215                     	;# 
  3044  0215                     	;# 
  3045  0215                     	;# 
  3046  0216                     	;# 
  3047  0216                     	;# 
  3048  0217                     	;# 
  3049  0217                     	;# 
  3050  0219                     	;# 
  3051  021A                     	;# 
  3052  021B                     	;# 
  3053  021C                     	;# 
  3054  021D                     	;# 
  3055  021D                     	;# 
  3056  021E                     	;# 
  3057  021F                     	;# 
  3058  028C                     	;# 
  3059  028D                     	;# 
  3060  028E                     	;# 
  3061  0291                     	;# 
  3062  0291                     	;# 
  3063  0292                     	;# 
  3064  0293                     	;# 
  3065  0294                     	;# 
  3066  0295                     	;# 
  3067  0295                     	;# 
  3068  0296                     	;# 
  3069  0297                     	;# 
  3070  0298                     	;# 
  3071  029F                     	;# 
  3072  030C                     	;# 
  3073  030D                     	;# 
  3074  030E                     	;# 
  3075  0311                     	;# 
  3076  0311                     	;# 
  3077  0312                     	;# 
  3078  0313                     	;# 
  3079  0314                     	;# 
  3080  0315                     	;# 
  3081  0315                     	;# 
  3082  0316                     	;# 
  3083  0317                     	;# 
  3084  0318                     	;# 
  3085  038C                     	;# 
  3086  038D                     	;# 
  3087  038E                     	;# 
  3088  0391                     	;# 
  3089  0392                     	;# 
  3090  0393                     	;# 
  3091  0394                     	;# 
  3092  0395                     	;# 
  3093  0396                     	;# 
  3094  0397                     	;# 
  3095  0398                     	;# 
  3096  0399                     	;# 
  3097  039A                     	;# 
  3098  039C                     	;# 
  3099  039D                     	;# 
  3100  039E                     	;# 
  3101  039F                     	;# 
  3102  0411                     	;# 
  3103  0411                     	;# 
  3104  0412                     	;# 
  3105  0413                     	;# 
  3106  0414                     	;# 
  3107  0415                     	;# 
  3108  0416                     	;# 
  3109  0417                     	;# 
  3110  0418                     	;# 
  3111  0418                     	;# 
  3112  0419                     	;# 
  3113  041A                     	;# 
  3114  041B                     	;# 
  3115  041C                     	;# 
  3116  041D                     	;# 
  3117  041E                     	;# 
  3118  041F                     	;# 
  3119  0498                     	;# 
  3120  0498                     	;# 
  3121  0499                     	;# 
  3122  049A                     	;# 
  3123  049B                     	;# 
  3124  049B                     	;# 
  3125  049C                     	;# 
  3126  049D                     	;# 
  3127  049E                     	;# 
  3128  049F                     	;# 
  3129  0617                     	;# 
  3130  0618                     	;# 
  3131  0619                     	;# 
  3132  0619                     	;# 
  3133  061A                     	;# 
  3134  061B                     	;# 
  3135  061C                     	;# 
  3136  061C                     	;# 
  3137  061F                     	;# 
  3138  0691                     	;# 
  3139  0692                     	;# 
  3140  0693                     	;# 
  3141  0694                     	;# 
  3142  0695                     	;# 
  3143  0696                     	;# 
  3144  0697                     	;# 
  3145  0698                     	;# 
  3146  0699                     	;# 
  3147  0711                     	;# 
  3148  0712                     	;# 
  3149  0713                     	;# 
  3150  0714                     	;# 
  3151  0715                     	;# 
  3152  0716                     	;# 
  3153  0717                     	;# 
  3154  0718                     	;# 
  3155  0719                     	;# 
  3156  0891                     	;# 
  3157  0891                     	;# 
  3158  0891                     	;# 
  3159  0891                     	;# 
  3160  0891                     	;# 
  3161  0891                     	;# 
  3162  0892                     	;# 
  3163  0892                     	;# 
  3164  0892                     	;# 
  3165  0893                     	;# 
  3166  0893                     	;# 
  3167  0893                     	;# 
  3168  0893                     	;# 
  3169  0893                     	;# 
  3170  0893                     	;# 
  3171  0894                     	;# 
  3172  0894                     	;# 
  3173  0894                     	;# 
  3174  0895                     	;# 
  3175  0895                     	;# 
  3176  0895                     	;# 
  3177  0896                     	;# 
  3178  0896                     	;# 
  3179  0896                     	;# 
  3180  089B                     	;# 
  3181  0911                     	;# 
  3182  0912                     	;# 
  3183  0913                     	;# 
  3184  0914                     	;# 
  3185  0915                     	;# 
  3186  0916                     	;# 
  3187  0918                     	;# 
  3188  0919                     	;# 
  3189  091A                     	;# 
  3190  091B                     	;# 
  3191  091C                     	;# 
  3192  091D                     	;# 
  3193  091E                     	;# 
  3194  091F                     	;# 
  3195  0E0F                     	;# 
  3196  0E10                     	;# 
  3197  0E11                     	;# 
  3198  0E12                     	;# 
  3199  0E13                     	;# 
  3200  0E14                     	;# 
  3201  0E15                     	;# 
  3202  0E16                     	;# 
  3203  0E17                     	;# 
  3204  0E18                     	;# 
  3205  0E19                     	;# 
  3206  0E1A                     	;# 
  3207  0E1B                     	;# 
  3208  0E1C                     	;# 
  3209  0E1D                     	;# 
  3210  0E1E                     	;# 
  3211  0E1F                     	;# 
  3212  0E20                     	;# 
  3213  0E21                     	;# 
  3214  0E22                     	;# 
  3215  0E24                     	;# 
  3216  0E25                     	;# 
  3217  0E28                     	;# 
  3218  0E29                     	;# 
  3219  0E2A                     	;# 
  3220  0E2B                     	;# 
  3221  0E2C                     	;# 
  3222  0E2D                     	;# 
  3223  0E2E                     	;# 
  3224  0E2F                     	;# 
  3225  0E90                     	;# 
  3226  0E91                     	;# 
  3227  0E92                     	;# 
  3228  0E94                     	;# 
  3229  0E95                     	;# 
  3230  0E9C                     	;# 
  3231  0E9D                     	;# 
  3232  0E9E                     	;# 
  3233  0E9F                     	;# 
  3234  0EA0                     	;# 
  3235  0EA1                     	;# 
  3236  0EA2                     	;# 
  3237  0EA3                     	;# 
  3238  0EA4                     	;# 
  3239  0EA5                     	;# 
  3240  0EA6                     	;# 
  3241  0EA7                     	;# 
  3242  0F0F                     	;# 
  3243  0F10                     	;# 
  3244  0F11                     	;# 
  3245  0F12                     	;# 
  3246  0F13                     	;# 
  3247  0F14                     	;# 
  3248  0F15                     	;# 
  3249  0F16                     	;# 
  3250  0F17                     	;# 
  3251  0F18                     	;# 
  3252  0F19                     	;# 
  3253  0F1A                     	;# 
  3254  0F1B                     	;# 
  3255  0F1C                     	;# 
  3256  0F1D                     	;# 
  3257  0F1E                     	;# 
  3258  0F1F                     	;# 
  3259  0F20                     	;# 
  3260  0F21                     	;# 
  3261  0F22                     	;# 
  3262  0F23                     	;# 
  3263  0F24                     	;# 
  3264  0F25                     	;# 
  3265  0F26                     	;# 
  3266  0F27                     	;# 
  3267  0F28                     	;# 
  3268  0F29                     	;# 
  3269  0F2A                     	;# 
  3270  0F2B                     	;# 
  3271  0F2C                     	;# 
  3272  0F2D                     	;# 
  3273  0F2E                     	;# 
  3274  0F2F                     	;# 
  3275  0F30                     	;# 
  3276  0F31                     	;# 
  3277  0F32                     	;# 
  3278  0F33                     	;# 
  3279  0F34                     	;# 
  3280  0F35                     	;# 
  3281  0F36                     	;# 
  3282  0F37                     	;# 
  3283  0FE4                     	;# 
  3284  0FE5                     	;# 
  3285  0FE6                     	;# 
  3286  0FE7                     	;# 
  3287  0FE8                     	;# 
  3288  0FE9                     	;# 
  3289  0FEA                     	;# 
  3290  0FEB                     	;# 
  3291  0FED                     	;# 
  3292  0FEE                     	;# 
  3293  0FEF                     	;# 
  3294  0000                     	;# 
  3295  0001                     	;# 
  3296  0002                     	;# 
  3297  0003                     	;# 
  3298  0004                     	;# 
  3299  0005                     	;# 
  3300  0006                     	;# 
  3301  0007                     	;# 
  3302  0008                     	;# 
  3303  0009                     	;# 
  3304  000A                     	;# 
  3305  000B                     	;# 
  3306  000C                     	;# 
  3307  000D                     	;# 
  3308  000E                     	;# 
  3309  0010                     	;# 
  3310  0011                     	;# 
  3311  0012                     	;# 
  3312  0013                     	;# 
  3313  0014                     	;# 
  3314  0015                     	;# 
  3315  0015                     	;# 
  3316  0016                     	;# 
  3317  0016                     	;# 
  3318  0017                     	;# 
  3319  0018                     	;# 
  3320  0019                     	;# 
  3321  0019                     	;# 
  3322  001A                     	;# 
  3323  001B                     	;# 
  3324  001C                     	;# 
  3325  001D                     	;# 
  3326  001E                     	;# 
  3327  001F                     	;# 
  3328  008C                     	;# 
  3329  008D                     	;# 
  3330  008E                     	;# 
  3331  0090                     	;# 
  3332  0091                     	;# 
  3333  0092                     	;# 
  3334  0093                     	;# 
  3335  0094                     	;# 
  3336  0097                     	;# 
  3337  009B                     	;# 
  3338  009B                     	;# 
  3339  009C                     	;# 
  3340  009D                     	;# 
  3341  009E                     	;# 
  3342  009F                     	;# 
  3343  010C                     	;# 
  3344  010D                     	;# 
  3345  010E                     	;# 
  3346  0111                     	;# 
  3347  0112                     	;# 
  3348  0113                     	;# 
  3349  0114                     	;# 
  3350  0115                     	;# 
  3351  0116                     	;# 
  3352  0117                     	;# 
  3353  0118                     	;# 
  3354  0119                     	;# 
  3355  018C                     	;# 
  3356  018D                     	;# 
  3357  018E                     	;# 
  3358  0197                     	;# 
  3359  0199                     	;# 
  3360  0199                     	;# 
  3361  0199                     	;# 
  3362  019A                     	;# 
  3363  019A                     	;# 
  3364  019A                     	;# 
  3365  019B                     	;# 
  3366  019B                     	;# 
  3367  019B                     	;# 
  3368  019B                     	;# 
  3369  019B                     	;# 
  3370  019C                     	;# 
  3371  019C                     	;# 
  3372  019C                     	;# 
  3373  019D                     	;# 
  3374  019D                     	;# 
  3375  019D                     	;# 
  3376  019E                     	;# 
  3377  019E                     	;# 
  3378  019E                     	;# 
  3379  019F                     	;# 
  3380  019F                     	;# 
  3381  019F                     	;# 
  3382  019F                     	;# 
  3383  019F                     	;# 
  3384  020C                     	;# 
  3385  020D                     	;# 
  3386  020E                     	;# 
  3387  0211                     	;# 
  3388  0211                     	;# 
  3389  0212                     	;# 
  3390  0212                     	;# 
  3391  0213                     	;# 
  3392  0213                     	;# 
  3393  0214                     	;# 
  3394  0214                     	;# 
  3395  0215                     	;# 
  3396  0215                     	;# 
  3397  0215                     	;# 
  3398  0215                     	;# 
  3399  0216                     	;# 
  3400  0216                     	;# 
  3401  0217                     	;# 
  3402  0217                     	;# 
  3403  0219                     	;# 
  3404  021A                     	;# 
  3405  021B                     	;# 
  3406  021C                     	;# 
  3407  021D                     	;# 
  3408  021D                     	;# 
  3409  021E                     	;# 
  3410  021F                     	;# 
  3411  028C                     	;# 
  3412  028D                     	;# 
  3413  028E                     	;# 
  3414  0291                     	;# 
  3415  0291                     	;# 
  3416  0292                     	;# 
  3417  0293                     	;# 
  3418  0294                     	;# 
  3419  0295                     	;# 
  3420  0295                     	;# 
  3421  0296                     	;# 
  3422  0297                     	;# 
  3423  0298                     	;# 
  3424  029F                     	;# 
  3425  030C                     	;# 
  3426  030D                     	;# 
  3427  030E                     	;# 
  3428  0311                     	;# 
  3429  0311                     	;# 
  3430  0312                     	;# 
  3431  0313                     	;# 
  3432  0314                     	;# 
  3433  0315                     	;# 
  3434  0315                     	;# 
  3435  0316                     	;# 
  3436  0317                     	;# 
  3437  0318                     	;# 
  3438  038C                     	;# 
  3439  038D                     	;# 
  3440  038E                     	;# 
  3441  0391                     	;# 
  3442  0392                     	;# 
  3443  0393                     	;# 
  3444  0394                     	;# 
  3445  0395                     	;# 
  3446  0396                     	;# 
  3447  0397                     	;# 
  3448  0398                     	;# 
  3449  0399                     	;# 
  3450  039A                     	;# 
  3451  039C                     	;# 
  3452  039D                     	;# 
  3453  039E                     	;# 
  3454  039F                     	;# 
  3455  0411                     	;# 
  3456  0411                     	;# 
  3457  0412                     	;# 
  3458  0413                     	;# 
  3459  0414                     	;# 
  3460  0415                     	;# 
  3461  0416                     	;# 
  3462  0417                     	;# 
  3463  0418                     	;# 
  3464  0418                     	;# 
  3465  0419                     	;# 
  3466  041A                     	;# 
  3467  041B                     	;# 
  3468  041C                     	;# 
  3469  041D                     	;# 
  3470  041E                     	;# 
  3471  041F                     	;# 
  3472  0498                     	;# 
  3473  0498                     	;# 
  3474  0499                     	;# 
  3475  049A                     	;# 
  3476  049B                     	;# 
  3477  049B                     	;# 
  3478  049C                     	;# 
  3479  049D                     	;# 
  3480  049E                     	;# 
  3481  049F                     	;# 
  3482  0617                     	;# 
  3483  0618                     	;# 
  3484  0619                     	;# 
  3485  0619                     	;# 
  3486  061A                     	;# 
  3487  061B                     	;# 
  3488  061C                     	;# 
  3489  061C                     	;# 
  3490  061F                     	;# 
  3491  0691                     	;# 
  3492  0692                     	;# 
  3493  0693                     	;# 
  3494  0694                     	;# 
  3495  0695                     	;# 
  3496  0696                     	;# 
  3497  0697                     	;# 
  3498  0698                     	;# 
  3499  0699                     	;# 
  3500  0711                     	;# 
  3501  0712                     	;# 
  3502  0713                     	;# 
  3503  0714                     	;# 
  3504  0715                     	;# 
  3505  0716                     	;# 
  3506  0717                     	;# 
  3507  0718                     	;# 
  3508  0719                     	;# 
  3509  0891                     	;# 
  3510  0891                     	;# 
  3511  0891                     	;# 
  3512  0891                     	;# 
  3513  0891                     	;# 
  3514  0891                     	;# 
  3515  0892                     	;# 
  3516  0892                     	;# 
  3517  0892                     	;# 
  3518  0893                     	;# 
  3519  0893                     	;# 
  3520  0893                     	;# 
  3521  0893                     	;# 
  3522  0893                     	;# 
  3523  0893                     	;# 
  3524  0894                     	;# 
  3525  0894                     	;# 
  3526  0894                     	;# 
  3527  0895                     	;# 
  3528  0895                     	;# 
  3529  0895                     	;# 
  3530  0896                     	;# 
  3531  0896                     	;# 
  3532  0896                     	;# 
  3533  089B                     	;# 
  3534  0911                     	;# 
  3535  0912                     	;# 
  3536  0913                     	;# 
  3537  0914                     	;# 
  3538  0915                     	;# 
  3539  0916                     	;# 
  3540  0918                     	;# 
  3541  0919                     	;# 
  3542  091A                     	;# 
  3543  091B                     	;# 
  3544  091C                     	;# 
  3545  091D                     	;# 
  3546  091E                     	;# 
  3547  091F                     	;# 
  3548  0E0F                     	;# 
  3549  0E10                     	;# 
  3550  0E11                     	;# 
  3551  0E12                     	;# 
  3552  0E13                     	;# 
  3553  0E14                     	;# 
  3554  0E15                     	;# 
  3555  0E16                     	;# 
  3556  0E17                     	;# 
  3557  0E18                     	;# 
  3558  0E19                     	;# 
  3559  0E1A                     	;# 
  3560  0E1B                     	;# 
  3561  0E1C                     	;# 
  3562  0E1D                     	;# 
  3563  0E1E                     	;# 
  3564  0E1F                     	;# 
  3565  0E20                     	;# 
  3566  0E21                     	;# 
  3567  0E22                     	;# 
  3568  0E24                     	;# 
  3569  0E25                     	;# 
  3570  0E28                     	;# 
  3571  0E29                     	;# 
  3572  0E2A                     	;# 
  3573  0E2B                     	;# 
  3574  0E2C                     	;# 
  3575  0E2D                     	;# 
  3576  0E2E                     	;# 
  3577  0E2F                     	;# 
  3578  0E90                     	;# 
  3579  0E91                     	;# 
  3580  0E92                     	;# 
  3581  0E94                     	;# 
  3582  0E95                     	;# 
  3583  0E9C                     	;# 
  3584  0E9D                     	;# 
  3585  0E9E                     	;# 
  3586  0E9F                     	;# 
  3587  0EA0                     	;# 
  3588  0EA1                     	;# 
  3589  0EA2                     	;# 
  3590  0EA3                     	;# 
  3591  0EA4                     	;# 
  3592  0EA5                     	;# 
  3593  0EA6                     	;# 
  3594  0EA7                     	;# 
  3595  0F0F                     	;# 
  3596  0F10                     	;# 
  3597  0F11                     	;# 
  3598  0F12                     	;# 
  3599  0F13                     	;# 
  3600  0F14                     	;# 
  3601  0F15                     	;# 
  3602  0F16                     	;# 
  3603  0F17                     	;# 
  3604  0F18                     	;# 
  3605  0F19                     	;# 
  3606  0F1A                     	;# 
  3607  0F1B                     	;# 
  3608  0F1C                     	;# 
  3609  0F1D                     	;# 
  3610  0F1E                     	;# 
  3611  0F1F                     	;# 
  3612  0F20                     	;# 
  3613  0F21                     	;# 
  3614  0F22                     	;# 
  3615  0F23                     	;# 
  3616  0F24                     	;# 
  3617  0F25                     	;# 
  3618  0F26                     	;# 
  3619  0F27                     	;# 
  3620  0F28                     	;# 
  3621  0F29                     	;# 
  3622  0F2A                     	;# 
  3623  0F2B                     	;# 
  3624  0F2C                     	;# 
  3625  0F2D                     	;# 
  3626  0F2E                     	;# 
  3627  0F2F                     	;# 
  3628  0F30                     	;# 
  3629  0F31                     	;# 
  3630  0F32                     	;# 
  3631  0F33                     	;# 
  3632  0F34                     	;# 
  3633  0F35                     	;# 
  3634  0F36                     	;# 
  3635  0F37                     	;# 
  3636  0FE4                     	;# 
  3637  0FE5                     	;# 
  3638  0FE6                     	;# 
  3639  0FE7                     	;# 
  3640  0FE8                     	;# 
  3641  0FE9                     	;# 
  3642  0FEA                     	;# 
  3643  0FEB                     	;# 
  3644  0FED                     	;# 
  3645  0FEE                     	;# 
  3646  0FEF                     	;# 
  3647  0000                     	;# 
  3648  0001                     	;# 
  3649  0002                     	;# 
  3650  0003                     	;# 
  3651  0004                     	;# 
  3652  0005                     	;# 
  3653  0006                     	;# 
  3654  0007                     	;# 
  3655  0008                     	;# 
  3656  0009                     	;# 
  3657  000A                     	;# 
  3658  000B                     	;# 
  3659  000C                     	;# 
  3660  000D                     	;# 
  3661  000E                     	;# 
  3662  0010                     	;# 
  3663  0011                     	;# 
  3664  0012                     	;# 
  3665  0013                     	;# 
  3666  0014                     	;# 
  3667  0015                     	;# 
  3668  0015                     	;# 
  3669  0016                     	;# 
  3670  0016                     	;# 
  3671  0017                     	;# 
  3672  0018                     	;# 
  3673  0019                     	;# 
  3674  0019                     	;# 
  3675  001A                     	;# 
  3676  001B                     	;# 
  3677  001C                     	;# 
  3678  001D                     	;# 
  3679  001E                     	;# 
  3680  001F                     	;# 
  3681  008C                     	;# 
  3682  008D                     	;# 
  3683  008E                     	;# 
  3684  0090                     	;# 
  3685  0091                     	;# 
  3686  0092                     	;# 
  3687  0093                     	;# 
  3688  0094                     	;# 
  3689  0097                     	;# 
  3690  009B                     	;# 
  3691  009B                     	;# 
  3692  009C                     	;# 
  3693  009D                     	;# 
  3694  009E                     	;# 
  3695  009F                     	;# 
  3696  010C                     	;# 
  3697  010D                     	;# 
  3698  010E                     	;# 
  3699  0111                     	;# 
  3700  0112                     	;# 
  3701  0113                     	;# 
  3702  0114                     	;# 
  3703  0115                     	;# 
  3704  0116                     	;# 
  3705  0117                     	;# 
  3706  0118                     	;# 
  3707  0119                     	;# 
  3708  018C                     	;# 
  3709  018D                     	;# 
  3710  018E                     	;# 
  3711  0197                     	;# 
  3712  0199                     	;# 
  3713  0199                     	;# 
  3714  0199                     	;# 
  3715  019A                     	;# 
  3716  019A                     	;# 
  3717  019A                     	;# 
  3718  019B                     	;# 
  3719  019B                     	;# 
  3720  019B                     	;# 
  3721  019B                     	;# 
  3722  019B                     	;# 
  3723  019C                     	;# 
  3724  019C                     	;# 
  3725  019C                     	;# 
  3726  019D                     	;# 
  3727  019D                     	;# 
  3728  019D                     	;# 
  3729  019E                     	;# 
  3730  019E                     	;# 
  3731  019E                     	;# 
  3732  019F                     	;# 
  3733  019F                     	;# 
  3734  019F                     	;# 
  3735  019F                     	;# 
  3736  019F                     	;# 
  3737  020C                     	;# 
  3738  020D                     	;# 
  3739  020E                     	;# 
  3740  0211                     	;# 
  3741  0211                     	;# 
  3742  0212                     	;# 
  3743  0212                     	;# 
  3744  0213                     	;# 
  3745  0213                     	;# 
  3746  0214                     	;# 
  3747  0214                     	;# 
  3748  0215                     	;# 
  3749  0215                     	;# 
  3750  0215                     	;# 
  3751  0215                     	;# 
  3752  0216                     	;# 
  3753  0216                     	;# 
  3754  0217                     	;# 
  3755  0217                     	;# 
  3756  0219                     	;# 
  3757  021A                     	;# 
  3758  021B                     	;# 
  3759  021C                     	;# 
  3760  021D                     	;# 
  3761  021D                     	;# 
  3762  021E                     	;# 
  3763  021F                     	;# 
  3764  028C                     	;# 
  3765  028D                     	;# 
  3766  028E                     	;# 
  3767  0291                     	;# 
  3768  0291                     	;# 
  3769  0292                     	;# 
  3770  0293                     	;# 
  3771  0294                     	;# 
  3772  0295                     	;# 
  3773  0295                     	;# 
  3774  0296                     	;# 
  3775  0297                     	;# 
  3776  0298                     	;# 
  3777  029F                     	;# 
  3778  030C                     	;# 
  3779  030D                     	;# 
  3780  030E                     	;# 
  3781  0311                     	;# 
  3782  0311                     	;# 
  3783  0312                     	;# 
  3784  0313                     	;# 
  3785  0314                     	;# 
  3786  0315                     	;# 
  3787  0315                     	;# 
  3788  0316                     	;# 
  3789  0317                     	;# 
  3790  0318                     	;# 
  3791  038C                     	;# 
  3792  038D                     	;# 
  3793  038E                     	;# 
  3794  0391                     	;# 
  3795  0392                     	;# 
  3796  0393                     	;# 
  3797  0394                     	;# 
  3798  0395                     	;# 
  3799  0396                     	;# 
  3800  0397                     	;# 
  3801  0398                     	;# 
  3802  0399                     	;# 
  3803  039A                     	;# 
  3804  039C                     	;# 
  3805  039D                     	;# 
  3806  039E                     	;# 
  3807  039F                     	;# 
  3808  0411                     	;# 
  3809  0411                     	;# 
  3810  0412                     	;# 
  3811  0413                     	;# 
  3812  0414                     	;# 
  3813  0415                     	;# 
  3814  0416                     	;# 
  3815  0417                     	;# 
  3816  0418                     	;# 
  3817  0418                     	;# 
  3818  0419                     	;# 
  3819  041A                     	;# 
  3820  041B                     	;# 
  3821  041C                     	;# 
  3822  041D                     	;# 
  3823  041E                     	;# 
  3824  041F                     	;# 
  3825  0498                     	;# 
  3826  0498                     	;# 
  3827  0499                     	;# 
  3828  049A                     	;# 
  3829  049B                     	;# 
  3830  049B                     	;# 
  3831  049C                     	;# 
  3832  049D                     	;# 
  3833  049E                     	;# 
  3834  049F                     	;# 
  3835  0617                     	;# 
  3836  0618                     	;# 
  3837  0619                     	;# 
  3838  0619                     	;# 
  3839  061A                     	;# 
  3840  061B                     	;# 
  3841  061C                     	;# 
  3842  061C                     	;# 
  3843  061F                     	;# 
  3844  0691                     	;# 
  3845  0692                     	;# 
  3846  0693                     	;# 
  3847  0694                     	;# 
  3848  0695                     	;# 
  3849  0696                     	;# 
  3850  0697                     	;# 
  3851  0698                     	;# 
  3852  0699                     	;# 
  3853  0711                     	;# 
  3854  0712                     	;# 
  3855  0713                     	;# 
  3856  0714                     	;# 
  3857  0715                     	;# 
  3858  0716                     	;# 
  3859  0717                     	;# 
  3860  0718                     	;# 
  3861  0719                     	;# 
  3862  0891                     	;# 
  3863  0891                     	;# 
  3864  0891                     	;# 
  3865  0891                     	;# 
  3866  0891                     	;# 
  3867  0891                     	;# 
  3868  0892                     	;# 
  3869  0892                     	;# 
  3870  0892                     	;# 
  3871  0893                     	;# 
  3872  0893                     	;# 
  3873  0893                     	;# 
  3874  0893                     	;# 
  3875  0893                     	;# 
  3876  0893                     	;# 
  3877  0894                     	;# 
  3878  0894                     	;# 
  3879  0894                     	;# 
  3880  0895                     	;# 
  3881  0895                     	;# 
  3882  0895                     	;# 
  3883  0896                     	;# 
  3884  0896                     	;# 
  3885  0896                     	;# 
  3886  089B                     	;# 
  3887  0911                     	;# 
  3888  0912                     	;# 
  3889  0913                     	;# 
  3890  0914                     	;# 
  3891  0915                     	;# 
  3892  0916                     	;# 
  3893  0918                     	;# 
  3894  0919                     	;# 
  3895  091A                     	;# 
  3896  091B                     	;# 
  3897  091C                     	;# 
  3898  091D                     	;# 
  3899  091E                     	;# 
  3900  091F                     	;# 
  3901  0E0F                     	;# 
  3902  0E10                     	;# 
  3903  0E11                     	;# 
  3904  0E12                     	;# 
  3905  0E13                     	;# 
  3906  0E14                     	;# 
  3907  0E15                     	;# 
  3908  0E16                     	;# 
  3909  0E17                     	;# 
  3910  0E18                     	;# 
  3911  0E19                     	;# 
  3912  0E1A                     	;# 
  3913  0E1B                     	;# 
  3914  0E1C                     	;# 
  3915  0E1D                     	;# 
  3916  0E1E                     	;# 
  3917  0E1F                     	;# 
  3918  0E20                     	;# 
  3919  0E21                     	;# 
  3920  0E22                     	;# 
  3921  0E24                     	;# 
  3922  0E25                     	;# 
  3923  0E28                     	;# 
  3924  0E29                     	;# 
  3925  0E2A                     	;# 
  3926  0E2B                     	;# 
  3927  0E2C                     	;# 
  3928  0E2D                     	;# 
  3929  0E2E                     	;# 
  3930  0E2F                     	;# 
  3931  0E90                     	;# 
  3932  0E91                     	;# 
  3933  0E92                     	;# 
  3934  0E94                     	;# 
  3935  0E95                     	;# 
  3936  0E9C                     	;# 
  3937  0E9D                     	;# 
  3938  0E9E                     	;# 
  3939  0E9F                     	;# 
  3940  0EA0                     	;# 
  3941  0EA1                     	;# 
  3942  0EA2                     	;# 
  3943  0EA3                     	;# 
  3944  0EA4                     	;# 
  3945  0EA5                     	;# 
  3946  0EA6                     	;# 
  3947  0EA7                     	;# 
  3948  0F0F                     	;# 
  3949  0F10                     	;# 
  3950  0F11                     	;# 
  3951  0F12                     	;# 
  3952  0F13                     	;# 
  3953  0F14                     	;# 
  3954  0F15                     	;# 
  3955  0F16                     	;# 
  3956  0F17                     	;# 
  3957  0F18                     	;# 
  3958  0F19                     	;# 
  3959  0F1A                     	;# 
  3960  0F1B                     	;# 
  3961  0F1C                     	;# 
  3962  0F1D                     	;# 
  3963  0F1E                     	;# 
  3964  0F1F                     	;# 
  3965  0F20                     	;# 
  3966  0F21                     	;# 
  3967  0F22                     	;# 
  3968  0F23                     	;# 
  3969  0F24                     	;# 
  3970  0F25                     	;# 
  3971  0F26                     	;# 
  3972  0F27                     	;# 
  3973  0F28                     	;# 
  3974  0F29                     	;# 
  3975  0F2A                     	;# 
  3976  0F2B                     	;# 
  3977  0F2C                     	;# 
  3978  0F2D                     	;# 
  3979  0F2E                     	;# 
  3980  0F2F                     	;# 
  3981  0F30                     	;# 
  3982  0F31                     	;# 
  3983  0F32                     	;# 
  3984  0F33                     	;# 
  3985  0F34                     	;# 
  3986  0F35                     	;# 
  3987  0F36                     	;# 
  3988  0F37                     	;# 
  3989  0FE4                     	;# 
  3990  0FE5                     	;# 
  3991  0FE6                     	;# 
  3992  0FE7                     	;# 
  3993  0FE8                     	;# 
  3994  0FE9                     	;# 
  3995  0FEA                     	;# 
  3996  0FEB                     	;# 
  3997  0FED                     	;# 
  3998  0FEE                     	;# 
  3999  0FEF                     	;# 
  4000  0000                     	;# 
  4001  0001                     	;# 
  4002  0002                     	;# 
  4003  0003                     	;# 
  4004  0004                     	;# 
  4005  0005                     	;# 
  4006  0006                     	;# 
  4007  0007                     	;# 
  4008  0008                     	;# 
  4009  0009                     	;# 
  4010  000A                     	;# 
  4011  000B                     	;# 
  4012  000C                     	;# 
  4013  000D                     	;# 
  4014  000E                     	;# 
  4015  0010                     	;# 
  4016  0011                     	;# 
  4017  0012                     	;# 
  4018  0013                     	;# 
  4019  0014                     	;# 
  4020  0015                     	;# 
  4021  0015                     	;# 
  4022  0016                     	;# 
  4023  0016                     	;# 
  4024  0017                     	;# 
  4025  0018                     	;# 
  4026  0019                     	;# 
  4027  0019                     	;# 
  4028  001A                     	;# 
  4029  001B                     	;# 
  4030  001C                     	;# 
  4031  001D                     	;# 
  4032  001E                     	;# 
  4033  001F                     	;# 
  4034  008C                     	;# 
  4035  008D                     	;# 
  4036  008E                     	;# 
  4037  0090                     	;# 
  4038  0091                     	;# 
  4039  0092                     	;# 
  4040  0093                     	;# 
  4041  0094                     	;# 
  4042  0097                     	;# 
  4043  009B                     	;# 
  4044  009B                     	;# 
  4045  009C                     	;# 
  4046  009D                     	;# 
  4047  009E                     	;# 
  4048  009F                     	;# 
  4049  010C                     	;# 
  4050  010D                     	;# 
  4051  010E                     	;# 
  4052  0111                     	;# 
  4053  0112                     	;# 
  4054  0113                     	;# 
  4055  0114                     	;# 
  4056  0115                     	;# 
  4057  0116                     	;# 
  4058  0117                     	;# 
  4059  0118                     	;# 
  4060  0119                     	;# 
  4061  018C                     	;# 
  4062  018D                     	;# 
  4063  018E                     	;# 
  4064  0197                     	;# 
  4065  0199                     	;# 
  4066  0199                     	;# 
  4067  0199                     	;# 
  4068  019A                     	;# 
  4069  019A                     	;# 
  4070  019A                     	;# 
  4071  019B                     	;# 
  4072  019B                     	;# 
  4073  019B                     	;# 
  4074  019B                     	;# 
  4075  019B                     	;# 
  4076  019C                     	;# 
  4077  019C                     	;# 
  4078  019C                     	;# 
  4079  019D                     	;# 
  4080  019D                     	;# 
  4081  019D                     	;# 
  4082  019E                     	;# 
  4083  019E                     	;# 
  4084  019E                     	;# 
  4085  019F                     	;# 
  4086  019F                     	;# 
  4087  019F                     	;# 
  4088  019F                     	;# 
  4089  019F                     	;# 
  4090  020C                     	;# 
  4091  020D                     	;# 
  4092  020E                     	;# 
  4093  0211                     	;# 
  4094  0211                     	;# 
  4095  0212                     	;# 
  4096  0212                     	;# 
  4097  0213                     	;# 
  4098  0213                     	;# 
  4099  0214                     	;# 
  4100  0214                     	;# 
  4101  0215                     	;# 
  4102  0215                     	;# 
  4103  0215                     	;# 
  4104  0215                     	;# 
  4105  0216                     	;# 
  4106  0216                     	;# 
  4107  0217                     	;# 
  4108  0217                     	;# 
  4109  0219                     	;# 
  4110  021A                     	;# 
  4111  021B                     	;# 
  4112  021C                     	;# 
  4113  021D                     	;# 
  4114  021D                     	;# 
  4115  021E                     	;# 
  4116  021F                     	;# 
  4117  028C                     	;# 
  4118  028D                     	;# 
  4119  028E                     	;# 
  4120  0291                     	;# 
  4121  0291                     	;# 
  4122  0292                     	;# 
  4123  0293                     	;# 
  4124  0294                     	;# 
  4125  0295                     	;# 
  4126  0295                     	;# 
  4127  0296                     	;# 
  4128  0297                     	;# 
  4129  0298                     	;# 
  4130  029F                     	;# 
  4131  030C                     	;# 
  4132  030D                     	;# 
  4133  030E                     	;# 
  4134  0311                     	;# 
  4135  0311                     	;# 
  4136  0312                     	;# 
  4137  0313                     	;# 
  4138  0314                     	;# 
  4139  0315                     	;# 
  4140  0315                     	;# 
  4141  0316                     	;# 
  4142  0317                     	;# 
  4143  0318                     	;# 
  4144  038C                     	;# 
  4145  038D                     	;# 
  4146  038E                     	;# 
  4147  0391                     	;# 
  4148  0392                     	;# 
  4149  0393                     	;# 
  4150  0394                     	;# 
  4151  0395                     	;# 
  4152  0396                     	;# 
  4153  0397                     	;# 
  4154  0398                     	;# 
  4155  0399                     	;# 
  4156  039A                     	;# 
  4157  039C                     	;# 
  4158  039D                     	;# 
  4159  039E                     	;# 
  4160  039F                     	;# 
  4161  0411                     	;# 
  4162  0411                     	;# 
  4163  0412                     	;# 
  4164  0413                     	;# 
  4165  0414                     	;# 
  4166  0415                     	;# 
  4167  0416                     	;# 
  4168  0417                     	;# 
  4169  0418                     	;# 
  4170  0418                     	;# 
  4171  0419                     	;# 
  4172  041A                     	;# 
  4173  041B                     	;# 
  4174  041C                     	;# 
  4175  041D                     	;# 
  4176  041E                     	;# 
  4177  041F                     	;# 
  4178  0498                     	;# 
  4179  0498                     	;# 
  4180  0499                     	;# 
  4181  049A                     	;# 
  4182  049B                     	;# 
  4183  049B                     	;# 
  4184  049C                     	;# 
  4185  049D                     	;# 
  4186  049E                     	;# 
  4187  049F                     	;# 
  4188  0617                     	;# 
  4189  0618                     	;# 
  4190  0619                     	;# 
  4191  0619                     	;# 
  4192  061A                     	;# 
  4193  061B                     	;# 
  4194  061C                     	;# 
  4195  061C                     	;# 
  4196  061F                     	;# 
  4197  0691                     	;# 
  4198  0692                     	;# 
  4199  0693                     	;# 
  4200  0694                     	;# 
  4201  0695                     	;# 
  4202  0696                     	;# 
  4203  0697                     	;# 
  4204  0698                     	;# 
  4205  0699                     	;# 
  4206  0711                     	;# 
  4207  0712                     	;# 
  4208  0713                     	;# 
  4209  0714                     	;# 
  4210  0715                     	;# 
  4211  0716                     	;# 
  4212  0717                     	;# 
  4213  0718                     	;# 
  4214  0719                     	;# 
  4215  0891                     	;# 
  4216  0891                     	;# 
  4217  0891                     	;# 
  4218  0891                     	;# 
  4219  0891                     	;# 
  4220  0891                     	;# 
  4221  0892                     	;# 
  4222  0892                     	;# 
  4223  0892                     	;# 
  4224  0893                     	;# 
  4225  0893                     	;# 
  4226  0893                     	;# 
  4227  0893                     	;# 
  4228  0893                     	;# 
  4229  0893                     	;# 
  4230  0894                     	;# 
  4231  0894                     	;# 
  4232  0894                     	;# 
  4233  0895                     	;# 
  4234  0895                     	;# 
  4235  0895                     	;# 
  4236  0896                     	;# 
  4237  0896                     	;# 
  4238  0896                     	;# 
  4239  089B                     	;# 
  4240  0911                     	;# 
  4241  0912                     	;# 
  4242  0913                     	;# 
  4243  0914                     	;# 
  4244  0915                     	;# 
  4245  0916                     	;# 
  4246  0918                     	;# 
  4247  0919                     	;# 
  4248  091A                     	;# 
  4249  091B                     	;# 
  4250  091C                     	;# 
  4251  091D                     	;# 
  4252  091E                     	;# 
  4253  091F                     	;# 
  4254  0E0F                     	;# 
  4255  0E10                     	;# 
  4256  0E11                     	;# 
  4257  0E12                     	;# 
  4258  0E13                     	;# 
  4259  0E14                     	;# 
  4260  0E15                     	;# 
  4261  0E16                     	;# 
  4262  0E17                     	;# 
  4263  0E18                     	;# 
  4264  0E19                     	;# 
  4265  0E1A                     	;# 
  4266  0E1B                     	;# 
  4267  0E1C                     	;# 
  4268  0E1D                     	;# 
  4269  0E1E                     	;# 
  4270  0E1F                     	;# 
  4271  0E20                     	;# 
  4272  0E21                     	;# 
  4273  0E22                     	;# 
  4274  0E24                     	;# 
  4275  0E25                     	;# 
  4276  0E28                     	;# 
  4277  0E29                     	;# 
  4278  0E2A                     	;# 
  4279  0E2B                     	;# 
  4280  0E2C                     	;# 
  4281  0E2D                     	;# 
  4282  0E2E                     	;# 
  4283  0E2F                     	;# 
  4284  0E90                     	;# 
  4285  0E91                     	;# 
  4286  0E92                     	;# 
  4287  0E94                     	;# 
  4288  0E95                     	;# 
  4289  0E9C                     	;# 
  4290  0E9D                     	;# 
  4291  0E9E                     	;# 
  4292  0E9F                     	;# 
  4293  0EA0                     	;# 
  4294  0EA1                     	;# 
  4295  0EA2                     	;# 
  4296  0EA3                     	;# 
  4297  0EA4                     	;# 
  4298  0EA5                     	;# 
  4299  0EA6                     	;# 
  4300  0EA7                     	;# 
  4301  0F0F                     	;# 
  4302  0F10                     	;# 
  4303  0F11                     	;# 
  4304  0F12                     	;# 
  4305  0F13                     	;# 
  4306  0F14                     	;# 
  4307  0F15                     	;# 
  4308  0F16                     	;# 
  4309  0F17                     	;# 
  4310  0F18                     	;# 
  4311  0F19                     	;# 
  4312  0F1A                     	;# 
  4313  0F1B                     	;# 
  4314  0F1C                     	;# 
  4315  0F1D                     	;# 
  4316  0F1E                     	;# 
  4317  0F1F                     	;# 
  4318  0F20                     	;# 
  4319  0F21                     	;# 
  4320  0F22                     	;# 
  4321  0F23                     	;# 
  4322  0F24                     	;# 
  4323  0F25                     	;# 
  4324  0F26                     	;# 
  4325  0F27                     	;# 
  4326  0F28                     	;# 
  4327  0F29                     	;# 
  4328  0F2A                     	;# 
  4329  0F2B                     	;# 
  4330  0F2C                     	;# 
  4331  0F2D                     	;# 
  4332  0F2E                     	;# 
  4333  0F2F                     	;# 
  4334  0F30                     	;# 
  4335  0F31                     	;# 
  4336  0F32                     	;# 
  4337  0F33                     	;# 
  4338  0F34                     	;# 
  4339  0F35                     	;# 
  4340  0F36                     	;# 
  4341  0F37                     	;# 
  4342  0FE4                     	;# 
  4343  0FE5                     	;# 
  4344  0FE6                     	;# 
  4345  0FE7                     	;# 
  4346  0FE8                     	;# 
  4347  0FE9                     	;# 
  4348  0FEA                     	;# 
  4349  0FEB                     	;# 
  4350  0FED                     	;# 
  4351  0FEE                     	;# 
  4352  0FEF                     	;# 
  4353  0000                     	;# 
  4354  0001                     	;# 
  4355  0002                     	;# 
  4356  0003                     	;# 
  4357  0004                     	;# 
  4358  0005                     	;# 
  4359  0006                     	;# 
  4360  0007                     	;# 
  4361  0008                     	;# 
  4362  0009                     	;# 
  4363  000A                     	;# 
  4364  000B                     	;# 
  4365  000C                     	;# 
  4366  000D                     	;# 
  4367  000E                     	;# 
  4368  0010                     	;# 
  4369  0011                     	;# 
  4370  0012                     	;# 
  4371  0013                     	;# 
  4372  0014                     	;# 
  4373  0015                     	;# 
  4374  0015                     	;# 
  4375  0016                     	;# 
  4376  0016                     	;# 
  4377  0017                     	;# 
  4378  0018                     	;# 
  4379  0019                     	;# 
  4380  0019                     	;# 
  4381  001A                     	;# 
  4382  001B                     	;# 
  4383  001C                     	;# 
  4384  001D                     	;# 
  4385  001E                     	;# 
  4386  001F                     	;# 
  4387  008C                     	;# 
  4388  008D                     	;# 
  4389  008E                     	;# 
  4390  0090                     	;# 
  4391  0091                     	;# 
  4392  0092                     	;# 
  4393  0093                     	;# 
  4394  0094                     	;# 
  4395  0097                     	;# 
  4396  009B                     	;# 
  4397  009B                     	;# 
  4398  009C                     	;# 
  4399  009D                     	;# 
  4400  009E                     	;# 
  4401  009F                     	;# 
  4402  010C                     	;# 
  4403  010D                     	;# 
  4404  010E                     	;# 
  4405  0111                     	;# 
  4406  0112                     	;# 
  4407  0113                     	;# 
  4408  0114                     	;# 
  4409  0115                     	;# 
  4410  0116                     	;# 
  4411  0117                     	;# 
  4412  0118                     	;# 
  4413  0119                     	;# 
  4414  018C                     	;# 
  4415  018D                     	;# 
  4416  018E                     	;# 
  4417  0197                     	;# 
  4418  0199                     	;# 
  4419  0199                     	;# 
  4420  0199                     	;# 
  4421  019A                     	;# 
  4422  019A                     	;# 
  4423  019A                     	;# 
  4424  019B                     	;# 
  4425  019B                     	;# 
  4426  019B                     	;# 
  4427  019B                     	;# 
  4428  019B                     	;# 
  4429  019C                     	;# 
  4430  019C                     	;# 
  4431  019C                     	;# 
  4432  019D                     	;# 
  4433  019D                     	;# 
  4434  019D                     	;# 
  4435  019E                     	;# 
  4436  019E                     	;# 
  4437  019E                     	;# 
  4438  019F                     	;# 
  4439  019F                     	;# 
  4440  019F                     	;# 
  4441  019F                     	;# 
  4442  019F                     	;# 
  4443  020C                     	;# 
  4444  020D                     	;# 
  4445  020E                     	;# 
  4446  0211                     	;# 
  4447  0211                     	;# 
  4448  0212                     	;# 
  4449  0212                     	;# 
  4450  0213                     	;# 
  4451  0213                     	;# 
  4452  0214                     	;# 
  4453  0214                     	;# 
  4454  0215                     	;# 
  4455  0215                     	;# 
  4456  0215                     	;# 
  4457  0215                     	;# 
  4458  0216                     	;# 
  4459  0216                     	;# 
  4460  0217                     	;# 
  4461  0217                     	;# 
  4462  0219                     	;# 
  4463  021A                     	;# 
  4464  021B                     	;# 
  4465  021C                     	;# 
  4466  021D                     	;# 
  4467  021D                     	;# 
  4468  021E                     	;# 
  4469  021F                     	;# 
  4470  028C                     	;# 
  4471  028D                     	;# 
  4472  028E                     	;# 
  4473  0291                     	;# 
  4474  0291                     	;# 
  4475  0292                     	;# 
  4476  0293                     	;# 
  4477  0294                     	;# 
  4478  0295                     	;# 
  4479  0295                     	;# 
  4480  0296                     	;# 
  4481  0297                     	;# 
  4482  0298                     	;# 
  4483  029F                     	;# 
  4484  030C                     	;# 
  4485  030D                     	;# 
  4486  030E                     	;# 
  4487  0311                     	;# 
  4488  0311                     	;# 
  4489  0312                     	;# 
  4490  0313                     	;# 
  4491  0314                     	;# 
  4492  0315                     	;# 
  4493  0315                     	;# 
  4494  0316                     	;# 
  4495  0317                     	;# 
  4496  0318                     	;# 
  4497  038C                     	;# 
  4498  038D                     	;# 
  4499  038E                     	;# 
  4500  0391                     	;# 
  4501  0392                     	;# 
  4502  0393                     	;# 
  4503  0394                     	;# 
  4504  0395                     	;# 
  4505  0396                     	;# 
  4506  0397                     	;# 
  4507  0398                     	;# 
  4508  0399                     	;# 
  4509  039A                     	;# 
  4510  039C                     	;# 
  4511  039D                     	;# 
  4512  039E                     	;# 
  4513  039F                     	;# 
  4514  0411                     	;# 
  4515  0411                     	;# 
  4516  0412                     	;# 
  4517  0413                     	;# 
  4518  0414                     	;# 
  4519  0415                     	;# 
  4520  0416                     	;# 
  4521  0417                     	;# 
  4522  0418                     	;# 
  4523  0418                     	;# 
  4524  0419                     	;# 
  4525  041A                     	;# 
  4526  041B                     	;# 
  4527  041C                     	;# 
  4528  041D                     	;# 
  4529  041E                     	;# 
  4530  041F                     	;# 
  4531  0498                     	;# 
  4532  0498                     	;# 
  4533  0499                     	;# 
  4534  049A                     	;# 
  4535  049B                     	;# 
  4536  049B                     	;# 
  4537  049C                     	;# 
  4538  049D                     	;# 
  4539  049E                     	;# 
  4540  049F                     	;# 
  4541  0617                     	;# 
  4542  0618                     	;# 
  4543  0619                     	;# 
  4544  0619                     	;# 
  4545  061A                     	;# 
  4546  061B                     	;# 
  4547  061C                     	;# 
  4548  061C                     	;# 
  4549  061F                     	;# 
  4550  0691                     	;# 
  4551  0692                     	;# 
  4552  0693                     	;# 
  4553  0694                     	;# 
  4554  0695                     	;# 
  4555  0696                     	;# 
  4556  0697                     	;# 
  4557  0698                     	;# 
  4558  0699                     	;# 
  4559  0711                     	;# 
  4560  0712                     	;# 
  4561  0713                     	;# 
  4562  0714                     	;# 
  4563  0715                     	;# 
  4564  0716                     	;# 
  4565  0717                     	;# 
  4566  0718                     	;# 
  4567  0719                     	;# 
  4568  0891                     	;# 
  4569  0891                     	;# 
  4570  0891                     	;# 
  4571  0891                     	;# 
  4572  0891                     	;# 
  4573  0891                     	;# 
  4574  0892                     	;# 
  4575  0892                     	;# 
  4576  0892                     	;# 
  4577  0893                     	;# 
  4578  0893                     	;# 
  4579  0893                     	;# 
  4580  0893                     	;# 
  4581  0893                     	;# 
  4582  0893                     	;# 
  4583  0894                     	;# 
  4584  0894                     	;# 
  4585  0894                     	;# 
  4586  0895                     	;# 
  4587  0895                     	;# 
  4588  0895                     	;# 
  4589  0896                     	;# 
  4590  0896                     	;# 
  4591  0896                     	;# 
  4592  089B                     	;# 
  4593  0911                     	;# 
  4594  0912                     	;# 
  4595  0913                     	;# 
  4596  0914                     	;# 
  4597  0915                     	;# 
  4598  0916                     	;# 
  4599  0918                     	;# 
  4600  0919                     	;# 
  4601  091A                     	;# 
  4602  091B                     	;# 
  4603  091C                     	;# 
  4604  091D                     	;# 
  4605  091E                     	;# 
  4606  091F                     	;# 
  4607  0E0F                     	;# 
  4608  0E10                     	;# 
  4609  0E11                     	;# 
  4610  0E12                     	;# 
  4611  0E13                     	;# 
  4612  0E14                     	;# 
  4613  0E15                     	;# 
  4614  0E16                     	;# 
  4615  0E17                     	;# 
  4616  0E18                     	;# 
  4617  0E19                     	;# 
  4618  0E1A                     	;# 
  4619  0E1B                     	;# 
  4620  0E1C                     	;# 
  4621  0E1D                     	;# 
  4622  0E1E                     	;# 
  4623  0E1F                     	;# 
  4624  0E20                     	;# 
  4625  0E21                     	;# 
  4626  0E22                     	;# 
  4627  0E24                     	;# 
  4628  0E25                     	;# 
  4629  0E28                     	;# 
  4630  0E29                     	;# 
  4631  0E2A                     	;# 
  4632  0E2B                     	;# 
  4633  0E2C                     	;# 
  4634  0E2D                     	;# 
  4635  0E2E                     	;# 
  4636  0E2F                     	;# 
  4637  0E90                     	;# 
  4638  0E91                     	;# 
  4639  0E92                     	;# 
  4640  0E94                     	;# 
  4641  0E95                     	;# 
  4642  0E9C                     	;# 
  4643  0E9D                     	;# 
  4644  0E9E                     	;# 
  4645  0E9F                     	;# 
  4646  0EA0                     	;# 
  4647  0EA1                     	;# 
  4648  0EA2                     	;# 
  4649  0EA3                     	;# 
  4650  0EA4                     	;# 
  4651  0EA5                     	;# 
  4652  0EA6                     	;# 
  4653  0EA7                     	;# 
  4654  0F0F                     	;# 
  4655  0F10                     	;# 
  4656  0F11                     	;# 
  4657  0F12                     	;# 
  4658  0F13                     	;# 
  4659  0F14                     	;# 
  4660  0F15                     	;# 
  4661  0F16                     	;# 
  4662  0F17                     	;# 
  4663  0F18                     	;# 
  4664  0F19                     	;# 
  4665  0F1A                     	;# 
  4666  0F1B                     	;# 
  4667  0F1C                     	;# 
  4668  0F1D                     	;# 
  4669  0F1E                     	;# 
  4670  0F1F                     	;# 
  4671  0F20                     	;# 
  4672  0F21                     	;# 
  4673  0F22                     	;# 
  4674  0F23                     	;# 
  4675  0F24                     	;# 
  4676  0F25                     	;# 
  4677  0F26                     	;# 
  4678  0F27                     	;# 
  4679  0F28                     	;# 
  4680  0F29                     	;# 
  4681  0F2A                     	;# 
  4682  0F2B                     	;# 
  4683  0F2C                     	;# 
  4684  0F2D                     	;# 
  4685  0F2E                     	;# 
  4686  0F2F                     	;# 
  4687  0F30                     	;# 
  4688  0F31                     	;# 
  4689  0F32                     	;# 
  4690  0F33                     	;# 
  4691  0F34                     	;# 
  4692  0F35                     	;# 
  4693  0F36                     	;# 
  4694  0F37                     	;# 
  4695  0FE4                     	;# 
  4696  0FE5                     	;# 
  4697  0FE6                     	;# 
  4698  0FE7                     	;# 
  4699  0FE8                     	;# 
  4700  0FE9                     	;# 
  4701  0FEA                     	;# 
  4702  0FEB                     	;# 
  4703  0FED                     	;# 
  4704  0FEE                     	;# 
  4705  0FEF                     	;# 
  4706  0000                     	;# 
  4707  0001                     	;# 
  4708  0002                     	;# 
  4709  0003                     	;# 
  4710  0004                     	;# 
  4711  0005                     	;# 
  4712  0006                     	;# 
  4713  0007                     	;# 
  4714  0008                     	;# 
  4715  0009                     	;# 
  4716  000A                     	;# 
  4717  000B                     	;# 
  4718  000C                     	;# 
  4719  000D                     	;# 
  4720  000E                     	;# 
  4721  0010                     	;# 
  4722  0011                     	;# 
  4723  0012                     	;# 
  4724  0013                     	;# 
  4725  0014                     	;# 
  4726  0015                     	;# 
  4727  0015                     	;# 
  4728  0016                     	;# 
  4729  0016                     	;# 
  4730  0017                     	;# 
  4731  0018                     	;# 
  4732  0019                     	;# 
  4733  0019                     	;# 
  4734  001A                     	;# 
  4735  001B                     	;# 
  4736  001C                     	;# 
  4737  001D                     	;# 
  4738  001E                     	;# 
  4739  001F                     	;# 
  4740  008C                     	;# 
  4741  008D                     	;# 
  4742  008E                     	;# 
  4743  0090                     	;# 
  4744  0091                     	;# 
  4745  0092                     	;# 
  4746  0093                     	;# 
  4747  0094                     	;# 
  4748  0097                     	;# 
  4749  009B                     	;# 
  4750  009B                     	;# 
  4751  009C                     	;# 
  4752  009D                     	;# 
  4753  009E                     	;# 
  4754  009F                     	;# 
  4755  010C                     	;# 
  4756  010D                     	;# 
  4757  010E                     	;# 
  4758  0111                     	;# 
  4759  0112                     	;# 
  4760  0113                     	;# 
  4761  0114                     	;# 
  4762  0115                     	;# 
  4763  0116                     	;# 
  4764  0117                     	;# 
  4765  0118                     	;# 
  4766  0119                     	;# 
  4767  018C                     	;# 
  4768  018D                     	;# 
  4769  018E                     	;# 
  4770  0197                     	;# 
  4771  0199                     	;# 
  4772  0199                     	;# 
  4773  0199                     	;# 
  4774  019A                     	;# 
  4775  019A                     	;# 
  4776  019A                     	;# 
  4777  019B                     	;# 
  4778  019B                     	;# 
  4779  019B                     	;# 
  4780  019B                     	;# 
  4781  019B                     	;# 
  4782  019C                     	;# 
  4783  019C                     	;# 
  4784  019C                     	;# 
  4785  019D                     	;# 
  4786  019D                     	;# 
  4787  019D                     	;# 
  4788  019E                     	;# 
  4789  019E                     	;# 
  4790  019E                     	;# 
  4791  019F                     	;# 
  4792  019F                     	;# 
  4793  019F                     	;# 
  4794  019F                     	;# 
  4795  019F                     	;# 
  4796  020C                     	;# 
  4797  020D                     	;# 
  4798  020E                     	;# 
  4799  0211                     	;# 
  4800  0211                     	;# 
  4801  0212                     	;# 
  4802  0212                     	;# 
  4803  0213                     	;# 
  4804  0213                     	;# 
  4805  0214                     	;# 
  4806  0214                     	;# 
  4807  0215                     	;# 
  4808  0215                     	;# 
  4809  0215                     	;# 
  4810  0215                     	;# 
  4811  0216                     	;# 
  4812  0216                     	;# 
  4813  0217                     	;# 
  4814  0217                     	;# 
  4815  0219                     	;# 
  4816  021A                     	;# 
  4817  021B                     	;# 
  4818  021C                     	;# 
  4819  021D                     	;# 
  4820  021D                     	;# 
  4821  021E                     	;# 
  4822  021F                     	;# 
  4823  028C                     	;# 
  4824  028D                     	;# 
  4825  028E                     	;# 
  4826  0291                     	;# 
  4827  0291                     	;# 
  4828  0292                     	;# 
  4829  0293                     	;# 
  4830  0294                     	;# 
  4831  0295                     	;# 
  4832  0295                     	;# 
  4833  0296                     	;# 
  4834  0297                     	;# 
  4835  0298                     	;# 
  4836  029F                     	;# 
  4837  030C                     	;# 
  4838  030D                     	;# 
  4839  030E                     	;# 
  4840  0311                     	;# 
  4841  0311                     	;# 
  4842  0312                     	;# 
  4843  0313                     	;# 
  4844  0314                     	;# 
  4845  0315                     	;# 
  4846  0315                     	;# 
  4847  0316                     	;# 
  4848  0317                     	;# 
  4849  0318                     	;# 
  4850  038C                     	;# 
  4851  038D                     	;# 
  4852  038E                     	;# 
  4853  0391                     	;# 
  4854  0392                     	;# 
  4855  0393                     	;# 
  4856  0394                     	;# 
  4857  0395                     	;# 
  4858  0396                     	;# 
  4859  0397                     	;# 
  4860  0398                     	;# 
  4861  0399                     	;# 
  4862  039A                     	;# 
  4863  039C                     	;# 
  4864  039D                     	;# 
  4865  039E                     	;# 
  4866  039F                     	;# 
  4867  0411                     	;# 
  4868  0411                     	;# 
  4869  0412                     	;# 
  4870  0413                     	;# 
  4871  0414                     	;# 
  4872  0415                     	;# 
  4873  0416                     	;# 
  4874  0417                     	;# 
  4875  0418                     	;# 
  4876  0418                     	;# 
  4877  0419                     	;# 
  4878  041A                     	;# 
  4879  041B                     	;# 
  4880  041C                     	;# 
  4881  041D                     	;# 
  4882  041E                     	;# 
  4883  041F                     	;# 
  4884  0498                     	;# 
  4885  0498                     	;# 
  4886  0499                     	;# 
  4887  049A                     	;# 
  4888  049B                     	;# 
  4889  049B                     	;# 
  4890  049C                     	;# 
  4891  049D                     	;# 
  4892  049E                     	;# 
  4893  049F                     	;# 
  4894  0617                     	;# 
  4895  0618                     	;# 
  4896  0619                     	;# 
  4897  0619                     	;# 
  4898  061A                     	;# 
  4899  061B                     	;# 
  4900  061C                     	;# 
  4901  061C                     	;# 
  4902  061F                     	;# 
  4903  0691                     	;# 
  4904  0692                     	;# 
  4905  0693                     	;# 
  4906  0694                     	;# 
  4907  0695                     	;# 
  4908  0696                     	;# 
  4909  0697                     	;# 
  4910  0698                     	;# 
  4911  0699                     	;# 
  4912  0711                     	;# 
  4913  0712                     	;# 
  4914  0713                     	;# 
  4915  0714                     	;# 
  4916  0715                     	;# 
  4917  0716                     	;# 
  4918  0717                     	;# 
  4919  0718                     	;# 
  4920  0719                     	;# 
  4921  0891                     	;# 
  4922  0891                     	;# 
  4923  0891                     	;# 
  4924  0891                     	;# 
  4925  0891                     	;# 
  4926  0891                     	;# 
  4927  0892                     	;# 
  4928  0892                     	;# 
  4929  0892                     	;# 
  4930  0893                     	;# 
  4931  0893                     	;# 
  4932  0893                     	;# 
  4933  0893                     	;# 
  4934  0893                     	;# 
  4935  0893                     	;# 
  4936  0894                     	;# 
  4937  0894                     	;# 
  4938  0894                     	;# 
  4939  0895                     	;# 
  4940  0895                     	;# 
  4941  0895                     	;# 
  4942  0896                     	;# 
  4943  0896                     	;# 
  4944  0896                     	;# 
  4945  089B                     	;# 
  4946  0911                     	;# 
  4947  0912                     	;# 
  4948  0913                     	;# 
  4949  0914                     	;# 
  4950  0915                     	;# 
  4951  0916                     	;# 
  4952  0918                     	;# 
  4953  0919                     	;# 
  4954  091A                     	;# 
  4955  091B                     	;# 
  4956  091C                     	;# 
  4957  091D                     	;# 
  4958  091E                     	;# 
  4959  091F                     	;# 
  4960  0E0F                     	;# 
  4961  0E10                     	;# 
  4962  0E11                     	;# 
  4963  0E12                     	;# 
  4964  0E13                     	;# 
  4965  0E14                     	;# 
  4966  0E15                     	;# 
  4967  0E16                     	;# 
  4968  0E17                     	;# 
  4969  0E18                     	;# 
  4970  0E19                     	;# 
  4971  0E1A                     	;# 
  4972  0E1B                     	;# 
  4973  0E1C                     	;# 
  4974  0E1D                     	;# 
  4975  0E1E                     	;# 
  4976  0E1F                     	;# 
  4977  0E20                     	;# 
  4978  0E21                     	;# 
  4979  0E22                     	;# 
  4980  0E24                     	;# 
  4981  0E25                     	;# 
  4982  0E28                     	;# 
  4983  0E29                     	;# 
  4984  0E2A                     	;# 
  4985  0E2B                     	;# 
  4986  0E2C                     	;# 
  4987  0E2D                     	;# 
  4988  0E2E                     	;# 
  4989  0E2F                     	;# 
  4990  0E90                     	;# 
  4991  0E91                     	;# 
  4992  0E92                     	;# 
  4993  0E94                     	;# 
  4994  0E95                     	;# 
  4995  0E9C                     	;# 
  4996  0E9D                     	;# 
  4997  0E9E                     	;# 
  4998  0E9F                     	;# 
  4999  0EA0                     	;# 
  5000  0EA1                     	;# 
  5001  0EA2                     	;# 
  5002  0EA3                     	;# 
  5003  0EA4                     	;# 
  5004  0EA5                     	;# 
  5005  0EA6                     	;# 
  5006  0EA7                     	;# 
  5007  0F0F                     	;# 
  5008  0F10                     	;# 
  5009  0F11                     	;# 
  5010  0F12                     	;# 
  5011  0F13                     	;# 
  5012  0F14                     	;# 
  5013  0F15                     	;# 
  5014  0F16                     	;# 
  5015  0F17                     	;# 
  5016  0F18                     	;# 
  5017  0F19                     	;# 
  5018  0F1A                     	;# 
  5019  0F1B                     	;# 
  5020  0F1C                     	;# 
  5021  0F1D                     	;# 
  5022  0F1E                     	;# 
  5023  0F1F                     	;# 
  5024  0F20                     	;# 
  5025  0F21                     	;# 
  5026  0F22                     	;# 
  5027  0F23                     	;# 
  5028  0F24                     	;# 
  5029  0F25                     	;# 
  5030  0F26                     	;# 
  5031  0F27                     	;# 
  5032  0F28                     	;# 
  5033  0F29                     	;# 
  5034  0F2A                     	;# 
  5035  0F2B                     	;# 
  5036  0F2C                     	;# 
  5037  0F2D                     	;# 
  5038  0F2E                     	;# 
  5039  0F2F                     	;# 
  5040  0F30                     	;# 
  5041  0F31                     	;# 
  5042  0F32                     	;# 
  5043  0F33                     	;# 
  5044  0F34                     	;# 
  5045  0F35                     	;# 
  5046  0F36                     	;# 
  5047  0F37                     	;# 
  5048  0FE4                     	;# 
  5049  0FE5                     	;# 
  5050  0FE6                     	;# 
  5051  0FE7                     	;# 
  5052  0FE8                     	;# 
  5053  0FE9                     	;# 
  5054  0FEA                     	;# 
  5055  0FEB                     	;# 
  5056  0FED                     	;# 
  5057  0FEE                     	;# 
  5058  0FEF                     	;# 
  5059  0000                     	;# 
  5060  0001                     	;# 
  5061  0002                     	;# 
  5062  0003                     	;# 
  5063  0004                     	;# 
  5064  0005                     	;# 
  5065  0006                     	;# 
  5066  0007                     	;# 
  5067  0008                     	;# 
  5068  0009                     	;# 
  5069  000A                     	;# 
  5070  000B                     	;# 
  5071  000C                     	;# 
  5072  000D                     	;# 
  5073  000E                     	;# 
  5074  0010                     	;# 
  5075  0011                     	;# 
  5076  0012                     	;# 
  5077  0013                     	;# 
  5078  0014                     	;# 
  5079  0015                     	;# 
  5080  0015                     	;# 
  5081  0016                     	;# 
  5082  0016                     	;# 
  5083  0017                     	;# 
  5084  0018                     	;# 
  5085  0019                     	;# 
  5086  0019                     	;# 
  5087  001A                     	;# 
  5088  001B                     	;# 
  5089  001C                     	;# 
  5090  001D                     	;# 
  5091  001E                     	;# 
  5092  001F                     	;# 
  5093  008C                     	;# 
  5094  008D                     	;# 
  5095  008E                     	;# 
  5096  0090                     	;# 
  5097  0091                     	;# 
  5098  0092                     	;# 
  5099  0093                     	;# 
  5100  0094                     	;# 
  5101  0097                     	;# 
  5102  009B                     	;# 
  5103  009B                     	;# 
  5104  009C                     	;# 
  5105  009D                     	;# 
  5106  009E                     	;# 
  5107  009F                     	;# 
  5108  010C                     	;# 
  5109  010D                     	;# 
  5110  010E                     	;# 
  5111  0111                     	;# 
  5112  0112                     	;# 
  5113  0113                     	;# 
  5114  0114                     	;# 
  5115  0115                     	;# 
  5116  0116                     	;# 
  5117  0117                     	;# 
  5118  0118                     	;# 
  5119  0119                     	;# 
  5120  018C                     	;# 
  5121  018D                     	;# 
  5122  018E                     	;# 
  5123  0197                     	;# 
  5124  0199                     	;# 
  5125  0199                     	;# 
  5126  0199                     	;# 
  5127  019A                     	;# 
  5128  019A                     	;# 
  5129  019A                     	;# 
  5130  019B                     	;# 
  5131  019B                     	;# 
  5132  019B                     	;# 
  5133  019B                     	;# 
  5134  019B                     	;# 
  5135  019C                     	;# 
  5136  019C                     	;# 
  5137  019C                     	;# 
  5138  019D                     	;# 
  5139  019D                     	;# 
  5140  019D                     	;# 
  5141  019E                     	;# 
  5142  019E                     	;# 
  5143  019E                     	;# 
  5144  019F                     	;# 
  5145  019F                     	;# 
  5146  019F                     	;# 
  5147  019F                     	;# 
  5148  019F                     	;# 
  5149  020C                     	;# 
  5150  020D                     	;# 
  5151  020E                     	;# 
  5152  0211                     	;# 
  5153  0211                     	;# 
  5154  0212                     	;# 
  5155  0212                     	;# 
  5156  0213                     	;# 
  5157  0213                     	;# 
  5158  0214                     	;# 
  5159  0214                     	;# 
  5160  0215                     	;# 
  5161  0215                     	;# 
  5162  0215                     	;# 
  5163  0215                     	;# 
  5164  0216                     	;# 
  5165  0216                     	;# 
  5166  0217                     	;# 
  5167  0217                     	;# 
  5168  0219                     	;# 
  5169  021A                     	;# 
  5170  021B                     	;# 
  5171  021C                     	;# 
  5172  021D                     	;# 
  5173  021D                     	;# 
  5174  021E                     	;# 
  5175  021F                     	;# 
  5176  028C                     	;# 
  5177  028D                     	;# 
  5178  028E                     	;# 
  5179  0291                     	;# 
  5180  0291                     	;# 
  5181  0292                     	;# 
  5182  0293                     	;# 
  5183  0294                     	;# 
  5184  0295                     	;# 
  5185  0295                     	;# 
  5186  0296                     	;# 
  5187  0297                     	;# 
  5188  0298                     	;# 
  5189  029F                     	;# 
  5190  030C                     	;# 
  5191  030D                     	;# 
  5192  030E                     	;# 
  5193  0311                     	;# 
  5194  0311                     	;# 
  5195  0312                     	;# 
  5196  0313                     	;# 
  5197  0314                     	;# 
  5198  0315                     	;# 
  5199  0315                     	;# 
  5200  0316                     	;# 
  5201  0317                     	;# 
  5202  0318                     	;# 
  5203  038C                     	;# 
  5204  038D                     	;# 
  5205  038E                     	;# 
  5206  0391                     	;# 
  5207  0392                     	;# 
  5208  0393                     	;# 
  5209  0394                     	;# 
  5210  0395                     	;# 
  5211  0396                     	;# 
  5212  0397                     	;# 
  5213  0398                     	;# 
  5214  0399                     	;# 
  5215  039A                     	;# 
  5216  039C                     	;# 
  5217  039D                     	;# 
  5218  039E                     	;# 
  5219  039F                     	;# 
  5220  0411                     	;# 
  5221  0411                     	;# 
  5222  0412                     	;# 
  5223  0413                     	;# 
  5224  0414                     	;# 
  5225  0415                     	;# 
  5226  0416                     	;# 
  5227  0417                     	;# 
  5228  0418                     	;# 
  5229  0418                     	;# 
  5230  0419                     	;# 
  5231  041A                     	;# 
  5232  041B                     	;# 
  5233  041C                     	;# 
  5234  041D                     	;# 
  5235  041E                     	;# 
  5236  041F                     	;# 
  5237  0498                     	;# 
  5238  0498                     	;# 
  5239  0499                     	;# 
  5240  049A                     	;# 
  5241  049B                     	;# 
  5242  049B                     	;# 
  5243  049C                     	;# 
  5244  049D                     	;# 
  5245  049E                     	;# 
  5246  049F                     	;# 
  5247  0617                     	;# 
  5248  0618                     	;# 
  5249  0619                     	;# 
  5250  0619                     	;# 
  5251  061A                     	;# 
  5252  061B                     	;# 
  5253  061C                     	;# 
  5254  061C                     	;# 
  5255  061F                     	;# 
  5256  0691                     	;# 
  5257  0692                     	;# 
  5258  0693                     	;# 
  5259  0694                     	;# 
  5260  0695                     	;# 
  5261  0696                     	;# 
  5262  0697                     	;# 
  5263  0698                     	;# 
  5264  0699                     	;# 
  5265  0711                     	;# 
  5266  0712                     	;# 
  5267  0713                     	;# 
  5268  0714                     	;# 
  5269  0715                     	;# 
  5270  0716                     	;# 
  5271  0717                     	;# 
  5272  0718                     	;# 
  5273  0719                     	;# 
  5274  0891                     	;# 
  5275  0891                     	;# 
  5276  0891                     	;# 
  5277  0891                     	;# 
  5278  0891                     	;# 
  5279  0891                     	;# 
  5280  0892                     	;# 
  5281  0892                     	;# 
  5282  0892                     	;# 
  5283  0893                     	;# 
  5284  0893                     	;# 
  5285  0893                     	;# 
  5286  0893                     	;# 
  5287  0893                     	;# 
  5288  0893                     	;# 
  5289  0894                     	;# 
  5290  0894                     	;# 
  5291  0894                     	;# 
  5292  0895                     	;# 
  5293  0895                     	;# 
  5294  0895                     	;# 
  5295  0896                     	;# 
  5296  0896                     	;# 
  5297  0896                     	;# 
  5298  089B                     	;# 
  5299  0911                     	;# 
  5300  0912                     	;# 
  5301  0913                     	;# 
  5302  0914                     	;# 
  5303  0915                     	;# 
  5304  0916                     	;# 
  5305  0918                     	;# 
  5306  0919                     	;# 
  5307  091A                     	;# 
  5308  091B                     	;# 
  5309  091C                     	;# 
  5310  091D                     	;# 
  5311  091E                     	;# 
  5312  091F                     	;# 
  5313  0E0F                     	;# 
  5314  0E10                     	;# 
  5315  0E11                     	;# 
  5316  0E12                     	;# 
  5317  0E13                     	;# 
  5318  0E14                     	;# 
  5319  0E15                     	;# 
  5320  0E16                     	;# 
  5321  0E17                     	;# 
  5322  0E18                     	;# 
  5323  0E19                     	;# 
  5324  0E1A                     	;# 
  5325  0E1B                     	;# 
  5326  0E1C                     	;# 
  5327  0E1D                     	;# 
  5328  0E1E                     	;# 
  5329  0E1F                     	;# 
  5330  0E20                     	;# 
  5331  0E21                     	;# 
  5332  0E22                     	;# 
  5333  0E24                     	;# 
  5334  0E25                     	;# 
  5335  0E28                     	;# 
  5336  0E29                     	;# 
  5337  0E2A                     	;# 
  5338  0E2B                     	;# 
  5339  0E2C                     	;# 
  5340  0E2D                     	;# 
  5341  0E2E                     	;# 
  5342  0E2F                     	;# 
  5343  0E90                     	;# 
  5344  0E91                     	;# 
  5345  0E92                     	;# 
  5346  0E94                     	;# 
  5347  0E95                     	;# 
  5348  0E9C                     	;# 
  5349  0E9D                     	;# 
  5350  0E9E                     	;# 
  5351  0E9F                     	;# 
  5352  0EA0                     	;# 
  5353  0EA1                     	;# 
  5354  0EA2                     	;# 
  5355  0EA3                     	;# 
  5356  0EA4                     	;# 
  5357  0EA5                     	;# 
  5358  0EA6                     	;# 
  5359  0EA7                     	;# 
  5360  0F0F                     	;# 
  5361  0F10                     	;# 
  5362  0F11                     	;# 
  5363  0F12                     	;# 
  5364  0F13                     	;# 
  5365  0F14                     	;# 
  5366  0F15                     	;# 
  5367  0F16                     	;# 
  5368  0F17                     	;# 
  5369  0F18                     	;# 
  5370  0F19                     	;# 
  5371  0F1A                     	;# 
  5372  0F1B                     	;# 
  5373  0F1C                     	;# 
  5374  0F1D                     	;# 
  5375  0F1E                     	;# 
  5376  0F1F                     	;# 
  5377  0F20                     	;# 
  5378  0F21                     	;# 
  5379  0F22                     	;# 
  5380  0F23                     	;# 
  5381  0F24                     	;# 
  5382  0F25                     	;# 
  5383  0F26                     	;# 
  5384  0F27                     	;# 
  5385  0F28                     	;# 
  5386  0F29                     	;# 
  5387  0F2A                     	;# 
  5388  0F2B                     	;# 
  5389  0F2C                     	;# 
  5390  0F2D                     	;# 
  5391  0F2E                     	;# 
  5392  0F2F                     	;# 
  5393  0F30                     	;# 
  5394  0F31                     	;# 
  5395  0F32                     	;# 
  5396  0F33                     	;# 
  5397  0F34                     	;# 
  5398  0F35                     	;# 
  5399  0F36                     	;# 
  5400  0F37                     	;# 
  5401  0FE4                     	;# 
  5402  0FE5                     	;# 
  5403  0FE6                     	;# 
  5404  0FE7                     	;# 
  5405  0FE8                     	;# 
  5406  0FE9                     	;# 
  5407  0FEA                     	;# 
  5408  0FEB                     	;# 
  5409  0FED                     	;# 
  5410  0FEE                     	;# 
  5411  0FEF                     	;# 
  5412  0000                     	;# 
  5413  0001                     	;# 
  5414  0002                     	;# 
  5415  0003                     	;# 
  5416  0004                     	;# 
  5417  0005                     	;# 
  5418  0006                     	;# 
  5419  0007                     	;# 
  5420  0008                     	;# 
  5421  0009                     	;# 
  5422  000A                     	;# 
  5423  000B                     	;# 
  5424  000C                     	;# 
  5425  000D                     	;# 
  5426  000E                     	;# 
  5427  0010                     	;# 
  5428  0011                     	;# 
  5429  0012                     	;# 
  5430  0013                     	;# 
  5431  0014                     	;# 
  5432  0015                     	;# 
  5433  0015                     	;# 
  5434  0016                     	;# 
  5435  0016                     	;# 
  5436  0017                     	;# 
  5437  0018                     	;# 
  5438  0019                     	;# 
  5439  0019                     	;# 
  5440  001A                     	;# 
  5441  001B                     	;# 
  5442  001C                     	;# 
  5443  001D                     	;# 
  5444  001E                     	;# 
  5445  001F                     	;# 
  5446  008C                     	;# 
  5447  008D                     	;# 
  5448  008E                     	;# 
  5449  0090                     	;# 
  5450  0091                     	;# 
  5451  0092                     	;# 
  5452  0093                     	;# 
  5453  0094                     	;# 
  5454  0097                     	;# 
  5455  009B                     	;# 
  5456  009B                     	;# 
  5457  009C                     	;# 
  5458  009D                     	;# 
  5459  009E                     	;# 
  5460  009F                     	;# 
  5461  010C                     	;# 
  5462  010D                     	;# 
  5463  010E                     	;# 
  5464  0111                     	;# 
  5465  0112                     	;# 
  5466  0113                     	;# 
  5467  0114                     	;# 
  5468  0115                     	;# 
  5469  0116                     	;# 
  5470  0117                     	;# 
  5471  0118                     	;# 
  5472  0119                     	;# 
  5473  018C                     	;# 
  5474  018D                     	;# 
  5475  018E                     	;# 
  5476  0197                     	;# 
  5477  0199                     	;# 
  5478  0199                     	;# 
  5479  0199                     	;# 
  5480  019A                     	;# 
  5481  019A                     	;# 
  5482  019A                     	;# 
  5483  019B                     	;# 
  5484  019B                     	;# 
  5485  019B                     	;# 
  5486  019B                     	;# 
  5487  019B                     	;# 
  5488  019C                     	;# 
  5489  019C                     	;# 
  5490  019C                     	;# 
  5491  019D                     	;# 
  5492  019D                     	;# 
  5493  019D                     	;# 
  5494  019E                     	;# 
  5495  019E                     	;# 
  5496  019E                     	;# 
  5497  019F                     	;# 
  5498  019F                     	;# 
  5499  019F                     	;# 
  5500  019F                     	;# 
  5501  019F                     	;# 
  5502  020C                     	;# 
  5503  020D                     	;# 
  5504  020E                     	;# 
  5505  0211                     	;# 
  5506  0211                     	;# 
  5507  0212                     	;# 
  5508  0212                     	;# 
  5509  0213                     	;# 
  5510  0213                     	;# 
  5511  0214                     	;# 
  5512  0214                     	;# 
  5513  0215                     	;# 
  5514  0215                     	;# 
  5515  0215                     	;# 
  5516  0215                     	;# 
  5517  0216                     	;# 
  5518  0216                     	;# 
  5519  0217                     	;# 
  5520  0217                     	;# 
  5521  0219                     	;# 
  5522  021A                     	;# 
  5523  021B                     	;# 
  5524  021C                     	;# 
  5525  021D                     	;# 
  5526  021D                     	;# 
  5527  021E                     	;# 
  5528  021F                     	;# 
  5529  028C                     	;# 
  5530  028D                     	;# 
  5531  028E                     	;# 
  5532  0291                     	;# 
  5533  0291                     	;# 
  5534  0292                     	;# 
  5535  0293                     	;# 
  5536  0294                     	;# 
  5537  0295                     	;# 
  5538  0295                     	;# 
  5539  0296                     	;# 
  5540  0297                     	;# 
  5541  0298                     	;# 
  5542  029F                     	;# 
  5543  030C                     	;# 
  5544  030D                     	;# 
  5545  030E                     	;# 
  5546  0311                     	;# 
  5547  0311                     	;# 
  5548  0312                     	;# 
  5549  0313                     	;# 
  5550  0314                     	;# 
  5551  0315                     	;# 
  5552  0315                     	;# 
  5553  0316                     	;# 
  5554  0317                     	;# 
  5555  0318                     	;# 
  5556  038C                     	;# 
  5557  038D                     	;# 
  5558  038E                     	;# 
  5559  0391                     	;# 
  5560  0392                     	;# 
  5561  0393                     	;# 
  5562  0394                     	;# 
  5563  0395                     	;# 
  5564  0396                     	;# 
  5565  0397                     	;# 
  5566  0398                     	;# 
  5567  0399                     	;# 
  5568  039A                     	;# 
  5569  039C                     	;# 
  5570  039D                     	;# 
  5571  039E                     	;# 
  5572  039F                     	;# 
  5573  0411                     	;# 
  5574  0411                     	;# 
  5575  0412                     	;# 
  5576  0413                     	;# 
  5577  0414                     	;# 
  5578  0415                     	;# 
  5579  0416                     	;# 
  5580  0417                     	;# 
  5581  0418                     	;# 
  5582  0418                     	;# 
  5583  0419                     	;# 
  5584  041A                     	;# 
  5585  041B                     	;# 
  5586  041C                     	;# 
  5587  041D                     	;# 
  5588  041E                     	;# 
  5589  041F                     	;# 
  5590  0498                     	;# 
  5591  0498                     	;# 
  5592  0499                     	;# 
  5593  049A                     	;# 
  5594  049B                     	;# 
  5595  049B                     	;# 
  5596  049C                     	;# 
  5597  049D                     	;# 
  5598  049E                     	;# 
  5599  049F                     	;# 
  5600  0617                     	;# 
  5601  0618                     	;# 
  5602  0619                     	;# 
  5603  0619                     	;# 
  5604  061A                     	;# 
  5605  061B                     	;# 
  5606  061C                     	;# 
  5607  061C                     	;# 
  5608  061F                     	;# 
  5609  0691                     	;# 
  5610  0692                     	;# 
  5611  0693                     	;# 
  5612  0694                     	;# 
  5613  0695                     	;# 
  5614  0696                     	;# 
  5615  0697                     	;# 
  5616  0698                     	;# 
  5617  0699                     	;# 
  5618  0711                     	;# 
  5619  0712                     	;# 
  5620  0713                     	;# 
  5621  0714                     	;# 
  5622  0715                     	;# 
  5623  0716                     	;# 
  5624  0717                     	;# 
  5625  0718                     	;# 
  5626  0719                     	;# 
  5627  0891                     	;# 
  5628  0891                     	;# 
  5629  0891                     	;# 
  5630  0891                     	;# 
  5631  0891                     	;# 
  5632  0891                     	;# 
  5633  0892                     	;# 
  5634  0892                     	;# 
  5635  0892                     	;# 
  5636  0893                     	;# 
  5637  0893                     	;# 
  5638  0893                     	;# 
  5639  0893                     	;# 
  5640  0893                     	;# 
  5641  0893                     	;# 
  5642  0894                     	;# 
  5643  0894                     	;# 
  5644  0894                     	;# 
  5645  0895                     	;# 
  5646  0895                     	;# 
  5647  0895                     	;# 
  5648  0896                     	;# 
  5649  0896                     	;# 
  5650  0896                     	;# 
  5651  089B                     	;# 
  5652  0911                     	;# 
  5653  0912                     	;# 
  5654  0913                     	;# 
  5655  0914                     	;# 
  5656  0915                     	;# 
  5657  0916                     	;# 
  5658  0918                     	;# 
  5659  0919                     	;# 
  5660  091A                     	;# 
  5661  091B                     	;# 
  5662  091C                     	;# 
  5663  091D                     	;# 
  5664  091E                     	;# 
  5665  091F                     	;# 
  5666  0E0F                     	;# 
  5667  0E10                     	;# 
  5668  0E11                     	;# 
  5669  0E12                     	;# 
  5670  0E13                     	;# 
  5671  0E14                     	;# 
  5672  0E15                     	;# 
  5673  0E16                     	;# 
  5674  0E17                     	;# 
  5675  0E18                     	;# 
  5676  0E19                     	;# 
  5677  0E1A                     	;# 
  5678  0E1B                     	;# 
  5679  0E1C                     	;# 
  5680  0E1D                     	;# 
  5681  0E1E                     	;# 
  5682  0E1F                     	;# 
  5683  0E20                     	;# 
  5684  0E21                     	;# 
  5685  0E22                     	;# 
  5686  0E24                     	;# 
  5687  0E25                     	;# 
  5688  0E28                     	;# 
  5689  0E29                     	;# 
  5690  0E2A                     	;# 
  5691  0E2B                     	;# 
  5692  0E2C                     	;# 
  5693  0E2D                     	;# 
  5694  0E2E                     	;# 
  5695  0E2F                     	;# 
  5696  0E90                     	;# 
  5697  0E91                     	;# 
  5698  0E92                     	;# 
  5699  0E94                     	;# 
  5700  0E95                     	;# 
  5701  0E9C                     	;# 
  5702  0E9D                     	;# 
  5703  0E9E                     	;# 
  5704  0E9F                     	;# 
  5705  0EA0                     	;# 
  5706  0EA1                     	;# 
  5707  0EA2                     	;# 
  5708  0EA3                     	;# 
  5709  0EA4                     	;# 
  5710  0EA5                     	;# 
  5711  0EA6                     	;# 
  5712  0EA7                     	;# 
  5713  0F0F                     	;# 
  5714  0F10                     	;# 
  5715  0F11                     	;# 
  5716  0F12                     	;# 
  5717  0F13                     	;# 
  5718  0F14                     	;# 
  5719  0F15                     	;# 
  5720  0F16                     	;# 
  5721  0F17                     	;# 
  5722  0F18                     	;# 
  5723  0F19                     	;# 
  5724  0F1A                     	;# 
  5725  0F1B                     	;# 
  5726  0F1C                     	;# 
  5727  0F1D                     	;# 
  5728  0F1E                     	;# 
  5729  0F1F                     	;# 
  5730  0F20                     	;# 
  5731  0F21                     	;# 
  5732  0F22                     	;# 
  5733  0F23                     	;# 
  5734  0F24                     	;# 
  5735  0F25                     	;# 
  5736  0F26                     	;# 
  5737  0F27                     	;# 
  5738  0F28                     	;# 
  5739  0F29                     	;# 
  5740  0F2A                     	;# 
  5741  0F2B                     	;# 
  5742  0F2C                     	;# 
  5743  0F2D                     	;# 
  5744  0F2E                     	;# 
  5745  0F2F                     	;# 
  5746  0F30                     	;# 
  5747  0F31                     	;# 
  5748  0F32                     	;# 
  5749  0F33                     	;# 
  5750  0F34                     	;# 
  5751  0F35                     	;# 
  5752  0F36                     	;# 
  5753  0F37                     	;# 
  5754  0FE4                     	;# 
  5755  0FE5                     	;# 
  5756  0FE6                     	;# 
  5757  0FE7                     	;# 
  5758  0FE8                     	;# 
  5759  0FE9                     	;# 
  5760  0FEA                     	;# 
  5761  0FEB                     	;# 
  5762  0FED                     	;# 
  5763  0FEE                     	;# 
  5764  0FEF                     	;# 
  5765  0000                     	;# 
  5766  0001                     	;# 
  5767  0002                     	;# 
  5768  0003                     	;# 
  5769  0004                     	;# 
  5770  0005                     	;# 
  5771  0006                     	;# 
  5772  0007                     	;# 
  5773  0008                     	;# 
  5774  0009                     	;# 
  5775  000A                     	;# 
  5776  000B                     	;# 
  5777  000C                     	;# 
  5778  000D                     	;# 
  5779  000E                     	;# 
  5780  0010                     	;# 
  5781  0011                     	;# 
  5782  0012                     	;# 
  5783  0013                     	;# 
  5784  0014                     	;# 
  5785  0015                     	;# 
  5786  0015                     	;# 
  5787  0016                     	;# 
  5788  0016                     	;# 
  5789  0017                     	;# 
  5790  0018                     	;# 
  5791  0019                     	;# 
  5792  0019                     	;# 
  5793  001A                     	;# 
  5794  001B                     	;# 
  5795  001C                     	;# 
  5796  001D                     	;# 
  5797  001E                     	;# 
  5798  001F                     	;# 
  5799  008C                     	;# 
  5800  008D                     	;# 
  5801  008E                     	;# 
  5802  0090                     	;# 
  5803  0091                     	;# 
  5804  0092                     	;# 
  5805  0093                     	;# 
  5806  0094                     	;# 
  5807  0097                     	;# 
  5808  009B                     	;# 
  5809  009B                     	;# 
  5810  009C                     	;# 
  5811  009D                     	;# 
  5812  009E                     	;# 
  5813  009F                     	;# 
  5814  010C                     	;# 
  5815  010D                     	;# 
  5816  010E                     	;# 
  5817  0111                     	;# 
  5818  0112                     	;# 
  5819  0113                     	;# 
  5820  0114                     	;# 
  5821  0115                     	;# 
  5822  0116                     	;# 
  5823  0117                     	;# 
  5824  0118                     	;# 
  5825  0119                     	;# 
  5826  018C                     	;# 
  5827  018D                     	;# 
  5828  018E                     	;# 
  5829  0197                     	;# 
  5830  0199                     	;# 
  5831  0199                     	;# 
  5832  0199                     	;# 
  5833  019A                     	;# 
  5834  019A                     	;# 
  5835  019A                     	;# 
  5836  019B                     	;# 
  5837  019B                     	;# 
  5838  019B                     	;# 
  5839  019B                     	;# 
  5840  019B                     	;# 
  5841  019C                     	;# 
  5842  019C                     	;# 
  5843  019C                     	;# 
  5844  019D                     	;# 
  5845  019D                     	;# 
  5846  019D                     	;# 
  5847  019E                     	;# 
  5848  019E                     	;# 
  5849  019E                     	;# 
  5850  019F                     	;# 
  5851  019F                     	;# 
  5852  019F                     	;# 
  5853  019F                     	;# 
  5854  019F                     	;# 
  5855  020C                     	;# 
  5856  020D                     	;# 
  5857  020E                     	;# 
  5858  0211                     	;# 
  5859  0211                     	;# 
  5860  0212                     	;# 
  5861  0212                     	;# 
  5862  0213                     	;# 
  5863  0213                     	;# 
  5864  0214                     	;# 
  5865  0214                     	;# 
  5866  0215                     	;# 
  5867  0215                     	;# 
  5868  0215                     	;# 
  5869  0215                     	;# 
  5870  0216                     	;# 
  5871  0216                     	;# 
  5872  0217                     	;# 
  5873  0217                     	;# 
  5874  0219                     	;# 
  5875  021A                     	;# 
  5876  021B                     	;# 
  5877  021C                     	;# 
  5878  021D                     	;# 
  5879  021D                     	;# 
  5880  021E                     	;# 
  5881  021F                     	;# 
  5882  028C                     	;# 
  5883  028D                     	;# 
  5884  028E                     	;# 
  5885  0291                     	;# 
  5886  0291                     	;# 
  5887  0292                     	;# 
  5888  0293                     	;# 
  5889  0294                     	;# 
  5890  0295                     	;# 
  5891  0295                     	;# 
  5892  0296                     	;# 
  5893  0297                     	;# 
  5894  0298                     	;# 
  5895  029F                     	;# 
  5896  030C                     	;# 
  5897  030D                     	;# 
  5898  030E                     	;# 
  5899  0311                     	;# 
  5900  0311                     	;# 
  5901  0312                     	;# 
  5902  0313                     	;# 
  5903  0314                     	;# 
  5904  0315                     	;# 
  5905  0315                     	;# 
  5906  0316                     	;# 
  5907  0317                     	;# 
  5908  0318                     	;# 
  5909  038C                     	;# 
  5910  038D                     	;# 
  5911  038E                     	;# 
  5912  0391                     	;# 
  5913  0392                     	;# 
  5914  0393                     	;# 
  5915  0394                     	;# 
  5916  0395                     	;# 
  5917  0396                     	;# 
  5918  0397                     	;# 
  5919  0398                     	;# 
  5920  0399                     	;# 
  5921  039A                     	;# 
  5922  039C                     	;# 
  5923  039D                     	;# 
  5924  039E                     	;# 
  5925  039F                     	;# 
  5926  0411                     	;# 
  5927  0411                     	;# 
  5928  0412                     	;# 
  5929  0413                     	;# 
  5930  0414                     	;# 
  5931  0415                     	;# 
  5932  0416                     	;# 
  5933  0417                     	;# 
  5934  0418                     	;# 
  5935  0418                     	;# 
  5936  0419                     	;# 
  5937  041A                     	;# 
  5938  041B                     	;# 
  5939  041C                     	;# 
  5940  041D                     	;# 
  5941  041E                     	;# 
  5942  041F                     	;# 
  5943  0498                     	;# 
  5944  0498                     	;# 
  5945  0499                     	;# 
  5946  049A                     	;# 
  5947  049B                     	;# 
  5948  049B                     	;# 
  5949  049C                     	;# 
  5950  049D                     	;# 
  5951  049E                     	;# 
  5952  049F                     	;# 
  5953  0617                     	;# 
  5954  0618                     	;# 
  5955  0619                     	;# 
  5956  0619                     	;# 
  5957  061A                     	;# 
  5958  061B                     	;# 
  5959  061C                     	;# 
  5960  061C                     	;# 
  5961  061F                     	;# 
  5962  0691                     	;# 
  5963  0692                     	;# 
  5964  0693                     	;# 
  5965  0694                     	;# 
  5966  0695                     	;# 
  5967  0696                     	;# 
  5968  0697                     	;# 
  5969  0698                     	;# 
  5970  0699                     	;# 
  5971  0711                     	;# 
  5972  0712                     	;# 
  5973  0713                     	;# 
  5974  0714                     	;# 
  5975  0715                     	;# 
  5976  0716                     	;# 
  5977  0717                     	;# 
  5978  0718                     	;# 
  5979  0719                     	;# 
  5980  0891                     	;# 
  5981  0891                     	;# 
  5982  0891                     	;# 
  5983  0891                     	;# 
  5984  0891                     	;# 
  5985  0891                     	;# 
  5986  0892                     	;# 
  5987  0892                     	;# 
  5988  0892                     	;# 
  5989  0893                     	;# 
  5990  0893                     	;# 
  5991  0893                     	;# 
  5992  0893                     	;# 
  5993  0893                     	;# 
  5994  0893                     	;# 
  5995  0894                     	;# 
  5996  0894                     	;# 
  5997  0894                     	;# 
  5998  0895                     	;# 
  5999  0895                     	;# 
  6000  0895                     	;# 
  6001  0896                     	;# 
  6002  0896                     	;# 
  6003  0896                     	;# 
  6004  089B                     	;# 
  6005  0911                     	;# 
  6006  0912                     	;# 
  6007  0913                     	;# 
  6008  0914                     	;# 
  6009  0915                     	;# 
  6010  0916                     	;# 
  6011  0918                     	;# 
  6012  0919                     	;# 
  6013  091A                     	;# 
  6014  091B                     	;# 
  6015  091C                     	;# 
  6016  091D                     	;# 
  6017  091E                     	;# 
  6018  091F                     	;# 
  6019  0E0F                     	;# 
  6020  0E10                     	;# 
  6021  0E11                     	;# 
  6022  0E12                     	;# 
  6023  0E13                     	;# 
  6024  0E14                     	;# 
  6025  0E15                     	;# 
  6026  0E16                     	;# 
  6027  0E17                     	;# 
  6028  0E18                     	;# 
  6029  0E19                     	;# 
  6030  0E1A                     	;# 
  6031  0E1B                     	;# 
  6032  0E1C                     	;# 
  6033  0E1D                     	;# 
  6034  0E1E                     	;# 
  6035  0E1F                     	;# 
  6036  0E20                     	;# 
  6037  0E21                     	;# 
  6038  0E22                     	;# 
  6039  0E24                     	;# 
  6040  0E25                     	;# 
  6041  0E28                     	;# 
  6042  0E29                     	;# 
  6043  0E2A                     	;# 
  6044  0E2B                     	;# 
  6045  0E2C                     	;# 
  6046  0E2D                     	;# 
  6047  0E2E                     	;# 
  6048  0E2F                     	;# 
  6049  0E90                     	;# 
  6050  0E91                     	;# 
  6051  0E92                     	;# 
  6052  0E94                     	;# 
  6053  0E95                     	;# 
  6054  0E9C                     	;# 
  6055  0E9D                     	;# 
  6056  0E9E                     	;# 
  6057  0E9F                     	;# 
  6058  0EA0                     	;# 
  6059  0EA1                     	;# 
  6060  0EA2                     	;# 
  6061  0EA3                     	;# 
  6062  0EA4                     	;# 
  6063  0EA5                     	;# 
  6064  0EA6                     	;# 
  6065  0EA7                     	;# 
  6066  0F0F                     	;# 
  6067  0F10                     	;# 
  6068  0F11                     	;# 
  6069  0F12                     	;# 
  6070  0F13                     	;# 
  6071  0F14                     	;# 
  6072  0F15                     	;# 
  6073  0F16                     	;# 
  6074  0F17                     	;# 
  6075  0F18                     	;# 
  6076  0F19                     	;# 
  6077  0F1A                     	;# 
  6078  0F1B                     	;# 
  6079  0F1C                     	;# 
  6080  0F1D                     	;# 
  6081  0F1E                     	;# 
  6082  0F1F                     	;# 
  6083  0F20                     	;# 
  6084  0F21                     	;# 
  6085  0F22                     	;# 
  6086  0F23                     	;# 
  6087  0F24                     	;# 
  6088  0F25                     	;# 
  6089  0F26                     	;# 
  6090  0F27                     	;# 
  6091  0F28                     	;# 
  6092  0F29                     	;# 
  6093  0F2A                     	;# 
  6094  0F2B                     	;# 
  6095  0F2C                     	;# 
  6096  0F2D                     	;# 
  6097  0F2E                     	;# 
  6098  0F2F                     	;# 
  6099  0F30                     	;# 
  6100  0F31                     	;# 
  6101  0F32                     	;# 
  6102  0F33                     	;# 
  6103  0F34                     	;# 
  6104  0F35                     	;# 
  6105  0F36                     	;# 
  6106  0F37                     	;# 
  6107  0FE4                     	;# 
  6108  0FE5                     	;# 
  6109  0FE6                     	;# 
  6110  0FE7                     	;# 
  6111  0FE8                     	;# 
  6112  0FE9                     	;# 
  6113  0FEA                     	;# 
  6114  0FEB                     	;# 
  6115  0FED                     	;# 
  6116  0FEE                     	;# 
  6117  0FEF                     	;# 
  6118  0000                     	;# 
  6119  0001                     	;# 
  6120  0002                     	;# 
  6121  0003                     	;# 
  6122  0004                     	;# 
  6123  0005                     	;# 
  6124  0006                     	;# 
  6125  0007                     	;# 
  6126  0008                     	;# 
  6127  0009                     	;# 
  6128  000A                     	;# 
  6129  000B                     	;# 
  6130  000C                     	;# 
  6131  000D                     	;# 
  6132  000E                     	;# 
  6133  0010                     	;# 
  6134  0011                     	;# 
  6135  0012                     	;# 
  6136  0013                     	;# 
  6137  0014                     	;# 
  6138  0015                     	;# 
  6139  0015                     	;# 
  6140  0016                     	;# 
  6141  0016                     	;# 
  6142  0017                     	;# 
  6143  0018                     	;# 
  6144  0019                     	;# 
  6145  0019                     	;# 
  6146  001A                     	;# 
  6147  001B                     	;# 
  6148  001C                     	;# 
  6149  001D                     	;# 
  6150  001E                     	;# 
  6151  001F                     	;# 
  6152  008C                     	;# 
  6153  008D                     	;# 
  6154  008E                     	;# 
  6155  0090                     	;# 
  6156  0091                     	;# 
  6157  0092                     	;# 
  6158  0093                     	;# 
  6159  0094                     	;# 
  6160  0097                     	;# 
  6161  009B                     	;# 
  6162  009B                     	;# 
  6163  009C                     	;# 
  6164  009D                     	;# 
  6165  009E                     	;# 
  6166  009F                     	;# 
  6167  010C                     	;# 
  6168  010D                     	;# 
  6169  010E                     	;# 
  6170  0111                     	;# 
  6171  0112                     	;# 
  6172  0113                     	;# 
  6173  0114                     	;# 
  6174  0115                     	;# 
  6175  0116                     	;# 
  6176  0117                     	;# 
  6177  0118                     	;# 
  6178  0119                     	;# 
  6179  018C                     	;# 
  6180  018D                     	;# 
  6181  018E                     	;# 
  6182  0197                     	;# 
  6183  0199                     	;# 
  6184  0199                     	;# 
  6185  0199                     	;# 
  6186  019A                     	;# 
  6187  019A                     	;# 
  6188  019A                     	;# 
  6189  019B                     	;# 
  6190  019B                     	;# 
  6191  019B                     	;# 
  6192  019B                     	;# 
  6193  019B                     	;# 
  6194  019C                     	;# 
  6195  019C                     	;# 
  6196  019C                     	;# 
  6197  019D                     	;# 
  6198  019D                     	;# 
  6199  019D                     	;# 
  6200  019E                     	;# 
  6201  019E                     	;# 
  6202  019E                     	;# 
  6203  019F                     	;# 
  6204  019F                     	;# 
  6205  019F                     	;# 
  6206  019F                     	;# 
  6207  019F                     	;# 
  6208  020C                     	;# 
  6209  020D                     	;# 
  6210  020E                     	;# 
  6211  0211                     	;# 
  6212  0211                     	;# 
  6213  0212                     	;# 
  6214  0212                     	;# 
  6215  0213                     	;# 
  6216  0213                     	;# 
  6217  0214                     	;# 
  6218  0214                     	;# 
  6219  0215                     	;# 
  6220  0215                     	;# 
  6221  0215                     	;# 
  6222  0215                     	;# 
  6223  0216                     	;# 
  6224  0216                     	;# 
  6225  0217                     	;# 
  6226  0217                     	;# 
  6227  0219                     	;# 
  6228  021A                     	;# 
  6229  021B                     	;# 
  6230  021C                     	;# 
  6231  021D                     	;# 
  6232  021D                     	;# 
  6233  021E                     	;# 
  6234  021F                     	;# 
  6235  028C                     	;# 
  6236  028D                     	;# 
  6237  028E                     	;# 
  6238  0291                     	;# 
  6239  0291                     	;# 
  6240  0292                     	;# 
  6241  0293                     	;# 
  6242  0294                     	;# 
  6243  0295                     	;# 
  6244  0295                     	;# 
  6245  0296                     	;# 
  6246  0297                     	;# 
  6247  0298                     	;# 
  6248  029F                     	;# 
  6249  030C                     	;# 
  6250  030D                     	;# 
  6251  030E                     	;# 
  6252  0311                     	;# 
  6253  0311                     	;# 
  6254  0312                     	;# 
  6255  0313                     	;# 
  6256  0314                     	;# 
  6257  0315                     	;# 
  6258  0315                     	;# 
  6259  0316                     	;# 
  6260  0317                     	;# 
  6261  0318                     	;# 
  6262  038C                     	;# 
  6263  038D                     	;# 
  6264  038E                     	;# 
  6265  0391                     	;# 
  6266  0392                     	;# 
  6267  0393                     	;# 
  6268  0394                     	;# 
  6269  0395                     	;# 
  6270  0396                     	;# 
  6271  0397                     	;# 
  6272  0398                     	;# 
  6273  0399                     	;# 
  6274  039A                     	;# 
  6275  039C                     	;# 
  6276  039D                     	;# 
  6277  039E                     	;# 
  6278  039F                     	;# 
  6279  0411                     	;# 
  6280  0411                     	;# 
  6281  0412                     	;# 
  6282  0413                     	;# 
  6283  0414                     	;# 
  6284  0415                     	;# 
  6285  0416                     	;# 
  6286  0417                     	;# 
  6287  0418                     	;# 
  6288  0418                     	;# 
  6289  0419                     	;# 
  6290  041A                     	;# 
  6291  041B                     	;# 
  6292  041C                     	;# 
  6293  041D                     	;# 
  6294  041E                     	;# 
  6295  041F                     	;# 
  6296  0498                     	;# 
  6297  0498                     	;# 
  6298  0499                     	;# 
  6299  049A                     	;# 
  6300  049B                     	;# 
  6301  049B                     	;# 
  6302  049C                     	;# 
  6303  049D                     	;# 
  6304  049E                     	;# 
  6305  049F                     	;# 
  6306  0617                     	;# 
  6307  0618                     	;# 
  6308  0619                     	;# 
  6309  0619                     	;# 
  6310  061A                     	;# 
  6311  061B                     	;# 
  6312  061C                     	;# 
  6313  061C                     	;# 
  6314  061F                     	;# 
  6315  0691                     	;# 
  6316  0692                     	;# 
  6317  0693                     	;# 
  6318  0694                     	;# 
  6319  0695                     	;# 
  6320  0696                     	;# 
  6321  0697                     	;# 
  6322  0698                     	;# 
  6323  0699                     	;# 
  6324  0711                     	;# 
  6325  0712                     	;# 
  6326  0713                     	;# 
  6327  0714                     	;# 
  6328  0715                     	;# 
  6329  0716                     	;# 
  6330  0717                     	;# 
  6331  0718                     	;# 
  6332  0719                     	;# 
  6333  0891                     	;# 
  6334  0891                     	;# 
  6335  0891                     	;# 
  6336  0891                     	;# 
  6337  0891                     	;# 
  6338  0891                     	;# 
  6339  0892                     	;# 
  6340  0892                     	;# 
  6341  0892                     	;# 
  6342  0893                     	;# 
  6343  0893                     	;# 
  6344  0893                     	;# 
  6345  0893                     	;# 
  6346  0893                     	;# 
  6347  0893                     	;# 
  6348  0894                     	;# 
  6349  0894                     	;# 
  6350  0894                     	;# 
  6351  0895                     	;# 
  6352  0895                     	;# 
  6353  0895                     	;# 
  6354  0896                     	;# 
  6355  0896                     	;# 
  6356  0896                     	;# 
  6357  089B                     	;# 
  6358  0911                     	;# 
  6359  0912                     	;# 
  6360  0913                     	;# 
  6361  0914                     	;# 
  6362  0915                     	;# 
  6363  0916                     	;# 
  6364  0918                     	;# 
  6365  0919                     	;# 
  6366  091A                     	;# 
  6367  091B                     	;# 
  6368  091C                     	;# 
  6369  091D                     	;# 
  6370  091E                     	;# 
  6371  091F                     	;# 
  6372  0E0F                     	;# 
  6373  0E10                     	;# 
  6374  0E11                     	;# 
  6375  0E12                     	;# 
  6376  0E13                     	;# 
  6377  0E14                     	;# 
  6378  0E15                     	;# 
  6379  0E16                     	;# 
  6380  0E17                     	;# 
  6381  0E18                     	;# 
  6382  0E19                     	;# 
  6383  0E1A                     	;# 
  6384  0E1B                     	;# 
  6385  0E1C                     	;# 
  6386  0E1D                     	;# 
  6387  0E1E                     	;# 
  6388  0E1F                     	;# 
  6389  0E20                     	;# 
  6390  0E21                     	;# 
  6391  0E22                     	;# 
  6392  0E24                     	;# 
  6393  0E25                     	;# 
  6394  0E28                     	;# 
  6395  0E29                     	;# 
  6396  0E2A                     	;# 
  6397  0E2B                     	;# 
  6398  0E2C                     	;# 
  6399  0E2D                     	;# 
  6400  0E2E                     	;# 
  6401  0E2F                     	;# 
  6402  0E90                     	;# 
  6403  0E91                     	;# 
  6404  0E92                     	;# 
  6405  0E94                     	;# 
  6406  0E95                     	;# 
  6407  0E9C                     	;# 
  6408  0E9D                     	;# 
  6409  0E9E                     	;# 
  6410  0E9F                     	;# 
  6411  0EA0                     	;# 
  6412  0EA1                     	;# 
  6413  0EA2                     	;# 
  6414  0EA3                     	;# 
  6415  0EA4                     	;# 
  6416  0EA5                     	;# 
  6417  0EA6                     	;# 
  6418  0EA7                     	;# 
  6419  0F0F                     	;# 
  6420  0F10                     	;# 
  6421  0F11                     	;# 
  6422  0F12                     	;# 
  6423  0F13                     	;# 
  6424  0F14                     	;# 
  6425  0F15                     	;# 
  6426  0F16                     	;# 
  6427  0F17                     	;# 
  6428  0F18                     	;# 
  6429  0F19                     	;# 
  6430  0F1A                     	;# 
  6431  0F1B                     	;# 
  6432  0F1C                     	;# 
  6433  0F1D                     	;# 
  6434  0F1E                     	;# 
  6435  0F1F                     	;# 
  6436  0F20                     	;# 
  6437  0F21                     	;# 
  6438  0F22                     	;# 
  6439  0F23                     	;# 
  6440  0F24                     	;# 
  6441  0F25                     	;# 
  6442  0F26                     	;# 
  6443  0F27                     	;# 
  6444  0F28                     	;# 
  6445  0F29                     	;# 
  6446  0F2A                     	;# 
  6447  0F2B                     	;# 
  6448  0F2C                     	;# 
  6449  0F2D                     	;# 
  6450  0F2E                     	;# 
  6451  0F2F                     	;# 
  6452  0F30                     	;# 
  6453  0F31                     	;# 
  6454  0F32                     	;# 
  6455  0F33                     	;# 
  6456  0F34                     	;# 
  6457  0F35                     	;# 
  6458  0F36                     	;# 
  6459  0F37                     	;# 
  6460  0FE4                     	;# 
  6461  0FE5                     	;# 
  6462  0FE6                     	;# 
  6463  0FE7                     	;# 
  6464  0FE8                     	;# 
  6465  0FE9                     	;# 
  6466  0FEA                     	;# 
  6467  0FEB                     	;# 
  6468  0FED                     	;# 
  6469  0FEE                     	;# 
  6470  0FEF                     	;# 
  6471  0000                     	;# 
  6472  0001                     	;# 
  6473  0002                     	;# 
  6474  0003                     	;# 
  6475  0004                     	;# 
  6476  0005                     	;# 
  6477  0006                     	;# 
  6478  0007                     	;# 
  6479  0008                     	;# 
  6480  0009                     	;# 
  6481  000A                     	;# 
  6482  000B                     	;# 
  6483  000C                     	;# 
  6484  000D                     	;# 
  6485  000E                     	;# 
  6486  0010                     	;# 
  6487  0011                     	;# 
  6488  0012                     	;# 
  6489  0013                     	;# 
  6490  0014                     	;# 
  6491  0015                     	;# 
  6492  0015                     	;# 
  6493  0016                     	;# 
  6494  0016                     	;# 
  6495  0017                     	;# 
  6496  0018                     	;# 
  6497  0019                     	;# 
  6498  0019                     	;# 
  6499  001A                     	;# 
  6500  001B                     	;# 
  6501  001C                     	;# 
  6502  001D                     	;# 
  6503  001E                     	;# 
  6504  001F                     	;# 
  6505  008C                     	;# 
  6506  008D                     	;# 
  6507  008E                     	;# 
  6508  0090                     	;# 
  6509  0091                     	;# 
  6510  0092                     	;# 
  6511  0093                     	;# 
  6512  0094                     	;# 
  6513  0097                     	;# 
  6514  009B                     	;# 
  6515  009B                     	;# 
  6516  009C                     	;# 
  6517  009D                     	;# 
  6518  009E                     	;# 
  6519  009F                     	;# 
  6520  010C                     	;# 
  6521  010D                     	;# 
  6522  010E                     	;# 
  6523  0111                     	;# 
  6524  0112                     	;# 
  6525  0113                     	;# 
  6526  0114                     	;# 
  6527  0115                     	;# 
  6528  0116                     	;# 
  6529  0117                     	;# 
  6530  0118                     	;# 
  6531  0119                     	;# 
  6532  018C                     	;# 
  6533  018D                     	;# 
  6534  018E                     	;# 
  6535  0197                     	;# 
  6536  0199                     	;# 
  6537  0199                     	;# 
  6538  0199                     	;# 
  6539  019A                     	;# 
  6540  019A                     	;# 
  6541  019A                     	;# 
  6542  019B                     	;# 
  6543  019B                     	;# 
  6544  019B                     	;# 
  6545  019B                     	;# 
  6546  019B                     	;# 
  6547  019C                     	;# 
  6548  019C                     	;# 
  6549  019C                     	;# 
  6550  019D                     	;# 
  6551  019D                     	;# 
  6552  019D                     	;# 
  6553  019E                     	;# 
  6554  019E                     	;# 
  6555  019E                     	;# 
  6556  019F                     	;# 
  6557  019F                     	;# 
  6558  019F                     	;# 
  6559  019F                     	;# 
  6560  019F                     	;# 
  6561  020C                     	;# 
  6562  020D                     	;# 
  6563  020E                     	;# 
  6564  0211                     	;# 
  6565  0211                     	;# 
  6566  0212                     	;# 
  6567  0212                     	;# 
  6568  0213                     	;# 
  6569  0213                     	;# 
  6570  0214                     	;# 
  6571  0214                     	;# 
  6572  0215                     	;# 
  6573  0215                     	;# 
  6574  0215                     	;# 
  6575  0215                     	;# 
  6576  0216                     	;# 
  6577  0216                     	;# 
  6578  0217                     	;# 
  6579  0217                     	;# 
  6580  0219                     	;# 
  6581  021A                     	;# 
  6582  021B                     	;# 
  6583  021C                     	;# 
  6584  021D                     	;# 
  6585  021D                     	;# 
  6586  021E                     	;# 
  6587  021F                     	;# 
  6588  028C                     	;# 
  6589  028D                     	;# 
  6590  028E                     	;# 
  6591  0291                     	;# 
  6592  0291                     	;# 
  6593  0292                     	;# 
  6594  0293                     	;# 
  6595  0294                     	;# 
  6596  0295                     	;# 
  6597  0295                     	;# 
  6598  0296                     	;# 
  6599  0297                     	;# 
  6600  0298                     	;# 
  6601  029F                     	;# 
  6602  030C                     	;# 
  6603  030D                     	;# 
  6604  030E                     	;# 
  6605  0311                     	;# 
  6606  0311                     	;# 
  6607  0312                     	;# 
  6608  0313                     	;# 
  6609  0314                     	;# 
  6610  0315                     	;# 
  6611  0315                     	;# 
  6612  0316                     	;# 
  6613  0317                     	;# 
  6614  0318                     	;# 
  6615  038C                     	;# 
  6616  038D                     	;# 
  6617  038E                     	;# 
  6618  0391                     	;# 
  6619  0392                     	;# 
  6620  0393                     	;# 
  6621  0394                     	;# 
  6622  0395                     	;# 
  6623  0396                     	;# 
  6624  0397                     	;# 
  6625  0398                     	;# 
  6626  0399                     	;# 
  6627  039A                     	;# 
  6628  039C                     	;# 
  6629  039D                     	;# 
  6630  039E                     	;# 
  6631  039F                     	;# 
  6632  0411                     	;# 
  6633  0411                     	;# 
  6634  0412                     	;# 
  6635  0413                     	;# 
  6636  0414                     	;# 
  6637  0415                     	;# 
  6638  0416                     	;# 
  6639  0417                     	;# 
  6640  0418                     	;# 
  6641  0418                     	;# 
  6642  0419                     	;# 
  6643  041A                     	;# 
  6644  041B                     	;# 
  6645  041C                     	;# 
  6646  041D                     	;# 
  6647  041E                     	;# 
  6648  041F                     	;# 
  6649  0498                     	;# 
  6650  0498                     	;# 
  6651  0499                     	;# 
  6652  049A                     	;# 
  6653  049B                     	;# 
  6654  049B                     	;# 
  6655  049C                     	;# 
  6656  049D                     	;# 
  6657  049E                     	;# 
  6658  049F                     	;# 
  6659  0617                     	;# 
  6660  0618                     	;# 
  6661  0619                     	;# 
  6662  0619                     	;# 
  6663  061A                     	;# 
  6664  061B                     	;# 
  6665  061C                     	;# 
  6666  061C                     	;# 
  6667  061F                     	;# 
  6668  0691                     	;# 
  6669  0692                     	;# 
  6670  0693                     	;# 
  6671  0694                     	;# 
  6672  0695                     	;# 
  6673  0696                     	;# 
  6674  0697                     	;# 
  6675  0698                     	;# 
  6676  0699                     	;# 
  6677  0711                     	;# 
  6678  0712                     	;# 
  6679  0713                     	;# 
  6680  0714                     	;# 
  6681  0715                     	;# 
  6682  0716                     	;# 
  6683  0717                     	;# 
  6684  0718                     	;# 
  6685  0719                     	;# 
  6686  0891                     	;# 
  6687  0891                     	;# 
  6688  0891                     	;# 
  6689  0891                     	;# 
  6690  0891                     	;# 
  6691  0891                     	;# 
  6692  0892                     	;# 
  6693  0892                     	;# 
  6694  0892                     	;# 
  6695  0893                     	;# 
  6696  0893                     	;# 
  6697  0893                     	;# 
  6698  0893                     	;# 
  6699  0893                     	;# 
  6700  0893                     	;# 
  6701  0894                     	;# 
  6702  0894                     	;# 
  6703  0894                     	;# 
  6704  0895                     	;# 
  6705  0895                     	;# 
  6706  0895                     	;# 
  6707  0896                     	;# 
  6708  0896                     	;# 
  6709  0896                     	;# 
  6710  089B                     	;# 
  6711  0911                     	;# 
  6712  0912                     	;# 
  6713  0913                     	;# 
  6714  0914                     	;# 
  6715  0915                     	;# 
  6716  0916                     	;# 
  6717  0918                     	;# 
  6718  0919                     	;# 
  6719  091A                     	;# 
  6720  091B                     	;# 
  6721  091C                     	;# 
  6722  091D                     	;# 
  6723  091E                     	;# 
  6724  091F                     	;# 
  6725  0E0F                     	;# 
  6726  0E10                     	;# 
  6727  0E11                     	;# 
  6728  0E12                     	;# 
  6729  0E13                     	;# 
  6730  0E14                     	;# 
  6731  0E15                     	;# 
  6732  0E16                     	;# 
  6733  0E17                     	;# 
  6734  0E18                     	;# 
  6735  0E19                     	;# 
  6736  0E1A                     	;# 
  6737  0E1B                     	;# 
  6738  0E1C                     	;# 
  6739  0E1D                     	;# 
  6740  0E1E                     	;# 
  6741  0E1F                     	;# 
  6742  0E20                     	;# 
  6743  0E21                     	;# 
  6744  0E22                     	;# 
  6745  0E24                     	;# 
  6746  0E25                     	;# 
  6747  0E28                     	;# 
  6748  0E29                     	;# 
  6749  0E2A                     	;# 
  6750  0E2B                     	;# 
  6751  0E2C                     	;# 
  6752  0E2D                     	;# 
  6753  0E2E                     	;# 
  6754  0E2F                     	;# 
  6755  0E90                     	;# 
  6756  0E91                     	;# 
  6757  0E92                     	;# 
  6758  0E94                     	;# 
  6759  0E95                     	;# 
  6760  0E9C                     	;# 
  6761  0E9D                     	;# 
  6762  0E9E                     	;# 
  6763  0E9F                     	;# 
  6764  0EA0                     	;# 
  6765  0EA1                     	;# 
  6766  0EA2                     	;# 
  6767  0EA3                     	;# 
  6768  0EA4                     	;# 
  6769  0EA5                     	;# 
  6770  0EA6                     	;# 
  6771  0EA7                     	;# 
  6772  0F0F                     	;# 
  6773  0F10                     	;# 
  6774  0F11                     	;# 
  6775  0F12                     	;# 
  6776  0F13                     	;# 
  6777  0F14                     	;# 
  6778  0F15                     	;# 
  6779  0F16                     	;# 
  6780  0F17                     	;# 
  6781  0F18                     	;# 
  6782  0F19                     	;# 
  6783  0F1A                     	;# 
  6784  0F1B                     	;# 
  6785  0F1C                     	;# 
  6786  0F1D                     	;# 
  6787  0F1E                     	;# 
  6788  0F1F                     	;# 
  6789  0F20                     	;# 
  6790  0F21                     	;# 
  6791  0F22                     	;# 
  6792  0F23                     	;# 
  6793  0F24                     	;# 
  6794  0F25                     	;# 
  6795  0F26                     	;# 
  6796  0F27                     	;# 
  6797  0F28                     	;# 
  6798  0F29                     	;# 
  6799  0F2A                     	;# 
  6800  0F2B                     	;# 
  6801  0F2C                     	;# 
  6802  0F2D                     	;# 
  6803  0F2E                     	;# 
  6804  0F2F                     	;# 
  6805  0F30                     	;# 
  6806  0F31                     	;# 
  6807  0F32                     	;# 
  6808  0F33                     	;# 
  6809  0F34                     	;# 
  6810  0F35                     	;# 
  6811  0F36                     	;# 
  6812  0F37                     	;# 
  6813  0FE4                     	;# 
  6814  0FE5                     	;# 
  6815  0FE6                     	;# 
  6816  0FE7                     	;# 
  6817  0FE8                     	;# 
  6818  0FE9                     	;# 
  6819  0FEA                     	;# 
  6820  0FEB                     	;# 
  6821  0FED                     	;# 
  6822  0FEE                     	;# 
  6823  0FEF                     	;# 
  6824                           
  6825 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
  6826  001F                     _T2CONbits	set	31
  6827  001F                     _T2CON	set	31
  6828  001D                     _TMR2	set	29
  6829  001E                     _PR2	set	30
  6830  0013                     _PIR3bits	set	19
  6831  001B                     _T1CONbits	set	27
  6832  001B                     _T1CON	set	27
  6833  0011                     _PIR1bits	set	17
  6834  0019                     _TMR1L	set	25
  6835  001A                     _TMR1H	set	26
  6836  001C                     _T1GCON	set	28
  6837  0014                     _PIR4bits	set	20
  6838  0017                     _T0CON0bits	set	23
  6839  0017                     _T0CON0	set	23
  6840  0010                     _PIR0bits	set	16
  6841  0015                     _TMR0L	set	21
  6842  0016                     _TMR0H	set	22
  6843  0018                     _T0CON1	set	24
  6844  000D                     _PORTBbits	set	13
  6845  000E                     _PORTCbits	set	14
  6846  000C                     _PORTAbits	set	12
  6847  000B                     _INTCONbits	set	11
  6848  0014                     _PIR4	set	20
  6849  0013                     _PIR3	set	19
  6850  0012                     _PIR2	set	18
  6851  0011                     _PIR1	set	17
  6852  0010                     _PIR0	set	16
  6853  008E                     _TRISC	set	142
  6854  008D                     _TRISB	set	141
  6855  008C                     _TRISA	set	140
  6856  0093                     _PIE3bits	set	147
  6857  0091                     _PIE1bits	set	145
  6858  0094                     _PIE4bits	set	148
  6859  0090                     _PIE0bits	set	144
  6860  0097                     _WDTCON	set	151
  6861  008D                     _TRISBbits	set	141
  6862  008E                     _TRISCbits	set	142
  6863  008C                     _TRISAbits	set	140
  6864  0094                     _PIE4	set	148
  6865  0093                     _PIE3	set	147
  6866  0092                     _PIE2	set	146
  6867  0091                     _PIE1	set	145
  6868  0090                     _PIE0	set	144
  6869  010E                     _LATC	set	270
  6870  010D                     _LATB	set	269
  6871  010C                     _LATA	set	268
  6872  010D                     _LATBbits	set	269
  6873  010E                     _LATCbits	set	270
  6874  010C                     _LATAbits	set	268
  6875  018C                     _ANSELA	set	396
  6876  018D                     _ANSELB	set	397
  6877  018E                     _ANSELC	set	398
  6878  0199                     _RC1REG	set	409
  6879  019D                     _RC1STAbits	set	413
  6880  019A                     _TX1REG	set	410
  6881  019E                     _TX1STAbits	set	414
  6882  019C                     _SP1BRGH	set	412
  6883  019B                     _SP1BRGL	set	411
  6884  019E                     _TX1STA	set	414
  6885  019D                     _RC1STA	set	413
  6886  019F                     _BAUD1CON	set	415
  6887  020E                     _WPUC	set	526
  6888  020C                     _WPUA	set	524
  6889  020D                     _WPUB	set	525
  6890  028E                     _ODCONC	set	654
  6891  028D                     _ODCONB	set	653
  6892  028C                     _ODCONA	set	652
  6893  0295                     _CCPR2L	set	661
  6894  0296                     _CCPR2H	set	662
  6895  0298                     _CCP2CAP	set	664
  6896  0297                     _CCP2CON	set	663
  6897  029F                     _CCPTMRSbits	set	671
  6898  0291                     _CCPR1L	set	657
  6899  0292                     _CCPR1H	set	658
  6900  0294                     _CCP1CAP	set	660
  6901  0293                     _CCP1CON	set	659
  6902  0317                     _CCP4CONbits	set	791
  6903  0315                     _CCPR4L	set	789
  6904  0316                     _CCPR4H	set	790
  6905  0317                     _CCP4CON	set	791
  6906  030E                     _SLRCONC	set	782
  6907  030D                     _SLRCONB	set	781
  6908  030C                     _SLRCONA	set	780
  6909  0311                     _CCPR3L	set	785
  6910  0312                     _CCPR3H	set	786
  6911  0314                     _CCP3CAP	set	788
  6912  0313                     _CCP3CON	set	787
  6913  038E                     _INLVLC	set	910
  6914  038D                     _INLVLB	set	909
  6915  038C                     _INLVLA	set	908
  6916  0414                     _T3GCONbits	set	1044
  6917  0413                     _T3CONbits	set	1043
  6918  0413                     _T3CON	set	1043
  6919  0411                     _TMR3L	set	1041
  6920  0412                     _TMR3H	set	1042
  6921  0414                     _T3GCON	set	1044
  6922  061F                     _PWMTMRSbits	set	1567
  6923  0617                     _PWM5DCL	set	1559
  6924  0618                     _PWM5DCH	set	1560
  6925  0619                     _PWM5CON	set	1561
  6926  0916                     _PMD5	set	2326
  6927  0915                     _PMD4	set	2325
  6928  0914                     _PMD3	set	2324
  6929  0913                     _PMD2	set	2323
  6930  0912                     _PMD1	set	2322
  6931  0911                     _PMD0	set	2321
  6932  091E                     _OSCTUNE	set	2334
  6933  091F                     _OSCFRQ	set	2335
  6934  091D                     _OSCEN	set	2333
  6935  091B                     _OSCCON3	set	2331
  6936  0919                     _OSCCON1	set	2329
  6937  48E0                     _PLLR	set	18656
  6938  0E16                     _CCP3PPS	set	3606
  6939  0E15                     _CCP2PPS	set	3605
  6940  0E14                     _CCP1PPS	set	3604
  6941  0E24                     _RXPPS	set	3620
  6942  0E9E                     _RB6PPS	set	3742
  6943  0EA1                     _RC1PPS	set	3745
  6944  0EA4                     _RC4PPS	set	3748
  6945                           
  6946                           	psect	stringtext1
  6947  0546                     __pstringtext1:
  6948  0546                     STR_2:
  6949  0546  3445               	retlw	69	;'E'
  6950  0547  3452               	retlw	82	;'R'
  6951  0548  3452               	retlw	82	;'R'
  6952  0549  344F               	retlw	79	;'O'
  6953  054A  3452               	retlw	82	;'R'
  6954  054B  343A               	retlw	58	;':'
  6955  054C  3420               	retlw	32	;' '
  6956  054D  3449               	retlw	73	;'I'
  6957  054E  346E               	retlw	110	;'n'
  6958  054F  3476               	retlw	118	;'v'
  6959  0550  3461               	retlw	97	;'a'
  6960  0551  346C               	retlw	108	;'l'
  6961  0552  3469               	retlw	105	;'i'
  6962  0553  3464               	retlw	100	;'d'
  6963  0554  3420               	retlw	32	;' '
  6964  0555  3474               	retlw	116	;'t'
  6965  0556  3472               	retlw	114	;'r'
  6966  0557  3469               	retlw	105	;'i'
  6967  0558  3467               	retlw	103	;'g'
  6968  0559  3450               	retlw	80	;'P'
  6969  055A  3469               	retlw	105	;'i'
  6970  055B  346E               	retlw	110	;'n'
  6971  055C  3420               	retlw	32	;' '
  6972  055D  3428               	retlw	40	;'('
  6973  055E  346D               	retlw	109	;'m'
  6974  055F  3475               	retlw	117	;'u'
  6975  0560  3473               	retlw	115	;'s'
  6976  0561  3474               	retlw	116	;'t'
  6977  0562  3420               	retlw	32	;' '
  6978  0563  344E               	retlw	78	;'N'
  6979  0564  344F               	retlw	79	;'O'
  6980  0565  3454               	retlw	84	;'T'
  6981  0566  3420               	retlw	32	;' '
  6982  0567  3462               	retlw	98	;'b'
  6983  0568  3465               	retlw	101	;'e'
  6984  0569  3420               	retlw	32	;' '
  6985  056A  345B               	retlw	91	;'['
  6986  056B  3441               	retlw	65	;'A'
  6987  056C  3432               	retlw	50	;'2'
  6988  056D  342C               	retlw	44	;','
  6989  056E  3420               	retlw	32	;' '
  6990  056F  3441               	retlw	65	;'A'
  6991  0570  3433               	retlw	51	;'3'
  6992  0571  342C               	retlw	44	;','
  6993  0572  3420               	retlw	32	;' '
  6994  0573  3441               	retlw	65	;'A'
  6995  0574  3434               	retlw	52	;'4'
  6996  0575  342C               	retlw	44	;','
  6997  0576  3420               	retlw	32	;' '
  6998  0577  3443               	retlw	67	;'C'
  6999  0578  3433               	retlw	51	;'3'
  7000  0579  342C               	retlw	44	;','
  7001  057A  3420               	retlw	32	;' '
  7002  057B  3443               	retlw	67	;'C'
  7003  057C  3435               	retlw	53	;'5'
  7004  057D  345D               	retlw	93	;']'
  7005  057E  3429               	retlw	41	;')'
  7006  057F  3400               	retlw	0
  7007                           
  7008                           	psect	stringtext2
  7009  05BA                     __pstringtext2:
  7010  05BA                     STR_1:
  7011  05BA  3445               	retlw	69	;'E'
  7012  05BB  3452               	retlw	82	;'R'
  7013  05BC  3452               	retlw	82	;'R'
  7014  05BD  344F               	retlw	79	;'O'
  7015  05BE  3452               	retlw	82	;'R'
  7016  05BF  343A               	retlw	58	;':'
  7017  05C0  3420               	retlw	32	;' '
  7018  05C1  3449               	retlw	73	;'I'
  7019  05C2  346E               	retlw	110	;'n'
  7020  05C3  3476               	retlw	118	;'v'
  7021  05C4  3461               	retlw	97	;'a'
  7022  05C5  346C               	retlw	108	;'l'
  7023  05C6  3469               	retlw	105	;'i'
  7024  05C7  3464               	retlw	100	;'d'
  7025  05C8  3420               	retlw	32	;' '
  7026  05C9  3465               	retlw	101	;'e'
  7027  05CA  3463               	retlw	99	;'c'
  7028  05CB  3468               	retlw	104	;'h'
  7029  05CC  346F               	retlw	111	;'o'
  7030  05CD  3450               	retlw	80	;'P'
  7031  05CE  3469               	retlw	105	;'i'
  7032  05CF  346E               	retlw	110	;'n'
  7033  05D0  3420               	retlw	32	;' '
  7034  05D1  3428               	retlw	40	;'('
  7035  05D2  346D               	retlw	109	;'m'
  7036  05D3  3475               	retlw	117	;'u'
  7037  05D4  3473               	retlw	115	;'s'
  7038  05D5  3474               	retlw	116	;'t'
  7039  05D6  3420               	retlw	32	;' '
  7040  05D7  3462               	retlw	98	;'b'
  7041  05D8  3465               	retlw	101	;'e'
  7042  05D9  3420               	retlw	32	;' '
  7043  05DA  345B               	retlw	91	;'['
  7044  05DB  3441               	retlw	65	;'A'
  7045  05DC  3432               	retlw	50	;'2'
  7046  05DD  342C               	retlw	44	;','
  7047  05DE  3420               	retlw	32	;' '
  7048  05DF  3441               	retlw	65	;'A'
  7049  05E0  3434               	retlw	52	;'4'
  7050  05E1  342C               	retlw	44	;','
  7051  05E2  3420               	retlw	32	;' '
  7052  05E3  3443               	retlw	67	;'C'
  7053  05E4  3433               	retlw	51	;'3'
  7054  05E5  342C               	retlw	44	;','
  7055  05E6  3420               	retlw	32	;' '
  7056  05E7  3443               	retlw	67	;'C'
  7057  05E8  3435               	retlw	53	;'5'
  7058  05E9  345D               	retlw	93	;']'
  7059  05EA  3429               	retlw	41	;')'
  7060  05EB  3400               	retlw	0
  7061                           
  7062                           	psect	stringtext3
  7063  0000                     __pstringtext3:
  7064                           
  7065                           	psect	cinit
  7066  0090                     start_initialization:	
  7067                           ; #config settings
  7068                           
  7069  0090                     __initialization:
  7070                           
  7071                           ; Clear objects allocated to COMMON
  7072  0090  01FA               	clrf	__pbssCOMMON& (0+127)
  7073  0091  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  7074  0092  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  7075  0093  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  7076                           
  7077                           ; Clear objects allocated to BANK0
  7078  0094  3020               	movlw	low __pbssBANK0
  7079  0095  0084               	movwf	4
  7080  0096  3000               	movlw	high __pbssBANK0
  7081  0097  0085               	movwf	5
  7082  0098  3032               	movlw	50
  7083  0099  318F  27DB  3180   	fcall	clear_ram0
  7084                           
  7085                           ; Clear objects allocated to BANK1
  7086  009C  30A0               	movlw	low __pbssBANK1
  7087  009D  0084               	movwf	4
  7088  009E  3000               	movlw	high __pbssBANK1
  7089  009F  0085               	movwf	5
  7090  00A0  3038               	movlw	56
  7091  00A1  318F  27DB  3180   	fcall	clear_ram0
  7092  00A4                     end_of_initialization:	
  7093                           ;End of C runtime variable initialization code
  7094                           
  7095  00A4                     __end_of__initialization:
  7096  00A4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7097  00A5  0020               	movlb	0
  7098  00A6  3183  2B45         	ljmp	_main	;jump to C main() function
  7099                           
  7100                           	psect	bssCOMMON
  7101  007A                     __pbssCOMMON:
  7102  007A                     _eusartRxTail:
  7103  007A                     	ds	1
  7104  007B                     _lastTrig@ccp3$F977:
  7105  007B                     	ds	1
  7106  007C                     _lastTrig@ccp2$F852:
  7107  007C                     	ds	1
  7108  007D                     _lastTrig@ccp1$F706:
  7109  007D                     	ds	1
  7110                           
  7111                           	psect	bssBANK0
  7112  0020                     __pbssBANK0:
  7113  0020                     _timer3ReloadVal:
  7114  0020                     	ds	2
  7115  0022                     _dutyCycle10bit:
  7116  0022                     	ds	2
  7117  0024                     _ocCount:
  7118  0024                     	ds	2
  7119  0026                     _EUSART_ErrorHandler:
  7120  0026                     	ds	2
  7121  0028                     _EUSART_OverrunErrorHandler:
  7122  0028                     	ds	2
  7123  002A                     _EUSART_FramingErrorHandler:
  7124  002A                     	ds	2
  7125  002C                     _EUSART_RxDefaultInterruptHandler:
  7126  002C                     	ds	2
  7127  002E                     _EUSART_TxDefaultInterruptHandler:
  7128  002E                     	ds	2
  7129  0030                     _timer1ReloadVal:
  7130  0030                     	ds	2
  7131  0032                     _ticksDown@ccp3$F975:
  7132  0032                     	ds	2
  7133  0034                     _ticksUp@ccp3$F974:
  7134  0034                     	ds	2
  7135  0036                     _CCP3_CallBack:
  7136  0036                     	ds	2
  7137  0038                     _ticksDown@ccp2$F850:
  7138  0038                     	ds	2
  7139  003A                     _ticksUp@ccp2$F849:
  7140  003A                     	ds	2
  7141  003C                     _CCP2_CallBack:
  7142  003C                     	ds	2
  7143  003E                     _ticksDown:
  7144  003E                     	ds	2
  7145  0040                     _ticksUp:
  7146  0040                     	ds	2
  7147  0042                     _CCP1_CallBack:
  7148  0042                     	ds	2
  7149  0044                     _TMR0_InterruptHandler:
  7150  0044                     	ds	2
  7151  0046                     _dutyCyclePercent:
  7152  0046                     	ds	1
  7153  0047                     _eusartRxLastError:
  7154  0047                     	ds	1
  7155  0048                     _eusartRxCount:
  7156  0048                     	ds	1
  7157  0049                     _eusartRxHead:
  7158  0049                     	ds	1
  7159  004A                     _eusartTxBufferRemaining:
  7160  004A                     	ds	1
  7161  004B                     _eusartTxTail:
  7162  004B                     	ds	1
  7163  004C                     _eusartTxHead:
  7164  004C                     	ds	1
  7165  004D                     _sameSens@ccp3$F976:
  7166  004D                     	ds	1
  7167  004E                     _sameSens@ccp2$F851:
  7168  004E                     	ds	1
  7169  004F                     _sameSens:
  7170  004F                     	ds	1
  7171  0050                     _CountCallBack:
  7172  0050                     	ds	1
  7173  0051                     _lastTrig:
  7174  0051                     	ds	1
  7175                           
  7176                           	psect	bssBANK1
  7177  00A0                     __pbssBANK1:
  7178  00A0                     _eusartRxStatusBuffer:
  7179  00A0                     	ds	8
  7180  00A8                     _eusartRxBuffer:
  7181  00A8                     	ds	8
  7182  00B0                     _eusartTxBuffer:
  7183  00B0                     	ds	8
  7184  00B8                     _Sens3:
  7185  00B8                     	ds	6
  7186  00BE                     _Sens2:
  7187  00BE                     	ds	6
  7188  00C4                     _Sens1:
  7189  00C4                     	ds	6
  7190  00CA                     _micros@FRT$F1520:
  7191  00CA                     	ds	4
  7192  00CE                     _millis:
  7193  00CE                     	ds	4
  7194  00D2                     _micros:
  7195  00D2                     	ds	4
  7196  00D6                     _currFreq:
  7197  00D6                     	ds	2
  7198                           
  7199                           	psect	clrtext
  7200  0FDB                     clear_ram0:	
  7201                           ;	Called with FSR0 containing the base address, and
  7202                           ;	WREG with the size to clear
  7203                           
  7204  0FDB  0064               	clrwdt	;clear the watchdog before getting into this loop
  7205  0FDC                     clrloop0:
  7206  0FDC  0180               	clrf	0	;clear RAM location pointed to by FSR
  7207  0FDD  3101               	addfsr 0,1
  7208  0FDE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7209  0FDF  2FDC               	goto	clrloop0	;have we reached the end yet?
  7210  0FE0  3400               	retlw	0	;all done for this memory range, return
  7211                           
  7212                           	psect	cstackCOMMON
  7213  0070                     __pcstackCOMMON:
  7214  0070                     ?_JSN_GetLastTrig:
  7215  0070                     ??_JSN_GetLastTrig:	
  7216                           ; 1 bytes @ 0x0
  7217                           
  7218  0070                     ?_SYSTEM_Initialize:	
  7219                           ; 1 bytes @ 0x0
  7220                           
  7221  0070                     ?_PMD_Initialize:	
  7222                           ; 1 bytes @ 0x0
  7223                           
  7224  0070                     ?_PIN_MANAGER_Initialize:	
  7225                           ; 1 bytes @ 0x0
  7226                           
  7227  0070                     ?_OSCILLATOR_Initialize:	
  7228                           ; 1 bytes @ 0x0
  7229                           
  7230  0070                     ?_WDT_Initialize:	
  7231                           ; 1 bytes @ 0x0
  7232                           
  7233  0070                     ?_CCP3_Initialize:	
  7234                           ; 1 bytes @ 0x0
  7235                           
  7236  0070                     ?_CCP1_Initialize:	
  7237                           ; 1 bytes @ 0x0
  7238                           
  7239  0070                     ?_TMR2_Initialize:	
  7240                           ; 1 bytes @ 0x0
  7241                           
  7242  0070                     ?_TMR0_Initialize:	
  7243                           ; 1 bytes @ 0x0
  7244                           
  7245  0070                     ?_CCP2_Initialize:	
  7246                           ; 1 bytes @ 0x0
  7247                           
  7248  0070                     ?_CCP4_Initialize:	
  7249                           ; 1 bytes @ 0x0
  7250                           
  7251  0070                     ?_TMR3_Initialize:	
  7252                           ; 1 bytes @ 0x0
  7253                           
  7254  0070                     ?_PWM5_Initialize:	
  7255                           ; 1 bytes @ 0x0
  7256                           
  7257  0070                     ?_TMR1_Initialize:	
  7258                           ; 1 bytes @ 0x0
  7259                           
  7260  0070                     ?_EUSART_Initialize:	
  7261                           ; 1 bytes @ 0x0
  7262                           
  7263  0070                     ?_TMR0_CallBack:	
  7264                           ; 1 bytes @ 0x0
  7265                           
  7266  0070                     ??_TMR0_CallBack:	
  7267                           ; 1 bytes @ 0x0
  7268                           
  7269  0070                     ?_FRT_IncMillis:	
  7270                           ; 1 bytes @ 0x0
  7271                           
  7272  0070                     ??_FRT_IncMillis:	
  7273                           ; 1 bytes @ 0x0
  7274                           
  7275  0070                     ?_FRT_IncMicros:	
  7276                           ; 1 bytes @ 0x0
  7277                           
  7278  0070                     ??_FRT_IncMicros:	
  7279                           ; 1 bytes @ 0x0
  7280                           
  7281  0070                     ?_EUSART_Receive_ISR:	
  7282                           ; 1 bytes @ 0x0
  7283                           
  7284  0070                     ?_EUSART_Transmit_ISR:	
  7285                           ; 1 bytes @ 0x0
  7286                           
  7287  0070                     ??_EUSART_Transmit_ISR:	
  7288                           ; 1 bytes @ 0x0
  7289                           
  7290  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  7291                           ; 1 bytes @ 0x0
  7292                           
  7293  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  7294                           ; 1 bytes @ 0x0
  7295                           
  7296  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  7297                           ; 1 bytes @ 0x0
  7298                           
  7299  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  7300                           ; 1 bytes @ 0x0
  7301                           
  7302  0070                     ?_EUSART_DefaultErrorHandler:	
  7303                           ; 1 bytes @ 0x0
  7304                           
  7305  0070                     ?_EUSART_RxDataHandler:	
  7306                           ; 1 bytes @ 0x0
  7307                           
  7308  0070                     ??_EUSART_RxDataHandler:	
  7309                           ; 1 bytes @ 0x0
  7310                           
  7311  0070                     ?_CCP4_CompareISR:	
  7312                           ; 1 bytes @ 0x0
  7313                           
  7314  0070                     ??_CCP4_CompareISR:	
  7315                           ; 1 bytes @ 0x0
  7316                           
  7317  0070                     ?_TMR3_ISR:	
  7318                           ; 1 bytes @ 0x0
  7319                           
  7320  0070                     ?_SpeakerTone_Off:	
  7321                           ; 1 bytes @ 0x0
  7322                           
  7323  0070                     ?_SpeakerTone_On:	
  7324                           ; 1 bytes @ 0x0
  7325                           
  7326  0070                     ?_TMR3_StopTimer:	
  7327                           ; 1 bytes @ 0x0
  7328                           
  7329  0070                     ?_TMR3_Reload:	
  7330                           ; 1 bytes @ 0x0
  7331                           
  7332  0070                     ?_TMR3_StartTimer:	
  7333                           ; 1 bytes @ 0x0
  7334                           
  7335  0070                     ?_PIC16_Init:	
  7336                           ; 1 bytes @ 0x0
  7337                           
  7338  0070                     ?_ReadPin:	
  7339                           ; 1 bytes @ 0x0
  7340                           
  7341  0070                     ??_ReadPin:	
  7342                           ; 1 bytes @ 0x0
  7343                           
  7344  0070                     ?_TMR0_ISR:	
  7345                           ; 1 bytes @ 0x0
  7346                           
  7347  0070                     ??_TMR0_ISR:	
  7348                           ; 1 bytes @ 0x0
  7349                           
  7350  0070                     ?_CCP1_CaptureISR:	
  7351                           ; 1 bytes @ 0x0
  7352                           
  7353  0070                     ?_CCP2_CaptureISR:	
  7354                           ; 1 bytes @ 0x0
  7355                           
  7356  0070                     ?_CCP3_CaptureISR:	
  7357                           ; 1 bytes @ 0x0
  7358                           
  7359  0070                     ?_TMR1_WriteTimer:	
  7360                           ; 1 bytes @ 0x0
  7361                           
  7362  0070                     ?_TMR1_ISR:	
  7363                           ; 1 bytes @ 0x0
  7364                           
  7365  0070                     ?_INTERRUPT_InterruptManager:	
  7366                           ; 1 bytes @ 0x0
  7367                           
  7368  0070                     ?_SpeakerTone_Init:	
  7369                           ; 1 bytes @ 0x0
  7370                           
  7371  0070                     ?i1_TMR3_WriteTimer:	
  7372                           ; 1 bytes @ 0x0
  7373                           
  7374  0070                     ?i1_TMR3_Reload:	
  7375                           ; 1 bytes @ 0x0
  7376                           
  7377  0070                     ?_main:	
  7378                           ; 1 bytes @ 0x0
  7379                           
  7380  0070                     TMR1_WriteTimer@timerVal:	
  7381                           ; 2 bytes @ 0x0
  7382                           
  7383  0070                     i1TMR3_WriteTimer@timerVal:	
  7384                           ; 2 bytes @ 0x0
  7385                           
  7386                           
  7387                           ; 2 bytes @ 0x0
  7388  0070                     	ds	1
  7389  0071                     ??_EUSART_Receive_ISR:
  7390  0071                     ??_EUSART_DefaultErrorHandler:	
  7391                           ; 1 bytes @ 0x1
  7392                           
  7393                           
  7394                           ; 1 bytes @ 0x1
  7395  0071                     	ds	1
  7396  0072                     ??_TMR3_ISR:
  7397  0072                     ??_TMR1_WriteTimer:	
  7398                           ; 1 bytes @ 0x2
  7399                           
  7400  0072                     ??_TMR1_ISR:	
  7401                           ; 1 bytes @ 0x2
  7402                           
  7403  0072                     ??i1_TMR3_WriteTimer:	
  7404                           ; 1 bytes @ 0x2
  7405                           
  7406  0072                     ??i1_TMR3_Reload:	
  7407                           ; 1 bytes @ 0x2
  7408                           
  7409  0072                     ReadPin@pin:	
  7410                           ; 1 bytes @ 0x2
  7411                           
  7412                           
  7413                           ; 1 bytes @ 0x2
  7414  0072                     	ds	1
  7415  0073                     ?_CCP1_DefaultCallBack:
  7416  0073                     ?_CCP2_DefaultCallBack:	
  7417                           ; 1 bytes @ 0x3
  7418                           
  7419  0073                     ?_CCP3_DefaultCallBack:	
  7420                           ; 1 bytes @ 0x3
  7421                           
  7422  0073                     CCP1_DefaultCallBack@capturedValue:	
  7423                           ; 1 bytes @ 0x3
  7424                           
  7425  0073                     CCP2_DefaultCallBack@capturedValue:	
  7426                           ; 2 bytes @ 0x3
  7427                           
  7428  0073                     CCP3_DefaultCallBack@capturedValue:	
  7429                           ; 2 bytes @ 0x3
  7430                           
  7431                           
  7432                           ; 2 bytes @ 0x3
  7433  0073                     	ds	2
  7434  0075                     ??_CCP1_DefaultCallBack:
  7435  0075                     ??_CCP2_DefaultCallBack:	
  7436                           ; 1 bytes @ 0x5
  7437                           
  7438  0075                     ??_CCP3_DefaultCallBack:	
  7439                           ; 1 bytes @ 0x5
  7440                           
  7441                           
  7442                           ; 1 bytes @ 0x5
  7443  0075                     	ds	2
  7444  0077                     ??_CCP1_CaptureISR:
  7445  0077                     ??_CCP2_CaptureISR:	
  7446                           ; 1 bytes @ 0x7
  7447                           
  7448  0077                     ??_CCP3_CaptureISR:	
  7449                           ; 1 bytes @ 0x7
  7450                           
  7451                           
  7452                           ; 1 bytes @ 0x7
  7453  0077                     	ds	1
  7454  0078                     CCP1_CaptureISR@module:
  7455  0078                     CCP2_CaptureISR@module:	
  7456                           ; 2 bytes @ 0x8
  7457                           
  7458  0078                     CCP3_CaptureISR@module:	
  7459                           ; 2 bytes @ 0x8
  7460                           
  7461                           
  7462                           ; 2 bytes @ 0x8
  7463  0078                     	ds	2
  7464  007A                     ??_INTERRUPT_InterruptManager:
  7465                           
  7466                           	psect	cstackBANK0
  7467  0052                     __pcstackBANK0:	
  7468                           ; 1 bytes @ 0xA
  7469                           
  7470  0052                     ?_SetPin:
  7471  0052                     ?_WritePin:	
  7472                           ; 1 bytes @ 0x0
  7473                           
  7474  0052                     ??_PMD_Initialize:	
  7475                           ; 1 bytes @ 0x0
  7476                           
  7477  0052                     ??_PIN_MANAGER_Initialize:	
  7478                           ; 1 bytes @ 0x0
  7479                           
  7480  0052                     ??_OSCILLATOR_Initialize:	
  7481                           ; 1 bytes @ 0x0
  7482                           
  7483  0052                     ??_WDT_Initialize:	
  7484                           ; 1 bytes @ 0x0
  7485                           
  7486  0052                     ??_TMR2_Initialize:	
  7487                           ; 1 bytes @ 0x0
  7488                           
  7489  0052                     ??_CCP4_Initialize:	
  7490                           ; 1 bytes @ 0x0
  7491                           
  7492  0052                     ??_TMR3_Initialize:	
  7493                           ; 1 bytes @ 0x0
  7494                           
  7495  0052                     ??_PWM5_Initialize:	
  7496                           ; 1 bytes @ 0x0
  7497                           
  7498  0052                     ??_TMR1_Initialize:	
  7499                           ; 1 bytes @ 0x0
  7500                           
  7501  0052                     ?_TMR0_SetInterruptHandler:	
  7502                           ; 1 bytes @ 0x0
  7503                           
  7504  0052                     ?_CCP1_SetCallBack:	
  7505                           ; 1 bytes @ 0x0
  7506                           
  7507  0052                     ?_CCP2_SetCallBack:	
  7508                           ; 1 bytes @ 0x0
  7509                           
  7510  0052                     ?_CCP3_SetCallBack:	
  7511                           ; 1 bytes @ 0x0
  7512                           
  7513  0052                     ?_EUSART_SetRxInterruptHandler:	
  7514                           ; 1 bytes @ 0x0
  7515                           
  7516  0052                     ?_EUSART_SetTxInterruptHandler:	
  7517                           ; 1 bytes @ 0x0
  7518                           
  7519  0052                     ?_EUSART_SetFramingErrorHandler:	
  7520                           ; 1 bytes @ 0x0
  7521                           
  7522  0052                     ?_EUSART_SetOverrunErrorHandler:	
  7523                           ; 1 bytes @ 0x0
  7524                           
  7525  0052                     ?_EUSART_SetErrorHandler:	
  7526                           ; 1 bytes @ 0x0
  7527                           
  7528  0052                     ?_CCP4_SetCompareCount:	
  7529                           ; 1 bytes @ 0x0
  7530                           
  7531  0052                     ??_SpeakerTone_On:	
  7532                           ; 1 bytes @ 0x0
  7533                           
  7534  0052                     ??_TMR3_StopTimer:	
  7535                           ; 1 bytes @ 0x0
  7536                           
  7537  0052                     ??_TMR3_StartTimer:	
  7538                           ; 1 bytes @ 0x0
  7539                           
  7540  0052                     ?_TMR3_WriteTimer:	
  7541                           ; 1 bytes @ 0x0
  7542                           
  7543  0052                     ?_FRT_GetMillis:	
  7544                           ; 1 bytes @ 0x0
  7545                           
  7546  0052                     ?___aldiv:	
  7547                           ; 4 bytes @ 0x0
  7548                           
  7549  0052                     SetPin@io:	
  7550                           ; 4 bytes @ 0x0
  7551                           
  7552  0052                     WritePin@val:	
  7553                           ; 1 bytes @ 0x0
  7554                           
  7555  0052                     TMR0_SetInterruptHandler@InterruptHandler:	
  7556                           ; 1 bytes @ 0x0
  7557                           
  7558  0052                     CCP1_SetCallBack@customCallBack:	
  7559                           ; 2 bytes @ 0x0
  7560                           
  7561  0052                     CCP2_SetCallBack@customCallBack:	
  7562                           ; 2 bytes @ 0x0
  7563                           
  7564  0052                     CCP3_SetCallBack@customCallBack:	
  7565                           ; 2 bytes @ 0x0
  7566                           
  7567  0052                     EUSART_SetFramingErrorHandler@interruptHandler:	
  7568                           ; 2 bytes @ 0x0
  7569                           
  7570  0052                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  7571                           ; 2 bytes @ 0x0
  7572                           
  7573  0052                     EUSART_SetErrorHandler@interruptHandler:	
  7574                           ; 2 bytes @ 0x0
  7575                           
  7576  0052                     EUSART_SetTxInterruptHandler@interruptHandler:	
  7577                           ; 2 bytes @ 0x0
  7578                           
  7579  0052                     EUSART_SetRxInterruptHandler@interruptHandler:	
  7580                           ; 2 bytes @ 0x0
  7581                           
  7582  0052                     CCP4_SetCompareCount@compareCount:	
  7583                           ; 2 bytes @ 0x0
  7584                           
  7585  0052                     TMR3_WriteTimer@timerVal:	
  7586                           ; 2 bytes @ 0x0
  7587                           
  7588  0052                     ___aldiv@divisor:	
  7589                           ; 2 bytes @ 0x0
  7590                           
  7591                           
  7592                           ; 4 bytes @ 0x0
  7593  0052                     	ds	1
  7594  0053                     ??_SetPin:
  7595  0053                     ??_WritePin:	
  7596                           ; 1 bytes @ 0x1
  7597                           
  7598                           
  7599                           ; 1 bytes @ 0x1
  7600  0053                     	ds	1
  7601  0054                     ??_CCP3_Initialize:
  7602  0054                     ??_CCP1_Initialize:	
  7603                           ; 1 bytes @ 0x2
  7604                           
  7605  0054                     ??_TMR0_Initialize:	
  7606                           ; 1 bytes @ 0x2
  7607                           
  7608  0054                     ??_CCP2_Initialize:	
  7609                           ; 1 bytes @ 0x2
  7610                           
  7611  0054                     ??_EUSART_Initialize:	
  7612                           ; 1 bytes @ 0x2
  7613                           
  7614  0054                     ??_TMR0_SetInterruptHandler:	
  7615                           ; 1 bytes @ 0x2
  7616                           
  7617  0054                     ??_CCP1_SetCallBack:	
  7618                           ; 1 bytes @ 0x2
  7619                           
  7620  0054                     ??_CCP2_SetCallBack:	
  7621                           ; 1 bytes @ 0x2
  7622                           
  7623  0054                     ??_CCP3_SetCallBack:	
  7624                           ; 1 bytes @ 0x2
  7625                           
  7626  0054                     ??_EUSART_SetRxInterruptHandler:	
  7627                           ; 1 bytes @ 0x2
  7628                           
  7629  0054                     ??_EUSART_SetTxInterruptHandler:	
  7630                           ; 1 bytes @ 0x2
  7631                           
  7632  0054                     ??_EUSART_SetFramingErrorHandler:	
  7633                           ; 1 bytes @ 0x2
  7634                           
  7635  0054                     ??_EUSART_SetOverrunErrorHandler:	
  7636                           ; 1 bytes @ 0x2
  7637                           
  7638  0054                     ??_EUSART_SetErrorHandler:	
  7639                           ; 1 bytes @ 0x2
  7640                           
  7641  0054                     ??_SpeakerTone_Off:	
  7642                           ; 1 bytes @ 0x2
  7643                           
  7644  0054                     ??_CCP4_SetCompareCount:	
  7645                           ; 1 bytes @ 0x2
  7646                           
  7647  0054                     ??_TMR3_Reload:	
  7648                           ; 1 bytes @ 0x2
  7649                           
  7650  0054                     ??_TMR3_WriteTimer:	
  7651                           ; 1 bytes @ 0x2
  7652                           
  7653  0054                     CCP4_SetCompareCount@module:	
  7654                           ; 1 bytes @ 0x2
  7655                           
  7656                           
  7657                           ; 2 bytes @ 0x2
  7658  0054                     	ds	1
  7659  0055                     ??_SYSTEM_Initialize:
  7660  0055                     ??_PIC16_Init:	
  7661                           ; 1 bytes @ 0x3
  7662                           
  7663  0055                     SetPin@pin:	
  7664                           ; 1 bytes @ 0x3
  7665                           
  7666  0055                     WritePin@pin:	
  7667                           ; 1 bytes @ 0x3
  7668                           
  7669                           
  7670                           ; 1 bytes @ 0x3
  7671  0055                     	ds	1
  7672  0056                     ??_FRT_GetMillis:
  7673  0056                     ??_SpeakerTone_Init:	
  7674                           ; 1 bytes @ 0x4
  7675                           
  7676  0056                     ___aldiv@dividend:	
  7677                           ; 1 bytes @ 0x4
  7678                           
  7679                           
  7680                           ; 4 bytes @ 0x4
  7681  0056                     	ds	4
  7682  005A                     ??___aldiv:
  7683                           
  7684                           ; 1 bytes @ 0x8
  7685  005A                     	ds	1
  7686  005B                     ___aldiv@counter:
  7687                           
  7688                           ; 1 bytes @ 0x9
  7689  005B                     	ds	1
  7690  005C                     ___aldiv@sign:
  7691                           
  7692                           ; 1 bytes @ 0xA
  7693  005C                     	ds	1
  7694  005D                     ___aldiv@quotient:
  7695                           
  7696                           ; 4 bytes @ 0xB
  7697  005D                     	ds	4
  7698  0061                     ?_SpeakerTone_SetFrequency:
  7699  0061                     SpeakerTone_SetFrequency@newFrequency:	
  7700                           ; 1 bytes @ 0xF
  7701                           
  7702                           
  7703                           ; 2 bytes @ 0xF
  7704  0061                     	ds	2
  7705  0063                     ??_SpeakerTone_SetFrequency:
  7706  0063                     ??_main:	
  7707                           ; 1 bytes @ 0x11
  7708                           
  7709                           
  7710                           ; 1 bytes @ 0x11
  7711  0063                     	ds	4
  7712  0067                     main@prevMilli:
  7713                           
  7714                           ; 4 bytes @ 0x15
  7715  0067                     	ds	4
  7716  006B                     main@i:
  7717                           
  7718                           ; 1 bytes @ 0x19
  7719  006B                     	ds	1
  7720  006C                     main@currMilli:
  7721                           
  7722                           ; 4 bytes @ 0x1A
  7723  006C                     	ds	4
  7724                           
  7725                           	psect	maintext
  7726  0345                     __pmaintext:	
  7727 ;;
  7728 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  7729 ;;
  7730 ;; *************** function _main *****************
  7731 ;; Defined at:
  7732 ;;		line 87 in file "SpeakerTone.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;		None
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;  currMilli       4   26[BANK0 ] unsigned long 
  7737 ;;  prevMilli       4   21[BANK0 ] unsigned long 
  7738 ;;  i               1   25[BANK0 ] unsigned char 
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  2  819[None  ] int 
  7741 ;; Registers used:
  7742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7743 ;; Tracked objects:
  7744 ;;		On entry : B1F/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7749 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7750 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7751 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7752 ;;Total ram usage:       13 bytes
  7753 ;; Hardware stack levels required when called: 8
  7754 ;; This function calls:
  7755 ;;		_FRT_GetMillis
  7756 ;;		_PIC16_Init
  7757 ;;		_SpeakerTone_Init
  7758 ;;		_SpeakerTone_On
  7759 ;;		_SpeakerTone_SetFrequency
  7760 ;; This function is called by:
  7761 ;;		Startup code after reset
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765  0345                     _main:	
  7766                           ;psect for function _main
  7767                           
  7768  0345                     l3653:	
  7769                           ;incstack = 0
  7770                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7771                           
  7772                           
  7773                           ;SpeakerTone.c: 88:     PIC16_Init();
  7774  0345  3187  2726  3183   	fcall	_PIC16_Init
  7775  0348                     l3655:
  7776                           
  7777                           ;SpeakerTone.c: 89:     SpeakerTone_Init();
  7778  0348  3186  2639  3183   	fcall	_SpeakerTone_Init
  7779  034B                     l3657:
  7780                           
  7781                           ;SpeakerTone.c: 91:     unsigned long currMilli = FRT_GetMillis();
  7782  034B  3187  275B  3183   	fcall	_FRT_GetMillis
  7783  034E  0020               	movlb	0	; select bank0
  7784  034F  0855               	movf	?_FRT_GetMillis+3,w
  7785  0350  00EF               	movwf	main@currMilli+3
  7786  0351  0854               	movf	?_FRT_GetMillis+2,w
  7787  0352  00EE               	movwf	main@currMilli+2
  7788  0353  0853               	movf	?_FRT_GetMillis+1,w
  7789  0354  00ED               	movwf	main@currMilli+1
  7790  0355  0852               	movf	?_FRT_GetMillis,w
  7791  0356  00EC               	movwf	main@currMilli
  7792  0357                     l3659:
  7793                           
  7794                           ;SpeakerTone.c: 92:     unsigned long prevMilli = currMilli;
  7795  0357  086F               	movf	main@currMilli+3,w
  7796  0358  00EA               	movwf	main@prevMilli+3
  7797  0359  086E               	movf	main@currMilli+2,w
  7798  035A  00E9               	movwf	main@prevMilli+2
  7799  035B  086D               	movf	main@currMilli+1,w
  7800  035C  00E8               	movwf	main@prevMilli+1
  7801  035D  086C               	movf	main@currMilli,w
  7802  035E  00E7               	movwf	main@prevMilli
  7803  035F                     l3661:
  7804                           
  7805                           ;SpeakerTone.c: 93:     SpeakerTone_SetFrequency(262);
  7806  035F  3006               	movlw	6
  7807  0360  00E1               	movwf	SpeakerTone_SetFrequency@newFrequency
  7808  0361  3001               	movlw	1
  7809  0362  00E2               	movwf	SpeakerTone_SetFrequency@newFrequency+1
  7810  0363  3184  2416  3183   	fcall	_SpeakerTone_SetFrequency
  7811  0366                     l3663:
  7812                           
  7813                           ;SpeakerTone.c: 94:     uint8_t i = 0;
  7814  0366  0020               	movlb	0	; select bank0
  7815  0367  01EB               	clrf	main@i
  7816  0368                     l3665:
  7817                           
  7818                           ;SpeakerTone.c: 95:     SpeakerTone_On();
  7819  0368  318F  279B  3183   	fcall	_SpeakerTone_On
  7820  036B                     l3667:
  7821                           
  7822                           ;SpeakerTone.c: 99:         currMilli = FRT_GetMillis();
  7823  036B  3187  275B  3183   	fcall	_FRT_GetMillis
  7824  036E  0020               	movlb	0	; select bank0
  7825  036F  0855               	movf	?_FRT_GetMillis+3,w
  7826  0370  00EF               	movwf	main@currMilli+3
  7827  0371  0854               	movf	?_FRT_GetMillis+2,w
  7828  0372  00EE               	movwf	main@currMilli+2
  7829  0373  0853               	movf	?_FRT_GetMillis+1,w
  7830  0374  00ED               	movwf	main@currMilli+1
  7831  0375  0852               	movf	?_FRT_GetMillis,w
  7832  0376  00EC               	movwf	main@currMilli
  7833  0377                     l3669:
  7834                           
  7835                           ;SpeakerTone.c: 100:         if((currMilli - prevMilli) > 500) {
  7836  0377  0867               	movf	main@prevMilli,w
  7837  0378  026C               	subwf	main@currMilli,w
  7838  0379  00E3               	movwf	??_main
  7839  037A  0868               	movf	main@prevMilli+1,w
  7840  037B  3B6D               	subwfb	main@currMilli+1,w
  7841  037C  00E4               	movwf	??_main+1
  7842  037D  0869               	movf	main@prevMilli+2,w
  7843  037E  3B6E               	subwfb	main@currMilli+2,w
  7844  037F  00E5               	movwf	??_main+2
  7845  0380  086A               	movf	main@prevMilli+3,w
  7846  0381  3B6F               	subwfb	main@currMilli+3,w
  7847  0382  00E6               	movwf	??_main+3
  7848  0383  0866               	movf	??_main+3,w
  7849  0384  1D03               	btfss	3,2
  7850  0385  2B91               	goto	u1010
  7851  0386  0865               	movf	??_main+2,w
  7852  0387  1D03               	btfss	3,2
  7853  0388  2B91               	goto	u1010
  7854  0389  30F5               	movlw	245
  7855  038A  0263               	subwf	??_main,w
  7856  038B  3001               	movlw	1
  7857  038C  3B64               	subwfb	??_main+1,w
  7858  038D  1C03               	btfss	3,0
  7859  038E  2B90               	goto	u1011
  7860  038F  2B91               	goto	u1010
  7861  0390                     u1011:
  7862  0390  2B6B               	goto	l3667
  7863  0391                     u1010:
  7864  0391  2BB2               	goto	l3687
  7865  0392                     l3673:
  7866                           
  7867                           ;SpeakerTone.c: 103:                     SpeakerTone_SetFrequency(262);
  7868  0392  3006               	movlw	6
  7869  0393  00E1               	movwf	SpeakerTone_SetFrequency@newFrequency
  7870  0394  3001               	movlw	1
  7871  0395  00E2               	movwf	SpeakerTone_SetFrequency@newFrequency+1
  7872  0396  3184  2416  3183   	fcall	_SpeakerTone_SetFrequency
  7873  0399                     l3675:
  7874                           
  7875                           ;SpeakerTone.c: 104:                     i++;
  7876  0399  3001               	movlw	1
  7877  039A  0020               	movlb	0	; select bank0
  7878  039B  00E3               	movwf	??_main
  7879  039C  0863               	movf	??_main,w
  7880  039D  07EB               	addwf	main@i,f
  7881                           
  7882                           ;SpeakerTone.c: 105:                     break;
  7883  039E  2BC6               	goto	l3689
  7884  039F                     l3677:
  7885                           
  7886                           ;SpeakerTone.c: 107:                     SpeakerTone_SetFrequency(392);
  7887  039F  3088               	movlw	136
  7888  03A0  00E1               	movwf	SpeakerTone_SetFrequency@newFrequency
  7889  03A1  3001               	movlw	1
  7890  03A2  00E2               	movwf	SpeakerTone_SetFrequency@newFrequency+1
  7891  03A3  3184  2416  3183   	fcall	_SpeakerTone_SetFrequency
  7892  03A6  2B99               	goto	l3675
  7893  03A7                     l3681:
  7894                           
  7895                           ;SpeakerTone.c: 111:                     SpeakerTone_SetFrequency(523);
  7896  03A7  300B               	movlw	11
  7897  03A8  00E1               	movwf	SpeakerTone_SetFrequency@newFrequency
  7898  03A9  3002               	movlw	2
  7899  03AA  00E2               	movwf	SpeakerTone_SetFrequency@newFrequency+1
  7900  03AB  3184  2416  3183   	fcall	_SpeakerTone_SetFrequency
  7901  03AE                     l3683:
  7902                           
  7903                           ;SpeakerTone.c: 112:                     i -=2;
  7904  03AE  3002               	movlw	2
  7905  03AF  0020               	movlb	0	; select bank0
  7906  03B0  02EB               	subwf	main@i,f
  7907                           
  7908                           ;SpeakerTone.c: 113:                     break;
  7909  03B1  2BC6               	goto	l3689
  7910  03B2                     l3687:
  7911  03B2  0020               	movlb	0	; select bank0
  7912  03B3  086B               	movf	main@i,w
  7913  03B4  00E3               	movwf	??_main
  7914  03B5  01E4               	clrf	??_main+1
  7915                           
  7916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7917                           ; Switch size 1, requested type "simple"
  7918                           ; Number of cases is 1, Range of values is 0 to 0
  7919                           ; switch strategies available:
  7920                           ; Name         Instructions Cycles
  7921                           ; simple_byte            4     3 (average)
  7922                           ; direct_byte            8     6 (fixed)
  7923                           ; jumptable            260     6 (fixed)
  7924                           ;	Chosen strategy is simple_byte
  7925  03B6  0864               	movf	??_main+1,w
  7926  03B7  3A00               	xorlw	0	; case 0
  7927  03B8  1903               	skipnz
  7928  03B9  2BBB               	goto	l3931
  7929  03BA  2BC6               	goto	l3689
  7930  03BB                     l3931:
  7931                           
  7932                           ; Switch size 1, requested type "simple"
  7933                           ; Number of cases is 3, Range of values is 0 to 2
  7934                           ; switch strategies available:
  7935                           ; Name         Instructions Cycles
  7936                           ; simple_byte           10     6 (average)
  7937                           ; direct_byte           12     6 (fixed)
  7938                           ; jumptable            260     6 (fixed)
  7939                           ;	Chosen strategy is simple_byte
  7940  03BB  0863               	movf	??_main,w
  7941  03BC  3A00               	xorlw	0	; case 0
  7942  03BD  1903               	skipnz
  7943  03BE  2B92               	goto	l3673
  7944  03BF  3A01               	xorlw	1	; case 1
  7945  03C0  1903               	skipnz
  7946  03C1  2B9F               	goto	l3677
  7947  03C2  3A03               	xorlw	3	; case 2
  7948  03C3  1903               	skipnz
  7949  03C4  2BA7               	goto	l3681
  7950  03C5  2BC6               	goto	l3689
  7951  03C6                     l3689:
  7952                           
  7953                           ;SpeakerTone.c: 115:             prevMilli = currMilli;
  7954  03C6  086F               	movf	main@currMilli+3,w
  7955  03C7  00EA               	movwf	main@prevMilli+3
  7956  03C8  086E               	movf	main@currMilli+2,w
  7957  03C9  00E9               	movwf	main@prevMilli+2
  7958  03CA  086D               	movf	main@currMilli+1,w
  7959  03CB  00E8               	movwf	main@prevMilli+1
  7960  03CC  086C               	movf	main@currMilli,w
  7961  03CD  00E7               	movwf	main@prevMilli
  7962  03CE  2B6B               	goto	l3667
  7963  03CF  3180  288E         	ljmp	start
  7964  03D1                     __end_of_main:
  7965                           
  7966                           	psect	text1
  7967  0416                     __ptext1:	
  7968 ;; *************** function _SpeakerTone_SetFrequency *****************
  7969 ;; Defined at:
  7970 ;;		line 43 in file "SpeakerTone.c"
  7971 ;; Parameters:    Size  Location     Type
  7972 ;;  newFrequency    2   15[BANK0 ] unsigned short 
  7973 ;; Auto vars:     Size  Location     Type
  7974 ;;		None
  7975 ;; Return value:  Size  Location     Type
  7976 ;;                  1    wreg      unsigned char 
  7977 ;; Registers used:
  7978 ;;		wreg, status,2, status,0, pclath, cstack
  7979 ;; Tracked objects:
  7980 ;;		On entry : 0/0
  7981 ;;		On exit  : 0/0
  7982 ;;		Unchanged: 0/0
  7983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7984 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7987 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7988 ;;Total ram usage:        2 bytes
  7989 ;; Hardware stack levels used: 1
  7990 ;; Hardware stack levels required when called: 7
  7991 ;; This function calls:
  7992 ;;		_CCP4_SetCompareCount
  7993 ;;		_SpeakerTone_Off
  7994 ;;		_SpeakerTone_On
  7995 ;;		___aldiv
  7996 ;; This function is called by:
  7997 ;;		_main
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001  0416                     _SpeakerTone_SetFrequency:	
  8002                           ;psect for function _SpeakerTone_SetFrequency
  8003                           
  8004  0416                     l3533:	
  8005                           ;incstack = 0
  8006                           ; Regs used in _SpeakerTone_SetFrequency: [wreg+status,2+status,0+pclath+cstack]
  8007                           
  8008                           
  8009                           ;SpeakerTone.c: 44:     if((newFrequency < 100)||(newFrequency > 10000))
  8010  0416  3000               	movlw	0
  8011  0417  0020               	movlb	0	; select bank0
  8012  0418  0262               	subwf	SpeakerTone_SetFrequency@newFrequency+1,w
  8013  0419  3064               	movlw	100
  8014  041A  1903               	skipnz
  8015  041B  0261               	subwf	SpeakerTone_SetFrequency@newFrequency,w
  8016  041C  1C03               	skipc
  8017  041D  2C1F               	goto	u791
  8018  041E  2C20               	goto	u790
  8019  041F                     u791:
  8020  041F  2C56               	goto	l805
  8021  0420                     u790:
  8022  0420                     l3535:
  8023  0420  3027               	movlw	39
  8024  0421  0262               	subwf	SpeakerTone_SetFrequency@newFrequency+1,w
  8025  0422  3011               	movlw	17
  8026  0423  1903               	skipnz
  8027  0424  0261               	subwf	SpeakerTone_SetFrequency@newFrequency,w
  8028  0425  1C03               	skipc
  8029  0426  2C28               	goto	u801
  8030  0427  2C29               	goto	u800
  8031  0428                     u801:
  8032  0428  2C2A               	goto	l3539
  8033  0429                     u800:
  8034  0429  2C56               	goto	l805
  8035  042A                     l3539:
  8036                           
  8037                           ;SpeakerTone.c: 47:         SpeakerTone_Off();
  8038  042A  318F  27E8  3184   	fcall	_SpeakerTone_Off
  8039  042D                     l3541:
  8040                           
  8041                           ;SpeakerTone.c: 48:         currFreq = newFrequency;
  8042  042D  0020               	movlb	0	; select bank0
  8043  042E  0862               	movf	SpeakerTone_SetFrequency@newFrequency+1,w
  8044  042F  0021               	movlb	1	; select bank1
  8045  0430  00D7               	movwf	(_currFreq+1)^(0+128)
  8046  0431  0020               	movlb	0	; select bank0
  8047  0432  0861               	movf	SpeakerTone_SetFrequency@newFrequency,w
  8048  0433  0021               	movlb	1	; select bank1
  8049  0434  00D6               	movwf	_currFreq^(0+128)
  8050  0435                     l3543:
  8051                           
  8052                           ;SpeakerTone.c: 49:         ocCount = (uint16_t)(0x001E8480 / newFrequency);
  8053  0435  0020               	movlb	0	; select bank0
  8054  0436  0861               	movf	SpeakerTone_SetFrequency@newFrequency,w
  8055  0437  00D2               	movwf	___aldiv@divisor
  8056  0438  0862               	movf	SpeakerTone_SetFrequency@newFrequency+1,w
  8057  0439  00D3               	movwf	___aldiv@divisor+1
  8058  043A  01D4               	clrf	___aldiv@divisor+2
  8059  043B  01D5               	clrf	___aldiv@divisor+3
  8060  043C  3000               	movlw	0
  8061  043D  00D9               	movwf	___aldiv@dividend+3
  8062  043E  301E               	movlw	30
  8063  043F  00D8               	movwf	___aldiv@dividend+2
  8064  0440  3084               	movlw	132
  8065  0441  00D7               	movwf	___aldiv@dividend+1
  8066  0442  3080               	movlw	128
  8067  0443  00D6               	movwf	___aldiv@dividend
  8068  0444  3182  22B5  3184   	fcall	___aldiv
  8069  0447  0020               	movlb	0	; select bank0
  8070  0448  0853               	movf	?___aldiv+1,w
  8071  0449  00A5               	movwf	_ocCount+1
  8072  044A  0852               	movf	?___aldiv,w
  8073  044B  00A4               	movwf	_ocCount
  8074  044C                     l3545:
  8075                           
  8076                           ;SpeakerTone.c: 50:         CCP4_SetCompareCount(ocCount);
  8077  044C  0825               	movf	_ocCount+1,w
  8078  044D  00D3               	movwf	CCP4_SetCompareCount@compareCount+1
  8079  044E  0824               	movf	_ocCount,w
  8080  044F  00D2               	movwf	CCP4_SetCompareCount@compareCount
  8081  0450  3187  279D  3184   	fcall	_CCP4_SetCompareCount
  8082                           
  8083                           ;SpeakerTone.c: 51:         SpeakerTone_On();
  8084  0453  318F  279B  3184   	fcall	_SpeakerTone_On
  8085  0456                     l805:
  8086  0456  0008               	return
  8087  0457                     __end_of_SpeakerTone_SetFrequency:
  8088                           
  8089                           	psect	text2
  8090  02B5                     __ptext2:	
  8091 ;; *************** function ___aldiv *****************
  8092 ;; Defined at:
  8093 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aldiv.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;  divisor         4    0[BANK0 ] long 
  8096 ;;  dividend        4    4[BANK0 ] long 
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;  quotient        4   11[BANK0 ] long 
  8099 ;;  sign            1   10[BANK0 ] unsigned char 
  8100 ;;  counter         1    9[BANK0 ] unsigned char 
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  4    0[BANK0 ] long 
  8103 ;; Registers used:
  8104 ;;		wreg, status,2, status,0
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8110 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8111 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8112 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8113 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8114 ;;Total ram usage:       15 bytes
  8115 ;; Hardware stack levels used: 1
  8116 ;; Hardware stack levels required when called: 4
  8117 ;; This function calls:
  8118 ;;		Nothing
  8119 ;; This function is called by:
  8120 ;;		_SpeakerTone_SetFrequency
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124  02B5                     ___aldiv:	
  8125                           ;psect for function ___aldiv
  8126                           
  8127  02B5                     l3355:	
  8128                           ;incstack = 0
  8129                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8130                           
  8131  02B5  0020               	movlb	0	; select bank0
  8132  02B6  01DC               	clrf	___aldiv@sign
  8133  02B7                     l3357:
  8134  02B7  1FD5               	btfss	___aldiv@divisor+3,7
  8135  02B8  2ABA               	goto	u581
  8136  02B9  2ABB               	goto	u580
  8137  02BA                     u581:
  8138  02BA  2AC8               	goto	l1191
  8139  02BB                     u580:
  8140  02BB                     l3359:
  8141  02BB  09D2               	comf	___aldiv@divisor,f
  8142  02BC  09D3               	comf	___aldiv@divisor+1,f
  8143  02BD  09D4               	comf	___aldiv@divisor+2,f
  8144  02BE  09D5               	comf	___aldiv@divisor+3,f
  8145  02BF  0AD2               	incf	___aldiv@divisor,f
  8146  02C0  1903               	skipnz
  8147  02C1  0AD3               	incf	___aldiv@divisor+1,f
  8148  02C2  1903               	skipnz
  8149  02C3  0AD4               	incf	___aldiv@divisor+2,f
  8150  02C4  1903               	skipnz
  8151  02C5  0AD5               	incf	___aldiv@divisor+3,f
  8152  02C6  01DC               	clrf	___aldiv@sign
  8153  02C7  0ADC               	incf	___aldiv@sign,f
  8154  02C8                     l1191:
  8155  02C8  1FD9               	btfss	___aldiv@dividend+3,7
  8156  02C9  2ACB               	goto	u591
  8157  02CA  2ACC               	goto	u590
  8158  02CB                     u591:
  8159  02CB  2ADB               	goto	l3365
  8160  02CC                     u590:
  8161  02CC                     l3361:
  8162  02CC  09D6               	comf	___aldiv@dividend,f
  8163  02CD  09D7               	comf	___aldiv@dividend+1,f
  8164  02CE  09D8               	comf	___aldiv@dividend+2,f
  8165  02CF  09D9               	comf	___aldiv@dividend+3,f
  8166  02D0  0AD6               	incf	___aldiv@dividend,f
  8167  02D1  1903               	skipnz
  8168  02D2  0AD7               	incf	___aldiv@dividend+1,f
  8169  02D3  1903               	skipnz
  8170  02D4  0AD8               	incf	___aldiv@dividend+2,f
  8171  02D5  1903               	skipnz
  8172  02D6  0AD9               	incf	___aldiv@dividend+3,f
  8173  02D7                     l3363:
  8174  02D7  3001               	movlw	1
  8175  02D8  00DA               	movwf	??___aldiv
  8176  02D9  085A               	movf	??___aldiv,w
  8177  02DA  06DC               	xorwf	___aldiv@sign,f
  8178  02DB                     l3365:
  8179  02DB  3000               	movlw	0
  8180  02DC  00E0               	movwf	___aldiv@quotient+3
  8181  02DD  3000               	movlw	0
  8182  02DE  00DF               	movwf	___aldiv@quotient+2
  8183  02DF  3000               	movlw	0
  8184  02E0  00DE               	movwf	___aldiv@quotient+1
  8185  02E1  3000               	movlw	0
  8186  02E2  00DD               	movwf	___aldiv@quotient
  8187  02E3                     l3367:
  8188  02E3  0855               	movf	___aldiv@divisor+3,w
  8189  02E4  0454               	iorwf	___aldiv@divisor+2,w
  8190  02E5  0453               	iorwf	___aldiv@divisor+1,w
  8191  02E6  0452               	iorwf	___aldiv@divisor,w
  8192  02E7  1903               	skipnz
  8193  02E8  2AEA               	goto	u601
  8194  02E9  2AEB               	goto	u600
  8195  02EA                     u601:
  8196  02EA  2B2C               	goto	l3387
  8197  02EB                     u600:
  8198  02EB                     l3369:
  8199  02EB  01DB               	clrf	___aldiv@counter
  8200  02EC  0ADB               	incf	___aldiv@counter,f
  8201  02ED  2AF9               	goto	l3373
  8202  02EE                     l3371:
  8203  02EE  3001               	movlw	1
  8204  02EF                     u615:
  8205  02EF  35D2               	lslf	___aldiv@divisor,f
  8206  02F0  0DD3               	rlf	___aldiv@divisor+1,f
  8207  02F1  0DD4               	rlf	___aldiv@divisor+2,f
  8208  02F2  0DD5               	rlf	___aldiv@divisor+3,f
  8209  02F3  0B89               	decfsz	9,f
  8210  02F4  2AEF               	goto	u615
  8211  02F5  3001               	movlw	1
  8212  02F6  00DA               	movwf	??___aldiv
  8213  02F7  085A               	movf	??___aldiv,w
  8214  02F8  07DB               	addwf	___aldiv@counter,f
  8215  02F9                     l3373:
  8216  02F9  1FD5               	btfss	___aldiv@divisor+3,7
  8217  02FA  2AFC               	goto	u621
  8218  02FB  2AFD               	goto	u620
  8219  02FC                     u621:
  8220  02FC  2AEE               	goto	l3371
  8221  02FD                     u620:
  8222  02FD                     l3375:
  8223  02FD  3001               	movlw	1
  8224  02FE                     u635:
  8225  02FE  35DD               	lslf	___aldiv@quotient,f
  8226  02FF  0DDE               	rlf	___aldiv@quotient+1,f
  8227  0300  0DDF               	rlf	___aldiv@quotient+2,f
  8228  0301  0DE0               	rlf	___aldiv@quotient+3,f
  8229  0302  0B89               	decfsz	9,f
  8230  0303  2AFE               	goto	u635
  8231  0304                     l3377:
  8232  0304  0855               	movf	___aldiv@divisor+3,w
  8233  0305  0259               	subwf	___aldiv@dividend+3,w
  8234  0306  1D03               	skipz
  8235  0307  2B12               	goto	u645
  8236  0308  0854               	movf	___aldiv@divisor+2,w
  8237  0309  0258               	subwf	___aldiv@dividend+2,w
  8238  030A  1D03               	skipz
  8239  030B  2B12               	goto	u645
  8240  030C  0853               	movf	___aldiv@divisor+1,w
  8241  030D  0257               	subwf	___aldiv@dividend+1,w
  8242  030E  1D03               	skipz
  8243  030F  2B12               	goto	u645
  8244  0310  0852               	movf	___aldiv@divisor,w
  8245  0311  0256               	subwf	___aldiv@dividend,w
  8246  0312                     u645:
  8247  0312  1C03               	skipc
  8248  0313  2B15               	goto	u641
  8249  0314  2B16               	goto	u640
  8250  0315                     u641:
  8251  0315  2B1F               	goto	l3383
  8252  0316                     u640:
  8253  0316                     l3379:
  8254  0316  0852               	movf	___aldiv@divisor,w
  8255  0317  02D6               	subwf	___aldiv@dividend,f
  8256  0318  0853               	movf	___aldiv@divisor+1,w
  8257  0319  3BD7               	subwfb	___aldiv@dividend+1,f
  8258  031A  0854               	movf	___aldiv@divisor+2,w
  8259  031B  3BD8               	subwfb	___aldiv@dividend+2,f
  8260  031C  0855               	movf	___aldiv@divisor+3,w
  8261  031D  3BD9               	subwfb	___aldiv@dividend+3,f
  8262  031E                     l3381:
  8263  031E  145D               	bsf	___aldiv@quotient,0
  8264  031F                     l3383:
  8265  031F  3001               	movlw	1
  8266  0320                     u655:
  8267  0320  36D5               	lsrf	___aldiv@divisor+3,f
  8268  0321  0CD4               	rrf	___aldiv@divisor+2,f
  8269  0322  0CD3               	rrf	___aldiv@divisor+1,f
  8270  0323  0CD2               	rrf	___aldiv@divisor,f
  8271  0324  0B89               	decfsz	9,f
  8272  0325  2B20               	goto	u655
  8273  0326                     l3385:
  8274  0326  3001               	movlw	1
  8275  0327  02DB               	subwf	___aldiv@counter,f
  8276  0328  1D03               	btfss	3,2
  8277  0329  2B2B               	goto	u661
  8278  032A  2B2C               	goto	u660
  8279  032B                     u661:
  8280  032B  2AFD               	goto	l3375
  8281  032C                     u660:
  8282  032C                     l3387:
  8283  032C  085C               	movf	___aldiv@sign,w
  8284  032D  1903               	btfsc	3,2
  8285  032E  2B30               	goto	u671
  8286  032F  2B31               	goto	u670
  8287  0330                     u671:
  8288  0330  2B3C               	goto	l3391
  8289  0331                     u670:
  8290  0331                     l3389:
  8291  0331  09DD               	comf	___aldiv@quotient,f
  8292  0332  09DE               	comf	___aldiv@quotient+1,f
  8293  0333  09DF               	comf	___aldiv@quotient+2,f
  8294  0334  09E0               	comf	___aldiv@quotient+3,f
  8295  0335  0ADD               	incf	___aldiv@quotient,f
  8296  0336  1903               	skipnz
  8297  0337  0ADE               	incf	___aldiv@quotient+1,f
  8298  0338  1903               	skipnz
  8299  0339  0ADF               	incf	___aldiv@quotient+2,f
  8300  033A  1903               	skipnz
  8301  033B  0AE0               	incf	___aldiv@quotient+3,f
  8302  033C                     l3391:
  8303  033C  0860               	movf	___aldiv@quotient+3,w
  8304  033D  00D5               	movwf	?___aldiv+3
  8305  033E  085F               	movf	___aldiv@quotient+2,w
  8306  033F  00D4               	movwf	?___aldiv+2
  8307  0340  085E               	movf	___aldiv@quotient+1,w
  8308  0341  00D3               	movwf	?___aldiv+1
  8309  0342  085D               	movf	___aldiv@quotient,w
  8310  0343  00D2               	movwf	?___aldiv
  8311  0344                     l1201:
  8312  0344  0008               	return
  8313  0345                     __end_of___aldiv:
  8314                           
  8315                           	psect	text3
  8316  0F9B                     __ptext3:	
  8317 ;; *************** function _SpeakerTone_On *****************
  8318 ;; Defined at:
  8319 ;;		line 72 in file "SpeakerTone.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;		None
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;		None
  8324 ;; Return value:  Size  Location     Type
  8325 ;;                  1    wreg      void 
  8326 ;; Registers used:
  8327 ;;		status,2, status,0, pclath, cstack
  8328 ;; Tracked objects:
  8329 ;;		On entry : 0/0
  8330 ;;		On exit  : 0/0
  8331 ;;		Unchanged: 0/0
  8332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8337 ;;Total ram usage:        0 bytes
  8338 ;; Hardware stack levels used: 1
  8339 ;; Hardware stack levels required when called: 5
  8340 ;; This function calls:
  8341 ;;		_TMR3_StartTimer
  8342 ;; This function is called by:
  8343 ;;		_SpeakerTone_SetFrequency
  8344 ;;		_main
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348  0F9B                     _SpeakerTone_On:	
  8349                           ;psect for function _SpeakerTone_On
  8350                           
  8351  0F9B                     l3351:	
  8352                           ;incstack = 0
  8353                           ; Regs used in _SpeakerTone_On: [status,2+status,0+pclath+cstack]
  8354                           
  8355                           
  8356                           ;SpeakerTone.c: 73:     TMR3_StartTimer();
  8357  0F9B  318F  278C  318F   	fcall	_TMR3_StartTimer
  8358  0F9E                     l815:
  8359  0F9E  0008               	return
  8360  0F9F                     __end_of_SpeakerTone_On:
  8361                           
  8362                           	psect	text4
  8363  0F8C                     __ptext4:	
  8364 ;; *************** function _TMR3_StartTimer *****************
  8365 ;; Defined at:
  8366 ;;		line 46 in file "tmr3.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;		None
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;		None
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  1    wreg      void 
  8373 ;; Registers used:
  8374 ;;		None
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8384 ;;Total ram usage:        0 bytes
  8385 ;; Hardware stack levels used: 1
  8386 ;; Hardware stack levels required when called: 4
  8387 ;; This function calls:
  8388 ;;		Nothing
  8389 ;; This function is called by:
  8390 ;;		_SpeakerTone_On
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394  0F8C                     _TMR3_StartTimer:	
  8395                           ;psect for function _TMR3_StartTimer
  8396                           
  8397  0F8C                     l3089:	
  8398                           ;incstack = 0
  8399                           ; Regs used in _TMR3_StartTimer: []
  8400                           
  8401                           
  8402                           ;tmr3.c: 49:     T3CONbits.TMR3ON = 1;
  8403  0F8C  0028               	movlb	8	; select bank8
  8404  0F8D  1413               	bsf	19,0	;volatile
  8405  0F8E                     l951:
  8406  0F8E  0008               	return
  8407  0F8F                     __end_of_TMR3_StartTimer:
  8408                           
  8409                           	psect	text5
  8410  079D                     __ptext5:	
  8411 ;; *************** function _CCP4_SetCompareCount *****************
  8412 ;; Defined at:
  8413 ;;		line 39 in file "ccp4.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  compareCount    2    0[BANK0 ] unsigned short 
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;  module          2    2[BANK0 ] struct CCPR4Reg_tag
  8418 ;; Return value:  Size  Location     Type
  8419 ;;                  1    wreg      void 
  8420 ;; Registers used:
  8421 ;;		wreg
  8422 ;; Tracked objects:
  8423 ;;		On entry : 0/0
  8424 ;;		On exit  : 0/0
  8425 ;;		Unchanged: 0/0
  8426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8427 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8430 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8431 ;;Total ram usage:        4 bytes
  8432 ;; Hardware stack levels used: 1
  8433 ;; Hardware stack levels required when called: 4
  8434 ;; This function calls:
  8435 ;;		Nothing
  8436 ;; This function is called by:
  8437 ;;		_SpeakerTone_SetFrequency
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441  079D                     _CCP4_SetCompareCount:	
  8442                           ;psect for function _CCP4_SetCompareCount
  8443                           
  8444  079D                     l3349:	
  8445                           ;incstack = 0
  8446                           ; Regs used in _CCP4_SetCompareCount: [wreg]
  8447                           
  8448                           
  8449                           ;ccp4.c: 39: void CCP4_SetCompareCount(uint16_t compareCount);ccp4.c: 40: {;ccp4.c: 41: 
      +                              CCP4_PERIOD_REG_T module;;ccp4.c: 44:     module.ccpr4_16Bit = compareCount;
  8450  079D  0020               	movlb	0	; select bank0
  8451  079E  0853               	movf	CCP4_SetCompareCount@compareCount+1,w
  8452  079F  00D5               	movwf	CCP4_SetCompareCount@module+1
  8453  07A0  0852               	movf	CCP4_SetCompareCount@compareCount,w
  8454  07A1  00D4               	movwf	CCP4_SetCompareCount@module
  8455                           
  8456                           ;ccp4.c: 46:     CCPR4L = module.ccpr4l;
  8457  07A2  0854               	movf	CCP4_SetCompareCount@module,w
  8458  07A3  0026               	movlb	6	; select bank6
  8459  07A4  0095               	movwf	21	;volatile
  8460                           
  8461                           ;ccp4.c: 47:     CCPR4H = module.ccpr4h;
  8462  07A5  0020               	movlb	0	; select bank0
  8463  07A6  0855               	movf	CCP4_SetCompareCount@module+1,w
  8464  07A7  0026               	movlb	6	; select bank6
  8465  07A8  0096               	movwf	22	;volatile
  8466  07A9                     l875:
  8467  07A9  0008               	return
  8468  07AA                     __end_of_CCP4_SetCompareCount:
  8469                           
  8470                           	psect	text6
  8471  0639                     __ptext6:	
  8472 ;; *************** function _SpeakerTone_Init *****************
  8473 ;; Defined at:
  8474 ;;		line 33 in file "SpeakerTone.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;		None
  8477 ;; Auto vars:     Size  Location     Type
  8478 ;;		None
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  1    wreg      void 
  8481 ;; Registers used:
  8482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8483 ;; Tracked objects:
  8484 ;;		On entry : 0/0
  8485 ;;		On exit  : 0/0
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8492 ;;Total ram usage:        0 bytes
  8493 ;; Hardware stack levels used: 1
  8494 ;; Hardware stack levels required when called: 7
  8495 ;; This function calls:
  8496 ;;		_SetPin
  8497 ;;		_SpeakerTone_Off
  8498 ;;		_WritePin
  8499 ;; This function is called by:
  8500 ;;		_main
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504  0639                     _SpeakerTone_Init:	
  8505                           ;psect for function _SpeakerTone_Init
  8506                           
  8507  0639                     l3525:	
  8508                           ;incstack = 0
  8509                           ; Regs used in _SpeakerTone_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8510                           
  8511                           
  8512                           ;SpeakerTone.c: 34:     SetPin(C1, 0);
  8513  0639  0020               	movlb	0	; select bank0
  8514  063A  01D2               	clrf	SetPin@io
  8515  063B  300D               	movlw	13
  8516  063C  3181  2163  3186   	fcall	_SetPin
  8517                           
  8518                           ;SpeakerTone.c: 35:     WritePin(C1, 0);
  8519  063F  0020               	movlb	0	; select bank0
  8520  0640  01D2               	clrf	WritePin@val
  8521  0641  300D               	movlw	13
  8522  0642  3180  20A8  3186   	fcall	_WritePin
  8523  0645                     l3527:
  8524                           
  8525                           ;SpeakerTone.c: 36:     currFreq = 440;
  8526  0645  30B8               	movlw	184
  8527  0646  0021               	movlb	1	; select bank1
  8528  0647  00D6               	movwf	_currFreq^(0+128)
  8529  0648  3001               	movlw	1
  8530  0649  00D7               	movwf	(_currFreq^(0+128)+1)
  8531  064A                     l3529:
  8532                           
  8533                           ;SpeakerTone.c: 37:     ocCount = 0x11C1;
  8534  064A  30C1               	movlw	193
  8535  064B  0020               	movlb	0	; select bank0
  8536  064C  00A4               	movwf	_ocCount
  8537  064D  3011               	movlw	17
  8538  064E  00A5               	movwf	_ocCount+1
  8539  064F                     l3531:
  8540                           
  8541                           ;SpeakerTone.c: 38:     SpeakerTone_Off();
  8542  064F  318F  27E8  3186   	fcall	_SpeakerTone_Off
  8543  0652                     l799:
  8544  0652  0008               	return
  8545  0653                     __end_of_SpeakerTone_Init:
  8546                           
  8547                           	psect	text7
  8548  00A8                     __ptext7:	
  8549 ;; *************** function _WritePin *****************
  8550 ;; Defined at:
  8551 ;;		line 148 in file "PIC16Xpress_DevBoard.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;  pin             1    wreg     enum E7144
  8554 ;;  val             1    0[BANK0 ] unsigned char 
  8555 ;; Auto vars:     Size  Location     Type
  8556 ;;  pin             1    3[BANK0 ] enum E7144
  8557 ;; Return value:  Size  Location     Type
  8558 ;;                  1    wreg      unsigned char 
  8559 ;; Registers used:
  8560 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8561 ;; Tracked objects:
  8562 ;;		On entry : 0/0
  8563 ;;		On exit  : 0/0
  8564 ;;		Unchanged: 0/0
  8565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8566 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8567 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8568 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8569 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8570 ;;Total ram usage:        4 bytes
  8571 ;; Hardware stack levels used: 1
  8572 ;; Hardware stack levels required when called: 4
  8573 ;; This function calls:
  8574 ;;		Nothing
  8575 ;; This function is called by:
  8576 ;;		_SpeakerTone_Init
  8577 ;;		_JSN_Sensor_Init
  8578 ;;		_JSN_Sensor_Trig
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582  00A8                     _WritePin:	
  8583                           ;psect for function _WritePin
  8584                           
  8585                           
  8586                           ;incstack = 0
  8587                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
  8588                           ;WritePin@pin stored from wreg
  8589  00A8  0020               	movlb	0	; select bank0
  8590  00A9  00D5               	movwf	WritePin@pin
  8591  00AA                     l3185:
  8592                           
  8593                           ;PIC16Xpress_DevBoard.c: 149:     switch(pin) {
  8594  00AA  2922               	goto	l3257
  8595  00AB                     l3187:
  8596                           
  8597                           ;PIC16Xpress_DevBoard.c: 151:             LATAbits.LATA5 = val;
  8598  00AB  0C52               	rrf	WritePin@val,w
  8599  00AC  0022               	movlb	2	; select bank2
  8600  00AD  1C03               	skipc
  8601  00AE  128C               	bcf	12,5	;volatile
  8602  00AF  1803               	skipnc
  8603  00B0  168C               	bsf	12,5	;volatile
  8604  00B1  2962               	goto	l154
  8605  00B2                     l3191:
  8606                           
  8607                           ;PIC16Xpress_DevBoard.c: 154:             LATAbits.LATA4 = val;
  8608  00B2  0C52               	rrf	WritePin@val,w
  8609  00B3  0022               	movlb	2	; select bank2
  8610  00B4  1C03               	skipc
  8611  00B5  120C               	bcf	12,4	;volatile
  8612  00B6  1803               	skipnc
  8613  00B7  160C               	bsf	12,4	;volatile
  8614  00B8  2962               	goto	l154
  8615  00B9                     l3195:
  8616                           
  8617                           ;PIC16Xpress_DevBoard.c: 159:             LATCbits.LATC5 = val;
  8618  00B9  0C52               	rrf	WritePin@val,w
  8619  00BA  0022               	movlb	2	; select bank2
  8620  00BB  1C03               	skipc
  8621  00BC  128E               	bcf	14,5	;volatile
  8622  00BD  1803               	skipnc
  8623  00BE  168E               	bsf	14,5	;volatile
  8624  00BF  2962               	goto	l154
  8625  00C0                     l3199:
  8626                           
  8627                           ;PIC16Xpress_DevBoard.c: 162:             LATCbits.LATC4 = val;
  8628  00C0  0C52               	rrf	WritePin@val,w
  8629  00C1  0022               	movlb	2	; select bank2
  8630  00C2  1C03               	skipc
  8631  00C3  120E               	bcf	14,4	;volatile
  8632  00C4  1803               	skipnc
  8633  00C5  160E               	bsf	14,4	;volatile
  8634  00C6  2962               	goto	l154
  8635  00C7                     l3203:
  8636                           
  8637                           ;PIC16Xpress_DevBoard.c: 165:             LATCbits.LATC3 = val;
  8638  00C7  0C52               	rrf	WritePin@val,w
  8639  00C8  0022               	movlb	2	; select bank2
  8640  00C9  1C03               	skipc
  8641  00CA  118E               	bcf	14,3	;volatile
  8642  00CB  1803               	skipnc
  8643  00CC  158E               	bsf	14,3	;volatile
  8644  00CD  2962               	goto	l154
  8645  00CE                     l3207:
  8646                           
  8647                           ;PIC16Xpress_DevBoard.c: 168:             LATCbits.LATC6 = val;
  8648  00CE  0C52               	rrf	WritePin@val,w
  8649  00CF  0022               	movlb	2	; select bank2
  8650  00D0  1C03               	skipc
  8651  00D1  130E               	bcf	14,6	;volatile
  8652  00D2  1803               	skipnc
  8653  00D3  170E               	bsf	14,6	;volatile
  8654  00D4  2962               	goto	l154
  8655  00D5                     l3211:
  8656                           
  8657                           ;PIC16Xpress_DevBoard.c: 171:             LATCbits.LATC7 = val;
  8658  00D5  0C52               	rrf	WritePin@val,w
  8659  00D6  0022               	movlb	2	; select bank2
  8660  00D7  1C03               	skipc
  8661  00D8  138E               	bcf	14,7	;volatile
  8662  00D9  1803               	skipnc
  8663  00DA  178E               	bsf	14,7	;volatile
  8664  00DB  2962               	goto	l154
  8665  00DC                     l3215:
  8666                           
  8667                           ;PIC16Xpress_DevBoard.c: 174:             LATBbits.LATB7 = val;
  8668  00DC  0C52               	rrf	WritePin@val,w
  8669  00DD  0022               	movlb	2	; select bank2
  8670  00DE  1C03               	skipc
  8671  00DF  138D               	bcf	13,7	;volatile
  8672  00E0  1803               	skipnc
  8673  00E1  178D               	bsf	13,7	;volatile
  8674  00E2  2962               	goto	l154
  8675  00E3                     l3219:
  8676                           
  8677                           ;PIC16Xpress_DevBoard.c: 177:             LATAbits.LATA0 = val;
  8678  00E3  0C52               	rrf	WritePin@val,w
  8679  00E4  0022               	movlb	2	; select bank2
  8680  00E5  1C03               	skipc
  8681  00E6  100C               	bcf	12,0	;volatile
  8682  00E7  1803               	skipnc
  8683  00E8  140C               	bsf	12,0	;volatile
  8684  00E9  2962               	goto	l154
  8685  00EA                     l3223:
  8686                           
  8687                           ;PIC16Xpress_DevBoard.c: 180:             LATAbits.LATA1 = val;
  8688  00EA  0C52               	rrf	WritePin@val,w
  8689  00EB  0022               	movlb	2	; select bank2
  8690  00EC  1C03               	skipc
  8691  00ED  108C               	bcf	12,1	;volatile
  8692  00EE  1803               	skipnc
  8693  00EF  148C               	bsf	12,1	;volatile
  8694  00F0  2962               	goto	l154
  8695  00F1                     l3227:
  8696                           
  8697                           ;PIC16Xpress_DevBoard.c: 183:             LATAbits.LATA2 = val;
  8698  00F1  0C52               	rrf	WritePin@val,w
  8699  00F2  0022               	movlb	2	; select bank2
  8700  00F3  1C03               	skipc
  8701  00F4  110C               	bcf	12,2	;volatile
  8702  00F5  1803               	skipnc
  8703  00F6  150C               	bsf	12,2	;volatile
  8704  00F7  2962               	goto	l154
  8705  00F8                     l3231:
  8706                           
  8707                           ;PIC16Xpress_DevBoard.c: 186:             LATCbits.LATC0 = val;
  8708  00F8  0C52               	rrf	WritePin@val,w
  8709  00F9  0022               	movlb	2	; select bank2
  8710  00FA  1C03               	skipc
  8711  00FB  100E               	bcf	14,0	;volatile
  8712  00FC  1803               	skipnc
  8713  00FD  140E               	bsf	14,0	;volatile
  8714  00FE  2962               	goto	l154
  8715  00FF                     l3235:
  8716                           
  8717                           ;PIC16Xpress_DevBoard.c: 189:             LATCbits.LATC1 = val;
  8718  00FF  0C52               	rrf	WritePin@val,w
  8719  0100  0022               	movlb	2	; select bank2
  8720  0101  1C03               	skipc
  8721  0102  108E               	bcf	14,1	;volatile
  8722  0103  1803               	skipnc
  8723  0104  148E               	bsf	14,1	;volatile
  8724  0105  2962               	goto	l154
  8725  0106                     l3239:
  8726                           
  8727                           ;PIC16Xpress_DevBoard.c: 192:             LATCbits.LATC2 = val;
  8728  0106  0C52               	rrf	WritePin@val,w
  8729  0107  0022               	movlb	2	; select bank2
  8730  0108  1C03               	skipc
  8731  0109  110E               	bcf	14,2	;volatile
  8732  010A  1803               	skipnc
  8733  010B  150E               	bsf	14,2	;volatile
  8734  010C  2962               	goto	l154
  8735  010D                     l3243:
  8736                           
  8737                           ;PIC16Xpress_DevBoard.c: 195:             LATBbits.LATB4 = val;
  8738  010D  0C52               	rrf	WritePin@val,w
  8739  010E  0022               	movlb	2	; select bank2
  8740  010F  1C03               	skipc
  8741  0110  120D               	bcf	13,4	;volatile
  8742  0111  1803               	skipnc
  8743  0112  160D               	bsf	13,4	;volatile
  8744  0113  2962               	goto	l154
  8745  0114                     l3247:
  8746                           
  8747                           ;PIC16Xpress_DevBoard.c: 198:             LATBbits.LATB5 = val;
  8748  0114  0C52               	rrf	WritePin@val,w
  8749  0115  0022               	movlb	2	; select bank2
  8750  0116  1C03               	skipc
  8751  0117  128D               	bcf	13,5	;volatile
  8752  0118  1803               	skipnc
  8753  0119  168D               	bsf	13,5	;volatile
  8754  011A  2962               	goto	l154
  8755  011B                     l3251:
  8756                           
  8757                           ;PIC16Xpress_DevBoard.c: 201:             LATBbits.LATB6 = val;
  8758  011B  0C52               	rrf	WritePin@val,w
  8759  011C  0022               	movlb	2	; select bank2
  8760  011D  1C03               	skipc
  8761  011E  130D               	bcf	13,6	;volatile
  8762  011F  1803               	skipnc
  8763  0120  170D               	bsf	13,6	;volatile
  8764  0121  2962               	goto	l154
  8765  0122                     l3257:
  8766  0122  0855               	movf	WritePin@pin,w
  8767  0123  00D3               	movwf	??_WritePin
  8768  0124  01D4               	clrf	??_WritePin+1
  8769                           
  8770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8771                           ; Switch size 1, requested type "simple"
  8772                           ; Number of cases is 1, Range of values is 0 to 0
  8773                           ; switch strategies available:
  8774                           ; Name         Instructions Cycles
  8775                           ; simple_byte            4     3 (average)
  8776                           ; direct_byte            8     6 (fixed)
  8777                           ; jumptable            260     6 (fixed)
  8778                           ;	Chosen strategy is simple_byte
  8779  0125  0854               	movf	??_WritePin+1,w
  8780  0126  3A00               	xorlw	0	; case 0
  8781  0127  1903               	skipnz
  8782  0128  292A               	goto	l3933
  8783  0129  2962               	goto	l154
  8784  012A                     l3933:
  8785                           
  8786                           ; Switch size 1, requested type "simple"
  8787                           ; Number of cases is 18, Range of values is 0 to 17
  8788                           ; switch strategies available:
  8789                           ; Name         Instructions Cycles
  8790                           ; direct_byte           42     6 (fixed)
  8791                           ; simple_byte           55    28 (average)
  8792                           ; jumptable            260     6 (fixed)
  8793                           ;	Chosen strategy is simple_byte
  8794  012A  0853               	movf	??_WritePin,w
  8795  012B  3A00               	xorlw	0	; case 0
  8796  012C  1903               	skipnz
  8797  012D  28AB               	goto	l3187
  8798  012E  3A01               	xorlw	1	; case 1
  8799  012F  1903               	skipnz
  8800  0130  28B2               	goto	l3191
  8801  0131  3A03               	xorlw	3	; case 2
  8802  0132  1903               	skipnz
  8803  0133  2962               	goto	l154
  8804  0134  3A01               	xorlw	1	; case 3
  8805  0135  1903               	skipnz
  8806  0136  28B9               	goto	l3195
  8807  0137  3A07               	xorlw	7	; case 4
  8808  0138  1903               	skipnz
  8809  0139  28C0               	goto	l3199
  8810  013A  3A01               	xorlw	1	; case 5
  8811  013B  1903               	skipnz
  8812  013C  28C7               	goto	l3203
  8813  013D  3A03               	xorlw	3	; case 6
  8814  013E  1903               	skipnz
  8815  013F  28CE               	goto	l3207
  8816  0140  3A01               	xorlw	1	; case 7
  8817  0141  1903               	skipnz
  8818  0142  28D5               	goto	l3211
  8819  0143  3A0F               	xorlw	15	; case 8
  8820  0144  1903               	skipnz
  8821  0145  28DC               	goto	l3215
  8822  0146  3A01               	xorlw	1	; case 9
  8823  0147  1903               	skipnz
  8824  0148  28E3               	goto	l3219
  8825  0149  3A03               	xorlw	3	; case 10
  8826  014A  1903               	skipnz
  8827  014B  28EA               	goto	l3223
  8828  014C  3A01               	xorlw	1	; case 11
  8829  014D  1903               	skipnz
  8830  014E  28F1               	goto	l3227
  8831  014F  3A07               	xorlw	7	; case 12
  8832  0150  1903               	skipnz
  8833  0151  28F8               	goto	l3231
  8834  0152  3A01               	xorlw	1	; case 13
  8835  0153  1903               	skipnz
  8836  0154  28FF               	goto	l3235
  8837  0155  3A03               	xorlw	3	; case 14
  8838  0156  1903               	skipnz
  8839  0157  2906               	goto	l3239
  8840  0158  3A01               	xorlw	1	; case 15
  8841  0159  1903               	skipnz
  8842  015A  290D               	goto	l3243
  8843  015B  3A1F               	xorlw	31	; case 16
  8844  015C  1903               	skipnz
  8845  015D  2914               	goto	l3247
  8846  015E  3A01               	xorlw	1	; case 17
  8847  015F  1903               	skipnz
  8848  0160  291B               	goto	l3251
  8849  0161  2962               	goto	l154
  8850  0162                     l154:
  8851  0162  0008               	return
  8852  0163                     __end_of_WritePin:
  8853                           
  8854                           	psect	text8
  8855  0FE8                     __ptext8:	
  8856 ;; *************** function _SpeakerTone_Off *****************
  8857 ;; Defined at:
  8858 ;;		line 64 in file "SpeakerTone.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;		None
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;		None
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  1    wreg      void 
  8865 ;; Registers used:
  8866 ;;		wreg, status,2, status,0, pclath, cstack
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8876 ;;Total ram usage:        0 bytes
  8877 ;; Hardware stack levels used: 1
  8878 ;; Hardware stack levels required when called: 6
  8879 ;; This function calls:
  8880 ;;		_TMR3_Reload
  8881 ;;		_TMR3_StopTimer
  8882 ;; This function is called by:
  8883 ;;		_SpeakerTone_Init
  8884 ;;		_SpeakerTone_SetFrequency
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888  0FE8                     _SpeakerTone_Off:	
  8889                           ;psect for function _SpeakerTone_Off
  8890                           
  8891  0FE8                     l3343:	
  8892                           ;incstack = 0
  8893                           ; Regs used in _SpeakerTone_Off: [wreg+status,2+status,0+pclath+cstack]
  8894                           
  8895                           
  8896                           ;SpeakerTone.c: 65:     TMR3_StopTimer();
  8897  0FE8  318F  2789  318F   	fcall	_TMR3_StopTimer
  8898  0FEB                     l3345:
  8899                           
  8900                           ;SpeakerTone.c: 66:     TMR3_Reload();
  8901  0FEB  3187  27F5  318F   	fcall	_TMR3_Reload
  8902  0FEE                     l812:
  8903  0FEE  0008               	return
  8904  0FEF                     __end_of_SpeakerTone_Off:
  8905                           
  8906                           	psect	text9
  8907  0F89                     __ptext9:	
  8908 ;; *************** function _TMR3_StopTimer *****************
  8909 ;; Defined at:
  8910 ;;		line 54 in file "tmr3.c"
  8911 ;; Parameters:    Size  Location     Type
  8912 ;;		None
  8913 ;; Auto vars:     Size  Location     Type
  8914 ;;		None
  8915 ;; Return value:  Size  Location     Type
  8916 ;;                  1    wreg      void 
  8917 ;; Registers used:
  8918 ;;		None
  8919 ;; Tracked objects:
  8920 ;;		On entry : 0/0
  8921 ;;		On exit  : 0/0
  8922 ;;		Unchanged: 0/0
  8923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8928 ;;Total ram usage:        0 bytes
  8929 ;; Hardware stack levels used: 1
  8930 ;; Hardware stack levels required when called: 4
  8931 ;; This function calls:
  8932 ;;		Nothing
  8933 ;; This function is called by:
  8934 ;;		_SpeakerTone_Off
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938  0F89                     _TMR3_StopTimer:	
  8939                           ;psect for function _TMR3_StopTimer
  8940                           
  8941  0F89                     l3085:	
  8942                           ;incstack = 0
  8943                           ; Regs used in _TMR3_StopTimer: []
  8944                           
  8945                           
  8946                           ;tmr3.c: 57:     T3CONbits.TMR3ON = 0;
  8947  0F89  0028               	movlb	8	; select bank8
  8948  0F8A  1013               	bcf	19,0	;volatile
  8949  0F8B                     l954:
  8950  0F8B  0008               	return
  8951  0F8C                     __end_of_TMR3_StopTimer:
  8952                           
  8953                           	psect	text10
  8954  07F5                     __ptext10:	
  8955 ;; *************** function _TMR3_Reload *****************
  8956 ;; Defined at:
  8957 ;;		line 103 in file "tmr3.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;		None
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;		None
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  1    wreg      void 
  8964 ;; Registers used:
  8965 ;;		wreg, status,2, status,0, pclath, cstack
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8975 ;;Total ram usage:        0 bytes
  8976 ;; Hardware stack levels used: 1
  8977 ;; Hardware stack levels required when called: 5
  8978 ;; This function calls:
  8979 ;;		_TMR3_WriteTimer
  8980 ;; This function is called by:
  8981 ;;		_SpeakerTone_Off
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985  07F5                     _TMR3_Reload:	
  8986                           ;psect for function _TMR3_Reload
  8987                           
  8988  07F5                     l3087:	
  8989                           ;incstack = 0
  8990                           ; Regs used in _TMR3_Reload: [wreg+status,2+status,0+pclath+cstack]
  8991                           
  8992                           
  8993                           ;tmr3.c: 105:     TMR3_WriteTimer(timer3ReloadVal);
  8994  07F5  0020               	movlb	0	; select bank0
  8995  07F6  0821               	movf	_timer3ReloadVal+1,w	;volatile
  8996  07F7  00D3               	movwf	TMR3_WriteTimer@timerVal+1
  8997  07F8  0820               	movf	_timer3ReloadVal,w	;volatile
  8998  07F9  00D2               	movwf	TMR3_WriteTimer@timerVal
  8999  07FA  3186  266D  3187   	fcall	_TMR3_WriteTimer
  9000  07FD                     l965:
  9001  07FD  0008               	return
  9002  07FE                     __end_of_TMR3_Reload:
  9003                           
  9004                           	psect	text11
  9005  066D                     __ptext11:	
  9006 ;; *************** function _TMR3_WriteTimer *****************
  9007 ;; Defined at:
  9008 ;;		line 79 in file "tmr3.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  timerVal        2    0[BANK0 ] unsigned short 
  9011 ;; Auto vars:     Size  Location     Type
  9012 ;;		None
  9013 ;; Return value:  Size  Location     Type
  9014 ;;                  1    wreg      void 
  9015 ;; Registers used:
  9016 ;;		wreg, status,2
  9017 ;; Tracked objects:
  9018 ;;		On entry : 0/0
  9019 ;;		On exit  : 0/0
  9020 ;;		Unchanged: 0/0
  9021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9022 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9026 ;;Total ram usage:        2 bytes
  9027 ;; Hardware stack levels used: 1
  9028 ;; Hardware stack levels required when called: 4
  9029 ;; This function calls:
  9030 ;;		Nothing
  9031 ;; This function is called by:
  9032 ;;		_TMR3_Reload
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036  066D                     _TMR3_WriteTimer:	
  9037                           ;psect for function _TMR3_WriteTimer
  9038                           
  9039  066D                     l2771:	
  9040                           ;incstack = 0
  9041                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
  9042                           
  9043                           
  9044                           ;tmr3.c: 79: void TMR3_WriteTimer(uint16_t timerVal);tmr3.c: 80: {;tmr3.c: 81:     if (T
      +                          3CONbits.T3SYNC == 1)
  9045  066D  0028               	movlb	8	; select bank8
  9046  066E  1D13               	btfss	19,2	;volatile
  9047  066F  2E71               	goto	u531
  9048  0670  2E72               	goto	u530
  9049  0671                     u531:
  9050  0671  2E7D               	goto	l2781
  9051  0672                     u530:
  9052  0672                     l2773:
  9053                           
  9054                           ;tmr3.c: 82:     {;tmr3.c: 84:         T3CONbits.TMR3ON = 0;
  9055  0672  1013               	bcf	19,0	;volatile
  9056  0673                     l2775:
  9057                           
  9058                           ;tmr3.c: 87:         TMR3H = (uint8_t)(timerVal >> 8);
  9059  0673  0020               	movlb	0	; select bank0
  9060  0674  0853               	movf	TMR3_WriteTimer@timerVal+1,w
  9061  0675  0028               	movlb	8	; select bank8
  9062  0676  0092               	movwf	18	;volatile
  9063  0677                     l2777:
  9064                           
  9065                           ;tmr3.c: 88:         TMR3L = (uint8_t)timerVal;
  9066  0677  0020               	movlb	0	; select bank0
  9067  0678  0852               	movf	TMR3_WriteTimer@timerVal,w
  9068  0679  0028               	movlb	8	; select bank8
  9069  067A  0091               	movwf	17	;volatile
  9070  067B                     l2779:
  9071                           
  9072                           ;tmr3.c: 91:         T3CONbits.TMR3ON =1;
  9073  067B  1413               	bsf	19,0	;volatile
  9074                           
  9075                           ;tmr3.c: 92:     }
  9076  067C  2E85               	goto	l962
  9077  067D                     l2781:
  9078                           
  9079                           ;tmr3.c: 94:     {;tmr3.c: 96:         TMR3H = (uint8_t)(timerVal >> 8);
  9080  067D  0020               	movlb	0	; select bank0
  9081  067E  0853               	movf	TMR3_WriteTimer@timerVal+1,w
  9082  067F  0028               	movlb	8	; select bank8
  9083  0680  0092               	movwf	18	;volatile
  9084  0681                     l2783:
  9085                           
  9086                           ;tmr3.c: 97:         TMR3L = (uint8_t)timerVal;
  9087  0681  0020               	movlb	0	; select bank0
  9088  0682  0852               	movf	TMR3_WriteTimer@timerVal,w
  9089  0683  0028               	movlb	8	; select bank8
  9090  0684  0091               	movwf	17	;volatile
  9091  0685                     l962:
  9092  0685  0008               	return
  9093  0686                     __end_of_TMR3_WriteTimer:
  9094                           
  9095                           	psect	text12
  9096  0163                     __ptext12:	
  9097 ;; *************** function _SetPin *****************
  9098 ;; Defined at:
  9099 ;;		line 41 in file "PIC16Xpress_DevBoard.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;  pin             1    wreg     enum E7144
  9102 ;;  io              1    0[BANK0 ] unsigned char 
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;  pin             1    3[BANK0 ] enum E7144
  9105 ;; Return value:  Size  Location     Type
  9106 ;;                  1    wreg      unsigned char 
  9107 ;; Registers used:
  9108 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9109 ;; Tracked objects:
  9110 ;;		On entry : 0/0
  9111 ;;		On exit  : 0/0
  9112 ;;		Unchanged: 0/0
  9113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9114 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9116 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9117 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9118 ;;Total ram usage:        4 bytes
  9119 ;; Hardware stack levels used: 1
  9120 ;; Hardware stack levels required when called: 4
  9121 ;; This function calls:
  9122 ;;		Nothing
  9123 ;; This function is called by:
  9124 ;;		_SpeakerTone_Init
  9125 ;;		_JSN_Sensor_Init
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129  0163                     _SetPin:	
  9130                           ;psect for function _SetPin
  9131                           
  9132                           
  9133                           ;incstack = 0
  9134                           ; Regs used in _SetPin: [wreg-fsr0h+status,2+status,0]
  9135                           ;SetPin@pin stored from wreg
  9136  0163  0020               	movlb	0	; select bank0
  9137  0164  00D5               	movwf	SetPin@pin
  9138  0165                     l3105:
  9139                           
  9140                           ;PIC16Xpress_DevBoard.c: 42:     switch(pin) {
  9141  0165  29DD               	goto	l3177
  9142  0166                     l3107:
  9143                           
  9144                           ;PIC16Xpress_DevBoard.c: 44:             TRISAbits.TRISA5 = io;
  9145  0166  0C52               	rrf	SetPin@io,w
  9146  0167  0021               	movlb	1	; select bank1
  9147  0168  1C03               	skipc
  9148  0169  128C               	bcf	12,5	;volatile
  9149  016A  1803               	skipnc
  9150  016B  168C               	bsf	12,5	;volatile
  9151  016C  2A1D               	goto	l106
  9152  016D                     l3111:
  9153                           
  9154                           ;PIC16Xpress_DevBoard.c: 47:             TRISAbits.TRISA4 = io;
  9155  016D  0C52               	rrf	SetPin@io,w
  9156  016E  0021               	movlb	1	; select bank1
  9157  016F  1C03               	skipc
  9158  0170  120C               	bcf	12,4	;volatile
  9159  0171  1803               	skipnc
  9160  0172  160C               	bsf	12,4	;volatile
  9161  0173  2A1D               	goto	l106
  9162  0174                     l3115:
  9163                           
  9164                           ;PIC16Xpress_DevBoard.c: 52:             TRISCbits.TRISC5 = io;
  9165  0174  0C52               	rrf	SetPin@io,w
  9166  0175  0021               	movlb	1	; select bank1
  9167  0176  1C03               	skipc
  9168  0177  128E               	bcf	14,5	;volatile
  9169  0178  1803               	skipnc
  9170  0179  168E               	bsf	14,5	;volatile
  9171  017A  2A1D               	goto	l106
  9172  017B                     l3119:
  9173                           
  9174                           ;PIC16Xpress_DevBoard.c: 55:             TRISCbits.TRISC4 = io;
  9175  017B  0C52               	rrf	SetPin@io,w
  9176  017C  0021               	movlb	1	; select bank1
  9177  017D  1C03               	skipc
  9178  017E  120E               	bcf	14,4	;volatile
  9179  017F  1803               	skipnc
  9180  0180  160E               	bsf	14,4	;volatile
  9181  0181  2A1D               	goto	l106
  9182  0182                     l3123:
  9183                           
  9184                           ;PIC16Xpress_DevBoard.c: 58:             TRISCbits.TRISC3 = io;
  9185  0182  0C52               	rrf	SetPin@io,w
  9186  0183  0021               	movlb	1	; select bank1
  9187  0184  1C03               	skipc
  9188  0185  118E               	bcf	14,3	;volatile
  9189  0186  1803               	skipnc
  9190  0187  158E               	bsf	14,3	;volatile
  9191  0188  2A1D               	goto	l106
  9192  0189                     l3127:
  9193                           
  9194                           ;PIC16Xpress_DevBoard.c: 61:             TRISCbits.TRISC6 = io;
  9195  0189  0C52               	rrf	SetPin@io,w
  9196  018A  0021               	movlb	1	; select bank1
  9197  018B  1C03               	skipc
  9198  018C  130E               	bcf	14,6	;volatile
  9199  018D  1803               	skipnc
  9200  018E  170E               	bsf	14,6	;volatile
  9201  018F  2A1D               	goto	l106
  9202  0190                     l3131:
  9203                           
  9204                           ;PIC16Xpress_DevBoard.c: 64:             TRISCbits.TRISC7 = io;
  9205  0190  0C52               	rrf	SetPin@io,w
  9206  0191  0021               	movlb	1	; select bank1
  9207  0192  1C03               	skipc
  9208  0193  138E               	bcf	14,7	;volatile
  9209  0194  1803               	skipnc
  9210  0195  178E               	bsf	14,7	;volatile
  9211  0196  2A1D               	goto	l106
  9212  0197                     l3135:
  9213                           
  9214                           ;PIC16Xpress_DevBoard.c: 67:             TRISBbits.TRISB7 = io;
  9215  0197  0C52               	rrf	SetPin@io,w
  9216  0198  0021               	movlb	1	; select bank1
  9217  0199  1C03               	skipc
  9218  019A  138D               	bcf	13,7	;volatile
  9219  019B  1803               	skipnc
  9220  019C  178D               	bsf	13,7	;volatile
  9221  019D  2A1D               	goto	l106
  9222  019E                     l3139:
  9223                           
  9224                           ;PIC16Xpress_DevBoard.c: 70:             TRISAbits.TRISA0 = io;
  9225  019E  0C52               	rrf	SetPin@io,w
  9226  019F  0021               	movlb	1	; select bank1
  9227  01A0  1C03               	skipc
  9228  01A1  100C               	bcf	12,0	;volatile
  9229  01A2  1803               	skipnc
  9230  01A3  140C               	bsf	12,0	;volatile
  9231  01A4  2A1D               	goto	l106
  9232  01A5                     l3143:
  9233                           
  9234                           ;PIC16Xpress_DevBoard.c: 73:             TRISAbits.TRISA1 = io;
  9235  01A5  0C52               	rrf	SetPin@io,w
  9236  01A6  0021               	movlb	1	; select bank1
  9237  01A7  1C03               	skipc
  9238  01A8  108C               	bcf	12,1	;volatile
  9239  01A9  1803               	skipnc
  9240  01AA  148C               	bsf	12,1	;volatile
  9241  01AB  2A1D               	goto	l106
  9242  01AC                     l3147:
  9243                           
  9244                           ;PIC16Xpress_DevBoard.c: 76:             TRISAbits.TRISA2 = io;
  9245  01AC  0C52               	rrf	SetPin@io,w
  9246  01AD  0021               	movlb	1	; select bank1
  9247  01AE  1C03               	skipc
  9248  01AF  110C               	bcf	12,2	;volatile
  9249  01B0  1803               	skipnc
  9250  01B1  150C               	bsf	12,2	;volatile
  9251  01B2  2A1D               	goto	l106
  9252  01B3                     l3151:
  9253                           
  9254                           ;PIC16Xpress_DevBoard.c: 79:             TRISCbits.TRISC0 = io;
  9255  01B3  0C52               	rrf	SetPin@io,w
  9256  01B4  0021               	movlb	1	; select bank1
  9257  01B5  1C03               	skipc
  9258  01B6  100E               	bcf	14,0	;volatile
  9259  01B7  1803               	skipnc
  9260  01B8  140E               	bsf	14,0	;volatile
  9261  01B9  2A1D               	goto	l106
  9262  01BA                     l3155:
  9263                           
  9264                           ;PIC16Xpress_DevBoard.c: 82:             TRISCbits.TRISC1 = io;
  9265  01BA  0C52               	rrf	SetPin@io,w
  9266  01BB  0021               	movlb	1	; select bank1
  9267  01BC  1C03               	skipc
  9268  01BD  108E               	bcf	14,1	;volatile
  9269  01BE  1803               	skipnc
  9270  01BF  148E               	bsf	14,1	;volatile
  9271  01C0  2A1D               	goto	l106
  9272  01C1                     l3159:
  9273                           
  9274                           ;PIC16Xpress_DevBoard.c: 85:             TRISCbits.TRISC2 = io;
  9275  01C1  0C52               	rrf	SetPin@io,w
  9276  01C2  0021               	movlb	1	; select bank1
  9277  01C3  1C03               	skipc
  9278  01C4  110E               	bcf	14,2	;volatile
  9279  01C5  1803               	skipnc
  9280  01C6  150E               	bsf	14,2	;volatile
  9281  01C7  2A1D               	goto	l106
  9282  01C8                     l3163:
  9283                           
  9284                           ;PIC16Xpress_DevBoard.c: 88:             TRISBbits.TRISB4 = io;
  9285  01C8  0C52               	rrf	SetPin@io,w
  9286  01C9  0021               	movlb	1	; select bank1
  9287  01CA  1C03               	skipc
  9288  01CB  120D               	bcf	13,4	;volatile
  9289  01CC  1803               	skipnc
  9290  01CD  160D               	bsf	13,4	;volatile
  9291  01CE  2A1D               	goto	l106
  9292  01CF                     l3167:
  9293                           
  9294                           ;PIC16Xpress_DevBoard.c: 91:             TRISBbits.TRISB5 = io;
  9295  01CF  0C52               	rrf	SetPin@io,w
  9296  01D0  0021               	movlb	1	; select bank1
  9297  01D1  1C03               	skipc
  9298  01D2  128D               	bcf	13,5	;volatile
  9299  01D3  1803               	skipnc
  9300  01D4  168D               	bsf	13,5	;volatile
  9301  01D5  2A1D               	goto	l106
  9302  01D6                     l3171:
  9303                           
  9304                           ;PIC16Xpress_DevBoard.c: 94:             TRISBbits.TRISB6 = io;
  9305  01D6  0C52               	rrf	SetPin@io,w
  9306  01D7  0021               	movlb	1	; select bank1
  9307  01D8  1C03               	skipc
  9308  01D9  130D               	bcf	13,6	;volatile
  9309  01DA  1803               	skipnc
  9310  01DB  170D               	bsf	13,6	;volatile
  9311  01DC  2A1D               	goto	l106
  9312  01DD                     l3177:
  9313  01DD  0855               	movf	SetPin@pin,w
  9314  01DE  00D3               	movwf	??_SetPin
  9315  01DF  01D4               	clrf	??_SetPin+1
  9316                           
  9317                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9318                           ; Switch size 1, requested type "simple"
  9319                           ; Number of cases is 1, Range of values is 0 to 0
  9320                           ; switch strategies available:
  9321                           ; Name         Instructions Cycles
  9322                           ; simple_byte            4     3 (average)
  9323                           ; direct_byte            8     6 (fixed)
  9324                           ; jumptable            260     6 (fixed)
  9325                           ;	Chosen strategy is simple_byte
  9326  01E0  0854               	movf	??_SetPin+1,w
  9327  01E1  3A00               	xorlw	0	; case 0
  9328  01E2  1903               	skipnz
  9329  01E3  29E5               	goto	l3935
  9330  01E4  2A1D               	goto	l106
  9331  01E5                     l3935:
  9332                           
  9333                           ; Switch size 1, requested type "simple"
  9334                           ; Number of cases is 18, Range of values is 0 to 17
  9335                           ; switch strategies available:
  9336                           ; Name         Instructions Cycles
  9337                           ; direct_byte           42     6 (fixed)
  9338                           ; simple_byte           55    28 (average)
  9339                           ; jumptable            260     6 (fixed)
  9340                           ;	Chosen strategy is simple_byte
  9341  01E5  0853               	movf	??_SetPin,w
  9342  01E6  3A00               	xorlw	0	; case 0
  9343  01E7  1903               	skipnz
  9344  01E8  2966               	goto	l3107
  9345  01E9  3A01               	xorlw	1	; case 1
  9346  01EA  1903               	skipnz
  9347  01EB  296D               	goto	l3111
  9348  01EC  3A03               	xorlw	3	; case 2
  9349  01ED  1903               	skipnz
  9350  01EE  2A1D               	goto	l106
  9351  01EF  3A01               	xorlw	1	; case 3
  9352  01F0  1903               	skipnz
  9353  01F1  2974               	goto	l3115
  9354  01F2  3A07               	xorlw	7	; case 4
  9355  01F3  1903               	skipnz
  9356  01F4  297B               	goto	l3119
  9357  01F5  3A01               	xorlw	1	; case 5
  9358  01F6  1903               	skipnz
  9359  01F7  2982               	goto	l3123
  9360  01F8  3A03               	xorlw	3	; case 6
  9361  01F9  1903               	skipnz
  9362  01FA  2989               	goto	l3127
  9363  01FB  3A01               	xorlw	1	; case 7
  9364  01FC  1903               	skipnz
  9365  01FD  2990               	goto	l3131
  9366  01FE  3A0F               	xorlw	15	; case 8
  9367  01FF  1903               	skipnz
  9368  0200  2997               	goto	l3135
  9369  0201  3A01               	xorlw	1	; case 9
  9370  0202  1903               	skipnz
  9371  0203  299E               	goto	l3139
  9372  0204  3A03               	xorlw	3	; case 10
  9373  0205  1903               	skipnz
  9374  0206  29A5               	goto	l3143
  9375  0207  3A01               	xorlw	1	; case 11
  9376  0208  1903               	skipnz
  9377  0209  29AC               	goto	l3147
  9378  020A  3A07               	xorlw	7	; case 12
  9379  020B  1903               	skipnz
  9380  020C  29B3               	goto	l3151
  9381  020D  3A01               	xorlw	1	; case 13
  9382  020E  1903               	skipnz
  9383  020F  29BA               	goto	l3155
  9384  0210  3A03               	xorlw	3	; case 14
  9385  0211  1903               	skipnz
  9386  0212  29C1               	goto	l3159
  9387  0213  3A01               	xorlw	1	; case 15
  9388  0214  1903               	skipnz
  9389  0215  29C8               	goto	l3163
  9390  0216  3A1F               	xorlw	31	; case 16
  9391  0217  1903               	skipnz
  9392  0218  29CF               	goto	l3167
  9393  0219  3A01               	xorlw	1	; case 17
  9394  021A  1903               	skipnz
  9395  021B  29D6               	goto	l3171
  9396  021C  2A1D               	goto	l106
  9397  021D                     l106:
  9398  021D  0008               	return
  9399  021E                     __end_of_SetPin:
  9400                           
  9401                           	psect	text13
  9402  0726                     __ptext13:	
  9403 ;; *************** function _PIC16_Init *****************
  9404 ;; Defined at:
  9405 ;;		line 16 in file "PIC16Xpress_DevBoard.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;		None
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;		None
  9410 ;; Return value:  Size  Location     Type
  9411 ;;                  1    wreg      void 
  9412 ;; Registers used:
  9413 ;;		wreg, status,2, status,0, pclath, cstack
  9414 ;; Tracked objects:
  9415 ;;		On entry : 0/0
  9416 ;;		On exit  : 0/0
  9417 ;;		Unchanged: 0/0
  9418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9423 ;;Total ram usage:        0 bytes
  9424 ;; Hardware stack levels used: 1
  9425 ;; Hardware stack levels required when called: 7
  9426 ;; This function calls:
  9427 ;;		_SYSTEM_Initialize
  9428 ;; This function is called by:
  9429 ;;		_main
  9430 ;; This function uses a non-reentrant model
  9431 ;;
  9432                           
  9433  0726                     _PIC16_Init:	
  9434                           ;psect for function _PIC16_Init
  9435                           
  9436  0726                     l3397:	
  9437                           ;incstack = 0
  9438                           ; Regs used in _PIC16_Init: [wreg+status,2+status,0+pclath+cstack]
  9439                           
  9440                           
  9441                           ;PIC16Xpress_DevBoard.c: 18:     PIE0 = 0x00;
  9442  0726  0021               	movlb	1	; select bank1
  9443  0727  0190               	clrf	16	;volatile
  9444                           
  9445                           ;PIC16Xpress_DevBoard.c: 19:     PIE1 = 0x00;
  9446  0728  0191               	clrf	17	;volatile
  9447                           
  9448                           ;PIC16Xpress_DevBoard.c: 20:     PIE2 = 0x00;
  9449  0729  0192               	clrf	18	;volatile
  9450                           
  9451                           ;PIC16Xpress_DevBoard.c: 21:     PIE3 = 0x00;
  9452  072A  0193               	clrf	19	;volatile
  9453                           
  9454                           ;PIC16Xpress_DevBoard.c: 22:     PIE4 = 0x00;
  9455  072B  0194               	clrf	20	;volatile
  9456                           
  9457                           ;PIC16Xpress_DevBoard.c: 25:     PIR0 = 0x00;
  9458  072C  0020               	movlb	0	; select bank0
  9459  072D  0190               	clrf	16	;volatile
  9460                           
  9461                           ;PIC16Xpress_DevBoard.c: 26:     PIR1 = 0x00;
  9462  072E  0191               	clrf	17	;volatile
  9463                           
  9464                           ;PIC16Xpress_DevBoard.c: 27:     PIR2 = 0x00;
  9465  072F  0192               	clrf	18	;volatile
  9466                           
  9467                           ;PIC16Xpress_DevBoard.c: 28:     PIR3 = 0x00;
  9468  0730  0193               	clrf	19	;volatile
  9469                           
  9470                           ;PIC16Xpress_DevBoard.c: 29:     PIR4 = 0x00;
  9471  0731  0194               	clrf	20	;volatile
  9472  0732                     l3399:
  9473                           
  9474                           ;PIC16Xpress_DevBoard.c: 32:     SYSTEM_Initialize();
  9475  0732  3185  25EC  3187   	fcall	_SYSTEM_Initialize
  9476  0735                     l3401:
  9477                           
  9478                           ;PIC16Xpress_DevBoard.c: 35:     (INTCONbits.PEIE = 1);
  9479  0735  170B               	bsf	11,6	;volatile
  9480  0736                     l3403:
  9481                           
  9482                           ;PIC16Xpress_DevBoard.c: 36:     (INTCONbits.GIE = 1);
  9483  0736  178B               	bsf	11,7	;volatile
  9484  0737                     l101:
  9485  0737  0008               	return
  9486  0738                     __end_of_PIC16_Init:
  9487                           
  9488                           	psect	text14
  9489  05EC                     __ptext14:	
  9490 ;; *************** function _SYSTEM_Initialize *****************
  9491 ;; Defined at:
  9492 ;;		line 15 in file "mcc.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;		None
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;		None
  9497 ;; Return value:  Size  Location     Type
  9498 ;;                  1    wreg      void 
  9499 ;; Registers used:
  9500 ;;		wreg, status,2, status,0, pclath, cstack
  9501 ;; Tracked objects:
  9502 ;;		On entry : 0/0
  9503 ;;		On exit  : 0/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9510 ;;Total ram usage:        0 bytes
  9511 ;; Hardware stack levels used: 1
  9512 ;; Hardware stack levels required when called: 6
  9513 ;; This function calls:
  9514 ;;		_CCP1_Initialize
  9515 ;;		_CCP2_Initialize
  9516 ;;		_CCP3_Initialize
  9517 ;;		_CCP4_Initialize
  9518 ;;		_EUSART_Initialize
  9519 ;;		_OSCILLATOR_Initialize
  9520 ;;		_PIN_MANAGER_Initialize
  9521 ;;		_PMD_Initialize
  9522 ;;		_PWM5_Initialize
  9523 ;;		_TMR0_Initialize
  9524 ;;		_TMR1_Initialize
  9525 ;;		_TMR2_Initialize
  9526 ;;		_TMR3_Initialize
  9527 ;;		_WDT_Initialize
  9528 ;; This function is called by:
  9529 ;;		_PIC16_Init
  9530 ;; This function uses a non-reentrant model
  9531 ;;
  9532                           
  9533  05EC                     _SYSTEM_Initialize:	
  9534                           ;psect for function _SYSTEM_Initialize
  9535                           
  9536  05EC                     l3265:	
  9537                           ;incstack = 0
  9538                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9539                           
  9540                           
  9541                           ;mcc.c: 17:     PMD_Initialize();
  9542  05EC  3187  27CD  3185   	fcall	_PMD_Initialize
  9543                           
  9544                           ;mcc.c: 18:     PIN_MANAGER_Initialize();
  9545  05EF  3185  250B  3185   	fcall	_PIN_MANAGER_Initialize
  9546                           
  9547                           ;mcc.c: 19:     OSCILLATOR_Initialize();
  9548  05F2  3187  27B7  3185   	fcall	_OSCILLATOR_Initialize
  9549                           
  9550                           ;mcc.c: 20:     WDT_Initialize();
  9551  05F5  318F  2797  3185   	fcall	_WDT_Initialize
  9552                           
  9553                           ;mcc.c: 21:     CCP3_Initialize();
  9554  05F8  3186  2686  3185   	fcall	_CCP3_Initialize
  9555                           
  9556                           ;mcc.c: 22:     CCP1_Initialize();
  9557  05FB  3186  26B6  3185   	fcall	_CCP1_Initialize
  9558                           
  9559                           ;mcc.c: 23:     TMR2_Initialize();
  9560  05FE  318F  27EF  3185   	fcall	_TMR2_Initialize
  9561                           
  9562                           ;mcc.c: 24:     TMR0_Initialize();
  9563  0601  3186  26CE  3185   	fcall	_TMR0_Initialize
  9564                           
  9565                           ;mcc.c: 25:     CCP2_Initialize();
  9566  0604  3186  269E  3185   	fcall	_CCP2_Initialize
  9567                           
  9568                           ;mcc.c: 26:     CCP4_Initialize();
  9569  0607  3187  274A  3185   	fcall	_CCP4_Initialize
  9570  060A                     l3267:
  9571                           
  9572                           ;mcc.c: 27:     TMR3_Initialize();
  9573  060A  3187  27AA  3185   	fcall	_TMR3_Initialize
  9574  060D                     l3269:
  9575                           
  9576                           ;mcc.c: 28:     PWM5_Initialize();
  9577  060D  3187  27C3  3185   	fcall	_PWM5_Initialize
  9578  0610                     l3271:
  9579                           
  9580                           ;mcc.c: 29:     TMR1_Initialize();
  9581  0610  3187  278E  3185   	fcall	_TMR1_Initialize
  9582  0613                     l3273:
  9583                           
  9584                           ;mcc.c: 30:     EUSART_Initialize();
  9585  0613  3183  23D1  3185   	fcall	_EUSART_Initialize
  9586  0616                     l230:
  9587  0616  0008               	return
  9588  0617                     __end_of_SYSTEM_Initialize:
  9589                           
  9590                           	psect	text15
  9591  0F97                     __ptext15:	
  9592 ;; *************** function _WDT_Initialize *****************
  9593 ;; Defined at:
  9594 ;;		line 55 in file "mcc.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;		None
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;		None
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  1    wreg      void 
  9601 ;; Registers used:
  9602 ;;		wreg
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;Total ram usage:        0 bytes
  9613 ;; Hardware stack levels used: 1
  9614 ;; Hardware stack levels required when called: 4
  9615 ;; This function calls:
  9616 ;;		Nothing
  9617 ;; This function is called by:
  9618 ;;		_SYSTEM_Initialize
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622  0F97                     _WDT_Initialize:	
  9623                           ;psect for function _WDT_Initialize
  9624                           
  9625  0F97                     l2931:	
  9626                           ;incstack = 0
  9627                           ; Regs used in _WDT_Initialize: [wreg]
  9628                           
  9629                           
  9630                           ;mcc.c: 58:     WDTCON = 0x16;
  9631  0F97  3016               	movlw	22
  9632  0F98  0021               	movlb	1	; select bank1
  9633  0F99  0097               	movwf	23	;volatile
  9634  0F9A                     l239:
  9635  0F9A  0008               	return
  9636  0F9B                     __end_of_WDT_Initialize:
  9637                           
  9638                           	psect	text16
  9639  07AA                     __ptext16:	
  9640 ;; *************** function _TMR3_Initialize *****************
  9641 ;; Defined at:
  9642 ;;		line 20 in file "tmr3.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;		None
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;		None
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  1    wreg      void 
  9649 ;; Registers used:
  9650 ;;		status,2
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9660 ;;Total ram usage:        0 bytes
  9661 ;; Hardware stack levels used: 1
  9662 ;; Hardware stack levels required when called: 4
  9663 ;; This function calls:
  9664 ;;		Nothing
  9665 ;; This function is called by:
  9666 ;;		_SYSTEM_Initialize
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670  07AA                     _TMR3_Initialize:	
  9671                           ;psect for function _TMR3_Initialize
  9672                           
  9673  07AA                     l3011:	
  9674                           ;incstack = 0
  9675                           ; Regs used in _TMR3_Initialize: [status,2]
  9676                           
  9677                           
  9678                           ;tmr3.c: 23:     T3GCON = 0x00;
  9679  07AA  0028               	movlb	8	; select bank8
  9680  07AB  0194               	clrf	20	;volatile
  9681                           
  9682                           ;tmr3.c: 26:     TMR3H = 0x00;
  9683  07AC  0192               	clrf	18	;volatile
  9684                           
  9685                           ;tmr3.c: 29:     TMR3L = 0x00;
  9686  07AD  0191               	clrf	17	;volatile
  9687  07AE                     l3013:
  9688                           
  9689                           ;tmr3.c: 32:     PIR3bits.TMR3IF = 0;
  9690  07AE  0020               	movlb	0	; select bank0
  9691  07AF  1213               	bcf	19,4	;volatile
  9692                           
  9693                           ;tmr3.c: 35:     timer3ReloadVal = 0x0000;
  9694  07B0  01A0               	clrf	_timer3ReloadVal	;volatile
  9695  07B1  01A1               	clrf	_timer3ReloadVal+1	;volatile
  9696  07B2                     l3015:
  9697                           
  9698                           ;tmr3.c: 38:     PIE3bits.TMR3IE = 1;
  9699  07B2  0021               	movlb	1	; select bank1
  9700  07B3  1613               	bsf	19,4	;volatile
  9701                           
  9702                           ;tmr3.c: 41:     T3CON = 0x00;
  9703  07B4  0028               	movlb	8	; select bank8
  9704  07B5  0193               	clrf	19	;volatile
  9705  07B6                     l948:
  9706  07B6  0008               	return
  9707  07B7                     __end_of_TMR3_Initialize:
  9708                           
  9709                           	psect	text17
  9710  0FEF                     __ptext17:	
  9711 ;; *************** function _TMR2_Initialize *****************
  9712 ;; Defined at:
  9713 ;;		line 17 in file "tmr2.c"
  9714 ;; Parameters:    Size  Location     Type
  9715 ;;		None
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;		None
  9718 ;; Return value:  Size  Location     Type
  9719 ;;                  1    wreg      void 
  9720 ;; Registers used:
  9721 ;;		wreg, status,2
  9722 ;; Tracked objects:
  9723 ;;		On entry : 0/0
  9724 ;;		On exit  : 0/0
  9725 ;;		Unchanged: 0/0
  9726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9731 ;;Total ram usage:        0 bytes
  9732 ;; Hardware stack levels used: 1
  9733 ;; Hardware stack levels required when called: 4
  9734 ;; This function calls:
  9735 ;;		Nothing
  9736 ;; This function is called by:
  9737 ;;		_SYSTEM_Initialize
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741  0FEF                     _TMR2_Initialize:	
  9742                           ;psect for function _TMR2_Initialize
  9743                           
  9744  0FEF                     l2965:	
  9745                           ;incstack = 0
  9746                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9747                           
  9748                           
  9749                           ;tmr2.c: 20:     PR2 = 0xF9;
  9750  0FEF  30F9               	movlw	249
  9751  0FF0  0020               	movlb	0	; select bank0
  9752  0FF1  009E               	movwf	30	;volatile
  9753  0FF2                     l2967:
  9754                           
  9755                           ;tmr2.c: 23:     TMR2 = 0x00;
  9756  0FF2  019D               	clrf	29	;volatile
  9757  0FF3                     l2969:
  9758                           
  9759                           ;tmr2.c: 26:     PIR1bits.TMR2IF = 0;
  9760  0FF3  1091               	bcf	17,1	;volatile
  9761  0FF4                     l2971:
  9762                           
  9763                           ;tmr2.c: 29:     T2CON = 0x06;
  9764  0FF4  3006               	movlw	6
  9765  0FF5  009F               	movwf	31	;volatile
  9766  0FF6                     l908:
  9767  0FF6  0008               	return
  9768  0FF7                     __end_of_TMR2_Initialize:
  9769                           
  9770                           	psect	text18
  9771  078E                     __ptext18:	
  9772 ;; *************** function _TMR1_Initialize *****************
  9773 ;; Defined at:
  9774 ;;		line 19 in file "tmr1.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;		None
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;		None
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  1    wreg      void 
  9781 ;; Registers used:
  9782 ;;		wreg, status,2
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9792 ;;Total ram usage:        0 bytes
  9793 ;; Hardware stack levels used: 1
  9794 ;; Hardware stack levels required when called: 4
  9795 ;; This function calls:
  9796 ;;		Nothing
  9797 ;; This function is called by:
  9798 ;;		_SYSTEM_Initialize
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802  078E                     _TMR1_Initialize:	
  9803                           ;psect for function _TMR1_Initialize
  9804                           
  9805  078E                     l3025:	
  9806                           ;incstack = 0
  9807                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  9808                           
  9809                           
  9810                           ;tmr1.c: 24:     T1GCON = 0x00;
  9811  078E  0020               	movlb	0	; select bank0
  9812  078F  019C               	clrf	28	;volatile
  9813                           
  9814                           ;tmr1.c: 27:     TMR1H = 0x00;
  9815  0790  019A               	clrf	26	;volatile
  9816                           
  9817                           ;tmr1.c: 30:     TMR1L = 0x00;
  9818  0791  0199               	clrf	25	;volatile
  9819  0792                     l3027:
  9820                           
  9821                           ;tmr1.c: 33:     PIR1bits.TMR1IF = 0;
  9822  0792  1011               	bcf	17,0	;volatile
  9823  0793                     l3029:
  9824                           
  9825                           ;tmr1.c: 36:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  9826  0793  081A               	movf	26,w	;volatile
  9827  0794  00B1               	movwf	_timer1ReloadVal+1	;volatile
  9828  0795  0819               	movf	25,w	;volatile
  9829  0796  00B0               	movwf	_timer1ReloadVal	;volatile
  9830  0797                     l3031:
  9831                           
  9832                           ;tmr1.c: 39:     PIE1bits.TMR1IE = 1;
  9833  0797  0021               	movlb	1	; select bank1
  9834  0798  1411               	bsf	17,0	;volatile
  9835  0799                     l3033:
  9836                           
  9837                           ;tmr1.c: 42:     T1CON = 0b00100001;
  9838  0799  3021               	movlw	33
  9839  079A  0020               	movlb	0	; select bank0
  9840  079B  009B               	movwf	27	;volatile
  9841  079C                     l461:
  9842  079C  0008               	return
  9843  079D                     __end_of_TMR1_Initialize:
  9844                           
  9845                           	psect	text19
  9846  06CE                     __ptext19:	
  9847 ;; *************** function _TMR0_Initialize *****************
  9848 ;; Defined at:
  9849 ;;		line 19 in file "tmr0.c"
  9850 ;; Parameters:    Size  Location     Type
  9851 ;;		None
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;		None
  9854 ;; Return value:  Size  Location     Type
  9855 ;;                  1    wreg      void 
  9856 ;; Registers used:
  9857 ;;		wreg, status,2, status,0, pclath, cstack
  9858 ;; Tracked objects:
  9859 ;;		On entry : 0/0
  9860 ;;		On exit  : 0/0
  9861 ;;		Unchanged: 0/0
  9862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;Total ram usage:        0 bytes
  9868 ;; Hardware stack levels used: 1
  9869 ;; Hardware stack levels required when called: 5
  9870 ;; This function calls:
  9871 ;;		_TMR0_SetInterruptHandler
  9872 ;; This function is called by:
  9873 ;;		_SYSTEM_Initialize
  9874 ;; This function uses a non-reentrant model
  9875 ;;
  9876                           
  9877  06CE                     _TMR0_Initialize:	
  9878                           ;psect for function _TMR0_Initialize
  9879                           
  9880  06CE                     l2973:	
  9881                           ;incstack = 0
  9882                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9883                           
  9884                           
  9885                           ;tmr0.c: 22:     T0CON1 = 0x42;
  9886  06CE  3042               	movlw	66
  9887  06CF  0020               	movlb	0	; select bank0
  9888  06D0  0098               	movwf	24	;volatile
  9889                           
  9890                           ;tmr0.c: 25:     TMR0H = 0xF9;
  9891  06D1  30F9               	movlw	249
  9892  06D2  0096               	movwf	22	;volatile
  9893  06D3                     l2975:
  9894                           
  9895                           ;tmr0.c: 28:     TMR0L = 0x00;
  9896  06D3  0195               	clrf	21	;volatile
  9897  06D4                     l2977:
  9898                           
  9899                           ;tmr0.c: 31:     PIR0bits.TMR0IF = 0;
  9900  06D4  1290               	bcf	16,5	;volatile
  9901  06D5                     l2979:
  9902                           
  9903                           ;tmr0.c: 34:     PIE0bits.TMR0IE = 1;
  9904  06D5  0021               	movlb	1	; select bank1
  9905  06D6  1690               	bsf	16,5	;volatile
  9906  06D7                     l2981:
  9907                           
  9908                           ;tmr0.c: 37:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  9909  06D7  3000               	movlw	0
  9910  06D8  0020               	movlb	0	; select bank0
  9911  06D9  00D2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  9912  06DA  3000               	movlw	0
  9913  06DB  00D3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9914  06DC  318F  27D5  3186   	fcall	_TMR0_SetInterruptHandler
  9915  06DF                     l2983:
  9916                           
  9917                           ;tmr0.c: 40:     T0CON0 = 0x80;
  9918  06DF  3080               	movlw	128
  9919  06E0  0020               	movlb	0	; select bank0
  9920  06E1  0097               	movwf	23	;volatile
  9921  06E2                     l2985:
  9922                           
  9923                           ;tmr0.c: 41:     CountCallBack = 0;
  9924  06E2  01D0               	clrf	_CountCallBack	;volatile
  9925  06E3                     l273:
  9926  06E3  0008               	return
  9927  06E4                     __end_of_TMR0_Initialize:
  9928                           
  9929                           	psect	text20
  9930  0FD5                     __ptext20:	
  9931 ;; *************** function _TMR0_SetInterruptHandler *****************
  9932 ;; Defined at:
  9933 ;;		line 117 in file "tmr0.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9936 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;		None
  9939 ;; Return value:  Size  Location     Type
  9940 ;;                  1    wreg      void 
  9941 ;; Registers used:
  9942 ;;		wreg
  9943 ;; Tracked objects:
  9944 ;;		On entry : 0/0
  9945 ;;		On exit  : 0/0
  9946 ;;		Unchanged: 0/0
  9947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9948 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9951 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9952 ;;Total ram usage:        2 bytes
  9953 ;; Hardware stack levels used: 1
  9954 ;; Hardware stack levels required when called: 4
  9955 ;; This function calls:
  9956 ;;		Nothing
  9957 ;; This function is called by:
  9958 ;;		_TMR0_Initialize
  9959 ;; This function uses a non-reentrant model
  9960 ;;
  9961                           
  9962  0FD5                     _TMR0_SetInterruptHandler:	
  9963                           ;psect for function _TMR0_SetInterruptHandler
  9964                           
  9965  0FD5                     l2753:	
  9966                           ;incstack = 0
  9967                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  9968                           
  9969                           
  9970                           ;tmr0.c: 118:     TMR0_InterruptHandler = InterruptHandler;
  9971  0FD5  0020               	movlb	0	; select bank0
  9972  0FD6  0853               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  9973  0FD7  00C5               	movwf	_TMR0_InterruptHandler+1
  9974  0FD8  0852               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  9975  0FD9  00C4               	movwf	_TMR0_InterruptHandler
  9976  0FDA                     l298:
  9977  0FDA  0008               	return
  9978  0FDB                     __end_of_TMR0_SetInterruptHandler:
  9979                           
  9980                           	psect	text21
  9981  07C3                     __ptext21:	
  9982 ;; *************** function _PWM5_Initialize *****************
  9983 ;; Defined at:
  9984 ;;		line 16 in file "pwm5.c"
  9985 ;; Parameters:    Size  Location     Type
  9986 ;;		None
  9987 ;; Auto vars:     Size  Location     Type
  9988 ;;		None
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  1    wreg      void 
  9991 ;; Registers used:
  9992 ;;		wreg, status,2, status,0
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10002 ;;Total ram usage:        0 bytes
 10003 ;; Hardware stack levels used: 1
 10004 ;; Hardware stack levels required when called: 4
 10005 ;; This function calls:
 10006 ;;		Nothing
 10007 ;; This function is called by:
 10008 ;;		_SYSTEM_Initialize
 10009 ;; This function uses a non-reentrant model
 10010 ;;
 10011                           
 10012  07C3                     _PWM5_Initialize:	
 10013                           ;psect for function _PWM5_Initialize
 10014                           
 10015  07C3                     l3017:	
 10016                           ;incstack = 0
 10017                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 10018                           
 10019                           
 10020                           ;pwm5.c: 18:     PWM5CON = 0x80;
 10021  07C3  3080               	movlw	128
 10022  07C4  002C               	movlb	12	; select bank12
 10023  07C5  0099               	movwf	25	;volatile
 10024  07C6                     l3019:
 10025                           
 10026                           ;pwm5.c: 21:     PWM5DCH = 0x00;
 10027  07C6  0198               	clrf	24	;volatile
 10028  07C7                     l3021:
 10029                           
 10030                           ;pwm5.c: 24:     PWM5DCL = 0x00;
 10031  07C7  0197               	clrf	23	;volatile
 10032  07C8                     l3023:
 10033                           
 10034                           ;pwm5.c: 27:     PWMTMRSbits.P5TSEL = 1;
 10035  07C8  081F               	movf	31,w	;volatile
 10036  07C9  39FC               	andlw	-4
 10037  07CA  3801               	iorlw	1
 10038  07CB  009F               	movwf	31	;volatile
 10039  07CC                     l892:
 10040  07CC  0008               	return
 10041  07CD                     __end_of_PWM5_Initialize:
 10042                           
 10043                           	psect	text22
 10044  07CD                     __ptext22:	
 10045 ;; *************** function _PMD_Initialize *****************
 10046 ;; Defined at:
 10047 ;;		line 63 in file "mcc.c"
 10048 ;; Parameters:    Size  Location     Type
 10049 ;;		None
 10050 ;; Auto vars:     Size  Location     Type
 10051 ;;		None
 10052 ;; Return value:  Size  Location     Type
 10053 ;;                  1    wreg      void 
 10054 ;; Registers used:
 10055 ;;		wreg, status,2
 10056 ;; Tracked objects:
 10057 ;;		On entry : 0/0
 10058 ;;		On exit  : 0/0
 10059 ;;		Unchanged: 0/0
 10060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10065 ;;Total ram usage:        0 bytes
 10066 ;; Hardware stack levels used: 1
 10067 ;; Hardware stack levels required when called: 4
 10068 ;; This function calls:
 10069 ;;		Nothing
 10070 ;; This function is called by:
 10071 ;;		_SYSTEM_Initialize
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075  07CD                     _PMD_Initialize:	
 10076                           ;psect for function _PMD_Initialize
 10077                           
 10078  07CD                     l2875:	
 10079                           ;incstack = 0
 10080                           ; Regs used in _PMD_Initialize: [wreg+status,2]
 10081                           
 10082                           
 10083                           ;mcc.c: 67:     PMD0 = 0x00;
 10084  07CD  0032               	movlb	18	; select bank18
 10085  07CE  0191               	clrf	17	;volatile
 10086                           
 10087                           ;mcc.c: 68:     PMD1 = 0x00;
 10088  07CF  0192               	clrf	18	;volatile
 10089  07D0                     l2877:
 10090                           
 10091                           ;mcc.c: 71:     PMD2 = 0x66;
 10092  07D0  3066               	movlw	102
 10093  07D1  0093               	movwf	19	;volatile
 10094  07D2                     l2879:
 10095                           
 10096                           ;mcc.c: 72:     PMD3 = 0x00;
 10097  07D2  0194               	clrf	20	;volatile
 10098  07D3                     l2881:
 10099                           
 10100                           ;mcc.c: 73:     PMD4 = 0x00;
 10101  07D3  0195               	clrf	21	;volatile
 10102  07D4                     l2883:
 10103                           
 10104                           ;mcc.c: 76:     PMD5 = 0x1F;
 10105  07D4  301F               	movlw	31
 10106  07D5  0096               	movwf	22	;volatile
 10107  07D6                     l242:
 10108  07D6  0008               	return
 10109  07D7                     __end_of_PMD_Initialize:
 10110                           
 10111                           	psect	text23
 10112  050B                     __ptext23:	
 10113 ;; *************** function _PIN_MANAGER_Initialize *****************
 10114 ;; Defined at:
 10115 ;;		line 14 in file "pin_manager.c"
 10116 ;; Parameters:    Size  Location     Type
 10117 ;;		None
 10118 ;; Auto vars:     Size  Location     Type
 10119 ;;		None
 10120 ;; Return value:  Size  Location     Type
 10121 ;;                  1    wreg      void 
 10122 ;; Registers used:
 10123 ;;		wreg, status,2
 10124 ;; Tracked objects:
 10125 ;;		On entry : 0/0
 10126 ;;		On exit  : 0/0
 10127 ;;		Unchanged: 0/0
 10128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10133 ;;Total ram usage:        0 bytes
 10134 ;; Hardware stack levels used: 1
 10135 ;; Hardware stack levels required when called: 4
 10136 ;; This function calls:
 10137 ;;		Nothing
 10138 ;; This function is called by:
 10139 ;;		_SYSTEM_Initialize
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143  050B                     _PIN_MANAGER_Initialize:	
 10144                           ;psect for function _PIN_MANAGER_Initialize
 10145                           
 10146  050B                     l2885:	
 10147                           ;incstack = 0
 10148                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10149                           
 10150                           
 10151                           ;pin_manager.c: 19:     LATA = 0x00;
 10152  050B  0022               	movlb	2	; select bank2
 10153  050C  018C               	clrf	12	;volatile
 10154                           
 10155                           ;pin_manager.c: 20:     LATB = 0x00;
 10156  050D  018D               	clrf	13	;volatile
 10157                           
 10158                           ;pin_manager.c: 21:     LATC = 0x00;
 10159  050E  018E               	clrf	14	;volatile
 10160  050F                     l2887:
 10161                           
 10162                           ;pin_manager.c: 26:     TRISA = 0x37;
 10163  050F  3037               	movlw	55
 10164  0510  0021               	movlb	1	; select bank1
 10165  0511  008C               	movwf	12	;volatile
 10166  0512                     l2889:
 10167                           
 10168                           ;pin_manager.c: 27:     TRISB = 0xF0;
 10169  0512  30F0               	movlw	240
 10170  0513  008D               	movwf	13	;volatile
 10171  0514                     l2891:
 10172                           
 10173                           ;pin_manager.c: 28:     TRISC = 0xEF;
 10174  0514  30EF               	movlw	239
 10175  0515  008E               	movwf	14	;volatile
 10176  0516                     l2893:
 10177                           
 10178                           ;pin_manager.c: 33:     ANSELC = 0xD7;
 10179  0516  30D7               	movlw	215
 10180  0517  0023               	movlb	3	; select bank3
 10181  0518  008E               	movwf	14	;volatile
 10182  0519                     l2895:
 10183                           
 10184                           ;pin_manager.c: 34:     ANSELB = 0xD0;
 10185  0519  30D0               	movlw	208
 10186  051A  008D               	movwf	13	;volatile
 10187  051B                     l2897:
 10188                           
 10189                           ;pin_manager.c: 35:     ANSELA = 0x33;
 10190  051B  3033               	movlw	51
 10191  051C  008C               	movwf	12	;volatile
 10192                           
 10193                           ;pin_manager.c: 40:     WPUB = 0x00;
 10194  051D  0024               	movlb	4	; select bank4
 10195  051E  018D               	clrf	13	;volatile
 10196                           
 10197                           ;pin_manager.c: 41:     WPUA = 0x00;
 10198  051F  018C               	clrf	12	;volatile
 10199                           
 10200                           ;pin_manager.c: 42:     WPUC = 0x00;
 10201  0520  018E               	clrf	14	;volatile
 10202                           
 10203                           ;pin_manager.c: 47:     ODCONA = 0x00;
 10204  0521  0025               	movlb	5	; select bank5
 10205  0522  018C               	clrf	12	;volatile
 10206                           
 10207                           ;pin_manager.c: 48:     ODCONB = 0x00;
 10208  0523  018D               	clrf	13	;volatile
 10209                           
 10210                           ;pin_manager.c: 49:     ODCONC = 0x00;
 10211  0524  018E               	clrf	14	;volatile
 10212  0525                     l2899:
 10213                           
 10214                           ;pin_manager.c: 54:     SLRCONA = 0x37;
 10215  0525  3037               	movlw	55
 10216  0526  0026               	movlb	6	; select bank6
 10217  0527  008C               	movwf	12	;volatile
 10218  0528                     l2901:
 10219                           
 10220                           ;pin_manager.c: 55:     SLRCONB = 0xF0;
 10221  0528  30F0               	movlw	240
 10222  0529  008D               	movwf	13	;volatile
 10223  052A                     l2903:
 10224                           
 10225                           ;pin_manager.c: 56:     SLRCONC = 0xFF;
 10226  052A  30FF               	movlw	255
 10227  052B  008E               	movwf	14	;volatile
 10228  052C                     l2905:
 10229                           
 10230                           ;pin_manager.c: 61:     INLVLA = 0x3F;
 10231  052C  303F               	movlw	63
 10232  052D  0027               	movlb	7	; select bank7
 10233  052E  008C               	movwf	12	;volatile
 10234  052F                     l2907:
 10235                           
 10236                           ;pin_manager.c: 62:     INLVLB = 0xF0;
 10237  052F  30F0               	movlw	240
 10238  0530  008D               	movwf	13	;volatile
 10239  0531                     l2909:
 10240                           
 10241                           ;pin_manager.c: 63:     INLVLC = 0xFF;
 10242  0531  30FF               	movlw	255
 10243  0532  008E               	movwf	14	;volatile
 10244  0533                     l2911:
 10245                           
 10246                           ;pin_manager.c: 66:     RXPPS = 0x0D;
 10247  0533  300D               	movlw	13
 10248  0534  003C               	movlb	28	; select bank28
 10249  0535  00A4               	movwf	36	;volatile
 10250  0536                     l2913:
 10251                           
 10252                           ;pin_manager.c: 67:     RC4PPS = 0x14;
 10253  0536  3014               	movlw	20
 10254  0537  003D               	movlb	29	; select bank29
 10255  0538  00A4               	movwf	36	;volatile
 10256  0539                     l2915:
 10257                           
 10258                           ;pin_manager.c: 69:     CCP1PPS = 0x15;
 10259  0539  3015               	movlw	21
 10260  053A  003C               	movlb	28	; select bank28
 10261  053B  0094               	movwf	20	;volatile
 10262  053C                     l2917:
 10263                           
 10264                           ;pin_manager.c: 70:     CCP2PPS = 0x13;
 10265  053C  3013               	movlw	19
 10266  053D  0095               	movwf	21	;volatile
 10267  053E                     l2919:
 10268                           
 10269                           ;pin_manager.c: 71:     CCP3PPS = 0x02;
 10270  053E  3002               	movlw	2
 10271  053F  0096               	movwf	22	;volatile
 10272  0540                     l2921:
 10273                           
 10274                           ;pin_manager.c: 73:     RC1PPS = 0x0F;
 10275  0540  300F               	movlw	15
 10276  0541  003D               	movlb	29	; select bank29
 10277  0542  00A1               	movwf	33	;volatile
 10278  0543                     l2923:
 10279                           
 10280                           ;pin_manager.c: 74:     RB6PPS = 0x02;
 10281  0543  3002               	movlw	2
 10282  0544  009E               	movwf	30	;volatile
 10283  0545                     l749:
 10284  0545  0008               	return
 10285  0546                     __end_of_PIN_MANAGER_Initialize:
 10286                           
 10287                           	psect	text24
 10288  07B7                     __ptext24:	
 10289 ;; *************** function _OSCILLATOR_Initialize *****************
 10290 ;; Defined at:
 10291 ;;		line 35 in file "mcc.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;		None
 10294 ;; Auto vars:     Size  Location     Type
 10295 ;;		None
 10296 ;; Return value:  Size  Location     Type
 10297 ;;                  1    wreg      void 
 10298 ;; Registers used:
 10299 ;;		wreg, status,2
 10300 ;; Tracked objects:
 10301 ;;		On entry : 0/0
 10302 ;;		On exit  : 0/0
 10303 ;;		Unchanged: 0/0
 10304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10309 ;;Total ram usage:        0 bytes
 10310 ;; Hardware stack levels used: 1
 10311 ;; Hardware stack levels required when called: 4
 10312 ;; This function calls:
 10313 ;;		Nothing
 10314 ;; This function is called by:
 10315 ;;		_SYSTEM_Initialize
 10316 ;; This function uses a non-reentrant model
 10317 ;;
 10318                           
 10319  07B7                     _OSCILLATOR_Initialize:	
 10320                           ;psect for function _OSCILLATOR_Initialize
 10321                           
 10322  07B7                     l2925:	
 10323                           ;incstack = 0
 10324                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10325                           
 10326                           
 10327                           ;mcc.c: 38:     OSCCON1 = 0x00;
 10328  07B7  0032               	movlb	18	; select bank18
 10329  07B8  0199               	clrf	25	;volatile
 10330                           
 10331                           ;mcc.c: 40:     OSCCON3 = 0x00;
 10332  07B9  019B               	clrf	27	;volatile
 10333                           
 10334                           ;mcc.c: 42:     OSCEN = 0x00;
 10335  07BA  019D               	clrf	29	;volatile
 10336  07BB                     l2927:
 10337                           
 10338                           ;mcc.c: 44:     OSCFRQ = 0x04;
 10339  07BB  3004               	movlw	4
 10340  07BC  009F               	movwf	31	;volatile
 10341  07BD                     l2929:
 10342                           
 10343                           ;mcc.c: 46:     OSCTUNE = 0x00;
 10344  07BD  019E               	clrf	30	;volatile
 10345  07BE                     l233:	
 10346                           ;mcc.c: 49:     {;mcc.c: 50:     }
 10347                           
 10348                           
 10349                           ;mcc.c: 48:     while(PLLR == 0)
 10350  07BE  1C1C               	btfss	28,0	;volatile
 10351  07BF  2FC1               	goto	u541
 10352  07C0  2FC2               	goto	u540
 10353  07C1                     u541:
 10354  07C1  2FBE               	goto	l233
 10355  07C2                     u540:
 10356  07C2                     l236:
 10357  07C2  0008               	return
 10358  07C3                     __end_of_OSCILLATOR_Initialize:
 10359                           
 10360                           	psect	text25
 10361  03D1                     __ptext25:	
 10362 ;; *************** function _EUSART_Initialize *****************
 10363 ;; Defined at:
 10364 ;;		line 45 in file "eusart.c"
 10365 ;; Parameters:    Size  Location     Type
 10366 ;;		None
 10367 ;; Auto vars:     Size  Location     Type
 10368 ;;		None
 10369 ;; Return value:  Size  Location     Type
 10370 ;;                  1    wreg      void 
 10371 ;; Registers used:
 10372 ;;		wreg, status,2, status,0, pclath, cstack
 10373 ;; Tracked objects:
 10374 ;;		On entry : 0/0
 10375 ;;		On exit  : 0/0
 10376 ;;		Unchanged: 0/0
 10377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10380 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10381 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10382 ;;Total ram usage:        1 bytes
 10383 ;; Hardware stack levels used: 1
 10384 ;; Hardware stack levels required when called: 5
 10385 ;; This function calls:
 10386 ;;		_EUSART_SetErrorHandler
 10387 ;;		_EUSART_SetFramingErrorHandler
 10388 ;;		_EUSART_SetOverrunErrorHandler
 10389 ;;		_EUSART_SetRxInterruptHandler
 10390 ;;		_EUSART_SetTxInterruptHandler
 10391 ;; This function is called by:
 10392 ;;		_SYSTEM_Initialize
 10393 ;; This function uses a non-reentrant model
 10394 ;;
 10395                           
 10396  03D1                     _EUSART_Initialize:	
 10397                           ;psect for function _EUSART_Initialize
 10398                           
 10399  03D1                     l3035:	
 10400                           ;incstack = 0
 10401                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10402                           
 10403                           
 10404                           ;eusart.c: 48:     PIE1bits.RCIE = 0;
 10405  03D1  0021               	movlb	1	; select bank1
 10406  03D2  1291               	bcf	17,5	;volatile
 10407  03D3                     l3037:
 10408                           
 10409                           ;eusart.c: 49:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 10410  03D3  3080               	movlw	low _EUSART_Receive_ISR
 10411  03D4  0020               	movlb	0	; select bank0
 10412  03D5  00D2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 10413  03D6  3005               	movlw	high _EUSART_Receive_ISR
 10414  03D7  00D3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 10415  03D8  318F  27C9  3183   	fcall	_EUSART_SetRxInterruptHandler
 10416  03DB                     l3039:
 10417                           
 10418                           ;eusart.c: 50:     PIE1bits.TXIE = 0;
 10419  03DB  0021               	movlb	1	; select bank1
 10420  03DC  1211               	bcf	17,4	;volatile
 10421                           
 10422                           ;eusart.c: 51:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
 10423  03DD  3017               	movlw	low _EUSART_Transmit_ISR
 10424  03DE  0020               	movlb	0	; select bank0
 10425  03DF  00D2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 10426  03E0  3006               	movlw	high _EUSART_Transmit_ISR
 10427  03E1  00D3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 10428  03E2  318F  27CF  3183   	fcall	_EUSART_SetTxInterruptHandler
 10429  03E5                     l3041:
 10430                           
 10431                           ;eusart.c: 55:     BAUD1CON = 0x08;
 10432  03E5  3008               	movlw	8
 10433  03E6  0023               	movlb	3	; select bank3
 10434  03E7  009F               	movwf	31	;volatile
 10435  03E8                     l3043:
 10436                           
 10437                           ;eusart.c: 58:     RC1STA = 0x90;
 10438  03E8  3090               	movlw	144
 10439  03E9  009D               	movwf	29	;volatile
 10440  03EA                     l3045:
 10441                           
 10442                           ;eusart.c: 61:     TX1STA = 0x24;
 10443  03EA  3024               	movlw	36
 10444  03EB  009E               	movwf	30	;volatile
 10445  03EC                     l3047:
 10446                           
 10447                           ;eusart.c: 64:     SP1BRGL = 0xA0;
 10448  03EC  30A0               	movlw	160
 10449  03ED  009B               	movwf	27	;volatile
 10450  03EE                     l3049:
 10451                           
 10452                           ;eusart.c: 67:     SP1BRGH = 0x01;
 10453  03EE  3001               	movlw	1
 10454  03EF  009C               	movwf	28	;volatile
 10455  03F0                     l3051:
 10456                           
 10457                           ;eusart.c: 70:     EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
 10458  03F0  30FE               	movlw	low _EUSART_DefaultFramingErrorHandler
 10459  03F1  0020               	movlb	0	; select bank0
 10460  03F2  00D2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 10461  03F3  3007               	movlw	high _EUSART_DefaultFramingErrorHandler
 10462  03F4  00D3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 10463  03F5  318F  27BD  3183   	fcall	_EUSART_SetFramingErrorHandler
 10464  03F8                     l3053:
 10465                           
 10466                           ;eusart.c: 71:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
 10467  03F8  3093               	movlw	low _EUSART_DefaultOverrunErrorHandler
 10468  03F9  0020               	movlb	0	; select bank0
 10469  03FA  00D2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 10470  03FB  300F               	movlw	high _EUSART_DefaultOverrunErrorHandler
 10471  03FC  00D3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 10472  03FD  318F  27C3  3183   	fcall	_EUSART_SetOverrunErrorHandler
 10473  0400                     l3055:
 10474                           
 10475                           ;eusart.c: 72:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
 10476  0400  308F               	movlw	low _EUSART_DefaultErrorHandler
 10477  0401  0020               	movlb	0	; select bank0
 10478  0402  00D2               	movwf	EUSART_SetErrorHandler@interruptHandler
 10479  0403  300F               	movlw	high _EUSART_DefaultErrorHandler
 10480  0404  00D3               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 10481  0405  318F  27B7  3183   	fcall	_EUSART_SetErrorHandler
 10482  0408                     l3057:
 10483                           
 10484                           ;eusart.c: 74:     eusartRxLastError.status = 0;
 10485  0408  0020               	movlb	0	; select bank0
 10486  0409  01C7               	clrf	_eusartRxLastError	;volatile
 10487  040A                     l3059:
 10488                           
 10489                           ;eusart.c: 77:     eusartTxHead = 0;
 10490  040A  01CC               	clrf	_eusartTxHead	;volatile
 10491  040B                     l3061:
 10492                           
 10493                           ;eusart.c: 78:     eusartTxTail = 0;
 10494  040B  01CB               	clrf	_eusartTxTail	;volatile
 10495  040C                     l3063:
 10496                           
 10497                           ;eusart.c: 79:     eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 10498  040C  3008               	movlw	8
 10499  040D  00D4               	movwf	??_EUSART_Initialize
 10500  040E  0854               	movf	??_EUSART_Initialize,w
 10501  040F  00CA               	movwf	_eusartTxBufferRemaining	;volatile
 10502                           
 10503                           ;eusart.c: 81:     eusartRxHead = 0;
 10504  0410  01C9               	clrf	_eusartRxHead	;volatile
 10505                           
 10506                           ;eusart.c: 82:     eusartRxTail = 0;
 10507  0411  01FA               	clrf	_eusartRxTail	;volatile
 10508                           
 10509                           ;eusart.c: 83:     eusartRxCount = 0;
 10510  0412  01C8               	clrf	_eusartRxCount	;volatile
 10511  0413                     l3065:
 10512                           
 10513                           ;eusart.c: 86:     PIE1bits.RCIE = 1;
 10514  0413  0021               	movlb	1	; select bank1
 10515  0414  1691               	bsf	17,5	;volatile
 10516  0415                     l556:
 10517  0415  0008               	return
 10518  0416                     __end_of_EUSART_Initialize:
 10519                           
 10520                           	psect	text26
 10521  0FCF                     __ptext26:	
 10522 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 10523 ;; Defined at:
 10524 ;;		line 278 in file "eusart.c"
 10525 ;; Parameters:    Size  Location     Type
 10526 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10527 ;;		 -> EUSART_Transmit_ISR(1), 
 10528 ;; Auto vars:     Size  Location     Type
 10529 ;;		None
 10530 ;; Return value:  Size  Location     Type
 10531 ;;                  1    wreg      void 
 10532 ;; Registers used:
 10533 ;;		wreg
 10534 ;; Tracked objects:
 10535 ;;		On entry : 0/0
 10536 ;;		On exit  : 0/0
 10537 ;;		Unchanged: 0/0
 10538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10539 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10542 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10543 ;;Total ram usage:        2 bytes
 10544 ;; Hardware stack levels used: 1
 10545 ;; Hardware stack levels required when called: 4
 10546 ;; This function calls:
 10547 ;;		Nothing
 10548 ;; This function is called by:
 10549 ;;		_EUSART_Initialize
 10550 ;; This function uses a non-reentrant model
 10551 ;;
 10552                           
 10553  0FCF                     _EUSART_SetTxInterruptHandler:	
 10554                           ;psect for function _EUSART_SetTxInterruptHandler
 10555                           
 10556  0FCF                     l2763:	
 10557                           ;incstack = 0
 10558                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 10559                           
 10560                           
 10561                           ;eusart.c: 279:     EUSART_TxDefaultInterruptHandler = interruptHandler;
 10562  0FCF  0020               	movlb	0	; select bank0
 10563  0FD0  0853               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 10564  0FD1  00AF               	movwf	_EUSART_TxDefaultInterruptHandler+1
 10565  0FD2  0852               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 10566  0FD3  00AE               	movwf	_EUSART_TxDefaultInterruptHandler
 10567  0FD4                     l628:
 10568  0FD4  0008               	return
 10569  0FD5                     __end_of_EUSART_SetTxInterruptHandler:
 10570                           
 10571                           	psect	text27
 10572  0FC9                     __ptext27:	
 10573 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 10574 ;; Defined at:
 10575 ;;		line 284 in file "eusart.c"
 10576 ;; Parameters:    Size  Location     Type
 10577 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10578 ;;		 -> EUSART_Receive_ISR(1), 
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;		None
 10581 ;; Return value:  Size  Location     Type
 10582 ;;                  1    wreg      void 
 10583 ;; Registers used:
 10584 ;;		wreg
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10590 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10594 ;;Total ram usage:        2 bytes
 10595 ;; Hardware stack levels used: 1
 10596 ;; Hardware stack levels required when called: 4
 10597 ;; This function calls:
 10598 ;;		Nothing
 10599 ;; This function is called by:
 10600 ;;		_EUSART_Initialize
 10601 ;; This function uses a non-reentrant model
 10602 ;;
 10603                           
 10604  0FC9                     _EUSART_SetRxInterruptHandler:	
 10605                           ;psect for function _EUSART_SetRxInterruptHandler
 10606                           
 10607  0FC9                     l2761:	
 10608                           ;incstack = 0
 10609                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 10610                           
 10611                           
 10612                           ;eusart.c: 285:     EUSART_RxDefaultInterruptHandler = interruptHandler;
 10613  0FC9  0020               	movlb	0	; select bank0
 10614  0FCA  0853               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 10615  0FCB  00AD               	movwf	_EUSART_RxDefaultInterruptHandler+1
 10616  0FCC  0852               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 10617  0FCD  00AC               	movwf	_EUSART_RxDefaultInterruptHandler
 10618  0FCE                     l631:
 10619  0FCE  0008               	return
 10620  0FCF                     __end_of_EUSART_SetRxInterruptHandler:
 10621                           
 10622                           	psect	text28
 10623  0FC3                     __ptext28:	
 10624 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 10625 ;; Defined at:
 10626 ;;		line 266 in file "eusart.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10629 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 10630 ;; Auto vars:     Size  Location     Type
 10631 ;;		None
 10632 ;; Return value:  Size  Location     Type
 10633 ;;                  1    wreg      void 
 10634 ;; Registers used:
 10635 ;;		wreg
 10636 ;; Tracked objects:
 10637 ;;		On entry : 0/0
 10638 ;;		On exit  : 0/0
 10639 ;;		Unchanged: 0/0
 10640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10641 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10644 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10645 ;;Total ram usage:        2 bytes
 10646 ;; Hardware stack levels used: 1
 10647 ;; Hardware stack levels required when called: 4
 10648 ;; This function calls:
 10649 ;;		Nothing
 10650 ;; This function is called by:
 10651 ;;		_EUSART_Initialize
 10652 ;; This function uses a non-reentrant model
 10653 ;;
 10654                           
 10655  0FC3                     _EUSART_SetOverrunErrorHandler:	
 10656                           ;psect for function _EUSART_SetOverrunErrorHandler
 10657                           
 10658  0FC3                     l2767:	
 10659                           ;incstack = 0
 10660                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 10661                           
 10662                           
 10663                           ;eusart.c: 267:     EUSART_OverrunErrorHandler = interruptHandler;
 10664  0FC3  0020               	movlb	0	; select bank0
 10665  0FC4  0853               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 10666  0FC5  00A9               	movwf	_EUSART_OverrunErrorHandler+1
 10667  0FC6  0852               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 10668  0FC7  00A8               	movwf	_EUSART_OverrunErrorHandler
 10669  0FC8                     l622:
 10670  0FC8  0008               	return
 10671  0FC9                     __end_of_EUSART_SetOverrunErrorHandler:
 10672                           
 10673                           	psect	text29
 10674  0FBD                     __ptext29:	
 10675 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 10676 ;; Defined at:
 10677 ;;		line 260 in file "eusart.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10680 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 10681 ;; Auto vars:     Size  Location     Type
 10682 ;;		None
 10683 ;; Return value:  Size  Location     Type
 10684 ;;                  1    wreg      void 
 10685 ;; Registers used:
 10686 ;;		wreg
 10687 ;; Tracked objects:
 10688 ;;		On entry : 0/0
 10689 ;;		On exit  : 0/0
 10690 ;;		Unchanged: 0/0
 10691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10692 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10695 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;Total ram usage:        2 bytes
 10697 ;; Hardware stack levels used: 1
 10698 ;; Hardware stack levels required when called: 4
 10699 ;; This function calls:
 10700 ;;		Nothing
 10701 ;; This function is called by:
 10702 ;;		_EUSART_Initialize
 10703 ;; This function uses a non-reentrant model
 10704 ;;
 10705                           
 10706  0FBD                     _EUSART_SetFramingErrorHandler:	
 10707                           ;psect for function _EUSART_SetFramingErrorHandler
 10708                           
 10709  0FBD                     l2765:	
 10710                           ;incstack = 0
 10711                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 10712                           
 10713                           
 10714                           ;eusart.c: 261:     EUSART_FramingErrorHandler = interruptHandler;
 10715  0FBD  0020               	movlb	0	; select bank0
 10716  0FBE  0853               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 10717  0FBF  00AB               	movwf	_EUSART_FramingErrorHandler+1
 10718  0FC0  0852               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 10719  0FC1  00AA               	movwf	_EUSART_FramingErrorHandler
 10720  0FC2                     l619:
 10721  0FC2  0008               	return
 10722  0FC3                     __end_of_EUSART_SetFramingErrorHandler:
 10723                           
 10724                           	psect	text30
 10725  0FB7                     __ptext30:	
 10726 ;; *************** function _EUSART_SetErrorHandler *****************
 10727 ;; Defined at:
 10728 ;;		line 272 in file "eusart.c"
 10729 ;; Parameters:    Size  Location     Type
 10730 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10731 ;;		 -> EUSART_DefaultErrorHandler(1), 
 10732 ;; Auto vars:     Size  Location     Type
 10733 ;;		None
 10734 ;; Return value:  Size  Location     Type
 10735 ;;                  1    wreg      void 
 10736 ;; Registers used:
 10737 ;;		wreg
 10738 ;; Tracked objects:
 10739 ;;		On entry : 0/0
 10740 ;;		On exit  : 0/0
 10741 ;;		Unchanged: 0/0
 10742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10743 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10746 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10747 ;;Total ram usage:        2 bytes
 10748 ;; Hardware stack levels used: 1
 10749 ;; Hardware stack levels required when called: 4
 10750 ;; This function calls:
 10751 ;;		Nothing
 10752 ;; This function is called by:
 10753 ;;		_EUSART_Initialize
 10754 ;; This function uses a non-reentrant model
 10755 ;;
 10756                           
 10757  0FB7                     _EUSART_SetErrorHandler:	
 10758                           ;psect for function _EUSART_SetErrorHandler
 10759                           
 10760  0FB7                     l2769:	
 10761                           ;incstack = 0
 10762                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 10763                           
 10764                           
 10765                           ;eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
 10766  0FB7  0020               	movlb	0	; select bank0
 10767  0FB8  0853               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 10768  0FB9  00A7               	movwf	_EUSART_ErrorHandler+1
 10769  0FBA  0852               	movf	EUSART_SetErrorHandler@interruptHandler,w
 10770  0FBB  00A6               	movwf	_EUSART_ErrorHandler
 10771  0FBC                     l625:
 10772  0FBC  0008               	return
 10773  0FBD                     __end_of_EUSART_SetErrorHandler:
 10774                           
 10775                           	psect	text31
 10776  074A                     __ptext31:	
 10777 ;; *************** function _CCP4_Initialize *****************
 10778 ;; Defined at:
 10779 ;;		line 18 in file "ccp4.c"
 10780 ;; Parameters:    Size  Location     Type
 10781 ;;		None
 10782 ;; Auto vars:     Size  Location     Type
 10783 ;;		None
 10784 ;; Return value:  Size  Location     Type
 10785 ;;                  1    wreg      void 
 10786 ;; Registers used:
 10787 ;;		wreg, status,2, status,0
 10788 ;; Tracked objects:
 10789 ;;		On entry : 0/0
 10790 ;;		On exit  : 0/0
 10791 ;;		Unchanged: 0/0
 10792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;Total ram usage:        0 bytes
 10798 ;; Hardware stack levels used: 1
 10799 ;; Hardware stack levels required when called: 4
 10800 ;; This function calls:
 10801 ;;		Nothing
 10802 ;; This function is called by:
 10803 ;;		_SYSTEM_Initialize
 10804 ;; This function uses a non-reentrant model
 10805 ;;
 10806                           
 10807  074A                     _CCP4_Initialize:	
 10808                           ;psect for function _CCP4_Initialize
 10809                           
 10810  074A                     l3003:	
 10811                           ;incstack = 0
 10812                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0]
 10813                           
 10814                           
 10815                           ;ccp4.c: 21:  CCP4CON = 0x81;
 10816  074A  3081               	movlw	129
 10817  074B  0026               	movlb	6	; select bank6
 10818  074C  0097               	movwf	23	;volatile
 10819                           
 10820                           ;ccp4.c: 24:  CCPR4H = 0x11;
 10821  074D  3011               	movlw	17
 10822  074E  0096               	movwf	22	;volatile
 10823                           
 10824                           ;ccp4.c: 25:  CCPR4L = 0xC1;
 10825  074F  30C1               	movlw	193
 10826  0750  0095               	movwf	21	;volatile
 10827  0751                     l3005:
 10828                           
 10829                           ;ccp4.c: 28:  CCPTMRSbits.C4TSEL = 0x2;
 10830  0751  0025               	movlb	5	; select bank5
 10831  0752  081F               	movf	31,w	;volatile
 10832  0753  393F               	andlw	-193
 10833  0754  3880               	iorlw	128
 10834  0755  009F               	movwf	31	;volatile
 10835  0756                     l3007:
 10836                           
 10837                           ;ccp4.c: 31:     PIR4bits.CCP4IF = 0;
 10838  0756  0020               	movlb	0	; select bank0
 10839  0757  1194               	bcf	20,3	;volatile
 10840  0758                     l3009:
 10841                           
 10842                           ;ccp4.c: 34:     PIE4bits.CCP4IE = 1;
 10843  0758  0021               	movlb	1	; select bank1
 10844  0759  1594               	bsf	20,3	;volatile
 10845  075A                     l872:
 10846  075A  0008               	return
 10847  075B                     __end_of_CCP4_Initialize:
 10848                           
 10849                           	psect	text32
 10850  0686                     __ptext32:	
 10851 ;; *************** function _CCP3_Initialize *****************
 10852 ;; Defined at:
 10853 ;;		line 50 in file "ccp3.c"
 10854 ;; Parameters:    Size  Location     Type
 10855 ;;		None
 10856 ;; Auto vars:     Size  Location     Type
 10857 ;;		None
 10858 ;; Return value:  Size  Location     Type
 10859 ;;                  1    wreg      void 
 10860 ;; Registers used:
 10861 ;;		wreg, status,2, status,0, pclath, cstack
 10862 ;; Tracked objects:
 10863 ;;		On entry : 0/0
 10864 ;;		On exit  : 0/0
 10865 ;;		Unchanged: 0/0
 10866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10871 ;;Total ram usage:        0 bytes
 10872 ;; Hardware stack levels used: 1
 10873 ;; Hardware stack levels required when called: 5
 10874 ;; This function calls:
 10875 ;;		_CCP3_SetCallBack
 10876 ;; This function is called by:
 10877 ;;		_SYSTEM_Initialize
 10878 ;; This function uses a non-reentrant model
 10879 ;;
 10880                           
 10881  0686                     _CCP3_Initialize:	
 10882                           ;psect for function _CCP3_Initialize
 10883                           
 10884  0686                     l2933:	
 10885                           ;incstack = 0
 10886                           ; Regs used in _CCP3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10887                           
 10888                           
 10889                           ;ccp3.c: 55:  CCP3CON = 0x83;
 10890  0686  3083               	movlw	131
 10891  0687  0026               	movlb	6	; select bank6
 10892  0688  0093               	movwf	19	;volatile
 10893  0689                     l2935:
 10894                           
 10895                           ;ccp3.c: 58:  CCP3CAP = 0x00;
 10896  0689  0194               	clrf	20	;volatile
 10897  068A                     l2937:
 10898                           
 10899                           ;ccp3.c: 61:  CCPR3H = 0x00;
 10900  068A  0192               	clrf	18	;volatile
 10901  068B                     l2939:
 10902                           
 10903                           ;ccp3.c: 64:  CCPR3L = 0x00;
 10904  068B  0191               	clrf	17	;volatile
 10905  068C                     l2941:
 10906                           
 10907                           ;ccp3.c: 67:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 10908  068C  3057               	movlw	low _CCP3_DefaultCallBack
 10909  068D  0020               	movlb	0	; select bank0
 10910  068E  00D2               	movwf	CCP3_SetCallBack@customCallBack
 10911  068F  3004               	movlw	high _CCP3_DefaultCallBack
 10912  0690  00D3               	movwf	CCP3_SetCallBack@customCallBack+1
 10913  0691  318F  27B1  3186   	fcall	_CCP3_SetCallBack
 10914  0694                     l2943:
 10915                           
 10916                           ;ccp3.c: 70:  CCPTMRSbits.C3TSEL = 0x1;
 10917  0694  0025               	movlb	5	; select bank5
 10918  0695  081F               	movf	31,w	;volatile
 10919  0696  39CF               	andlw	-49
 10920  0697  3810               	iorlw	16
 10921  0698  009F               	movwf	31	;volatile
 10922  0699                     l2945:
 10923                           
 10924                           ;ccp3.c: 73:     PIR4bits.CCP3IF = 0;
 10925  0699  0020               	movlb	0	; select bank0
 10926  069A  1114               	bcf	20,2	;volatile
 10927  069B                     l2947:
 10928                           
 10929                           ;ccp3.c: 76:     PIE4bits.CCP3IE = 1;
 10930  069B  0021               	movlb	1	; select bank1
 10931  069C  1514               	bsf	20,2	;volatile
 10932  069D                     l436:
 10933  069D  0008               	return
 10934  069E                     __end_of_CCP3_Initialize:
 10935                           
 10936                           	psect	text33
 10937  0FB1                     __ptext33:	
 10938 ;; *************** function _CCP3_SetCallBack *****************
 10939 ;; Defined at:
 10940 ;;		line 98 in file "ccp3.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10943 ;;		 -> CCP3_DefaultCallBack(1), 
 10944 ;; Auto vars:     Size  Location     Type
 10945 ;;		None
 10946 ;; Return value:  Size  Location     Type
 10947 ;;                  1    wreg      void 
 10948 ;; Registers used:
 10949 ;;		wreg
 10950 ;; Tracked objects:
 10951 ;;		On entry : 0/0
 10952 ;;		On exit  : 0/0
 10953 ;;		Unchanged: 0/0
 10954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10955 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10958 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10959 ;;Total ram usage:        2 bytes
 10960 ;; Hardware stack levels used: 1
 10961 ;; Hardware stack levels required when called: 4
 10962 ;; This function calls:
 10963 ;;		Nothing
 10964 ;; This function is called by:
 10965 ;;		_CCP3_Initialize
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969  0FB1                     _CCP3_SetCallBack:	
 10970                           ;psect for function _CCP3_SetCallBack
 10971                           
 10972  0FB1                     l2759:	
 10973                           ;incstack = 0
 10974                           ; Regs used in _CCP3_SetCallBack: [wreg]
 10975                           
 10976                           
 10977                           ;ccp3.c: 99:     CCP3_CallBack = customCallBack;
 10978  0FB1  0020               	movlb	0	; select bank0
 10979  0FB2  0853               	movf	CCP3_SetCallBack@customCallBack+1,w
 10980  0FB3  00B7               	movwf	_CCP3_CallBack+1
 10981  0FB4  0852               	movf	CCP3_SetCallBack@customCallBack,w
 10982  0FB5  00B6               	movwf	_CCP3_CallBack
 10983  0FB6                     l442:
 10984  0FB6  0008               	return
 10985  0FB7                     __end_of_CCP3_SetCallBack:
 10986                           
 10987                           	psect	text34
 10988  069E                     __ptext34:	
 10989 ;; *************** function _CCP2_Initialize *****************
 10990 ;; Defined at:
 10991 ;;		line 50 in file "ccp2.c"
 10992 ;; Parameters:    Size  Location     Type
 10993 ;;		None
 10994 ;; Auto vars:     Size  Location     Type
 10995 ;;		None
 10996 ;; Return value:  Size  Location     Type
 10997 ;;                  1    wreg      void 
 10998 ;; Registers used:
 10999 ;;		wreg, status,2, status,0, pclath, cstack
 11000 ;; Tracked objects:
 11001 ;;		On entry : 0/0
 11002 ;;		On exit  : 0/0
 11003 ;;		Unchanged: 0/0
 11004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11009 ;;Total ram usage:        0 bytes
 11010 ;; Hardware stack levels used: 1
 11011 ;; Hardware stack levels required when called: 5
 11012 ;; This function calls:
 11013 ;;		_CCP2_SetCallBack
 11014 ;; This function is called by:
 11015 ;;		_SYSTEM_Initialize
 11016 ;; This function uses a non-reentrant model
 11017 ;;
 11018                           
 11019  069E                     _CCP2_Initialize:	
 11020                           ;psect for function _CCP2_Initialize
 11021                           
 11022  069E                     l2987:	
 11023                           ;incstack = 0
 11024                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11025                           
 11026                           
 11027                           ;ccp2.c: 55:  CCP2CON = 0x83;
 11028  069E  3083               	movlw	131
 11029  069F  0025               	movlb	5	; select bank5
 11030  06A0  0097               	movwf	23	;volatile
 11031  06A1                     l2989:
 11032                           
 11033                           ;ccp2.c: 58:  CCP2CAP = 0x00;
 11034  06A1  0198               	clrf	24	;volatile
 11035  06A2                     l2991:
 11036                           
 11037                           ;ccp2.c: 61:  CCPR2H = 0x00;
 11038  06A2  0196               	clrf	22	;volatile
 11039  06A3                     l2993:
 11040                           
 11041                           ;ccp2.c: 64:  CCPR2L = 0x00;
 11042  06A3  0195               	clrf	21	;volatile
 11043  06A4                     l2995:
 11044                           
 11045                           ;ccp2.c: 67:     CCP2_SetCallBack(CCP2_DefaultCallBack);
 11046  06A4  3093               	movlw	low _CCP2_DefaultCallBack
 11047  06A5  0020               	movlb	0	; select bank0
 11048  06A6  00D2               	movwf	CCP2_SetCallBack@customCallBack
 11049  06A7  3004               	movlw	high _CCP2_DefaultCallBack
 11050  06A8  00D3               	movwf	CCP2_SetCallBack@customCallBack+1
 11051  06A9  318F  27AB  3186   	fcall	_CCP2_SetCallBack
 11052  06AC                     l2997:
 11053                           
 11054                           ;ccp2.c: 70:  CCPTMRSbits.C2TSEL = 0x1;
 11055  06AC  0025               	movlb	5	; select bank5
 11056  06AD  081F               	movf	31,w	;volatile
 11057  06AE  39F3               	andlw	-13
 11058  06AF  3804               	iorlw	4
 11059  06B0  009F               	movwf	31	;volatile
 11060  06B1                     l2999:
 11061                           
 11062                           ;ccp2.c: 73:     PIR4bits.CCP2IF = 0;
 11063  06B1  0020               	movlb	0	; select bank0
 11064  06B2  1094               	bcf	20,1	;volatile
 11065  06B3                     l3001:
 11066                           
 11067                           ;ccp2.c: 76:     PIE4bits.CCP2IE = 1;
 11068  06B3  0021               	movlb	1	; select bank1
 11069  06B4  1494               	bsf	20,1	;volatile
 11070  06B5                     l390:
 11071  06B5  0008               	return
 11072  06B6                     __end_of_CCP2_Initialize:
 11073                           
 11074                           	psect	text35
 11075  0FAB                     __ptext35:	
 11076 ;; *************** function _CCP2_SetCallBack *****************
 11077 ;; Defined at:
 11078 ;;		line 98 in file "ccp2.c"
 11079 ;; Parameters:    Size  Location     Type
 11080 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 11081 ;;		 -> CCP2_DefaultCallBack(1), 
 11082 ;; Auto vars:     Size  Location     Type
 11083 ;;		None
 11084 ;; Return value:  Size  Location     Type
 11085 ;;                  1    wreg      void 
 11086 ;; Registers used:
 11087 ;;		wreg
 11088 ;; Tracked objects:
 11089 ;;		On entry : 0/0
 11090 ;;		On exit  : 0/0
 11091 ;;		Unchanged: 0/0
 11092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11093 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11096 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11097 ;;Total ram usage:        2 bytes
 11098 ;; Hardware stack levels used: 1
 11099 ;; Hardware stack levels required when called: 4
 11100 ;; This function calls:
 11101 ;;		Nothing
 11102 ;; This function is called by:
 11103 ;;		_CCP2_Initialize
 11104 ;; This function uses a non-reentrant model
 11105 ;;
 11106                           
 11107  0FAB                     _CCP2_SetCallBack:	
 11108                           ;psect for function _CCP2_SetCallBack
 11109                           
 11110  0FAB                     l2757:	
 11111                           ;incstack = 0
 11112                           ; Regs used in _CCP2_SetCallBack: [wreg]
 11113                           
 11114                           
 11115                           ;ccp2.c: 99:     CCP2_CallBack = customCallBack;
 11116  0FAB  0020               	movlb	0	; select bank0
 11117  0FAC  0853               	movf	CCP2_SetCallBack@customCallBack+1,w
 11118  0FAD  00BD               	movwf	_CCP2_CallBack+1
 11119  0FAE  0852               	movf	CCP2_SetCallBack@customCallBack,w
 11120  0FAF  00BC               	movwf	_CCP2_CallBack
 11121  0FB0                     l396:
 11122  0FB0  0008               	return
 11123  0FB1                     __end_of_CCP2_SetCallBack:
 11124                           
 11125                           	psect	text36
 11126  06B6                     __ptext36:	
 11127 ;; *************** function _CCP1_Initialize *****************
 11128 ;; Defined at:
 11129 ;;		line 50 in file "ccp1.c"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;		None
 11132 ;; Auto vars:     Size  Location     Type
 11133 ;;		None
 11134 ;; Return value:  Size  Location     Type
 11135 ;;                  1    wreg      void 
 11136 ;; Registers used:
 11137 ;;		wreg, status,2, status,0, pclath, cstack
 11138 ;; Tracked objects:
 11139 ;;		On entry : 0/0
 11140 ;;		On exit  : 0/0
 11141 ;;		Unchanged: 0/0
 11142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11147 ;;Total ram usage:        0 bytes
 11148 ;; Hardware stack levels used: 1
 11149 ;; Hardware stack levels required when called: 5
 11150 ;; This function calls:
 11151 ;;		_CCP1_SetCallBack
 11152 ;; This function is called by:
 11153 ;;		_SYSTEM_Initialize
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157  06B6                     _CCP1_Initialize:	
 11158                           ;psect for function _CCP1_Initialize
 11159                           
 11160  06B6                     l2949:	
 11161                           ;incstack = 0
 11162                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11163                           
 11164                           
 11165                           ;ccp1.c: 55:  CCP1CON = 0x83;
 11166  06B6  3083               	movlw	131
 11167  06B7  0025               	movlb	5	; select bank5
 11168  06B8  0093               	movwf	19	;volatile
 11169  06B9                     l2951:
 11170                           
 11171                           ;ccp1.c: 58:  CCP1CAP = 0x00;
 11172  06B9  0194               	clrf	20	;volatile
 11173  06BA                     l2953:
 11174                           
 11175                           ;ccp1.c: 61:  CCPR1H = 0x00;
 11176  06BA  0192               	clrf	18	;volatile
 11177  06BB                     l2955:
 11178                           
 11179                           ;ccp1.c: 64:  CCPR1L = 0x00;
 11180  06BB  0191               	clrf	17	;volatile
 11181  06BC                     l2957:
 11182                           
 11183                           ;ccp1.c: 67:     CCP1_SetCallBack(CCP1_DefaultCallBack);
 11184  06BC  30CF               	movlw	low _CCP1_DefaultCallBack
 11185  06BD  0020               	movlb	0	; select bank0
 11186  06BE  00D2               	movwf	CCP1_SetCallBack@customCallBack
 11187  06BF  3004               	movlw	high _CCP1_DefaultCallBack
 11188  06C0  00D3               	movwf	CCP1_SetCallBack@customCallBack+1
 11189  06C1  318F  27A5  3186   	fcall	_CCP1_SetCallBack
 11190  06C4                     l2959:
 11191                           
 11192                           ;ccp1.c: 70:  CCPTMRSbits.C1TSEL = 0x1;
 11193  06C4  0025               	movlb	5	; select bank5
 11194  06C5  081F               	movf	31,w	;volatile
 11195  06C6  39FC               	andlw	-4
 11196  06C7  3801               	iorlw	1
 11197  06C8  009F               	movwf	31	;volatile
 11198  06C9                     l2961:
 11199                           
 11200                           ;ccp1.c: 73:     PIR4bits.CCP1IF = 0;
 11201  06C9  0020               	movlb	0	; select bank0
 11202  06CA  1014               	bcf	20,0	;volatile
 11203  06CB                     l2963:
 11204                           
 11205                           ;ccp1.c: 76:     PIE4bits.CCP1IE = 1;
 11206  06CB  0021               	movlb	1	; select bank1
 11207  06CC  1414               	bsf	20,0	;volatile
 11208  06CD                     l344:
 11209  06CD  0008               	return
 11210  06CE                     __end_of_CCP1_Initialize:
 11211                           
 11212                           	psect	text37
 11213  0FA5                     __ptext37:	
 11214 ;; *************** function _CCP1_SetCallBack *****************
 11215 ;; Defined at:
 11216 ;;		line 98 in file "ccp1.c"
 11217 ;; Parameters:    Size  Location     Type
 11218 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 11219 ;;		 -> CCP1_DefaultCallBack(1), 
 11220 ;; Auto vars:     Size  Location     Type
 11221 ;;		None
 11222 ;; Return value:  Size  Location     Type
 11223 ;;                  1    wreg      void 
 11224 ;; Registers used:
 11225 ;;		wreg
 11226 ;; Tracked objects:
 11227 ;;		On entry : 0/0
 11228 ;;		On exit  : 0/0
 11229 ;;		Unchanged: 0/0
 11230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11231 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11234 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11235 ;;Total ram usage:        2 bytes
 11236 ;; Hardware stack levels used: 1
 11237 ;; Hardware stack levels required when called: 4
 11238 ;; This function calls:
 11239 ;;		Nothing
 11240 ;; This function is called by:
 11241 ;;		_CCP1_Initialize
 11242 ;; This function uses a non-reentrant model
 11243 ;;
 11244                           
 11245  0FA5                     _CCP1_SetCallBack:	
 11246                           ;psect for function _CCP1_SetCallBack
 11247                           
 11248  0FA5                     l2755:	
 11249                           ;incstack = 0
 11250                           ; Regs used in _CCP1_SetCallBack: [wreg]
 11251                           
 11252                           
 11253                           ;ccp1.c: 99:     CCP1_CallBack = customCallBack;
 11254  0FA5  0020               	movlb	0	; select bank0
 11255  0FA6  0853               	movf	CCP1_SetCallBack@customCallBack+1,w
 11256  0FA7  00C3               	movwf	_CCP1_CallBack+1
 11257  0FA8  0852               	movf	CCP1_SetCallBack@customCallBack,w
 11258  0FA9  00C2               	movwf	_CCP1_CallBack
 11259  0FAA                     l350:
 11260  0FAA  0008               	return
 11261  0FAB                     __end_of_CCP1_SetCallBack:
 11262                           
 11263                           	psect	text38
 11264  075B                     __ptext38:	
 11265 ;; *************** function _FRT_GetMillis *****************
 11266 ;; Defined at:
 11267 ;;		line 26 in file "FRT.c"
 11268 ;; Parameters:    Size  Location     Type
 11269 ;;		None
 11270 ;; Auto vars:     Size  Location     Type
 11271 ;;		None
 11272 ;; Return value:  Size  Location     Type
 11273 ;;                  4    0[BANK0 ] unsigned long 
 11274 ;; Registers used:
 11275 ;;		wreg
 11276 ;; Tracked objects:
 11277 ;;		On entry : 0/0
 11278 ;;		On exit  : 0/0
 11279 ;;		Unchanged: 0/0
 11280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11281 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11284 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11285 ;;Total ram usage:        4 bytes
 11286 ;; Hardware stack levels used: 1
 11287 ;; Hardware stack levels required when called: 4
 11288 ;; This function calls:
 11289 ;;		Nothing
 11290 ;; This function is called by:
 11291 ;;		_main
 11292 ;; This function uses a non-reentrant model
 11293 ;;
 11294                           
 11295  075B                     _FRT_GetMillis:	
 11296                           ;psect for function _FRT_GetMillis
 11297                           
 11298  075B                     l3521:	
 11299                           ;incstack = 0
 11300                           ; Regs used in _FRT_GetMillis: [wreg]
 11301                           
 11302                           
 11303                           ;FRT.c: 27:     return millis;
 11304  075B  0021               	movlb	1	; select bank1
 11305  075C  0851               	movf	(_millis+3)^(0+128),w
 11306  075D  0020               	movlb	0	; select bank0
 11307  075E  00D5               	movwf	?_FRT_GetMillis+3
 11308  075F  0021               	movlb	1	; select bank1
 11309  0760  0850               	movf	(_millis+2)^(0+128),w
 11310  0761  0020               	movlb	0	; select bank0
 11311  0762  00D4               	movwf	?_FRT_GetMillis+2
 11312  0763  0021               	movlb	1	; select bank1
 11313  0764  084F               	movf	(_millis+1)^(0+128),w
 11314  0765  0020               	movlb	0	; select bank0
 11315  0766  00D3               	movwf	?_FRT_GetMillis+1
 11316  0767  0021               	movlb	1	; select bank1
 11317  0768  084E               	movf	_millis^(0+128),w
 11318  0769  0020               	movlb	0	; select bank0
 11319  076A  00D2               	movwf	?_FRT_GetMillis
 11320  076B                     l763:
 11321  076B  0008               	return
 11322  076C                     __end_of_FRT_GetMillis:
 11323                           
 11324                           	psect	intentry
 11325  0004                     __pintentry:	
 11326 ;; *************** function _INTERRUPT_InterruptManager *****************
 11327 ;; Defined at:
 11328 ;;		line 16 in file "interrupt_manager.c"
 11329 ;; Parameters:    Size  Location     Type
 11330 ;;		None
 11331 ;; Auto vars:     Size  Location     Type
 11332 ;;		None
 11333 ;; Return value:  Size  Location     Type
 11334 ;;                  1    wreg      void 
 11335 ;; Registers used:
 11336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11337 ;; Tracked objects:
 11338 ;;		On entry : 0/0
 11339 ;;		On exit  : 0/0
 11340 ;;		Unchanged: 0/0
 11341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11346 ;;Total ram usage:        0 bytes
 11347 ;; Hardware stack levels used: 1
 11348 ;; Hardware stack levels required when called: 3
 11349 ;; This function calls:
 11350 ;;		Absolute function
 11351 ;;		_CCP1_CaptureISR
 11352 ;;		_CCP2_CaptureISR
 11353 ;;		_CCP3_CaptureISR
 11354 ;;		_CCP4_CompareISR
 11355 ;;		_EUSART_Receive_ISR
 11356 ;;		_EUSART_Transmit_ISR
 11357 ;;		_TMR0_ISR
 11358 ;;		_TMR1_ISR
 11359 ;;		_TMR3_ISR
 11360 ;; This function is called by:
 11361 ;;		Interrupt level 1
 11362 ;; This function uses a non-reentrant model
 11363 ;;
 11364                           
 11365  0004                     _INTERRUPT_InterruptManager:
 11366                           
 11367                           ;incstack = 0
 11368  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11369                           
 11370                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11371  0005  3180               	pagesel	$
 11372  0006                     i1l3613:
 11373                           
 11374                           ;interrupt_manager.c: 19:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 11375  0006  0021               	movlb	1	; select bank1
 11376  0007  1E90               	btfss	16,5	;volatile
 11377  0008  280A               	goto	u82_21
 11378  0009  280B               	goto	u82_20
 11379  000A                     u82_21:
 11380  000A  2814               	goto	i1l672
 11381  000B                     u82_20:
 11382  000B                     i1l3615:
 11383  000B  0020               	movlb	0	; select bank0
 11384  000C  1E90               	btfss	16,5	;volatile
 11385  000D  280F               	goto	u83_21
 11386  000E  2810               	goto	u83_20
 11387  000F                     u83_21:
 11388  000F  2814               	goto	i1l672
 11389  0010                     u83_20:
 11390  0010                     i1l3617:
 11391                           
 11392                           ;interrupt_manager.c: 20:     {;interrupt_manager.c: 21:         TMR0_ISR();
 11393  0010  3187  2738  3180   	fcall	_TMR0_ISR
 11394                           
 11395                           ;interrupt_manager.c: 22:     }
 11396  0013  288C               	goto	i1l690
 11397  0014                     i1l672:	
 11398                           ;interrupt_manager.c: 23:     else if(INTCONbits.PEIE == 1)
 11399                           
 11400  0014  1F0B               	btfss	11,6	;volatile
 11401  0015  2817               	goto	u84_21
 11402  0016  2818               	goto	u84_20
 11403  0017                     u84_21:
 11404  0017  288C               	goto	i1l690
 11405  0018                     u84_20:
 11406  0018                     i1l3619:
 11407                           
 11408                           ;interrupt_manager.c: 24:     {;interrupt_manager.c: 25:         if(PIE4bits.CCP4IE == 1
      +                           && PIR4bits.CCP4IF == 1)
 11409  0018  0021               	movlb	1	; select bank1
 11410  0019  1D94               	btfss	20,3	;volatile
 11411  001A  281C               	goto	u85_21
 11412  001B  281D               	goto	u85_20
 11413  001C                     u85_21:
 11414  001C  2826               	goto	i1l675
 11415  001D                     u85_20:
 11416  001D                     i1l3621:
 11417  001D  0020               	movlb	0	; select bank0
 11418  001E  1D94               	btfss	20,3	;volatile
 11419  001F  2821               	goto	u86_21
 11420  0020  2822               	goto	u86_20
 11421  0021                     u86_21:
 11422  0021  2826               	goto	i1l675
 11423  0022                     u86_20:
 11424  0022                     i1l3623:
 11425                           
 11426                           ;interrupt_manager.c: 26:         {;interrupt_manager.c: 27:             CCP4_CompareISR
      +                          ();
 11427  0022  318F  2786  3180   	fcall	_CCP4_CompareISR
 11428                           
 11429                           ;interrupt_manager.c: 28:         }
 11430  0025  288C               	goto	i1l690
 11431  0026                     i1l675:	
 11432                           ;interrupt_manager.c: 29:         else if(PIE3bits.TMR3IE == 1 && PIR3bits.TMR3IF == 1)
 11433                           
 11434  0026  0021               	movlb	1	; select bank1
 11435  0027  1E13               	btfss	19,4	;volatile
 11436  0028  282A               	goto	u87_21
 11437  0029  282B               	goto	u87_20
 11438  002A                     u87_21:
 11439  002A  2834               	goto	i1l677
 11440  002B                     u87_20:
 11441  002B                     i1l3625:
 11442  002B  0020               	movlb	0	; select bank0
 11443  002C  1E13               	btfss	19,4	;volatile
 11444  002D  282F               	goto	u88_21
 11445  002E  2830               	goto	u88_20
 11446  002F                     u88_21:
 11447  002F  2834               	goto	i1l677
 11448  0030                     u88_20:
 11449  0030                     i1l3627:
 11450                           
 11451                           ;interrupt_manager.c: 30:         {;interrupt_manager.c: 31:             TMR3_ISR();
 11452  0030  318F  279F  3180   	fcall	_TMR3_ISR
 11453                           
 11454                           ;interrupt_manager.c: 32:         }
 11455  0033  288C               	goto	i1l690
 11456  0034                     i1l677:	
 11457                           ;interrupt_manager.c: 33:         else if(PIE4bits.CCP1IE == 1 && PIR4bits.CCP1IF == 1)
 11458                           
 11459  0034  0021               	movlb	1	; select bank1
 11460  0035  1C14               	btfss	20,0	;volatile
 11461  0036  2838               	goto	u89_21
 11462  0037  2839               	goto	u89_20
 11463  0038                     u89_21:
 11464  0038  2842               	goto	i1l679
 11465  0039                     u89_20:
 11466  0039                     i1l3629:
 11467  0039  0020               	movlb	0	; select bank0
 11468  003A  1C14               	btfss	20,0	;volatile
 11469  003B  283D               	goto	u90_21
 11470  003C  283E               	goto	u90_20
 11471  003D                     u90_21:
 11472  003D  2842               	goto	i1l679
 11473  003E                     u90_20:
 11474  003E                     i1l3631:
 11475                           
 11476                           ;interrupt_manager.c: 34:         {;interrupt_manager.c: 35:             CCP1_CaptureISR
      +                          ();
 11477  003E  3187  2710  3180   	fcall	_CCP1_CaptureISR
 11478                           
 11479                           ;interrupt_manager.c: 36:         }
 11480  0041  288C               	goto	i1l690
 11481  0042                     i1l679:	
 11482                           ;interrupt_manager.c: 37:         else if(PIE4bits.CCP3IE == 1 && PIR4bits.CCP3IF == 1)
 11483                           
 11484  0042  0021               	movlb	1	; select bank1
 11485  0043  1D14               	btfss	20,2	;volatile
 11486  0044  2846               	goto	u91_21
 11487  0045  2847               	goto	u91_20
 11488  0046                     u91_21:
 11489  0046  2850               	goto	i1l681
 11490  0047                     u91_20:
 11491  0047                     i1l3633:
 11492  0047  0020               	movlb	0	; select bank0
 11493  0048  1D14               	btfss	20,2	;volatile
 11494  0049  284B               	goto	u92_21
 11495  004A  284C               	goto	u92_20
 11496  004B                     u92_21:
 11497  004B  2850               	goto	i1l681
 11498  004C                     u92_20:
 11499  004C                     i1l3635:
 11500                           
 11501                           ;interrupt_manager.c: 38:         {;interrupt_manager.c: 39:             CCP3_CaptureISR
      +                          ();
 11502  004C  3186  26E4  3180   	fcall	_CCP3_CaptureISR
 11503                           
 11504                           ;interrupt_manager.c: 40:         }
 11505  004F  288C               	goto	i1l690
 11506  0050                     i1l681:	
 11507                           ;interrupt_manager.c: 41:         else if(PIE4bits.CCP2IE == 1 && PIR4bits.CCP2IF == 1)
 11508                           
 11509  0050  0021               	movlb	1	; select bank1
 11510  0051  1C94               	btfss	20,1	;volatile
 11511  0052  2854               	goto	u93_21
 11512  0053  2855               	goto	u93_20
 11513  0054                     u93_21:
 11514  0054  285E               	goto	i1l683
 11515  0055                     u93_20:
 11516  0055                     i1l3637:
 11517  0055  0020               	movlb	0	; select bank0
 11518  0056  1C94               	btfss	20,1	;volatile
 11519  0057  2859               	goto	u94_21
 11520  0058  285A               	goto	u94_20
 11521  0059                     u94_21:
 11522  0059  285E               	goto	i1l683
 11523  005A                     u94_20:
 11524  005A                     i1l3639:
 11525                           
 11526                           ;interrupt_manager.c: 42:         {;interrupt_manager.c: 43:             CCP2_CaptureISR
      +                          ();
 11527  005A  3186  26FA  3180   	fcall	_CCP2_CaptureISR
 11528                           
 11529                           ;interrupt_manager.c: 44:         }
 11530  005D  288C               	goto	i1l690
 11531  005E                     i1l683:	
 11532                           ;interrupt_manager.c: 45:         else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 11533                           
 11534  005E  0021               	movlb	1	; select bank1
 11535  005F  1C11               	btfss	17,0	;volatile
 11536  0060  2862               	goto	u95_21
 11537  0061  2863               	goto	u95_20
 11538  0062                     u95_21:
 11539  0062  286C               	goto	i1l685
 11540  0063                     u95_20:
 11541  0063                     i1l3641:
 11542  0063  0020               	movlb	0	; select bank0
 11543  0064  1C11               	btfss	17,0	;volatile
 11544  0065  2867               	goto	u96_21
 11545  0066  2868               	goto	u96_20
 11546  0067                     u96_21:
 11547  0067  286C               	goto	i1l685
 11548  0068                     u96_20:
 11549  0068                     i1l3643:
 11550                           
 11551                           ;interrupt_manager.c: 46:         {;interrupt_manager.c: 47:             TMR1_ISR();
 11552  0068  3187  27D7  3180   	fcall	_TMR1_ISR
 11553                           
 11554                           ;interrupt_manager.c: 48:         }
 11555  006B  288C               	goto	i1l690
 11556  006C                     i1l685:	
 11557                           ;interrupt_manager.c: 49:         else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 11558                           
 11559  006C  0021               	movlb	1	; select bank1
 11560  006D  1E91               	btfss	17,5	;volatile
 11561  006E  2870               	goto	u97_21
 11562  006F  2871               	goto	u97_20
 11563  0070                     u97_21:
 11564  0070  287C               	goto	i1l687
 11565  0071                     u97_20:
 11566  0071                     i1l3645:
 11567  0071  0020               	movlb	0	; select bank0
 11568  0072  1E91               	btfss	17,5	;volatile
 11569  0073  2875               	goto	u98_21
 11570  0074  2876               	goto	u98_20
 11571  0075                     u98_21:
 11572  0075  287C               	goto	i1l687
 11573  0076                     u98_20:
 11574  0076                     i1l3647:
 11575                           
 11576                           ;interrupt_manager.c: 50:         {;interrupt_manager.c: 51:             EUSART_RxDefaul
      +                          tInterruptHandler();
 11577  0076  082D               	movf	_EUSART_RxDefaultInterruptHandler+1,w
 11578  0077  008A               	movwf	10
 11579  0078  082C               	movf	_EUSART_RxDefaultInterruptHandler,w
 11580  0079  000A               	callw
 11581  007A  3180               	pagesel	$
 11582                           
 11583                           ;interrupt_manager.c: 52:         }
 11584  007B  288C               	goto	i1l690
 11585  007C                     i1l687:	
 11586                           ;interrupt_manager.c: 53:         else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 11587                           
 11588  007C  0021               	movlb	1	; select bank1
 11589  007D  1E11               	btfss	17,4	;volatile
 11590  007E  2880               	goto	u99_21
 11591  007F  2881               	goto	u99_20
 11592  0080                     u99_21:
 11593  0080  288C               	goto	i1l684
 11594  0081                     u99_20:
 11595  0081                     i1l3649:
 11596  0081  0020               	movlb	0	; select bank0
 11597  0082  1E11               	btfss	17,4	;volatile
 11598  0083  2885               	goto	u100_21
 11599  0084  2886               	goto	u100_20
 11600  0085                     u100_21:
 11601  0085  288C               	goto	i1l684
 11602  0086                     u100_20:
 11603  0086                     i1l3651:
 11604                           
 11605                           ;interrupt_manager.c: 54:         {;interrupt_manager.c: 55:             EUSART_TxDefaul
      +                          tInterruptHandler();
 11606  0086  082F               	movf	_EUSART_TxDefaultInterruptHandler+1,w
 11607  0087  008A               	movwf	10
 11608  0088  082E               	movf	_EUSART_TxDefaultInterruptHandler,w
 11609  0089  000A               	callw
 11610  008A  3180               	pagesel	$
 11611  008B  288C               	goto	i1l690
 11612  008C                     i1l684:
 11613  008C                     i1l690:
 11614  008C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11615  008D  0009               	retfie
 11616  008E                     __end_of_INTERRUPT_InterruptManager:
 11617                           
 11618                           	psect	text40
 11619  0F9F                     __ptext40:	
 11620 ;; *************** function _TMR3_ISR *****************
 11621 ;; Defined at:
 11622 ;;		line 124 in file "tmr3.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;		None
 11625 ;; Auto vars:     Size  Location     Type
 11626 ;;		None
 11627 ;; Return value:  Size  Location     Type
 11628 ;;                  1    wreg      void 
 11629 ;; Registers used:
 11630 ;;		wreg, status,2, status,0, pclath, cstack
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/0
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11640 ;;Total ram usage:        0 bytes
 11641 ;; Hardware stack levels used: 1
 11642 ;; Hardware stack levels required when called: 2
 11643 ;; This function calls:
 11644 ;;		i1_TMR3_Reload
 11645 ;; This function is called by:
 11646 ;;		_INTERRUPT_InterruptManager
 11647 ;; This function uses a non-reentrant model
 11648 ;;
 11649                           
 11650  0F9F                     _TMR3_ISR:	
 11651                           ;psect for function _TMR3_ISR
 11652                           
 11653  0F9F                     i1l3517:	
 11654                           ;incstack = 0
 11655                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 11656                           
 11657                           
 11658                           ;tmr3.c: 127:     PIR3bits.TMR3IF = 0;
 11659  0F9F  0020               	movlb	0	; select bank0
 11660  0FA0  1213               	bcf	19,4	;volatile
 11661  0FA1                     i1l3519:
 11662                           
 11663                           ;tmr3.c: 128:     TMR3_Reload();
 11664  0FA1  318F  27F7  318F   	fcall	i1_TMR3_Reload
 11665  0FA4                     i1l974:
 11666  0FA4  0008               	return
 11667  0FA5                     __end_of_TMR3_ISR:
 11668                           
 11669                           	psect	text41
 11670  0FF7                     __ptext41:	
 11671 ;; *************** function i1_TMR3_Reload *****************
 11672 ;; Defined at:
 11673 ;;		line 103 in file "tmr3.c"
 11674 ;; Parameters:    Size  Location     Type
 11675 ;;		None
 11676 ;; Auto vars:     Size  Location     Type
 11677 ;;		None
 11678 ;; Return value:  Size  Location     Type
 11679 ;;                  1    wreg      void 
 11680 ;; Registers used:
 11681 ;;		wreg, status,2, status,0, pclath, cstack
 11682 ;; Tracked objects:
 11683 ;;		On entry : 0/0
 11684 ;;		On exit  : 0/0
 11685 ;;		Unchanged: 0/0
 11686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;Total ram usage:        0 bytes
 11692 ;; Hardware stack levels used: 1
 11693 ;; Hardware stack levels required when called: 1
 11694 ;; This function calls:
 11695 ;;		i1_TMR3_WriteTimer
 11696 ;; This function is called by:
 11697 ;;		_TMR3_ISR
 11698 ;; This function uses a non-reentrant model
 11699 ;;
 11700                           
 11701  0FF7                     i1_TMR3_Reload:	
 11702                           ;psect for function i1_TMR3_Reload
 11703                           
 11704  0FF7                     i1l3395:	
 11705                           ;incstack = 0
 11706                           ; Regs used in i1_TMR3_Reload: [wreg+status,2+status,0+pclath+cstack]
 11707                           
 11708                           
 11709                           ;tmr3.c: 105:     TMR3_WriteTimer(timer3ReloadVal);
 11710  0FF7  0020               	movlb	0	; select bank0
 11711  0FF8  0821               	movf	_timer3ReloadVal+1,w	;volatile
 11712  0FF9  00F1               	movwf	i1TMR3_WriteTimer@timerVal+1
 11713  0FFA  0820               	movf	_timer3ReloadVal,w	;volatile
 11714  0FFB  00F0               	movwf	i1TMR3_WriteTimer@timerVal
 11715  0FFC  3187  276C  318F   	fcall	i1_TMR3_WriteTimer
 11716  0FFF                     i1l965:
 11717  0FFF  0008               	return
 11718  1000                     __end_ofi1_TMR3_Reload:
 11719                           
 11720                           	psect	text42
 11721  076C                     __ptext42:	
 11722 ;; *************** function i1_TMR3_WriteTimer *****************
 11723 ;; Defined at:
 11724 ;;		line 79 in file "tmr3.c"
 11725 ;; Parameters:    Size  Location     Type
 11726 ;;  timerVal        2    0[COMMON] unsigned short 
 11727 ;; Auto vars:     Size  Location     Type
 11728 ;;		None
 11729 ;; Return value:  Size  Location     Type
 11730 ;;                  1    wreg      void 
 11731 ;; Registers used:
 11732 ;;		wreg, status,2
 11733 ;; Tracked objects:
 11734 ;;		On entry : 0/0
 11735 ;;		On exit  : 0/0
 11736 ;;		Unchanged: 0/0
 11737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11741 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11742 ;;Total ram usage:        2 bytes
 11743 ;; Hardware stack levels used: 1
 11744 ;; This function calls:
 11745 ;;		Nothing
 11746 ;; This function is called by:
 11747 ;;		i1_TMR3_Reload
 11748 ;; This function uses a non-reentrant model
 11749 ;;
 11750                           
 11751  076C                     i1_TMR3_WriteTimer:	
 11752                           ;psect for function i1_TMR3_WriteTimer
 11753                           
 11754  076C                     i1l3091:	
 11755                           ;incstack = 0
 11756                           ; Regs used in i1_TMR3_WriteTimer: [wreg+status,2]
 11757                           
 11758                           
 11759                           ;tmr3.c: 79: void TMR3_WriteTimer(uint16_t timerVal);tmr3.c: 80: {;tmr3.c: 81:     if (T
      +                          3CONbits.T3SYNC == 1)
 11760  076C  0028               	movlb	8	; select bank8
 11761  076D  1D13               	btfss	19,2	;volatile
 11762  076E  2F70               	goto	u56_21
 11763  076F  2F71               	goto	u56_20
 11764  0770                     u56_21:
 11765  0770  2F78               	goto	i1l3101
 11766  0771                     u56_20:
 11767  0771                     i1l3093:
 11768                           
 11769                           ;tmr3.c: 82:     {;tmr3.c: 84:         T3CONbits.TMR3ON = 0;
 11770  0771  1013               	bcf	19,0	;volatile
 11771  0772                     i1l3095:
 11772                           
 11773                           ;tmr3.c: 87:         TMR3H = (uint8_t)(timerVal >> 8);
 11774  0772  0871               	movf	i1TMR3_WriteTimer@timerVal+1,w
 11775  0773  0092               	movwf	18	;volatile
 11776  0774                     i1l3097:
 11777                           
 11778                           ;tmr3.c: 88:         TMR3L = (uint8_t)timerVal;
 11779  0774  0870               	movf	i1TMR3_WriteTimer@timerVal,w
 11780  0775  0091               	movwf	17	;volatile
 11781  0776                     i1l3099:
 11782                           
 11783                           ;tmr3.c: 91:         T3CONbits.TMR3ON =1;
 11784  0776  1413               	bsf	19,0	;volatile
 11785                           
 11786                           ;tmr3.c: 92:     }
 11787  0777  2F7C               	goto	i1l962
 11788  0778                     i1l3101:
 11789                           
 11790                           ;tmr3.c: 94:     {;tmr3.c: 96:         TMR3H = (uint8_t)(timerVal >> 8);
 11791  0778  0871               	movf	i1TMR3_WriteTimer@timerVal+1,w
 11792  0779  0092               	movwf	18	;volatile
 11793  077A                     i1l3103:
 11794                           
 11795                           ;tmr3.c: 97:         TMR3L = (uint8_t)timerVal;
 11796  077A  0870               	movf	i1TMR3_WriteTimer@timerVal,w
 11797  077B  0091               	movwf	17	;volatile
 11798  077C                     i1l962:
 11799  077C  0008               	return
 11800  077D                     __end_ofi1_TMR3_WriteTimer:
 11801                           
 11802                           	psect	text43
 11803  07D7                     __ptext43:	
 11804 ;; *************** function _TMR1_ISR *****************
 11805 ;; Defined at:
 11806 ;;		line 111 in file "tmr1.c"
 11807 ;; Parameters:    Size  Location     Type
 11808 ;;		None
 11809 ;; Auto vars:     Size  Location     Type
 11810 ;;		None
 11811 ;; Return value:  Size  Location     Type
 11812 ;;                  1    wreg      void 
 11813 ;; Registers used:
 11814 ;;		wreg, status,2, status,0, pclath, cstack
 11815 ;; Tracked objects:
 11816 ;;		On entry : 0/0
 11817 ;;		On exit  : 0/0
 11818 ;;		Unchanged: 0/0
 11819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11824 ;;Total ram usage:        0 bytes
 11825 ;; Hardware stack levels used: 1
 11826 ;; Hardware stack levels required when called: 1
 11827 ;; This function calls:
 11828 ;;		_TMR1_WriteTimer
 11829 ;; This function is called by:
 11830 ;;		_INTERRUPT_InterruptManager
 11831 ;; This function uses a non-reentrant model
 11832 ;;
 11833                           
 11834  07D7                     _TMR1_ISR:	
 11835                           ;psect for function _TMR1_ISR
 11836                           
 11837  07D7                     i1l3439:	
 11838                           ;incstack = 0
 11839                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 11840                           
 11841                           
 11842                           ;tmr1.c: 114:     PIR1bits.TMR1IF = 0;
 11843  07D7  0020               	movlb	0	; select bank0
 11844  07D8  1011               	bcf	17,0	;volatile
 11845  07D9                     i1l3441:
 11846                           
 11847                           ;tmr1.c: 115:     TMR1_WriteTimer(timer1ReloadVal);
 11848  07D9  0831               	movf	_timer1ReloadVal+1,w	;volatile
 11849  07DA  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 11850  07DB  0830               	movf	_timer1ReloadVal,w	;volatile
 11851  07DC  00F0               	movwf	TMR1_WriteTimer@timerVal
 11852  07DD  3187  277D  3187   	fcall	_TMR1_WriteTimer
 11853  07E0                     i1l481:
 11854  07E0  0008               	return
 11855  07E1                     __end_of_TMR1_ISR:
 11856                           
 11857                           	psect	text44
 11858  077D                     __ptext44:	
 11859 ;; *************** function _TMR1_WriteTimer *****************
 11860 ;; Defined at:
 11861 ;;		line 80 in file "tmr1.c"
 11862 ;; Parameters:    Size  Location     Type
 11863 ;;  timerVal        2    0[COMMON] unsigned short 
 11864 ;; Auto vars:     Size  Location     Type
 11865 ;;		None
 11866 ;; Return value:  Size  Location     Type
 11867 ;;                  1    wreg      void 
 11868 ;; Registers used:
 11869 ;;		wreg, status,2
 11870 ;; Tracked objects:
 11871 ;;		On entry : 0/0
 11872 ;;		On exit  : 0/0
 11873 ;;		Unchanged: 0/0
 11874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11878 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11879 ;;Total ram usage:        2 bytes
 11880 ;; Hardware stack levels used: 1
 11881 ;; This function calls:
 11882 ;;		Nothing
 11883 ;; This function is called by:
 11884 ;;		_TMR1_ISR
 11885 ;;		_TMR1_Reload
 11886 ;; This function uses a non-reentrant model
 11887 ;;
 11888                           
 11889  077D                     _TMR1_WriteTimer:	
 11890                           ;psect for function _TMR1_WriteTimer
 11891                           
 11892  077D                     i1l3325:	
 11893                           ;incstack = 0
 11894                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 11895                           
 11896                           
 11897                           ;tmr1.c: 80: void TMR1_WriteTimer(uint16_t timerVal);tmr1.c: 81: {;tmr1.c: 82:     if (T
      +                          1CONbits.T1SYNC == 1)
 11898  077D  0020               	movlb	0	; select bank0
 11899  077E  1D1B               	btfss	27,2	;volatile
 11900  077F  2F81               	goto	u57_21
 11901  0780  2F82               	goto	u57_20
 11902  0781                     u57_21:
 11903  0781  2F89               	goto	i1l3335
 11904  0782                     u57_20:
 11905  0782                     i1l3327:
 11906                           
 11907                           ;tmr1.c: 83:     {;tmr1.c: 85:         T1CONbits.TMR1ON = 0;
 11908  0782  101B               	bcf	27,0	;volatile
 11909  0783                     i1l3329:
 11910                           
 11911                           ;tmr1.c: 88:         TMR1H = (uint8_t)(timerVal >> 8);
 11912  0783  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11913  0784  009A               	movwf	26	;volatile
 11914  0785                     i1l3331:
 11915                           
 11916                           ;tmr1.c: 89:         TMR1L = (uint8_t)timerVal;
 11917  0785  0870               	movf	TMR1_WriteTimer@timerVal,w
 11918  0786  0099               	movwf	25	;volatile
 11919  0787                     i1l3333:
 11920                           
 11921                           ;tmr1.c: 92:         T1CONbits.TMR1ON =1;
 11922  0787  141B               	bsf	27,0	;volatile
 11923                           
 11924                           ;tmr1.c: 93:     }
 11925  0788  2F8D               	goto	i1l475
 11926  0789                     i1l3335:
 11927                           
 11928                           ;tmr1.c: 95:     {;tmr1.c: 97:         TMR1H = (uint8_t)(timerVal >> 8);
 11929  0789  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11930  078A  009A               	movwf	26	;volatile
 11931  078B                     i1l3337:
 11932                           
 11933                           ;tmr1.c: 98:         TMR1L = (uint8_t)timerVal;
 11934  078B  0870               	movf	TMR1_WriteTimer@timerVal,w
 11935  078C  0099               	movwf	25	;volatile
 11936  078D                     i1l475:
 11937  078D  0008               	return
 11938  078E                     __end_of_TMR1_WriteTimer:
 11939                           
 11940                           	psect	text45
 11941  0738                     __ptext45:	
 11942 ;; *************** function _TMR0_ISR *****************
 11943 ;; Defined at:
 11944 ;;		line 90 in file "tmr0.c"
 11945 ;; Parameters:    Size  Location     Type
 11946 ;;		None
 11947 ;; Auto vars:     Size  Location     Type
 11948 ;;		None
 11949 ;; Return value:  Size  Location     Type
 11950 ;;                  1    wreg      void 
 11951 ;; Registers used:
 11952 ;;		wreg, status,2, status,0, pclath, cstack
 11953 ;; Tracked objects:
 11954 ;;		On entry : 0/0
 11955 ;;		On exit  : 0/0
 11956 ;;		Unchanged: 0/0
 11957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11960 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11961 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11962 ;;Total ram usage:        1 bytes
 11963 ;; Hardware stack levels used: 1
 11964 ;; Hardware stack levels required when called: 2
 11965 ;; This function calls:
 11966 ;;		_TMR0_CallBack
 11967 ;; This function is called by:
 11968 ;;		_INTERRUPT_InterruptManager
 11969 ;; This function uses a non-reentrant model
 11970 ;;
 11971                           
 11972  0738                     _TMR0_ISR:	
 11973                           ;psect for function _TMR0_ISR
 11974                           
 11975  0738                     i1l3409:	
 11976                           ;incstack = 0
 11977                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 11978                           
 11979                           
 11980                           ;tmr0.c: 93:     PIR0bits.TMR0IF = 0;
 11981  0738  0020               	movlb	0	; select bank0
 11982  0739  1290               	bcf	16,5	;volatile
 11983  073A                     i1l3411:
 11984                           
 11985                           ;tmr0.c: 95:     if (++CountCallBack >= 4)
 11986  073A  3001               	movlw	1
 11987  073B  00F0               	movwf	??_TMR0_ISR
 11988  073C  0870               	movf	??_TMR0_ISR,w
 11989  073D  07D0               	addwf	_CountCallBack,f	;volatile
 11990  073E  3004               	movlw	4
 11991  073F  0250               	subwf	_CountCallBack,w	;volatile
 11992  0740  1C03               	skipc
 11993  0741  2F43               	goto	u68_21
 11994  0742  2F44               	goto	u68_20
 11995  0743                     u68_21:
 11996  0743  2F49               	goto	i1l292
 11997  0744                     u68_20:
 11998  0744                     i1l3413:
 11999                           
 12000                           ;tmr0.c: 96:     {;tmr0.c: 98:         TMR0_CallBack();
 12001  0744  318F  27E1  3187   	fcall	_TMR0_CallBack
 12002  0747                     i1l3415:
 12003                           
 12004                           ;tmr0.c: 101:         CountCallBack = 0;
 12005  0747  0020               	movlb	0	; select bank0
 12006  0748  01D0               	clrf	_CountCallBack	;volatile
 12007  0749                     i1l292:
 12008  0749  0008               	return
 12009  074A                     __end_of_TMR0_ISR:
 12010                           
 12011                           	psect	text46
 12012  0FE1                     __ptext46:	
 12013 ;; *************** function _TMR0_CallBack *****************
 12014 ;; Defined at:
 12015 ;;		line 109 in file "tmr0.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;		None
 12018 ;; Auto vars:     Size  Location     Type
 12019 ;;		None
 12020 ;; Return value:  Size  Location     Type
 12021 ;;                  1    wreg      void 
 12022 ;; Registers used:
 12023 ;;		wreg, status,2, status,0, pclath, cstack
 12024 ;; Tracked objects:
 12025 ;;		On entry : 0/0
 12026 ;;		On exit  : 0/0
 12027 ;;		Unchanged: 0/0
 12028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;Total ram usage:        0 bytes
 12034 ;; Hardware stack levels used: 1
 12035 ;; Hardware stack levels required when called: 1
 12036 ;; This function calls:
 12037 ;;		_FRT_IncMicros
 12038 ;;		_FRT_IncMillis
 12039 ;; This function is called by:
 12040 ;;		_TMR0_ISR
 12041 ;; This function uses a non-reentrant model
 12042 ;;
 12043                           
 12044  0FE1                     _TMR0_CallBack:	
 12045                           ;psect for function _TMR0_CallBack
 12046                           
 12047  0FE1                     i1l3275:	
 12048                           ;incstack = 0
 12049                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 12050                           
 12051                           
 12052                           ;tmr0.c: 111:     FRT_IncMillis();
 12053  0FE1  3187  27E1  318F   	fcall	_FRT_IncMillis
 12054                           
 12055                           ;tmr0.c: 112:     FRT_IncMicros();
 12056  0FE4  3187  27EB  318F   	fcall	_FRT_IncMicros
 12057  0FE7                     i1l295:
 12058  0FE7  0008               	return
 12059  0FE8                     __end_of_TMR0_CallBack:
 12060                           
 12061                           	psect	text47
 12062  07E1                     __ptext47:	
 12063 ;; *************** function _FRT_IncMillis *****************
 12064 ;; Defined at:
 12065 ;;		line 38 in file "FRT.c"
 12066 ;; Parameters:    Size  Location     Type
 12067 ;;		None
 12068 ;; Auto vars:     Size  Location     Type
 12069 ;;		None
 12070 ;; Return value:  Size  Location     Type
 12071 ;;                  1    wreg      void 
 12072 ;; Registers used:
 12073 ;;		wreg
 12074 ;; Tracked objects:
 12075 ;;		On entry : 0/0
 12076 ;;		On exit  : 0/0
 12077 ;;		Unchanged: 0/0
 12078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12083 ;;Total ram usage:        0 bytes
 12084 ;; Hardware stack levels used: 1
 12085 ;; This function calls:
 12086 ;;		Nothing
 12087 ;; This function is called by:
 12088 ;;		_TMR0_CallBack
 12089 ;; This function uses a non-reentrant model
 12090 ;;
 12091                           
 12092  07E1                     _FRT_IncMillis:	
 12093                           ;psect for function _FRT_IncMillis
 12094                           
 12095  07E1                     i1l3067:	
 12096                           ;incstack = 0
 12097                           ; Regs used in _FRT_IncMillis: [wreg]
 12098                           
 12099                           
 12100                           ;FRT.c: 39:     millis ++;
 12101  07E1  3001               	movlw	1
 12102  07E2  0021               	movlb	1	; select bank1
 12103  07E3  07CE               	addwf	_millis^(0+128),f
 12104  07E4  3000               	movlw	0
 12105  07E5  3DCF               	addwfc	(_millis+1)^(0+128),f
 12106  07E6  3000               	movlw	0
 12107  07E7  3DD0               	addwfc	(_millis+2)^(0+128),f
 12108  07E8  3000               	movlw	0
 12109  07E9  3DD1               	addwfc	(_millis+3)^(0+128),f
 12110  07EA                     i1l769:
 12111  07EA  0008               	return
 12112  07EB                     __end_of_FRT_IncMillis:
 12113                           
 12114                           	psect	text48
 12115  07EB                     __ptext48:	
 12116 ;; *************** function _FRT_IncMicros *****************
 12117 ;; Defined at:
 12118 ;;		line 45 in file "FRT.c"
 12119 ;; Parameters:    Size  Location     Type
 12120 ;;		None
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;		None
 12123 ;; Return value:  Size  Location     Type
 12124 ;;                  1    wreg      void 
 12125 ;; Registers used:
 12126 ;;		wreg
 12127 ;; Tracked objects:
 12128 ;;		On entry : 0/0
 12129 ;;		On exit  : 0/0
 12130 ;;		Unchanged: 0/0
 12131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12136 ;;Total ram usage:        0 bytes
 12137 ;; Hardware stack levels used: 1
 12138 ;; This function calls:
 12139 ;;		Nothing
 12140 ;; This function is called by:
 12141 ;;		_TMR0_CallBack
 12142 ;; This function uses a non-reentrant model
 12143 ;;
 12144                           
 12145  07EB                     _FRT_IncMicros:	
 12146                           ;psect for function _FRT_IncMicros
 12147                           
 12148  07EB                     i1l3071:	
 12149                           ;incstack = 0
 12150                           ; Regs used in _FRT_IncMicros: [wreg]
 12151                           
 12152                           
 12153                           ;FRT.c: 46:     micros += 1000;
 12154  07EB  30E8               	movlw	232
 12155  07EC  0021               	movlb	1	; select bank1
 12156  07ED  07CA               	addwf	_micros@FRT$F1520^(0+128),f
 12157  07EE  3003               	movlw	3
 12158  07EF  3DCB               	addwfc	(_micros@FRT$F1520+1)^(0+128),f
 12159  07F0  3000               	movlw	0
 12160  07F1  3DCC               	addwfc	(_micros@FRT$F1520+2)^(0+128),f
 12161  07F2  3000               	movlw	0
 12162  07F3  3DCD               	addwfc	(_micros@FRT$F1520+3)^(0+128),f
 12163  07F4                     i1l772:
 12164  07F4  0008               	return
 12165  07F5                     __end_of_FRT_IncMicros:
 12166                           
 12167                           	psect	text49
 12168  0617                     __ptext49:	
 12169 ;; *************** function _EUSART_Transmit_ISR *****************
 12170 ;; Defined at:
 12171 ;;		line 181 in file "eusart.c"
 12172 ;; Parameters:    Size  Location     Type
 12173 ;;		None
 12174 ;; Auto vars:     Size  Location     Type
 12175 ;;		None
 12176 ;; Return value:  Size  Location     Type
 12177 ;;                  1    wreg      void 
 12178 ;; Registers used:
 12179 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12180 ;; Tracked objects:
 12181 ;;		On entry : 0/0
 12182 ;;		On exit  : 0/0
 12183 ;;		Unchanged: 0/0
 12184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12187 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12188 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12189 ;;Total ram usage:        1 bytes
 12190 ;; Hardware stack levels used: 1
 12191 ;; This function calls:
 12192 ;;		Nothing
 12193 ;; This function is called by:
 12194 ;;		_EUSART_Initialize
 12195 ;;		_INTERRUPT_InterruptManager
 12196 ;; This function uses a non-reentrant model
 12197 ;;
 12198                           
 12199  0617                     _EUSART_Transmit_ISR:	
 12200                           ;psect for function _EUSART_Transmit_ISR
 12201                           
 12202  0617                     i1l3483:	
 12203                           ;incstack = 0
 12204                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 12205                           
 12206                           
 12207                           ;eusart.c: 185:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 12208  0617  3008               	movlw	8
 12209  0618  0020               	movlb	0	; select bank0
 12210  0619  024A               	subwf	_eusartTxBufferRemaining,w	;volatile
 12211  061A  1803               	skipnc
 12212  061B  2E1D               	goto	u74_21
 12213  061C  2E1E               	goto	u74_20
 12214  061D                     u74_21:
 12215  061D  2E36               	goto	i1l593
 12216  061E                     u74_20:
 12217  061E                     i1l3485:
 12218                           
 12219                           ;eusart.c: 186:     {;eusart.c: 187:         TX1REG = eusartTxBuffer[eusartTxTail++];
 12220  061E  084B               	movf	_eusartTxTail,w
 12221  061F  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
 12222  0620  0086               	movwf	6
 12223  0621  0187               	clrf	7
 12224  0622  0801               	movf	1,w
 12225  0623  0023               	movlb	3	; select bank3
 12226  0624  009A               	movwf	26	;volatile
 12227  0625                     i1l3487:
 12228  0625  3001               	movlw	1
 12229  0626  00F0               	movwf	??_EUSART_Transmit_ISR
 12230  0627  0870               	movf	??_EUSART_Transmit_ISR,w
 12231  0628  0020               	movlb	0	; select bank0
 12232  0629  07CB               	addwf	_eusartTxTail,f	;volatile
 12233  062A                     i1l3489:
 12234                           
 12235                           ;eusart.c: 188:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 12236  062A  3008               	movlw	8
 12237  062B  024B               	subwf	_eusartTxTail,w	;volatile
 12238  062C  1C03               	skipc
 12239  062D  2E2F               	goto	u75_21
 12240  062E  2E30               	goto	u75_20
 12241  062F                     u75_21:
 12242  062F  2E31               	goto	i1l3493
 12243  0630                     u75_20:
 12244  0630                     i1l3491:
 12245                           
 12246                           ;eusart.c: 189:         {;eusart.c: 190:             eusartTxTail = 0;
 12247  0630  01CB               	clrf	_eusartTxTail	;volatile
 12248  0631                     i1l3493:
 12249                           
 12250                           ;eusart.c: 192:         eusartTxBufferRemaining++;
 12251  0631  3001               	movlw	1
 12252  0632  00F0               	movwf	??_EUSART_Transmit_ISR
 12253  0633  0870               	movf	??_EUSART_Transmit_ISR,w
 12254  0634  07CA               	addwf	_eusartTxBufferRemaining,f	;volatile
 12255                           
 12256                           ;eusart.c: 193:     }
 12257  0635  2E38               	goto	i1l596
 12258  0636                     i1l593:	
 12259                           ;eusart.c: 194:     else
 12260                           
 12261                           
 12262                           ;eusart.c: 195:     {;eusart.c: 196:         PIE1bits.TXIE = 0;
 12263  0636  0021               	movlb	1	; select bank1
 12264  0637  1211               	bcf	17,4	;volatile
 12265  0638                     i1l596:
 12266  0638  0008               	return
 12267  0639                     __end_of_EUSART_Transmit_ISR:
 12268                           
 12269                           	psect	text50
 12270  0580                     __ptext50:	
 12271 ;; *************** function _EUSART_Receive_ISR *****************
 12272 ;; Defined at:
 12273 ;;		line 202 in file "eusart.c"
 12274 ;; Parameters:    Size  Location     Type
 12275 ;;		None
 12276 ;; Auto vars:     Size  Location     Type
 12277 ;;		None
 12278 ;; Return value:  Size  Location     Type
 12279 ;;                  1    wreg      void 
 12280 ;; Registers used:
 12281 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12282 ;; Tracked objects:
 12283 ;;		On entry : 0/0
 12284 ;;		On exit  : 0/0
 12285 ;;		Unchanged: 0/0
 12286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12291 ;;Total ram usage:        0 bytes
 12292 ;; Hardware stack levels used: 1
 12293 ;; Hardware stack levels required when called: 2
 12294 ;; This function calls:
 12295 ;;		Absolute function
 12296 ;;		_EUSART_DefaultErrorHandler
 12297 ;;		_EUSART_DefaultFramingErrorHandler
 12298 ;;		_EUSART_DefaultOverrunErrorHandler
 12299 ;;		_EUSART_RxDataHandler
 12300 ;; This function is called by:
 12301 ;;		_EUSART_Initialize
 12302 ;;		_INTERRUPT_InterruptManager
 12303 ;; This function uses a non-reentrant model
 12304 ;;
 12305                           
 12306  0580                     _EUSART_Receive_ISR:	
 12307                           ;psect for function _EUSART_Receive_ISR
 12308                           
 12309  0580                     i1l3495:	
 12310                           ;incstack = 0
 12311                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12312                           
 12313                           
 12314                           ;eusart.c: 205:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 12315  0580  0020               	movlb	0	; select bank0
 12316  0581  0849               	movf	_eusartRxHead,w	;volatile
 12317  0582  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 12318  0583  0086               	movwf	6
 12319  0584  0187               	clrf	7
 12320  0585  0181               	clrf	1
 12321  0586                     i1l3497:
 12322                           
 12323                           ;eusart.c: 207:     if(RC1STAbits.FERR){
 12324  0586  0023               	movlb	3	; select bank3
 12325  0587  1D1D               	btfss	29,2	;volatile
 12326  0588  2D8A               	goto	u76_21
 12327  0589  2D8B               	goto	u76_20
 12328  058A                     u76_21:
 12329  058A  2D96               	goto	i1l3503
 12330  058B                     u76_20:
 12331  058B                     i1l3499:
 12332                           
 12333                           ;eusart.c: 208:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 12334  058B  0020               	movlb	0	; select bank0
 12335  058C  0849               	movf	_eusartRxHead,w	;volatile
 12336  058D  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 12337  058E  0086               	movwf	6
 12338  058F  0187               	clrf	7
 12339  0590  1481               	bsf	1,1
 12340  0591                     i1l3501:
 12341                           
 12342                           ;eusart.c: 209:         EUSART_FramingErrorHandler();
 12343  0591  082B               	movf	_EUSART_FramingErrorHandler+1,w
 12344  0592  008A               	movwf	10
 12345  0593  082A               	movf	_EUSART_FramingErrorHandler,w
 12346  0594  000A               	callw
 12347  0595  3185               	pagesel	$
 12348  0596                     i1l3503:
 12349                           
 12350                           ;eusart.c: 212:     if(RC1STAbits.OERR){
 12351  0596  0023               	movlb	3	; select bank3
 12352  0597  1C9D               	btfss	29,1	;volatile
 12353  0598  2D9A               	goto	u77_21
 12354  0599  2D9B               	goto	u77_20
 12355  059A                     u77_21:
 12356  059A  2DA6               	goto	i1l3509
 12357  059B                     u77_20:
 12358  059B                     i1l3505:
 12359                           
 12360                           ;eusart.c: 213:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 12361  059B  0020               	movlb	0	; select bank0
 12362  059C  0849               	movf	_eusartRxHead,w	;volatile
 12363  059D  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 12364  059E  0086               	movwf	6
 12365  059F  0187               	clrf	7
 12366  05A0  1501               	bsf	1,2
 12367  05A1                     i1l3507:
 12368                           
 12369                           ;eusart.c: 214:         EUSART_OverrunErrorHandler();
 12370  05A1  0829               	movf	_EUSART_OverrunErrorHandler+1,w
 12371  05A2  008A               	movwf	10
 12372  05A3  0828               	movf	_EUSART_OverrunErrorHandler,w
 12373  05A4  000A               	callw
 12374  05A5  3185               	pagesel	$
 12375  05A6                     i1l3509:
 12376                           
 12377                           ;eusart.c: 217:     if(eusartRxStatusBuffer[eusartRxHead].status){
 12378  05A6  0020               	movlb	0	; select bank0
 12379  05A7  0849               	movf	_eusartRxHead,w	;volatile
 12380  05A8  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 12381  05A9  0086               	movwf	6
 12382  05AA  0187               	clrf	7
 12383  05AB  0801               	movf	1,w
 12384  05AC  1903               	btfsc	3,2
 12385  05AD  2DAF               	goto	u78_21
 12386  05AE  2DB0               	goto	u78_20
 12387  05AF                     u78_21:
 12388  05AF  2DB6               	goto	i1l3513
 12389  05B0                     u78_20:
 12390  05B0                     i1l3511:
 12391                           
 12392                           ;eusart.c: 218:         EUSART_ErrorHandler();
 12393  05B0  0827               	movf	_EUSART_ErrorHandler+1,w
 12394  05B1  008A               	movwf	10
 12395  05B2  0826               	movf	_EUSART_ErrorHandler,w
 12396  05B3  000A               	callw
 12397  05B4  3185               	pagesel	$
 12398                           
 12399                           ;eusart.c: 219:     } else {
 12400  05B5  2DB9               	goto	i1l603
 12401  05B6                     i1l3513:
 12402                           
 12403                           ;eusart.c: 220:         EUSART_RxDataHandler();
 12404  05B6  3186  2653  3185   	fcall	_EUSART_RxDataHandler
 12405  05B9                     i1l603:
 12406  05B9  0008               	return
 12407  05BA                     __end_of_EUSART_Receive_ISR:
 12408                           
 12409                           	psect	text51
 12410  0F93                     __ptext51:	
 12411 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 12412 ;; Defined at:
 12413 ;;		line 244 in file "eusart.c"
 12414 ;; Parameters:    Size  Location     Type
 12415 ;;		None
 12416 ;; Auto vars:     Size  Location     Type
 12417 ;;		None
 12418 ;; Return value:  Size  Location     Type
 12419 ;;                  1    wreg      void 
 12420 ;; Registers used:
 12421 ;;		None
 12422 ;; Tracked objects:
 12423 ;;		On entry : 0/0
 12424 ;;		On exit  : 0/0
 12425 ;;		Unchanged: 0/0
 12426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12431 ;;Total ram usage:        0 bytes
 12432 ;; Hardware stack levels used: 1
 12433 ;; This function calls:
 12434 ;;		Nothing
 12435 ;; This function is called by:
 12436 ;;		_EUSART_Initialize
 12437 ;;		_EUSART_Receive_ISR
 12438 ;; This function uses a non-reentrant model
 12439 ;;
 12440                           
 12441  0F93                     _EUSART_DefaultOverrunErrorHandler:	
 12442                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 12443                           
 12444  0F93                     i1l3339:	
 12445                           ;incstack = 0
 12446                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 12447                           
 12448                           
 12449                           ;eusart.c: 247:     RC1STAbits.CREN = 0;
 12450  0F93  0023               	movlb	3	; select bank3
 12451  0F94  121D               	bcf	29,4	;volatile
 12452                           
 12453                           ;eusart.c: 248:     RC1STAbits.CREN = 1;
 12454  0F95  161D               	bsf	29,4	;volatile
 12455  0F96                     i1l613:
 12456  0F96  0008               	return
 12457  0F97                     __end_of_EUSART_DefaultOverrunErrorHandler:
 12458                           
 12459                           	psect	text52
 12460  07FE                     __ptext52:	
 12461 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 12462 ;; Defined at:
 12463 ;;		line 240 in file "eusart.c"
 12464 ;; Parameters:    Size  Location     Type
 12465 ;;		None
 12466 ;; Auto vars:     Size  Location     Type
 12467 ;;		None
 12468 ;; Return value:  Size  Location     Type
 12469 ;;                  1    wreg      void 
 12470 ;; Registers used:
 12471 ;;		None
 12472 ;; Tracked objects:
 12473 ;;		On entry : 0/0
 12474 ;;		On exit  : 0/0
 12475 ;;		Unchanged: 0/0
 12476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12481 ;;Total ram usage:        0 bytes
 12482 ;; Hardware stack levels used: 1
 12483 ;; This function calls:
 12484 ;;		Nothing
 12485 ;; This function is called by:
 12486 ;;		_EUSART_Initialize
 12487 ;;		_EUSART_Receive_ISR
 12488 ;; This function uses a non-reentrant model
 12489 ;;
 12490                           
 12491  07FE                     _EUSART_DefaultFramingErrorHandler:	
 12492                           ;psect for function _EUSART_DefaultFramingErrorHandler
 12493                           
 12494  07FE                     i1l610:	
 12495                           ;incstack = 0
 12496                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 12497                           
 12498  07FE  0008               	return
 12499  07FF                     __end_of_EUSART_DefaultFramingErrorHandler:
 12500                           
 12501                           	psect	text53
 12502  0F8F                     __ptext53:	
 12503 ;; *************** function _EUSART_DefaultErrorHandler *****************
 12504 ;; Defined at:
 12505 ;;		line 254 in file "eusart.c"
 12506 ;; Parameters:    Size  Location     Type
 12507 ;;		None
 12508 ;; Auto vars:     Size  Location     Type
 12509 ;;		None
 12510 ;; Return value:  Size  Location     Type
 12511 ;;                  1    wreg      void 
 12512 ;; Registers used:
 12513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12514 ;; Tracked objects:
 12515 ;;		On entry : 0/0
 12516 ;;		On exit  : 0/0
 12517 ;;		Unchanged: 0/0
 12518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12523 ;;Total ram usage:        0 bytes
 12524 ;; Hardware stack levels used: 1
 12525 ;; Hardware stack levels required when called: 1
 12526 ;; This function calls:
 12527 ;;		_EUSART_RxDataHandler
 12528 ;; This function is called by:
 12529 ;;		_EUSART_Initialize
 12530 ;;		_EUSART_Receive_ISR
 12531 ;; This function uses a non-reentrant model
 12532 ;;
 12533                           
 12534  0F8F                     _EUSART_DefaultErrorHandler:	
 12535                           ;psect for function _EUSART_DefaultErrorHandler
 12536                           
 12537  0F8F                     i1l3341:	
 12538                           ;incstack = 0
 12539                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12540                           
 12541                           
 12542                           ;eusart.c: 255:     EUSART_RxDataHandler();
 12543  0F8F  3186  2653  318F   	fcall	_EUSART_RxDataHandler
 12544  0F92                     i1l616:
 12545  0F92  0008               	return
 12546  0F93                     __end_of_EUSART_DefaultErrorHandler:
 12547                           
 12548                           	psect	text54
 12549  0653                     __ptext54:	
 12550 ;; *************** function _EUSART_RxDataHandler *****************
 12551 ;; Defined at:
 12552 ;;		line 228 in file "eusart.c"
 12553 ;; Parameters:    Size  Location     Type
 12554 ;;		None
 12555 ;; Auto vars:     Size  Location     Type
 12556 ;;		None
 12557 ;; Return value:  Size  Location     Type
 12558 ;;                  1    wreg      void 
 12559 ;; Registers used:
 12560 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12561 ;; Tracked objects:
 12562 ;;		On entry : 0/0
 12563 ;;		On exit  : 0/0
 12564 ;;		Unchanged: 0/0
 12565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12569 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12570 ;;Total ram usage:        1 bytes
 12571 ;; Hardware stack levels used: 1
 12572 ;; This function calls:
 12573 ;;		Nothing
 12574 ;; This function is called by:
 12575 ;;		_EUSART_Receive_ISR
 12576 ;;		_EUSART_DefaultErrorHandler
 12577 ;; This function uses a non-reentrant model
 12578 ;;
 12579                           
 12580  0653                     _EUSART_RxDataHandler:	
 12581                           ;psect for function _EUSART_RxDataHandler
 12582                           
 12583  0653                     i1l3075:	
 12584                           ;incstack = 0
 12585                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12586                           
 12587                           
 12588                           ;eusart.c: 230:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 12589  0653  0023               	movlb	3	; select bank3
 12590  0654  0819               	movf	25,w	;volatile
 12591  0655  00F0               	movwf	??_EUSART_RxDataHandler
 12592  0656  0020               	movlb	0	; select bank0
 12593  0657  0849               	movf	_eusartRxHead,w
 12594  0658  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 12595  0659  0086               	movwf	6
 12596  065A  0187               	clrf	7
 12597  065B  0870               	movf	??_EUSART_RxDataHandler,w
 12598  065C  0081               	movwf	1
 12599  065D                     i1l3077:
 12600  065D  3001               	movlw	1
 12601  065E  00F0               	movwf	??_EUSART_RxDataHandler
 12602  065F  0870               	movf	??_EUSART_RxDataHandler,w
 12603  0660  07C9               	addwf	_eusartRxHead,f	;volatile
 12604  0661                     i1l3079:
 12605                           
 12606                           ;eusart.c: 231:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 12607  0661  3008               	movlw	8
 12608  0662  0249               	subwf	_eusartRxHead,w	;volatile
 12609  0663  1C03               	skipc
 12610  0664  2E66               	goto	u55_21
 12611  0665  2E67               	goto	u55_20
 12612  0666                     u55_21:
 12613  0666  2E68               	goto	i1l3083
 12614  0667                     u55_20:
 12615  0667                     i1l3081:
 12616                           
 12617                           ;eusart.c: 232:     {;eusart.c: 233:         eusartRxHead = 0;
 12618  0667  01C9               	clrf	_eusartRxHead	;volatile
 12619  0668                     i1l3083:
 12620                           
 12621                           ;eusart.c: 235:     eusartRxCount++;
 12622  0668  3001               	movlw	1
 12623  0669  00F0               	movwf	??_EUSART_RxDataHandler
 12624  066A  0870               	movf	??_EUSART_RxDataHandler,w
 12625  066B  07C8               	addwf	_eusartRxCount,f	;volatile
 12626  066C                     i1l607:
 12627  066C  0008               	return
 12628  066D                     __end_of_EUSART_RxDataHandler:
 12629                           
 12630                           	psect	text55
 12631  0F86                     __ptext55:	
 12632 ;; *************** function _CCP4_CompareISR *****************
 12633 ;; Defined at:
 12634 ;;		line 60 in file "ccp4.c"
 12635 ;; Parameters:    Size  Location     Type
 12636 ;;		None
 12637 ;; Auto vars:     Size  Location     Type
 12638 ;;		None
 12639 ;; Return value:  Size  Location     Type
 12640 ;;                  1    wreg      void 
 12641 ;; Registers used:
 12642 ;;		None
 12643 ;; Tracked objects:
 12644 ;;		On entry : 0/0
 12645 ;;		On exit  : 0/0
 12646 ;;		Unchanged: 0/0
 12647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12652 ;;Total ram usage:        0 bytes
 12653 ;; Hardware stack levels used: 1
 12654 ;; This function calls:
 12655 ;;		Nothing
 12656 ;; This function is called by:
 12657 ;;		_INTERRUPT_InterruptManager
 12658 ;; This function uses a non-reentrant model
 12659 ;;
 12660                           
 12661  0F86                     _CCP4_CompareISR:	
 12662                           ;psect for function _CCP4_CompareISR
 12663                           
 12664  0F86                     i1l3515:	
 12665                           ;incstack = 0
 12666                           ; Regs used in _CCP4_CompareISR: []
 12667                           
 12668                           
 12669                           ;ccp4.c: 63:     PIR4bits.CCP4IF = 0;
 12670  0F86  0020               	movlb	0	; select bank0
 12671  0F87  1194               	bcf	20,3	;volatile
 12672  0F88                     i1l881:
 12673  0F88  0008               	return
 12674  0F89                     __end_of_CCP4_CompareISR:
 12675                           
 12676                           	psect	text56
 12677  06E4                     __ptext56:	
 12678 ;; *************** function _CCP3_CaptureISR *****************
 12679 ;; Defined at:
 12680 ;;		line 81 in file "ccp3.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;		None
 12683 ;; Auto vars:     Size  Location     Type
 12684 ;;  module          2    8[COMMON] struct CCPR3Reg_tag
 12685 ;; Return value:  Size  Location     Type
 12686 ;;                  1    wreg      void 
 12687 ;; Registers used:
 12688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12689 ;; Tracked objects:
 12690 ;;		On entry : 0/0
 12691 ;;		On exit  : 0/0
 12692 ;;		Unchanged: 0/0
 12693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12697 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12698 ;;Total ram usage:        3 bytes
 12699 ;; Hardware stack levels used: 1
 12700 ;; Hardware stack levels required when called: 2
 12701 ;; This function calls:
 12702 ;;		Absolute function
 12703 ;;		_CCP3_DefaultCallBack
 12704 ;; This function is called by:
 12705 ;;		_INTERRUPT_InterruptManager
 12706 ;; This function uses a non-reentrant model
 12707 ;;
 12708                           
 12709  06E4                     _CCP3_CaptureISR:	
 12710                           ;psect for function _CCP3_CaptureISR
 12711                           
 12712  06E4                     i1l3433:	
 12713                           ;incstack = 0
 12714                           ; Regs used in _CCP3_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12715                           
 12716                           
 12717                           ;ccp3.c: 83:     CCP3_PERIOD_REG_T module;;ccp3.c: 86:     PIR4bits.CCP3IF = 0;
 12718  06E4  0020               	movlb	0	; select bank0
 12719  06E5  1114               	bcf	20,2	;volatile
 12720  06E6                     i1l3435:
 12721                           
 12722                           ;ccp3.c: 89:     module.ccpr3l = CCPR3L;
 12723  06E6  0026               	movlb	6	; select bank6
 12724  06E7  0811               	movf	17,w	;volatile
 12725  06E8  00F7               	movwf	??_CCP3_CaptureISR
 12726  06E9  0877               	movf	??_CCP3_CaptureISR,w
 12727  06EA  00F8               	movwf	CCP3_CaptureISR@module
 12728                           
 12729                           ;ccp3.c: 90:     module.ccpr3h = CCPR3H;
 12730  06EB  0812               	movf	18,w	;volatile
 12731  06EC  00F7               	movwf	??_CCP3_CaptureISR
 12732  06ED  0877               	movf	??_CCP3_CaptureISR,w
 12733  06EE  00F9               	movwf	CCP3_CaptureISR@module+1
 12734  06EF                     i1l3437:
 12735                           
 12736                           ;ccp3.c: 93:     CCP3_CallBack(module.ccpr3_16Bit);
 12737  06EF  0879               	movf	CCP3_CaptureISR@module+1,w
 12738  06F0  00F4               	movwf	CCP3_DefaultCallBack@capturedValue+1
 12739  06F1  0878               	movf	CCP3_CaptureISR@module,w
 12740  06F2  00F3               	movwf	CCP3_DefaultCallBack@capturedValue
 12741  06F3  0020               	movlb	0	; select bank0
 12742  06F4  0837               	movf	_CCP3_CallBack+1,w
 12743  06F5  008A               	movwf	10
 12744  06F6  0836               	movf	_CCP3_CallBack,w
 12745  06F7  000A               	callw
 12746  06F8  3186               	pagesel	$
 12747  06F9                     i1l439:
 12748  06F9  0008               	return
 12749  06FA                     __end_of_CCP3_CaptureISR:
 12750                           
 12751                           	psect	text57
 12752  0457                     __ptext57:	
 12753 ;; *************** function _CCP3_DefaultCallBack *****************
 12754 ;; Defined at:
 12755 ;;		line 29 in file "ccp3.c"
 12756 ;; Parameters:    Size  Location     Type
 12757 ;;  capturedValu    2    3[COMMON] unsigned short 
 12758 ;; Auto vars:     Size  Location     Type
 12759 ;;		None
 12760 ;; Return value:  Size  Location     Type
 12761 ;;                  1    wreg      void 
 12762 ;; Registers used:
 12763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12764 ;; Tracked objects:
 12765 ;;		On entry : 0/0
 12766 ;;		On exit  : 0/0
 12767 ;;		Unchanged: 0/0
 12768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12771 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12772 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12773 ;;Total ram usage:        4 bytes
 12774 ;; Hardware stack levels used: 1
 12775 ;; Hardware stack levels required when called: 1
 12776 ;; This function calls:
 12777 ;;		_JSN_GetLastTrig
 12778 ;;		_ReadPin
 12779 ;; This function is called by:
 12780 ;;		_CCP3_Initialize
 12781 ;;		_CCP3_CaptureISR
 12782 ;; This function uses a non-reentrant model
 12783 ;;
 12784                           
 12785  0457                     _CCP3_DefaultCallBack:	
 12786                           ;psect for function _CCP3_DefaultCallBack
 12787                           
 12788  0457                     i1l3309:	
 12789                           ;incstack = 0
 12790                           ; Regs used in _CCP3_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12791                           
 12792                           
 12793                           ;ccp3.c: 29: static void CCP3_DefaultCallBack(uint16_t capturedValue);ccp3.c: 30: {;ccp3
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 12794  0457  318F  2783  3184   	fcall	_JSN_GetLastTrig
 12795  045A  00F5               	movwf	??_CCP3_DefaultCallBack
 12796  045B  0875               	movf	??_CCP3_DefaultCallBack,w
 12797  045C  00FB               	movwf	_lastTrig@ccp3$F977
 12798                           
 12799                           ;ccp3.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 12800  045D  2C7B               	goto	i1l3319
 12801  045E                     i1l3311:
 12802                           
 12803                           ;ccp3.c: 35:             ticksUp = capturedValue;
 12804  045E  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 12805  045F  0020               	movlb	0	; select bank0
 12806  0460  00B5               	movwf	_ticksUp@ccp3$F974+1
 12807  0461  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 12808  0462  00B4               	movwf	_ticksUp@ccp3$F974
 12809                           
 12810                           ;ccp3.c: 36:             sameSens = lastTrig;
 12811  0463  087B               	movf	_lastTrig@ccp3$F977,w
 12812  0464  00F5               	movwf	??_CCP3_DefaultCallBack
 12813  0465  0875               	movf	??_CCP3_DefaultCallBack,w
 12814  0466  00CD               	movwf	_sameSens@ccp3$F976
 12815                           
 12816                           ;ccp3.c: 37:             break;
 12817  0467  2C92               	goto	i1l433
 12818  0468                     i1l3313:
 12819                           
 12820                           ;ccp3.c: 40:             ticksDown = capturedValue;
 12821  0468  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 12822  0469  0020               	movlb	0	; select bank0
 12823  046A  00B3               	movwf	_ticksDown@ccp3$F975+1
 12824  046B  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 12825  046C  00B2               	movwf	_ticksDown@ccp3$F975
 12826  046D                     i1l3315:
 12827                           
 12828                           ;ccp3.c: 43:             sameSens->echoHighTime = (ticksDown - ticksUp);
 12829  046D  0834               	movf	_ticksUp@ccp3$F974,w
 12830  046E  0232               	subwf	_ticksDown@ccp3$F975,w
 12831  046F  00F5               	movwf	??_CCP3_DefaultCallBack
 12832  0470  0835               	movf	_ticksUp@ccp3$F974+1,w
 12833  0471  3B33               	subwfb	_ticksDown@ccp3$F975+1,w
 12834  0472  00F6               	movwf	??_CCP3_DefaultCallBack+1
 12835  0473  084D               	movf	_sameSens@ccp3$F976,w
 12836  0474  0086               	movwf	6
 12837  0475  0187               	clrf	7
 12838  0476  0875               	movf	??_CCP3_DefaultCallBack,w
 12839  0477  3FC0               	movwi [0]fsr1
 12840  0478  0876               	movf	??_CCP3_DefaultCallBack+1,w
 12841  0479  3FC1               	movwi [1]fsr1
 12842                           
 12843                           ;ccp3.c: 44:             break;
 12844  047A  2C92               	goto	i1l433
 12845  047B                     i1l3319:
 12846  047B  087B               	movf	_lastTrig@ccp3$F977,w
 12847  047C  3E05               	addlw	5
 12848  047D  0086               	movwf	6
 12849  047E  0187               	clrf	7
 12850  047F  0801               	movf	1,w
 12851  0480  3182  221E  3184   	fcall	_ReadPin
 12852  0483  00F5               	movwf	??_CCP3_DefaultCallBack
 12853  0484  01F6               	clrf	??_CCP3_DefaultCallBack+1
 12854                           
 12855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12856                           ; Switch size 1, requested type "simple"
 12857                           ; Number of cases is 1, Range of values is 0 to 0
 12858                           ; switch strategies available:
 12859                           ; Name         Instructions Cycles
 12860                           ; simple_byte            4     3 (average)
 12861                           ; direct_byte            8     6 (fixed)
 12862                           ; jumptable            260     6 (fixed)
 12863                           ;	Chosen strategy is simple_byte
 12864  0485  0876               	movf	??_CCP3_DefaultCallBack+1,w
 12865  0486  3A00               	xorlw	0	; case 0
 12866  0487  1903               	skipnz
 12867  0488  2C8A               	goto	i1l3937
 12868  0489  2C92               	goto	i1l433
 12869  048A                     i1l3937:
 12870                           
 12871                           ; Switch size 1, requested type "simple"
 12872                           ; Number of cases is 2, Range of values is 0 to 1
 12873                           ; switch strategies available:
 12874                           ; Name         Instructions Cycles
 12875                           ; simple_byte            7     4 (average)
 12876                           ; direct_byte           10     6 (fixed)
 12877                           ; jumptable            260     6 (fixed)
 12878                           ;	Chosen strategy is simple_byte
 12879  048A  0875               	movf	??_CCP3_DefaultCallBack,w
 12880  048B  3A00               	xorlw	0	; case 0
 12881  048C  1903               	skipnz
 12882  048D  2C68               	goto	i1l3313
 12883  048E  3A01               	xorlw	1	; case 1
 12884  048F  1903               	skipnz
 12885  0490  2C5E               	goto	i1l3311
 12886  0491  2C92               	goto	i1l433
 12887  0492                     i1l433:
 12888  0492  0008               	return
 12889  0493                     __end_of_CCP3_DefaultCallBack:
 12890                           
 12891                           	psect	text58
 12892  06FA                     __ptext58:	
 12893 ;; *************** function _CCP2_CaptureISR *****************
 12894 ;; Defined at:
 12895 ;;		line 81 in file "ccp2.c"
 12896 ;; Parameters:    Size  Location     Type
 12897 ;;		None
 12898 ;; Auto vars:     Size  Location     Type
 12899 ;;  module          2    8[COMMON] struct CCPR2Reg_tag
 12900 ;; Return value:  Size  Location     Type
 12901 ;;                  1    wreg      void 
 12902 ;; Registers used:
 12903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12904 ;; Tracked objects:
 12905 ;;		On entry : 0/0
 12906 ;;		On exit  : 0/0
 12907 ;;		Unchanged: 0/0
 12908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12910 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12912 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12913 ;;Total ram usage:        3 bytes
 12914 ;; Hardware stack levels used: 1
 12915 ;; Hardware stack levels required when called: 2
 12916 ;; This function calls:
 12917 ;;		Absolute function
 12918 ;;		_CCP2_DefaultCallBack
 12919 ;; This function is called by:
 12920 ;;		_INTERRUPT_InterruptManager
 12921 ;; This function uses a non-reentrant model
 12922 ;;
 12923                           
 12924  06FA                     _CCP2_CaptureISR:	
 12925                           ;psect for function _CCP2_CaptureISR
 12926                           
 12927  06FA                     i1l3427:	
 12928                           ;incstack = 0
 12929                           ; Regs used in _CCP2_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12930                           
 12931                           
 12932                           ;ccp2.c: 83:     CCP2_PERIOD_REG_T module;;ccp2.c: 86:     PIR4bits.CCP2IF = 0;
 12933  06FA  0020               	movlb	0	; select bank0
 12934  06FB  1094               	bcf	20,1	;volatile
 12935  06FC                     i1l3429:
 12936                           
 12937                           ;ccp2.c: 89:     module.ccpr2l = CCPR2L;
 12938  06FC  0025               	movlb	5	; select bank5
 12939  06FD  0815               	movf	21,w	;volatile
 12940  06FE  00F7               	movwf	??_CCP2_CaptureISR
 12941  06FF  0877               	movf	??_CCP2_CaptureISR,w
 12942  0700  00F8               	movwf	CCP2_CaptureISR@module
 12943                           
 12944                           ;ccp2.c: 90:     module.ccpr2h = CCPR2H;
 12945  0701  0816               	movf	22,w	;volatile
 12946  0702  00F7               	movwf	??_CCP2_CaptureISR
 12947  0703  0877               	movf	??_CCP2_CaptureISR,w
 12948  0704  00F9               	movwf	CCP2_CaptureISR@module+1
 12949  0705                     i1l3431:
 12950                           
 12951                           ;ccp2.c: 93:     CCP2_CallBack(module.ccpr2_16Bit);
 12952  0705  0879               	movf	CCP2_CaptureISR@module+1,w
 12953  0706  00F4               	movwf	CCP2_DefaultCallBack@capturedValue+1
 12954  0707  0878               	movf	CCP2_CaptureISR@module,w
 12955  0708  00F3               	movwf	CCP2_DefaultCallBack@capturedValue
 12956  0709  0020               	movlb	0	; select bank0
 12957  070A  083D               	movf	_CCP2_CallBack+1,w
 12958  070B  008A               	movwf	10
 12959  070C  083C               	movf	_CCP2_CallBack,w
 12960  070D  000A               	callw
 12961  070E  3186               	pagesel	$
 12962  070F                     i1l393:
 12963  070F  0008               	return
 12964  0710                     __end_of_CCP2_CaptureISR:
 12965                           
 12966                           	psect	text59
 12967  0493                     __ptext59:	
 12968 ;; *************** function _CCP2_DefaultCallBack *****************
 12969 ;; Defined at:
 12970 ;;		line 29 in file "ccp2.c"
 12971 ;; Parameters:    Size  Location     Type
 12972 ;;  capturedValu    2    3[COMMON] unsigned short 
 12973 ;; Auto vars:     Size  Location     Type
 12974 ;;		None
 12975 ;; Return value:  Size  Location     Type
 12976 ;;                  1    wreg      void 
 12977 ;; Registers used:
 12978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12979 ;; Tracked objects:
 12980 ;;		On entry : 0/0
 12981 ;;		On exit  : 0/0
 12982 ;;		Unchanged: 0/0
 12983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12986 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12987 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12988 ;;Total ram usage:        4 bytes
 12989 ;; Hardware stack levels used: 1
 12990 ;; Hardware stack levels required when called: 1
 12991 ;; This function calls:
 12992 ;;		_JSN_GetLastTrig
 12993 ;;		_ReadPin
 12994 ;; This function is called by:
 12995 ;;		_CCP2_Initialize
 12996 ;;		_CCP2_CaptureISR
 12997 ;; This function uses a non-reentrant model
 12998 ;;
 12999                           
 13000  0493                     _CCP2_DefaultCallBack:	
 13001                           ;psect for function _CCP2_DefaultCallBack
 13002                           
 13003  0493                     i1l3293:	
 13004                           ;incstack = 0
 13005                           ; Regs used in _CCP2_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13006                           
 13007                           
 13008                           ;ccp2.c: 29: static void CCP2_DefaultCallBack(uint16_t capturedValue);ccp2.c: 30: {;ccp2
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 13009  0493  318F  2783  3184   	fcall	_JSN_GetLastTrig
 13010  0496  00F5               	movwf	??_CCP2_DefaultCallBack
 13011  0497  0875               	movf	??_CCP2_DefaultCallBack,w
 13012  0498  00FC               	movwf	_lastTrig@ccp2$F852
 13013                           
 13014                           ;ccp2.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 13015  0499  2CB7               	goto	i1l3303
 13016  049A                     i1l3295:
 13017                           
 13018                           ;ccp2.c: 35:             ticksUp = capturedValue;
 13019  049A  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 13020  049B  0020               	movlb	0	; select bank0
 13021  049C  00BB               	movwf	_ticksUp@ccp2$F849+1
 13022  049D  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 13023  049E  00BA               	movwf	_ticksUp@ccp2$F849
 13024                           
 13025                           ;ccp2.c: 36:             sameSens = lastTrig;
 13026  049F  087C               	movf	_lastTrig@ccp2$F852,w
 13027  04A0  00F5               	movwf	??_CCP2_DefaultCallBack
 13028  04A1  0875               	movf	??_CCP2_DefaultCallBack,w
 13029  04A2  00CE               	movwf	_sameSens@ccp2$F851
 13030                           
 13031                           ;ccp2.c: 37:             break;
 13032  04A3  2CCE               	goto	i1l387
 13033  04A4                     i1l3297:
 13034                           
 13035                           ;ccp2.c: 40:             ticksDown = capturedValue;
 13036  04A4  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 13037  04A5  0020               	movlb	0	; select bank0
 13038  04A6  00B9               	movwf	_ticksDown@ccp2$F850+1
 13039  04A7  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 13040  04A8  00B8               	movwf	_ticksDown@ccp2$F850
 13041  04A9                     i1l3299:
 13042                           
 13043                           ;ccp2.c: 43:             sameSens->echoHighTime = (ticksDown - ticksUp);
 13044  04A9  083A               	movf	_ticksUp@ccp2$F849,w
 13045  04AA  0238               	subwf	_ticksDown@ccp2$F850,w
 13046  04AB  00F5               	movwf	??_CCP2_DefaultCallBack
 13047  04AC  083B               	movf	_ticksUp@ccp2$F849+1,w
 13048  04AD  3B39               	subwfb	_ticksDown@ccp2$F850+1,w
 13049  04AE  00F6               	movwf	??_CCP2_DefaultCallBack+1
 13050  04AF  084E               	movf	_sameSens@ccp2$F851,w
 13051  04B0  0086               	movwf	6
 13052  04B1  0187               	clrf	7
 13053  04B2  0875               	movf	??_CCP2_DefaultCallBack,w
 13054  04B3  3FC0               	movwi [0]fsr1
 13055  04B4  0876               	movf	??_CCP2_DefaultCallBack+1,w
 13056  04B5  3FC1               	movwi [1]fsr1
 13057                           
 13058                           ;ccp2.c: 44:             break;
 13059  04B6  2CCE               	goto	i1l387
 13060  04B7                     i1l3303:
 13061  04B7  087C               	movf	_lastTrig@ccp2$F852,w
 13062  04B8  3E05               	addlw	5
 13063  04B9  0086               	movwf	6
 13064  04BA  0187               	clrf	7
 13065  04BB  0801               	movf	1,w
 13066  04BC  3182  221E  3184   	fcall	_ReadPin
 13067  04BF  00F5               	movwf	??_CCP2_DefaultCallBack
 13068  04C0  01F6               	clrf	??_CCP2_DefaultCallBack+1
 13069                           
 13070                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13071                           ; Switch size 1, requested type "simple"
 13072                           ; Number of cases is 1, Range of values is 0 to 0
 13073                           ; switch strategies available:
 13074                           ; Name         Instructions Cycles
 13075                           ; simple_byte            4     3 (average)
 13076                           ; direct_byte            8     6 (fixed)
 13077                           ; jumptable            260     6 (fixed)
 13078                           ;	Chosen strategy is simple_byte
 13079  04C1  0876               	movf	??_CCP2_DefaultCallBack+1,w
 13080  04C2  3A00               	xorlw	0	; case 0
 13081  04C3  1903               	skipnz
 13082  04C4  2CC6               	goto	i1l3939
 13083  04C5  2CCE               	goto	i1l387
 13084  04C6                     i1l3939:
 13085                           
 13086                           ; Switch size 1, requested type "simple"
 13087                           ; Number of cases is 2, Range of values is 0 to 1
 13088                           ; switch strategies available:
 13089                           ; Name         Instructions Cycles
 13090                           ; simple_byte            7     4 (average)
 13091                           ; direct_byte           10     6 (fixed)
 13092                           ; jumptable            260     6 (fixed)
 13093                           ;	Chosen strategy is simple_byte
 13094  04C6  0875               	movf	??_CCP2_DefaultCallBack,w
 13095  04C7  3A00               	xorlw	0	; case 0
 13096  04C8  1903               	skipnz
 13097  04C9  2CA4               	goto	i1l3297
 13098  04CA  3A01               	xorlw	1	; case 1
 13099  04CB  1903               	skipnz
 13100  04CC  2C9A               	goto	i1l3295
 13101  04CD  2CCE               	goto	i1l387
 13102  04CE                     i1l387:
 13103  04CE  0008               	return
 13104  04CF                     __end_of_CCP2_DefaultCallBack:
 13105                           
 13106                           	psect	text60
 13107  0710                     __ptext60:	
 13108 ;; *************** function _CCP1_CaptureISR *****************
 13109 ;; Defined at:
 13110 ;;		line 81 in file "ccp1.c"
 13111 ;; Parameters:    Size  Location     Type
 13112 ;;		None
 13113 ;; Auto vars:     Size  Location     Type
 13114 ;;  module          2    8[COMMON] struct CCPR1Reg_tag
 13115 ;; Return value:  Size  Location     Type
 13116 ;;                  1    wreg      void 
 13117 ;; Registers used:
 13118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13119 ;; Tracked objects:
 13120 ;;		On entry : 0/0
 13121 ;;		On exit  : 0/0
 13122 ;;		Unchanged: 0/0
 13123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13127 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13128 ;;Total ram usage:        3 bytes
 13129 ;; Hardware stack levels used: 1
 13130 ;; Hardware stack levels required when called: 2
 13131 ;; This function calls:
 13132 ;;		Absolute function
 13133 ;;		_CCP1_DefaultCallBack
 13134 ;; This function is called by:
 13135 ;;		_INTERRUPT_InterruptManager
 13136 ;; This function uses a non-reentrant model
 13137 ;;
 13138                           
 13139  0710                     _CCP1_CaptureISR:	
 13140                           ;psect for function _CCP1_CaptureISR
 13141                           
 13142  0710                     i1l3421:	
 13143                           ;incstack = 0
 13144                           ; Regs used in _CCP1_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13145                           
 13146                           
 13147                           ;ccp1.c: 83:     CCP1_PERIOD_REG_T module;;ccp1.c: 86:     PIR4bits.CCP1IF = 0;
 13148  0710  0020               	movlb	0	; select bank0
 13149  0711  1014               	bcf	20,0	;volatile
 13150  0712                     i1l3423:
 13151                           
 13152                           ;ccp1.c: 89:     module.ccpr1l = CCPR1L;
 13153  0712  0025               	movlb	5	; select bank5
 13154  0713  0811               	movf	17,w	;volatile
 13155  0714  00F7               	movwf	??_CCP1_CaptureISR
 13156  0715  0877               	movf	??_CCP1_CaptureISR,w
 13157  0716  00F8               	movwf	CCP1_CaptureISR@module
 13158                           
 13159                           ;ccp1.c: 90:     module.ccpr1h = CCPR1H;
 13160  0717  0812               	movf	18,w	;volatile
 13161  0718  00F7               	movwf	??_CCP1_CaptureISR
 13162  0719  0877               	movf	??_CCP1_CaptureISR,w
 13163  071A  00F9               	movwf	CCP1_CaptureISR@module+1
 13164  071B                     i1l3425:
 13165                           
 13166                           ;ccp1.c: 93:     CCP1_CallBack(module.ccpr1_16Bit);
 13167  071B  0879               	movf	CCP1_CaptureISR@module+1,w
 13168  071C  00F4               	movwf	CCP1_DefaultCallBack@capturedValue+1
 13169  071D  0878               	movf	CCP1_CaptureISR@module,w
 13170  071E  00F3               	movwf	CCP1_DefaultCallBack@capturedValue
 13171  071F  0020               	movlb	0	; select bank0
 13172  0720  0843               	movf	_CCP1_CallBack+1,w
 13173  0721  008A               	movwf	10
 13174  0722  0842               	movf	_CCP1_CallBack,w
 13175  0723  000A               	callw
 13176  0724  3187               	pagesel	$
 13177  0725                     i1l347:
 13178  0725  0008               	return
 13179  0726                     __end_of_CCP1_CaptureISR:
 13180                           
 13181                           	psect	text61
 13182  04CF                     __ptext61:	
 13183 ;; *************** function _CCP1_DefaultCallBack *****************
 13184 ;; Defined at:
 13185 ;;		line 29 in file "ccp1.c"
 13186 ;; Parameters:    Size  Location     Type
 13187 ;;  capturedValu    2    3[COMMON] unsigned short 
 13188 ;; Auto vars:     Size  Location     Type
 13189 ;;		None
 13190 ;; Return value:  Size  Location     Type
 13191 ;;                  1    wreg      void 
 13192 ;; Registers used:
 13193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13194 ;; Tracked objects:
 13195 ;;		On entry : 0/0
 13196 ;;		On exit  : 0/0
 13197 ;;		Unchanged: 0/0
 13198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13201 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13202 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13203 ;;Total ram usage:        4 bytes
 13204 ;; Hardware stack levels used: 1
 13205 ;; Hardware stack levels required when called: 1
 13206 ;; This function calls:
 13207 ;;		_JSN_GetLastTrig
 13208 ;;		_ReadPin
 13209 ;; This function is called by:
 13210 ;;		_CCP1_Initialize
 13211 ;;		_CCP1_CaptureISR
 13212 ;; This function uses a non-reentrant model
 13213 ;;
 13214                           
 13215  04CF                     _CCP1_DefaultCallBack:	
 13216                           ;psect for function _CCP1_DefaultCallBack
 13217                           
 13218  04CF                     i1l3277:	
 13219                           ;incstack = 0
 13220                           ; Regs used in _CCP1_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13221                           
 13222                           
 13223                           ;ccp1.c: 29: static void CCP1_DefaultCallBack(uint16_t capturedValue);ccp1.c: 30: {;ccp1
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 13224  04CF  318F  2783  3184   	fcall	_JSN_GetLastTrig
 13225  04D2  00F5               	movwf	??_CCP1_DefaultCallBack
 13226  04D3  0875               	movf	??_CCP1_DefaultCallBack,w
 13227  04D4  00FD               	movwf	_lastTrig@ccp1$F706
 13228                           
 13229                           ;ccp1.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 13230  04D5  2CF3               	goto	i1l3287
 13231  04D6                     i1l3279:
 13232                           
 13233                           ;ccp1.c: 35:             ticksUp = capturedValue;
 13234  04D6  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 13235  04D7  0020               	movlb	0	; select bank0
 13236  04D8  00C1               	movwf	_ticksUp+1
 13237  04D9  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 13238  04DA  00C0               	movwf	_ticksUp
 13239                           
 13240                           ;ccp1.c: 36:             sameSens = lastTrig;
 13241  04DB  087D               	movf	_lastTrig@ccp1$F706,w
 13242  04DC  00F5               	movwf	??_CCP1_DefaultCallBack
 13243  04DD  0875               	movf	??_CCP1_DefaultCallBack,w
 13244  04DE  00CF               	movwf	_sameSens
 13245                           
 13246                           ;ccp1.c: 37:             break;
 13247  04DF  2D0A               	goto	i1l341
 13248  04E0                     i1l3281:
 13249                           
 13250                           ;ccp1.c: 40:             ticksDown = capturedValue;
 13251  04E0  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 13252  04E1  0020               	movlb	0	; select bank0
 13253  04E2  00BF               	movwf	_ticksDown+1
 13254  04E3  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 13255  04E4  00BE               	movwf	_ticksDown
 13256  04E5                     i1l3283:
 13257                           
 13258                           ;ccp1.c: 43:             sameSens->echoHighTime = (ticksDown - ticksUp);
 13259  04E5  0840               	movf	_ticksUp,w
 13260  04E6  023E               	subwf	_ticksDown,w
 13261  04E7  00F5               	movwf	??_CCP1_DefaultCallBack
 13262  04E8  0841               	movf	_ticksUp+1,w
 13263  04E9  3B3F               	subwfb	_ticksDown+1,w
 13264  04EA  00F6               	movwf	??_CCP1_DefaultCallBack+1
 13265  04EB  084F               	movf	_sameSens,w
 13266  04EC  0086               	movwf	6
 13267  04ED  0187               	clrf	7
 13268  04EE  0875               	movf	??_CCP1_DefaultCallBack,w
 13269  04EF  3FC0               	movwi [0]fsr1
 13270  04F0  0876               	movf	??_CCP1_DefaultCallBack+1,w
 13271  04F1  3FC1               	movwi [1]fsr1
 13272                           
 13273                           ;ccp1.c: 44:             break;
 13274  04F2  2D0A               	goto	i1l341
 13275  04F3                     i1l3287:
 13276  04F3  087D               	movf	_lastTrig@ccp1$F706,w
 13277  04F4  3E05               	addlw	5
 13278  04F5  0086               	movwf	6
 13279  04F6  0187               	clrf	7
 13280  04F7  0801               	movf	1,w
 13281  04F8  3182  221E  3184   	fcall	_ReadPin
 13282  04FB  00F5               	movwf	??_CCP1_DefaultCallBack
 13283  04FC  01F6               	clrf	??_CCP1_DefaultCallBack+1
 13284                           
 13285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13286                           ; Switch size 1, requested type "simple"
 13287                           ; Number of cases is 1, Range of values is 0 to 0
 13288                           ; switch strategies available:
 13289                           ; Name         Instructions Cycles
 13290                           ; simple_byte            4     3 (average)
 13291                           ; direct_byte            8     6 (fixed)
 13292                           ; jumptable            260     6 (fixed)
 13293                           ;	Chosen strategy is simple_byte
 13294  04FD  0876               	movf	??_CCP1_DefaultCallBack+1,w
 13295  04FE  3A00               	xorlw	0	; case 0
 13296  04FF  1903               	skipnz
 13297  0500  2D02               	goto	i1l3941
 13298  0501  2D0A               	goto	i1l341
 13299  0502                     i1l3941:
 13300                           
 13301                           ; Switch size 1, requested type "simple"
 13302                           ; Number of cases is 2, Range of values is 0 to 1
 13303                           ; switch strategies available:
 13304                           ; Name         Instructions Cycles
 13305                           ; simple_byte            7     4 (average)
 13306                           ; direct_byte           10     6 (fixed)
 13307                           ; jumptable            260     6 (fixed)
 13308                           ;	Chosen strategy is simple_byte
 13309  0502  0875               	movf	??_CCP1_DefaultCallBack,w
 13310  0503  3A00               	xorlw	0	; case 0
 13311  0504  1903               	skipnz
 13312  0505  2CE0               	goto	i1l3281
 13313  0506  3A01               	xorlw	1	; case 1
 13314  0507  1903               	skipnz
 13315  0508  2CD6               	goto	i1l3279
 13316  0509  2D0A               	goto	i1l341
 13317  050A                     i1l341:
 13318  050A  0008               	return
 13319  050B                     __end_of_CCP1_DefaultCallBack:
 13320                           
 13321                           	psect	text62
 13322  021E                     __ptext62:	
 13323 ;; *************** function _ReadPin *****************
 13324 ;; Defined at:
 13325 ;;		line 103 in file "PIC16Xpress_DevBoard.c"
 13326 ;; Parameters:    Size  Location     Type
 13327 ;;  pin             1    wreg     enum E7144
 13328 ;; Auto vars:     Size  Location     Type
 13329 ;;  pin             1    2[COMMON] enum E7144
 13330 ;; Return value:  Size  Location     Type
 13331 ;;                  1    wreg      unsigned char 
 13332 ;; Registers used:
 13333 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13334 ;; Tracked objects:
 13335 ;;		On entry : 0/0
 13336 ;;		On exit  : 0/0
 13337 ;;		Unchanged: 0/0
 13338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13340 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13341 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13342 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13343 ;;Total ram usage:        3 bytes
 13344 ;; Hardware stack levels used: 1
 13345 ;; This function calls:
 13346 ;;		Nothing
 13347 ;; This function is called by:
 13348 ;;		_CCP1_DefaultCallBack
 13349 ;;		_CCP2_DefaultCallBack
 13350 ;;		_CCP3_DefaultCallBack
 13351 ;; This function uses a non-reentrant model
 13352 ;;
 13353                           
 13354  021E                     _ReadPin:	
 13355                           ;psect for function _ReadPin
 13356                           
 13357                           
 13358                           ;incstack = 0
 13359                           ; Regs used in _ReadPin: [wreg-fsr0h+status,2+status,0]
 13360                           ;ReadPin@pin stored from wreg
 13361  021E  00F2               	movwf	ReadPin@pin
 13362  021F                     i1l2789:
 13363                           
 13364                           ;PIC16Xpress_DevBoard.c: 104:     switch(pin) {
 13365  021F  2A74               	goto	i1l2869
 13366  0220                     i1l2791:
 13367                           
 13368                           ;PIC16Xpress_DevBoard.c: 106:             return PORTAbits.RA5;
 13369  0220  0020               	movlb	0	; select bank0
 13370  0221  0E0C               	swapf	12,w	;volatile
 13371  0222  0C89               	rrf	9,f
 13372  0223  3901               	andlw	1
 13373  0224  2AB4               	goto	i1l130
 13374  0225                     i1l2795:
 13375                           
 13376                           ;PIC16Xpress_DevBoard.c: 108:             return PORTAbits.RA4;
 13377  0225  0020               	movlb	0	; select bank0
 13378  0226  0E0C               	swapf	12,w	;volatile
 13379  0227  3901               	andlw	1
 13380  0228  2AB4               	goto	i1l130
 13381  0229                     i1l2799:
 13382                           
 13383                           ;PIC16Xpress_DevBoard.c: 110:             return 0xFF;
 13384  0229  30FF               	movlw	255
 13385  022A  2AB4               	goto	i1l130
 13386  022B                     i1l2803:
 13387                           
 13388                           ;PIC16Xpress_DevBoard.c: 112:             return PORTCbits.RC5;
 13389  022B  0020               	movlb	0	; select bank0
 13390  022C  0E0E               	swapf	14,w	;volatile
 13391  022D  0C89               	rrf	9,f
 13392  022E  3901               	andlw	1
 13393  022F  2AB4               	goto	i1l130
 13394  0230                     i1l2807:
 13395                           
 13396                           ;PIC16Xpress_DevBoard.c: 114:             return PORTCbits.RC4;
 13397  0230  0020               	movlb	0	; select bank0
 13398  0231  0E0E               	swapf	14,w	;volatile
 13399  0232  3901               	andlw	1
 13400  0233  2AB4               	goto	i1l130
 13401  0234                     i1l2811:
 13402                           
 13403                           ;PIC16Xpress_DevBoard.c: 116:             return PORTCbits.RC3;
 13404  0234  0020               	movlb	0	; select bank0
 13405  0235  0C0E               	rrf	14,w	;volatile
 13406  0236  00F0               	movwf	??_ReadPin
 13407  0237  0CF0               	rrf	??_ReadPin,f
 13408  0238  0C70               	rrf	??_ReadPin,w
 13409  0239  3901               	andlw	1
 13410  023A  2AB4               	goto	i1l130
 13411  023B                     i1l2815:
 13412                           
 13413                           ;PIC16Xpress_DevBoard.c: 118:             return PORTCbits.RC6;
 13414  023B  0020               	movlb	0	; select bank0
 13415  023C  0E0E               	swapf	14,w	;volatile
 13416  023D  0C89               	rrf	9,f
 13417  023E  0C89               	rrf	9,f
 13418  023F  3901               	andlw	1
 13419  0240  2AB4               	goto	i1l130
 13420  0241                     i1l2819:
 13421                           
 13422                           ;PIC16Xpress_DevBoard.c: 120:             return PORTCbits.RC7;
 13423  0241  0020               	movlb	0	; select bank0
 13424  0242  0D0E               	rlf	14,w	;volatile
 13425  0243  0D0E               	rlf	14,w	;volatile
 13426  0244  3901               	andlw	1
 13427  0245  2AB4               	goto	i1l130
 13428  0246                     i1l2823:
 13429                           
 13430                           ;PIC16Xpress_DevBoard.c: 122:             return PORTBbits.RB7;
 13431  0246  0020               	movlb	0	; select bank0
 13432  0247  0D0D               	rlf	13,w	;volatile
 13433  0248  0D0D               	rlf	13,w	;volatile
 13434  0249  3901               	andlw	1
 13435  024A  2AB4               	goto	i1l130
 13436  024B                     i1l2827:
 13437                           
 13438                           ;PIC16Xpress_DevBoard.c: 124:             return PORTAbits.RA0;
 13439  024B  0020               	movlb	0	; select bank0
 13440  024C  080C               	movf	12,w	;volatile
 13441  024D  3901               	andlw	1
 13442  024E  2AB4               	goto	i1l130
 13443  024F                     i1l2831:
 13444                           
 13445                           ;PIC16Xpress_DevBoard.c: 126:             return PORTAbits.RA1;
 13446  024F  0020               	movlb	0	; select bank0
 13447  0250  0C0C               	rrf	12,w	;volatile
 13448  0251  3901               	andlw	1
 13449  0252  2AB4               	goto	i1l130
 13450  0253                     i1l2835:
 13451                           
 13452                           ;PIC16Xpress_DevBoard.c: 128:             return PORTAbits.RA2;
 13453  0253  0020               	movlb	0	; select bank0
 13454  0254  0C0C               	rrf	12,w	;volatile
 13455  0255  0C89               	rrf	9,f
 13456  0256  3901               	andlw	1
 13457  0257  2AB4               	goto	i1l130
 13458  0258                     i1l2839:
 13459                           
 13460                           ;PIC16Xpress_DevBoard.c: 130:             return PORTCbits.RC0;
 13461  0258  0020               	movlb	0	; select bank0
 13462  0259  080E               	movf	14,w	;volatile
 13463  025A  3901               	andlw	1
 13464  025B  2AB4               	goto	i1l130
 13465  025C                     i1l2843:
 13466                           
 13467                           ;PIC16Xpress_DevBoard.c: 132:             return PORTCbits.RC1;
 13468  025C  0020               	movlb	0	; select bank0
 13469  025D  0C0E               	rrf	14,w	;volatile
 13470  025E  3901               	andlw	1
 13471  025F  2AB4               	goto	i1l130
 13472  0260                     i1l2847:
 13473                           
 13474                           ;PIC16Xpress_DevBoard.c: 134:             return PORTCbits.RC2;
 13475  0260  0020               	movlb	0	; select bank0
 13476  0261  0C0E               	rrf	14,w	;volatile
 13477  0262  0C89               	rrf	9,f
 13478  0263  3901               	andlw	1
 13479  0264  2AB4               	goto	i1l130
 13480  0265                     i1l2851:
 13481                           
 13482                           ;PIC16Xpress_DevBoard.c: 136:             return PORTBbits.RB4;
 13483  0265  0020               	movlb	0	; select bank0
 13484  0266  0E0D               	swapf	13,w	;volatile
 13485  0267  3901               	andlw	1
 13486  0268  2AB4               	goto	i1l130
 13487  0269                     i1l2855:
 13488                           
 13489                           ;PIC16Xpress_DevBoard.c: 138:             return PORTBbits.RB5;
 13490  0269  0020               	movlb	0	; select bank0
 13491  026A  0E0D               	swapf	13,w	;volatile
 13492  026B  0C89               	rrf	9,f
 13493  026C  3901               	andlw	1
 13494  026D  2AB4               	goto	i1l130
 13495  026E                     i1l2859:
 13496                           
 13497                           ;PIC16Xpress_DevBoard.c: 140:             return PORTBbits.RB6;
 13498  026E  0020               	movlb	0	; select bank0
 13499  026F  0E0D               	swapf	13,w	;volatile
 13500  0270  0C89               	rrf	9,f
 13501  0271  0C89               	rrf	9,f
 13502  0272  3901               	andlw	1
 13503  0273  2AB4               	goto	i1l130
 13504  0274                     i1l2869:
 13505  0274  0872               	movf	ReadPin@pin,w
 13506  0275  00F0               	movwf	??_ReadPin
 13507  0276  01F1               	clrf	??_ReadPin+1
 13508                           
 13509                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13510                           ; Switch size 1, requested type "simple"
 13511                           ; Number of cases is 1, Range of values is 0 to 0
 13512                           ; switch strategies available:
 13513                           ; Name         Instructions Cycles
 13514                           ; simple_byte            4     3 (average)
 13515                           ; direct_byte            8     6 (fixed)
 13516                           ; jumptable            260     6 (fixed)
 13517                           ;	Chosen strategy is simple_byte
 13518  0277  0871               	movf	??_ReadPin+1,w
 13519  0278  3A00               	xorlw	0	; case 0
 13520  0279  1903               	skipnz
 13521  027A  2A7C               	goto	i1l3943
 13522  027B  2A29               	goto	i1l2799
 13523  027C                     i1l3943:
 13524                           
 13525                           ; Switch size 1, requested type "simple"
 13526                           ; Number of cases is 18, Range of values is 0 to 17
 13527                           ; switch strategies available:
 13528                           ; Name         Instructions Cycles
 13529                           ; direct_byte           42     6 (fixed)
 13530                           ; simple_byte           55    28 (average)
 13531                           ; jumptable            260     6 (fixed)
 13532                           ;	Chosen strategy is simple_byte
 13533  027C  0870               	movf	??_ReadPin,w
 13534  027D  3A00               	xorlw	0	; case 0
 13535  027E  1903               	skipnz
 13536  027F  2A20               	goto	i1l2791
 13537  0280  3A01               	xorlw	1	; case 1
 13538  0281  1903               	skipnz
 13539  0282  2A25               	goto	i1l2795
 13540  0283  3A03               	xorlw	3	; case 2
 13541  0284  1903               	skipnz
 13542  0285  2A29               	goto	i1l2799
 13543  0286  3A01               	xorlw	1	; case 3
 13544  0287  1903               	skipnz
 13545  0288  2A2B               	goto	i1l2803
 13546  0289  3A07               	xorlw	7	; case 4
 13547  028A  1903               	skipnz
 13548  028B  2A30               	goto	i1l2807
 13549  028C  3A01               	xorlw	1	; case 5
 13550  028D  1903               	skipnz
 13551  028E  2A34               	goto	i1l2811
 13552  028F  3A03               	xorlw	3	; case 6
 13553  0290  1903               	skipnz
 13554  0291  2A3B               	goto	i1l2815
 13555  0292  3A01               	xorlw	1	; case 7
 13556  0293  1903               	skipnz
 13557  0294  2A41               	goto	i1l2819
 13558  0295  3A0F               	xorlw	15	; case 8
 13559  0296  1903               	skipnz
 13560  0297  2A46               	goto	i1l2823
 13561  0298  3A01               	xorlw	1	; case 9
 13562  0299  1903               	skipnz
 13563  029A  2A4B               	goto	i1l2827
 13564  029B  3A03               	xorlw	3	; case 10
 13565  029C  1903               	skipnz
 13566  029D  2A4F               	goto	i1l2831
 13567  029E  3A01               	xorlw	1	; case 11
 13568  029F  1903               	skipnz
 13569  02A0  2A53               	goto	i1l2835
 13570  02A1  3A07               	xorlw	7	; case 12
 13571  02A2  1903               	skipnz
 13572  02A3  2A58               	goto	i1l2839
 13573  02A4  3A01               	xorlw	1	; case 13
 13574  02A5  1903               	skipnz
 13575  02A6  2A5C               	goto	i1l2843
 13576  02A7  3A03               	xorlw	3	; case 14
 13577  02A8  1903               	skipnz
 13578  02A9  2A60               	goto	i1l2847
 13579  02AA  3A01               	xorlw	1	; case 15
 13580  02AB  1903               	skipnz
 13581  02AC  2A65               	goto	i1l2851
 13582  02AD  3A1F               	xorlw	31	; case 16
 13583  02AE  1903               	skipnz
 13584  02AF  2A69               	goto	i1l2855
 13585  02B0  3A01               	xorlw	1	; case 17
 13586  02B1  1903               	skipnz
 13587  02B2  2A6E               	goto	i1l2859
 13588  02B3  2A29               	goto	i1l2799
 13589  02B4                     i1l130:
 13590  02B4  0008               	return
 13591  02B5                     __end_of_ReadPin:
 13592                           
 13593                           	psect	text63
 13594  0F83                     __ptext63:	
 13595 ;; *************** function _JSN_GetLastTrig *****************
 13596 ;; Defined at:
 13597 ;;		line 119 in file "JSN_Sensor.c"
 13598 ;; Parameters:    Size  Location     Type
 13599 ;;		None
 13600 ;; Auto vars:     Size  Location     Type
 13601 ;;		None
 13602 ;; Return value:  Size  Location     Type
 13603 ;;                  1    wreg      PTR struct .
 13604 ;; Registers used:
 13605 ;;		wreg
 13606 ;; Tracked objects:
 13607 ;;		On entry : 0/0
 13608 ;;		On exit  : 0/0
 13609 ;;		Unchanged: 0/0
 13610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13615 ;;Total ram usage:        0 bytes
 13616 ;; Hardware stack levels used: 1
 13617 ;; This function calls:
 13618 ;;		Nothing
 13619 ;; This function is called by:
 13620 ;;		_CCP1_DefaultCallBack
 13621 ;;		_CCP2_DefaultCallBack
 13622 ;;		_CCP3_DefaultCallBack
 13623 ;; This function uses a non-reentrant model
 13624 ;;
 13625                           
 13626  0F83                     _JSN_GetLastTrig:	
 13627                           ;psect for function _JSN_GetLastTrig
 13628                           
 13629  0F83                     i1l2785:	
 13630                           ;incstack = 0
 13631                           ; Regs used in _JSN_GetLastTrig: [wreg]
 13632                           
 13633                           
 13634                           ;JSN_Sensor.c: 120:     return lastTrig;
 13635  0F83  0020               	movlb	0	; select bank0
 13636  0F84  0851               	movf	_lastTrig,w
 13637  0F85                     i1l56:
 13638  0F85  0008               	return
 13639  0F86                     __end_of_JSN_GetLastTrig:
 13640  007E                     btemp	set	126	;btemp
 13641  007E                     int$flags	set	126
 13642  007E                     wtemp0	set	126
 13643                           
 13644                           	psect	idloc
 13645                           
 13646                           ;Config register IDLOC0 @ 0x8000
 13647                           ;	unspecified, using default values
 13648  8000                     	org	32768
 13649  8000  3FFF               	dw	16383
 13650                           
 13651                           ;Config register IDLOC1 @ 0x8001
 13652                           ;	unspecified, using default values
 13653  8001                     	org	32769
 13654  8001  3FFF               	dw	16383
 13655                           
 13656                           ;Config register IDLOC2 @ 0x8002
 13657                           ;	unspecified, using default values
 13658  8002                     	org	32770
 13659  8002  3FFF               	dw	16383
 13660                           
 13661                           ;Config register IDLOC3 @ 0x8003
 13662                           ;	unspecified, using default values
 13663  8003                     	org	32771
 13664  8003  3FFF               	dw	16383
 13665                           
 13666                           	psect	config
 13667                           
 13668                           ;Config register CONFIG1 @ 0x8007
 13669                           ;	FEXTOSC External Oscillator mode Selection bits
 13670                           ;	FEXTOSC = OFF, Oscillator not enabled
 13671                           ;	Power-up default value for COSC bits
 13672                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 13673                           ;	Clock Out Enable bit
 13674                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 13675                           ;	Clock Switch Enable bit
 13676                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13677                           ;	Fail-Safe Clock Monitor Enable
 13678                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13679  8007                     	org	32775
 13680  8007  3F8C               	dw	16268
 13681                           
 13682                           ;Config register CONFIG2 @ 0x8008
 13683                           ;	Master Clear Enable bit
 13684                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 13685                           ;	Power-up Timer Enable bit
 13686                           ;	PWRTE = OFF, PWRT disabled
 13687                           ;	Watchdog Timer Enable bits
 13688                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 13689                           ;	Low-power BOR enable bit
 13690                           ;	LPBOREN = OFF, ULPBOR disabled
 13691                           ;	Brown-out Reset Enable bits
 13692                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 13693                           ;	Brown-out Reset Voltage selection bit
 13694                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 13695                           ;	PPSLOCK bit One-Way Set Enable bit
 13696                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 13697                           ;	Stack Overflow/Underflow Reset Enable bit
 13698                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13699                           ;	Debugger enable bit
 13700                           ;	DEBUG = OFF, Background debugger disabled
 13701  8008                     	org	32776
 13702  8008  3FF3               	dw	16371
 13703                           
 13704                           ;Config register CONFIG3 @ 0x8009
 13705                           ;	User NVM self-write protection bits
 13706                           ;	WRT = OFF, Write protection off
 13707                           ;	Low Voltage Programming Enable bit
 13708                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 13709  8009                     	org	32777
 13710  8009  3FFF               	dw	16383
 13711                           
 13712                           ;Config register CONFIG4 @ 0x800A
 13713                           ;	User NVM Program Memory Code Protection bit
 13714                           ;	CP = OFF, User NVM code protection disabled
 13715                           ;	Data NVM Memory Code Protection bit
 13716                           ;	CPD = OFF, Data NVM code protection disabled
 13717  800A                     	org	32778
 13718  800A  3FFF               	dw	16383

Data Sizes:
    Strings     108
    Constant    0
    Data        0
    BSS         110
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     30      80
    BANK1            80      0      56
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMMON[1]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_2(CODE[58]), STR_1(CODE[50]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP3_DefaultCallBack(), 

    sameSens@ccp3$F976	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    lastTrig@ccp3$F977	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    CCP2_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP2_DefaultCallBack(), 

    CCP2_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP2_DefaultCallBack(), 

    sameSens@ccp2$F851	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    lastTrig@ccp2$F852	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP1_DefaultCallBack(), 

    sameSens	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    lastTrig@ccp1$F706	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    sp__JSN_GetLastTrig	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    lastTrig	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _INTERRUPT_InterruptManager->_CCP2_CaptureISR
    _INTERRUPT_InterruptManager->_CCP3_CaptureISR
    i1_TMR3_Reload->i1_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _CCP3_CaptureISR->_CCP3_DefaultCallBack
    _CCP3_DefaultCallBack->_ReadPin
    _CCP2_CaptureISR->_CCP2_DefaultCallBack
    _CCP2_DefaultCallBack->_ReadPin
    _CCP1_CaptureISR->_CCP1_DefaultCallBack
    _CCP1_DefaultCallBack->_ReadPin

Critical Paths under _main in BANK0

    _main->_SpeakerTone_SetFrequency
    _SpeakerTone_SetFrequency->___aldiv
    _SpeakerTone_Init->_SetPin
    _SpeakerTone_Init->_WritePin
    _TMR3_Reload->_TMR3_WriteTimer
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _CCP3_Initialize->_CCP3_SetCallBack
    _CCP2_Initialize->_CCP2_SetCallBack
    _CCP1_Initialize->_CCP1_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    3640
                                             17 BANK0     13    13      0
                      _FRT_GetMillis
                         _PIC16_Init
                   _SpeakerTone_Init
                     _SpeakerTone_On
           _SpeakerTone_SetFrequency
 ---------------------------------------------------------------------------------
 (1) _SpeakerTone_SetFrequency                             2     0      2    1152
                                             15 BANK0      2     0      2
               _CCP4_SetCompareCount
                    _SpeakerTone_Off
                     _SpeakerTone_On
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (2) _SpeakerTone_On                                       0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_SetCompareCount                                 4     2      2     144
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SpeakerTone_Init                                     0     0      0    1488
                             _SetPin
                    _SpeakerTone_Off
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _WritePin                                             4     3      1     700
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _SpeakerTone_Off                                      0     0      0     164
                        _TMR3_Reload
                     _TMR3_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR3_Reload                                          0     0      0     164
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (4) _TMR3_WriteTimer                                      2     0      2     164
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SetPin                                               4     3      1     624
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _PIC16_Init                                           0     0      0     882
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     882
                    _CCP1_Initialize
                    _CCP2_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Initialize                                    1     1      0     490
                                              2 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP3_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP2_Initialize                                      0     0      0      98
                   _CCP2_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP2_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP1_Initialize                                      0     0      0      98
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP1_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _FRT_GetMillis                                        4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     852
                   Absolute function *
                    _CCP1_CaptureISR
                    _CCP2_CaptureISR
                    _CCP3_CaptureISR
                    _CCP4_CompareISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR3_ISR                                             0     0      0     114
                      i1_TMR3_Reload
 ---------------------------------------------------------------------------------
 (7) i1_TMR3_Reload                                        0     0      0     114
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (8) i1_TMR3_WriteTimer                                    2     0      2     114
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0       0
                      _FRT_IncMicros
                      _FRT_IncMillis
 ---------------------------------------------------------------------------------
 (8) _FRT_IncMillis                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _FRT_IncMicros                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _CCP4_CompareISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CCP3_CaptureISR                                      3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (7) _CCP3_DefaultCallBack                                 4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (6) _CCP2_CaptureISR                                      3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP2_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (7) _CCP2_DefaultCallBack                                 4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (6) _CCP1_CaptureISR                                      3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP1_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (7) _CCP1_DefaultCallBack                                 4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (8) _ReadPin                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (8) _JSN_GetLastTrig                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FRT_GetMillis
   _PIC16_Init
     _SYSTEM_Initialize
       _CCP1_Initialize
         _CCP1_SetCallBack
       _CCP2_Initialize
         _CCP2_SetCallBack
       _CCP3_Initialize
         _CCP3_SetCallBack
       _CCP4_Initialize
       _EUSART_Initialize
         _EUSART_SetErrorHandler
         _EUSART_SetFramingErrorHandler
         _EUSART_SetOverrunErrorHandler
         _EUSART_SetRxInterruptHandler
         _EUSART_SetTxInterruptHandler
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _PWM5_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR1_Initialize
       _TMR2_Initialize
       _TMR3_Initialize
       _WDT_Initialize
   _SpeakerTone_Init
     _SetPin
     _SpeakerTone_Off
       _TMR3_Reload
         _TMR3_WriteTimer
       _TMR3_StopTimer
     _WritePin
   _SpeakerTone_On
     _TMR3_StartTimer
   _SpeakerTone_SetFrequency
     _CCP4_SetCompareCount
     _SpeakerTone_Off
     _SpeakerTone_On
     ___aldiv

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _CCP1_CaptureISR *
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP2_CaptureISR *
     Absolute function(Fake) *
     _CCP2_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP3_CaptureISR *
     Absolute function(Fake) *
     _CCP3_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP4_CompareISR *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     _TMR0_CallBack
       _FRT_IncMicros
       _FRT_IncMillis
   _TMR1_ISR *
     _TMR1_WriteTimer
   _TMR3_ISR *
     i1_TMR3_Reload
       i1_TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      38       7       70.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      96      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      96      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Feb 09 18:25:53 2022

                              _CCP4_Initialize 074A                  ?_EUSART_SetRxInterruptHandler 0052  
                       ??_CCP3_DefaultCallBack 0075                          __end_ofi1_TMR3_Reload 1000  
                      __end_of_CCP1_Initialize 06CE                                            l101 0737  
                                          l106 021D                                            l230 0616  
                                          l233 07BE                                            l242 07D6  
                                          l154 0162                                            l236 07C2  
                                          l350 0FAA                                            l239 0F9A  
                                          l344 06CD                                            l273 06E3  
                                          l442 0FB6                                            l436 069D  
                                          l461 079C                                            l390 06B5  
                                          l622 0FC8                                            l631 0FCE  
                                          l625 0FBC                                            l298 0FDA  
                                          l619 0FC2                                            l396 0FB0  
                                          l628 0FD4                                            l556 0415  
                                          l812 0FEE                                            l805 0456  
                                          l815 0F9E                                            l763 076B  
                                          l908 0FF6                                            l749 0545  
                                          l951 0F8E                                            l872 075A  
                                          l962 0685                                            l954 0F8B  
                                          l875 07A9                                            l892 07CC  
                                          l948 07B6                                            l965 07FD  
                                          l799 0652                                            _PR2 001E  
                                          u600 02EB                                            u601 02EA  
                                          u530 0672                                            u531 0671  
                                          u540 07C2                                            u620 02FD  
                                          u541 07C1                                            u621 02FC  
                                          u615 02EF                                            u640 0316  
                                          u800 0429                                            u641 0315  
                                          u801 0428                                            u635 02FE  
                                          u660 032C                                            u580 02BB  
                                          u661 032B                                            u645 0312  
                                          u581 02BA                                            u670 0331  
                                          u590 02CC                                            u671 0330  
                                          u655 0320                                            u591 02CB  
                                          u790 0420                                            u791 041F  
                              _timer1ReloadVal 0030                         ??_EUSART_RxDataHandler 0070  
               ?_EUSART_SetFramingErrorHandler 0052                                _TMR2_Initialize 0FEF  
                                          wreg 0009                               ?_SpeakerTone_Off 0070  
                                         l1201 0344                                           l3001 06B3  
                                         l3003 074A                                           l3011 07AA  
                                         l3005 0751                                           l3021 07C7  
                                         l3013 07AE                                           l3007 0756  
                                         l3023 07C8                                           l3031 0797  
                                         l3015 07B2                                           l3111 016D  
                                         l1191 02C8                                           l3009 0758  
                                         l3041 03E5                                           l3017 07C3  
                                         l3033 0799                                           l3025 078E  
                                         l3105 0165                                           l3051 03F0  
                                         l3043 03E8                                           l3035 03D1  
                                         l3019 07C6                                           l3027 0792  
                                         l3131 0190                                           l3123 0182  
                                         l3115 0174                                           l3107 0166  
                                         l3211 00D5                                           l3203 00C7  
                              _timer3ReloadVal 0020                                           l3061 040B  
                                         l3053 03F8                                           l3045 03EA  
                                         l3037 03D3                                           l3029 0793  
                                         l3063 040C                                           l3055 0400  
                                         l3047 03EC                                           l3039 03DB  
                                         l3151 01B3                                           l3143 01A5  
                                         l3135 0197                                           l3127 0189  
                                         l3119 017B                                           l3231 00F8  
                                         l3223 00EA                                           l3215 00DC  
                                         l3207 00CE                                           l3065 0413  
                                         l3057 0408                                           l3049 03EE  
                                         l3401 0735                                           l3059 040A  
                                         l3403 0736                                           l3171 01D6  
                                         l3163 01C8                                           l3155 01BA  
                                         l3147 01AC                                           l3139 019E  
                                         l3251 011B                                           l3243 010D  
                                         l3235 00FF                                           l3227 00F1  
                                         l3219 00E3                                           l3085 0F89  
                                         l3271 0610                                           l3167 01CF  
                                         l3159 01C1                                           l3087 07F5  
                                         l3343 0FE8                                           l3247 0114  
                                         l3239 0106                                           l3191 00B2  
                                         l3351 0F9B                                           l3521 075B  
                                         l3273 0613                                           l3265 05EC  
                                         l3177 01DD                                           l3345 0FEB  
                                         l3257 0122                                           l3185 00AA  
                                         l3089 0F8C                                           l3361 02CC  
                                         l3267 060A                                           l3195 00B9  
                                         l3187 00AB                                           l3531 064F  
                                         l3371 02EE                                           l3363 02D7  
                                         l3355 02B5                                           l2901 0528  
                                         l3269 060D                                           l3525 0639  
                                         l3349 079D                                           l3381 031E  
                                         l3373 02F9                                           l3365 02DB  
                                         l3357 02B7                                           l3541 042D  
                                         l3533 0416                                           l2911 0533  
                                         l2903 052A                                           l3199 00C0  
                                         l3527 0645                                           l3391 033C  
                                         l3383 031F                                           l3375 02FD  
                                         l3367 02E3                                           l3359 02BB  
                                         l3543 0435                                           l3535 0420  
                                         l2761 0FC9                                           l2921 0540  
                                         l2913 0536                                           l2905 052C  
                                         l2753 0FD5                                           l3529 064A  
                                         l3385 0326                                           l3377 0304  
                                         l3369 02EB                                           l3545 044C  
                                         l2755 0FA5                                           l2763 0FCF  
                                         l2923 0543                                           l2915 0539  
                                         l2907 052F                                           l2931 0F97  
                                         l2771 066D                                           l3379 0316  
                                         l3387 032C                                           l3539 042A  
                                         l2757 0FAB                                           l2941 068C  
                                         l2933 0686                                           l2765 0FBD  
                                         l2925 07B7                                           l2917 053C  
                                         l2909 0531                                           l3397 0726  
                                         l2773 0672                                           l2781 067D  
                                         l3389 0331                                           l3661 035F  
                                         l3653 0345                                           l2951 06B9  
                                         l2759 0FB1                                           l2943 0694  
                                         l2935 0689                                           l2767 0FC3  
                                         l2927 07BB                                           l2919 053E  
                                         l3399 0732                                           l2783 0681  
                                         l2775 0673                                           l3663 0366  
                                         l3655 0348                                           l2961 06C9  
                                         l2953 06BA                                           l2945 0699  
                                         l2937 068A                                           l2769 0FB7  
                                         l2929 07BD                                           l2881 07D3  
                                         l2777 0677                                           l3681 03A7  
                                         l3673 0392                                           l3665 0368  
                                         l3657 034B                                           l2963 06CB  
                                         l2955 06BB                                           l2947 069B  
                                         l2939 068B                                           l2891 0514  
                                         l2883 07D4                                           l2875 07CD  
                                         l2971 0FF4                                           l2779 067B  
                                         l3931 03BB                                           l3683 03AE  
                                         l3675 0399                                           l3667 036B  
                                         l3659 0357                                           l2957 06BC  
                                         l2949 06B6                                           l2893 0516  
                                         l2885 050B                                           l2877 07D0  
                                         l2981 06D7                                           l2973 06CE  
                                         l2965 0FEF                                           l3933 012A  
                                         l3677 039F                                           l3669 0377  
                                         l2959 06C4                                           l2991 06A2  
                                         l2895 0519                                           l2887 050F  
                                         l2879 07D2                                           l2983 06DF  
                                         l2975 06D3                                           l2967 0FF2  
                                         l3935 01E5                                           l3687 03B2  
                                         l2993 06A3                                           l2897 051B  
                                         l2889 0512                                           l2985 06E2  
                                         l2977 06D4                                           l2969 0FF3  
                                         l3689 03C6                                           l2995 06A4  
                                         l2987 069E                                           l2899 0525  
                                         l2979 06D5                                           l2997 06AC  
                                         l2989 06A1                                           l2999 06B1  
                                         STR_1 05BA                                           STR_2 0546  
                                         u1010 0391                                           u1011 0390  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           _PIE0 0090  
                                         _PIE1 0091                                           _PIE2 0092  
                                         _PIE3 0093                                           _PIE4 0094  
                                         _PMD0 0911                                           _PMD1 0912  
                                         _PMD2 0913                                           _PMD3 0914  
                                         _PMD4 0915                                           _PMD5 0916  
                                         i1l56 0F85                                           _PIR0 0010  
                                         _PIR1 0011                                           _PIR2 0012  
                                         _PIR3 0013                                           _PIR4 0014  
                                         _PLLR 48E0                                           _TMR2 001D  
                       ??_CCP4_SetCompareCount 0054                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                      __end_of_CCP2_Initialize 06B6                                           _main 0345  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                     ReadPin@pin 0072  
                                         start 008E                                _TMR3_Initialize 07AA  
                              _PWM5_Initialize 07C3                       __end_of_CCP1_SetCallBack 0FAB  
                             ?_CCP1_CaptureISR 0070                              ?_SpeakerTone_Init 0070  
                              __end_of_ReadPin 02B5                        __end_of_CCP4_CompareISR 0F89  
                   ??_SpeakerTone_SetFrequency 0063                             ??_SpeakerTone_Init 0056  
                      __end_of_TMR0_Initialize 06E4                  __end_of_OSCILLATOR_Initialize 07C3  
                              __end_of___aldiv 0345                        __end_of_CCP3_Initialize 069E  
                                        ?_main 0070                                          _T1CON 001B  
                                        _T2CON 001F                                          _T3CON 0413  
                                        i1l130 02B4                                          i1l341 050A  
                                        i1l433 0492                                          i1l610 07FE  
                                        i1l347 0725                                          i1l603 05B9  
                                        i1l292 0749                                          i1l613 0F96  
                                        i1l439 06F9                                          i1l607 066C  
                                        i1l295 0FE7                                          i1l616 0F92  
                                        i1l393 070F                                          i1l481 07E0  
                                        i1l387 04CE                                          i1l475 078D  
                                        i1l672 0014                                          i1l593 0636  
                                        i1l681 0050                                          i1l690 008C  
                                        i1l683 005E                                          i1l675 0026  
                                        i1l596 0638                                          i1l772 07F4  
                                        i1l684 008C                                          i1l685 006C  
                                        i1l677 0034                                          i1l687 007C  
                                        i1l679 0042                                          i1l881 0F88  
                                        i1l769 07EA                                          i1l962 077C  
                                        i1l965 0FFF                                          i1l974 0FA4  
                                        _OSCEN 091D                                          _TMR0H 0016  
                                        _TMR1H 001A                                          _TMR0L 0015  
                                        _TMR3H 0412                                          _TMR1L 0019  
                                        _TMR3L 0411                                          u55_20 0667  
                                        u55_21 0666                                          u56_20 0771  
                                        u56_21 0770                                          u57_20 0782  
                                        u57_21 0781                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        u74_20 061E                                          u90_20 003E  
                                        u82_20 000B                                          u74_21 061D  
                                        u90_21 003D                                          u82_21 000A  
                                        u75_20 0630                                          u91_20 0047  
                                        u83_20 0010                                          u75_21 062F  
                                        u91_21 0046                                          u83_21 000F  
                                        u76_20 058B                                          u68_20 0744  
                                        u92_20 004C                                          u84_20 0018  
                                        u76_21 058A                                          u68_21 0743  
                                        u92_21 004B                                          u84_21 0017  
                                        u77_20 059B                                          u93_20 0055  
                                        u85_20 001D                                          u77_21 059A  
                                        u93_21 0054                                          u85_21 001C  
                                        u78_20 05B0                                          u94_20 005A  
                                        u86_20 0022                                          u78_21 05AF  
                                        u94_21 0059                                          u86_21 0021  
                                        u95_20 0063                                          u87_20 002B  
                                        u95_21 0062                                          u87_21 002A  
                                        u96_20 0068                                          u88_20 0030  
                                        u96_21 0067                                          u88_21 002F  
                                        _RXPPS 0E24                                          u97_20 0071  
                                        u89_20 0039                                          u97_21 0070  
                                        u89_21 0038                                          u98_20 0076  
                                        u98_21 0075                                          u99_20 0081  
                                        u99_21 0080                      ?_TMR0_SetInterruptHandler 0052  
                                        _Sens1 00C4                                          _Sens2 00BE  
                                        _Sens3 00B8                               __end_of_TMR0_ISR 074A  
                             __end_of_TMR1_ISR 07E1                               __end_of_TMR3_ISR 0FA5  
                             ?_CCP2_CaptureISR 0070                                 _WDT_Initialize 0F97  
                                        main@i 006B                        __end_of_TMR1_Initialize 079D  
                                        pclath 000A                                          status 0003  
                      __end_of_CCP4_Initialize 075B                                          wtemp0 007E  
                              _TMR1_WriteTimer 077D                       __end_of_CCP2_SetCallBack 0FB1  
                              __initialization 0090                               ?_CCP3_CaptureISR 0070  
                                 __end_of_main 03D1           SpeakerTone_SetFrequency@newFrequency 0061  
                      __end_of_TMR2_Initialize 0FF7                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0054                                         ??_main 0063  
                             ?_CCP1_Initialize 0070                                _TMR3_StartTimer 0F8C  
                       __end_of_WDT_Initialize 0F9B                                _JSN_GetLastTrig 0F83  
    __end_of_EUSART_DefaultFramingErrorHandler 07FF            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 07FE  
                   _EUSART_OverrunErrorHandler 0028                                         _CCPR1H 0292  
                                       _CCPR2H 0296                                         _CCPR3H 0312  
                                       _CCPR1L 0291                                         _CCPR4H 0316  
                                       _CCPR2L 0295                                         _CCPR3L 0311  
                                       _CCPR4L 0315                     CCP4_SetCompareCount@module 0054  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _T0CON0 0017  
                                       _T0CON1 0018                                         _T1GCON 001C  
                                       _T3GCON 0414                                         _RC1REG 0199  
                             __end_of_WritePin 0163                                         _RC1PPS 0EA1  
                                       _RC1STA 019D                                         u100_20 0086  
                                       u100_21 0085                        TMR1_WriteTimer@timerVal 0070  
                                       _RC4PPS 0EA4                                         _RB6PPS 0E9E  
                                       i1l3101 0778                                         i1l3103 077A  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         i1l3303 04B7  
                                       i1l3311 045E                                         i1l3071 07EB  
                                       i1l3313 0468                                         i1l3081 0667  
                                       i1l3315 046D                                         i1l3083 0668  
                                       i1l3075 0653                                         i1l3067 07E1  
                                       i1l3411 073A                                         i1l3331 0785  
                                       i1l3091 076C                                         i1l3421 0710  
                                       i1l3309 0457                                         i1l3077 065D  
                                       i1l3341 0F8F                                         i1l3501 0591  
                                       i1l3413 0744                                         i1l3333 0787  
                                       i1l3325 077D                                         i1l3093 0771  
                                       i1l3423 0712                                         i1l3431 0705  
                                       i1l3319 047B                                         i1l3079 0661  
                                       i1l3511 05B0                                         i1l3503 0596  
                                       i1l3415 0747                                         i1l3327 0782  
                                       i1l3335 0789                                         i1l3095 0772  
                                       i1l3281 04E0                                         i1l3425 071B  
                                       i1l3433 06E4                                         i1l3513 05B6  
                                       i1l3505 059B                                         i1l3409 0738  
                                       i1l3337 078B                                         i1l3329 0783  
                                       i1l3441 07D9                                         i1l3097 0774  
                                       i1l2811 0234                                         i1l2803 022B  
                                       i1l3283 04E5                                         i1l3427 06FA  
                                       i1l3435 06E6                                         i1l3515 0F86  
                                       i1l3339 0F93                                         i1l3507 05A1  
                                       i1l3275 0FE1                                         i1l3099 0776  
                      __end_of_PWM5_Initialize 07CD                        __end_of_TMR3_Initialize 07B7  
                                       i1l3277 04CF                                         i1l3293 0493  
                                       i1l3429 06FC                                         i1l3437 06EF  
                                       i1l3509 05A6                                         i1l3517 0F9F  
                                       i1l3621 001D                                         i1l3613 0006  
                                       i1l2831 024F                                         i1l2823 0246  
                                       i1l2815 023B                                         i1l2807 0230  
                                       i1l3279 04D6                                         i1l3287 04F3  
                                       i1l3295 049A                                         i1l3439 07D7  
                                       i1l3519 0FA1                                         i1l3631 003E  
                                       i1l3623 0022                                         i1l3615 000B  
                                       i1l3297 04A4                                         i1l3641 0063  
                                       i1l3633 0047                                         i1l3625 002B  
                                       i1l3617 0010                                         i1l2851 0265  
                                       i1l2843 025C                                         i1l2835 0253  
                                       i1l2827 024B                                         i1l2819 0241  
                                       i1l3299 04A9                                         i1l3491 0630  
                                       i1l3483 0617                                         i1l3395 0FF7  
                                       i1l3651 0086                                         i1l3643 0068  
                                       i1l3635 004C                                         i1l3627 0030  
                                       i1l3619 0018                                         i1l3493 0631  
                                       i1l3485 061E                                         i1l3645 0071  
                                       i1l3637 0055                                         i1l3629 0039  
                                       i1l2855 0269                                         i1l2847 0260  
                                       i1l2839 0258                                         i1l2791 0220  
                                       i1l3495 0580                                         i1l3487 0625  
                                       i1l3647 0076                                         i1l3639 005A  
                                       i1l2785 0F83                                         i1l3497 0586  
                                       i1l3489 062A                                         i1l3649 0081  
                                       i1l2859 026E                                         i1l2795 0225  
                                       i1l3499 058B                                         i1l2869 0274  
                                       i1l2789 021F                                         i1l3941 0502  
                                       i1l3943 027C                                         i1l2799 0229  
                                       i1l3937 048A                                         i1l3939 04C6  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                  main@currMilli 006C  
                                       _OSCFRQ 091F                                         _TX1REG 019A  
                                       _WDTCON 0097                                         _TX1STA 019E  
                             ?_CCP2_Initialize 0070                                      ??_ReadPin 0070  
                              _TMR3_WriteTimer 066D                                  _CCP1_CallBack 0042  
                     __end_of_CCP3_SetCallBack 0FB7                                         _SetPin 0163  
                                _CCP2_CallBack 003C                                      ??___aldiv 005A  
                             ?_CCP4_CompareISR 0070                                   ?_TMR3_Reload 0070  
                                _CCP3_CallBack 0036                            _EUSART_Transmit_ISR 0617  
                             ?_TMR0_Initialize 0070                                         _micros 00D2  
                                       _millis 00CE                             _lastTrig@ccp1$F706 007D  
                           _lastTrig@ccp2$F852 007C                             _lastTrig@ccp3$F977 007B  
                                main@prevMilli 0067                               ?_CCP3_Initialize 0070  
                               _PMD_Initialize 07CD              CCP2_DefaultCallBack@capturedValue 0073  
                              ?_WDT_Initialize 0070                          __end_of_TMR0_CallBack 0FE8  
     TMR0_SetInterruptHandler@InterruptHandler 0052                        __end_of_TMR1_WriteTimer 078E  
                         ?_EUSART_Transmit_ISR 0070                               ?_TMR1_Initialize 0070  
                            _SYSTEM_Initialize 05EC                        __end_of__initialization 00A4  
                             ?_CCP4_Initialize 0070                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 0FD5                   _EUSART_SetTxInterruptHandler 0FCF  
                                 ??_PIC16_Init 0055                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0055                        __end_of_TMR3_StartTimer 0F8F  
                                    ?_TMR0_ISR 0070                                      ?_TMR1_ISR 0070  
                                    ?_TMR3_ISR 0070                               ?_TMR2_Initialize 0070  
                       __end_of_PMD_Initialize 07D7                        __end_of_JSN_GetLastTrig 0F86  
                        CCP3_CaptureISR@module 0078                           _eusartRxStatusBuffer 00A0  
               CCP3_SetCallBack@customCallBack 0052                ??_EUSART_SetOverrunErrorHandler 0054  
                           __end_of_PIC16_Init 0738                      __end_of_SYSTEM_Initialize 0617  
                        ??_EUSART_Transmit_ISR 0070                        __end_of_TMR3_WriteTimer 0686  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                             ?_PWM5_Initialize 0070                               ?_TMR3_Initialize 0070  
                                      ?_SetPin 0052                              ?_CCP1_SetCallBack 0052  
                                   __pmaintext 0345                  ?_EUSART_SetTxInterruptHandler 0052  
             _EUSART_TxDefaultInterruptHandler 002E               __end_of_TMR0_SetInterruptHandler 0FDB  
                                   ??_TMR0_ISR 0070                                     ??_TMR1_ISR 0072  
                                _FRT_GetMillis 075B                                     ??_TMR3_ISR 0072  
                           ??_CCP1_SetCallBack 0054                                     __pintentry 0004  
                                      _CCP1CAP 0294                                        _CCP2CAP 0298  
                                      _CCP3CAP 0314                                        _CCP1CON 0293  
                                      _CCP2CON 0297                                        _CCP3CON 0313  
                                      _CCP4CON 0317                                        _CCP1PPS 0E14  
                                      _CCP2PPS 0E15                                        _CCP3PPS 0E16  
                                _FRT_IncMicros 07EB                   ??_EUSART_DefaultErrorHandler 0071  
                                _FRT_IncMillis 07E1                                ?_PMD_Initialize 0070  
                                    ?_WritePin 0052                                  _eusartRxCount 0048  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                                      _OSCCON1 0919                                        _OSCCON3 091B  
                                      _OSCTUNE 091E                                        _PWM5DCH 0618  
                                      _PWM5DCL 0617                                        _PWM5CON 0619  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                       ??_EUSART_SetErrorHandler 0054  
                             ?_TMR1_WriteTimer 0070              CCP1_DefaultCallBack@capturedValue 0073  
                             _micros@FRT$F1520 00CA                                 _SpeakerTone_On 0F9B  
                                      _ReadPin 021E                              ?_CCP2_SetCallBack 0052  
                               ?_FRT_GetMillis 0052                                        ___aldiv 02B5  
                             ?_TMR3_StartTimer 0070                             ??_CCP2_SetCallBack 0054  
                               ?_FRT_IncMicros 0070                                 ?_FRT_IncMillis 0070  
                                      _ocCount 0024                                     ??_WritePin 0053  
                                      __ptext1 0416                                        __ptext2 02B5  
                                      __ptext3 0F9B                                        __ptext4 0F8C  
                                      __ptext5 079D                                        __ptext6 0639  
                                      __ptext7 00A8                                        __ptext8 0FE8  
                                      __ptext9 0F89                               ?_JSN_GetLastTrig 0070  
                                    _T1CONbits 001B                          _OSCILLATOR_Initialize 07B7  
                                    _T2CONbits 001F                                      _T3CONbits 0413  
                           _sameSens@ccp2$F851 004E                             _sameSens@ccp3$F976 004D  
                             ___aldiv@dividend 0056                       ??_PIN_MANAGER_Initialize 0052  
                                      _ticksUp 0040                                        clrloop0 0FDC  
                    ?_SpeakerTone_SetFrequency 0061                           end_of_initialization 00A4  
                             ?_TMR3_WriteTimer 0052          __end_of_EUSART_SetOverrunErrorHandler 0FC9  
                _EUSART_SetOverrunErrorHandler 0FC3                         __end_of_SpeakerTone_On 0F9F  
                            _EUSART_Initialize 03D1                             ?_EUSART_Initialize 0070  
                            ?_CCP3_SetCallBack 0052                               ___aldiv@quotient 005D  
                 __end_of_CCP1_DefaultCallBack 050B                             ??_CCP3_SetCallBack 0054  
                                i1_TMR3_Reload 0FF7                            ??_EUSART_Initialize 0054  
                             ??_WDT_Initialize 0052                 ??_EUSART_SetTxInterruptHandler 0054  
                     _TMR0_SetInterruptHandler 0FD5                                      _PORTAbits 000C  
                                    _PORTBbits 000D                                      _PORTCbits 000E  
                                    _TRISAbits 008C                                      _TRISBbits 008D  
                                    _TRISCbits 008E                                ?_SpeakerTone_On 0070  
                    __end_of_EUSART_Initialize 0416                                    _CCP4CONbits 0317  
                              ??_FRT_GetMillis 0056                              ??_SpeakerTone_Off 0054  
                              ??_FRT_IncMicros 0070                                 __end_of_SetPin 021E  
                              ??_FRT_IncMillis 0070                                 ?i1_TMR3_Reload 0070  
           __end_of_EUSART_DefaultErrorHandler 0F93                     _EUSART_DefaultErrorHandler 0F8F  
                       ?_OSCILLATOR_Initialize 0070                   __end_of_CCP2_DefaultCallBack 04CF  
                          start_initialization 0090                               _SpeakerTone_Init 0639  
               CCP2_SetCallBack@customCallBack 0052                                      SetPin@pin 0055  
                            ??_CCP1_CaptureISR 0077   EUSART_SetRxInterruptHandler@interruptHandler 0052  
 EUSART_SetTxInterruptHandler@interruptHandler 0052                                 _TMR3_StopTimer 0F89  
                            _ticksUp@ccp2$F849 003A                              _ticksUp@ccp3$F974 0034  
               ?_EUSART_SetOverrunErrorHandler 0052                                       ??_SetPin 0053  
                   _EUSART_FramingErrorHandler 002A                               ??_PMD_Initialize 0052  
                            ??_CCP2_CaptureISR 0077                         _EUSART_SetErrorHandler 0FB7  
                                  _CCPTMRSbits 029F                          CCP1_CaptureISR@module 0078  
                  __end_of_EUSART_Transmit_ISR 0639                                    __pbssCOMMON 007A  
                                    ___latbits 0002                                  __pcstackBANK0 0052  
                            ??_CCP3_CaptureISR 0077                   __end_of_CCP3_DefaultCallBack 0493  
                       __end_of_TMR3_StopTimer 0F8C                           _CCP1_DefaultCallBack 04CF  
                   __end_of_EUSART_Receive_ISR 05BA               _EUSART_RxDefaultInterruptHandler 002C  
                        _TMR0_InterruptHandler 0044                              ??_CCP1_Initialize 0054  
                               _dutyCycle10bit 0022                                       ?_ReadPin 0070  
                                  WritePin@pin 0055                                    WritePin@val 0052  
                 __end_of_EUSART_RxDataHandler 066D                         _PIN_MANAGER_Initialize 050B  
                              ??i1_TMR3_Reload 0072                                       ?___aldiv 0052  
            CCP3_DefaultCallBack@capturedValue 0073                                   _eusartRxHead 0049  
                                 _eusartTxHead 004C                                   _eusartRxTail 007A  
                                 _eusartTxTail 004B               __end_of_SpeakerTone_SetFrequency 0457  
                 ??_INTERRUPT_InterruptManager 007A                   __end_of_CCP4_SetCompareCount 07AA  
                      _eusartTxBufferRemaining 004A                                       _BAUD1CON 019F  
                            ??_CCP2_Initialize 0054                               _dutyCyclePercent 0046  
                                _TMR0_CallBack 0FE1                          ?_CCP1_DefaultCallBack 0073  
                              ?_TMR3_StopTimer 0070                              ??_CCP4_CompareISR 0070  
                               _eusartRxBuffer 00A8                                ___aldiv@divisor 0052  
                            ??_TMR0_Initialize 0054                                 _eusartTxBuffer 00B0  
                              ___aldiv@counter 005B                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0052                                       _LATBbits 010D  
                                     _LATCbits 010E                                      clear_ram0 0FDB  
                            ??_CCP3_Initialize 0054                                       _PIE0bits 0090  
                                     _PIE1bits 0091                                       _PIE3bits 0093  
                                     _PIE4bits 0094                              _eusartRxLastError 0047  
                         _CCP2_DefaultCallBack 0493                     ??_TMR0_SetInterruptHandler 0054  
                                     _PIR0bits 0010                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0054                                      _ticksDown 003E  
                                     _PIR3bits 0013                                       _PIR4bits 0014  
                                     _TMR0_ISR 0738      __end_of_EUSART_DefaultOverrunErrorHandler 0F97  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 0F93                                       _TMR1_ISR 07D7  
                                ??_TMR3_Reload 0054                                       _TMR3_ISR 0F9F  
                            ??_TMR1_Initialize 0052                              ??_CCP4_Initialize 0052  
                             ??_SpeakerTone_On 0052                                 ?_TMR0_CallBack 0070  
                              _SpeakerTone_Off 0FE8                                       SetPin@io 0052  
                            i1_TMR3_WriteTimer 076C                              ??_TMR2_Initialize 0052  
                           ?i1_TMR3_WriteTimer 0070                          ?_CCP2_DefaultCallBack 0073  
                     __end_of_SpeakerTone_Init 0653                            ??i1_TMR3_WriteTimer 0072  
             CCP4_SetCompareCount@compareCount 0052                        ??_OSCILLATOR_Initialize 0052  
                          _EUSART_ErrorHandler 0026                           _CCP3_DefaultCallBack 0457  
                  ?_EUSART_DefaultErrorHandler 0070                                _CCP1_CaptureISR 0710  
                                     _WritePin 00A8                              ??_PWM5_Initialize 0052  
                            ??_TMR3_Initialize 0052                            __end_of_TMR3_Reload 07FE  
                                   _T0CON0bits 0017                       _SpeakerTone_SetFrequency 0416  
                             _CCP1_SetCallBack 0FA5                           _EUSART_RxDataHandler 0653  
               CCP1_SetCallBack@customCallBack 0052                                       __ptext10 07F5  
                                     __ptext11 066D                                       __ptext20 0FD5  
                                     __ptext12 0163                                       __ptext21 07C3  
                                     __ptext13 0726                                       __ptext30 0FB7  
                                     __ptext22 07CD                                       __ptext14 05EC  
                                     __ptext31 074A                                       __ptext23 050B  
                                     __ptext15 0F97                                       __ptext40 0F9F  
                                     __ptext32 0686                                       __ptext24 07B7  
                                     __ptext16 07AA                                       __ptext41 0FF7  
                                     __ptext33 0FB1                                       __ptext25 03D1  
                                     __ptext17 0FEF                                       __ptext50 0580  
                                     __ptext42 076C                                       __ptext34 069E  
                                     __ptext26 0FCF                                       __ptext18 078E  
                                     __ptext51 0F93                                       __ptext43 07D7  
                                     __ptext35 0FAB                                       __ptext27 0FC9  
                                     __ptext19 06CE                                       __ptext60 0710  
                                     __ptext52 07FE                                       __ptext44 077D  
                                     __ptext36 06B6                                       __ptext28 0FC3  
                                     __ptext61 04CF                                       __ptext53 0F8F  
                                     __ptext45 0738                                       __ptext37 0FA5  
                                     __ptext29 0FBD                                       __ptext62 021E  
                                     __ptext54 0653                                       __ptext46 0FE1  
                                     __ptext38 075B                                       __ptext63 0F83  
                                     __ptext55 0F86                                       __ptext47 07E1  
                                     __ptext56 06E4                                       __ptext48 07EB  
                                     __ptext57 0457                                       __ptext49 0617  
                                     __ptext58 06FA                                       __ptext59 0493  
                       ??_CCP1_DefaultCallBack 0075                      __end_ofi1_TMR3_WriteTimer 077D  
                                   _T3GCONbits 0414                        TMR3_WriteTimer@timerVal 0052  
                                     _currFreq 00D6                                       _lastTrig 0051  
                              _CCP2_CaptureISR 06FA                           _CCP4_SetCompareCount 079D  
                                     _sameSens 004F                   _TMR0_DefaultInterruptHandler 0000  
                      ?_EUSART_SetErrorHandler 0052                            _ticksDown@ccp2$F850 0038  
                          _ticksDown@ccp3$F975 0032                                     _PIC16_Init 0726  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 0052  
                        __end_of_FRT_GetMillis 076C                      i1TMR3_WriteTimer@timerVal 0070  
                                     int$flags 007E                          ?_CCP3_DefaultCallBack 0073  
           __end_of_INTERRUPT_InterruptManager 008E                     _INTERRUPT_InterruptManager 0004  
                        __end_of_FRT_IncMicros 07F5                          __end_of_FRT_IncMillis 07EB  
        __end_of_EUSART_SetFramingErrorHandler 0FC3                  _EUSART_SetFramingErrorHandler 0FBD  
                            ??_TMR1_WriteTimer 0072                                _CCP3_CaptureISR 06E4  
                                   _INTCONbits 000B                                ??_TMR0_CallBack 0070  
                             _CCP2_SetCallBack 0FAB                          ?_EUSART_RxDataHandler 0070  
                      __end_of_SpeakerTone_Off 0FEF                                _CCP1_Initialize 06B6  
                            ??_TMR3_StartTimer 0052                                       intlevel1 0000  
                                _CountCallBack 0050                          ?_CCP4_SetCompareCount 0052  
                      ?_PIN_MANAGER_Initialize 0070                         ??_CCP2_DefaultCallBack 0075  
               __end_of_EUSART_SetErrorHandler 0FBD                              ??_JSN_GetLastTrig 0070  
         __end_of_EUSART_SetRxInterruptHandler 0FCF                   _EUSART_SetRxInterruptHandler 0FC9  
                      __end_of_CCP1_CaptureISR 0726                                _CCP2_Initialize 069E  
                           _EUSART_Receive_ISR 0580  EUSART_SetFramingErrorHandler@interruptHandler 0052  
                                  _TMR3_Reload 07F5                              ??_TMR3_WriteTimer 0054  
                                __pstringtext1 0546                                  __pstringtext2 05BA  
                                __pstringtext3 0000                          CCP2_CaptureISR@module 0078  
                              _CCP4_CompareISR 0F86                            ?_EUSART_Receive_ISR 0070  
                              _TMR0_Initialize 06CE                               ??_TMR3_StopTimer 0052  
                             _CCP3_SetCallBack 0FB1                                   ___aldiv@sign 005C  
                      __end_of_CCP2_CaptureISR 0710                                _CCP3_Initialize 0686  
                                   _TX1STAbits 019E                 __end_of_PIN_MANAGER_Initialize 0546  
                                  _PWMTMRSbits 061F                           ??_EUSART_Receive_ISR 0071  
                              _TMR1_Initialize 078E                                    ?_PIC16_Init 0070  
                      __end_of_CCP3_CaptureISR 06FA  
