

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Feb 10 17:44:53 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	text64,local,class=CODE,merge=1,delta=2
    79                           	psect	text65,local,class=CODE,merge=1,delta=2
    80                           	psect	text66,local,class=CODE,merge=1,delta=2
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    83                           	dabs	1,0x7E,2
    84  0000                     
    85                           ; Version 2.40
    86                           ; Generated 19/01/2022 GMT
    87                           ; 
    88                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution. Publication is not required when
   102                           ;        this file is used in an embedded application.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC16F18345 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0090                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0097                     	;# 
   163  009B                     	;# 
   164  009B                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  0111                     	;# 
   173  0112                     	;# 
   174  0113                     	;# 
   175  0114                     	;# 
   176  0115                     	;# 
   177  0116                     	;# 
   178  0117                     	;# 
   179  0118                     	;# 
   180  0119                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  018E                     	;# 
   184  0197                     	;# 
   185  0199                     	;# 
   186  0199                     	;# 
   187  0199                     	;# 
   188  019A                     	;# 
   189  019A                     	;# 
   190  019A                     	;# 
   191  019B                     	;# 
   192  019B                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019C                     	;# 
   197  019C                     	;# 
   198  019C                     	;# 
   199  019D                     	;# 
   200  019D                     	;# 
   201  019D                     	;# 
   202  019E                     	;# 
   203  019E                     	;# 
   204  019E                     	;# 
   205  019F                     	;# 
   206  019F                     	;# 
   207  019F                     	;# 
   208  019F                     	;# 
   209  019F                     	;# 
   210  020C                     	;# 
   211  020D                     	;# 
   212  020E                     	;# 
   213  0211                     	;# 
   214  0211                     	;# 
   215  0212                     	;# 
   216  0212                     	;# 
   217  0213                     	;# 
   218  0213                     	;# 
   219  0214                     	;# 
   220  0214                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0215                     	;# 
   224  0215                     	;# 
   225  0216                     	;# 
   226  0216                     	;# 
   227  0217                     	;# 
   228  0217                     	;# 
   229  0219                     	;# 
   230  021A                     	;# 
   231  021B                     	;# 
   232  021C                     	;# 
   233  021D                     	;# 
   234  021D                     	;# 
   235  021E                     	;# 
   236  021F                     	;# 
   237  028C                     	;# 
   238  028D                     	;# 
   239  028E                     	;# 
   240  0291                     	;# 
   241  0291                     	;# 
   242  0292                     	;# 
   243  0293                     	;# 
   244  0294                     	;# 
   245  0295                     	;# 
   246  0295                     	;# 
   247  0296                     	;# 
   248  0297                     	;# 
   249  0298                     	;# 
   250  029F                     	;# 
   251  030C                     	;# 
   252  030D                     	;# 
   253  030E                     	;# 
   254  0311                     	;# 
   255  0311                     	;# 
   256  0312                     	;# 
   257  0313                     	;# 
   258  0314                     	;# 
   259  0315                     	;# 
   260  0315                     	;# 
   261  0316                     	;# 
   262  0317                     	;# 
   263  0318                     	;# 
   264  038C                     	;# 
   265  038D                     	;# 
   266  038E                     	;# 
   267  0391                     	;# 
   268  0392                     	;# 
   269  0393                     	;# 
   270  0394                     	;# 
   271  0395                     	;# 
   272  0396                     	;# 
   273  0397                     	;# 
   274  0398                     	;# 
   275  0399                     	;# 
   276  039A                     	;# 
   277  039C                     	;# 
   278  039D                     	;# 
   279  039E                     	;# 
   280  039F                     	;# 
   281  0411                     	;# 
   282  0411                     	;# 
   283  0412                     	;# 
   284  0413                     	;# 
   285  0414                     	;# 
   286  0415                     	;# 
   287  0416                     	;# 
   288  0417                     	;# 
   289  0418                     	;# 
   290  0418                     	;# 
   291  0419                     	;# 
   292  041A                     	;# 
   293  041B                     	;# 
   294  041C                     	;# 
   295  041D                     	;# 
   296  041E                     	;# 
   297  041F                     	;# 
   298  0498                     	;# 
   299  0498                     	;# 
   300  0499                     	;# 
   301  049A                     	;# 
   302  049B                     	;# 
   303  049B                     	;# 
   304  049C                     	;# 
   305  049D                     	;# 
   306  049E                     	;# 
   307  049F                     	;# 
   308  0617                     	;# 
   309  0618                     	;# 
   310  0619                     	;# 
   311  0619                     	;# 
   312  061A                     	;# 
   313  061B                     	;# 
   314  061C                     	;# 
   315  061C                     	;# 
   316  061F                     	;# 
   317  0691                     	;# 
   318  0692                     	;# 
   319  0693                     	;# 
   320  0694                     	;# 
   321  0695                     	;# 
   322  0696                     	;# 
   323  0697                     	;# 
   324  0698                     	;# 
   325  0699                     	;# 
   326  0711                     	;# 
   327  0712                     	;# 
   328  0713                     	;# 
   329  0714                     	;# 
   330  0715                     	;# 
   331  0716                     	;# 
   332  0717                     	;# 
   333  0718                     	;# 
   334  0719                     	;# 
   335  0891                     	;# 
   336  0891                     	;# 
   337  0891                     	;# 
   338  0891                     	;# 
   339  0891                     	;# 
   340  0891                     	;# 
   341  0892                     	;# 
   342  0892                     	;# 
   343  0892                     	;# 
   344  0893                     	;# 
   345  0893                     	;# 
   346  0893                     	;# 
   347  0893                     	;# 
   348  0893                     	;# 
   349  0893                     	;# 
   350  0894                     	;# 
   351  0894                     	;# 
   352  0894                     	;# 
   353  0895                     	;# 
   354  0895                     	;# 
   355  0895                     	;# 
   356  0896                     	;# 
   357  0896                     	;# 
   358  0896                     	;# 
   359  089B                     	;# 
   360  0911                     	;# 
   361  0912                     	;# 
   362  0913                     	;# 
   363  0914                     	;# 
   364  0915                     	;# 
   365  0916                     	;# 
   366  0918                     	;# 
   367  0919                     	;# 
   368  091A                     	;# 
   369  091B                     	;# 
   370  091C                     	;# 
   371  091D                     	;# 
   372  091E                     	;# 
   373  091F                     	;# 
   374  0E0F                     	;# 
   375  0E10                     	;# 
   376  0E11                     	;# 
   377  0E12                     	;# 
   378  0E13                     	;# 
   379  0E14                     	;# 
   380  0E15                     	;# 
   381  0E16                     	;# 
   382  0E17                     	;# 
   383  0E18                     	;# 
   384  0E19                     	;# 
   385  0E1A                     	;# 
   386  0E1B                     	;# 
   387  0E1C                     	;# 
   388  0E1D                     	;# 
   389  0E1E                     	;# 
   390  0E1F                     	;# 
   391  0E20                     	;# 
   392  0E21                     	;# 
   393  0E22                     	;# 
   394  0E24                     	;# 
   395  0E25                     	;# 
   396  0E28                     	;# 
   397  0E29                     	;# 
   398  0E2A                     	;# 
   399  0E2B                     	;# 
   400  0E2C                     	;# 
   401  0E2D                     	;# 
   402  0E2E                     	;# 
   403  0E2F                     	;# 
   404  0E90                     	;# 
   405  0E91                     	;# 
   406  0E92                     	;# 
   407  0E94                     	;# 
   408  0E95                     	;# 
   409  0E9C                     	;# 
   410  0E9D                     	;# 
   411  0E9E                     	;# 
   412  0E9F                     	;# 
   413  0EA0                     	;# 
   414  0EA1                     	;# 
   415  0EA2                     	;# 
   416  0EA3                     	;# 
   417  0EA4                     	;# 
   418  0EA5                     	;# 
   419  0EA6                     	;# 
   420  0EA7                     	;# 
   421  0F0F                     	;# 
   422  0F10                     	;# 
   423  0F11                     	;# 
   424  0F12                     	;# 
   425  0F13                     	;# 
   426  0F14                     	;# 
   427  0F15                     	;# 
   428  0F16                     	;# 
   429  0F17                     	;# 
   430  0F18                     	;# 
   431  0F19                     	;# 
   432  0F1A                     	;# 
   433  0F1B                     	;# 
   434  0F1C                     	;# 
   435  0F1D                     	;# 
   436  0F1E                     	;# 
   437  0F1F                     	;# 
   438  0F20                     	;# 
   439  0F21                     	;# 
   440  0F22                     	;# 
   441  0F23                     	;# 
   442  0F24                     	;# 
   443  0F25                     	;# 
   444  0F26                     	;# 
   445  0F27                     	;# 
   446  0F28                     	;# 
   447  0F29                     	;# 
   448  0F2A                     	;# 
   449  0F2B                     	;# 
   450  0F2C                     	;# 
   451  0F2D                     	;# 
   452  0F2E                     	;# 
   453  0F2F                     	;# 
   454  0F30                     	;# 
   455  0F31                     	;# 
   456  0F32                     	;# 
   457  0F33                     	;# 
   458  0F34                     	;# 
   459  0F35                     	;# 
   460  0F36                     	;# 
   461  0F37                     	;# 
   462  0FE4                     	;# 
   463  0FE5                     	;# 
   464  0FE6                     	;# 
   465  0FE7                     	;# 
   466  0FE8                     	;# 
   467  0FE9                     	;# 
   468  0FEA                     	;# 
   469  0FEB                     	;# 
   470  0FED                     	;# 
   471  0FEE                     	;# 
   472  0FEF                     	;# 
   473  0000                     	;# 
   474  0001                     	;# 
   475  0002                     	;# 
   476  0003                     	;# 
   477  0004                     	;# 
   478  0005                     	;# 
   479  0006                     	;# 
   480  0007                     	;# 
   481  0008                     	;# 
   482  0009                     	;# 
   483  000A                     	;# 
   484  000B                     	;# 
   485  000C                     	;# 
   486  000D                     	;# 
   487  000E                     	;# 
   488  0010                     	;# 
   489  0011                     	;# 
   490  0012                     	;# 
   491  0013                     	;# 
   492  0014                     	;# 
   493  0015                     	;# 
   494  0015                     	;# 
   495  0016                     	;# 
   496  0016                     	;# 
   497  0017                     	;# 
   498  0018                     	;# 
   499  0019                     	;# 
   500  0019                     	;# 
   501  001A                     	;# 
   502  001B                     	;# 
   503  001C                     	;# 
   504  001D                     	;# 
   505  001E                     	;# 
   506  001F                     	;# 
   507  008C                     	;# 
   508  008D                     	;# 
   509  008E                     	;# 
   510  0090                     	;# 
   511  0091                     	;# 
   512  0092                     	;# 
   513  0093                     	;# 
   514  0094                     	;# 
   515  0097                     	;# 
   516  009B                     	;# 
   517  009B                     	;# 
   518  009C                     	;# 
   519  009D                     	;# 
   520  009E                     	;# 
   521  009F                     	;# 
   522  010C                     	;# 
   523  010D                     	;# 
   524  010E                     	;# 
   525  0111                     	;# 
   526  0112                     	;# 
   527  0113                     	;# 
   528  0114                     	;# 
   529  0115                     	;# 
   530  0116                     	;# 
   531  0117                     	;# 
   532  0118                     	;# 
   533  0119                     	;# 
   534  018C                     	;# 
   535  018D                     	;# 
   536  018E                     	;# 
   537  0197                     	;# 
   538  0199                     	;# 
   539  0199                     	;# 
   540  0199                     	;# 
   541  019A                     	;# 
   542  019A                     	;# 
   543  019A                     	;# 
   544  019B                     	;# 
   545  019B                     	;# 
   546  019B                     	;# 
   547  019B                     	;# 
   548  019B                     	;# 
   549  019C                     	;# 
   550  019C                     	;# 
   551  019C                     	;# 
   552  019D                     	;# 
   553  019D                     	;# 
   554  019D                     	;# 
   555  019E                     	;# 
   556  019E                     	;# 
   557  019E                     	;# 
   558  019F                     	;# 
   559  019F                     	;# 
   560  019F                     	;# 
   561  019F                     	;# 
   562  019F                     	;# 
   563  020C                     	;# 
   564  020D                     	;# 
   565  020E                     	;# 
   566  0211                     	;# 
   567  0211                     	;# 
   568  0212                     	;# 
   569  0212                     	;# 
   570  0213                     	;# 
   571  0213                     	;# 
   572  0214                     	;# 
   573  0214                     	;# 
   574  0215                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0216                     	;# 
   579  0216                     	;# 
   580  0217                     	;# 
   581  0217                     	;# 
   582  0219                     	;# 
   583  021A                     	;# 
   584  021B                     	;# 
   585  021C                     	;# 
   586  021D                     	;# 
   587  021D                     	;# 
   588  021E                     	;# 
   589  021F                     	;# 
   590  028C                     	;# 
   591  028D                     	;# 
   592  028E                     	;# 
   593  0291                     	;# 
   594  0291                     	;# 
   595  0292                     	;# 
   596  0293                     	;# 
   597  0294                     	;# 
   598  0295                     	;# 
   599  0295                     	;# 
   600  0296                     	;# 
   601  0297                     	;# 
   602  0298                     	;# 
   603  029F                     	;# 
   604  030C                     	;# 
   605  030D                     	;# 
   606  030E                     	;# 
   607  0311                     	;# 
   608  0311                     	;# 
   609  0312                     	;# 
   610  0313                     	;# 
   611  0314                     	;# 
   612  0315                     	;# 
   613  0315                     	;# 
   614  0316                     	;# 
   615  0317                     	;# 
   616  0318                     	;# 
   617  038C                     	;# 
   618  038D                     	;# 
   619  038E                     	;# 
   620  0391                     	;# 
   621  0392                     	;# 
   622  0393                     	;# 
   623  0394                     	;# 
   624  0395                     	;# 
   625  0396                     	;# 
   626  0397                     	;# 
   627  0398                     	;# 
   628  0399                     	;# 
   629  039A                     	;# 
   630  039C                     	;# 
   631  039D                     	;# 
   632  039E                     	;# 
   633  039F                     	;# 
   634  0411                     	;# 
   635  0411                     	;# 
   636  0412                     	;# 
   637  0413                     	;# 
   638  0414                     	;# 
   639  0415                     	;# 
   640  0416                     	;# 
   641  0417                     	;# 
   642  0418                     	;# 
   643  0418                     	;# 
   644  0419                     	;# 
   645  041A                     	;# 
   646  041B                     	;# 
   647  041C                     	;# 
   648  041D                     	;# 
   649  041E                     	;# 
   650  041F                     	;# 
   651  0498                     	;# 
   652  0498                     	;# 
   653  0499                     	;# 
   654  049A                     	;# 
   655  049B                     	;# 
   656  049B                     	;# 
   657  049C                     	;# 
   658  049D                     	;# 
   659  049E                     	;# 
   660  049F                     	;# 
   661  0617                     	;# 
   662  0618                     	;# 
   663  0619                     	;# 
   664  0619                     	;# 
   665  061A                     	;# 
   666  061B                     	;# 
   667  061C                     	;# 
   668  061C                     	;# 
   669  061F                     	;# 
   670  0691                     	;# 
   671  0692                     	;# 
   672  0693                     	;# 
   673  0694                     	;# 
   674  0695                     	;# 
   675  0696                     	;# 
   676  0697                     	;# 
   677  0698                     	;# 
   678  0699                     	;# 
   679  0711                     	;# 
   680  0712                     	;# 
   681  0713                     	;# 
   682  0714                     	;# 
   683  0715                     	;# 
   684  0716                     	;# 
   685  0717                     	;# 
   686  0718                     	;# 
   687  0719                     	;# 
   688  0891                     	;# 
   689  0891                     	;# 
   690  0891                     	;# 
   691  0891                     	;# 
   692  0891                     	;# 
   693  0891                     	;# 
   694  0892                     	;# 
   695  0892                     	;# 
   696  0892                     	;# 
   697  0893                     	;# 
   698  0893                     	;# 
   699  0893                     	;# 
   700  0893                     	;# 
   701  0893                     	;# 
   702  0893                     	;# 
   703  0894                     	;# 
   704  0894                     	;# 
   705  0894                     	;# 
   706  0895                     	;# 
   707  0895                     	;# 
   708  0895                     	;# 
   709  0896                     	;# 
   710  0896                     	;# 
   711  0896                     	;# 
   712  089B                     	;# 
   713  0911                     	;# 
   714  0912                     	;# 
   715  0913                     	;# 
   716  0914                     	;# 
   717  0915                     	;# 
   718  0916                     	;# 
   719  0918                     	;# 
   720  0919                     	;# 
   721  091A                     	;# 
   722  091B                     	;# 
   723  091C                     	;# 
   724  091D                     	;# 
   725  091E                     	;# 
   726  091F                     	;# 
   727  0E0F                     	;# 
   728  0E10                     	;# 
   729  0E11                     	;# 
   730  0E12                     	;# 
   731  0E13                     	;# 
   732  0E14                     	;# 
   733  0E15                     	;# 
   734  0E16                     	;# 
   735  0E17                     	;# 
   736  0E18                     	;# 
   737  0E19                     	;# 
   738  0E1A                     	;# 
   739  0E1B                     	;# 
   740  0E1C                     	;# 
   741  0E1D                     	;# 
   742  0E1E                     	;# 
   743  0E1F                     	;# 
   744  0E20                     	;# 
   745  0E21                     	;# 
   746  0E22                     	;# 
   747  0E24                     	;# 
   748  0E25                     	;# 
   749  0E28                     	;# 
   750  0E29                     	;# 
   751  0E2A                     	;# 
   752  0E2B                     	;# 
   753  0E2C                     	;# 
   754  0E2D                     	;# 
   755  0E2E                     	;# 
   756  0E2F                     	;# 
   757  0E90                     	;# 
   758  0E91                     	;# 
   759  0E92                     	;# 
   760  0E94                     	;# 
   761  0E95                     	;# 
   762  0E9C                     	;# 
   763  0E9D                     	;# 
   764  0E9E                     	;# 
   765  0E9F                     	;# 
   766  0EA0                     	;# 
   767  0EA1                     	;# 
   768  0EA2                     	;# 
   769  0EA3                     	;# 
   770  0EA4                     	;# 
   771  0EA5                     	;# 
   772  0EA6                     	;# 
   773  0EA7                     	;# 
   774  0F0F                     	;# 
   775  0F10                     	;# 
   776  0F11                     	;# 
   777  0F12                     	;# 
   778  0F13                     	;# 
   779  0F14                     	;# 
   780  0F15                     	;# 
   781  0F16                     	;# 
   782  0F17                     	;# 
   783  0F18                     	;# 
   784  0F19                     	;# 
   785  0F1A                     	;# 
   786  0F1B                     	;# 
   787  0F1C                     	;# 
   788  0F1D                     	;# 
   789  0F1E                     	;# 
   790  0F1F                     	;# 
   791  0F20                     	;# 
   792  0F21                     	;# 
   793  0F22                     	;# 
   794  0F23                     	;# 
   795  0F24                     	;# 
   796  0F25                     	;# 
   797  0F26                     	;# 
   798  0F27                     	;# 
   799  0F28                     	;# 
   800  0F29                     	;# 
   801  0F2A                     	;# 
   802  0F2B                     	;# 
   803  0F2C                     	;# 
   804  0F2D                     	;# 
   805  0F2E                     	;# 
   806  0F2F                     	;# 
   807  0F30                     	;# 
   808  0F31                     	;# 
   809  0F32                     	;# 
   810  0F33                     	;# 
   811  0F34                     	;# 
   812  0F35                     	;# 
   813  0F36                     	;# 
   814  0F37                     	;# 
   815  0FE4                     	;# 
   816  0FE5                     	;# 
   817  0FE6                     	;# 
   818  0FE7                     	;# 
   819  0FE8                     	;# 
   820  0FE9                     	;# 
   821  0FEA                     	;# 
   822  0FEB                     	;# 
   823  0FED                     	;# 
   824  0FEE                     	;# 
   825  0FEF                     	;# 
   826  0000                     	;# 
   827  0001                     	;# 
   828  0002                     	;# 
   829  0003                     	;# 
   830  0004                     	;# 
   831  0005                     	;# 
   832  0006                     	;# 
   833  0007                     	;# 
   834  0008                     	;# 
   835  0009                     	;# 
   836  000A                     	;# 
   837  000B                     	;# 
   838  000C                     	;# 
   839  000D                     	;# 
   840  000E                     	;# 
   841  0010                     	;# 
   842  0011                     	;# 
   843  0012                     	;# 
   844  0013                     	;# 
   845  0014                     	;# 
   846  0015                     	;# 
   847  0015                     	;# 
   848  0016                     	;# 
   849  0016                     	;# 
   850  0017                     	;# 
   851  0018                     	;# 
   852  0019                     	;# 
   853  0019                     	;# 
   854  001A                     	;# 
   855  001B                     	;# 
   856  001C                     	;# 
   857  001D                     	;# 
   858  001E                     	;# 
   859  001F                     	;# 
   860  008C                     	;# 
   861  008D                     	;# 
   862  008E                     	;# 
   863  0090                     	;# 
   864  0091                     	;# 
   865  0092                     	;# 
   866  0093                     	;# 
   867  0094                     	;# 
   868  0097                     	;# 
   869  009B                     	;# 
   870  009B                     	;# 
   871  009C                     	;# 
   872  009D                     	;# 
   873  009E                     	;# 
   874  009F                     	;# 
   875  010C                     	;# 
   876  010D                     	;# 
   877  010E                     	;# 
   878  0111                     	;# 
   879  0112                     	;# 
   880  0113                     	;# 
   881  0114                     	;# 
   882  0115                     	;# 
   883  0116                     	;# 
   884  0117                     	;# 
   885  0118                     	;# 
   886  0119                     	;# 
   887  018C                     	;# 
   888  018D                     	;# 
   889  018E                     	;# 
   890  0197                     	;# 
   891  0199                     	;# 
   892  0199                     	;# 
   893  0199                     	;# 
   894  019A                     	;# 
   895  019A                     	;# 
   896  019A                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019B                     	;# 
   902  019C                     	;# 
   903  019C                     	;# 
   904  019C                     	;# 
   905  019D                     	;# 
   906  019D                     	;# 
   907  019D                     	;# 
   908  019E                     	;# 
   909  019E                     	;# 
   910  019E                     	;# 
   911  019F                     	;# 
   912  019F                     	;# 
   913  019F                     	;# 
   914  019F                     	;# 
   915  019F                     	;# 
   916  020C                     	;# 
   917  020D                     	;# 
   918  020E                     	;# 
   919  0211                     	;# 
   920  0211                     	;# 
   921  0212                     	;# 
   922  0212                     	;# 
   923  0213                     	;# 
   924  0213                     	;# 
   925  0214                     	;# 
   926  0214                     	;# 
   927  0215                     	;# 
   928  0215                     	;# 
   929  0215                     	;# 
   930  0215                     	;# 
   931  0216                     	;# 
   932  0216                     	;# 
   933  0217                     	;# 
   934  0217                     	;# 
   935  0219                     	;# 
   936  021A                     	;# 
   937  021B                     	;# 
   938  021C                     	;# 
   939  021D                     	;# 
   940  021D                     	;# 
   941  021E                     	;# 
   942  021F                     	;# 
   943  028C                     	;# 
   944  028D                     	;# 
   945  028E                     	;# 
   946  0291                     	;# 
   947  0291                     	;# 
   948  0292                     	;# 
   949  0293                     	;# 
   950  0294                     	;# 
   951  0295                     	;# 
   952  0295                     	;# 
   953  0296                     	;# 
   954  0297                     	;# 
   955  0298                     	;# 
   956  029F                     	;# 
   957  030C                     	;# 
   958  030D                     	;# 
   959  030E                     	;# 
   960  0311                     	;# 
   961  0311                     	;# 
   962  0312                     	;# 
   963  0313                     	;# 
   964  0314                     	;# 
   965  0315                     	;# 
   966  0315                     	;# 
   967  0316                     	;# 
   968  0317                     	;# 
   969  0318                     	;# 
   970  038C                     	;# 
   971  038D                     	;# 
   972  038E                     	;# 
   973  0391                     	;# 
   974  0392                     	;# 
   975  0393                     	;# 
   976  0394                     	;# 
   977  0395                     	;# 
   978  0396                     	;# 
   979  0397                     	;# 
   980  0398                     	;# 
   981  0399                     	;# 
   982  039A                     	;# 
   983  039C                     	;# 
   984  039D                     	;# 
   985  039E                     	;# 
   986  039F                     	;# 
   987  0411                     	;# 
   988  0411                     	;# 
   989  0412                     	;# 
   990  0413                     	;# 
   991  0414                     	;# 
   992  0415                     	;# 
   993  0416                     	;# 
   994  0417                     	;# 
   995  0418                     	;# 
   996  0418                     	;# 
   997  0419                     	;# 
   998  041A                     	;# 
   999  041B                     	;# 
  1000  041C                     	;# 
  1001  041D                     	;# 
  1002  041E                     	;# 
  1003  041F                     	;# 
  1004  0498                     	;# 
  1005  0498                     	;# 
  1006  0499                     	;# 
  1007  049A                     	;# 
  1008  049B                     	;# 
  1009  049B                     	;# 
  1010  049C                     	;# 
  1011  049D                     	;# 
  1012  049E                     	;# 
  1013  049F                     	;# 
  1014  0617                     	;# 
  1015  0618                     	;# 
  1016  0619                     	;# 
  1017  0619                     	;# 
  1018  061A                     	;# 
  1019  061B                     	;# 
  1020  061C                     	;# 
  1021  061C                     	;# 
  1022  061F                     	;# 
  1023  0691                     	;# 
  1024  0692                     	;# 
  1025  0693                     	;# 
  1026  0694                     	;# 
  1027  0695                     	;# 
  1028  0696                     	;# 
  1029  0697                     	;# 
  1030  0698                     	;# 
  1031  0699                     	;# 
  1032  0711                     	;# 
  1033  0712                     	;# 
  1034  0713                     	;# 
  1035  0714                     	;# 
  1036  0715                     	;# 
  1037  0716                     	;# 
  1038  0717                     	;# 
  1039  0718                     	;# 
  1040  0719                     	;# 
  1041  0891                     	;# 
  1042  0891                     	;# 
  1043  0891                     	;# 
  1044  0891                     	;# 
  1045  0891                     	;# 
  1046  0891                     	;# 
  1047  0892                     	;# 
  1048  0892                     	;# 
  1049  0892                     	;# 
  1050  0893                     	;# 
  1051  0893                     	;# 
  1052  0893                     	;# 
  1053  0893                     	;# 
  1054  0893                     	;# 
  1055  0893                     	;# 
  1056  0894                     	;# 
  1057  0894                     	;# 
  1058  0894                     	;# 
  1059  0895                     	;# 
  1060  0895                     	;# 
  1061  0895                     	;# 
  1062  0896                     	;# 
  1063  0896                     	;# 
  1064  0896                     	;# 
  1065  089B                     	;# 
  1066  0911                     	;# 
  1067  0912                     	;# 
  1068  0913                     	;# 
  1069  0914                     	;# 
  1070  0915                     	;# 
  1071  0916                     	;# 
  1072  0918                     	;# 
  1073  0919                     	;# 
  1074  091A                     	;# 
  1075  091B                     	;# 
  1076  091C                     	;# 
  1077  091D                     	;# 
  1078  091E                     	;# 
  1079  091F                     	;# 
  1080  0E0F                     	;# 
  1081  0E10                     	;# 
  1082  0E11                     	;# 
  1083  0E12                     	;# 
  1084  0E13                     	;# 
  1085  0E14                     	;# 
  1086  0E15                     	;# 
  1087  0E16                     	;# 
  1088  0E17                     	;# 
  1089  0E18                     	;# 
  1090  0E19                     	;# 
  1091  0E1A                     	;# 
  1092  0E1B                     	;# 
  1093  0E1C                     	;# 
  1094  0E1D                     	;# 
  1095  0E1E                     	;# 
  1096  0E1F                     	;# 
  1097  0E20                     	;# 
  1098  0E21                     	;# 
  1099  0E22                     	;# 
  1100  0E24                     	;# 
  1101  0E25                     	;# 
  1102  0E28                     	;# 
  1103  0E29                     	;# 
  1104  0E2A                     	;# 
  1105  0E2B                     	;# 
  1106  0E2C                     	;# 
  1107  0E2D                     	;# 
  1108  0E2E                     	;# 
  1109  0E2F                     	;# 
  1110  0E90                     	;# 
  1111  0E91                     	;# 
  1112  0E92                     	;# 
  1113  0E94                     	;# 
  1114  0E95                     	;# 
  1115  0E9C                     	;# 
  1116  0E9D                     	;# 
  1117  0E9E                     	;# 
  1118  0E9F                     	;# 
  1119  0EA0                     	;# 
  1120  0EA1                     	;# 
  1121  0EA2                     	;# 
  1122  0EA3                     	;# 
  1123  0EA4                     	;# 
  1124  0EA5                     	;# 
  1125  0EA6                     	;# 
  1126  0EA7                     	;# 
  1127  0F0F                     	;# 
  1128  0F10                     	;# 
  1129  0F11                     	;# 
  1130  0F12                     	;# 
  1131  0F13                     	;# 
  1132  0F14                     	;# 
  1133  0F15                     	;# 
  1134  0F16                     	;# 
  1135  0F17                     	;# 
  1136  0F18                     	;# 
  1137  0F19                     	;# 
  1138  0F1A                     	;# 
  1139  0F1B                     	;# 
  1140  0F1C                     	;# 
  1141  0F1D                     	;# 
  1142  0F1E                     	;# 
  1143  0F1F                     	;# 
  1144  0F20                     	;# 
  1145  0F21                     	;# 
  1146  0F22                     	;# 
  1147  0F23                     	;# 
  1148  0F24                     	;# 
  1149  0F25                     	;# 
  1150  0F26                     	;# 
  1151  0F27                     	;# 
  1152  0F28                     	;# 
  1153  0F29                     	;# 
  1154  0F2A                     	;# 
  1155  0F2B                     	;# 
  1156  0F2C                     	;# 
  1157  0F2D                     	;# 
  1158  0F2E                     	;# 
  1159  0F2F                     	;# 
  1160  0F30                     	;# 
  1161  0F31                     	;# 
  1162  0F32                     	;# 
  1163  0F33                     	;# 
  1164  0F34                     	;# 
  1165  0F35                     	;# 
  1166  0F36                     	;# 
  1167  0F37                     	;# 
  1168  0FE4                     	;# 
  1169  0FE5                     	;# 
  1170  0FE6                     	;# 
  1171  0FE7                     	;# 
  1172  0FE8                     	;# 
  1173  0FE9                     	;# 
  1174  0FEA                     	;# 
  1175  0FEB                     	;# 
  1176  0FED                     	;# 
  1177  0FEE                     	;# 
  1178  0FEF                     	;# 
  1179  0000                     	;# 
  1180  0001                     	;# 
  1181  0002                     	;# 
  1182  0003                     	;# 
  1183  0004                     	;# 
  1184  0005                     	;# 
  1185  0006                     	;# 
  1186  0007                     	;# 
  1187  0008                     	;# 
  1188  0009                     	;# 
  1189  000A                     	;# 
  1190  000B                     	;# 
  1191  000C                     	;# 
  1192  000D                     	;# 
  1193  000E                     	;# 
  1194  0010                     	;# 
  1195  0011                     	;# 
  1196  0012                     	;# 
  1197  0013                     	;# 
  1198  0014                     	;# 
  1199  0015                     	;# 
  1200  0015                     	;# 
  1201  0016                     	;# 
  1202  0016                     	;# 
  1203  0017                     	;# 
  1204  0018                     	;# 
  1205  0019                     	;# 
  1206  0019                     	;# 
  1207  001A                     	;# 
  1208  001B                     	;# 
  1209  001C                     	;# 
  1210  001D                     	;# 
  1211  001E                     	;# 
  1212  001F                     	;# 
  1213  008C                     	;# 
  1214  008D                     	;# 
  1215  008E                     	;# 
  1216  0090                     	;# 
  1217  0091                     	;# 
  1218  0092                     	;# 
  1219  0093                     	;# 
  1220  0094                     	;# 
  1221  0097                     	;# 
  1222  009B                     	;# 
  1223  009B                     	;# 
  1224  009C                     	;# 
  1225  009D                     	;# 
  1226  009E                     	;# 
  1227  009F                     	;# 
  1228  010C                     	;# 
  1229  010D                     	;# 
  1230  010E                     	;# 
  1231  0111                     	;# 
  1232  0112                     	;# 
  1233  0113                     	;# 
  1234  0114                     	;# 
  1235  0115                     	;# 
  1236  0116                     	;# 
  1237  0117                     	;# 
  1238  0118                     	;# 
  1239  0119                     	;# 
  1240  018C                     	;# 
  1241  018D                     	;# 
  1242  018E                     	;# 
  1243  0197                     	;# 
  1244  0199                     	;# 
  1245  0199                     	;# 
  1246  0199                     	;# 
  1247  019A                     	;# 
  1248  019A                     	;# 
  1249  019A                     	;# 
  1250  019B                     	;# 
  1251  019B                     	;# 
  1252  019B                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019C                     	;# 
  1256  019C                     	;# 
  1257  019C                     	;# 
  1258  019D                     	;# 
  1259  019D                     	;# 
  1260  019D                     	;# 
  1261  019E                     	;# 
  1262  019E                     	;# 
  1263  019E                     	;# 
  1264  019F                     	;# 
  1265  019F                     	;# 
  1266  019F                     	;# 
  1267  019F                     	;# 
  1268  019F                     	;# 
  1269  020C                     	;# 
  1270  020D                     	;# 
  1271  020E                     	;# 
  1272  0211                     	;# 
  1273  0211                     	;# 
  1274  0212                     	;# 
  1275  0212                     	;# 
  1276  0213                     	;# 
  1277  0213                     	;# 
  1278  0214                     	;# 
  1279  0214                     	;# 
  1280  0215                     	;# 
  1281  0215                     	;# 
  1282  0215                     	;# 
  1283  0215                     	;# 
  1284  0216                     	;# 
  1285  0216                     	;# 
  1286  0217                     	;# 
  1287  0217                     	;# 
  1288  0219                     	;# 
  1289  021A                     	;# 
  1290  021B                     	;# 
  1291  021C                     	;# 
  1292  021D                     	;# 
  1293  021D                     	;# 
  1294  021E                     	;# 
  1295  021F                     	;# 
  1296  028C                     	;# 
  1297  028D                     	;# 
  1298  028E                     	;# 
  1299  0291                     	;# 
  1300  0291                     	;# 
  1301  0292                     	;# 
  1302  0293                     	;# 
  1303  0294                     	;# 
  1304  0295                     	;# 
  1305  0295                     	;# 
  1306  0296                     	;# 
  1307  0297                     	;# 
  1308  0298                     	;# 
  1309  029F                     	;# 
  1310  030C                     	;# 
  1311  030D                     	;# 
  1312  030E                     	;# 
  1313  0311                     	;# 
  1314  0311                     	;# 
  1315  0312                     	;# 
  1316  0313                     	;# 
  1317  0314                     	;# 
  1318  0315                     	;# 
  1319  0315                     	;# 
  1320  0316                     	;# 
  1321  0317                     	;# 
  1322  0318                     	;# 
  1323  038C                     	;# 
  1324  038D                     	;# 
  1325  038E                     	;# 
  1326  0391                     	;# 
  1327  0392                     	;# 
  1328  0393                     	;# 
  1329  0394                     	;# 
  1330  0395                     	;# 
  1331  0396                     	;# 
  1332  0397                     	;# 
  1333  0398                     	;# 
  1334  0399                     	;# 
  1335  039A                     	;# 
  1336  039C                     	;# 
  1337  039D                     	;# 
  1338  039E                     	;# 
  1339  039F                     	;# 
  1340  0411                     	;# 
  1341  0411                     	;# 
  1342  0412                     	;# 
  1343  0413                     	;# 
  1344  0414                     	;# 
  1345  0415                     	;# 
  1346  0416                     	;# 
  1347  0417                     	;# 
  1348  0418                     	;# 
  1349  0418                     	;# 
  1350  0419                     	;# 
  1351  041A                     	;# 
  1352  041B                     	;# 
  1353  041C                     	;# 
  1354  041D                     	;# 
  1355  041E                     	;# 
  1356  041F                     	;# 
  1357  0498                     	;# 
  1358  0498                     	;# 
  1359  0499                     	;# 
  1360  049A                     	;# 
  1361  049B                     	;# 
  1362  049B                     	;# 
  1363  049C                     	;# 
  1364  049D                     	;# 
  1365  049E                     	;# 
  1366  049F                     	;# 
  1367  0617                     	;# 
  1368  0618                     	;# 
  1369  0619                     	;# 
  1370  0619                     	;# 
  1371  061A                     	;# 
  1372  061B                     	;# 
  1373  061C                     	;# 
  1374  061C                     	;# 
  1375  061F                     	;# 
  1376  0691                     	;# 
  1377  0692                     	;# 
  1378  0693                     	;# 
  1379  0694                     	;# 
  1380  0695                     	;# 
  1381  0696                     	;# 
  1382  0697                     	;# 
  1383  0698                     	;# 
  1384  0699                     	;# 
  1385  0711                     	;# 
  1386  0712                     	;# 
  1387  0713                     	;# 
  1388  0714                     	;# 
  1389  0715                     	;# 
  1390  0716                     	;# 
  1391  0717                     	;# 
  1392  0718                     	;# 
  1393  0719                     	;# 
  1394  0891                     	;# 
  1395  0891                     	;# 
  1396  0891                     	;# 
  1397  0891                     	;# 
  1398  0891                     	;# 
  1399  0891                     	;# 
  1400  0892                     	;# 
  1401  0892                     	;# 
  1402  0892                     	;# 
  1403  0893                     	;# 
  1404  0893                     	;# 
  1405  0893                     	;# 
  1406  0893                     	;# 
  1407  0893                     	;# 
  1408  0893                     	;# 
  1409  0894                     	;# 
  1410  0894                     	;# 
  1411  0894                     	;# 
  1412  0895                     	;# 
  1413  0895                     	;# 
  1414  0895                     	;# 
  1415  0896                     	;# 
  1416  0896                     	;# 
  1417  0896                     	;# 
  1418  089B                     	;# 
  1419  0911                     	;# 
  1420  0912                     	;# 
  1421  0913                     	;# 
  1422  0914                     	;# 
  1423  0915                     	;# 
  1424  0916                     	;# 
  1425  0918                     	;# 
  1426  0919                     	;# 
  1427  091A                     	;# 
  1428  091B                     	;# 
  1429  091C                     	;# 
  1430  091D                     	;# 
  1431  091E                     	;# 
  1432  091F                     	;# 
  1433  0E0F                     	;# 
  1434  0E10                     	;# 
  1435  0E11                     	;# 
  1436  0E12                     	;# 
  1437  0E13                     	;# 
  1438  0E14                     	;# 
  1439  0E15                     	;# 
  1440  0E16                     	;# 
  1441  0E17                     	;# 
  1442  0E18                     	;# 
  1443  0E19                     	;# 
  1444  0E1A                     	;# 
  1445  0E1B                     	;# 
  1446  0E1C                     	;# 
  1447  0E1D                     	;# 
  1448  0E1E                     	;# 
  1449  0E1F                     	;# 
  1450  0E20                     	;# 
  1451  0E21                     	;# 
  1452  0E22                     	;# 
  1453  0E24                     	;# 
  1454  0E25                     	;# 
  1455  0E28                     	;# 
  1456  0E29                     	;# 
  1457  0E2A                     	;# 
  1458  0E2B                     	;# 
  1459  0E2C                     	;# 
  1460  0E2D                     	;# 
  1461  0E2E                     	;# 
  1462  0E2F                     	;# 
  1463  0E90                     	;# 
  1464  0E91                     	;# 
  1465  0E92                     	;# 
  1466  0E94                     	;# 
  1467  0E95                     	;# 
  1468  0E9C                     	;# 
  1469  0E9D                     	;# 
  1470  0E9E                     	;# 
  1471  0E9F                     	;# 
  1472  0EA0                     	;# 
  1473  0EA1                     	;# 
  1474  0EA2                     	;# 
  1475  0EA3                     	;# 
  1476  0EA4                     	;# 
  1477  0EA5                     	;# 
  1478  0EA6                     	;# 
  1479  0EA7                     	;# 
  1480  0F0F                     	;# 
  1481  0F10                     	;# 
  1482  0F11                     	;# 
  1483  0F12                     	;# 
  1484  0F13                     	;# 
  1485  0F14                     	;# 
  1486  0F15                     	;# 
  1487  0F16                     	;# 
  1488  0F17                     	;# 
  1489  0F18                     	;# 
  1490  0F19                     	;# 
  1491  0F1A                     	;# 
  1492  0F1B                     	;# 
  1493  0F1C                     	;# 
  1494  0F1D                     	;# 
  1495  0F1E                     	;# 
  1496  0F1F                     	;# 
  1497  0F20                     	;# 
  1498  0F21                     	;# 
  1499  0F22                     	;# 
  1500  0F23                     	;# 
  1501  0F24                     	;# 
  1502  0F25                     	;# 
  1503  0F26                     	;# 
  1504  0F27                     	;# 
  1505  0F28                     	;# 
  1506  0F29                     	;# 
  1507  0F2A                     	;# 
  1508  0F2B                     	;# 
  1509  0F2C                     	;# 
  1510  0F2D                     	;# 
  1511  0F2E                     	;# 
  1512  0F2F                     	;# 
  1513  0F30                     	;# 
  1514  0F31                     	;# 
  1515  0F32                     	;# 
  1516  0F33                     	;# 
  1517  0F34                     	;# 
  1518  0F35                     	;# 
  1519  0F36                     	;# 
  1520  0F37                     	;# 
  1521  0FE4                     	;# 
  1522  0FE5                     	;# 
  1523  0FE6                     	;# 
  1524  0FE7                     	;# 
  1525  0FE8                     	;# 
  1526  0FE9                     	;# 
  1527  0FEA                     	;# 
  1528  0FEB                     	;# 
  1529  0FED                     	;# 
  1530  0FEE                     	;# 
  1531  0FEF                     	;# 
  1532  0000                     	;# 
  1533  0001                     	;# 
  1534  0002                     	;# 
  1535  0003                     	;# 
  1536  0004                     	;# 
  1537  0005                     	;# 
  1538  0006                     	;# 
  1539  0007                     	;# 
  1540  0008                     	;# 
  1541  0009                     	;# 
  1542  000A                     	;# 
  1543  000B                     	;# 
  1544  000C                     	;# 
  1545  000D                     	;# 
  1546  000E                     	;# 
  1547  0010                     	;# 
  1548  0011                     	;# 
  1549  0012                     	;# 
  1550  0013                     	;# 
  1551  0014                     	;# 
  1552  0015                     	;# 
  1553  0015                     	;# 
  1554  0016                     	;# 
  1555  0016                     	;# 
  1556  0017                     	;# 
  1557  0018                     	;# 
  1558  0019                     	;# 
  1559  0019                     	;# 
  1560  001A                     	;# 
  1561  001B                     	;# 
  1562  001C                     	;# 
  1563  001D                     	;# 
  1564  001E                     	;# 
  1565  001F                     	;# 
  1566  008C                     	;# 
  1567  008D                     	;# 
  1568  008E                     	;# 
  1569  0090                     	;# 
  1570  0091                     	;# 
  1571  0092                     	;# 
  1572  0093                     	;# 
  1573  0094                     	;# 
  1574  0097                     	;# 
  1575  009B                     	;# 
  1576  009B                     	;# 
  1577  009C                     	;# 
  1578  009D                     	;# 
  1579  009E                     	;# 
  1580  009F                     	;# 
  1581  010C                     	;# 
  1582  010D                     	;# 
  1583  010E                     	;# 
  1584  0111                     	;# 
  1585  0112                     	;# 
  1586  0113                     	;# 
  1587  0114                     	;# 
  1588  0115                     	;# 
  1589  0116                     	;# 
  1590  0117                     	;# 
  1591  0118                     	;# 
  1592  0119                     	;# 
  1593  018C                     	;# 
  1594  018D                     	;# 
  1595  018E                     	;# 
  1596  0197                     	;# 
  1597  0199                     	;# 
  1598  0199                     	;# 
  1599  0199                     	;# 
  1600  019A                     	;# 
  1601  019A                     	;# 
  1602  019A                     	;# 
  1603  019B                     	;# 
  1604  019B                     	;# 
  1605  019B                     	;# 
  1606  019B                     	;# 
  1607  019B                     	;# 
  1608  019C                     	;# 
  1609  019C                     	;# 
  1610  019C                     	;# 
  1611  019D                     	;# 
  1612  019D                     	;# 
  1613  019D                     	;# 
  1614  019E                     	;# 
  1615  019E                     	;# 
  1616  019E                     	;# 
  1617  019F                     	;# 
  1618  019F                     	;# 
  1619  019F                     	;# 
  1620  019F                     	;# 
  1621  019F                     	;# 
  1622  020C                     	;# 
  1623  020D                     	;# 
  1624  020E                     	;# 
  1625  0211                     	;# 
  1626  0211                     	;# 
  1627  0212                     	;# 
  1628  0212                     	;# 
  1629  0213                     	;# 
  1630  0213                     	;# 
  1631  0214                     	;# 
  1632  0214                     	;# 
  1633  0215                     	;# 
  1634  0215                     	;# 
  1635  0215                     	;# 
  1636  0215                     	;# 
  1637  0216                     	;# 
  1638  0216                     	;# 
  1639  0217                     	;# 
  1640  0217                     	;# 
  1641  0219                     	;# 
  1642  021A                     	;# 
  1643  021B                     	;# 
  1644  021C                     	;# 
  1645  021D                     	;# 
  1646  021D                     	;# 
  1647  021E                     	;# 
  1648  021F                     	;# 
  1649  028C                     	;# 
  1650  028D                     	;# 
  1651  028E                     	;# 
  1652  0291                     	;# 
  1653  0291                     	;# 
  1654  0292                     	;# 
  1655  0293                     	;# 
  1656  0294                     	;# 
  1657  0295                     	;# 
  1658  0295                     	;# 
  1659  0296                     	;# 
  1660  0297                     	;# 
  1661  0298                     	;# 
  1662  029F                     	;# 
  1663  030C                     	;# 
  1664  030D                     	;# 
  1665  030E                     	;# 
  1666  0311                     	;# 
  1667  0311                     	;# 
  1668  0312                     	;# 
  1669  0313                     	;# 
  1670  0314                     	;# 
  1671  0315                     	;# 
  1672  0315                     	;# 
  1673  0316                     	;# 
  1674  0317                     	;# 
  1675  0318                     	;# 
  1676  038C                     	;# 
  1677  038D                     	;# 
  1678  038E                     	;# 
  1679  0391                     	;# 
  1680  0392                     	;# 
  1681  0393                     	;# 
  1682  0394                     	;# 
  1683  0395                     	;# 
  1684  0396                     	;# 
  1685  0397                     	;# 
  1686  0398                     	;# 
  1687  0399                     	;# 
  1688  039A                     	;# 
  1689  039C                     	;# 
  1690  039D                     	;# 
  1691  039E                     	;# 
  1692  039F                     	;# 
  1693  0411                     	;# 
  1694  0411                     	;# 
  1695  0412                     	;# 
  1696  0413                     	;# 
  1697  0414                     	;# 
  1698  0415                     	;# 
  1699  0416                     	;# 
  1700  0417                     	;# 
  1701  0418                     	;# 
  1702  0418                     	;# 
  1703  0419                     	;# 
  1704  041A                     	;# 
  1705  041B                     	;# 
  1706  041C                     	;# 
  1707  041D                     	;# 
  1708  041E                     	;# 
  1709  041F                     	;# 
  1710  0498                     	;# 
  1711  0498                     	;# 
  1712  0499                     	;# 
  1713  049A                     	;# 
  1714  049B                     	;# 
  1715  049B                     	;# 
  1716  049C                     	;# 
  1717  049D                     	;# 
  1718  049E                     	;# 
  1719  049F                     	;# 
  1720  0617                     	;# 
  1721  0618                     	;# 
  1722  0619                     	;# 
  1723  0619                     	;# 
  1724  061A                     	;# 
  1725  061B                     	;# 
  1726  061C                     	;# 
  1727  061C                     	;# 
  1728  061F                     	;# 
  1729  0691                     	;# 
  1730  0692                     	;# 
  1731  0693                     	;# 
  1732  0694                     	;# 
  1733  0695                     	;# 
  1734  0696                     	;# 
  1735  0697                     	;# 
  1736  0698                     	;# 
  1737  0699                     	;# 
  1738  0711                     	;# 
  1739  0712                     	;# 
  1740  0713                     	;# 
  1741  0714                     	;# 
  1742  0715                     	;# 
  1743  0716                     	;# 
  1744  0717                     	;# 
  1745  0718                     	;# 
  1746  0719                     	;# 
  1747  0891                     	;# 
  1748  0891                     	;# 
  1749  0891                     	;# 
  1750  0891                     	;# 
  1751  0891                     	;# 
  1752  0891                     	;# 
  1753  0892                     	;# 
  1754  0892                     	;# 
  1755  0892                     	;# 
  1756  0893                     	;# 
  1757  0893                     	;# 
  1758  0893                     	;# 
  1759  0893                     	;# 
  1760  0893                     	;# 
  1761  0893                     	;# 
  1762  0894                     	;# 
  1763  0894                     	;# 
  1764  0894                     	;# 
  1765  0895                     	;# 
  1766  0895                     	;# 
  1767  0895                     	;# 
  1768  0896                     	;# 
  1769  0896                     	;# 
  1770  0896                     	;# 
  1771  089B                     	;# 
  1772  0911                     	;# 
  1773  0912                     	;# 
  1774  0913                     	;# 
  1775  0914                     	;# 
  1776  0915                     	;# 
  1777  0916                     	;# 
  1778  0918                     	;# 
  1779  0919                     	;# 
  1780  091A                     	;# 
  1781  091B                     	;# 
  1782  091C                     	;# 
  1783  091D                     	;# 
  1784  091E                     	;# 
  1785  091F                     	;# 
  1786  0E0F                     	;# 
  1787  0E10                     	;# 
  1788  0E11                     	;# 
  1789  0E12                     	;# 
  1790  0E13                     	;# 
  1791  0E14                     	;# 
  1792  0E15                     	;# 
  1793  0E16                     	;# 
  1794  0E17                     	;# 
  1795  0E18                     	;# 
  1796  0E19                     	;# 
  1797  0E1A                     	;# 
  1798  0E1B                     	;# 
  1799  0E1C                     	;# 
  1800  0E1D                     	;# 
  1801  0E1E                     	;# 
  1802  0E1F                     	;# 
  1803  0E20                     	;# 
  1804  0E21                     	;# 
  1805  0E22                     	;# 
  1806  0E24                     	;# 
  1807  0E25                     	;# 
  1808  0E28                     	;# 
  1809  0E29                     	;# 
  1810  0E2A                     	;# 
  1811  0E2B                     	;# 
  1812  0E2C                     	;# 
  1813  0E2D                     	;# 
  1814  0E2E                     	;# 
  1815  0E2F                     	;# 
  1816  0E90                     	;# 
  1817  0E91                     	;# 
  1818  0E92                     	;# 
  1819  0E94                     	;# 
  1820  0E95                     	;# 
  1821  0E9C                     	;# 
  1822  0E9D                     	;# 
  1823  0E9E                     	;# 
  1824  0E9F                     	;# 
  1825  0EA0                     	;# 
  1826  0EA1                     	;# 
  1827  0EA2                     	;# 
  1828  0EA3                     	;# 
  1829  0EA4                     	;# 
  1830  0EA5                     	;# 
  1831  0EA6                     	;# 
  1832  0EA7                     	;# 
  1833  0F0F                     	;# 
  1834  0F10                     	;# 
  1835  0F11                     	;# 
  1836  0F12                     	;# 
  1837  0F13                     	;# 
  1838  0F14                     	;# 
  1839  0F15                     	;# 
  1840  0F16                     	;# 
  1841  0F17                     	;# 
  1842  0F18                     	;# 
  1843  0F19                     	;# 
  1844  0F1A                     	;# 
  1845  0F1B                     	;# 
  1846  0F1C                     	;# 
  1847  0F1D                     	;# 
  1848  0F1E                     	;# 
  1849  0F1F                     	;# 
  1850  0F20                     	;# 
  1851  0F21                     	;# 
  1852  0F22                     	;# 
  1853  0F23                     	;# 
  1854  0F24                     	;# 
  1855  0F25                     	;# 
  1856  0F26                     	;# 
  1857  0F27                     	;# 
  1858  0F28                     	;# 
  1859  0F29                     	;# 
  1860  0F2A                     	;# 
  1861  0F2B                     	;# 
  1862  0F2C                     	;# 
  1863  0F2D                     	;# 
  1864  0F2E                     	;# 
  1865  0F2F                     	;# 
  1866  0F30                     	;# 
  1867  0F31                     	;# 
  1868  0F32                     	;# 
  1869  0F33                     	;# 
  1870  0F34                     	;# 
  1871  0F35                     	;# 
  1872  0F36                     	;# 
  1873  0F37                     	;# 
  1874  0FE4                     	;# 
  1875  0FE5                     	;# 
  1876  0FE6                     	;# 
  1877  0FE7                     	;# 
  1878  0FE8                     	;# 
  1879  0FE9                     	;# 
  1880  0FEA                     	;# 
  1881  0FEB                     	;# 
  1882  0FED                     	;# 
  1883  0FEE                     	;# 
  1884  0FEF                     	;# 
  1885  0000                     	;# 
  1886  0001                     	;# 
  1887  0002                     	;# 
  1888  0003                     	;# 
  1889  0004                     	;# 
  1890  0005                     	;# 
  1891  0006                     	;# 
  1892  0007                     	;# 
  1893  0008                     	;# 
  1894  0009                     	;# 
  1895  000A                     	;# 
  1896  000B                     	;# 
  1897  000C                     	;# 
  1898  000D                     	;# 
  1899  000E                     	;# 
  1900  0010                     	;# 
  1901  0011                     	;# 
  1902  0012                     	;# 
  1903  0013                     	;# 
  1904  0014                     	;# 
  1905  0015                     	;# 
  1906  0015                     	;# 
  1907  0016                     	;# 
  1908  0016                     	;# 
  1909  0017                     	;# 
  1910  0018                     	;# 
  1911  0019                     	;# 
  1912  0019                     	;# 
  1913  001A                     	;# 
  1914  001B                     	;# 
  1915  001C                     	;# 
  1916  001D                     	;# 
  1917  001E                     	;# 
  1918  001F                     	;# 
  1919  008C                     	;# 
  1920  008D                     	;# 
  1921  008E                     	;# 
  1922  0090                     	;# 
  1923  0091                     	;# 
  1924  0092                     	;# 
  1925  0093                     	;# 
  1926  0094                     	;# 
  1927  0097                     	;# 
  1928  009B                     	;# 
  1929  009B                     	;# 
  1930  009C                     	;# 
  1931  009D                     	;# 
  1932  009E                     	;# 
  1933  009F                     	;# 
  1934  010C                     	;# 
  1935  010D                     	;# 
  1936  010E                     	;# 
  1937  0111                     	;# 
  1938  0112                     	;# 
  1939  0113                     	;# 
  1940  0114                     	;# 
  1941  0115                     	;# 
  1942  0116                     	;# 
  1943  0117                     	;# 
  1944  0118                     	;# 
  1945  0119                     	;# 
  1946  018C                     	;# 
  1947  018D                     	;# 
  1948  018E                     	;# 
  1949  0197                     	;# 
  1950  0199                     	;# 
  1951  0199                     	;# 
  1952  0199                     	;# 
  1953  019A                     	;# 
  1954  019A                     	;# 
  1955  019A                     	;# 
  1956  019B                     	;# 
  1957  019B                     	;# 
  1958  019B                     	;# 
  1959  019B                     	;# 
  1960  019B                     	;# 
  1961  019C                     	;# 
  1962  019C                     	;# 
  1963  019C                     	;# 
  1964  019D                     	;# 
  1965  019D                     	;# 
  1966  019D                     	;# 
  1967  019E                     	;# 
  1968  019E                     	;# 
  1969  019E                     	;# 
  1970  019F                     	;# 
  1971  019F                     	;# 
  1972  019F                     	;# 
  1973  019F                     	;# 
  1974  019F                     	;# 
  1975  020C                     	;# 
  1976  020D                     	;# 
  1977  020E                     	;# 
  1978  0211                     	;# 
  1979  0211                     	;# 
  1980  0212                     	;# 
  1981  0212                     	;# 
  1982  0213                     	;# 
  1983  0213                     	;# 
  1984  0214                     	;# 
  1985  0214                     	;# 
  1986  0215                     	;# 
  1987  0215                     	;# 
  1988  0215                     	;# 
  1989  0215                     	;# 
  1990  0216                     	;# 
  1991  0216                     	;# 
  1992  0217                     	;# 
  1993  0217                     	;# 
  1994  0219                     	;# 
  1995  021A                     	;# 
  1996  021B                     	;# 
  1997  021C                     	;# 
  1998  021D                     	;# 
  1999  021D                     	;# 
  2000  021E                     	;# 
  2001  021F                     	;# 
  2002  028C                     	;# 
  2003  028D                     	;# 
  2004  028E                     	;# 
  2005  0291                     	;# 
  2006  0291                     	;# 
  2007  0292                     	;# 
  2008  0293                     	;# 
  2009  0294                     	;# 
  2010  0295                     	;# 
  2011  0295                     	;# 
  2012  0296                     	;# 
  2013  0297                     	;# 
  2014  0298                     	;# 
  2015  029F                     	;# 
  2016  030C                     	;# 
  2017  030D                     	;# 
  2018  030E                     	;# 
  2019  0311                     	;# 
  2020  0311                     	;# 
  2021  0312                     	;# 
  2022  0313                     	;# 
  2023  0314                     	;# 
  2024  0315                     	;# 
  2025  0315                     	;# 
  2026  0316                     	;# 
  2027  0317                     	;# 
  2028  0318                     	;# 
  2029  038C                     	;# 
  2030  038D                     	;# 
  2031  038E                     	;# 
  2032  0391                     	;# 
  2033  0392                     	;# 
  2034  0393                     	;# 
  2035  0394                     	;# 
  2036  0395                     	;# 
  2037  0396                     	;# 
  2038  0397                     	;# 
  2039  0398                     	;# 
  2040  0399                     	;# 
  2041  039A                     	;# 
  2042  039C                     	;# 
  2043  039D                     	;# 
  2044  039E                     	;# 
  2045  039F                     	;# 
  2046  0411                     	;# 
  2047  0411                     	;# 
  2048  0412                     	;# 
  2049  0413                     	;# 
  2050  0414                     	;# 
  2051  0415                     	;# 
  2052  0416                     	;# 
  2053  0417                     	;# 
  2054  0418                     	;# 
  2055  0418                     	;# 
  2056  0419                     	;# 
  2057  041A                     	;# 
  2058  041B                     	;# 
  2059  041C                     	;# 
  2060  041D                     	;# 
  2061  041E                     	;# 
  2062  041F                     	;# 
  2063  0498                     	;# 
  2064  0498                     	;# 
  2065  0499                     	;# 
  2066  049A                     	;# 
  2067  049B                     	;# 
  2068  049B                     	;# 
  2069  049C                     	;# 
  2070  049D                     	;# 
  2071  049E                     	;# 
  2072  049F                     	;# 
  2073  0617                     	;# 
  2074  0618                     	;# 
  2075  0619                     	;# 
  2076  0619                     	;# 
  2077  061A                     	;# 
  2078  061B                     	;# 
  2079  061C                     	;# 
  2080  061C                     	;# 
  2081  061F                     	;# 
  2082  0691                     	;# 
  2083  0692                     	;# 
  2084  0693                     	;# 
  2085  0694                     	;# 
  2086  0695                     	;# 
  2087  0696                     	;# 
  2088  0697                     	;# 
  2089  0698                     	;# 
  2090  0699                     	;# 
  2091  0711                     	;# 
  2092  0712                     	;# 
  2093  0713                     	;# 
  2094  0714                     	;# 
  2095  0715                     	;# 
  2096  0716                     	;# 
  2097  0717                     	;# 
  2098  0718                     	;# 
  2099  0719                     	;# 
  2100  0891                     	;# 
  2101  0891                     	;# 
  2102  0891                     	;# 
  2103  0891                     	;# 
  2104  0891                     	;# 
  2105  0891                     	;# 
  2106  0892                     	;# 
  2107  0892                     	;# 
  2108  0892                     	;# 
  2109  0893                     	;# 
  2110  0893                     	;# 
  2111  0893                     	;# 
  2112  0893                     	;# 
  2113  0893                     	;# 
  2114  0893                     	;# 
  2115  0894                     	;# 
  2116  0894                     	;# 
  2117  0894                     	;# 
  2118  0895                     	;# 
  2119  0895                     	;# 
  2120  0895                     	;# 
  2121  0896                     	;# 
  2122  0896                     	;# 
  2123  0896                     	;# 
  2124  089B                     	;# 
  2125  0911                     	;# 
  2126  0912                     	;# 
  2127  0913                     	;# 
  2128  0914                     	;# 
  2129  0915                     	;# 
  2130  0916                     	;# 
  2131  0918                     	;# 
  2132  0919                     	;# 
  2133  091A                     	;# 
  2134  091B                     	;# 
  2135  091C                     	;# 
  2136  091D                     	;# 
  2137  091E                     	;# 
  2138  091F                     	;# 
  2139  0E0F                     	;# 
  2140  0E10                     	;# 
  2141  0E11                     	;# 
  2142  0E12                     	;# 
  2143  0E13                     	;# 
  2144  0E14                     	;# 
  2145  0E15                     	;# 
  2146  0E16                     	;# 
  2147  0E17                     	;# 
  2148  0E18                     	;# 
  2149  0E19                     	;# 
  2150  0E1A                     	;# 
  2151  0E1B                     	;# 
  2152  0E1C                     	;# 
  2153  0E1D                     	;# 
  2154  0E1E                     	;# 
  2155  0E1F                     	;# 
  2156  0E20                     	;# 
  2157  0E21                     	;# 
  2158  0E22                     	;# 
  2159  0E24                     	;# 
  2160  0E25                     	;# 
  2161  0E28                     	;# 
  2162  0E29                     	;# 
  2163  0E2A                     	;# 
  2164  0E2B                     	;# 
  2165  0E2C                     	;# 
  2166  0E2D                     	;# 
  2167  0E2E                     	;# 
  2168  0E2F                     	;# 
  2169  0E90                     	;# 
  2170  0E91                     	;# 
  2171  0E92                     	;# 
  2172  0E94                     	;# 
  2173  0E95                     	;# 
  2174  0E9C                     	;# 
  2175  0E9D                     	;# 
  2176  0E9E                     	;# 
  2177  0E9F                     	;# 
  2178  0EA0                     	;# 
  2179  0EA1                     	;# 
  2180  0EA2                     	;# 
  2181  0EA3                     	;# 
  2182  0EA4                     	;# 
  2183  0EA5                     	;# 
  2184  0EA6                     	;# 
  2185  0EA7                     	;# 
  2186  0F0F                     	;# 
  2187  0F10                     	;# 
  2188  0F11                     	;# 
  2189  0F12                     	;# 
  2190  0F13                     	;# 
  2191  0F14                     	;# 
  2192  0F15                     	;# 
  2193  0F16                     	;# 
  2194  0F17                     	;# 
  2195  0F18                     	;# 
  2196  0F19                     	;# 
  2197  0F1A                     	;# 
  2198  0F1B                     	;# 
  2199  0F1C                     	;# 
  2200  0F1D                     	;# 
  2201  0F1E                     	;# 
  2202  0F1F                     	;# 
  2203  0F20                     	;# 
  2204  0F21                     	;# 
  2205  0F22                     	;# 
  2206  0F23                     	;# 
  2207  0F24                     	;# 
  2208  0F25                     	;# 
  2209  0F26                     	;# 
  2210  0F27                     	;# 
  2211  0F28                     	;# 
  2212  0F29                     	;# 
  2213  0F2A                     	;# 
  2214  0F2B                     	;# 
  2215  0F2C                     	;# 
  2216  0F2D                     	;# 
  2217  0F2E                     	;# 
  2218  0F2F                     	;# 
  2219  0F30                     	;# 
  2220  0F31                     	;# 
  2221  0F32                     	;# 
  2222  0F33                     	;# 
  2223  0F34                     	;# 
  2224  0F35                     	;# 
  2225  0F36                     	;# 
  2226  0F37                     	;# 
  2227  0FE4                     	;# 
  2228  0FE5                     	;# 
  2229  0FE6                     	;# 
  2230  0FE7                     	;# 
  2231  0FE8                     	;# 
  2232  0FE9                     	;# 
  2233  0FEA                     	;# 
  2234  0FEB                     	;# 
  2235  0FED                     	;# 
  2236  0FEE                     	;# 
  2237  0FEF                     	;# 
  2238  0000                     	;# 
  2239  0001                     	;# 
  2240  0002                     	;# 
  2241  0003                     	;# 
  2242  0004                     	;# 
  2243  0005                     	;# 
  2244  0006                     	;# 
  2245  0007                     	;# 
  2246  0008                     	;# 
  2247  0009                     	;# 
  2248  000A                     	;# 
  2249  000B                     	;# 
  2250  000C                     	;# 
  2251  000D                     	;# 
  2252  000E                     	;# 
  2253  0010                     	;# 
  2254  0011                     	;# 
  2255  0012                     	;# 
  2256  0013                     	;# 
  2257  0014                     	;# 
  2258  0015                     	;# 
  2259  0015                     	;# 
  2260  0016                     	;# 
  2261  0016                     	;# 
  2262  0017                     	;# 
  2263  0018                     	;# 
  2264  0019                     	;# 
  2265  0019                     	;# 
  2266  001A                     	;# 
  2267  001B                     	;# 
  2268  001C                     	;# 
  2269  001D                     	;# 
  2270  001E                     	;# 
  2271  001F                     	;# 
  2272  008C                     	;# 
  2273  008D                     	;# 
  2274  008E                     	;# 
  2275  0090                     	;# 
  2276  0091                     	;# 
  2277  0092                     	;# 
  2278  0093                     	;# 
  2279  0094                     	;# 
  2280  0097                     	;# 
  2281  009B                     	;# 
  2282  009B                     	;# 
  2283  009C                     	;# 
  2284  009D                     	;# 
  2285  009E                     	;# 
  2286  009F                     	;# 
  2287  010C                     	;# 
  2288  010D                     	;# 
  2289  010E                     	;# 
  2290  0111                     	;# 
  2291  0112                     	;# 
  2292  0113                     	;# 
  2293  0114                     	;# 
  2294  0115                     	;# 
  2295  0116                     	;# 
  2296  0117                     	;# 
  2297  0118                     	;# 
  2298  0119                     	;# 
  2299  018C                     	;# 
  2300  018D                     	;# 
  2301  018E                     	;# 
  2302  0197                     	;# 
  2303  0199                     	;# 
  2304  0199                     	;# 
  2305  0199                     	;# 
  2306  019A                     	;# 
  2307  019A                     	;# 
  2308  019A                     	;# 
  2309  019B                     	;# 
  2310  019B                     	;# 
  2311  019B                     	;# 
  2312  019B                     	;# 
  2313  019B                     	;# 
  2314  019C                     	;# 
  2315  019C                     	;# 
  2316  019C                     	;# 
  2317  019D                     	;# 
  2318  019D                     	;# 
  2319  019D                     	;# 
  2320  019E                     	;# 
  2321  019E                     	;# 
  2322  019E                     	;# 
  2323  019F                     	;# 
  2324  019F                     	;# 
  2325  019F                     	;# 
  2326  019F                     	;# 
  2327  019F                     	;# 
  2328  020C                     	;# 
  2329  020D                     	;# 
  2330  020E                     	;# 
  2331  0211                     	;# 
  2332  0211                     	;# 
  2333  0212                     	;# 
  2334  0212                     	;# 
  2335  0213                     	;# 
  2336  0213                     	;# 
  2337  0214                     	;# 
  2338  0214                     	;# 
  2339  0215                     	;# 
  2340  0215                     	;# 
  2341  0215                     	;# 
  2342  0215                     	;# 
  2343  0216                     	;# 
  2344  0216                     	;# 
  2345  0217                     	;# 
  2346  0217                     	;# 
  2347  0219                     	;# 
  2348  021A                     	;# 
  2349  021B                     	;# 
  2350  021C                     	;# 
  2351  021D                     	;# 
  2352  021D                     	;# 
  2353  021E                     	;# 
  2354  021F                     	;# 
  2355  028C                     	;# 
  2356  028D                     	;# 
  2357  028E                     	;# 
  2358  0291                     	;# 
  2359  0291                     	;# 
  2360  0292                     	;# 
  2361  0293                     	;# 
  2362  0294                     	;# 
  2363  0295                     	;# 
  2364  0295                     	;# 
  2365  0296                     	;# 
  2366  0297                     	;# 
  2367  0298                     	;# 
  2368  029F                     	;# 
  2369  030C                     	;# 
  2370  030D                     	;# 
  2371  030E                     	;# 
  2372  0311                     	;# 
  2373  0311                     	;# 
  2374  0312                     	;# 
  2375  0313                     	;# 
  2376  0314                     	;# 
  2377  0315                     	;# 
  2378  0315                     	;# 
  2379  0316                     	;# 
  2380  0317                     	;# 
  2381  0318                     	;# 
  2382  038C                     	;# 
  2383  038D                     	;# 
  2384  038E                     	;# 
  2385  0391                     	;# 
  2386  0392                     	;# 
  2387  0393                     	;# 
  2388  0394                     	;# 
  2389  0395                     	;# 
  2390  0396                     	;# 
  2391  0397                     	;# 
  2392  0398                     	;# 
  2393  0399                     	;# 
  2394  039A                     	;# 
  2395  039C                     	;# 
  2396  039D                     	;# 
  2397  039E                     	;# 
  2398  039F                     	;# 
  2399  0411                     	;# 
  2400  0411                     	;# 
  2401  0412                     	;# 
  2402  0413                     	;# 
  2403  0414                     	;# 
  2404  0415                     	;# 
  2405  0416                     	;# 
  2406  0417                     	;# 
  2407  0418                     	;# 
  2408  0418                     	;# 
  2409  0419                     	;# 
  2410  041A                     	;# 
  2411  041B                     	;# 
  2412  041C                     	;# 
  2413  041D                     	;# 
  2414  041E                     	;# 
  2415  041F                     	;# 
  2416  0498                     	;# 
  2417  0498                     	;# 
  2418  0499                     	;# 
  2419  049A                     	;# 
  2420  049B                     	;# 
  2421  049B                     	;# 
  2422  049C                     	;# 
  2423  049D                     	;# 
  2424  049E                     	;# 
  2425  049F                     	;# 
  2426  0617                     	;# 
  2427  0618                     	;# 
  2428  0619                     	;# 
  2429  0619                     	;# 
  2430  061A                     	;# 
  2431  061B                     	;# 
  2432  061C                     	;# 
  2433  061C                     	;# 
  2434  061F                     	;# 
  2435  0691                     	;# 
  2436  0692                     	;# 
  2437  0693                     	;# 
  2438  0694                     	;# 
  2439  0695                     	;# 
  2440  0696                     	;# 
  2441  0697                     	;# 
  2442  0698                     	;# 
  2443  0699                     	;# 
  2444  0711                     	;# 
  2445  0712                     	;# 
  2446  0713                     	;# 
  2447  0714                     	;# 
  2448  0715                     	;# 
  2449  0716                     	;# 
  2450  0717                     	;# 
  2451  0718                     	;# 
  2452  0719                     	;# 
  2453  0891                     	;# 
  2454  0891                     	;# 
  2455  0891                     	;# 
  2456  0891                     	;# 
  2457  0891                     	;# 
  2458  0891                     	;# 
  2459  0892                     	;# 
  2460  0892                     	;# 
  2461  0892                     	;# 
  2462  0893                     	;# 
  2463  0893                     	;# 
  2464  0893                     	;# 
  2465  0893                     	;# 
  2466  0893                     	;# 
  2467  0893                     	;# 
  2468  0894                     	;# 
  2469  0894                     	;# 
  2470  0894                     	;# 
  2471  0895                     	;# 
  2472  0895                     	;# 
  2473  0895                     	;# 
  2474  0896                     	;# 
  2475  0896                     	;# 
  2476  0896                     	;# 
  2477  089B                     	;# 
  2478  0911                     	;# 
  2479  0912                     	;# 
  2480  0913                     	;# 
  2481  0914                     	;# 
  2482  0915                     	;# 
  2483  0916                     	;# 
  2484  0918                     	;# 
  2485  0919                     	;# 
  2486  091A                     	;# 
  2487  091B                     	;# 
  2488  091C                     	;# 
  2489  091D                     	;# 
  2490  091E                     	;# 
  2491  091F                     	;# 
  2492  0E0F                     	;# 
  2493  0E10                     	;# 
  2494  0E11                     	;# 
  2495  0E12                     	;# 
  2496  0E13                     	;# 
  2497  0E14                     	;# 
  2498  0E15                     	;# 
  2499  0E16                     	;# 
  2500  0E17                     	;# 
  2501  0E18                     	;# 
  2502  0E19                     	;# 
  2503  0E1A                     	;# 
  2504  0E1B                     	;# 
  2505  0E1C                     	;# 
  2506  0E1D                     	;# 
  2507  0E1E                     	;# 
  2508  0E1F                     	;# 
  2509  0E20                     	;# 
  2510  0E21                     	;# 
  2511  0E22                     	;# 
  2512  0E24                     	;# 
  2513  0E25                     	;# 
  2514  0E28                     	;# 
  2515  0E29                     	;# 
  2516  0E2A                     	;# 
  2517  0E2B                     	;# 
  2518  0E2C                     	;# 
  2519  0E2D                     	;# 
  2520  0E2E                     	;# 
  2521  0E2F                     	;# 
  2522  0E90                     	;# 
  2523  0E91                     	;# 
  2524  0E92                     	;# 
  2525  0E94                     	;# 
  2526  0E95                     	;# 
  2527  0E9C                     	;# 
  2528  0E9D                     	;# 
  2529  0E9E                     	;# 
  2530  0E9F                     	;# 
  2531  0EA0                     	;# 
  2532  0EA1                     	;# 
  2533  0EA2                     	;# 
  2534  0EA3                     	;# 
  2535  0EA4                     	;# 
  2536  0EA5                     	;# 
  2537  0EA6                     	;# 
  2538  0EA7                     	;# 
  2539  0F0F                     	;# 
  2540  0F10                     	;# 
  2541  0F11                     	;# 
  2542  0F12                     	;# 
  2543  0F13                     	;# 
  2544  0F14                     	;# 
  2545  0F15                     	;# 
  2546  0F16                     	;# 
  2547  0F17                     	;# 
  2548  0F18                     	;# 
  2549  0F19                     	;# 
  2550  0F1A                     	;# 
  2551  0F1B                     	;# 
  2552  0F1C                     	;# 
  2553  0F1D                     	;# 
  2554  0F1E                     	;# 
  2555  0F1F                     	;# 
  2556  0F20                     	;# 
  2557  0F21                     	;# 
  2558  0F22                     	;# 
  2559  0F23                     	;# 
  2560  0F24                     	;# 
  2561  0F25                     	;# 
  2562  0F26                     	;# 
  2563  0F27                     	;# 
  2564  0F28                     	;# 
  2565  0F29                     	;# 
  2566  0F2A                     	;# 
  2567  0F2B                     	;# 
  2568  0F2C                     	;# 
  2569  0F2D                     	;# 
  2570  0F2E                     	;# 
  2571  0F2F                     	;# 
  2572  0F30                     	;# 
  2573  0F31                     	;# 
  2574  0F32                     	;# 
  2575  0F33                     	;# 
  2576  0F34                     	;# 
  2577  0F35                     	;# 
  2578  0F36                     	;# 
  2579  0F37                     	;# 
  2580  0FE4                     	;# 
  2581  0FE5                     	;# 
  2582  0FE6                     	;# 
  2583  0FE7                     	;# 
  2584  0FE8                     	;# 
  2585  0FE9                     	;# 
  2586  0FEA                     	;# 
  2587  0FEB                     	;# 
  2588  0FED                     	;# 
  2589  0FEE                     	;# 
  2590  0FEF                     	;# 
  2591  0000                     	;# 
  2592  0001                     	;# 
  2593  0002                     	;# 
  2594  0003                     	;# 
  2595  0004                     	;# 
  2596  0005                     	;# 
  2597  0006                     	;# 
  2598  0007                     	;# 
  2599  0008                     	;# 
  2600  0009                     	;# 
  2601  000A                     	;# 
  2602  000B                     	;# 
  2603  000C                     	;# 
  2604  000D                     	;# 
  2605  000E                     	;# 
  2606  0010                     	;# 
  2607  0011                     	;# 
  2608  0012                     	;# 
  2609  0013                     	;# 
  2610  0014                     	;# 
  2611  0015                     	;# 
  2612  0015                     	;# 
  2613  0016                     	;# 
  2614  0016                     	;# 
  2615  0017                     	;# 
  2616  0018                     	;# 
  2617  0019                     	;# 
  2618  0019                     	;# 
  2619  001A                     	;# 
  2620  001B                     	;# 
  2621  001C                     	;# 
  2622  001D                     	;# 
  2623  001E                     	;# 
  2624  001F                     	;# 
  2625  008C                     	;# 
  2626  008D                     	;# 
  2627  008E                     	;# 
  2628  0090                     	;# 
  2629  0091                     	;# 
  2630  0092                     	;# 
  2631  0093                     	;# 
  2632  0094                     	;# 
  2633  0097                     	;# 
  2634  009B                     	;# 
  2635  009B                     	;# 
  2636  009C                     	;# 
  2637  009D                     	;# 
  2638  009E                     	;# 
  2639  009F                     	;# 
  2640  010C                     	;# 
  2641  010D                     	;# 
  2642  010E                     	;# 
  2643  0111                     	;# 
  2644  0112                     	;# 
  2645  0113                     	;# 
  2646  0114                     	;# 
  2647  0115                     	;# 
  2648  0116                     	;# 
  2649  0117                     	;# 
  2650  0118                     	;# 
  2651  0119                     	;# 
  2652  018C                     	;# 
  2653  018D                     	;# 
  2654  018E                     	;# 
  2655  0197                     	;# 
  2656  0199                     	;# 
  2657  0199                     	;# 
  2658  0199                     	;# 
  2659  019A                     	;# 
  2660  019A                     	;# 
  2661  019A                     	;# 
  2662  019B                     	;# 
  2663  019B                     	;# 
  2664  019B                     	;# 
  2665  019B                     	;# 
  2666  019B                     	;# 
  2667  019C                     	;# 
  2668  019C                     	;# 
  2669  019C                     	;# 
  2670  019D                     	;# 
  2671  019D                     	;# 
  2672  019D                     	;# 
  2673  019E                     	;# 
  2674  019E                     	;# 
  2675  019E                     	;# 
  2676  019F                     	;# 
  2677  019F                     	;# 
  2678  019F                     	;# 
  2679  019F                     	;# 
  2680  019F                     	;# 
  2681  020C                     	;# 
  2682  020D                     	;# 
  2683  020E                     	;# 
  2684  0211                     	;# 
  2685  0211                     	;# 
  2686  0212                     	;# 
  2687  0212                     	;# 
  2688  0213                     	;# 
  2689  0213                     	;# 
  2690  0214                     	;# 
  2691  0214                     	;# 
  2692  0215                     	;# 
  2693  0215                     	;# 
  2694  0215                     	;# 
  2695  0215                     	;# 
  2696  0216                     	;# 
  2697  0216                     	;# 
  2698  0217                     	;# 
  2699  0217                     	;# 
  2700  0219                     	;# 
  2701  021A                     	;# 
  2702  021B                     	;# 
  2703  021C                     	;# 
  2704  021D                     	;# 
  2705  021D                     	;# 
  2706  021E                     	;# 
  2707  021F                     	;# 
  2708  028C                     	;# 
  2709  028D                     	;# 
  2710  028E                     	;# 
  2711  0291                     	;# 
  2712  0291                     	;# 
  2713  0292                     	;# 
  2714  0293                     	;# 
  2715  0294                     	;# 
  2716  0295                     	;# 
  2717  0295                     	;# 
  2718  0296                     	;# 
  2719  0297                     	;# 
  2720  0298                     	;# 
  2721  029F                     	;# 
  2722  030C                     	;# 
  2723  030D                     	;# 
  2724  030E                     	;# 
  2725  0311                     	;# 
  2726  0311                     	;# 
  2727  0312                     	;# 
  2728  0313                     	;# 
  2729  0314                     	;# 
  2730  0315                     	;# 
  2731  0315                     	;# 
  2732  0316                     	;# 
  2733  0317                     	;# 
  2734  0318                     	;# 
  2735  038C                     	;# 
  2736  038D                     	;# 
  2737  038E                     	;# 
  2738  0391                     	;# 
  2739  0392                     	;# 
  2740  0393                     	;# 
  2741  0394                     	;# 
  2742  0395                     	;# 
  2743  0396                     	;# 
  2744  0397                     	;# 
  2745  0398                     	;# 
  2746  0399                     	;# 
  2747  039A                     	;# 
  2748  039C                     	;# 
  2749  039D                     	;# 
  2750  039E                     	;# 
  2751  039F                     	;# 
  2752  0411                     	;# 
  2753  0411                     	;# 
  2754  0412                     	;# 
  2755  0413                     	;# 
  2756  0414                     	;# 
  2757  0415                     	;# 
  2758  0416                     	;# 
  2759  0417                     	;# 
  2760  0418                     	;# 
  2761  0418                     	;# 
  2762  0419                     	;# 
  2763  041A                     	;# 
  2764  041B                     	;# 
  2765  041C                     	;# 
  2766  041D                     	;# 
  2767  041E                     	;# 
  2768  041F                     	;# 
  2769  0498                     	;# 
  2770  0498                     	;# 
  2771  0499                     	;# 
  2772  049A                     	;# 
  2773  049B                     	;# 
  2774  049B                     	;# 
  2775  049C                     	;# 
  2776  049D                     	;# 
  2777  049E                     	;# 
  2778  049F                     	;# 
  2779  0617                     	;# 
  2780  0618                     	;# 
  2781  0619                     	;# 
  2782  0619                     	;# 
  2783  061A                     	;# 
  2784  061B                     	;# 
  2785  061C                     	;# 
  2786  061C                     	;# 
  2787  061F                     	;# 
  2788  0691                     	;# 
  2789  0692                     	;# 
  2790  0693                     	;# 
  2791  0694                     	;# 
  2792  0695                     	;# 
  2793  0696                     	;# 
  2794  0697                     	;# 
  2795  0698                     	;# 
  2796  0699                     	;# 
  2797  0711                     	;# 
  2798  0712                     	;# 
  2799  0713                     	;# 
  2800  0714                     	;# 
  2801  0715                     	;# 
  2802  0716                     	;# 
  2803  0717                     	;# 
  2804  0718                     	;# 
  2805  0719                     	;# 
  2806  0891                     	;# 
  2807  0891                     	;# 
  2808  0891                     	;# 
  2809  0891                     	;# 
  2810  0891                     	;# 
  2811  0891                     	;# 
  2812  0892                     	;# 
  2813  0892                     	;# 
  2814  0892                     	;# 
  2815  0893                     	;# 
  2816  0893                     	;# 
  2817  0893                     	;# 
  2818  0893                     	;# 
  2819  0893                     	;# 
  2820  0893                     	;# 
  2821  0894                     	;# 
  2822  0894                     	;# 
  2823  0894                     	;# 
  2824  0895                     	;# 
  2825  0895                     	;# 
  2826  0895                     	;# 
  2827  0896                     	;# 
  2828  0896                     	;# 
  2829  0896                     	;# 
  2830  089B                     	;# 
  2831  0911                     	;# 
  2832  0912                     	;# 
  2833  0913                     	;# 
  2834  0914                     	;# 
  2835  0915                     	;# 
  2836  0916                     	;# 
  2837  0918                     	;# 
  2838  0919                     	;# 
  2839  091A                     	;# 
  2840  091B                     	;# 
  2841  091C                     	;# 
  2842  091D                     	;# 
  2843  091E                     	;# 
  2844  091F                     	;# 
  2845  0E0F                     	;# 
  2846  0E10                     	;# 
  2847  0E11                     	;# 
  2848  0E12                     	;# 
  2849  0E13                     	;# 
  2850  0E14                     	;# 
  2851  0E15                     	;# 
  2852  0E16                     	;# 
  2853  0E17                     	;# 
  2854  0E18                     	;# 
  2855  0E19                     	;# 
  2856  0E1A                     	;# 
  2857  0E1B                     	;# 
  2858  0E1C                     	;# 
  2859  0E1D                     	;# 
  2860  0E1E                     	;# 
  2861  0E1F                     	;# 
  2862  0E20                     	;# 
  2863  0E21                     	;# 
  2864  0E22                     	;# 
  2865  0E24                     	;# 
  2866  0E25                     	;# 
  2867  0E28                     	;# 
  2868  0E29                     	;# 
  2869  0E2A                     	;# 
  2870  0E2B                     	;# 
  2871  0E2C                     	;# 
  2872  0E2D                     	;# 
  2873  0E2E                     	;# 
  2874  0E2F                     	;# 
  2875  0E90                     	;# 
  2876  0E91                     	;# 
  2877  0E92                     	;# 
  2878  0E94                     	;# 
  2879  0E95                     	;# 
  2880  0E9C                     	;# 
  2881  0E9D                     	;# 
  2882  0E9E                     	;# 
  2883  0E9F                     	;# 
  2884  0EA0                     	;# 
  2885  0EA1                     	;# 
  2886  0EA2                     	;# 
  2887  0EA3                     	;# 
  2888  0EA4                     	;# 
  2889  0EA5                     	;# 
  2890  0EA6                     	;# 
  2891  0EA7                     	;# 
  2892  0F0F                     	;# 
  2893  0F10                     	;# 
  2894  0F11                     	;# 
  2895  0F12                     	;# 
  2896  0F13                     	;# 
  2897  0F14                     	;# 
  2898  0F15                     	;# 
  2899  0F16                     	;# 
  2900  0F17                     	;# 
  2901  0F18                     	;# 
  2902  0F19                     	;# 
  2903  0F1A                     	;# 
  2904  0F1B                     	;# 
  2905  0F1C                     	;# 
  2906  0F1D                     	;# 
  2907  0F1E                     	;# 
  2908  0F1F                     	;# 
  2909  0F20                     	;# 
  2910  0F21                     	;# 
  2911  0F22                     	;# 
  2912  0F23                     	;# 
  2913  0F24                     	;# 
  2914  0F25                     	;# 
  2915  0F26                     	;# 
  2916  0F27                     	;# 
  2917  0F28                     	;# 
  2918  0F29                     	;# 
  2919  0F2A                     	;# 
  2920  0F2B                     	;# 
  2921  0F2C                     	;# 
  2922  0F2D                     	;# 
  2923  0F2E                     	;# 
  2924  0F2F                     	;# 
  2925  0F30                     	;# 
  2926  0F31                     	;# 
  2927  0F32                     	;# 
  2928  0F33                     	;# 
  2929  0F34                     	;# 
  2930  0F35                     	;# 
  2931  0F36                     	;# 
  2932  0F37                     	;# 
  2933  0FE4                     	;# 
  2934  0FE5                     	;# 
  2935  0FE6                     	;# 
  2936  0FE7                     	;# 
  2937  0FE8                     	;# 
  2938  0FE9                     	;# 
  2939  0FEA                     	;# 
  2940  0FEB                     	;# 
  2941  0FED                     	;# 
  2942  0FEE                     	;# 
  2943  0FEF                     	;# 
  2944  0000                     	;# 
  2945  0001                     	;# 
  2946  0002                     	;# 
  2947  0003                     	;# 
  2948  0004                     	;# 
  2949  0005                     	;# 
  2950  0006                     	;# 
  2951  0007                     	;# 
  2952  0008                     	;# 
  2953  0009                     	;# 
  2954  000A                     	;# 
  2955  000B                     	;# 
  2956  000C                     	;# 
  2957  000D                     	;# 
  2958  000E                     	;# 
  2959  0010                     	;# 
  2960  0011                     	;# 
  2961  0012                     	;# 
  2962  0013                     	;# 
  2963  0014                     	;# 
  2964  0015                     	;# 
  2965  0015                     	;# 
  2966  0016                     	;# 
  2967  0016                     	;# 
  2968  0017                     	;# 
  2969  0018                     	;# 
  2970  0019                     	;# 
  2971  0019                     	;# 
  2972  001A                     	;# 
  2973  001B                     	;# 
  2974  001C                     	;# 
  2975  001D                     	;# 
  2976  001E                     	;# 
  2977  001F                     	;# 
  2978  008C                     	;# 
  2979  008D                     	;# 
  2980  008E                     	;# 
  2981  0090                     	;# 
  2982  0091                     	;# 
  2983  0092                     	;# 
  2984  0093                     	;# 
  2985  0094                     	;# 
  2986  0097                     	;# 
  2987  009B                     	;# 
  2988  009B                     	;# 
  2989  009C                     	;# 
  2990  009D                     	;# 
  2991  009E                     	;# 
  2992  009F                     	;# 
  2993  010C                     	;# 
  2994  010D                     	;# 
  2995  010E                     	;# 
  2996  0111                     	;# 
  2997  0112                     	;# 
  2998  0113                     	;# 
  2999  0114                     	;# 
  3000  0115                     	;# 
  3001  0116                     	;# 
  3002  0117                     	;# 
  3003  0118                     	;# 
  3004  0119                     	;# 
  3005  018C                     	;# 
  3006  018D                     	;# 
  3007  018E                     	;# 
  3008  0197                     	;# 
  3009  0199                     	;# 
  3010  0199                     	;# 
  3011  0199                     	;# 
  3012  019A                     	;# 
  3013  019A                     	;# 
  3014  019A                     	;# 
  3015  019B                     	;# 
  3016  019B                     	;# 
  3017  019B                     	;# 
  3018  019B                     	;# 
  3019  019B                     	;# 
  3020  019C                     	;# 
  3021  019C                     	;# 
  3022  019C                     	;# 
  3023  019D                     	;# 
  3024  019D                     	;# 
  3025  019D                     	;# 
  3026  019E                     	;# 
  3027  019E                     	;# 
  3028  019E                     	;# 
  3029  019F                     	;# 
  3030  019F                     	;# 
  3031  019F                     	;# 
  3032  019F                     	;# 
  3033  019F                     	;# 
  3034  020C                     	;# 
  3035  020D                     	;# 
  3036  020E                     	;# 
  3037  0211                     	;# 
  3038  0211                     	;# 
  3039  0212                     	;# 
  3040  0212                     	;# 
  3041  0213                     	;# 
  3042  0213                     	;# 
  3043  0214                     	;# 
  3044  0214                     	;# 
  3045  0215                     	;# 
  3046  0215                     	;# 
  3047  0215                     	;# 
  3048  0215                     	;# 
  3049  0216                     	;# 
  3050  0216                     	;# 
  3051  0217                     	;# 
  3052  0217                     	;# 
  3053  0219                     	;# 
  3054  021A                     	;# 
  3055  021B                     	;# 
  3056  021C                     	;# 
  3057  021D                     	;# 
  3058  021D                     	;# 
  3059  021E                     	;# 
  3060  021F                     	;# 
  3061  028C                     	;# 
  3062  028D                     	;# 
  3063  028E                     	;# 
  3064  0291                     	;# 
  3065  0291                     	;# 
  3066  0292                     	;# 
  3067  0293                     	;# 
  3068  0294                     	;# 
  3069  0295                     	;# 
  3070  0295                     	;# 
  3071  0296                     	;# 
  3072  0297                     	;# 
  3073  0298                     	;# 
  3074  029F                     	;# 
  3075  030C                     	;# 
  3076  030D                     	;# 
  3077  030E                     	;# 
  3078  0311                     	;# 
  3079  0311                     	;# 
  3080  0312                     	;# 
  3081  0313                     	;# 
  3082  0314                     	;# 
  3083  0315                     	;# 
  3084  0315                     	;# 
  3085  0316                     	;# 
  3086  0317                     	;# 
  3087  0318                     	;# 
  3088  038C                     	;# 
  3089  038D                     	;# 
  3090  038E                     	;# 
  3091  0391                     	;# 
  3092  0392                     	;# 
  3093  0393                     	;# 
  3094  0394                     	;# 
  3095  0395                     	;# 
  3096  0396                     	;# 
  3097  0397                     	;# 
  3098  0398                     	;# 
  3099  0399                     	;# 
  3100  039A                     	;# 
  3101  039C                     	;# 
  3102  039D                     	;# 
  3103  039E                     	;# 
  3104  039F                     	;# 
  3105  0411                     	;# 
  3106  0411                     	;# 
  3107  0412                     	;# 
  3108  0413                     	;# 
  3109  0414                     	;# 
  3110  0415                     	;# 
  3111  0416                     	;# 
  3112  0417                     	;# 
  3113  0418                     	;# 
  3114  0418                     	;# 
  3115  0419                     	;# 
  3116  041A                     	;# 
  3117  041B                     	;# 
  3118  041C                     	;# 
  3119  041D                     	;# 
  3120  041E                     	;# 
  3121  041F                     	;# 
  3122  0498                     	;# 
  3123  0498                     	;# 
  3124  0499                     	;# 
  3125  049A                     	;# 
  3126  049B                     	;# 
  3127  049B                     	;# 
  3128  049C                     	;# 
  3129  049D                     	;# 
  3130  049E                     	;# 
  3131  049F                     	;# 
  3132  0617                     	;# 
  3133  0618                     	;# 
  3134  0619                     	;# 
  3135  0619                     	;# 
  3136  061A                     	;# 
  3137  061B                     	;# 
  3138  061C                     	;# 
  3139  061C                     	;# 
  3140  061F                     	;# 
  3141  0691                     	;# 
  3142  0692                     	;# 
  3143  0693                     	;# 
  3144  0694                     	;# 
  3145  0695                     	;# 
  3146  0696                     	;# 
  3147  0697                     	;# 
  3148  0698                     	;# 
  3149  0699                     	;# 
  3150  0711                     	;# 
  3151  0712                     	;# 
  3152  0713                     	;# 
  3153  0714                     	;# 
  3154  0715                     	;# 
  3155  0716                     	;# 
  3156  0717                     	;# 
  3157  0718                     	;# 
  3158  0719                     	;# 
  3159  0891                     	;# 
  3160  0891                     	;# 
  3161  0891                     	;# 
  3162  0891                     	;# 
  3163  0891                     	;# 
  3164  0891                     	;# 
  3165  0892                     	;# 
  3166  0892                     	;# 
  3167  0892                     	;# 
  3168  0893                     	;# 
  3169  0893                     	;# 
  3170  0893                     	;# 
  3171  0893                     	;# 
  3172  0893                     	;# 
  3173  0893                     	;# 
  3174  0894                     	;# 
  3175  0894                     	;# 
  3176  0894                     	;# 
  3177  0895                     	;# 
  3178  0895                     	;# 
  3179  0895                     	;# 
  3180  0896                     	;# 
  3181  0896                     	;# 
  3182  0896                     	;# 
  3183  089B                     	;# 
  3184  0911                     	;# 
  3185  0912                     	;# 
  3186  0913                     	;# 
  3187  0914                     	;# 
  3188  0915                     	;# 
  3189  0916                     	;# 
  3190  0918                     	;# 
  3191  0919                     	;# 
  3192  091A                     	;# 
  3193  091B                     	;# 
  3194  091C                     	;# 
  3195  091D                     	;# 
  3196  091E                     	;# 
  3197  091F                     	;# 
  3198  0E0F                     	;# 
  3199  0E10                     	;# 
  3200  0E11                     	;# 
  3201  0E12                     	;# 
  3202  0E13                     	;# 
  3203  0E14                     	;# 
  3204  0E15                     	;# 
  3205  0E16                     	;# 
  3206  0E17                     	;# 
  3207  0E18                     	;# 
  3208  0E19                     	;# 
  3209  0E1A                     	;# 
  3210  0E1B                     	;# 
  3211  0E1C                     	;# 
  3212  0E1D                     	;# 
  3213  0E1E                     	;# 
  3214  0E1F                     	;# 
  3215  0E20                     	;# 
  3216  0E21                     	;# 
  3217  0E22                     	;# 
  3218  0E24                     	;# 
  3219  0E25                     	;# 
  3220  0E28                     	;# 
  3221  0E29                     	;# 
  3222  0E2A                     	;# 
  3223  0E2B                     	;# 
  3224  0E2C                     	;# 
  3225  0E2D                     	;# 
  3226  0E2E                     	;# 
  3227  0E2F                     	;# 
  3228  0E90                     	;# 
  3229  0E91                     	;# 
  3230  0E92                     	;# 
  3231  0E94                     	;# 
  3232  0E95                     	;# 
  3233  0E9C                     	;# 
  3234  0E9D                     	;# 
  3235  0E9E                     	;# 
  3236  0E9F                     	;# 
  3237  0EA0                     	;# 
  3238  0EA1                     	;# 
  3239  0EA2                     	;# 
  3240  0EA3                     	;# 
  3241  0EA4                     	;# 
  3242  0EA5                     	;# 
  3243  0EA6                     	;# 
  3244  0EA7                     	;# 
  3245  0F0F                     	;# 
  3246  0F10                     	;# 
  3247  0F11                     	;# 
  3248  0F12                     	;# 
  3249  0F13                     	;# 
  3250  0F14                     	;# 
  3251  0F15                     	;# 
  3252  0F16                     	;# 
  3253  0F17                     	;# 
  3254  0F18                     	;# 
  3255  0F19                     	;# 
  3256  0F1A                     	;# 
  3257  0F1B                     	;# 
  3258  0F1C                     	;# 
  3259  0F1D                     	;# 
  3260  0F1E                     	;# 
  3261  0F1F                     	;# 
  3262  0F20                     	;# 
  3263  0F21                     	;# 
  3264  0F22                     	;# 
  3265  0F23                     	;# 
  3266  0F24                     	;# 
  3267  0F25                     	;# 
  3268  0F26                     	;# 
  3269  0F27                     	;# 
  3270  0F28                     	;# 
  3271  0F29                     	;# 
  3272  0F2A                     	;# 
  3273  0F2B                     	;# 
  3274  0F2C                     	;# 
  3275  0F2D                     	;# 
  3276  0F2E                     	;# 
  3277  0F2F                     	;# 
  3278  0F30                     	;# 
  3279  0F31                     	;# 
  3280  0F32                     	;# 
  3281  0F33                     	;# 
  3282  0F34                     	;# 
  3283  0F35                     	;# 
  3284  0F36                     	;# 
  3285  0F37                     	;# 
  3286  0FE4                     	;# 
  3287  0FE5                     	;# 
  3288  0FE6                     	;# 
  3289  0FE7                     	;# 
  3290  0FE8                     	;# 
  3291  0FE9                     	;# 
  3292  0FEA                     	;# 
  3293  0FEB                     	;# 
  3294  0FED                     	;# 
  3295  0FEE                     	;# 
  3296  0FEF                     	;# 
  3297  0000                     	;# 
  3298  0001                     	;# 
  3299  0002                     	;# 
  3300  0003                     	;# 
  3301  0004                     	;# 
  3302  0005                     	;# 
  3303  0006                     	;# 
  3304  0007                     	;# 
  3305  0008                     	;# 
  3306  0009                     	;# 
  3307  000A                     	;# 
  3308  000B                     	;# 
  3309  000C                     	;# 
  3310  000D                     	;# 
  3311  000E                     	;# 
  3312  0010                     	;# 
  3313  0011                     	;# 
  3314  0012                     	;# 
  3315  0013                     	;# 
  3316  0014                     	;# 
  3317  0015                     	;# 
  3318  0015                     	;# 
  3319  0016                     	;# 
  3320  0016                     	;# 
  3321  0017                     	;# 
  3322  0018                     	;# 
  3323  0019                     	;# 
  3324  0019                     	;# 
  3325  001A                     	;# 
  3326  001B                     	;# 
  3327  001C                     	;# 
  3328  001D                     	;# 
  3329  001E                     	;# 
  3330  001F                     	;# 
  3331  008C                     	;# 
  3332  008D                     	;# 
  3333  008E                     	;# 
  3334  0090                     	;# 
  3335  0091                     	;# 
  3336  0092                     	;# 
  3337  0093                     	;# 
  3338  0094                     	;# 
  3339  0097                     	;# 
  3340  009B                     	;# 
  3341  009B                     	;# 
  3342  009C                     	;# 
  3343  009D                     	;# 
  3344  009E                     	;# 
  3345  009F                     	;# 
  3346  010C                     	;# 
  3347  010D                     	;# 
  3348  010E                     	;# 
  3349  0111                     	;# 
  3350  0112                     	;# 
  3351  0113                     	;# 
  3352  0114                     	;# 
  3353  0115                     	;# 
  3354  0116                     	;# 
  3355  0117                     	;# 
  3356  0118                     	;# 
  3357  0119                     	;# 
  3358  018C                     	;# 
  3359  018D                     	;# 
  3360  018E                     	;# 
  3361  0197                     	;# 
  3362  0199                     	;# 
  3363  0199                     	;# 
  3364  0199                     	;# 
  3365  019A                     	;# 
  3366  019A                     	;# 
  3367  019A                     	;# 
  3368  019B                     	;# 
  3369  019B                     	;# 
  3370  019B                     	;# 
  3371  019B                     	;# 
  3372  019B                     	;# 
  3373  019C                     	;# 
  3374  019C                     	;# 
  3375  019C                     	;# 
  3376  019D                     	;# 
  3377  019D                     	;# 
  3378  019D                     	;# 
  3379  019E                     	;# 
  3380  019E                     	;# 
  3381  019E                     	;# 
  3382  019F                     	;# 
  3383  019F                     	;# 
  3384  019F                     	;# 
  3385  019F                     	;# 
  3386  019F                     	;# 
  3387  020C                     	;# 
  3388  020D                     	;# 
  3389  020E                     	;# 
  3390  0211                     	;# 
  3391  0211                     	;# 
  3392  0212                     	;# 
  3393  0212                     	;# 
  3394  0213                     	;# 
  3395  0213                     	;# 
  3396  0214                     	;# 
  3397  0214                     	;# 
  3398  0215                     	;# 
  3399  0215                     	;# 
  3400  0215                     	;# 
  3401  0215                     	;# 
  3402  0216                     	;# 
  3403  0216                     	;# 
  3404  0217                     	;# 
  3405  0217                     	;# 
  3406  0219                     	;# 
  3407  021A                     	;# 
  3408  021B                     	;# 
  3409  021C                     	;# 
  3410  021D                     	;# 
  3411  021D                     	;# 
  3412  021E                     	;# 
  3413  021F                     	;# 
  3414  028C                     	;# 
  3415  028D                     	;# 
  3416  028E                     	;# 
  3417  0291                     	;# 
  3418  0291                     	;# 
  3419  0292                     	;# 
  3420  0293                     	;# 
  3421  0294                     	;# 
  3422  0295                     	;# 
  3423  0295                     	;# 
  3424  0296                     	;# 
  3425  0297                     	;# 
  3426  0298                     	;# 
  3427  029F                     	;# 
  3428  030C                     	;# 
  3429  030D                     	;# 
  3430  030E                     	;# 
  3431  0311                     	;# 
  3432  0311                     	;# 
  3433  0312                     	;# 
  3434  0313                     	;# 
  3435  0314                     	;# 
  3436  0315                     	;# 
  3437  0315                     	;# 
  3438  0316                     	;# 
  3439  0317                     	;# 
  3440  0318                     	;# 
  3441  038C                     	;# 
  3442  038D                     	;# 
  3443  038E                     	;# 
  3444  0391                     	;# 
  3445  0392                     	;# 
  3446  0393                     	;# 
  3447  0394                     	;# 
  3448  0395                     	;# 
  3449  0396                     	;# 
  3450  0397                     	;# 
  3451  0398                     	;# 
  3452  0399                     	;# 
  3453  039A                     	;# 
  3454  039C                     	;# 
  3455  039D                     	;# 
  3456  039E                     	;# 
  3457  039F                     	;# 
  3458  0411                     	;# 
  3459  0411                     	;# 
  3460  0412                     	;# 
  3461  0413                     	;# 
  3462  0414                     	;# 
  3463  0415                     	;# 
  3464  0416                     	;# 
  3465  0417                     	;# 
  3466  0418                     	;# 
  3467  0418                     	;# 
  3468  0419                     	;# 
  3469  041A                     	;# 
  3470  041B                     	;# 
  3471  041C                     	;# 
  3472  041D                     	;# 
  3473  041E                     	;# 
  3474  041F                     	;# 
  3475  0498                     	;# 
  3476  0498                     	;# 
  3477  0499                     	;# 
  3478  049A                     	;# 
  3479  049B                     	;# 
  3480  049B                     	;# 
  3481  049C                     	;# 
  3482  049D                     	;# 
  3483  049E                     	;# 
  3484  049F                     	;# 
  3485  0617                     	;# 
  3486  0618                     	;# 
  3487  0619                     	;# 
  3488  0619                     	;# 
  3489  061A                     	;# 
  3490  061B                     	;# 
  3491  061C                     	;# 
  3492  061C                     	;# 
  3493  061F                     	;# 
  3494  0691                     	;# 
  3495  0692                     	;# 
  3496  0693                     	;# 
  3497  0694                     	;# 
  3498  0695                     	;# 
  3499  0696                     	;# 
  3500  0697                     	;# 
  3501  0698                     	;# 
  3502  0699                     	;# 
  3503  0711                     	;# 
  3504  0712                     	;# 
  3505  0713                     	;# 
  3506  0714                     	;# 
  3507  0715                     	;# 
  3508  0716                     	;# 
  3509  0717                     	;# 
  3510  0718                     	;# 
  3511  0719                     	;# 
  3512  0891                     	;# 
  3513  0891                     	;# 
  3514  0891                     	;# 
  3515  0891                     	;# 
  3516  0891                     	;# 
  3517  0891                     	;# 
  3518  0892                     	;# 
  3519  0892                     	;# 
  3520  0892                     	;# 
  3521  0893                     	;# 
  3522  0893                     	;# 
  3523  0893                     	;# 
  3524  0893                     	;# 
  3525  0893                     	;# 
  3526  0893                     	;# 
  3527  0894                     	;# 
  3528  0894                     	;# 
  3529  0894                     	;# 
  3530  0895                     	;# 
  3531  0895                     	;# 
  3532  0895                     	;# 
  3533  0896                     	;# 
  3534  0896                     	;# 
  3535  0896                     	;# 
  3536  089B                     	;# 
  3537  0911                     	;# 
  3538  0912                     	;# 
  3539  0913                     	;# 
  3540  0914                     	;# 
  3541  0915                     	;# 
  3542  0916                     	;# 
  3543  0918                     	;# 
  3544  0919                     	;# 
  3545  091A                     	;# 
  3546  091B                     	;# 
  3547  091C                     	;# 
  3548  091D                     	;# 
  3549  091E                     	;# 
  3550  091F                     	;# 
  3551  0E0F                     	;# 
  3552  0E10                     	;# 
  3553  0E11                     	;# 
  3554  0E12                     	;# 
  3555  0E13                     	;# 
  3556  0E14                     	;# 
  3557  0E15                     	;# 
  3558  0E16                     	;# 
  3559  0E17                     	;# 
  3560  0E18                     	;# 
  3561  0E19                     	;# 
  3562  0E1A                     	;# 
  3563  0E1B                     	;# 
  3564  0E1C                     	;# 
  3565  0E1D                     	;# 
  3566  0E1E                     	;# 
  3567  0E1F                     	;# 
  3568  0E20                     	;# 
  3569  0E21                     	;# 
  3570  0E22                     	;# 
  3571  0E24                     	;# 
  3572  0E25                     	;# 
  3573  0E28                     	;# 
  3574  0E29                     	;# 
  3575  0E2A                     	;# 
  3576  0E2B                     	;# 
  3577  0E2C                     	;# 
  3578  0E2D                     	;# 
  3579  0E2E                     	;# 
  3580  0E2F                     	;# 
  3581  0E90                     	;# 
  3582  0E91                     	;# 
  3583  0E92                     	;# 
  3584  0E94                     	;# 
  3585  0E95                     	;# 
  3586  0E9C                     	;# 
  3587  0E9D                     	;# 
  3588  0E9E                     	;# 
  3589  0E9F                     	;# 
  3590  0EA0                     	;# 
  3591  0EA1                     	;# 
  3592  0EA2                     	;# 
  3593  0EA3                     	;# 
  3594  0EA4                     	;# 
  3595  0EA5                     	;# 
  3596  0EA6                     	;# 
  3597  0EA7                     	;# 
  3598  0F0F                     	;# 
  3599  0F10                     	;# 
  3600  0F11                     	;# 
  3601  0F12                     	;# 
  3602  0F13                     	;# 
  3603  0F14                     	;# 
  3604  0F15                     	;# 
  3605  0F16                     	;# 
  3606  0F17                     	;# 
  3607  0F18                     	;# 
  3608  0F19                     	;# 
  3609  0F1A                     	;# 
  3610  0F1B                     	;# 
  3611  0F1C                     	;# 
  3612  0F1D                     	;# 
  3613  0F1E                     	;# 
  3614  0F1F                     	;# 
  3615  0F20                     	;# 
  3616  0F21                     	;# 
  3617  0F22                     	;# 
  3618  0F23                     	;# 
  3619  0F24                     	;# 
  3620  0F25                     	;# 
  3621  0F26                     	;# 
  3622  0F27                     	;# 
  3623  0F28                     	;# 
  3624  0F29                     	;# 
  3625  0F2A                     	;# 
  3626  0F2B                     	;# 
  3627  0F2C                     	;# 
  3628  0F2D                     	;# 
  3629  0F2E                     	;# 
  3630  0F2F                     	;# 
  3631  0F30                     	;# 
  3632  0F31                     	;# 
  3633  0F32                     	;# 
  3634  0F33                     	;# 
  3635  0F34                     	;# 
  3636  0F35                     	;# 
  3637  0F36                     	;# 
  3638  0F37                     	;# 
  3639  0FE4                     	;# 
  3640  0FE5                     	;# 
  3641  0FE6                     	;# 
  3642  0FE7                     	;# 
  3643  0FE8                     	;# 
  3644  0FE9                     	;# 
  3645  0FEA                     	;# 
  3646  0FEB                     	;# 
  3647  0FED                     	;# 
  3648  0FEE                     	;# 
  3649  0FEF                     	;# 
  3650  0000                     	;# 
  3651  0001                     	;# 
  3652  0002                     	;# 
  3653  0003                     	;# 
  3654  0004                     	;# 
  3655  0005                     	;# 
  3656  0006                     	;# 
  3657  0007                     	;# 
  3658  0008                     	;# 
  3659  0009                     	;# 
  3660  000A                     	;# 
  3661  000B                     	;# 
  3662  000C                     	;# 
  3663  000D                     	;# 
  3664  000E                     	;# 
  3665  0010                     	;# 
  3666  0011                     	;# 
  3667  0012                     	;# 
  3668  0013                     	;# 
  3669  0014                     	;# 
  3670  0015                     	;# 
  3671  0015                     	;# 
  3672  0016                     	;# 
  3673  0016                     	;# 
  3674  0017                     	;# 
  3675  0018                     	;# 
  3676  0019                     	;# 
  3677  0019                     	;# 
  3678  001A                     	;# 
  3679  001B                     	;# 
  3680  001C                     	;# 
  3681  001D                     	;# 
  3682  001E                     	;# 
  3683  001F                     	;# 
  3684  008C                     	;# 
  3685  008D                     	;# 
  3686  008E                     	;# 
  3687  0090                     	;# 
  3688  0091                     	;# 
  3689  0092                     	;# 
  3690  0093                     	;# 
  3691  0094                     	;# 
  3692  0097                     	;# 
  3693  009B                     	;# 
  3694  009B                     	;# 
  3695  009C                     	;# 
  3696  009D                     	;# 
  3697  009E                     	;# 
  3698  009F                     	;# 
  3699  010C                     	;# 
  3700  010D                     	;# 
  3701  010E                     	;# 
  3702  0111                     	;# 
  3703  0112                     	;# 
  3704  0113                     	;# 
  3705  0114                     	;# 
  3706  0115                     	;# 
  3707  0116                     	;# 
  3708  0117                     	;# 
  3709  0118                     	;# 
  3710  0119                     	;# 
  3711  018C                     	;# 
  3712  018D                     	;# 
  3713  018E                     	;# 
  3714  0197                     	;# 
  3715  0199                     	;# 
  3716  0199                     	;# 
  3717  0199                     	;# 
  3718  019A                     	;# 
  3719  019A                     	;# 
  3720  019A                     	;# 
  3721  019B                     	;# 
  3722  019B                     	;# 
  3723  019B                     	;# 
  3724  019B                     	;# 
  3725  019B                     	;# 
  3726  019C                     	;# 
  3727  019C                     	;# 
  3728  019C                     	;# 
  3729  019D                     	;# 
  3730  019D                     	;# 
  3731  019D                     	;# 
  3732  019E                     	;# 
  3733  019E                     	;# 
  3734  019E                     	;# 
  3735  019F                     	;# 
  3736  019F                     	;# 
  3737  019F                     	;# 
  3738  019F                     	;# 
  3739  019F                     	;# 
  3740  020C                     	;# 
  3741  020D                     	;# 
  3742  020E                     	;# 
  3743  0211                     	;# 
  3744  0211                     	;# 
  3745  0212                     	;# 
  3746  0212                     	;# 
  3747  0213                     	;# 
  3748  0213                     	;# 
  3749  0214                     	;# 
  3750  0214                     	;# 
  3751  0215                     	;# 
  3752  0215                     	;# 
  3753  0215                     	;# 
  3754  0215                     	;# 
  3755  0216                     	;# 
  3756  0216                     	;# 
  3757  0217                     	;# 
  3758  0217                     	;# 
  3759  0219                     	;# 
  3760  021A                     	;# 
  3761  021B                     	;# 
  3762  021C                     	;# 
  3763  021D                     	;# 
  3764  021D                     	;# 
  3765  021E                     	;# 
  3766  021F                     	;# 
  3767  028C                     	;# 
  3768  028D                     	;# 
  3769  028E                     	;# 
  3770  0291                     	;# 
  3771  0291                     	;# 
  3772  0292                     	;# 
  3773  0293                     	;# 
  3774  0294                     	;# 
  3775  0295                     	;# 
  3776  0295                     	;# 
  3777  0296                     	;# 
  3778  0297                     	;# 
  3779  0298                     	;# 
  3780  029F                     	;# 
  3781  030C                     	;# 
  3782  030D                     	;# 
  3783  030E                     	;# 
  3784  0311                     	;# 
  3785  0311                     	;# 
  3786  0312                     	;# 
  3787  0313                     	;# 
  3788  0314                     	;# 
  3789  0315                     	;# 
  3790  0315                     	;# 
  3791  0316                     	;# 
  3792  0317                     	;# 
  3793  0318                     	;# 
  3794  038C                     	;# 
  3795  038D                     	;# 
  3796  038E                     	;# 
  3797  0391                     	;# 
  3798  0392                     	;# 
  3799  0393                     	;# 
  3800  0394                     	;# 
  3801  0395                     	;# 
  3802  0396                     	;# 
  3803  0397                     	;# 
  3804  0398                     	;# 
  3805  0399                     	;# 
  3806  039A                     	;# 
  3807  039C                     	;# 
  3808  039D                     	;# 
  3809  039E                     	;# 
  3810  039F                     	;# 
  3811  0411                     	;# 
  3812  0411                     	;# 
  3813  0412                     	;# 
  3814  0413                     	;# 
  3815  0414                     	;# 
  3816  0415                     	;# 
  3817  0416                     	;# 
  3818  0417                     	;# 
  3819  0418                     	;# 
  3820  0418                     	;# 
  3821  0419                     	;# 
  3822  041A                     	;# 
  3823  041B                     	;# 
  3824  041C                     	;# 
  3825  041D                     	;# 
  3826  041E                     	;# 
  3827  041F                     	;# 
  3828  0498                     	;# 
  3829  0498                     	;# 
  3830  0499                     	;# 
  3831  049A                     	;# 
  3832  049B                     	;# 
  3833  049B                     	;# 
  3834  049C                     	;# 
  3835  049D                     	;# 
  3836  049E                     	;# 
  3837  049F                     	;# 
  3838  0617                     	;# 
  3839  0618                     	;# 
  3840  0619                     	;# 
  3841  0619                     	;# 
  3842  061A                     	;# 
  3843  061B                     	;# 
  3844  061C                     	;# 
  3845  061C                     	;# 
  3846  061F                     	;# 
  3847  0691                     	;# 
  3848  0692                     	;# 
  3849  0693                     	;# 
  3850  0694                     	;# 
  3851  0695                     	;# 
  3852  0696                     	;# 
  3853  0697                     	;# 
  3854  0698                     	;# 
  3855  0699                     	;# 
  3856  0711                     	;# 
  3857  0712                     	;# 
  3858  0713                     	;# 
  3859  0714                     	;# 
  3860  0715                     	;# 
  3861  0716                     	;# 
  3862  0717                     	;# 
  3863  0718                     	;# 
  3864  0719                     	;# 
  3865  0891                     	;# 
  3866  0891                     	;# 
  3867  0891                     	;# 
  3868  0891                     	;# 
  3869  0891                     	;# 
  3870  0891                     	;# 
  3871  0892                     	;# 
  3872  0892                     	;# 
  3873  0892                     	;# 
  3874  0893                     	;# 
  3875  0893                     	;# 
  3876  0893                     	;# 
  3877  0893                     	;# 
  3878  0893                     	;# 
  3879  0893                     	;# 
  3880  0894                     	;# 
  3881  0894                     	;# 
  3882  0894                     	;# 
  3883  0895                     	;# 
  3884  0895                     	;# 
  3885  0895                     	;# 
  3886  0896                     	;# 
  3887  0896                     	;# 
  3888  0896                     	;# 
  3889  089B                     	;# 
  3890  0911                     	;# 
  3891  0912                     	;# 
  3892  0913                     	;# 
  3893  0914                     	;# 
  3894  0915                     	;# 
  3895  0916                     	;# 
  3896  0918                     	;# 
  3897  0919                     	;# 
  3898  091A                     	;# 
  3899  091B                     	;# 
  3900  091C                     	;# 
  3901  091D                     	;# 
  3902  091E                     	;# 
  3903  091F                     	;# 
  3904  0E0F                     	;# 
  3905  0E10                     	;# 
  3906  0E11                     	;# 
  3907  0E12                     	;# 
  3908  0E13                     	;# 
  3909  0E14                     	;# 
  3910  0E15                     	;# 
  3911  0E16                     	;# 
  3912  0E17                     	;# 
  3913  0E18                     	;# 
  3914  0E19                     	;# 
  3915  0E1A                     	;# 
  3916  0E1B                     	;# 
  3917  0E1C                     	;# 
  3918  0E1D                     	;# 
  3919  0E1E                     	;# 
  3920  0E1F                     	;# 
  3921  0E20                     	;# 
  3922  0E21                     	;# 
  3923  0E22                     	;# 
  3924  0E24                     	;# 
  3925  0E25                     	;# 
  3926  0E28                     	;# 
  3927  0E29                     	;# 
  3928  0E2A                     	;# 
  3929  0E2B                     	;# 
  3930  0E2C                     	;# 
  3931  0E2D                     	;# 
  3932  0E2E                     	;# 
  3933  0E2F                     	;# 
  3934  0E90                     	;# 
  3935  0E91                     	;# 
  3936  0E92                     	;# 
  3937  0E94                     	;# 
  3938  0E95                     	;# 
  3939  0E9C                     	;# 
  3940  0E9D                     	;# 
  3941  0E9E                     	;# 
  3942  0E9F                     	;# 
  3943  0EA0                     	;# 
  3944  0EA1                     	;# 
  3945  0EA2                     	;# 
  3946  0EA3                     	;# 
  3947  0EA4                     	;# 
  3948  0EA5                     	;# 
  3949  0EA6                     	;# 
  3950  0EA7                     	;# 
  3951  0F0F                     	;# 
  3952  0F10                     	;# 
  3953  0F11                     	;# 
  3954  0F12                     	;# 
  3955  0F13                     	;# 
  3956  0F14                     	;# 
  3957  0F15                     	;# 
  3958  0F16                     	;# 
  3959  0F17                     	;# 
  3960  0F18                     	;# 
  3961  0F19                     	;# 
  3962  0F1A                     	;# 
  3963  0F1B                     	;# 
  3964  0F1C                     	;# 
  3965  0F1D                     	;# 
  3966  0F1E                     	;# 
  3967  0F1F                     	;# 
  3968  0F20                     	;# 
  3969  0F21                     	;# 
  3970  0F22                     	;# 
  3971  0F23                     	;# 
  3972  0F24                     	;# 
  3973  0F25                     	;# 
  3974  0F26                     	;# 
  3975  0F27                     	;# 
  3976  0F28                     	;# 
  3977  0F29                     	;# 
  3978  0F2A                     	;# 
  3979  0F2B                     	;# 
  3980  0F2C                     	;# 
  3981  0F2D                     	;# 
  3982  0F2E                     	;# 
  3983  0F2F                     	;# 
  3984  0F30                     	;# 
  3985  0F31                     	;# 
  3986  0F32                     	;# 
  3987  0F33                     	;# 
  3988  0F34                     	;# 
  3989  0F35                     	;# 
  3990  0F36                     	;# 
  3991  0F37                     	;# 
  3992  0FE4                     	;# 
  3993  0FE5                     	;# 
  3994  0FE6                     	;# 
  3995  0FE7                     	;# 
  3996  0FE8                     	;# 
  3997  0FE9                     	;# 
  3998  0FEA                     	;# 
  3999  0FEB                     	;# 
  4000  0FED                     	;# 
  4001  0FEE                     	;# 
  4002  0FEF                     	;# 
  4003  0000                     	;# 
  4004  0001                     	;# 
  4005  0002                     	;# 
  4006  0003                     	;# 
  4007  0004                     	;# 
  4008  0005                     	;# 
  4009  0006                     	;# 
  4010  0007                     	;# 
  4011  0008                     	;# 
  4012  0009                     	;# 
  4013  000A                     	;# 
  4014  000B                     	;# 
  4015  000C                     	;# 
  4016  000D                     	;# 
  4017  000E                     	;# 
  4018  0010                     	;# 
  4019  0011                     	;# 
  4020  0012                     	;# 
  4021  0013                     	;# 
  4022  0014                     	;# 
  4023  0015                     	;# 
  4024  0015                     	;# 
  4025  0016                     	;# 
  4026  0016                     	;# 
  4027  0017                     	;# 
  4028  0018                     	;# 
  4029  0019                     	;# 
  4030  0019                     	;# 
  4031  001A                     	;# 
  4032  001B                     	;# 
  4033  001C                     	;# 
  4034  001D                     	;# 
  4035  001E                     	;# 
  4036  001F                     	;# 
  4037  008C                     	;# 
  4038  008D                     	;# 
  4039  008E                     	;# 
  4040  0090                     	;# 
  4041  0091                     	;# 
  4042  0092                     	;# 
  4043  0093                     	;# 
  4044  0094                     	;# 
  4045  0097                     	;# 
  4046  009B                     	;# 
  4047  009B                     	;# 
  4048  009C                     	;# 
  4049  009D                     	;# 
  4050  009E                     	;# 
  4051  009F                     	;# 
  4052  010C                     	;# 
  4053  010D                     	;# 
  4054  010E                     	;# 
  4055  0111                     	;# 
  4056  0112                     	;# 
  4057  0113                     	;# 
  4058  0114                     	;# 
  4059  0115                     	;# 
  4060  0116                     	;# 
  4061  0117                     	;# 
  4062  0118                     	;# 
  4063  0119                     	;# 
  4064  018C                     	;# 
  4065  018D                     	;# 
  4066  018E                     	;# 
  4067  0197                     	;# 
  4068  0199                     	;# 
  4069  0199                     	;# 
  4070  0199                     	;# 
  4071  019A                     	;# 
  4072  019A                     	;# 
  4073  019A                     	;# 
  4074  019B                     	;# 
  4075  019B                     	;# 
  4076  019B                     	;# 
  4077  019B                     	;# 
  4078  019B                     	;# 
  4079  019C                     	;# 
  4080  019C                     	;# 
  4081  019C                     	;# 
  4082  019D                     	;# 
  4083  019D                     	;# 
  4084  019D                     	;# 
  4085  019E                     	;# 
  4086  019E                     	;# 
  4087  019E                     	;# 
  4088  019F                     	;# 
  4089  019F                     	;# 
  4090  019F                     	;# 
  4091  019F                     	;# 
  4092  019F                     	;# 
  4093  020C                     	;# 
  4094  020D                     	;# 
  4095  020E                     	;# 
  4096  0211                     	;# 
  4097  0211                     	;# 
  4098  0212                     	;# 
  4099  0212                     	;# 
  4100  0213                     	;# 
  4101  0213                     	;# 
  4102  0214                     	;# 
  4103  0214                     	;# 
  4104  0215                     	;# 
  4105  0215                     	;# 
  4106  0215                     	;# 
  4107  0215                     	;# 
  4108  0216                     	;# 
  4109  0216                     	;# 
  4110  0217                     	;# 
  4111  0217                     	;# 
  4112  0219                     	;# 
  4113  021A                     	;# 
  4114  021B                     	;# 
  4115  021C                     	;# 
  4116  021D                     	;# 
  4117  021D                     	;# 
  4118  021E                     	;# 
  4119  021F                     	;# 
  4120  028C                     	;# 
  4121  028D                     	;# 
  4122  028E                     	;# 
  4123  0291                     	;# 
  4124  0291                     	;# 
  4125  0292                     	;# 
  4126  0293                     	;# 
  4127  0294                     	;# 
  4128  0295                     	;# 
  4129  0295                     	;# 
  4130  0296                     	;# 
  4131  0297                     	;# 
  4132  0298                     	;# 
  4133  029F                     	;# 
  4134  030C                     	;# 
  4135  030D                     	;# 
  4136  030E                     	;# 
  4137  0311                     	;# 
  4138  0311                     	;# 
  4139  0312                     	;# 
  4140  0313                     	;# 
  4141  0314                     	;# 
  4142  0315                     	;# 
  4143  0315                     	;# 
  4144  0316                     	;# 
  4145  0317                     	;# 
  4146  0318                     	;# 
  4147  038C                     	;# 
  4148  038D                     	;# 
  4149  038E                     	;# 
  4150  0391                     	;# 
  4151  0392                     	;# 
  4152  0393                     	;# 
  4153  0394                     	;# 
  4154  0395                     	;# 
  4155  0396                     	;# 
  4156  0397                     	;# 
  4157  0398                     	;# 
  4158  0399                     	;# 
  4159  039A                     	;# 
  4160  039C                     	;# 
  4161  039D                     	;# 
  4162  039E                     	;# 
  4163  039F                     	;# 
  4164  0411                     	;# 
  4165  0411                     	;# 
  4166  0412                     	;# 
  4167  0413                     	;# 
  4168  0414                     	;# 
  4169  0415                     	;# 
  4170  0416                     	;# 
  4171  0417                     	;# 
  4172  0418                     	;# 
  4173  0418                     	;# 
  4174  0419                     	;# 
  4175  041A                     	;# 
  4176  041B                     	;# 
  4177  041C                     	;# 
  4178  041D                     	;# 
  4179  041E                     	;# 
  4180  041F                     	;# 
  4181  0498                     	;# 
  4182  0498                     	;# 
  4183  0499                     	;# 
  4184  049A                     	;# 
  4185  049B                     	;# 
  4186  049B                     	;# 
  4187  049C                     	;# 
  4188  049D                     	;# 
  4189  049E                     	;# 
  4190  049F                     	;# 
  4191  0617                     	;# 
  4192  0618                     	;# 
  4193  0619                     	;# 
  4194  0619                     	;# 
  4195  061A                     	;# 
  4196  061B                     	;# 
  4197  061C                     	;# 
  4198  061C                     	;# 
  4199  061F                     	;# 
  4200  0691                     	;# 
  4201  0692                     	;# 
  4202  0693                     	;# 
  4203  0694                     	;# 
  4204  0695                     	;# 
  4205  0696                     	;# 
  4206  0697                     	;# 
  4207  0698                     	;# 
  4208  0699                     	;# 
  4209  0711                     	;# 
  4210  0712                     	;# 
  4211  0713                     	;# 
  4212  0714                     	;# 
  4213  0715                     	;# 
  4214  0716                     	;# 
  4215  0717                     	;# 
  4216  0718                     	;# 
  4217  0719                     	;# 
  4218  0891                     	;# 
  4219  0891                     	;# 
  4220  0891                     	;# 
  4221  0891                     	;# 
  4222  0891                     	;# 
  4223  0891                     	;# 
  4224  0892                     	;# 
  4225  0892                     	;# 
  4226  0892                     	;# 
  4227  0893                     	;# 
  4228  0893                     	;# 
  4229  0893                     	;# 
  4230  0893                     	;# 
  4231  0893                     	;# 
  4232  0893                     	;# 
  4233  0894                     	;# 
  4234  0894                     	;# 
  4235  0894                     	;# 
  4236  0895                     	;# 
  4237  0895                     	;# 
  4238  0895                     	;# 
  4239  0896                     	;# 
  4240  0896                     	;# 
  4241  0896                     	;# 
  4242  089B                     	;# 
  4243  0911                     	;# 
  4244  0912                     	;# 
  4245  0913                     	;# 
  4246  0914                     	;# 
  4247  0915                     	;# 
  4248  0916                     	;# 
  4249  0918                     	;# 
  4250  0919                     	;# 
  4251  091A                     	;# 
  4252  091B                     	;# 
  4253  091C                     	;# 
  4254  091D                     	;# 
  4255  091E                     	;# 
  4256  091F                     	;# 
  4257  0E0F                     	;# 
  4258  0E10                     	;# 
  4259  0E11                     	;# 
  4260  0E12                     	;# 
  4261  0E13                     	;# 
  4262  0E14                     	;# 
  4263  0E15                     	;# 
  4264  0E16                     	;# 
  4265  0E17                     	;# 
  4266  0E18                     	;# 
  4267  0E19                     	;# 
  4268  0E1A                     	;# 
  4269  0E1B                     	;# 
  4270  0E1C                     	;# 
  4271  0E1D                     	;# 
  4272  0E1E                     	;# 
  4273  0E1F                     	;# 
  4274  0E20                     	;# 
  4275  0E21                     	;# 
  4276  0E22                     	;# 
  4277  0E24                     	;# 
  4278  0E25                     	;# 
  4279  0E28                     	;# 
  4280  0E29                     	;# 
  4281  0E2A                     	;# 
  4282  0E2B                     	;# 
  4283  0E2C                     	;# 
  4284  0E2D                     	;# 
  4285  0E2E                     	;# 
  4286  0E2F                     	;# 
  4287  0E90                     	;# 
  4288  0E91                     	;# 
  4289  0E92                     	;# 
  4290  0E94                     	;# 
  4291  0E95                     	;# 
  4292  0E9C                     	;# 
  4293  0E9D                     	;# 
  4294  0E9E                     	;# 
  4295  0E9F                     	;# 
  4296  0EA0                     	;# 
  4297  0EA1                     	;# 
  4298  0EA2                     	;# 
  4299  0EA3                     	;# 
  4300  0EA4                     	;# 
  4301  0EA5                     	;# 
  4302  0EA6                     	;# 
  4303  0EA7                     	;# 
  4304  0F0F                     	;# 
  4305  0F10                     	;# 
  4306  0F11                     	;# 
  4307  0F12                     	;# 
  4308  0F13                     	;# 
  4309  0F14                     	;# 
  4310  0F15                     	;# 
  4311  0F16                     	;# 
  4312  0F17                     	;# 
  4313  0F18                     	;# 
  4314  0F19                     	;# 
  4315  0F1A                     	;# 
  4316  0F1B                     	;# 
  4317  0F1C                     	;# 
  4318  0F1D                     	;# 
  4319  0F1E                     	;# 
  4320  0F1F                     	;# 
  4321  0F20                     	;# 
  4322  0F21                     	;# 
  4323  0F22                     	;# 
  4324  0F23                     	;# 
  4325  0F24                     	;# 
  4326  0F25                     	;# 
  4327  0F26                     	;# 
  4328  0F27                     	;# 
  4329  0F28                     	;# 
  4330  0F29                     	;# 
  4331  0F2A                     	;# 
  4332  0F2B                     	;# 
  4333  0F2C                     	;# 
  4334  0F2D                     	;# 
  4335  0F2E                     	;# 
  4336  0F2F                     	;# 
  4337  0F30                     	;# 
  4338  0F31                     	;# 
  4339  0F32                     	;# 
  4340  0F33                     	;# 
  4341  0F34                     	;# 
  4342  0F35                     	;# 
  4343  0F36                     	;# 
  4344  0F37                     	;# 
  4345  0FE4                     	;# 
  4346  0FE5                     	;# 
  4347  0FE6                     	;# 
  4348  0FE7                     	;# 
  4349  0FE8                     	;# 
  4350  0FE9                     	;# 
  4351  0FEA                     	;# 
  4352  0FEB                     	;# 
  4353  0FED                     	;# 
  4354  0FEE                     	;# 
  4355  0FEF                     	;# 
  4356  0000                     	;# 
  4357  0001                     	;# 
  4358  0002                     	;# 
  4359  0003                     	;# 
  4360  0004                     	;# 
  4361  0005                     	;# 
  4362  0006                     	;# 
  4363  0007                     	;# 
  4364  0008                     	;# 
  4365  0009                     	;# 
  4366  000A                     	;# 
  4367  000B                     	;# 
  4368  000C                     	;# 
  4369  000D                     	;# 
  4370  000E                     	;# 
  4371  0010                     	;# 
  4372  0011                     	;# 
  4373  0012                     	;# 
  4374  0013                     	;# 
  4375  0014                     	;# 
  4376  0015                     	;# 
  4377  0015                     	;# 
  4378  0016                     	;# 
  4379  0016                     	;# 
  4380  0017                     	;# 
  4381  0018                     	;# 
  4382  0019                     	;# 
  4383  0019                     	;# 
  4384  001A                     	;# 
  4385  001B                     	;# 
  4386  001C                     	;# 
  4387  001D                     	;# 
  4388  001E                     	;# 
  4389  001F                     	;# 
  4390  008C                     	;# 
  4391  008D                     	;# 
  4392  008E                     	;# 
  4393  0090                     	;# 
  4394  0091                     	;# 
  4395  0092                     	;# 
  4396  0093                     	;# 
  4397  0094                     	;# 
  4398  0097                     	;# 
  4399  009B                     	;# 
  4400  009B                     	;# 
  4401  009C                     	;# 
  4402  009D                     	;# 
  4403  009E                     	;# 
  4404  009F                     	;# 
  4405  010C                     	;# 
  4406  010D                     	;# 
  4407  010E                     	;# 
  4408  0111                     	;# 
  4409  0112                     	;# 
  4410  0113                     	;# 
  4411  0114                     	;# 
  4412  0115                     	;# 
  4413  0116                     	;# 
  4414  0117                     	;# 
  4415  0118                     	;# 
  4416  0119                     	;# 
  4417  018C                     	;# 
  4418  018D                     	;# 
  4419  018E                     	;# 
  4420  0197                     	;# 
  4421  0199                     	;# 
  4422  0199                     	;# 
  4423  0199                     	;# 
  4424  019A                     	;# 
  4425  019A                     	;# 
  4426  019A                     	;# 
  4427  019B                     	;# 
  4428  019B                     	;# 
  4429  019B                     	;# 
  4430  019B                     	;# 
  4431  019B                     	;# 
  4432  019C                     	;# 
  4433  019C                     	;# 
  4434  019C                     	;# 
  4435  019D                     	;# 
  4436  019D                     	;# 
  4437  019D                     	;# 
  4438  019E                     	;# 
  4439  019E                     	;# 
  4440  019E                     	;# 
  4441  019F                     	;# 
  4442  019F                     	;# 
  4443  019F                     	;# 
  4444  019F                     	;# 
  4445  019F                     	;# 
  4446  020C                     	;# 
  4447  020D                     	;# 
  4448  020E                     	;# 
  4449  0211                     	;# 
  4450  0211                     	;# 
  4451  0212                     	;# 
  4452  0212                     	;# 
  4453  0213                     	;# 
  4454  0213                     	;# 
  4455  0214                     	;# 
  4456  0214                     	;# 
  4457  0215                     	;# 
  4458  0215                     	;# 
  4459  0215                     	;# 
  4460  0215                     	;# 
  4461  0216                     	;# 
  4462  0216                     	;# 
  4463  0217                     	;# 
  4464  0217                     	;# 
  4465  0219                     	;# 
  4466  021A                     	;# 
  4467  021B                     	;# 
  4468  021C                     	;# 
  4469  021D                     	;# 
  4470  021D                     	;# 
  4471  021E                     	;# 
  4472  021F                     	;# 
  4473  028C                     	;# 
  4474  028D                     	;# 
  4475  028E                     	;# 
  4476  0291                     	;# 
  4477  0291                     	;# 
  4478  0292                     	;# 
  4479  0293                     	;# 
  4480  0294                     	;# 
  4481  0295                     	;# 
  4482  0295                     	;# 
  4483  0296                     	;# 
  4484  0297                     	;# 
  4485  0298                     	;# 
  4486  029F                     	;# 
  4487  030C                     	;# 
  4488  030D                     	;# 
  4489  030E                     	;# 
  4490  0311                     	;# 
  4491  0311                     	;# 
  4492  0312                     	;# 
  4493  0313                     	;# 
  4494  0314                     	;# 
  4495  0315                     	;# 
  4496  0315                     	;# 
  4497  0316                     	;# 
  4498  0317                     	;# 
  4499  0318                     	;# 
  4500  038C                     	;# 
  4501  038D                     	;# 
  4502  038E                     	;# 
  4503  0391                     	;# 
  4504  0392                     	;# 
  4505  0393                     	;# 
  4506  0394                     	;# 
  4507  0395                     	;# 
  4508  0396                     	;# 
  4509  0397                     	;# 
  4510  0398                     	;# 
  4511  0399                     	;# 
  4512  039A                     	;# 
  4513  039C                     	;# 
  4514  039D                     	;# 
  4515  039E                     	;# 
  4516  039F                     	;# 
  4517  0411                     	;# 
  4518  0411                     	;# 
  4519  0412                     	;# 
  4520  0413                     	;# 
  4521  0414                     	;# 
  4522  0415                     	;# 
  4523  0416                     	;# 
  4524  0417                     	;# 
  4525  0418                     	;# 
  4526  0418                     	;# 
  4527  0419                     	;# 
  4528  041A                     	;# 
  4529  041B                     	;# 
  4530  041C                     	;# 
  4531  041D                     	;# 
  4532  041E                     	;# 
  4533  041F                     	;# 
  4534  0498                     	;# 
  4535  0498                     	;# 
  4536  0499                     	;# 
  4537  049A                     	;# 
  4538  049B                     	;# 
  4539  049B                     	;# 
  4540  049C                     	;# 
  4541  049D                     	;# 
  4542  049E                     	;# 
  4543  049F                     	;# 
  4544  0617                     	;# 
  4545  0618                     	;# 
  4546  0619                     	;# 
  4547  0619                     	;# 
  4548  061A                     	;# 
  4549  061B                     	;# 
  4550  061C                     	;# 
  4551  061C                     	;# 
  4552  061F                     	;# 
  4553  0691                     	;# 
  4554  0692                     	;# 
  4555  0693                     	;# 
  4556  0694                     	;# 
  4557  0695                     	;# 
  4558  0696                     	;# 
  4559  0697                     	;# 
  4560  0698                     	;# 
  4561  0699                     	;# 
  4562  0711                     	;# 
  4563  0712                     	;# 
  4564  0713                     	;# 
  4565  0714                     	;# 
  4566  0715                     	;# 
  4567  0716                     	;# 
  4568  0717                     	;# 
  4569  0718                     	;# 
  4570  0719                     	;# 
  4571  0891                     	;# 
  4572  0891                     	;# 
  4573  0891                     	;# 
  4574  0891                     	;# 
  4575  0891                     	;# 
  4576  0891                     	;# 
  4577  0892                     	;# 
  4578  0892                     	;# 
  4579  0892                     	;# 
  4580  0893                     	;# 
  4581  0893                     	;# 
  4582  0893                     	;# 
  4583  0893                     	;# 
  4584  0893                     	;# 
  4585  0893                     	;# 
  4586  0894                     	;# 
  4587  0894                     	;# 
  4588  0894                     	;# 
  4589  0895                     	;# 
  4590  0895                     	;# 
  4591  0895                     	;# 
  4592  0896                     	;# 
  4593  0896                     	;# 
  4594  0896                     	;# 
  4595  089B                     	;# 
  4596  0911                     	;# 
  4597  0912                     	;# 
  4598  0913                     	;# 
  4599  0914                     	;# 
  4600  0915                     	;# 
  4601  0916                     	;# 
  4602  0918                     	;# 
  4603  0919                     	;# 
  4604  091A                     	;# 
  4605  091B                     	;# 
  4606  091C                     	;# 
  4607  091D                     	;# 
  4608  091E                     	;# 
  4609  091F                     	;# 
  4610  0E0F                     	;# 
  4611  0E10                     	;# 
  4612  0E11                     	;# 
  4613  0E12                     	;# 
  4614  0E13                     	;# 
  4615  0E14                     	;# 
  4616  0E15                     	;# 
  4617  0E16                     	;# 
  4618  0E17                     	;# 
  4619  0E18                     	;# 
  4620  0E19                     	;# 
  4621  0E1A                     	;# 
  4622  0E1B                     	;# 
  4623  0E1C                     	;# 
  4624  0E1D                     	;# 
  4625  0E1E                     	;# 
  4626  0E1F                     	;# 
  4627  0E20                     	;# 
  4628  0E21                     	;# 
  4629  0E22                     	;# 
  4630  0E24                     	;# 
  4631  0E25                     	;# 
  4632  0E28                     	;# 
  4633  0E29                     	;# 
  4634  0E2A                     	;# 
  4635  0E2B                     	;# 
  4636  0E2C                     	;# 
  4637  0E2D                     	;# 
  4638  0E2E                     	;# 
  4639  0E2F                     	;# 
  4640  0E90                     	;# 
  4641  0E91                     	;# 
  4642  0E92                     	;# 
  4643  0E94                     	;# 
  4644  0E95                     	;# 
  4645  0E9C                     	;# 
  4646  0E9D                     	;# 
  4647  0E9E                     	;# 
  4648  0E9F                     	;# 
  4649  0EA0                     	;# 
  4650  0EA1                     	;# 
  4651  0EA2                     	;# 
  4652  0EA3                     	;# 
  4653  0EA4                     	;# 
  4654  0EA5                     	;# 
  4655  0EA6                     	;# 
  4656  0EA7                     	;# 
  4657  0F0F                     	;# 
  4658  0F10                     	;# 
  4659  0F11                     	;# 
  4660  0F12                     	;# 
  4661  0F13                     	;# 
  4662  0F14                     	;# 
  4663  0F15                     	;# 
  4664  0F16                     	;# 
  4665  0F17                     	;# 
  4666  0F18                     	;# 
  4667  0F19                     	;# 
  4668  0F1A                     	;# 
  4669  0F1B                     	;# 
  4670  0F1C                     	;# 
  4671  0F1D                     	;# 
  4672  0F1E                     	;# 
  4673  0F1F                     	;# 
  4674  0F20                     	;# 
  4675  0F21                     	;# 
  4676  0F22                     	;# 
  4677  0F23                     	;# 
  4678  0F24                     	;# 
  4679  0F25                     	;# 
  4680  0F26                     	;# 
  4681  0F27                     	;# 
  4682  0F28                     	;# 
  4683  0F29                     	;# 
  4684  0F2A                     	;# 
  4685  0F2B                     	;# 
  4686  0F2C                     	;# 
  4687  0F2D                     	;# 
  4688  0F2E                     	;# 
  4689  0F2F                     	;# 
  4690  0F30                     	;# 
  4691  0F31                     	;# 
  4692  0F32                     	;# 
  4693  0F33                     	;# 
  4694  0F34                     	;# 
  4695  0F35                     	;# 
  4696  0F36                     	;# 
  4697  0F37                     	;# 
  4698  0FE4                     	;# 
  4699  0FE5                     	;# 
  4700  0FE6                     	;# 
  4701  0FE7                     	;# 
  4702  0FE8                     	;# 
  4703  0FE9                     	;# 
  4704  0FEA                     	;# 
  4705  0FEB                     	;# 
  4706  0FED                     	;# 
  4707  0FEE                     	;# 
  4708  0FEF                     	;# 
  4709  0000                     	;# 
  4710  0001                     	;# 
  4711  0002                     	;# 
  4712  0003                     	;# 
  4713  0004                     	;# 
  4714  0005                     	;# 
  4715  0006                     	;# 
  4716  0007                     	;# 
  4717  0008                     	;# 
  4718  0009                     	;# 
  4719  000A                     	;# 
  4720  000B                     	;# 
  4721  000C                     	;# 
  4722  000D                     	;# 
  4723  000E                     	;# 
  4724  0010                     	;# 
  4725  0011                     	;# 
  4726  0012                     	;# 
  4727  0013                     	;# 
  4728  0014                     	;# 
  4729  0015                     	;# 
  4730  0015                     	;# 
  4731  0016                     	;# 
  4732  0016                     	;# 
  4733  0017                     	;# 
  4734  0018                     	;# 
  4735  0019                     	;# 
  4736  0019                     	;# 
  4737  001A                     	;# 
  4738  001B                     	;# 
  4739  001C                     	;# 
  4740  001D                     	;# 
  4741  001E                     	;# 
  4742  001F                     	;# 
  4743  008C                     	;# 
  4744  008D                     	;# 
  4745  008E                     	;# 
  4746  0090                     	;# 
  4747  0091                     	;# 
  4748  0092                     	;# 
  4749  0093                     	;# 
  4750  0094                     	;# 
  4751  0097                     	;# 
  4752  009B                     	;# 
  4753  009B                     	;# 
  4754  009C                     	;# 
  4755  009D                     	;# 
  4756  009E                     	;# 
  4757  009F                     	;# 
  4758  010C                     	;# 
  4759  010D                     	;# 
  4760  010E                     	;# 
  4761  0111                     	;# 
  4762  0112                     	;# 
  4763  0113                     	;# 
  4764  0114                     	;# 
  4765  0115                     	;# 
  4766  0116                     	;# 
  4767  0117                     	;# 
  4768  0118                     	;# 
  4769  0119                     	;# 
  4770  018C                     	;# 
  4771  018D                     	;# 
  4772  018E                     	;# 
  4773  0197                     	;# 
  4774  0199                     	;# 
  4775  0199                     	;# 
  4776  0199                     	;# 
  4777  019A                     	;# 
  4778  019A                     	;# 
  4779  019A                     	;# 
  4780  019B                     	;# 
  4781  019B                     	;# 
  4782  019B                     	;# 
  4783  019B                     	;# 
  4784  019B                     	;# 
  4785  019C                     	;# 
  4786  019C                     	;# 
  4787  019C                     	;# 
  4788  019D                     	;# 
  4789  019D                     	;# 
  4790  019D                     	;# 
  4791  019E                     	;# 
  4792  019E                     	;# 
  4793  019E                     	;# 
  4794  019F                     	;# 
  4795  019F                     	;# 
  4796  019F                     	;# 
  4797  019F                     	;# 
  4798  019F                     	;# 
  4799  020C                     	;# 
  4800  020D                     	;# 
  4801  020E                     	;# 
  4802  0211                     	;# 
  4803  0211                     	;# 
  4804  0212                     	;# 
  4805  0212                     	;# 
  4806  0213                     	;# 
  4807  0213                     	;# 
  4808  0214                     	;# 
  4809  0214                     	;# 
  4810  0215                     	;# 
  4811  0215                     	;# 
  4812  0215                     	;# 
  4813  0215                     	;# 
  4814  0216                     	;# 
  4815  0216                     	;# 
  4816  0217                     	;# 
  4817  0217                     	;# 
  4818  0219                     	;# 
  4819  021A                     	;# 
  4820  021B                     	;# 
  4821  021C                     	;# 
  4822  021D                     	;# 
  4823  021D                     	;# 
  4824  021E                     	;# 
  4825  021F                     	;# 
  4826  028C                     	;# 
  4827  028D                     	;# 
  4828  028E                     	;# 
  4829  0291                     	;# 
  4830  0291                     	;# 
  4831  0292                     	;# 
  4832  0293                     	;# 
  4833  0294                     	;# 
  4834  0295                     	;# 
  4835  0295                     	;# 
  4836  0296                     	;# 
  4837  0297                     	;# 
  4838  0298                     	;# 
  4839  029F                     	;# 
  4840  030C                     	;# 
  4841  030D                     	;# 
  4842  030E                     	;# 
  4843  0311                     	;# 
  4844  0311                     	;# 
  4845  0312                     	;# 
  4846  0313                     	;# 
  4847  0314                     	;# 
  4848  0315                     	;# 
  4849  0315                     	;# 
  4850  0316                     	;# 
  4851  0317                     	;# 
  4852  0318                     	;# 
  4853  038C                     	;# 
  4854  038D                     	;# 
  4855  038E                     	;# 
  4856  0391                     	;# 
  4857  0392                     	;# 
  4858  0393                     	;# 
  4859  0394                     	;# 
  4860  0395                     	;# 
  4861  0396                     	;# 
  4862  0397                     	;# 
  4863  0398                     	;# 
  4864  0399                     	;# 
  4865  039A                     	;# 
  4866  039C                     	;# 
  4867  039D                     	;# 
  4868  039E                     	;# 
  4869  039F                     	;# 
  4870  0411                     	;# 
  4871  0411                     	;# 
  4872  0412                     	;# 
  4873  0413                     	;# 
  4874  0414                     	;# 
  4875  0415                     	;# 
  4876  0416                     	;# 
  4877  0417                     	;# 
  4878  0418                     	;# 
  4879  0418                     	;# 
  4880  0419                     	;# 
  4881  041A                     	;# 
  4882  041B                     	;# 
  4883  041C                     	;# 
  4884  041D                     	;# 
  4885  041E                     	;# 
  4886  041F                     	;# 
  4887  0498                     	;# 
  4888  0498                     	;# 
  4889  0499                     	;# 
  4890  049A                     	;# 
  4891  049B                     	;# 
  4892  049B                     	;# 
  4893  049C                     	;# 
  4894  049D                     	;# 
  4895  049E                     	;# 
  4896  049F                     	;# 
  4897  0617                     	;# 
  4898  0618                     	;# 
  4899  0619                     	;# 
  4900  0619                     	;# 
  4901  061A                     	;# 
  4902  061B                     	;# 
  4903  061C                     	;# 
  4904  061C                     	;# 
  4905  061F                     	;# 
  4906  0691                     	;# 
  4907  0692                     	;# 
  4908  0693                     	;# 
  4909  0694                     	;# 
  4910  0695                     	;# 
  4911  0696                     	;# 
  4912  0697                     	;# 
  4913  0698                     	;# 
  4914  0699                     	;# 
  4915  0711                     	;# 
  4916  0712                     	;# 
  4917  0713                     	;# 
  4918  0714                     	;# 
  4919  0715                     	;# 
  4920  0716                     	;# 
  4921  0717                     	;# 
  4922  0718                     	;# 
  4923  0719                     	;# 
  4924  0891                     	;# 
  4925  0891                     	;# 
  4926  0891                     	;# 
  4927  0891                     	;# 
  4928  0891                     	;# 
  4929  0891                     	;# 
  4930  0892                     	;# 
  4931  0892                     	;# 
  4932  0892                     	;# 
  4933  0893                     	;# 
  4934  0893                     	;# 
  4935  0893                     	;# 
  4936  0893                     	;# 
  4937  0893                     	;# 
  4938  0893                     	;# 
  4939  0894                     	;# 
  4940  0894                     	;# 
  4941  0894                     	;# 
  4942  0895                     	;# 
  4943  0895                     	;# 
  4944  0895                     	;# 
  4945  0896                     	;# 
  4946  0896                     	;# 
  4947  0896                     	;# 
  4948  089B                     	;# 
  4949  0911                     	;# 
  4950  0912                     	;# 
  4951  0913                     	;# 
  4952  0914                     	;# 
  4953  0915                     	;# 
  4954  0916                     	;# 
  4955  0918                     	;# 
  4956  0919                     	;# 
  4957  091A                     	;# 
  4958  091B                     	;# 
  4959  091C                     	;# 
  4960  091D                     	;# 
  4961  091E                     	;# 
  4962  091F                     	;# 
  4963  0E0F                     	;# 
  4964  0E10                     	;# 
  4965  0E11                     	;# 
  4966  0E12                     	;# 
  4967  0E13                     	;# 
  4968  0E14                     	;# 
  4969  0E15                     	;# 
  4970  0E16                     	;# 
  4971  0E17                     	;# 
  4972  0E18                     	;# 
  4973  0E19                     	;# 
  4974  0E1A                     	;# 
  4975  0E1B                     	;# 
  4976  0E1C                     	;# 
  4977  0E1D                     	;# 
  4978  0E1E                     	;# 
  4979  0E1F                     	;# 
  4980  0E20                     	;# 
  4981  0E21                     	;# 
  4982  0E22                     	;# 
  4983  0E24                     	;# 
  4984  0E25                     	;# 
  4985  0E28                     	;# 
  4986  0E29                     	;# 
  4987  0E2A                     	;# 
  4988  0E2B                     	;# 
  4989  0E2C                     	;# 
  4990  0E2D                     	;# 
  4991  0E2E                     	;# 
  4992  0E2F                     	;# 
  4993  0E90                     	;# 
  4994  0E91                     	;# 
  4995  0E92                     	;# 
  4996  0E94                     	;# 
  4997  0E95                     	;# 
  4998  0E9C                     	;# 
  4999  0E9D                     	;# 
  5000  0E9E                     	;# 
  5001  0E9F                     	;# 
  5002  0EA0                     	;# 
  5003  0EA1                     	;# 
  5004  0EA2                     	;# 
  5005  0EA3                     	;# 
  5006  0EA4                     	;# 
  5007  0EA5                     	;# 
  5008  0EA6                     	;# 
  5009  0EA7                     	;# 
  5010  0F0F                     	;# 
  5011  0F10                     	;# 
  5012  0F11                     	;# 
  5013  0F12                     	;# 
  5014  0F13                     	;# 
  5015  0F14                     	;# 
  5016  0F15                     	;# 
  5017  0F16                     	;# 
  5018  0F17                     	;# 
  5019  0F18                     	;# 
  5020  0F19                     	;# 
  5021  0F1A                     	;# 
  5022  0F1B                     	;# 
  5023  0F1C                     	;# 
  5024  0F1D                     	;# 
  5025  0F1E                     	;# 
  5026  0F1F                     	;# 
  5027  0F20                     	;# 
  5028  0F21                     	;# 
  5029  0F22                     	;# 
  5030  0F23                     	;# 
  5031  0F24                     	;# 
  5032  0F25                     	;# 
  5033  0F26                     	;# 
  5034  0F27                     	;# 
  5035  0F28                     	;# 
  5036  0F29                     	;# 
  5037  0F2A                     	;# 
  5038  0F2B                     	;# 
  5039  0F2C                     	;# 
  5040  0F2D                     	;# 
  5041  0F2E                     	;# 
  5042  0F2F                     	;# 
  5043  0F30                     	;# 
  5044  0F31                     	;# 
  5045  0F32                     	;# 
  5046  0F33                     	;# 
  5047  0F34                     	;# 
  5048  0F35                     	;# 
  5049  0F36                     	;# 
  5050  0F37                     	;# 
  5051  0FE4                     	;# 
  5052  0FE5                     	;# 
  5053  0FE6                     	;# 
  5054  0FE7                     	;# 
  5055  0FE8                     	;# 
  5056  0FE9                     	;# 
  5057  0FEA                     	;# 
  5058  0FEB                     	;# 
  5059  0FED                     	;# 
  5060  0FEE                     	;# 
  5061  0FEF                     	;# 
  5062  0000                     	;# 
  5063  0001                     	;# 
  5064  0002                     	;# 
  5065  0003                     	;# 
  5066  0004                     	;# 
  5067  0005                     	;# 
  5068  0006                     	;# 
  5069  0007                     	;# 
  5070  0008                     	;# 
  5071  0009                     	;# 
  5072  000A                     	;# 
  5073  000B                     	;# 
  5074  000C                     	;# 
  5075  000D                     	;# 
  5076  000E                     	;# 
  5077  0010                     	;# 
  5078  0011                     	;# 
  5079  0012                     	;# 
  5080  0013                     	;# 
  5081  0014                     	;# 
  5082  0015                     	;# 
  5083  0015                     	;# 
  5084  0016                     	;# 
  5085  0016                     	;# 
  5086  0017                     	;# 
  5087  0018                     	;# 
  5088  0019                     	;# 
  5089  0019                     	;# 
  5090  001A                     	;# 
  5091  001B                     	;# 
  5092  001C                     	;# 
  5093  001D                     	;# 
  5094  001E                     	;# 
  5095  001F                     	;# 
  5096  008C                     	;# 
  5097  008D                     	;# 
  5098  008E                     	;# 
  5099  0090                     	;# 
  5100  0091                     	;# 
  5101  0092                     	;# 
  5102  0093                     	;# 
  5103  0094                     	;# 
  5104  0097                     	;# 
  5105  009B                     	;# 
  5106  009B                     	;# 
  5107  009C                     	;# 
  5108  009D                     	;# 
  5109  009E                     	;# 
  5110  009F                     	;# 
  5111  010C                     	;# 
  5112  010D                     	;# 
  5113  010E                     	;# 
  5114  0111                     	;# 
  5115  0112                     	;# 
  5116  0113                     	;# 
  5117  0114                     	;# 
  5118  0115                     	;# 
  5119  0116                     	;# 
  5120  0117                     	;# 
  5121  0118                     	;# 
  5122  0119                     	;# 
  5123  018C                     	;# 
  5124  018D                     	;# 
  5125  018E                     	;# 
  5126  0197                     	;# 
  5127  0199                     	;# 
  5128  0199                     	;# 
  5129  0199                     	;# 
  5130  019A                     	;# 
  5131  019A                     	;# 
  5132  019A                     	;# 
  5133  019B                     	;# 
  5134  019B                     	;# 
  5135  019B                     	;# 
  5136  019B                     	;# 
  5137  019B                     	;# 
  5138  019C                     	;# 
  5139  019C                     	;# 
  5140  019C                     	;# 
  5141  019D                     	;# 
  5142  019D                     	;# 
  5143  019D                     	;# 
  5144  019E                     	;# 
  5145  019E                     	;# 
  5146  019E                     	;# 
  5147  019F                     	;# 
  5148  019F                     	;# 
  5149  019F                     	;# 
  5150  019F                     	;# 
  5151  019F                     	;# 
  5152  020C                     	;# 
  5153  020D                     	;# 
  5154  020E                     	;# 
  5155  0211                     	;# 
  5156  0211                     	;# 
  5157  0212                     	;# 
  5158  0212                     	;# 
  5159  0213                     	;# 
  5160  0213                     	;# 
  5161  0214                     	;# 
  5162  0214                     	;# 
  5163  0215                     	;# 
  5164  0215                     	;# 
  5165  0215                     	;# 
  5166  0215                     	;# 
  5167  0216                     	;# 
  5168  0216                     	;# 
  5169  0217                     	;# 
  5170  0217                     	;# 
  5171  0219                     	;# 
  5172  021A                     	;# 
  5173  021B                     	;# 
  5174  021C                     	;# 
  5175  021D                     	;# 
  5176  021D                     	;# 
  5177  021E                     	;# 
  5178  021F                     	;# 
  5179  028C                     	;# 
  5180  028D                     	;# 
  5181  028E                     	;# 
  5182  0291                     	;# 
  5183  0291                     	;# 
  5184  0292                     	;# 
  5185  0293                     	;# 
  5186  0294                     	;# 
  5187  0295                     	;# 
  5188  0295                     	;# 
  5189  0296                     	;# 
  5190  0297                     	;# 
  5191  0298                     	;# 
  5192  029F                     	;# 
  5193  030C                     	;# 
  5194  030D                     	;# 
  5195  030E                     	;# 
  5196  0311                     	;# 
  5197  0311                     	;# 
  5198  0312                     	;# 
  5199  0313                     	;# 
  5200  0314                     	;# 
  5201  0315                     	;# 
  5202  0315                     	;# 
  5203  0316                     	;# 
  5204  0317                     	;# 
  5205  0318                     	;# 
  5206  038C                     	;# 
  5207  038D                     	;# 
  5208  038E                     	;# 
  5209  0391                     	;# 
  5210  0392                     	;# 
  5211  0393                     	;# 
  5212  0394                     	;# 
  5213  0395                     	;# 
  5214  0396                     	;# 
  5215  0397                     	;# 
  5216  0398                     	;# 
  5217  0399                     	;# 
  5218  039A                     	;# 
  5219  039C                     	;# 
  5220  039D                     	;# 
  5221  039E                     	;# 
  5222  039F                     	;# 
  5223  0411                     	;# 
  5224  0411                     	;# 
  5225  0412                     	;# 
  5226  0413                     	;# 
  5227  0414                     	;# 
  5228  0415                     	;# 
  5229  0416                     	;# 
  5230  0417                     	;# 
  5231  0418                     	;# 
  5232  0418                     	;# 
  5233  0419                     	;# 
  5234  041A                     	;# 
  5235  041B                     	;# 
  5236  041C                     	;# 
  5237  041D                     	;# 
  5238  041E                     	;# 
  5239  041F                     	;# 
  5240  0498                     	;# 
  5241  0498                     	;# 
  5242  0499                     	;# 
  5243  049A                     	;# 
  5244  049B                     	;# 
  5245  049B                     	;# 
  5246  049C                     	;# 
  5247  049D                     	;# 
  5248  049E                     	;# 
  5249  049F                     	;# 
  5250  0617                     	;# 
  5251  0618                     	;# 
  5252  0619                     	;# 
  5253  0619                     	;# 
  5254  061A                     	;# 
  5255  061B                     	;# 
  5256  061C                     	;# 
  5257  061C                     	;# 
  5258  061F                     	;# 
  5259  0691                     	;# 
  5260  0692                     	;# 
  5261  0693                     	;# 
  5262  0694                     	;# 
  5263  0695                     	;# 
  5264  0696                     	;# 
  5265  0697                     	;# 
  5266  0698                     	;# 
  5267  0699                     	;# 
  5268  0711                     	;# 
  5269  0712                     	;# 
  5270  0713                     	;# 
  5271  0714                     	;# 
  5272  0715                     	;# 
  5273  0716                     	;# 
  5274  0717                     	;# 
  5275  0718                     	;# 
  5276  0719                     	;# 
  5277  0891                     	;# 
  5278  0891                     	;# 
  5279  0891                     	;# 
  5280  0891                     	;# 
  5281  0891                     	;# 
  5282  0891                     	;# 
  5283  0892                     	;# 
  5284  0892                     	;# 
  5285  0892                     	;# 
  5286  0893                     	;# 
  5287  0893                     	;# 
  5288  0893                     	;# 
  5289  0893                     	;# 
  5290  0893                     	;# 
  5291  0893                     	;# 
  5292  0894                     	;# 
  5293  0894                     	;# 
  5294  0894                     	;# 
  5295  0895                     	;# 
  5296  0895                     	;# 
  5297  0895                     	;# 
  5298  0896                     	;# 
  5299  0896                     	;# 
  5300  0896                     	;# 
  5301  089B                     	;# 
  5302  0911                     	;# 
  5303  0912                     	;# 
  5304  0913                     	;# 
  5305  0914                     	;# 
  5306  0915                     	;# 
  5307  0916                     	;# 
  5308  0918                     	;# 
  5309  0919                     	;# 
  5310  091A                     	;# 
  5311  091B                     	;# 
  5312  091C                     	;# 
  5313  091D                     	;# 
  5314  091E                     	;# 
  5315  091F                     	;# 
  5316  0E0F                     	;# 
  5317  0E10                     	;# 
  5318  0E11                     	;# 
  5319  0E12                     	;# 
  5320  0E13                     	;# 
  5321  0E14                     	;# 
  5322  0E15                     	;# 
  5323  0E16                     	;# 
  5324  0E17                     	;# 
  5325  0E18                     	;# 
  5326  0E19                     	;# 
  5327  0E1A                     	;# 
  5328  0E1B                     	;# 
  5329  0E1C                     	;# 
  5330  0E1D                     	;# 
  5331  0E1E                     	;# 
  5332  0E1F                     	;# 
  5333  0E20                     	;# 
  5334  0E21                     	;# 
  5335  0E22                     	;# 
  5336  0E24                     	;# 
  5337  0E25                     	;# 
  5338  0E28                     	;# 
  5339  0E29                     	;# 
  5340  0E2A                     	;# 
  5341  0E2B                     	;# 
  5342  0E2C                     	;# 
  5343  0E2D                     	;# 
  5344  0E2E                     	;# 
  5345  0E2F                     	;# 
  5346  0E90                     	;# 
  5347  0E91                     	;# 
  5348  0E92                     	;# 
  5349  0E94                     	;# 
  5350  0E95                     	;# 
  5351  0E9C                     	;# 
  5352  0E9D                     	;# 
  5353  0E9E                     	;# 
  5354  0E9F                     	;# 
  5355  0EA0                     	;# 
  5356  0EA1                     	;# 
  5357  0EA2                     	;# 
  5358  0EA3                     	;# 
  5359  0EA4                     	;# 
  5360  0EA5                     	;# 
  5361  0EA6                     	;# 
  5362  0EA7                     	;# 
  5363  0F0F                     	;# 
  5364  0F10                     	;# 
  5365  0F11                     	;# 
  5366  0F12                     	;# 
  5367  0F13                     	;# 
  5368  0F14                     	;# 
  5369  0F15                     	;# 
  5370  0F16                     	;# 
  5371  0F17                     	;# 
  5372  0F18                     	;# 
  5373  0F19                     	;# 
  5374  0F1A                     	;# 
  5375  0F1B                     	;# 
  5376  0F1C                     	;# 
  5377  0F1D                     	;# 
  5378  0F1E                     	;# 
  5379  0F1F                     	;# 
  5380  0F20                     	;# 
  5381  0F21                     	;# 
  5382  0F22                     	;# 
  5383  0F23                     	;# 
  5384  0F24                     	;# 
  5385  0F25                     	;# 
  5386  0F26                     	;# 
  5387  0F27                     	;# 
  5388  0F28                     	;# 
  5389  0F29                     	;# 
  5390  0F2A                     	;# 
  5391  0F2B                     	;# 
  5392  0F2C                     	;# 
  5393  0F2D                     	;# 
  5394  0F2E                     	;# 
  5395  0F2F                     	;# 
  5396  0F30                     	;# 
  5397  0F31                     	;# 
  5398  0F32                     	;# 
  5399  0F33                     	;# 
  5400  0F34                     	;# 
  5401  0F35                     	;# 
  5402  0F36                     	;# 
  5403  0F37                     	;# 
  5404  0FE4                     	;# 
  5405  0FE5                     	;# 
  5406  0FE6                     	;# 
  5407  0FE7                     	;# 
  5408  0FE8                     	;# 
  5409  0FE9                     	;# 
  5410  0FEA                     	;# 
  5411  0FEB                     	;# 
  5412  0FED                     	;# 
  5413  0FEE                     	;# 
  5414  0FEF                     	;# 
  5415  0000                     	;# 
  5416  0001                     	;# 
  5417  0002                     	;# 
  5418  0003                     	;# 
  5419  0004                     	;# 
  5420  0005                     	;# 
  5421  0006                     	;# 
  5422  0007                     	;# 
  5423  0008                     	;# 
  5424  0009                     	;# 
  5425  000A                     	;# 
  5426  000B                     	;# 
  5427  000C                     	;# 
  5428  000D                     	;# 
  5429  000E                     	;# 
  5430  0010                     	;# 
  5431  0011                     	;# 
  5432  0012                     	;# 
  5433  0013                     	;# 
  5434  0014                     	;# 
  5435  0015                     	;# 
  5436  0015                     	;# 
  5437  0016                     	;# 
  5438  0016                     	;# 
  5439  0017                     	;# 
  5440  0018                     	;# 
  5441  0019                     	;# 
  5442  0019                     	;# 
  5443  001A                     	;# 
  5444  001B                     	;# 
  5445  001C                     	;# 
  5446  001D                     	;# 
  5447  001E                     	;# 
  5448  001F                     	;# 
  5449  008C                     	;# 
  5450  008D                     	;# 
  5451  008E                     	;# 
  5452  0090                     	;# 
  5453  0091                     	;# 
  5454  0092                     	;# 
  5455  0093                     	;# 
  5456  0094                     	;# 
  5457  0097                     	;# 
  5458  009B                     	;# 
  5459  009B                     	;# 
  5460  009C                     	;# 
  5461  009D                     	;# 
  5462  009E                     	;# 
  5463  009F                     	;# 
  5464  010C                     	;# 
  5465  010D                     	;# 
  5466  010E                     	;# 
  5467  0111                     	;# 
  5468  0112                     	;# 
  5469  0113                     	;# 
  5470  0114                     	;# 
  5471  0115                     	;# 
  5472  0116                     	;# 
  5473  0117                     	;# 
  5474  0118                     	;# 
  5475  0119                     	;# 
  5476  018C                     	;# 
  5477  018D                     	;# 
  5478  018E                     	;# 
  5479  0197                     	;# 
  5480  0199                     	;# 
  5481  0199                     	;# 
  5482  0199                     	;# 
  5483  019A                     	;# 
  5484  019A                     	;# 
  5485  019A                     	;# 
  5486  019B                     	;# 
  5487  019B                     	;# 
  5488  019B                     	;# 
  5489  019B                     	;# 
  5490  019B                     	;# 
  5491  019C                     	;# 
  5492  019C                     	;# 
  5493  019C                     	;# 
  5494  019D                     	;# 
  5495  019D                     	;# 
  5496  019D                     	;# 
  5497  019E                     	;# 
  5498  019E                     	;# 
  5499  019E                     	;# 
  5500  019F                     	;# 
  5501  019F                     	;# 
  5502  019F                     	;# 
  5503  019F                     	;# 
  5504  019F                     	;# 
  5505  020C                     	;# 
  5506  020D                     	;# 
  5507  020E                     	;# 
  5508  0211                     	;# 
  5509  0211                     	;# 
  5510  0212                     	;# 
  5511  0212                     	;# 
  5512  0213                     	;# 
  5513  0213                     	;# 
  5514  0214                     	;# 
  5515  0214                     	;# 
  5516  0215                     	;# 
  5517  0215                     	;# 
  5518  0215                     	;# 
  5519  0215                     	;# 
  5520  0216                     	;# 
  5521  0216                     	;# 
  5522  0217                     	;# 
  5523  0217                     	;# 
  5524  0219                     	;# 
  5525  021A                     	;# 
  5526  021B                     	;# 
  5527  021C                     	;# 
  5528  021D                     	;# 
  5529  021D                     	;# 
  5530  021E                     	;# 
  5531  021F                     	;# 
  5532  028C                     	;# 
  5533  028D                     	;# 
  5534  028E                     	;# 
  5535  0291                     	;# 
  5536  0291                     	;# 
  5537  0292                     	;# 
  5538  0293                     	;# 
  5539  0294                     	;# 
  5540  0295                     	;# 
  5541  0295                     	;# 
  5542  0296                     	;# 
  5543  0297                     	;# 
  5544  0298                     	;# 
  5545  029F                     	;# 
  5546  030C                     	;# 
  5547  030D                     	;# 
  5548  030E                     	;# 
  5549  0311                     	;# 
  5550  0311                     	;# 
  5551  0312                     	;# 
  5552  0313                     	;# 
  5553  0314                     	;# 
  5554  0315                     	;# 
  5555  0315                     	;# 
  5556  0316                     	;# 
  5557  0317                     	;# 
  5558  0318                     	;# 
  5559  038C                     	;# 
  5560  038D                     	;# 
  5561  038E                     	;# 
  5562  0391                     	;# 
  5563  0392                     	;# 
  5564  0393                     	;# 
  5565  0394                     	;# 
  5566  0395                     	;# 
  5567  0396                     	;# 
  5568  0397                     	;# 
  5569  0398                     	;# 
  5570  0399                     	;# 
  5571  039A                     	;# 
  5572  039C                     	;# 
  5573  039D                     	;# 
  5574  039E                     	;# 
  5575  039F                     	;# 
  5576  0411                     	;# 
  5577  0411                     	;# 
  5578  0412                     	;# 
  5579  0413                     	;# 
  5580  0414                     	;# 
  5581  0415                     	;# 
  5582  0416                     	;# 
  5583  0417                     	;# 
  5584  0418                     	;# 
  5585  0418                     	;# 
  5586  0419                     	;# 
  5587  041A                     	;# 
  5588  041B                     	;# 
  5589  041C                     	;# 
  5590  041D                     	;# 
  5591  041E                     	;# 
  5592  041F                     	;# 
  5593  0498                     	;# 
  5594  0498                     	;# 
  5595  0499                     	;# 
  5596  049A                     	;# 
  5597  049B                     	;# 
  5598  049B                     	;# 
  5599  049C                     	;# 
  5600  049D                     	;# 
  5601  049E                     	;# 
  5602  049F                     	;# 
  5603  0617                     	;# 
  5604  0618                     	;# 
  5605  0619                     	;# 
  5606  0619                     	;# 
  5607  061A                     	;# 
  5608  061B                     	;# 
  5609  061C                     	;# 
  5610  061C                     	;# 
  5611  061F                     	;# 
  5612  0691                     	;# 
  5613  0692                     	;# 
  5614  0693                     	;# 
  5615  0694                     	;# 
  5616  0695                     	;# 
  5617  0696                     	;# 
  5618  0697                     	;# 
  5619  0698                     	;# 
  5620  0699                     	;# 
  5621  0711                     	;# 
  5622  0712                     	;# 
  5623  0713                     	;# 
  5624  0714                     	;# 
  5625  0715                     	;# 
  5626  0716                     	;# 
  5627  0717                     	;# 
  5628  0718                     	;# 
  5629  0719                     	;# 
  5630  0891                     	;# 
  5631  0891                     	;# 
  5632  0891                     	;# 
  5633  0891                     	;# 
  5634  0891                     	;# 
  5635  0891                     	;# 
  5636  0892                     	;# 
  5637  0892                     	;# 
  5638  0892                     	;# 
  5639  0893                     	;# 
  5640  0893                     	;# 
  5641  0893                     	;# 
  5642  0893                     	;# 
  5643  0893                     	;# 
  5644  0893                     	;# 
  5645  0894                     	;# 
  5646  0894                     	;# 
  5647  0894                     	;# 
  5648  0895                     	;# 
  5649  0895                     	;# 
  5650  0895                     	;# 
  5651  0896                     	;# 
  5652  0896                     	;# 
  5653  0896                     	;# 
  5654  089B                     	;# 
  5655  0911                     	;# 
  5656  0912                     	;# 
  5657  0913                     	;# 
  5658  0914                     	;# 
  5659  0915                     	;# 
  5660  0916                     	;# 
  5661  0918                     	;# 
  5662  0919                     	;# 
  5663  091A                     	;# 
  5664  091B                     	;# 
  5665  091C                     	;# 
  5666  091D                     	;# 
  5667  091E                     	;# 
  5668  091F                     	;# 
  5669  0E0F                     	;# 
  5670  0E10                     	;# 
  5671  0E11                     	;# 
  5672  0E12                     	;# 
  5673  0E13                     	;# 
  5674  0E14                     	;# 
  5675  0E15                     	;# 
  5676  0E16                     	;# 
  5677  0E17                     	;# 
  5678  0E18                     	;# 
  5679  0E19                     	;# 
  5680  0E1A                     	;# 
  5681  0E1B                     	;# 
  5682  0E1C                     	;# 
  5683  0E1D                     	;# 
  5684  0E1E                     	;# 
  5685  0E1F                     	;# 
  5686  0E20                     	;# 
  5687  0E21                     	;# 
  5688  0E22                     	;# 
  5689  0E24                     	;# 
  5690  0E25                     	;# 
  5691  0E28                     	;# 
  5692  0E29                     	;# 
  5693  0E2A                     	;# 
  5694  0E2B                     	;# 
  5695  0E2C                     	;# 
  5696  0E2D                     	;# 
  5697  0E2E                     	;# 
  5698  0E2F                     	;# 
  5699  0E90                     	;# 
  5700  0E91                     	;# 
  5701  0E92                     	;# 
  5702  0E94                     	;# 
  5703  0E95                     	;# 
  5704  0E9C                     	;# 
  5705  0E9D                     	;# 
  5706  0E9E                     	;# 
  5707  0E9F                     	;# 
  5708  0EA0                     	;# 
  5709  0EA1                     	;# 
  5710  0EA2                     	;# 
  5711  0EA3                     	;# 
  5712  0EA4                     	;# 
  5713  0EA5                     	;# 
  5714  0EA6                     	;# 
  5715  0EA7                     	;# 
  5716  0F0F                     	;# 
  5717  0F10                     	;# 
  5718  0F11                     	;# 
  5719  0F12                     	;# 
  5720  0F13                     	;# 
  5721  0F14                     	;# 
  5722  0F15                     	;# 
  5723  0F16                     	;# 
  5724  0F17                     	;# 
  5725  0F18                     	;# 
  5726  0F19                     	;# 
  5727  0F1A                     	;# 
  5728  0F1B                     	;# 
  5729  0F1C                     	;# 
  5730  0F1D                     	;# 
  5731  0F1E                     	;# 
  5732  0F1F                     	;# 
  5733  0F20                     	;# 
  5734  0F21                     	;# 
  5735  0F22                     	;# 
  5736  0F23                     	;# 
  5737  0F24                     	;# 
  5738  0F25                     	;# 
  5739  0F26                     	;# 
  5740  0F27                     	;# 
  5741  0F28                     	;# 
  5742  0F29                     	;# 
  5743  0F2A                     	;# 
  5744  0F2B                     	;# 
  5745  0F2C                     	;# 
  5746  0F2D                     	;# 
  5747  0F2E                     	;# 
  5748  0F2F                     	;# 
  5749  0F30                     	;# 
  5750  0F31                     	;# 
  5751  0F32                     	;# 
  5752  0F33                     	;# 
  5753  0F34                     	;# 
  5754  0F35                     	;# 
  5755  0F36                     	;# 
  5756  0F37                     	;# 
  5757  0FE4                     	;# 
  5758  0FE5                     	;# 
  5759  0FE6                     	;# 
  5760  0FE7                     	;# 
  5761  0FE8                     	;# 
  5762  0FE9                     	;# 
  5763  0FEA                     	;# 
  5764  0FEB                     	;# 
  5765  0FED                     	;# 
  5766  0FEE                     	;# 
  5767  0FEF                     	;# 
  5768  0000                     	;# 
  5769  0001                     	;# 
  5770  0002                     	;# 
  5771  0003                     	;# 
  5772  0004                     	;# 
  5773  0005                     	;# 
  5774  0006                     	;# 
  5775  0007                     	;# 
  5776  0008                     	;# 
  5777  0009                     	;# 
  5778  000A                     	;# 
  5779  000B                     	;# 
  5780  000C                     	;# 
  5781  000D                     	;# 
  5782  000E                     	;# 
  5783  0010                     	;# 
  5784  0011                     	;# 
  5785  0012                     	;# 
  5786  0013                     	;# 
  5787  0014                     	;# 
  5788  0015                     	;# 
  5789  0015                     	;# 
  5790  0016                     	;# 
  5791  0016                     	;# 
  5792  0017                     	;# 
  5793  0018                     	;# 
  5794  0019                     	;# 
  5795  0019                     	;# 
  5796  001A                     	;# 
  5797  001B                     	;# 
  5798  001C                     	;# 
  5799  001D                     	;# 
  5800  001E                     	;# 
  5801  001F                     	;# 
  5802  008C                     	;# 
  5803  008D                     	;# 
  5804  008E                     	;# 
  5805  0090                     	;# 
  5806  0091                     	;# 
  5807  0092                     	;# 
  5808  0093                     	;# 
  5809  0094                     	;# 
  5810  0097                     	;# 
  5811  009B                     	;# 
  5812  009B                     	;# 
  5813  009C                     	;# 
  5814  009D                     	;# 
  5815  009E                     	;# 
  5816  009F                     	;# 
  5817  010C                     	;# 
  5818  010D                     	;# 
  5819  010E                     	;# 
  5820  0111                     	;# 
  5821  0112                     	;# 
  5822  0113                     	;# 
  5823  0114                     	;# 
  5824  0115                     	;# 
  5825  0116                     	;# 
  5826  0117                     	;# 
  5827  0118                     	;# 
  5828  0119                     	;# 
  5829  018C                     	;# 
  5830  018D                     	;# 
  5831  018E                     	;# 
  5832  0197                     	;# 
  5833  0199                     	;# 
  5834  0199                     	;# 
  5835  0199                     	;# 
  5836  019A                     	;# 
  5837  019A                     	;# 
  5838  019A                     	;# 
  5839  019B                     	;# 
  5840  019B                     	;# 
  5841  019B                     	;# 
  5842  019B                     	;# 
  5843  019B                     	;# 
  5844  019C                     	;# 
  5845  019C                     	;# 
  5846  019C                     	;# 
  5847  019D                     	;# 
  5848  019D                     	;# 
  5849  019D                     	;# 
  5850  019E                     	;# 
  5851  019E                     	;# 
  5852  019E                     	;# 
  5853  019F                     	;# 
  5854  019F                     	;# 
  5855  019F                     	;# 
  5856  019F                     	;# 
  5857  019F                     	;# 
  5858  020C                     	;# 
  5859  020D                     	;# 
  5860  020E                     	;# 
  5861  0211                     	;# 
  5862  0211                     	;# 
  5863  0212                     	;# 
  5864  0212                     	;# 
  5865  0213                     	;# 
  5866  0213                     	;# 
  5867  0214                     	;# 
  5868  0214                     	;# 
  5869  0215                     	;# 
  5870  0215                     	;# 
  5871  0215                     	;# 
  5872  0215                     	;# 
  5873  0216                     	;# 
  5874  0216                     	;# 
  5875  0217                     	;# 
  5876  0217                     	;# 
  5877  0219                     	;# 
  5878  021A                     	;# 
  5879  021B                     	;# 
  5880  021C                     	;# 
  5881  021D                     	;# 
  5882  021D                     	;# 
  5883  021E                     	;# 
  5884  021F                     	;# 
  5885  028C                     	;# 
  5886  028D                     	;# 
  5887  028E                     	;# 
  5888  0291                     	;# 
  5889  0291                     	;# 
  5890  0292                     	;# 
  5891  0293                     	;# 
  5892  0294                     	;# 
  5893  0295                     	;# 
  5894  0295                     	;# 
  5895  0296                     	;# 
  5896  0297                     	;# 
  5897  0298                     	;# 
  5898  029F                     	;# 
  5899  030C                     	;# 
  5900  030D                     	;# 
  5901  030E                     	;# 
  5902  0311                     	;# 
  5903  0311                     	;# 
  5904  0312                     	;# 
  5905  0313                     	;# 
  5906  0314                     	;# 
  5907  0315                     	;# 
  5908  0315                     	;# 
  5909  0316                     	;# 
  5910  0317                     	;# 
  5911  0318                     	;# 
  5912  038C                     	;# 
  5913  038D                     	;# 
  5914  038E                     	;# 
  5915  0391                     	;# 
  5916  0392                     	;# 
  5917  0393                     	;# 
  5918  0394                     	;# 
  5919  0395                     	;# 
  5920  0396                     	;# 
  5921  0397                     	;# 
  5922  0398                     	;# 
  5923  0399                     	;# 
  5924  039A                     	;# 
  5925  039C                     	;# 
  5926  039D                     	;# 
  5927  039E                     	;# 
  5928  039F                     	;# 
  5929  0411                     	;# 
  5930  0411                     	;# 
  5931  0412                     	;# 
  5932  0413                     	;# 
  5933  0414                     	;# 
  5934  0415                     	;# 
  5935  0416                     	;# 
  5936  0417                     	;# 
  5937  0418                     	;# 
  5938  0418                     	;# 
  5939  0419                     	;# 
  5940  041A                     	;# 
  5941  041B                     	;# 
  5942  041C                     	;# 
  5943  041D                     	;# 
  5944  041E                     	;# 
  5945  041F                     	;# 
  5946  0498                     	;# 
  5947  0498                     	;# 
  5948  0499                     	;# 
  5949  049A                     	;# 
  5950  049B                     	;# 
  5951  049B                     	;# 
  5952  049C                     	;# 
  5953  049D                     	;# 
  5954  049E                     	;# 
  5955  049F                     	;# 
  5956  0617                     	;# 
  5957  0618                     	;# 
  5958  0619                     	;# 
  5959  0619                     	;# 
  5960  061A                     	;# 
  5961  061B                     	;# 
  5962  061C                     	;# 
  5963  061C                     	;# 
  5964  061F                     	;# 
  5965  0691                     	;# 
  5966  0692                     	;# 
  5967  0693                     	;# 
  5968  0694                     	;# 
  5969  0695                     	;# 
  5970  0696                     	;# 
  5971  0697                     	;# 
  5972  0698                     	;# 
  5973  0699                     	;# 
  5974  0711                     	;# 
  5975  0712                     	;# 
  5976  0713                     	;# 
  5977  0714                     	;# 
  5978  0715                     	;# 
  5979  0716                     	;# 
  5980  0717                     	;# 
  5981  0718                     	;# 
  5982  0719                     	;# 
  5983  0891                     	;# 
  5984  0891                     	;# 
  5985  0891                     	;# 
  5986  0891                     	;# 
  5987  0891                     	;# 
  5988  0891                     	;# 
  5989  0892                     	;# 
  5990  0892                     	;# 
  5991  0892                     	;# 
  5992  0893                     	;# 
  5993  0893                     	;# 
  5994  0893                     	;# 
  5995  0893                     	;# 
  5996  0893                     	;# 
  5997  0893                     	;# 
  5998  0894                     	;# 
  5999  0894                     	;# 
  6000  0894                     	;# 
  6001  0895                     	;# 
  6002  0895                     	;# 
  6003  0895                     	;# 
  6004  0896                     	;# 
  6005  0896                     	;# 
  6006  0896                     	;# 
  6007  089B                     	;# 
  6008  0911                     	;# 
  6009  0912                     	;# 
  6010  0913                     	;# 
  6011  0914                     	;# 
  6012  0915                     	;# 
  6013  0916                     	;# 
  6014  0918                     	;# 
  6015  0919                     	;# 
  6016  091A                     	;# 
  6017  091B                     	;# 
  6018  091C                     	;# 
  6019  091D                     	;# 
  6020  091E                     	;# 
  6021  091F                     	;# 
  6022  0E0F                     	;# 
  6023  0E10                     	;# 
  6024  0E11                     	;# 
  6025  0E12                     	;# 
  6026  0E13                     	;# 
  6027  0E14                     	;# 
  6028  0E15                     	;# 
  6029  0E16                     	;# 
  6030  0E17                     	;# 
  6031  0E18                     	;# 
  6032  0E19                     	;# 
  6033  0E1A                     	;# 
  6034  0E1B                     	;# 
  6035  0E1C                     	;# 
  6036  0E1D                     	;# 
  6037  0E1E                     	;# 
  6038  0E1F                     	;# 
  6039  0E20                     	;# 
  6040  0E21                     	;# 
  6041  0E22                     	;# 
  6042  0E24                     	;# 
  6043  0E25                     	;# 
  6044  0E28                     	;# 
  6045  0E29                     	;# 
  6046  0E2A                     	;# 
  6047  0E2B                     	;# 
  6048  0E2C                     	;# 
  6049  0E2D                     	;# 
  6050  0E2E                     	;# 
  6051  0E2F                     	;# 
  6052  0E90                     	;# 
  6053  0E91                     	;# 
  6054  0E92                     	;# 
  6055  0E94                     	;# 
  6056  0E95                     	;# 
  6057  0E9C                     	;# 
  6058  0E9D                     	;# 
  6059  0E9E                     	;# 
  6060  0E9F                     	;# 
  6061  0EA0                     	;# 
  6062  0EA1                     	;# 
  6063  0EA2                     	;# 
  6064  0EA3                     	;# 
  6065  0EA4                     	;# 
  6066  0EA5                     	;# 
  6067  0EA6                     	;# 
  6068  0EA7                     	;# 
  6069  0F0F                     	;# 
  6070  0F10                     	;# 
  6071  0F11                     	;# 
  6072  0F12                     	;# 
  6073  0F13                     	;# 
  6074  0F14                     	;# 
  6075  0F15                     	;# 
  6076  0F16                     	;# 
  6077  0F17                     	;# 
  6078  0F18                     	;# 
  6079  0F19                     	;# 
  6080  0F1A                     	;# 
  6081  0F1B                     	;# 
  6082  0F1C                     	;# 
  6083  0F1D                     	;# 
  6084  0F1E                     	;# 
  6085  0F1F                     	;# 
  6086  0F20                     	;# 
  6087  0F21                     	;# 
  6088  0F22                     	;# 
  6089  0F23                     	;# 
  6090  0F24                     	;# 
  6091  0F25                     	;# 
  6092  0F26                     	;# 
  6093  0F27                     	;# 
  6094  0F28                     	;# 
  6095  0F29                     	;# 
  6096  0F2A                     	;# 
  6097  0F2B                     	;# 
  6098  0F2C                     	;# 
  6099  0F2D                     	;# 
  6100  0F2E                     	;# 
  6101  0F2F                     	;# 
  6102  0F30                     	;# 
  6103  0F31                     	;# 
  6104  0F32                     	;# 
  6105  0F33                     	;# 
  6106  0F34                     	;# 
  6107  0F35                     	;# 
  6108  0F36                     	;# 
  6109  0F37                     	;# 
  6110  0FE4                     	;# 
  6111  0FE5                     	;# 
  6112  0FE6                     	;# 
  6113  0FE7                     	;# 
  6114  0FE8                     	;# 
  6115  0FE9                     	;# 
  6116  0FEA                     	;# 
  6117  0FEB                     	;# 
  6118  0FED                     	;# 
  6119  0FEE                     	;# 
  6120  0FEF                     	;# 
  6121  0000                     	;# 
  6122  0001                     	;# 
  6123  0002                     	;# 
  6124  0003                     	;# 
  6125  0004                     	;# 
  6126  0005                     	;# 
  6127  0006                     	;# 
  6128  0007                     	;# 
  6129  0008                     	;# 
  6130  0009                     	;# 
  6131  000A                     	;# 
  6132  000B                     	;# 
  6133  000C                     	;# 
  6134  000D                     	;# 
  6135  000E                     	;# 
  6136  0010                     	;# 
  6137  0011                     	;# 
  6138  0012                     	;# 
  6139  0013                     	;# 
  6140  0014                     	;# 
  6141  0015                     	;# 
  6142  0015                     	;# 
  6143  0016                     	;# 
  6144  0016                     	;# 
  6145  0017                     	;# 
  6146  0018                     	;# 
  6147  0019                     	;# 
  6148  0019                     	;# 
  6149  001A                     	;# 
  6150  001B                     	;# 
  6151  001C                     	;# 
  6152  001D                     	;# 
  6153  001E                     	;# 
  6154  001F                     	;# 
  6155  008C                     	;# 
  6156  008D                     	;# 
  6157  008E                     	;# 
  6158  0090                     	;# 
  6159  0091                     	;# 
  6160  0092                     	;# 
  6161  0093                     	;# 
  6162  0094                     	;# 
  6163  0097                     	;# 
  6164  009B                     	;# 
  6165  009B                     	;# 
  6166  009C                     	;# 
  6167  009D                     	;# 
  6168  009E                     	;# 
  6169  009F                     	;# 
  6170  010C                     	;# 
  6171  010D                     	;# 
  6172  010E                     	;# 
  6173  0111                     	;# 
  6174  0112                     	;# 
  6175  0113                     	;# 
  6176  0114                     	;# 
  6177  0115                     	;# 
  6178  0116                     	;# 
  6179  0117                     	;# 
  6180  0118                     	;# 
  6181  0119                     	;# 
  6182  018C                     	;# 
  6183  018D                     	;# 
  6184  018E                     	;# 
  6185  0197                     	;# 
  6186  0199                     	;# 
  6187  0199                     	;# 
  6188  0199                     	;# 
  6189  019A                     	;# 
  6190  019A                     	;# 
  6191  019A                     	;# 
  6192  019B                     	;# 
  6193  019B                     	;# 
  6194  019B                     	;# 
  6195  019B                     	;# 
  6196  019B                     	;# 
  6197  019C                     	;# 
  6198  019C                     	;# 
  6199  019C                     	;# 
  6200  019D                     	;# 
  6201  019D                     	;# 
  6202  019D                     	;# 
  6203  019E                     	;# 
  6204  019E                     	;# 
  6205  019E                     	;# 
  6206  019F                     	;# 
  6207  019F                     	;# 
  6208  019F                     	;# 
  6209  019F                     	;# 
  6210  019F                     	;# 
  6211  020C                     	;# 
  6212  020D                     	;# 
  6213  020E                     	;# 
  6214  0211                     	;# 
  6215  0211                     	;# 
  6216  0212                     	;# 
  6217  0212                     	;# 
  6218  0213                     	;# 
  6219  0213                     	;# 
  6220  0214                     	;# 
  6221  0214                     	;# 
  6222  0215                     	;# 
  6223  0215                     	;# 
  6224  0215                     	;# 
  6225  0215                     	;# 
  6226  0216                     	;# 
  6227  0216                     	;# 
  6228  0217                     	;# 
  6229  0217                     	;# 
  6230  0219                     	;# 
  6231  021A                     	;# 
  6232  021B                     	;# 
  6233  021C                     	;# 
  6234  021D                     	;# 
  6235  021D                     	;# 
  6236  021E                     	;# 
  6237  021F                     	;# 
  6238  028C                     	;# 
  6239  028D                     	;# 
  6240  028E                     	;# 
  6241  0291                     	;# 
  6242  0291                     	;# 
  6243  0292                     	;# 
  6244  0293                     	;# 
  6245  0294                     	;# 
  6246  0295                     	;# 
  6247  0295                     	;# 
  6248  0296                     	;# 
  6249  0297                     	;# 
  6250  0298                     	;# 
  6251  029F                     	;# 
  6252  030C                     	;# 
  6253  030D                     	;# 
  6254  030E                     	;# 
  6255  0311                     	;# 
  6256  0311                     	;# 
  6257  0312                     	;# 
  6258  0313                     	;# 
  6259  0314                     	;# 
  6260  0315                     	;# 
  6261  0315                     	;# 
  6262  0316                     	;# 
  6263  0317                     	;# 
  6264  0318                     	;# 
  6265  038C                     	;# 
  6266  038D                     	;# 
  6267  038E                     	;# 
  6268  0391                     	;# 
  6269  0392                     	;# 
  6270  0393                     	;# 
  6271  0394                     	;# 
  6272  0395                     	;# 
  6273  0396                     	;# 
  6274  0397                     	;# 
  6275  0398                     	;# 
  6276  0399                     	;# 
  6277  039A                     	;# 
  6278  039C                     	;# 
  6279  039D                     	;# 
  6280  039E                     	;# 
  6281  039F                     	;# 
  6282  0411                     	;# 
  6283  0411                     	;# 
  6284  0412                     	;# 
  6285  0413                     	;# 
  6286  0414                     	;# 
  6287  0415                     	;# 
  6288  0416                     	;# 
  6289  0417                     	;# 
  6290  0418                     	;# 
  6291  0418                     	;# 
  6292  0419                     	;# 
  6293  041A                     	;# 
  6294  041B                     	;# 
  6295  041C                     	;# 
  6296  041D                     	;# 
  6297  041E                     	;# 
  6298  041F                     	;# 
  6299  0498                     	;# 
  6300  0498                     	;# 
  6301  0499                     	;# 
  6302  049A                     	;# 
  6303  049B                     	;# 
  6304  049B                     	;# 
  6305  049C                     	;# 
  6306  049D                     	;# 
  6307  049E                     	;# 
  6308  049F                     	;# 
  6309  0617                     	;# 
  6310  0618                     	;# 
  6311  0619                     	;# 
  6312  0619                     	;# 
  6313  061A                     	;# 
  6314  061B                     	;# 
  6315  061C                     	;# 
  6316  061C                     	;# 
  6317  061F                     	;# 
  6318  0691                     	;# 
  6319  0692                     	;# 
  6320  0693                     	;# 
  6321  0694                     	;# 
  6322  0695                     	;# 
  6323  0696                     	;# 
  6324  0697                     	;# 
  6325  0698                     	;# 
  6326  0699                     	;# 
  6327  0711                     	;# 
  6328  0712                     	;# 
  6329  0713                     	;# 
  6330  0714                     	;# 
  6331  0715                     	;# 
  6332  0716                     	;# 
  6333  0717                     	;# 
  6334  0718                     	;# 
  6335  0719                     	;# 
  6336  0891                     	;# 
  6337  0891                     	;# 
  6338  0891                     	;# 
  6339  0891                     	;# 
  6340  0891                     	;# 
  6341  0891                     	;# 
  6342  0892                     	;# 
  6343  0892                     	;# 
  6344  0892                     	;# 
  6345  0893                     	;# 
  6346  0893                     	;# 
  6347  0893                     	;# 
  6348  0893                     	;# 
  6349  0893                     	;# 
  6350  0893                     	;# 
  6351  0894                     	;# 
  6352  0894                     	;# 
  6353  0894                     	;# 
  6354  0895                     	;# 
  6355  0895                     	;# 
  6356  0895                     	;# 
  6357  0896                     	;# 
  6358  0896                     	;# 
  6359  0896                     	;# 
  6360  089B                     	;# 
  6361  0911                     	;# 
  6362  0912                     	;# 
  6363  0913                     	;# 
  6364  0914                     	;# 
  6365  0915                     	;# 
  6366  0916                     	;# 
  6367  0918                     	;# 
  6368  0919                     	;# 
  6369  091A                     	;# 
  6370  091B                     	;# 
  6371  091C                     	;# 
  6372  091D                     	;# 
  6373  091E                     	;# 
  6374  091F                     	;# 
  6375  0E0F                     	;# 
  6376  0E10                     	;# 
  6377  0E11                     	;# 
  6378  0E12                     	;# 
  6379  0E13                     	;# 
  6380  0E14                     	;# 
  6381  0E15                     	;# 
  6382  0E16                     	;# 
  6383  0E17                     	;# 
  6384  0E18                     	;# 
  6385  0E19                     	;# 
  6386  0E1A                     	;# 
  6387  0E1B                     	;# 
  6388  0E1C                     	;# 
  6389  0E1D                     	;# 
  6390  0E1E                     	;# 
  6391  0E1F                     	;# 
  6392  0E20                     	;# 
  6393  0E21                     	;# 
  6394  0E22                     	;# 
  6395  0E24                     	;# 
  6396  0E25                     	;# 
  6397  0E28                     	;# 
  6398  0E29                     	;# 
  6399  0E2A                     	;# 
  6400  0E2B                     	;# 
  6401  0E2C                     	;# 
  6402  0E2D                     	;# 
  6403  0E2E                     	;# 
  6404  0E2F                     	;# 
  6405  0E90                     	;# 
  6406  0E91                     	;# 
  6407  0E92                     	;# 
  6408  0E94                     	;# 
  6409  0E95                     	;# 
  6410  0E9C                     	;# 
  6411  0E9D                     	;# 
  6412  0E9E                     	;# 
  6413  0E9F                     	;# 
  6414  0EA0                     	;# 
  6415  0EA1                     	;# 
  6416  0EA2                     	;# 
  6417  0EA3                     	;# 
  6418  0EA4                     	;# 
  6419  0EA5                     	;# 
  6420  0EA6                     	;# 
  6421  0EA7                     	;# 
  6422  0F0F                     	;# 
  6423  0F10                     	;# 
  6424  0F11                     	;# 
  6425  0F12                     	;# 
  6426  0F13                     	;# 
  6427  0F14                     	;# 
  6428  0F15                     	;# 
  6429  0F16                     	;# 
  6430  0F17                     	;# 
  6431  0F18                     	;# 
  6432  0F19                     	;# 
  6433  0F1A                     	;# 
  6434  0F1B                     	;# 
  6435  0F1C                     	;# 
  6436  0F1D                     	;# 
  6437  0F1E                     	;# 
  6438  0F1F                     	;# 
  6439  0F20                     	;# 
  6440  0F21                     	;# 
  6441  0F22                     	;# 
  6442  0F23                     	;# 
  6443  0F24                     	;# 
  6444  0F25                     	;# 
  6445  0F26                     	;# 
  6446  0F27                     	;# 
  6447  0F28                     	;# 
  6448  0F29                     	;# 
  6449  0F2A                     	;# 
  6450  0F2B                     	;# 
  6451  0F2C                     	;# 
  6452  0F2D                     	;# 
  6453  0F2E                     	;# 
  6454  0F2F                     	;# 
  6455  0F30                     	;# 
  6456  0F31                     	;# 
  6457  0F32                     	;# 
  6458  0F33                     	;# 
  6459  0F34                     	;# 
  6460  0F35                     	;# 
  6461  0F36                     	;# 
  6462  0F37                     	;# 
  6463  0FE4                     	;# 
  6464  0FE5                     	;# 
  6465  0FE6                     	;# 
  6466  0FE7                     	;# 
  6467  0FE8                     	;# 
  6468  0FE9                     	;# 
  6469  0FEA                     	;# 
  6470  0FEB                     	;# 
  6471  0FED                     	;# 
  6472  0FEE                     	;# 
  6473  0FEF                     	;# 
  6474  0000                     	;# 
  6475  0001                     	;# 
  6476  0002                     	;# 
  6477  0003                     	;# 
  6478  0004                     	;# 
  6479  0005                     	;# 
  6480  0006                     	;# 
  6481  0007                     	;# 
  6482  0008                     	;# 
  6483  0009                     	;# 
  6484  000A                     	;# 
  6485  000B                     	;# 
  6486  000C                     	;# 
  6487  000D                     	;# 
  6488  000E                     	;# 
  6489  0010                     	;# 
  6490  0011                     	;# 
  6491  0012                     	;# 
  6492  0013                     	;# 
  6493  0014                     	;# 
  6494  0015                     	;# 
  6495  0015                     	;# 
  6496  0016                     	;# 
  6497  0016                     	;# 
  6498  0017                     	;# 
  6499  0018                     	;# 
  6500  0019                     	;# 
  6501  0019                     	;# 
  6502  001A                     	;# 
  6503  001B                     	;# 
  6504  001C                     	;# 
  6505  001D                     	;# 
  6506  001E                     	;# 
  6507  001F                     	;# 
  6508  008C                     	;# 
  6509  008D                     	;# 
  6510  008E                     	;# 
  6511  0090                     	;# 
  6512  0091                     	;# 
  6513  0092                     	;# 
  6514  0093                     	;# 
  6515  0094                     	;# 
  6516  0097                     	;# 
  6517  009B                     	;# 
  6518  009B                     	;# 
  6519  009C                     	;# 
  6520  009D                     	;# 
  6521  009E                     	;# 
  6522  009F                     	;# 
  6523  010C                     	;# 
  6524  010D                     	;# 
  6525  010E                     	;# 
  6526  0111                     	;# 
  6527  0112                     	;# 
  6528  0113                     	;# 
  6529  0114                     	;# 
  6530  0115                     	;# 
  6531  0116                     	;# 
  6532  0117                     	;# 
  6533  0118                     	;# 
  6534  0119                     	;# 
  6535  018C                     	;# 
  6536  018D                     	;# 
  6537  018E                     	;# 
  6538  0197                     	;# 
  6539  0199                     	;# 
  6540  0199                     	;# 
  6541  0199                     	;# 
  6542  019A                     	;# 
  6543  019A                     	;# 
  6544  019A                     	;# 
  6545  019B                     	;# 
  6546  019B                     	;# 
  6547  019B                     	;# 
  6548  019B                     	;# 
  6549  019B                     	;# 
  6550  019C                     	;# 
  6551  019C                     	;# 
  6552  019C                     	;# 
  6553  019D                     	;# 
  6554  019D                     	;# 
  6555  019D                     	;# 
  6556  019E                     	;# 
  6557  019E                     	;# 
  6558  019E                     	;# 
  6559  019F                     	;# 
  6560  019F                     	;# 
  6561  019F                     	;# 
  6562  019F                     	;# 
  6563  019F                     	;# 
  6564  020C                     	;# 
  6565  020D                     	;# 
  6566  020E                     	;# 
  6567  0211                     	;# 
  6568  0211                     	;# 
  6569  0212                     	;# 
  6570  0212                     	;# 
  6571  0213                     	;# 
  6572  0213                     	;# 
  6573  0214                     	;# 
  6574  0214                     	;# 
  6575  0215                     	;# 
  6576  0215                     	;# 
  6577  0215                     	;# 
  6578  0215                     	;# 
  6579  0216                     	;# 
  6580  0216                     	;# 
  6581  0217                     	;# 
  6582  0217                     	;# 
  6583  0219                     	;# 
  6584  021A                     	;# 
  6585  021B                     	;# 
  6586  021C                     	;# 
  6587  021D                     	;# 
  6588  021D                     	;# 
  6589  021E                     	;# 
  6590  021F                     	;# 
  6591  028C                     	;# 
  6592  028D                     	;# 
  6593  028E                     	;# 
  6594  0291                     	;# 
  6595  0291                     	;# 
  6596  0292                     	;# 
  6597  0293                     	;# 
  6598  0294                     	;# 
  6599  0295                     	;# 
  6600  0295                     	;# 
  6601  0296                     	;# 
  6602  0297                     	;# 
  6603  0298                     	;# 
  6604  029F                     	;# 
  6605  030C                     	;# 
  6606  030D                     	;# 
  6607  030E                     	;# 
  6608  0311                     	;# 
  6609  0311                     	;# 
  6610  0312                     	;# 
  6611  0313                     	;# 
  6612  0314                     	;# 
  6613  0315                     	;# 
  6614  0315                     	;# 
  6615  0316                     	;# 
  6616  0317                     	;# 
  6617  0318                     	;# 
  6618  038C                     	;# 
  6619  038D                     	;# 
  6620  038E                     	;# 
  6621  0391                     	;# 
  6622  0392                     	;# 
  6623  0393                     	;# 
  6624  0394                     	;# 
  6625  0395                     	;# 
  6626  0396                     	;# 
  6627  0397                     	;# 
  6628  0398                     	;# 
  6629  0399                     	;# 
  6630  039A                     	;# 
  6631  039C                     	;# 
  6632  039D                     	;# 
  6633  039E                     	;# 
  6634  039F                     	;# 
  6635  0411                     	;# 
  6636  0411                     	;# 
  6637  0412                     	;# 
  6638  0413                     	;# 
  6639  0414                     	;# 
  6640  0415                     	;# 
  6641  0416                     	;# 
  6642  0417                     	;# 
  6643  0418                     	;# 
  6644  0418                     	;# 
  6645  0419                     	;# 
  6646  041A                     	;# 
  6647  041B                     	;# 
  6648  041C                     	;# 
  6649  041D                     	;# 
  6650  041E                     	;# 
  6651  041F                     	;# 
  6652  0498                     	;# 
  6653  0498                     	;# 
  6654  0499                     	;# 
  6655  049A                     	;# 
  6656  049B                     	;# 
  6657  049B                     	;# 
  6658  049C                     	;# 
  6659  049D                     	;# 
  6660  049E                     	;# 
  6661  049F                     	;# 
  6662  0617                     	;# 
  6663  0618                     	;# 
  6664  0619                     	;# 
  6665  0619                     	;# 
  6666  061A                     	;# 
  6667  061B                     	;# 
  6668  061C                     	;# 
  6669  061C                     	;# 
  6670  061F                     	;# 
  6671  0691                     	;# 
  6672  0692                     	;# 
  6673  0693                     	;# 
  6674  0694                     	;# 
  6675  0695                     	;# 
  6676  0696                     	;# 
  6677  0697                     	;# 
  6678  0698                     	;# 
  6679  0699                     	;# 
  6680  0711                     	;# 
  6681  0712                     	;# 
  6682  0713                     	;# 
  6683  0714                     	;# 
  6684  0715                     	;# 
  6685  0716                     	;# 
  6686  0717                     	;# 
  6687  0718                     	;# 
  6688  0719                     	;# 
  6689  0891                     	;# 
  6690  0891                     	;# 
  6691  0891                     	;# 
  6692  0891                     	;# 
  6693  0891                     	;# 
  6694  0891                     	;# 
  6695  0892                     	;# 
  6696  0892                     	;# 
  6697  0892                     	;# 
  6698  0893                     	;# 
  6699  0893                     	;# 
  6700  0893                     	;# 
  6701  0893                     	;# 
  6702  0893                     	;# 
  6703  0893                     	;# 
  6704  0894                     	;# 
  6705  0894                     	;# 
  6706  0894                     	;# 
  6707  0895                     	;# 
  6708  0895                     	;# 
  6709  0895                     	;# 
  6710  0896                     	;# 
  6711  0896                     	;# 
  6712  0896                     	;# 
  6713  089B                     	;# 
  6714  0911                     	;# 
  6715  0912                     	;# 
  6716  0913                     	;# 
  6717  0914                     	;# 
  6718  0915                     	;# 
  6719  0916                     	;# 
  6720  0918                     	;# 
  6721  0919                     	;# 
  6722  091A                     	;# 
  6723  091B                     	;# 
  6724  091C                     	;# 
  6725  091D                     	;# 
  6726  091E                     	;# 
  6727  091F                     	;# 
  6728  0E0F                     	;# 
  6729  0E10                     	;# 
  6730  0E11                     	;# 
  6731  0E12                     	;# 
  6732  0E13                     	;# 
  6733  0E14                     	;# 
  6734  0E15                     	;# 
  6735  0E16                     	;# 
  6736  0E17                     	;# 
  6737  0E18                     	;# 
  6738  0E19                     	;# 
  6739  0E1A                     	;# 
  6740  0E1B                     	;# 
  6741  0E1C                     	;# 
  6742  0E1D                     	;# 
  6743  0E1E                     	;# 
  6744  0E1F                     	;# 
  6745  0E20                     	;# 
  6746  0E21                     	;# 
  6747  0E22                     	;# 
  6748  0E24                     	;# 
  6749  0E25                     	;# 
  6750  0E28                     	;# 
  6751  0E29                     	;# 
  6752  0E2A                     	;# 
  6753  0E2B                     	;# 
  6754  0E2C                     	;# 
  6755  0E2D                     	;# 
  6756  0E2E                     	;# 
  6757  0E2F                     	;# 
  6758  0E90                     	;# 
  6759  0E91                     	;# 
  6760  0E92                     	;# 
  6761  0E94                     	;# 
  6762  0E95                     	;# 
  6763  0E9C                     	;# 
  6764  0E9D                     	;# 
  6765  0E9E                     	;# 
  6766  0E9F                     	;# 
  6767  0EA0                     	;# 
  6768  0EA1                     	;# 
  6769  0EA2                     	;# 
  6770  0EA3                     	;# 
  6771  0EA4                     	;# 
  6772  0EA5                     	;# 
  6773  0EA6                     	;# 
  6774  0EA7                     	;# 
  6775  0F0F                     	;# 
  6776  0F10                     	;# 
  6777  0F11                     	;# 
  6778  0F12                     	;# 
  6779  0F13                     	;# 
  6780  0F14                     	;# 
  6781  0F15                     	;# 
  6782  0F16                     	;# 
  6783  0F17                     	;# 
  6784  0F18                     	;# 
  6785  0F19                     	;# 
  6786  0F1A                     	;# 
  6787  0F1B                     	;# 
  6788  0F1C                     	;# 
  6789  0F1D                     	;# 
  6790  0F1E                     	;# 
  6791  0F1F                     	;# 
  6792  0F20                     	;# 
  6793  0F21                     	;# 
  6794  0F22                     	;# 
  6795  0F23                     	;# 
  6796  0F24                     	;# 
  6797  0F25                     	;# 
  6798  0F26                     	;# 
  6799  0F27                     	;# 
  6800  0F28                     	;# 
  6801  0F29                     	;# 
  6802  0F2A                     	;# 
  6803  0F2B                     	;# 
  6804  0F2C                     	;# 
  6805  0F2D                     	;# 
  6806  0F2E                     	;# 
  6807  0F2F                     	;# 
  6808  0F30                     	;# 
  6809  0F31                     	;# 
  6810  0F32                     	;# 
  6811  0F33                     	;# 
  6812  0F34                     	;# 
  6813  0F35                     	;# 
  6814  0F36                     	;# 
  6815  0F37                     	;# 
  6816  0FE4                     	;# 
  6817  0FE5                     	;# 
  6818  0FE6                     	;# 
  6819  0FE7                     	;# 
  6820  0FE8                     	;# 
  6821  0FE9                     	;# 
  6822  0FEA                     	;# 
  6823  0FEB                     	;# 
  6824  0FED                     	;# 
  6825  0FEE                     	;# 
  6826  0FEF                     	;# 
  6827                           
  6828 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
  6829  001F                     _T2CONbits	set	31
  6830  001F                     _T2CON	set	31
  6831  001D                     _TMR2	set	29
  6832  001E                     _PR2	set	30
  6833  0013                     _PIR3bits	set	19
  6834  001B                     _T1CONbits	set	27
  6835  001B                     _T1CON	set	27
  6836  0011                     _PIR1bits	set	17
  6837  0019                     _TMR1L	set	25
  6838  001A                     _TMR1H	set	26
  6839  001C                     _T1GCON	set	28
  6840  0014                     _PIR4bits	set	20
  6841  0017                     _T0CON0bits	set	23
  6842  0017                     _T0CON0	set	23
  6843  0010                     _PIR0bits	set	16
  6844  0015                     _TMR0L	set	21
  6845  0016                     _TMR0H	set	22
  6846  0018                     _T0CON1	set	24
  6847  000D                     _PORTBbits	set	13
  6848  000E                     _PORTCbits	set	14
  6849  000C                     _PORTAbits	set	12
  6850  000B                     _INTCONbits	set	11
  6851  0014                     _PIR4	set	20
  6852  0013                     _PIR3	set	19
  6853  0012                     _PIR2	set	18
  6854  0011                     _PIR1	set	17
  6855  0010                     _PIR0	set	16
  6856  008E                     _TRISC	set	142
  6857  008D                     _TRISB	set	141
  6858  008C                     _TRISA	set	140
  6859  0093                     _PIE3bits	set	147
  6860  0091                     _PIE1bits	set	145
  6861  0094                     _PIE4bits	set	148
  6862  0090                     _PIE0bits	set	144
  6863  0097                     _WDTCON	set	151
  6864  008D                     _TRISBbits	set	141
  6865  008E                     _TRISCbits	set	142
  6866  008C                     _TRISAbits	set	140
  6867  0094                     _PIE4	set	148
  6868  0093                     _PIE3	set	147
  6869  0092                     _PIE2	set	146
  6870  0091                     _PIE1	set	145
  6871  0090                     _PIE0	set	144
  6872  010E                     _LATC	set	270
  6873  010D                     _LATB	set	269
  6874  010C                     _LATA	set	268
  6875  010D                     _LATBbits	set	269
  6876  010E                     _LATCbits	set	270
  6877  010C                     _LATAbits	set	268
  6878  018C                     _ANSELA	set	396
  6879  018D                     _ANSELB	set	397
  6880  018E                     _ANSELC	set	398
  6881  0199                     _RC1REG	set	409
  6882  019D                     _RC1STAbits	set	413
  6883  019A                     _TX1REG	set	410
  6884  019E                     _TX1STAbits	set	414
  6885  019C                     _SP1BRGH	set	412
  6886  019B                     _SP1BRGL	set	411
  6887  019E                     _TX1STA	set	414
  6888  019D                     _RC1STA	set	413
  6889  019F                     _BAUD1CON	set	415
  6890  020E                     _WPUC	set	526
  6891  020C                     _WPUA	set	524
  6892  020D                     _WPUB	set	525
  6893  028E                     _ODCONC	set	654
  6894  028D                     _ODCONB	set	653
  6895  028C                     _ODCONA	set	652
  6896  0295                     _CCPR2L	set	661
  6897  0296                     _CCPR2H	set	662
  6898  0298                     _CCP2CAP	set	664
  6899  0297                     _CCP2CON	set	663
  6900  029F                     _CCPTMRSbits	set	671
  6901  0291                     _CCPR1L	set	657
  6902  0292                     _CCPR1H	set	658
  6903  0294                     _CCP1CAP	set	660
  6904  0293                     _CCP1CON	set	659
  6905  0317                     _CCP4CONbits	set	791
  6906  0315                     _CCPR4L	set	789
  6907  0316                     _CCPR4H	set	790
  6908  0317                     _CCP4CON	set	791
  6909  030E                     _SLRCONC	set	782
  6910  030D                     _SLRCONB	set	781
  6911  030C                     _SLRCONA	set	780
  6912  0311                     _CCPR3L	set	785
  6913  0312                     _CCPR3H	set	786
  6914  0314                     _CCP3CAP	set	788
  6915  0313                     _CCP3CON	set	787
  6916  038E                     _INLVLC	set	910
  6917  038D                     _INLVLB	set	909
  6918  038C                     _INLVLA	set	908
  6919  0414                     _T3GCONbits	set	1044
  6920  0413                     _T3CONbits	set	1043
  6921  0413                     _T3CON	set	1043
  6922  0411                     _TMR3L	set	1041
  6923  0412                     _TMR3H	set	1042
  6924  0414                     _T3GCON	set	1044
  6925  061F                     _PWMTMRSbits	set	1567
  6926  0617                     _PWM5DCL	set	1559
  6927  0618                     _PWM5DCH	set	1560
  6928  0619                     _PWM5CON	set	1561
  6929  0916                     _PMD5	set	2326
  6930  0915                     _PMD4	set	2325
  6931  0914                     _PMD3	set	2324
  6932  0913                     _PMD2	set	2323
  6933  0912                     _PMD1	set	2322
  6934  0911                     _PMD0	set	2321
  6935  091E                     _OSCTUNE	set	2334
  6936  091F                     _OSCFRQ	set	2335
  6937  091D                     _OSCEN	set	2333
  6938  091B                     _OSCCON3	set	2331
  6939  0919                     _OSCCON1	set	2329
  6940  48E0                     _PLLR	set	18656
  6941  0E16                     _CCP3PPS	set	3606
  6942  0E15                     _CCP2PPS	set	3605
  6943  0E14                     _CCP1PPS	set	3604
  6944  0E24                     _RXPPS	set	3620
  6945  0E9E                     _RB6PPS	set	3742
  6946  0EA1                     _RC1PPS	set	3745
  6947  0EA4                     _RC4PPS	set	3748
  6948                           
  6949                           	psect	stringtext1
  6950  0525                     __pstringtext1:
  6951  0525                     STR_2:
  6952  0525  3445               	retlw	69	;'E'
  6953  0526  3452               	retlw	82	;'R'
  6954  0527  3452               	retlw	82	;'R'
  6955  0528  344F               	retlw	79	;'O'
  6956  0529  3452               	retlw	82	;'R'
  6957  052A  343A               	retlw	58	;':'
  6958  052B  3420               	retlw	32	;' '
  6959  052C  3449               	retlw	73	;'I'
  6960  052D  346E               	retlw	110	;'n'
  6961  052E  3476               	retlw	118	;'v'
  6962  052F  3461               	retlw	97	;'a'
  6963  0530  346C               	retlw	108	;'l'
  6964  0531  3469               	retlw	105	;'i'
  6965  0532  3464               	retlw	100	;'d'
  6966  0533  3420               	retlw	32	;' '
  6967  0534  3474               	retlw	116	;'t'
  6968  0535  3472               	retlw	114	;'r'
  6969  0536  3469               	retlw	105	;'i'
  6970  0537  3467               	retlw	103	;'g'
  6971  0538  3450               	retlw	80	;'P'
  6972  0539  3469               	retlw	105	;'i'
  6973  053A  346E               	retlw	110	;'n'
  6974  053B  3420               	retlw	32	;' '
  6975  053C  3428               	retlw	40	;'('
  6976  053D  346D               	retlw	109	;'m'
  6977  053E  3475               	retlw	117	;'u'
  6978  053F  3473               	retlw	115	;'s'
  6979  0540  3474               	retlw	116	;'t'
  6980  0541  3420               	retlw	32	;' '
  6981  0542  344E               	retlw	78	;'N'
  6982  0543  344F               	retlw	79	;'O'
  6983  0544  3454               	retlw	84	;'T'
  6984  0545  3420               	retlw	32	;' '
  6985  0546  3462               	retlw	98	;'b'
  6986  0547  3465               	retlw	101	;'e'
  6987  0548  3420               	retlw	32	;' '
  6988  0549  345B               	retlw	91	;'['
  6989  054A  3441               	retlw	65	;'A'
  6990  054B  3432               	retlw	50	;'2'
  6991  054C  342C               	retlw	44	;','
  6992  054D  3420               	retlw	32	;' '
  6993  054E  3441               	retlw	65	;'A'
  6994  054F  3433               	retlw	51	;'3'
  6995  0550  342C               	retlw	44	;','
  6996  0551  3420               	retlw	32	;' '
  6997  0552  3441               	retlw	65	;'A'
  6998  0553  3434               	retlw	52	;'4'
  6999  0554  342C               	retlw	44	;','
  7000  0555  3420               	retlw	32	;' '
  7001  0556  3443               	retlw	67	;'C'
  7002  0557  3433               	retlw	51	;'3'
  7003  0558  342C               	retlw	44	;','
  7004  0559  3420               	retlw	32	;' '
  7005  055A  3443               	retlw	67	;'C'
  7006  055B  3435               	retlw	53	;'5'
  7007  055C  345D               	retlw	93	;']'
  7008  055D  3429               	retlw	41	;')'
  7009  055E  3400               	retlw	0
  7010                           
  7011                           	psect	stringtext2
  7012  0607                     __pstringtext2:
  7013  0607                     STR_1:
  7014  0607  3445               	retlw	69	;'E'
  7015  0608  3452               	retlw	82	;'R'
  7016  0609  3452               	retlw	82	;'R'
  7017  060A  344F               	retlw	79	;'O'
  7018  060B  3452               	retlw	82	;'R'
  7019  060C  343A               	retlw	58	;':'
  7020  060D  3420               	retlw	32	;' '
  7021  060E  3449               	retlw	73	;'I'
  7022  060F  346E               	retlw	110	;'n'
  7023  0610  3476               	retlw	118	;'v'
  7024  0611  3461               	retlw	97	;'a'
  7025  0612  346C               	retlw	108	;'l'
  7026  0613  3469               	retlw	105	;'i'
  7027  0614  3464               	retlw	100	;'d'
  7028  0615  3420               	retlw	32	;' '
  7029  0616  3465               	retlw	101	;'e'
  7030  0617  3463               	retlw	99	;'c'
  7031  0618  3468               	retlw	104	;'h'
  7032  0619  346F               	retlw	111	;'o'
  7033  061A  3450               	retlw	80	;'P'
  7034  061B  3469               	retlw	105	;'i'
  7035  061C  346E               	retlw	110	;'n'
  7036  061D  3420               	retlw	32	;' '
  7037  061E  3428               	retlw	40	;'('
  7038  061F  346D               	retlw	109	;'m'
  7039  0620  3475               	retlw	117	;'u'
  7040  0621  3473               	retlw	115	;'s'
  7041  0622  3474               	retlw	116	;'t'
  7042  0623  3420               	retlw	32	;' '
  7043  0624  3462               	retlw	98	;'b'
  7044  0625  3465               	retlw	101	;'e'
  7045  0626  3420               	retlw	32	;' '
  7046  0627  345B               	retlw	91	;'['
  7047  0628  3441               	retlw	65	;'A'
  7048  0629  3432               	retlw	50	;'2'
  7049  062A  342C               	retlw	44	;','
  7050  062B  3420               	retlw	32	;' '
  7051  062C  3441               	retlw	65	;'A'
  7052  062D  3434               	retlw	52	;'4'
  7053  062E  342C               	retlw	44	;','
  7054  062F  3420               	retlw	32	;' '
  7055  0630  3443               	retlw	67	;'C'
  7056  0631  3433               	retlw	51	;'3'
  7057  0632  342C               	retlw	44	;','
  7058  0633  3420               	retlw	32	;' '
  7059  0634  3443               	retlw	67	;'C'
  7060  0635  3435               	retlw	53	;'5'
  7061  0636  345D               	retlw	93	;']'
  7062  0637  3429               	retlw	41	;')'
  7063  0638  3400               	retlw	0
  7064                           
  7065                           	psect	stringtext3
  7066  0000                     __pstringtext3:
  7067                           
  7068                           	psect	cinit
  7069  0090                     start_initialization:	
  7070                           ; #config settings
  7071                           
  7072  0090                     __initialization:
  7073                           
  7074                           ; Clear objects allocated to COMMON
  7075  0090  01FA               	clrf	__pbssCOMMON& (0+127)
  7076  0091  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  7077  0092  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  7078  0093  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  7079                           
  7080                           ; Clear objects allocated to BANK0
  7081  0094  3020               	movlw	low __pbssBANK0
  7082  0095  0084               	movwf	4
  7083  0096  3000               	movlw	high __pbssBANK0
  7084  0097  0085               	movwf	5
  7085  0098  302A               	movlw	42
  7086  0099  318F  2769  3180   	fcall	clear_ram0
  7087                           
  7088                           ; Clear objects allocated to BANK1
  7089  009C  30A0               	movlw	low __pbssBANK1
  7090  009D  0084               	movwf	4
  7091  009E  3000               	movlw	high __pbssBANK1
  7092  009F  0085               	movwf	5
  7093  00A0  3040               	movlw	64
  7094  00A1  318F  2769  3180   	fcall	clear_ram0
  7095  00A4                     end_of_initialization:	
  7096                           ;End of C runtime variable initialization code
  7097                           
  7098  00A4                     __end_of__initialization:
  7099  00A4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7100  00A5  0020               	movlb	0
  7101  00A6  3180  28A8         	ljmp	_main	;jump to C main() function
  7102                           
  7103                           	psect	bssCOMMON
  7104  007A                     __pbssCOMMON:
  7105  007A                     _eusartRxTail:
  7106  007A                     	ds	1
  7107  007B                     _lastTrig@ccp3$F969:
  7108  007B                     	ds	1
  7109  007C                     _lastTrig@ccp2$F848:
  7110  007C                     	ds	1
  7111  007D                     _lastTrig@ccp1$F706:
  7112  007D                     	ds	1
  7113                           
  7114                           	psect	bssBANK0
  7115  0020                     __pbssBANK0:
  7116  0020                     _timer3ReloadVal:
  7117  0020                     	ds	2
  7118  0022                     _EUSART_OverrunErrorHandler:
  7119  0022                     	ds	2
  7120  0024                     _EUSART_FramingErrorHandler:
  7121  0024                     	ds	2
  7122  0026                     _EUSART_RxDefaultInterruptHandler:
  7123  0026                     	ds	2
  7124  0028                     _EUSART_TxDefaultInterruptHandler:
  7125  0028                     	ds	2
  7126  002A                     _timer1ReloadVal:
  7127  002A                     	ds	2
  7128  002C                     _ticksDown@ccp3$F967:
  7129  002C                     	ds	2
  7130  002E                     _ticksUp@ccp3$F966:
  7131  002E                     	ds	2
  7132  0030                     _CCP3_CallBack:
  7133  0030                     	ds	2
  7134  0032                     _ticksDown@ccp2$F846:
  7135  0032                     	ds	2
  7136  0034                     _ticksUp@ccp2$F845:
  7137  0034                     	ds	2
  7138  0036                     _CCP2_CallBack:
  7139  0036                     	ds	2
  7140  0038                     _ticksDown:
  7141  0038                     	ds	2
  7142  003A                     _ticksUp:
  7143  003A                     	ds	2
  7144  003C                     _CCP1_CallBack:
  7145  003C                     	ds	2
  7146  003E                     _dutyCyclePercent:
  7147  003E                     	ds	1
  7148  003F                     _eusartRxLastError:
  7149  003F                     	ds	1
  7150  0040                     _eusartRxCount:
  7151  0040                     	ds	1
  7152  0041                     _eusartRxHead:
  7153  0041                     	ds	1
  7154  0042                     _eusartTxBufferRemaining:
  7155  0042                     	ds	1
  7156  0043                     _eusartTxTail:
  7157  0043                     	ds	1
  7158  0044                     _eusartTxHead:
  7159  0044                     	ds	1
  7160  0045                     _sameSens@ccp3$F968:
  7161  0045                     	ds	1
  7162  0046                     _sameSens@ccp2$F847:
  7163  0046                     	ds	1
  7164  0047                     _sameSens:
  7165  0047                     	ds	1
  7166  0048                     _CountCallBack:
  7167  0048                     	ds	1
  7168  0049                     _lastTrig:
  7169  0049                     	ds	1
  7170                           
  7171                           	psect	bssBANK1
  7172  00A0                     __pbssBANK1:
  7173  00A0                     _eusartRxStatusBuffer:
  7174  00A0                     	ds	8
  7175  00A8                     _eusartRxBuffer:
  7176  00A8                     	ds	8
  7177  00B0                     _eusartTxBuffer:
  7178  00B0                     	ds	8
  7179  00B8                     _Sens3:
  7180  00B8                     	ds	6
  7181  00BE                     _Sens2:
  7182  00BE                     	ds	6
  7183  00C4                     _Sens1:
  7184  00C4                     	ds	6
  7185  00CA                     _micros@FRT$F1508:
  7186  00CA                     	ds	4
  7187  00CE                     _millis:
  7188  00CE                     	ds	4
  7189  00D2                     _micros:
  7190  00D2                     	ds	4
  7191  00D6                     _dutyCycle10bit:
  7192  00D6                     	ds	2
  7193  00D8                     _ocCount:
  7194  00D8                     	ds	2
  7195  00DA                     _currFreq:
  7196  00DA                     	ds	2
  7197  00DC                     _EUSART_ErrorHandler:
  7198  00DC                     	ds	2
  7199  00DE                     _TMR0_InterruptHandler:
  7200  00DE                     	ds	2
  7201                           
  7202                           	psect	clrtext
  7203  0F69                     clear_ram0:	
  7204                           ;	Called with FSR0 containing the base address, and
  7205                           ;	WREG with the size to clear
  7206                           
  7207  0F69  0064               	clrwdt	;clear the watchdog before getting into this loop
  7208  0F6A                     clrloop0:
  7209  0F6A  0180               	clrf	0	;clear RAM location pointed to by FSR
  7210  0F6B  3101               	addfsr 0,1
  7211  0F6C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7212  0F6D  2F6A               	goto	clrloop0	;have we reached the end yet?
  7213  0F6E  3400               	retlw	0	;all done for this memory range, return
  7214                           
  7215                           	psect	cstackCOMMON
  7216  0070                     __pcstackCOMMON:
  7217  0070                     ?_JSN_GetLastTrig:
  7218  0070                     ??_JSN_GetLastTrig:	
  7219                           ; 1 bytes @ 0x0
  7220                           
  7221  0070                     ?_SYSTEM_Initialize:	
  7222                           ; 1 bytes @ 0x0
  7223                           
  7224  0070                     ?_PMD_Initialize:	
  7225                           ; 1 bytes @ 0x0
  7226                           
  7227  0070                     ?_PIN_MANAGER_Initialize:	
  7228                           ; 1 bytes @ 0x0
  7229                           
  7230  0070                     ?_OSCILLATOR_Initialize:	
  7231                           ; 1 bytes @ 0x0
  7232                           
  7233  0070                     ?_WDT_Initialize:	
  7234                           ; 1 bytes @ 0x0
  7235                           
  7236  0070                     ?_CCP3_Initialize:	
  7237                           ; 1 bytes @ 0x0
  7238                           
  7239  0070                     ?_CCP1_Initialize:	
  7240                           ; 1 bytes @ 0x0
  7241                           
  7242  0070                     ?_TMR2_Initialize:	
  7243                           ; 1 bytes @ 0x0
  7244                           
  7245  0070                     ?_TMR0_Initialize:	
  7246                           ; 1 bytes @ 0x0
  7247                           
  7248  0070                     ?_CCP2_Initialize:	
  7249                           ; 1 bytes @ 0x0
  7250                           
  7251  0070                     ?_CCP4_Initialize:	
  7252                           ; 1 bytes @ 0x0
  7253                           
  7254  0070                     ?_TMR3_Initialize:	
  7255                           ; 1 bytes @ 0x0
  7256                           
  7257  0070                     ?_PWM5_Initialize:	
  7258                           ; 1 bytes @ 0x0
  7259                           
  7260  0070                     ?_TMR1_Initialize:	
  7261                           ; 1 bytes @ 0x0
  7262                           
  7263  0070                     ?_EUSART_Initialize:	
  7264                           ; 1 bytes @ 0x0
  7265                           
  7266  0070                     ?_TMR0_CallBack:	
  7267                           ; 1 bytes @ 0x0
  7268                           
  7269  0070                     ??_TMR0_CallBack:	
  7270                           ; 1 bytes @ 0x0
  7271                           
  7272  0070                     ?_FRT_IncMillis:	
  7273                           ; 1 bytes @ 0x0
  7274                           
  7275  0070                     ??_FRT_IncMillis:	
  7276                           ; 1 bytes @ 0x0
  7277                           
  7278  0070                     ?_FRT_IncMicros:	
  7279                           ; 1 bytes @ 0x0
  7280                           
  7281  0070                     ??_FRT_IncMicros:	
  7282                           ; 1 bytes @ 0x0
  7283                           
  7284  0070                     ?_EUSART_Receive_ISR:	
  7285                           ; 1 bytes @ 0x0
  7286                           
  7287  0070                     ?_EUSART_Transmit_ISR:	
  7288                           ; 1 bytes @ 0x0
  7289                           
  7290  0070                     ??_EUSART_Transmit_ISR:	
  7291                           ; 1 bytes @ 0x0
  7292                           
  7293  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  7294                           ; 1 bytes @ 0x0
  7295                           
  7296  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  7297                           ; 1 bytes @ 0x0
  7298                           
  7299  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  7300                           ; 1 bytes @ 0x0
  7301                           
  7302  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  7303                           ; 1 bytes @ 0x0
  7304                           
  7305  0070                     ?_EUSART_DefaultErrorHandler:	
  7306                           ; 1 bytes @ 0x0
  7307                           
  7308  0070                     ?_EUSART_RxDataHandler:	
  7309                           ; 1 bytes @ 0x0
  7310                           
  7311  0070                     ??_EUSART_RxDataHandler:	
  7312                           ; 1 bytes @ 0x0
  7313                           
  7314  0070                     ?_CCP4_CompareISR:	
  7315                           ; 1 bytes @ 0x0
  7316                           
  7317  0070                     ??_CCP4_CompareISR:	
  7318                           ; 1 bytes @ 0x0
  7319                           
  7320  0070                     ?_TMR3_ISR:	
  7321                           ; 1 bytes @ 0x0
  7322                           
  7323  0070                     ?_SpeakerTone_Off:	
  7324                           ; 1 bytes @ 0x0
  7325                           
  7326  0070                     ?_SpeakerTone_On:	
  7327                           ; 1 bytes @ 0x0
  7328                           
  7329  0070                     ?_TMR3_StopTimer:	
  7330                           ; 1 bytes @ 0x0
  7331                           
  7332  0070                     ?_TMR3_Reload:	
  7333                           ; 1 bytes @ 0x0
  7334                           
  7335  0070                     ?_TMR3_StartTimer:	
  7336                           ; 1 bytes @ 0x0
  7337                           
  7338  0070                     ?_PIC16_Init:	
  7339                           ; 1 bytes @ 0x0
  7340                           
  7341  0070                     ?_ReadPin:	
  7342                           ; 1 bytes @ 0x0
  7343                           
  7344  0070                     ??_ReadPin:	
  7345                           ; 1 bytes @ 0x0
  7346                           
  7347  0070                     ?_TMR0_ReadTimer:	
  7348                           ; 1 bytes @ 0x0
  7349                           
  7350  0070                     ?_TMR0_ISR:	
  7351                           ; 1 bytes @ 0x0
  7352                           
  7353  0070                     ??_TMR0_ISR:	
  7354                           ; 1 bytes @ 0x0
  7355                           
  7356  0070                     ?_TMR0_GetCallBackNum:	
  7357                           ; 1 bytes @ 0x0
  7358                           
  7359  0070                     ?_CCP1_CaptureISR:	
  7360                           ; 1 bytes @ 0x0
  7361                           
  7362  0070                     ?_CCP2_CaptureISR:	
  7363                           ; 1 bytes @ 0x0
  7364                           
  7365  0070                     ?_CCP3_CaptureISR:	
  7366                           ; 1 bytes @ 0x0
  7367                           
  7368  0070                     ?_TMR1_WriteTimer:	
  7369                           ; 1 bytes @ 0x0
  7370                           
  7371  0070                     ?_TMR1_ISR:	
  7372                           ; 1 bytes @ 0x0
  7373                           
  7374  0070                     ?_INTERRUPT_InterruptManager:	
  7375                           ; 1 bytes @ 0x0
  7376                           
  7377  0070                     ?_SpeakerTone_Init:	
  7378                           ; 1 bytes @ 0x0
  7379                           
  7380  0070                     ?i1_TMR3_WriteTimer:	
  7381                           ; 1 bytes @ 0x0
  7382                           
  7383  0070                     ?i1_TMR3_Reload:	
  7384                           ; 1 bytes @ 0x0
  7385                           
  7386  0070                     ?_main:	
  7387                           ; 1 bytes @ 0x0
  7388                           
  7389  0070                     TMR1_WriteTimer@timerVal:	
  7390                           ; 2 bytes @ 0x0
  7391                           
  7392  0070                     i1TMR3_WriteTimer@timerVal:	
  7393                           ; 2 bytes @ 0x0
  7394                           
  7395                           
  7396                           ; 2 bytes @ 0x0
  7397  0070                     	ds	1
  7398  0071                     ??_EUSART_Receive_ISR:
  7399  0071                     ??_EUSART_DefaultErrorHandler:	
  7400                           ; 1 bytes @ 0x1
  7401                           
  7402                           
  7403                           ; 1 bytes @ 0x1
  7404  0071                     	ds	1
  7405  0072                     ??_TMR3_ISR:
  7406  0072                     ??_TMR1_WriteTimer:	
  7407                           ; 1 bytes @ 0x2
  7408                           
  7409  0072                     ??_TMR1_ISR:	
  7410                           ; 1 bytes @ 0x2
  7411                           
  7412  0072                     ??i1_TMR3_WriteTimer:	
  7413                           ; 1 bytes @ 0x2
  7414                           
  7415  0072                     ??i1_TMR3_Reload:	
  7416                           ; 1 bytes @ 0x2
  7417                           
  7418  0072                     ReadPin@pin:	
  7419                           ; 1 bytes @ 0x2
  7420                           
  7421                           
  7422                           ; 1 bytes @ 0x2
  7423  0072                     	ds	1
  7424  0073                     ?_CCP1_DefaultCallBack:
  7425  0073                     ?_CCP2_DefaultCallBack:	
  7426                           ; 1 bytes @ 0x3
  7427                           
  7428  0073                     ?_CCP3_DefaultCallBack:	
  7429                           ; 1 bytes @ 0x3
  7430                           
  7431  0073                     CCP1_DefaultCallBack@capturedValue:	
  7432                           ; 1 bytes @ 0x3
  7433                           
  7434  0073                     CCP2_DefaultCallBack@capturedValue:	
  7435                           ; 2 bytes @ 0x3
  7436                           
  7437  0073                     CCP3_DefaultCallBack@capturedValue:	
  7438                           ; 2 bytes @ 0x3
  7439                           
  7440                           
  7441                           ; 2 bytes @ 0x3
  7442  0073                     	ds	2
  7443  0075                     ??_CCP1_DefaultCallBack:
  7444  0075                     ??_CCP2_DefaultCallBack:	
  7445                           ; 1 bytes @ 0x5
  7446                           
  7447  0075                     ??_CCP3_DefaultCallBack:	
  7448                           ; 1 bytes @ 0x5
  7449                           
  7450                           
  7451                           ; 1 bytes @ 0x5
  7452  0075                     	ds	2
  7453  0077                     ??_CCP1_CaptureISR:
  7454  0077                     ??_CCP2_CaptureISR:	
  7455                           ; 1 bytes @ 0x7
  7456                           
  7457  0077                     ??_CCP3_CaptureISR:	
  7458                           ; 1 bytes @ 0x7
  7459                           
  7460                           
  7461                           ; 1 bytes @ 0x7
  7462  0077                     	ds	1
  7463  0078                     CCP1_CaptureISR@module:
  7464  0078                     CCP2_CaptureISR@module:	
  7465                           ; 2 bytes @ 0x8
  7466                           
  7467  0078                     CCP3_CaptureISR@module:	
  7468                           ; 2 bytes @ 0x8
  7469                           
  7470                           
  7471                           ; 2 bytes @ 0x8
  7472  0078                     	ds	2
  7473  007A                     ??_INTERRUPT_InterruptManager:
  7474                           
  7475                           	psect	cstackBANK0
  7476  004A                     __pcstackBANK0:	
  7477                           ; 1 bytes @ 0xA
  7478                           
  7479  004A                     ?_SetPin:
  7480  004A                     ?_WritePin:	
  7481                           ; 1 bytes @ 0x0
  7482                           
  7483  004A                     ??_PMD_Initialize:	
  7484                           ; 1 bytes @ 0x0
  7485                           
  7486  004A                     ??_PIN_MANAGER_Initialize:	
  7487                           ; 1 bytes @ 0x0
  7488                           
  7489  004A                     ??_OSCILLATOR_Initialize:	
  7490                           ; 1 bytes @ 0x0
  7491                           
  7492  004A                     ??_WDT_Initialize:	
  7493                           ; 1 bytes @ 0x0
  7494                           
  7495  004A                     ??_TMR2_Initialize:	
  7496                           ; 1 bytes @ 0x0
  7497                           
  7498  004A                     ??_CCP4_Initialize:	
  7499                           ; 1 bytes @ 0x0
  7500                           
  7501  004A                     ??_TMR3_Initialize:	
  7502                           ; 1 bytes @ 0x0
  7503                           
  7504  004A                     ??_PWM5_Initialize:	
  7505                           ; 1 bytes @ 0x0
  7506                           
  7507  004A                     ??_TMR1_Initialize:	
  7508                           ; 1 bytes @ 0x0
  7509                           
  7510  004A                     ?_TMR0_SetInterruptHandler:	
  7511                           ; 1 bytes @ 0x0
  7512                           
  7513  004A                     ?_CCP1_SetCallBack:	
  7514                           ; 1 bytes @ 0x0
  7515                           
  7516  004A                     ?_CCP2_SetCallBack:	
  7517                           ; 1 bytes @ 0x0
  7518                           
  7519  004A                     ?_CCP3_SetCallBack:	
  7520                           ; 1 bytes @ 0x0
  7521                           
  7522  004A                     ?_EUSART_SetRxInterruptHandler:	
  7523                           ; 1 bytes @ 0x0
  7524                           
  7525  004A                     ?_EUSART_SetTxInterruptHandler:	
  7526                           ; 1 bytes @ 0x0
  7527                           
  7528  004A                     ?_EUSART_SetFramingErrorHandler:	
  7529                           ; 1 bytes @ 0x0
  7530                           
  7531  004A                     ?_EUSART_SetOverrunErrorHandler:	
  7532                           ; 1 bytes @ 0x0
  7533                           
  7534  004A                     ?_EUSART_SetErrorHandler:	
  7535                           ; 1 bytes @ 0x0
  7536                           
  7537  004A                     ?_CCP4_SetCompareCount:	
  7538                           ; 1 bytes @ 0x0
  7539                           
  7540  004A                     ??_SpeakerTone_On:	
  7541                           ; 1 bytes @ 0x0
  7542                           
  7543  004A                     ??_TMR3_StopTimer:	
  7544                           ; 1 bytes @ 0x0
  7545                           
  7546  004A                     ??_TMR3_StartTimer:	
  7547                           ; 1 bytes @ 0x0
  7548                           
  7549  004A                     ??_TMR0_ReadTimer:	
  7550                           ; 1 bytes @ 0x0
  7551                           
  7552  004A                     ??_TMR0_GetCallBackNum:	
  7553                           ; 1 bytes @ 0x0
  7554                           
  7555  004A                     ?_TMR3_WriteTimer:	
  7556                           ; 1 bytes @ 0x0
  7557                           
  7558  004A                     ?___wmul:	
  7559                           ; 1 bytes @ 0x0
  7560                           
  7561  004A                     ?___lldiv:	
  7562                           ; 2 bytes @ 0x0
  7563                           
  7564  004A                     SetPin@io:	
  7565                           ; 4 bytes @ 0x0
  7566                           
  7567  004A                     WritePin@val:	
  7568                           ; 1 bytes @ 0x0
  7569                           
  7570  004A                     TMR0_SetInterruptHandler@InterruptHandler:	
  7571                           ; 1 bytes @ 0x0
  7572                           
  7573  004A                     CCP1_SetCallBack@customCallBack:	
  7574                           ; 2 bytes @ 0x0
  7575                           
  7576  004A                     CCP2_SetCallBack@customCallBack:	
  7577                           ; 2 bytes @ 0x0
  7578                           
  7579  004A                     CCP3_SetCallBack@customCallBack:	
  7580                           ; 2 bytes @ 0x0
  7581                           
  7582  004A                     EUSART_SetFramingErrorHandler@interruptHandler:	
  7583                           ; 2 bytes @ 0x0
  7584                           
  7585  004A                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  7586                           ; 2 bytes @ 0x0
  7587                           
  7588  004A                     EUSART_SetErrorHandler@interruptHandler:	
  7589                           ; 2 bytes @ 0x0
  7590                           
  7591  004A                     EUSART_SetTxInterruptHandler@interruptHandler:	
  7592                           ; 2 bytes @ 0x0
  7593                           
  7594  004A                     EUSART_SetRxInterruptHandler@interruptHandler:	
  7595                           ; 2 bytes @ 0x0
  7596                           
  7597  004A                     CCP4_SetCompareCount@compareCount:	
  7598                           ; 2 bytes @ 0x0
  7599                           
  7600  004A                     TMR3_WriteTimer@timerVal:	
  7601                           ; 2 bytes @ 0x0
  7602                           
  7603  004A                     ___wmul@multiplier:	
  7604                           ; 2 bytes @ 0x0
  7605                           
  7606  004A                     ___lldiv@divisor:	
  7607                           ; 2 bytes @ 0x0
  7608                           
  7609                           
  7610                           ; 4 bytes @ 0x0
  7611  004A                     	ds	1
  7612  004B                     ??_SetPin:
  7613  004B                     ??_WritePin:	
  7614                           ; 1 bytes @ 0x1
  7615                           
  7616  004B                     TMR0_ReadTimer@readVal:	
  7617                           ; 1 bytes @ 0x1
  7618                           
  7619                           
  7620                           ; 1 bytes @ 0x1
  7621  004B                     	ds	1
  7622  004C                     ??_CCP3_Initialize:
  7623  004C                     ??_CCP1_Initialize:	
  7624                           ; 1 bytes @ 0x2
  7625                           
  7626  004C                     ??_TMR0_Initialize:	
  7627                           ; 1 bytes @ 0x2
  7628                           
  7629  004C                     ??_CCP2_Initialize:	
  7630                           ; 1 bytes @ 0x2
  7631                           
  7632  004C                     ??_EUSART_Initialize:	
  7633                           ; 1 bytes @ 0x2
  7634                           
  7635  004C                     ??_TMR0_SetInterruptHandler:	
  7636                           ; 1 bytes @ 0x2
  7637                           
  7638  004C                     ??_CCP1_SetCallBack:	
  7639                           ; 1 bytes @ 0x2
  7640                           
  7641  004C                     ??_CCP2_SetCallBack:	
  7642                           ; 1 bytes @ 0x2
  7643                           
  7644  004C                     ??_CCP3_SetCallBack:	
  7645                           ; 1 bytes @ 0x2
  7646                           
  7647  004C                     ??_EUSART_SetRxInterruptHandler:	
  7648                           ; 1 bytes @ 0x2
  7649                           
  7650  004C                     ??_EUSART_SetTxInterruptHandler:	
  7651                           ; 1 bytes @ 0x2
  7652                           
  7653  004C                     ??_EUSART_SetFramingErrorHandler:	
  7654                           ; 1 bytes @ 0x2
  7655                           
  7656  004C                     ??_EUSART_SetOverrunErrorHandler:	
  7657                           ; 1 bytes @ 0x2
  7658                           
  7659  004C                     ??_EUSART_SetErrorHandler:	
  7660                           ; 1 bytes @ 0x2
  7661                           
  7662  004C                     ??_SpeakerTone_Off:	
  7663                           ; 1 bytes @ 0x2
  7664                           
  7665  004C                     ??_CCP4_SetCompareCount:	
  7666                           ; 1 bytes @ 0x2
  7667                           
  7668  004C                     ??_TMR3_Reload:	
  7669                           ; 1 bytes @ 0x2
  7670                           
  7671  004C                     ??_TMR3_WriteTimer:	
  7672                           ; 1 bytes @ 0x2
  7673                           
  7674  004C                     CCP4_SetCompareCount@module:	
  7675                           ; 1 bytes @ 0x2
  7676                           
  7677  004C                     ___wmul@multiplicand:	
  7678                           ; 2 bytes @ 0x2
  7679                           
  7680                           
  7681                           ; 2 bytes @ 0x2
  7682  004C                     	ds	1
  7683  004D                     ??_SYSTEM_Initialize:
  7684  004D                     ??_PIC16_Init:	
  7685                           ; 1 bytes @ 0x3
  7686                           
  7687  004D                     SetPin@pin:	
  7688                           ; 1 bytes @ 0x3
  7689                           
  7690  004D                     WritePin@pin:	
  7691                           ; 1 bytes @ 0x3
  7692                           
  7693                           
  7694                           ; 1 bytes @ 0x3
  7695  004D                     	ds	1
  7696  004E                     ??_SpeakerTone_Init:
  7697  004E                     ??___wmul:	
  7698                           ; 1 bytes @ 0x4
  7699                           
  7700  004E                     ___wmul@product:	
  7701                           ; 1 bytes @ 0x4
  7702                           
  7703  004E                     ___lldiv@dividend:	
  7704                           ; 2 bytes @ 0x4
  7705                           
  7706                           
  7707                           ; 4 bytes @ 0x4
  7708  004E                     	ds	2
  7709  0050                     ?_FRT_GetMicros:
  7710                           
  7711                           ; 4 bytes @ 0x6
  7712  0050                     	ds	2
  7713  0052                     ??___lldiv:
  7714                           
  7715                           ; 1 bytes @ 0x8
  7716  0052                     	ds	1
  7717  0053                     ___lldiv@quotient:
  7718                           
  7719                           ; 4 bytes @ 0x9
  7720  0053                     	ds	1
  7721  0054                     ??_FRT_GetMicros:
  7722                           
  7723                           ; 1 bytes @ 0xA
  7724  0054                     	ds	3
  7725  0057                     ___lldiv@counter:
  7726                           
  7727                           ; 1 bytes @ 0xD
  7728  0057                     	ds	1
  7729  0058                     ?_SpeakerTone_SetFrequency:
  7730  0058                     SpeakerTone_SetFrequency@newFrequency:	
  7731                           ; 1 bytes @ 0xE
  7732                           
  7733                           
  7734                           ; 2 bytes @ 0xE
  7735  0058                     	ds	2
  7736  005A                     ??_SpeakerTone_SetFrequency:
  7737                           
  7738                           ; 1 bytes @ 0x10
  7739  005A                     	ds	8
  7740  0062                     ??_main:
  7741                           
  7742                           ; 1 bytes @ 0x18
  7743  0062                     	ds	4
  7744  0066                     main@prevMicro:
  7745                           
  7746                           ; 4 bytes @ 0x1C
  7747  0066                     	ds	4
  7748  006A                     main@i:
  7749                           
  7750                           ; 1 bytes @ 0x20
  7751  006A                     	ds	1
  7752  006B                     main@currMicro:
  7753                           
  7754                           ; 4 bytes @ 0x21
  7755  006B                     	ds	4
  7756                           
  7757                           	psect	maintext
  7758  00A8                     __pmaintext:	
  7759 ;;
  7760 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  7761 ;;
  7762 ;; *************** function _main *****************
  7763 ;; Defined at:
  7764 ;;		line 102 in file "SpeakerTone.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;		None
  7767 ;; Auto vars:     Size  Location     Type
  7768 ;;  currMicro       4   33[BANK0 ] unsigned long 
  7769 ;;  prevMicro       4   28[BANK0 ] unsigned long 
  7770 ;;  i               1   32[BANK0 ] unsigned char 
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  2  819[None  ] int 
  7773 ;; Registers used:
  7774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7775 ;; Tracked objects:
  7776 ;;		On entry : B1F/0
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7781 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7782 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7783 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7784 ;;Total ram usage:       13 bytes
  7785 ;; Hardware stack levels required when called: 8
  7786 ;; This function calls:
  7787 ;;		_FRT_GetMicros
  7788 ;;		_PIC16_Init
  7789 ;;		_SpeakerTone_Init
  7790 ;;		_SpeakerTone_Off
  7791 ;;		_SpeakerTone_On
  7792 ;;		_SpeakerTone_SetFrequency
  7793 ;; This function is called by:
  7794 ;;		Startup code after reset
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798  00A8                     _main:	
  7799                           ;psect for function _main
  7800                           
  7801  00A8                     l3662:	
  7802                           ;incstack = 0
  7803                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7804                           
  7805                           
  7806                           ;SpeakerTone.c: 103:     PIC16_Init();
  7807  00A8  3187  2792  3180   	fcall	_PIC16_Init
  7808  00AB                     l3664:
  7809                           
  7810                           ;SpeakerTone.c: 104:     SpeakerTone_Init();
  7811  00AB  3186  26C0  3180   	fcall	_SpeakerTone_Init
  7812  00AE                     l3666:
  7813                           
  7814                           ;SpeakerTone.c: 106:     unsigned long currMicro = FRT_GetMicros();
  7815  00AE  3183  23D7  3180   	fcall	_FRT_GetMicros
  7816  00B1  0020               	movlb	0	; select bank0
  7817  00B2  0853               	movf	?_FRT_GetMicros+3,w
  7818  00B3  00EE               	movwf	main@currMicro+3
  7819  00B4  0852               	movf	?_FRT_GetMicros+2,w
  7820  00B5  00ED               	movwf	main@currMicro+2
  7821  00B6  0851               	movf	?_FRT_GetMicros+1,w
  7822  00B7  00EC               	movwf	main@currMicro+1
  7823  00B8  0850               	movf	?_FRT_GetMicros,w
  7824  00B9  00EB               	movwf	main@currMicro
  7825  00BA                     l3668:
  7826                           
  7827                           ;SpeakerTone.c: 107:     unsigned long prevMicro = currMicro;
  7828  00BA  086E               	movf	main@currMicro+3,w
  7829  00BB  00E9               	movwf	main@prevMicro+3
  7830  00BC  086D               	movf	main@currMicro+2,w
  7831  00BD  00E8               	movwf	main@prevMicro+2
  7832  00BE  086C               	movf	main@currMicro+1,w
  7833  00BF  00E7               	movwf	main@prevMicro+1
  7834  00C0  086B               	movf	main@currMicro,w
  7835  00C1  00E6               	movwf	main@prevMicro
  7836  00C2                     l3670:
  7837                           
  7838                           ;SpeakerTone.c: 108:     uint8_t i = 0;
  7839  00C2  01EA               	clrf	main@i
  7840  00C3                     l3672:
  7841                           
  7842                           ;SpeakerTone.c: 113:         currMicro = FRT_GetMicros();
  7843  00C3  3183  23D7  3180   	fcall	_FRT_GetMicros
  7844  00C6  0020               	movlb	0	; select bank0
  7845  00C7  0853               	movf	?_FRT_GetMicros+3,w
  7846  00C8  00EE               	movwf	main@currMicro+3
  7847  00C9  0852               	movf	?_FRT_GetMicros+2,w
  7848  00CA  00ED               	movwf	main@currMicro+2
  7849  00CB  0851               	movf	?_FRT_GetMicros+1,w
  7850  00CC  00EC               	movwf	main@currMicro+1
  7851  00CD  0850               	movf	?_FRT_GetMicros,w
  7852  00CE  00EB               	movwf	main@currMicro
  7853  00CF                     l3674:
  7854                           
  7855                           ;SpeakerTone.c: 114:         if((currMicro - prevMicro) > (unsigned long)200000) {
  7856  00CF  0866               	movf	main@prevMicro,w
  7857  00D0  026B               	subwf	main@currMicro,w
  7858  00D1  00E2               	movwf	??_main
  7859  00D2  0867               	movf	main@prevMicro+1,w
  7860  00D3  3B6C               	subwfb	main@currMicro+1,w
  7861  00D4  00E3               	movwf	??_main+1
  7862  00D5  0868               	movf	main@prevMicro+2,w
  7863  00D6  3B6D               	subwfb	main@currMicro+2,w
  7864  00D7  00E4               	movwf	??_main+2
  7865  00D8  0869               	movf	main@prevMicro+3,w
  7866  00D9  3B6E               	subwfb	main@currMicro+3,w
  7867  00DA  00E5               	movwf	??_main+3
  7868  00DB  0865               	movf	??_main+3,w
  7869  00DC  1D03               	btfss	3,2
  7870  00DD  28E8               	goto	u1040
  7871  00DE  3041               	movlw	65
  7872  00DF  0262               	subwf	??_main,w
  7873  00E0  300D               	movlw	13
  7874  00E1  3B63               	subwfb	??_main+1,w
  7875  00E2  3003               	movlw	3
  7876  00E3  3B64               	subwfb	??_main+2,w
  7877  00E4  1C03               	btfss	3,0
  7878  00E5  28E7               	goto	u1041
  7879  00E6  28E8               	goto	u1040
  7880  00E7                     u1041:
  7881  00E7  28C3               	goto	l3672
  7882  00E8                     u1040:
  7883  00E8  294A               	goto	l3702
  7884  00E9                     l3678:
  7885                           
  7886                           ;SpeakerTone.c: 117:                     SpeakerTone_SetFrequency(262);
  7887  00E9  3006               	movlw	6
  7888  00EA  00D8               	movwf	SpeakerTone_SetFrequency@newFrequency
  7889  00EB  3001               	movlw	1
  7890  00EC  00D9               	movwf	SpeakerTone_SetFrequency@newFrequency+1
  7891  00ED  3184  2423  3180   	fcall	_SpeakerTone_SetFrequency
  7892  00F0                     l3680:
  7893                           
  7894                           ;SpeakerTone.c: 118:                     SpeakerTone_On();
  7895  00F0  318F  2735  3180   	fcall	_SpeakerTone_On
  7896  00F3                     l3682:
  7897                           
  7898                           ;SpeakerTone.c: 119:                     i = 1;
  7899  00F3  0020               	movlb	0	; select bank0
  7900  00F4  01EA               	clrf	main@i
  7901  00F5  0AEA               	incf	main@i,f
  7902                           
  7903                           ;SpeakerTone.c: 120:                     break;
  7904  00F6  2964               	goto	l3704
  7905  00F7                     l3684:
  7906                           
  7907                           ;SpeakerTone.c: 122:                     SpeakerTone_SetFrequency(523);
  7908  00F7  300B               	movlw	11
  7909  00F8  00D8               	movwf	SpeakerTone_SetFrequency@newFrequency
  7910  00F9  3002               	movlw	2
  7911  00FA  00D9               	movwf	SpeakerTone_SetFrequency@newFrequency+1
  7912  00FB  3184  2423  3180   	fcall	_SpeakerTone_SetFrequency
  7913  00FE                     l3686:
  7914                           
  7915                           ;SpeakerTone.c: 123:                     i = 2;
  7916  00FE  3002               	movlw	2
  7917  00FF  0020               	movlb	0	; select bank0
  7918  0100  00E2               	movwf	??_main
  7919  0101  0862               	movf	??_main,w
  7920  0102  00EA               	movwf	main@i
  7921                           
  7922                           ;SpeakerTone.c: 124:                     break;
  7923  0103  2964               	goto	l3704
  7924  0104                     l3688:
  7925                           
  7926                           ;SpeakerTone.c: 126:                     SpeakerTone_SetFrequency(349);
  7927  0104  305D               	movlw	93
  7928  0105  00D8               	movwf	SpeakerTone_SetFrequency@newFrequency
  7929  0106  3001               	movlw	1
  7930  0107  00D9               	movwf	SpeakerTone_SetFrequency@newFrequency+1
  7931  0108  3184  2423  3180   	fcall	_SpeakerTone_SetFrequency
  7932  010B                     l3690:
  7933                           
  7934                           ;SpeakerTone.c: 127:                     i = 3;
  7935  010B  3003               	movlw	3
  7936  010C  0020               	movlb	0	; select bank0
  7937  010D  00E2               	movwf	??_main
  7938  010E  0862               	movf	??_main,w
  7939  010F  00EA               	movwf	main@i
  7940                           
  7941                           ;SpeakerTone.c: 128:                     break;
  7942  0110  2964               	goto	l3704
  7943  0111                     l3692:
  7944                           
  7945                           ;SpeakerTone.c: 130:                     SpeakerTone_SetFrequency(392);
  7946  0111  3088               	movlw	136
  7947  0112  00D8               	movwf	SpeakerTone_SetFrequency@newFrequency
  7948  0113  3001               	movlw	1
  7949  0114  00D9               	movwf	SpeakerTone_SetFrequency@newFrequency+1
  7950  0115  3184  2423  3180   	fcall	_SpeakerTone_SetFrequency
  7951  0118                     l3694:
  7952                           
  7953                           ;SpeakerTone.c: 131:                     i = 4;
  7954  0118  3004               	movlw	4
  7955  0119  0020               	movlb	0	; select bank0
  7956  011A  00E2               	movwf	??_main
  7957  011B  0862               	movf	??_main,w
  7958  011C  00EA               	movwf	main@i
  7959                           
  7960                           ;SpeakerTone.c: 132:                     break;
  7961  011D  2964               	goto	l3704
  7962  011E                     l3696:
  7963                           
  7964                           ;SpeakerTone.c: 134:                     SpeakerTone_Off();
  7965  011E  318F  277D  3180   	fcall	_SpeakerTone_Off
  7966  0121                     l3698:	
  7967                           ;SpeakerTone.c: 135:                     while((currMicro + 1000000) > FRT_GetMicros());
  7968                           
  7969  0121  3040               	movlw	64
  7970  0122  0020               	movlb	0	; select bank0
  7971  0123  00E2               	movwf	??_main
  7972  0124  3042               	movlw	66
  7973  0125  00E3               	movwf	??_main+1
  7974  0126  300F               	movlw	15
  7975  0127  00E4               	movwf	??_main+2
  7976  0128  3000               	movlw	0
  7977  0129  00E5               	movwf	??_main+3
  7978  012A  086B               	movf	main@currMicro,w
  7979  012B  07E2               	addwf	??_main,f
  7980  012C  086C               	movf	main@currMicro+1,w
  7981  012D  3DE3               	addwfc	??_main+1,f
  7982  012E  086D               	movf	main@currMicro+2,w
  7983  012F  3DE4               	addwfc	??_main+2,f
  7984  0130  086E               	movf	main@currMicro+3,w
  7985  0131  3DE5               	addwfc	??_main+3,f
  7986  0132  3183  23D7  3180   	fcall	_FRT_GetMicros
  7987  0135  0020               	movlb	0	; select bank0
  7988  0136  0865               	movf	??_main+3,w
  7989  0137  0253               	subwf	?_FRT_GetMicros+3,w
  7990  0138  1D03               	skipz
  7991  0139  2944               	goto	u1055
  7992  013A  0864               	movf	??_main+2,w
  7993  013B  0252               	subwf	?_FRT_GetMicros+2,w
  7994  013C  1D03               	skipz
  7995  013D  2944               	goto	u1055
  7996  013E  0863               	movf	??_main+1,w
  7997  013F  0251               	subwf	?_FRT_GetMicros+1,w
  7998  0140  1D03               	skipz
  7999  0141  2944               	goto	u1055
  8000  0142  0862               	movf	??_main,w
  8001  0143  0250               	subwf	?_FRT_GetMicros,w
  8002  0144                     u1055:
  8003  0144  1C03               	skipc
  8004  0145  2947               	goto	u1051
  8005  0146  2948               	goto	u1050
  8006  0147                     u1051:
  8007  0147  2921               	goto	l3698
  8008  0148                     u1050:
  8009  0148                     l3700:
  8010                           
  8011                           ;SpeakerTone.c: 136:                     i = 0;
  8012  0148  01EA               	clrf	main@i
  8013                           
  8014                           ;SpeakerTone.c: 137:             }
  8015  0149  2964               	goto	l3704
  8016  014A                     l3702:
  8017  014A  0020               	movlb	0	; select bank0
  8018  014B  086A               	movf	main@i,w
  8019  014C  00E2               	movwf	??_main
  8020  014D  01E3               	clrf	??_main+1
  8021                           
  8022                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8023                           ; Switch size 1, requested type "simple"
  8024                           ; Number of cases is 1, Range of values is 0 to 0
  8025                           ; switch strategies available:
  8026                           ; Name         Instructions Cycles
  8027                           ; simple_byte            4     3 (average)
  8028                           ; direct_byte            8     6 (fixed)
  8029                           ; jumptable            260     6 (fixed)
  8030                           ;	Chosen strategy is simple_byte
  8031  014E  0863               	movf	??_main+1,w
  8032  014F  3A00               	xorlw	0	; case 0
  8033  0150  1903               	skipnz
  8034  0151  2953               	goto	l3944
  8035  0152  2964               	goto	l3704
  8036  0153                     l3944:
  8037                           
  8038                           ; Switch size 1, requested type "simple"
  8039                           ; Number of cases is 5, Range of values is 0 to 4
  8040                           ; switch strategies available:
  8041                           ; Name         Instructions Cycles
  8042                           ; direct_byte           16     6 (fixed)
  8043                           ; simple_byte           16     9 (average)
  8044                           ; jumptable            260     6 (fixed)
  8045                           ;	Chosen strategy is simple_byte
  8046  0153  0862               	movf	??_main,w
  8047  0154  3A00               	xorlw	0	; case 0
  8048  0155  1903               	skipnz
  8049  0156  28E9               	goto	l3678
  8050  0157  3A01               	xorlw	1	; case 1
  8051  0158  1903               	skipnz
  8052  0159  28F7               	goto	l3684
  8053  015A  3A03               	xorlw	3	; case 2
  8054  015B  1903               	skipnz
  8055  015C  2904               	goto	l3688
  8056  015D  3A01               	xorlw	1	; case 3
  8057  015E  1903               	skipnz
  8058  015F  2911               	goto	l3692
  8059  0160  3A07               	xorlw	7	; case 4
  8060  0161  1903               	skipnz
  8061  0162  291E               	goto	l3696
  8062  0163  2964               	goto	l3704
  8063  0164                     l3704:
  8064                           
  8065                           ;SpeakerTone.c: 138:             prevMicro = currMicro;
  8066  0164  086E               	movf	main@currMicro+3,w
  8067  0165  00E9               	movwf	main@prevMicro+3
  8068  0166  086D               	movf	main@currMicro+2,w
  8069  0167  00E8               	movwf	main@prevMicro+2
  8070  0168  086C               	movf	main@currMicro+1,w
  8071  0169  00E7               	movwf	main@prevMicro+1
  8072  016A  086B               	movf	main@currMicro,w
  8073  016B  00E6               	movwf	main@prevMicro
  8074  016C  28C3               	goto	l3672
  8075  016D  3180  288E         	ljmp	start
  8076  016F                     __end_of_main:
  8077                           
  8078                           	psect	text1
  8079  0423                     __ptext1:	
  8080 ;; *************** function _SpeakerTone_SetFrequency *****************
  8081 ;; Defined at:
  8082 ;;		line 50 in file "SpeakerTone.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  newFrequency    2   14[BANK0 ] unsigned short 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;		None
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  1    wreg      unsigned char 
  8089 ;; Registers used:
  8090 ;;		wreg, status,2, status,0, pclath, cstack
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8096 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8100 ;;Total ram usage:        2 bytes
  8101 ;; Hardware stack levels used: 1
  8102 ;; Hardware stack levels required when called: 7
  8103 ;; This function calls:
  8104 ;;		_CCP4_SetCompareCount
  8105 ;;		_SpeakerTone_Off
  8106 ;;		_SpeakerTone_On
  8107 ;;		___lldiv
  8108 ;; This function is called by:
  8109 ;;		_main
  8110 ;; This function uses a non-reentrant model
  8111 ;;
  8112                           
  8113  0423                     _SpeakerTone_SetFrequency:	
  8114                           ;psect for function _SpeakerTone_SetFrequency
  8115                           
  8116  0423                     l3542:	
  8117                           ;incstack = 0
  8118                           ; Regs used in _SpeakerTone_SetFrequency: [wreg+status,2+status,0+pclath+cstack]
  8119                           
  8120                           
  8121                           ;SpeakerTone.c: 51:     if((newFrequency < 125)||(newFrequency > 5000))
  8122  0423  3000               	movlw	0
  8123  0424  0020               	movlb	0	; select bank0
  8124  0425  0259               	subwf	SpeakerTone_SetFrequency@newFrequency+1,w
  8125  0426  307D               	movlw	125
  8126  0427  1903               	skipnz
  8127  0428  0258               	subwf	SpeakerTone_SetFrequency@newFrequency,w
  8128  0429  1C03               	skipc
  8129  042A  2C2C               	goto	u821
  8130  042B  2C2D               	goto	u820
  8131  042C                     u821:
  8132  042C  2C69               	goto	l805
  8133  042D                     u820:
  8134  042D                     l3544:
  8135  042D  3013               	movlw	19
  8136  042E  0259               	subwf	SpeakerTone_SetFrequency@newFrequency+1,w
  8137  042F  3089               	movlw	137
  8138  0430  1903               	skipnz
  8139  0431  0258               	subwf	SpeakerTone_SetFrequency@newFrequency,w
  8140  0432  1C03               	skipc
  8141  0433  2C35               	goto	u831
  8142  0434  2C36               	goto	u830
  8143  0435                     u831:
  8144  0435  2C37               	goto	l3548
  8145  0436                     u830:
  8146  0436  2C69               	goto	l805
  8147  0437                     l3548:
  8148                           
  8149                           ;SpeakerTone.c: 55:         SpeakerTone_Off();
  8150  0437  318F  277D  3184   	fcall	_SpeakerTone_Off
  8151  043A                     l3550:
  8152                           
  8153                           ;SpeakerTone.c: 58:         currFreq = newFrequency;
  8154  043A  0020               	movlb	0	; select bank0
  8155  043B  0859               	movf	SpeakerTone_SetFrequency@newFrequency+1,w
  8156  043C  0021               	movlb	1	; select bank1
  8157  043D  00DB               	movwf	(_currFreq+1)^(0+128)
  8158  043E  0020               	movlb	0	; select bank0
  8159  043F  0858               	movf	SpeakerTone_SetFrequency@newFrequency,w
  8160  0440  0021               	movlb	1	; select bank1
  8161  0441  00DA               	movwf	_currFreq^(0+128)
  8162  0442                     l3552:
  8163                           
  8164                           ;SpeakerTone.c: 59:         ocCount = (uint16_t)(((uint32_t)2000000)/newFrequency);
  8165  0442  0020               	movlb	0	; select bank0
  8166  0443  0858               	movf	SpeakerTone_SetFrequency@newFrequency,w
  8167  0444  00CA               	movwf	___lldiv@divisor
  8168  0445  0859               	movf	SpeakerTone_SetFrequency@newFrequency+1,w
  8169  0446  00CB               	movwf	___lldiv@divisor+1
  8170  0447  01CC               	clrf	___lldiv@divisor+2
  8171  0448  01CD               	clrf	___lldiv@divisor+3
  8172  0449  3000               	movlw	0
  8173  044A  00D1               	movwf	___lldiv@dividend+3
  8174  044B  301E               	movlw	30
  8175  044C  00D0               	movwf	___lldiv@dividend+2
  8176  044D  3084               	movlw	132
  8177  044E  00CF               	movwf	___lldiv@dividend+1
  8178  044F  3080               	movlw	128
  8179  0450  00CE               	movwf	___lldiv@dividend
  8180  0451  3183  237C  3184   	fcall	___lldiv
  8181  0454  0020               	movlb	0	; select bank0
  8182  0455  084B               	movf	?___lldiv+1,w
  8183  0456  0021               	movlb	1	; select bank1
  8184  0457  00D9               	movwf	(_ocCount+1)^(0+128)
  8185  0458  0020               	movlb	0	; select bank0
  8186  0459  084A               	movf	?___lldiv,w
  8187  045A  0021               	movlb	1	; select bank1
  8188  045B  00D8               	movwf	_ocCount^(0+128)
  8189  045C                     l3554:
  8190                           
  8191                           ;SpeakerTone.c: 62:         CCP4_SetCompareCount(ocCount);
  8192  045C  0859               	movf	(_ocCount+1)^(0+128),w
  8193  045D  0020               	movlb	0	; select bank0
  8194  045E  00CB               	movwf	CCP4_SetCompareCount@compareCount+1
  8195  045F  0021               	movlb	1	; select bank1
  8196  0460  0858               	movf	_ocCount^(0+128),w
  8197  0461  0020               	movlb	0	; select bank0
  8198  0462  00CA               	movwf	CCP4_SetCompareCount@compareCount
  8199  0463  318F  27F3  3184   	fcall	_CCP4_SetCompareCount
  8200                           
  8201                           ;SpeakerTone.c: 65:         SpeakerTone_On();
  8202  0466  318F  2735  3184   	fcall	_SpeakerTone_On
  8203  0469                     l805:
  8204  0469  0008               	return
  8205  046A                     __end_of_SpeakerTone_SetFrequency:
  8206                           
  8207                           	psect	text2
  8208  037C                     __ptext2:	
  8209 ;; *************** function ___lldiv *****************
  8210 ;; Defined at:
  8211 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\__lldiv.c"
  8212 ;; Parameters:    Size  Location     Type
  8213 ;;  divisor         4    0[BANK0 ] unsigned long 
  8214 ;;  dividend        4    4[BANK0 ] unsigned long 
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;  quotient        4    9[BANK0 ] unsigned long 
  8217 ;;  counter         1   13[BANK0 ] unsigned char 
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  4    0[BANK0 ] unsigned long 
  8220 ;; Registers used:
  8221 ;;		wreg, status,2, status,0
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8227 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8228 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8229 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8230 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8231 ;;Total ram usage:       14 bytes
  8232 ;; Hardware stack levels used: 1
  8233 ;; Hardware stack levels required when called: 4
  8234 ;; This function calls:
  8235 ;;		Nothing
  8236 ;; This function is called by:
  8237 ;;		_SpeakerTone_SetFrequency
  8238 ;;		_JSN_Sensor_GetDistance
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242  037C                     ___lldiv:	
  8243                           ;psect for function ___lldiv
  8244                           
  8245  037C                     l3388:	
  8246                           ;incstack = 0
  8247                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8248                           
  8249  037C  3000               	movlw	0
  8250  037D  0020               	movlb	0	; select bank0
  8251  037E  00D6               	movwf	___lldiv@quotient+3
  8252  037F  3000               	movlw	0
  8253  0380  00D5               	movwf	___lldiv@quotient+2
  8254  0381  3000               	movlw	0
  8255  0382  00D4               	movwf	___lldiv@quotient+1
  8256  0383  3000               	movlw	0
  8257  0384  00D3               	movwf	___lldiv@quotient
  8258  0385  084D               	movf	___lldiv@divisor+3,w
  8259  0386  044C               	iorwf	___lldiv@divisor+2,w
  8260  0387  044B               	iorwf	___lldiv@divisor+1,w
  8261  0388  044A               	iorwf	___lldiv@divisor,w
  8262  0389  1903               	skipnz
  8263  038A  2B8C               	goto	u641
  8264  038B  2B8D               	goto	u640
  8265  038C                     u641:
  8266  038C  2BCE               	goto	l3408
  8267  038D                     u640:
  8268  038D                     l3390:
  8269  038D  01D7               	clrf	___lldiv@counter
  8270  038E  0AD7               	incf	___lldiv@counter,f
  8271  038F  2B9B               	goto	l3394
  8272  0390                     l3392:
  8273  0390  3001               	movlw	1
  8274  0391                     u655:
  8275  0391  35CA               	lslf	___lldiv@divisor,f
  8276  0392  0DCB               	rlf	___lldiv@divisor+1,f
  8277  0393  0DCC               	rlf	___lldiv@divisor+2,f
  8278  0394  0DCD               	rlf	___lldiv@divisor+3,f
  8279  0395  0B89               	decfsz	9,f
  8280  0396  2B91               	goto	u655
  8281  0397  3001               	movlw	1
  8282  0398  00D2               	movwf	??___lldiv
  8283  0399  0852               	movf	??___lldiv,w
  8284  039A  07D7               	addwf	___lldiv@counter,f
  8285  039B                     l3394:
  8286  039B  1FCD               	btfss	___lldiv@divisor+3,7
  8287  039C  2B9E               	goto	u661
  8288  039D  2B9F               	goto	u660
  8289  039E                     u661:
  8290  039E  2B90               	goto	l3392
  8291  039F                     u660:
  8292  039F                     l3396:
  8293  039F  3001               	movlw	1
  8294  03A0                     u675:
  8295  03A0  35D3               	lslf	___lldiv@quotient,f
  8296  03A1  0DD4               	rlf	___lldiv@quotient+1,f
  8297  03A2  0DD5               	rlf	___lldiv@quotient+2,f
  8298  03A3  0DD6               	rlf	___lldiv@quotient+3,f
  8299  03A4  0B89               	decfsz	9,f
  8300  03A5  2BA0               	goto	u675
  8301  03A6                     l3398:
  8302  03A6  084D               	movf	___lldiv@divisor+3,w
  8303  03A7  0251               	subwf	___lldiv@dividend+3,w
  8304  03A8  1D03               	skipz
  8305  03A9  2BB4               	goto	u685
  8306  03AA  084C               	movf	___lldiv@divisor+2,w
  8307  03AB  0250               	subwf	___lldiv@dividend+2,w
  8308  03AC  1D03               	skipz
  8309  03AD  2BB4               	goto	u685
  8310  03AE  084B               	movf	___lldiv@divisor+1,w
  8311  03AF  024F               	subwf	___lldiv@dividend+1,w
  8312  03B0  1D03               	skipz
  8313  03B1  2BB4               	goto	u685
  8314  03B2  084A               	movf	___lldiv@divisor,w
  8315  03B3  024E               	subwf	___lldiv@dividend,w
  8316  03B4                     u685:
  8317  03B4  1C03               	skipc
  8318  03B5  2BB7               	goto	u681
  8319  03B6  2BB8               	goto	u680
  8320  03B7                     u681:
  8321  03B7  2BC1               	goto	l3404
  8322  03B8                     u680:
  8323  03B8                     l3400:
  8324  03B8  084A               	movf	___lldiv@divisor,w
  8325  03B9  02CE               	subwf	___lldiv@dividend,f
  8326  03BA  084B               	movf	___lldiv@divisor+1,w
  8327  03BB  3BCF               	subwfb	___lldiv@dividend+1,f
  8328  03BC  084C               	movf	___lldiv@divisor+2,w
  8329  03BD  3BD0               	subwfb	___lldiv@dividend+2,f
  8330  03BE  084D               	movf	___lldiv@divisor+3,w
  8331  03BF  3BD1               	subwfb	___lldiv@dividend+3,f
  8332  03C0                     l3402:
  8333  03C0  1453               	bsf	___lldiv@quotient,0
  8334  03C1                     l3404:
  8335  03C1  3001               	movlw	1
  8336  03C2                     u695:
  8337  03C2  36CD               	lsrf	___lldiv@divisor+3,f
  8338  03C3  0CCC               	rrf	___lldiv@divisor+2,f
  8339  03C4  0CCB               	rrf	___lldiv@divisor+1,f
  8340  03C5  0CCA               	rrf	___lldiv@divisor,f
  8341  03C6  0B89               	decfsz	9,f
  8342  03C7  2BC2               	goto	u695
  8343  03C8                     l3406:
  8344  03C8  3001               	movlw	1
  8345  03C9  02D7               	subwf	___lldiv@counter,f
  8346  03CA  1D03               	btfss	3,2
  8347  03CB  2BCD               	goto	u701
  8348  03CC  2BCE               	goto	u700
  8349  03CD                     u701:
  8350  03CD  2B9F               	goto	l3396
  8351  03CE                     u700:
  8352  03CE                     l3408:
  8353  03CE  0856               	movf	___lldiv@quotient+3,w
  8354  03CF  00CD               	movwf	?___lldiv+3
  8355  03D0  0855               	movf	___lldiv@quotient+2,w
  8356  03D1  00CC               	movwf	?___lldiv+2
  8357  03D2  0854               	movf	___lldiv@quotient+1,w
  8358  03D3  00CB               	movwf	?___lldiv+1
  8359  03D4  0853               	movf	___lldiv@quotient,w
  8360  03D5  00CA               	movwf	?___lldiv
  8361  03D6                     l1169:
  8362  03D6  0008               	return
  8363  03D7                     __end_of___lldiv:
  8364                           
  8365                           	psect	text3
  8366  0F35                     __ptext3:	
  8367 ;; *************** function _SpeakerTone_On *****************
  8368 ;; Defined at:
  8369 ;;		line 86 in file "SpeakerTone.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;		None
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;		None
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      void 
  8376 ;; Registers used:
  8377 ;;		status,2, status,0, pclath, cstack
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8387 ;;Total ram usage:        0 bytes
  8388 ;; Hardware stack levels used: 1
  8389 ;; Hardware stack levels required when called: 5
  8390 ;; This function calls:
  8391 ;;		_TMR3_StartTimer
  8392 ;; This function is called by:
  8393 ;;		_SpeakerTone_SetFrequency
  8394 ;;		_main
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398  0F35                     _SpeakerTone_On:	
  8399                           ;psect for function _SpeakerTone_On
  8400                           
  8401  0F35                     l3370:	
  8402                           ;incstack = 0
  8403                           ; Regs used in _SpeakerTone_On: [status,2+status,0+pclath+cstack]
  8404                           
  8405                           
  8406                           ;SpeakerTone.c: 87:     TMR3_StartTimer();
  8407  0F35  318F  2726  318F   	fcall	_TMR3_StartTimer
  8408  0F38                     l815:
  8409  0F38  0008               	return
  8410  0F39                     __end_of_SpeakerTone_On:
  8411                           
  8412                           	psect	text4
  8413  0F26                     __ptext4:	
  8414 ;; *************** function _TMR3_StartTimer *****************
  8415 ;; Defined at:
  8416 ;;		line 46 in file "tmr3.c"
  8417 ;; Parameters:    Size  Location     Type
  8418 ;;		None
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;		None
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  1    wreg      void 
  8423 ;; Registers used:
  8424 ;;		None
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8434 ;;Total ram usage:        0 bytes
  8435 ;; Hardware stack levels used: 1
  8436 ;; Hardware stack levels required when called: 4
  8437 ;; This function calls:
  8438 ;;		Nothing
  8439 ;; This function is called by:
  8440 ;;		_SpeakerTone_On
  8441 ;; This function uses a non-reentrant model
  8442 ;;
  8443                           
  8444  0F26                     _TMR3_StartTimer:	
  8445                           ;psect for function _TMR3_StartTimer
  8446                           
  8447  0F26                     l3100:	
  8448                           ;incstack = 0
  8449                           ; Regs used in _TMR3_StartTimer: []
  8450                           
  8451                           
  8452                           ;tmr3.c: 49:     T3CONbits.TMR3ON = 1;
  8453  0F26  0028               	movlb	8	; select bank8
  8454  0F27  1413               	bsf	19,0	;volatile
  8455  0F28                     l958:
  8456  0F28  0008               	return
  8457  0F29                     __end_of_TMR3_StartTimer:
  8458                           
  8459                           	psect	text5
  8460  0FF3                     __ptext5:	
  8461 ;; *************** function _CCP4_SetCompareCount *****************
  8462 ;; Defined at:
  8463 ;;		line 39 in file "ccp4.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;  compareCount    2    0[BANK0 ] unsigned short 
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;  module          2    2[BANK0 ] struct CCPR4Reg_tag
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  1    wreg      void 
  8470 ;; Registers used:
  8471 ;;		wreg
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8477 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8478 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8480 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8481 ;;Total ram usage:        4 bytes
  8482 ;; Hardware stack levels used: 1
  8483 ;; Hardware stack levels required when called: 4
  8484 ;; This function calls:
  8485 ;;		Nothing
  8486 ;; This function is called by:
  8487 ;;		_SpeakerTone_SetFrequency
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491  0FF3                     _CCP4_SetCompareCount:	
  8492                           ;psect for function _CCP4_SetCompareCount
  8493                           
  8494  0FF3                     l3368:	
  8495                           ;incstack = 0
  8496                           ; Regs used in _CCP4_SetCompareCount: [wreg]
  8497                           
  8498                           
  8499                           ;ccp4.c: 39: void CCP4_SetCompareCount(uint16_t compareCount);ccp4.c: 40: {;ccp4.c: 41: 
      +                              CCP4_PERIOD_REG_T module;;ccp4.c: 44:     module.ccpr4_16Bit = compareCount;
  8500  0FF3  0020               	movlb	0	; select bank0
  8501  0FF4  084B               	movf	CCP4_SetCompareCount@compareCount+1,w
  8502  0FF5  00CD               	movwf	CCP4_SetCompareCount@module+1
  8503  0FF6  084A               	movf	CCP4_SetCompareCount@compareCount,w
  8504  0FF7  00CC               	movwf	CCP4_SetCompareCount@module
  8505                           
  8506                           ;ccp4.c: 46:     CCPR4L = module.ccpr4l;
  8507  0FF8  084C               	movf	CCP4_SetCompareCount@module,w
  8508  0FF9  0026               	movlb	6	; select bank6
  8509  0FFA  0095               	movwf	21	;volatile
  8510                           
  8511                           ;ccp4.c: 47:     CCPR4H = module.ccpr4h;
  8512  0FFB  0020               	movlb	0	; select bank0
  8513  0FFC  084D               	movf	CCP4_SetCompareCount@module+1,w
  8514  0FFD  0026               	movlb	6	; select bank6
  8515  0FFE  0096               	movwf	22	;volatile
  8516  0FFF                     l882:
  8517  0FFF  0008               	return
  8518  1000                     __end_of_CCP4_SetCompareCount:
  8519                           
  8520                           	psect	text6
  8521  06C0                     __ptext6:	
  8522 ;; *************** function _SpeakerTone_Init *****************
  8523 ;; Defined at:
  8524 ;;		line 35 in file "SpeakerTone.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;		None
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;		None
  8529 ;; Return value:  Size  Location     Type
  8530 ;;                  1    wreg      void 
  8531 ;; Registers used:
  8532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8542 ;;Total ram usage:        0 bytes
  8543 ;; Hardware stack levels used: 1
  8544 ;; Hardware stack levels required when called: 7
  8545 ;; This function calls:
  8546 ;;		_SetPin
  8547 ;;		_SpeakerTone_Off
  8548 ;;		_WritePin
  8549 ;; This function is called by:
  8550 ;;		_main
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554  06C0                     _SpeakerTone_Init:	
  8555                           ;psect for function _SpeakerTone_Init
  8556                           
  8557  06C0                     l3534:	
  8558                           ;incstack = 0
  8559                           ; Regs used in _SpeakerTone_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8560                           
  8561                           
  8562                           ;SpeakerTone.c: 37:     SetPin(C1, 0);
  8563  06C0  0020               	movlb	0	; select bank0
  8564  06C1  01CA               	clrf	SetPin@io
  8565  06C2  300D               	movlw	13
  8566  06C3  3182  222A  3186   	fcall	_SetPin
  8567                           
  8568                           ;SpeakerTone.c: 38:     WritePin(C1, 0);
  8569  06C6  0020               	movlb	0	; select bank0
  8570  06C7  01CA               	clrf	WritePin@val
  8571  06C8  300D               	movlw	13
  8572  06C9  3181  216F  3186   	fcall	_WritePin
  8573  06CC                     l3536:
  8574                           
  8575                           ;SpeakerTone.c: 41:     currFreq = 440;
  8576  06CC  30B8               	movlw	184
  8577  06CD  0021               	movlb	1	; select bank1
  8578  06CE  00DA               	movwf	_currFreq^(0+128)
  8579  06CF  3001               	movlw	1
  8580  06D0  00DB               	movwf	(_currFreq^(0+128)+1)
  8581  06D1                     l3538:
  8582                           
  8583                           ;SpeakerTone.c: 42:     ocCount = 0x11C1;
  8584  06D1  30C1               	movlw	193
  8585  06D2  00D8               	movwf	_ocCount^(0+128)
  8586  06D3  3011               	movlw	17
  8587  06D4  00D9               	movwf	(_ocCount^(0+128)+1)
  8588  06D5                     l3540:
  8589                           
  8590                           ;SpeakerTone.c: 45:     SpeakerTone_Off();
  8591  06D5  318F  277D  3186   	fcall	_SpeakerTone_Off
  8592  06D8                     l799:
  8593  06D8  0008               	return
  8594  06D9                     __end_of_SpeakerTone_Init:
  8595                           
  8596                           	psect	text7
  8597  016F                     __ptext7:	
  8598 ;; *************** function _WritePin *****************
  8599 ;; Defined at:
  8600 ;;		line 148 in file "PIC16Xpress_DevBoard.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;  pin             1    wreg     enum E7144
  8603 ;;  val             1    0[BANK0 ] unsigned char 
  8604 ;; Auto vars:     Size  Location     Type
  8605 ;;  pin             1    3[BANK0 ] enum E7144
  8606 ;; Return value:  Size  Location     Type
  8607 ;;                  1    wreg      unsigned char 
  8608 ;; Registers used:
  8609 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8610 ;; Tracked objects:
  8611 ;;		On entry : 0/0
  8612 ;;		On exit  : 0/0
  8613 ;;		Unchanged: 0/0
  8614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8615 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8617 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8618 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8619 ;;Total ram usage:        4 bytes
  8620 ;; Hardware stack levels used: 1
  8621 ;; Hardware stack levels required when called: 4
  8622 ;; This function calls:
  8623 ;;		Nothing
  8624 ;; This function is called by:
  8625 ;;		_SpeakerTone_Init
  8626 ;;		_JSN_Sensor_Init
  8627 ;;		_JSN_Sensor_Trig
  8628 ;; This function uses a non-reentrant model
  8629 ;;
  8630                           
  8631  016F                     _WritePin:	
  8632                           ;psect for function _WritePin
  8633                           
  8634                           
  8635                           ;incstack = 0
  8636                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
  8637                           ;WritePin@pin stored from wreg
  8638  016F  0020               	movlb	0	; select bank0
  8639  0170  00CD               	movwf	WritePin@pin
  8640  0171                     l3196:
  8641                           
  8642                           ;PIC16Xpress_DevBoard.c: 149:     switch(pin) {
  8643  0171  29E9               	goto	l3268
  8644  0172                     l3198:
  8645                           
  8646                           ;PIC16Xpress_DevBoard.c: 151:             LATAbits.LATA5 = val;
  8647  0172  0C4A               	rrf	WritePin@val,w
  8648  0173  0022               	movlb	2	; select bank2
  8649  0174  1C03               	skipc
  8650  0175  128C               	bcf	12,5	;volatile
  8651  0176  1803               	skipnc
  8652  0177  168C               	bsf	12,5	;volatile
  8653  0178  2A29               	goto	l154
  8654  0179                     l3202:
  8655                           
  8656                           ;PIC16Xpress_DevBoard.c: 154:             LATAbits.LATA4 = val;
  8657  0179  0C4A               	rrf	WritePin@val,w
  8658  017A  0022               	movlb	2	; select bank2
  8659  017B  1C03               	skipc
  8660  017C  120C               	bcf	12,4	;volatile
  8661  017D  1803               	skipnc
  8662  017E  160C               	bsf	12,4	;volatile
  8663  017F  2A29               	goto	l154
  8664  0180                     l3206:
  8665                           
  8666                           ;PIC16Xpress_DevBoard.c: 159:             LATCbits.LATC5 = val;
  8667  0180  0C4A               	rrf	WritePin@val,w
  8668  0181  0022               	movlb	2	; select bank2
  8669  0182  1C03               	skipc
  8670  0183  128E               	bcf	14,5	;volatile
  8671  0184  1803               	skipnc
  8672  0185  168E               	bsf	14,5	;volatile
  8673  0186  2A29               	goto	l154
  8674  0187                     l3210:
  8675                           
  8676                           ;PIC16Xpress_DevBoard.c: 162:             LATCbits.LATC4 = val;
  8677  0187  0C4A               	rrf	WritePin@val,w
  8678  0188  0022               	movlb	2	; select bank2
  8679  0189  1C03               	skipc
  8680  018A  120E               	bcf	14,4	;volatile
  8681  018B  1803               	skipnc
  8682  018C  160E               	bsf	14,4	;volatile
  8683  018D  2A29               	goto	l154
  8684  018E                     l3214:
  8685                           
  8686                           ;PIC16Xpress_DevBoard.c: 165:             LATCbits.LATC3 = val;
  8687  018E  0C4A               	rrf	WritePin@val,w
  8688  018F  0022               	movlb	2	; select bank2
  8689  0190  1C03               	skipc
  8690  0191  118E               	bcf	14,3	;volatile
  8691  0192  1803               	skipnc
  8692  0193  158E               	bsf	14,3	;volatile
  8693  0194  2A29               	goto	l154
  8694  0195                     l3218:
  8695                           
  8696                           ;PIC16Xpress_DevBoard.c: 168:             LATCbits.LATC6 = val;
  8697  0195  0C4A               	rrf	WritePin@val,w
  8698  0196  0022               	movlb	2	; select bank2
  8699  0197  1C03               	skipc
  8700  0198  130E               	bcf	14,6	;volatile
  8701  0199  1803               	skipnc
  8702  019A  170E               	bsf	14,6	;volatile
  8703  019B  2A29               	goto	l154
  8704  019C                     l3222:
  8705                           
  8706                           ;PIC16Xpress_DevBoard.c: 171:             LATCbits.LATC7 = val;
  8707  019C  0C4A               	rrf	WritePin@val,w
  8708  019D  0022               	movlb	2	; select bank2
  8709  019E  1C03               	skipc
  8710  019F  138E               	bcf	14,7	;volatile
  8711  01A0  1803               	skipnc
  8712  01A1  178E               	bsf	14,7	;volatile
  8713  01A2  2A29               	goto	l154
  8714  01A3                     l3226:
  8715                           
  8716                           ;PIC16Xpress_DevBoard.c: 174:             LATBbits.LATB7 = val;
  8717  01A3  0C4A               	rrf	WritePin@val,w
  8718  01A4  0022               	movlb	2	; select bank2
  8719  01A5  1C03               	skipc
  8720  01A6  138D               	bcf	13,7	;volatile
  8721  01A7  1803               	skipnc
  8722  01A8  178D               	bsf	13,7	;volatile
  8723  01A9  2A29               	goto	l154
  8724  01AA                     l3230:
  8725                           
  8726                           ;PIC16Xpress_DevBoard.c: 177:             LATAbits.LATA0 = val;
  8727  01AA  0C4A               	rrf	WritePin@val,w
  8728  01AB  0022               	movlb	2	; select bank2
  8729  01AC  1C03               	skipc
  8730  01AD  100C               	bcf	12,0	;volatile
  8731  01AE  1803               	skipnc
  8732  01AF  140C               	bsf	12,0	;volatile
  8733  01B0  2A29               	goto	l154
  8734  01B1                     l3234:
  8735                           
  8736                           ;PIC16Xpress_DevBoard.c: 180:             LATAbits.LATA1 = val;
  8737  01B1  0C4A               	rrf	WritePin@val,w
  8738  01B2  0022               	movlb	2	; select bank2
  8739  01B3  1C03               	skipc
  8740  01B4  108C               	bcf	12,1	;volatile
  8741  01B5  1803               	skipnc
  8742  01B6  148C               	bsf	12,1	;volatile
  8743  01B7  2A29               	goto	l154
  8744  01B8                     l3238:
  8745                           
  8746                           ;PIC16Xpress_DevBoard.c: 183:             LATAbits.LATA2 = val;
  8747  01B8  0C4A               	rrf	WritePin@val,w
  8748  01B9  0022               	movlb	2	; select bank2
  8749  01BA  1C03               	skipc
  8750  01BB  110C               	bcf	12,2	;volatile
  8751  01BC  1803               	skipnc
  8752  01BD  150C               	bsf	12,2	;volatile
  8753  01BE  2A29               	goto	l154
  8754  01BF                     l3242:
  8755                           
  8756                           ;PIC16Xpress_DevBoard.c: 186:             LATCbits.LATC0 = val;
  8757  01BF  0C4A               	rrf	WritePin@val,w
  8758  01C0  0022               	movlb	2	; select bank2
  8759  01C1  1C03               	skipc
  8760  01C2  100E               	bcf	14,0	;volatile
  8761  01C3  1803               	skipnc
  8762  01C4  140E               	bsf	14,0	;volatile
  8763  01C5  2A29               	goto	l154
  8764  01C6                     l3246:
  8765                           
  8766                           ;PIC16Xpress_DevBoard.c: 189:             LATCbits.LATC1 = val;
  8767  01C6  0C4A               	rrf	WritePin@val,w
  8768  01C7  0022               	movlb	2	; select bank2
  8769  01C8  1C03               	skipc
  8770  01C9  108E               	bcf	14,1	;volatile
  8771  01CA  1803               	skipnc
  8772  01CB  148E               	bsf	14,1	;volatile
  8773  01CC  2A29               	goto	l154
  8774  01CD                     l3250:
  8775                           
  8776                           ;PIC16Xpress_DevBoard.c: 192:             LATCbits.LATC2 = val;
  8777  01CD  0C4A               	rrf	WritePin@val,w
  8778  01CE  0022               	movlb	2	; select bank2
  8779  01CF  1C03               	skipc
  8780  01D0  110E               	bcf	14,2	;volatile
  8781  01D1  1803               	skipnc
  8782  01D2  150E               	bsf	14,2	;volatile
  8783  01D3  2A29               	goto	l154
  8784  01D4                     l3254:
  8785                           
  8786                           ;PIC16Xpress_DevBoard.c: 195:             LATBbits.LATB4 = val;
  8787  01D4  0C4A               	rrf	WritePin@val,w
  8788  01D5  0022               	movlb	2	; select bank2
  8789  01D6  1C03               	skipc
  8790  01D7  120D               	bcf	13,4	;volatile
  8791  01D8  1803               	skipnc
  8792  01D9  160D               	bsf	13,4	;volatile
  8793  01DA  2A29               	goto	l154
  8794  01DB                     l3258:
  8795                           
  8796                           ;PIC16Xpress_DevBoard.c: 198:             LATBbits.LATB5 = val;
  8797  01DB  0C4A               	rrf	WritePin@val,w
  8798  01DC  0022               	movlb	2	; select bank2
  8799  01DD  1C03               	skipc
  8800  01DE  128D               	bcf	13,5	;volatile
  8801  01DF  1803               	skipnc
  8802  01E0  168D               	bsf	13,5	;volatile
  8803  01E1  2A29               	goto	l154
  8804  01E2                     l3262:
  8805                           
  8806                           ;PIC16Xpress_DevBoard.c: 201:             LATBbits.LATB6 = val;
  8807  01E2  0C4A               	rrf	WritePin@val,w
  8808  01E3  0022               	movlb	2	; select bank2
  8809  01E4  1C03               	skipc
  8810  01E5  130D               	bcf	13,6	;volatile
  8811  01E6  1803               	skipnc
  8812  01E7  170D               	bsf	13,6	;volatile
  8813  01E8  2A29               	goto	l154
  8814  01E9                     l3268:
  8815  01E9  084D               	movf	WritePin@pin,w
  8816  01EA  00CB               	movwf	??_WritePin
  8817  01EB  01CC               	clrf	??_WritePin+1
  8818                           
  8819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8820                           ; Switch size 1, requested type "simple"
  8821                           ; Number of cases is 1, Range of values is 0 to 0
  8822                           ; switch strategies available:
  8823                           ; Name         Instructions Cycles
  8824                           ; simple_byte            4     3 (average)
  8825                           ; direct_byte            8     6 (fixed)
  8826                           ; jumptable            260     6 (fixed)
  8827                           ;	Chosen strategy is simple_byte
  8828  01EC  084C               	movf	??_WritePin+1,w
  8829  01ED  3A00               	xorlw	0	; case 0
  8830  01EE  1903               	skipnz
  8831  01EF  29F1               	goto	l3946
  8832  01F0  2A29               	goto	l154
  8833  01F1                     l3946:
  8834                           
  8835                           ; Switch size 1, requested type "simple"
  8836                           ; Number of cases is 18, Range of values is 0 to 17
  8837                           ; switch strategies available:
  8838                           ; Name         Instructions Cycles
  8839                           ; direct_byte           42     6 (fixed)
  8840                           ; simple_byte           55    28 (average)
  8841                           ; jumptable            260     6 (fixed)
  8842                           ;	Chosen strategy is simple_byte
  8843  01F1  084B               	movf	??_WritePin,w
  8844  01F2  3A00               	xorlw	0	; case 0
  8845  01F3  1903               	skipnz
  8846  01F4  2972               	goto	l3198
  8847  01F5  3A01               	xorlw	1	; case 1
  8848  01F6  1903               	skipnz
  8849  01F7  2979               	goto	l3202
  8850  01F8  3A03               	xorlw	3	; case 2
  8851  01F9  1903               	skipnz
  8852  01FA  2A29               	goto	l154
  8853  01FB  3A01               	xorlw	1	; case 3
  8854  01FC  1903               	skipnz
  8855  01FD  2980               	goto	l3206
  8856  01FE  3A07               	xorlw	7	; case 4
  8857  01FF  1903               	skipnz
  8858  0200  2987               	goto	l3210
  8859  0201  3A01               	xorlw	1	; case 5
  8860  0202  1903               	skipnz
  8861  0203  298E               	goto	l3214
  8862  0204  3A03               	xorlw	3	; case 6
  8863  0205  1903               	skipnz
  8864  0206  2995               	goto	l3218
  8865  0207  3A01               	xorlw	1	; case 7
  8866  0208  1903               	skipnz
  8867  0209  299C               	goto	l3222
  8868  020A  3A0F               	xorlw	15	; case 8
  8869  020B  1903               	skipnz
  8870  020C  29A3               	goto	l3226
  8871  020D  3A01               	xorlw	1	; case 9
  8872  020E  1903               	skipnz
  8873  020F  29AA               	goto	l3230
  8874  0210  3A03               	xorlw	3	; case 10
  8875  0211  1903               	skipnz
  8876  0212  29B1               	goto	l3234
  8877  0213  3A01               	xorlw	1	; case 11
  8878  0214  1903               	skipnz
  8879  0215  29B8               	goto	l3238
  8880  0216  3A07               	xorlw	7	; case 12
  8881  0217  1903               	skipnz
  8882  0218  29BF               	goto	l3242
  8883  0219  3A01               	xorlw	1	; case 13
  8884  021A  1903               	skipnz
  8885  021B  29C6               	goto	l3246
  8886  021C  3A03               	xorlw	3	; case 14
  8887  021D  1903               	skipnz
  8888  021E  29CD               	goto	l3250
  8889  021F  3A01               	xorlw	1	; case 15
  8890  0220  1903               	skipnz
  8891  0221  29D4               	goto	l3254
  8892  0222  3A1F               	xorlw	31	; case 16
  8893  0223  1903               	skipnz
  8894  0224  29DB               	goto	l3258
  8895  0225  3A01               	xorlw	1	; case 17
  8896  0226  1903               	skipnz
  8897  0227  29E2               	goto	l3262
  8898  0228  2A29               	goto	l154
  8899  0229                     l154:
  8900  0229  0008               	return
  8901  022A                     __end_of_WritePin:
  8902                           
  8903                           	psect	text8
  8904  0F7D                     __ptext8:	
  8905 ;; *************** function _SpeakerTone_Off *****************
  8906 ;; Defined at:
  8907 ;;		line 78 in file "SpeakerTone.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;		None
  8910 ;; Auto vars:     Size  Location     Type
  8911 ;;		None
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  1    wreg      void 
  8914 ;; Registers used:
  8915 ;;		wreg, status,2, status,0, pclath, cstack
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8925 ;;Total ram usage:        0 bytes
  8926 ;; Hardware stack levels used: 1
  8927 ;; Hardware stack levels required when called: 6
  8928 ;; This function calls:
  8929 ;;		_TMR3_Reload
  8930 ;;		_TMR3_StopTimer
  8931 ;; This function is called by:
  8932 ;;		_SpeakerTone_Init
  8933 ;;		_SpeakerTone_SetFrequency
  8934 ;;		_main
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938  0F7D                     _SpeakerTone_Off:	
  8939                           ;psect for function _SpeakerTone_Off
  8940                           
  8941  0F7D                     l3362:	
  8942                           ;incstack = 0
  8943                           ; Regs used in _SpeakerTone_Off: [wreg+status,2+status,0+pclath+cstack]
  8944                           
  8945                           
  8946                           ;SpeakerTone.c: 79:     TMR3_StopTimer();
  8947  0F7D  318F  2723  318F   	fcall	_TMR3_StopTimer
  8948  0F80                     l3364:
  8949                           
  8950                           ;SpeakerTone.c: 80:     TMR3_Reload();
  8951  0F80  318F  279F  318F   	fcall	_TMR3_Reload
  8952  0F83                     l812:
  8953  0F83  0008               	return
  8954  0F84                     __end_of_SpeakerTone_Off:
  8955                           
  8956                           	psect	text9
  8957  0F23                     __ptext9:	
  8958 ;; *************** function _TMR3_StopTimer *****************
  8959 ;; Defined at:
  8960 ;;		line 54 in file "tmr3.c"
  8961 ;; Parameters:    Size  Location     Type
  8962 ;;		None
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;		None
  8965 ;; Return value:  Size  Location     Type
  8966 ;;                  1    wreg      void 
  8967 ;; Registers used:
  8968 ;;		None
  8969 ;; Tracked objects:
  8970 ;;		On entry : 0/0
  8971 ;;		On exit  : 0/0
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8978 ;;Total ram usage:        0 bytes
  8979 ;; Hardware stack levels used: 1
  8980 ;; Hardware stack levels required when called: 4
  8981 ;; This function calls:
  8982 ;;		Nothing
  8983 ;; This function is called by:
  8984 ;;		_SpeakerTone_Off
  8985 ;; This function uses a non-reentrant model
  8986 ;;
  8987                           
  8988  0F23                     _TMR3_StopTimer:	
  8989                           ;psect for function _TMR3_StopTimer
  8990                           
  8991  0F23                     l3096:	
  8992                           ;incstack = 0
  8993                           ; Regs used in _TMR3_StopTimer: []
  8994                           
  8995                           
  8996                           ;tmr3.c: 57:     T3CONbits.TMR3ON = 0;
  8997  0F23  0028               	movlb	8	; select bank8
  8998  0F24  1013               	bcf	19,0	;volatile
  8999  0F25                     l961:
  9000  0F25  0008               	return
  9001  0F26                     __end_of_TMR3_StopTimer:
  9002                           
  9003                           	psect	text10
  9004  0F9F                     __ptext10:	
  9005 ;; *************** function _TMR3_Reload *****************
  9006 ;; Defined at:
  9007 ;;		line 103 in file "tmr3.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;		None
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;		None
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  1    wreg      void 
  9014 ;; Registers used:
  9015 ;;		wreg, status,2, status,0, pclath, cstack
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;Total ram usage:        0 bytes
  9026 ;; Hardware stack levels used: 1
  9027 ;; Hardware stack levels required when called: 5
  9028 ;; This function calls:
  9029 ;;		_TMR3_WriteTimer
  9030 ;; This function is called by:
  9031 ;;		_SpeakerTone_Off
  9032 ;; This function uses a non-reentrant model
  9033 ;;
  9034                           
  9035  0F9F                     _TMR3_Reload:	
  9036                           ;psect for function _TMR3_Reload
  9037                           
  9038  0F9F                     l3098:	
  9039                           ;incstack = 0
  9040                           ; Regs used in _TMR3_Reload: [wreg+status,2+status,0+pclath+cstack]
  9041                           
  9042                           
  9043                           ;tmr3.c: 105:     TMR3_WriteTimer(timer3ReloadVal);
  9044  0F9F  0020               	movlb	0	; select bank0
  9045  0FA0  0821               	movf	_timer3ReloadVal+1,w	;volatile
  9046  0FA1  00CB               	movwf	TMR3_WriteTimer@timerVal+1
  9047  0FA2  0820               	movf	_timer3ReloadVal,w	;volatile
  9048  0FA3  00CA               	movwf	TMR3_WriteTimer@timerVal
  9049  0FA4  3186  26D9  318F   	fcall	_TMR3_WriteTimer
  9050  0FA7                     l972:
  9051  0FA7  0008               	return
  9052  0FA8                     __end_of_TMR3_Reload:
  9053                           
  9054                           	psect	text11
  9055  06D9                     __ptext11:	
  9056 ;; *************** function _TMR3_WriteTimer *****************
  9057 ;; Defined at:
  9058 ;;		line 79 in file "tmr3.c"
  9059 ;; Parameters:    Size  Location     Type
  9060 ;;  timerVal        2    0[BANK0 ] unsigned short 
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;		None
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  1    wreg      void 
  9065 ;; Registers used:
  9066 ;;		wreg, status,2
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9072 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9076 ;;Total ram usage:        2 bytes
  9077 ;; Hardware stack levels used: 1
  9078 ;; Hardware stack levels required when called: 4
  9079 ;; This function calls:
  9080 ;;		Nothing
  9081 ;; This function is called by:
  9082 ;;		_TMR3_Reload
  9083 ;; This function uses a non-reentrant model
  9084 ;;
  9085                           
  9086  06D9                     _TMR3_WriteTimer:	
  9087                           ;psect for function _TMR3_WriteTimer
  9088                           
  9089  06D9                     l2782:	
  9090                           ;incstack = 0
  9091                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
  9092                           
  9093                           
  9094                           ;tmr3.c: 79: void TMR3_WriteTimer(uint16_t timerVal);tmr3.c: 80: {;tmr3.c: 81:     if (T
      +                          3CONbits.T3SYNC == 1)
  9095  06D9  0028               	movlb	8	; select bank8
  9096  06DA  1D13               	btfss	19,2	;volatile
  9097  06DB  2EDD               	goto	u551
  9098  06DC  2EDE               	goto	u550
  9099  06DD                     u551:
  9100  06DD  2EE9               	goto	l2792
  9101  06DE                     u550:
  9102  06DE                     l2784:
  9103                           
  9104                           ;tmr3.c: 82:     {;tmr3.c: 84:         T3CONbits.TMR3ON = 0;
  9105  06DE  1013               	bcf	19,0	;volatile
  9106  06DF                     l2786:
  9107                           
  9108                           ;tmr3.c: 87:         TMR3H = (uint8_t)(timerVal >> 8);
  9109  06DF  0020               	movlb	0	; select bank0
  9110  06E0  084B               	movf	TMR3_WriteTimer@timerVal+1,w
  9111  06E1  0028               	movlb	8	; select bank8
  9112  06E2  0092               	movwf	18	;volatile
  9113  06E3                     l2788:
  9114                           
  9115                           ;tmr3.c: 88:         TMR3L = (uint8_t)timerVal;
  9116  06E3  0020               	movlb	0	; select bank0
  9117  06E4  084A               	movf	TMR3_WriteTimer@timerVal,w
  9118  06E5  0028               	movlb	8	; select bank8
  9119  06E6  0091               	movwf	17	;volatile
  9120  06E7                     l2790:
  9121                           
  9122                           ;tmr3.c: 91:         T3CONbits.TMR3ON =1;
  9123  06E7  1413               	bsf	19,0	;volatile
  9124                           
  9125                           ;tmr3.c: 92:     }
  9126  06E8  2EF1               	goto	l969
  9127  06E9                     l2792:
  9128                           
  9129                           ;tmr3.c: 94:     {;tmr3.c: 96:         TMR3H = (uint8_t)(timerVal >> 8);
  9130  06E9  0020               	movlb	0	; select bank0
  9131  06EA  084B               	movf	TMR3_WriteTimer@timerVal+1,w
  9132  06EB  0028               	movlb	8	; select bank8
  9133  06EC  0092               	movwf	18	;volatile
  9134  06ED                     l2794:
  9135                           
  9136                           ;tmr3.c: 97:         TMR3L = (uint8_t)timerVal;
  9137  06ED  0020               	movlb	0	; select bank0
  9138  06EE  084A               	movf	TMR3_WriteTimer@timerVal,w
  9139  06EF  0028               	movlb	8	; select bank8
  9140  06F0  0091               	movwf	17	;volatile
  9141  06F1                     l969:
  9142  06F1  0008               	return
  9143  06F2                     __end_of_TMR3_WriteTimer:
  9144                           
  9145                           	psect	text12
  9146  022A                     __ptext12:	
  9147 ;; *************** function _SetPin *****************
  9148 ;; Defined at:
  9149 ;;		line 41 in file "PIC16Xpress_DevBoard.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;  pin             1    wreg     enum E7144
  9152 ;;  io              1    0[BANK0 ] unsigned char 
  9153 ;; Auto vars:     Size  Location     Type
  9154 ;;  pin             1    3[BANK0 ] enum E7144
  9155 ;; Return value:  Size  Location     Type
  9156 ;;                  1    wreg      unsigned char 
  9157 ;; Registers used:
  9158 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9159 ;; Tracked objects:
  9160 ;;		On entry : 0/0
  9161 ;;		On exit  : 0/0
  9162 ;;		Unchanged: 0/0
  9163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9164 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9165 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9166 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9167 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9168 ;;Total ram usage:        4 bytes
  9169 ;; Hardware stack levels used: 1
  9170 ;; Hardware stack levels required when called: 4
  9171 ;; This function calls:
  9172 ;;		Nothing
  9173 ;; This function is called by:
  9174 ;;		_SpeakerTone_Init
  9175 ;;		_JSN_Sensor_Init
  9176 ;; This function uses a non-reentrant model
  9177 ;;
  9178                           
  9179  022A                     _SetPin:	
  9180                           ;psect for function _SetPin
  9181                           
  9182                           
  9183                           ;incstack = 0
  9184                           ; Regs used in _SetPin: [wreg-fsr0h+status,2+status,0]
  9185                           ;SetPin@pin stored from wreg
  9186  022A  0020               	movlb	0	; select bank0
  9187  022B  00CD               	movwf	SetPin@pin
  9188  022C                     l3116:
  9189                           
  9190                           ;PIC16Xpress_DevBoard.c: 42:     switch(pin) {
  9191  022C  2AA4               	goto	l3188
  9192  022D                     l3118:
  9193                           
  9194                           ;PIC16Xpress_DevBoard.c: 44:             TRISAbits.TRISA5 = io;
  9195  022D  0C4A               	rrf	SetPin@io,w
  9196  022E  0021               	movlb	1	; select bank1
  9197  022F  1C03               	skipc
  9198  0230  128C               	bcf	12,5	;volatile
  9199  0231  1803               	skipnc
  9200  0232  168C               	bsf	12,5	;volatile
  9201  0233  2AE4               	goto	l106
  9202  0234                     l3122:
  9203                           
  9204                           ;PIC16Xpress_DevBoard.c: 47:             TRISAbits.TRISA4 = io;
  9205  0234  0C4A               	rrf	SetPin@io,w
  9206  0235  0021               	movlb	1	; select bank1
  9207  0236  1C03               	skipc
  9208  0237  120C               	bcf	12,4	;volatile
  9209  0238  1803               	skipnc
  9210  0239  160C               	bsf	12,4	;volatile
  9211  023A  2AE4               	goto	l106
  9212  023B                     l3126:
  9213                           
  9214                           ;PIC16Xpress_DevBoard.c: 52:             TRISCbits.TRISC5 = io;
  9215  023B  0C4A               	rrf	SetPin@io,w
  9216  023C  0021               	movlb	1	; select bank1
  9217  023D  1C03               	skipc
  9218  023E  128E               	bcf	14,5	;volatile
  9219  023F  1803               	skipnc
  9220  0240  168E               	bsf	14,5	;volatile
  9221  0241  2AE4               	goto	l106
  9222  0242                     l3130:
  9223                           
  9224                           ;PIC16Xpress_DevBoard.c: 55:             TRISCbits.TRISC4 = io;
  9225  0242  0C4A               	rrf	SetPin@io,w
  9226  0243  0021               	movlb	1	; select bank1
  9227  0244  1C03               	skipc
  9228  0245  120E               	bcf	14,4	;volatile
  9229  0246  1803               	skipnc
  9230  0247  160E               	bsf	14,4	;volatile
  9231  0248  2AE4               	goto	l106
  9232  0249                     l3134:
  9233                           
  9234                           ;PIC16Xpress_DevBoard.c: 58:             TRISCbits.TRISC3 = io;
  9235  0249  0C4A               	rrf	SetPin@io,w
  9236  024A  0021               	movlb	1	; select bank1
  9237  024B  1C03               	skipc
  9238  024C  118E               	bcf	14,3	;volatile
  9239  024D  1803               	skipnc
  9240  024E  158E               	bsf	14,3	;volatile
  9241  024F  2AE4               	goto	l106
  9242  0250                     l3138:
  9243                           
  9244                           ;PIC16Xpress_DevBoard.c: 61:             TRISCbits.TRISC6 = io;
  9245  0250  0C4A               	rrf	SetPin@io,w
  9246  0251  0021               	movlb	1	; select bank1
  9247  0252  1C03               	skipc
  9248  0253  130E               	bcf	14,6	;volatile
  9249  0254  1803               	skipnc
  9250  0255  170E               	bsf	14,6	;volatile
  9251  0256  2AE4               	goto	l106
  9252  0257                     l3142:
  9253                           
  9254                           ;PIC16Xpress_DevBoard.c: 64:             TRISCbits.TRISC7 = io;
  9255  0257  0C4A               	rrf	SetPin@io,w
  9256  0258  0021               	movlb	1	; select bank1
  9257  0259  1C03               	skipc
  9258  025A  138E               	bcf	14,7	;volatile
  9259  025B  1803               	skipnc
  9260  025C  178E               	bsf	14,7	;volatile
  9261  025D  2AE4               	goto	l106
  9262  025E                     l3146:
  9263                           
  9264                           ;PIC16Xpress_DevBoard.c: 67:             TRISBbits.TRISB7 = io;
  9265  025E  0C4A               	rrf	SetPin@io,w
  9266  025F  0021               	movlb	1	; select bank1
  9267  0260  1C03               	skipc
  9268  0261  138D               	bcf	13,7	;volatile
  9269  0262  1803               	skipnc
  9270  0263  178D               	bsf	13,7	;volatile
  9271  0264  2AE4               	goto	l106
  9272  0265                     l3150:
  9273                           
  9274                           ;PIC16Xpress_DevBoard.c: 70:             TRISAbits.TRISA0 = io;
  9275  0265  0C4A               	rrf	SetPin@io,w
  9276  0266  0021               	movlb	1	; select bank1
  9277  0267  1C03               	skipc
  9278  0268  100C               	bcf	12,0	;volatile
  9279  0269  1803               	skipnc
  9280  026A  140C               	bsf	12,0	;volatile
  9281  026B  2AE4               	goto	l106
  9282  026C                     l3154:
  9283                           
  9284                           ;PIC16Xpress_DevBoard.c: 73:             TRISAbits.TRISA1 = io;
  9285  026C  0C4A               	rrf	SetPin@io,w
  9286  026D  0021               	movlb	1	; select bank1
  9287  026E  1C03               	skipc
  9288  026F  108C               	bcf	12,1	;volatile
  9289  0270  1803               	skipnc
  9290  0271  148C               	bsf	12,1	;volatile
  9291  0272  2AE4               	goto	l106
  9292  0273                     l3158:
  9293                           
  9294                           ;PIC16Xpress_DevBoard.c: 76:             TRISAbits.TRISA2 = io;
  9295  0273  0C4A               	rrf	SetPin@io,w
  9296  0274  0021               	movlb	1	; select bank1
  9297  0275  1C03               	skipc
  9298  0276  110C               	bcf	12,2	;volatile
  9299  0277  1803               	skipnc
  9300  0278  150C               	bsf	12,2	;volatile
  9301  0279  2AE4               	goto	l106
  9302  027A                     l3162:
  9303                           
  9304                           ;PIC16Xpress_DevBoard.c: 79:             TRISCbits.TRISC0 = io;
  9305  027A  0C4A               	rrf	SetPin@io,w
  9306  027B  0021               	movlb	1	; select bank1
  9307  027C  1C03               	skipc
  9308  027D  100E               	bcf	14,0	;volatile
  9309  027E  1803               	skipnc
  9310  027F  140E               	bsf	14,0	;volatile
  9311  0280  2AE4               	goto	l106
  9312  0281                     l3166:
  9313                           
  9314                           ;PIC16Xpress_DevBoard.c: 82:             TRISCbits.TRISC1 = io;
  9315  0281  0C4A               	rrf	SetPin@io,w
  9316  0282  0021               	movlb	1	; select bank1
  9317  0283  1C03               	skipc
  9318  0284  108E               	bcf	14,1	;volatile
  9319  0285  1803               	skipnc
  9320  0286  148E               	bsf	14,1	;volatile
  9321  0287  2AE4               	goto	l106
  9322  0288                     l3170:
  9323                           
  9324                           ;PIC16Xpress_DevBoard.c: 85:             TRISCbits.TRISC2 = io;
  9325  0288  0C4A               	rrf	SetPin@io,w
  9326  0289  0021               	movlb	1	; select bank1
  9327  028A  1C03               	skipc
  9328  028B  110E               	bcf	14,2	;volatile
  9329  028C  1803               	skipnc
  9330  028D  150E               	bsf	14,2	;volatile
  9331  028E  2AE4               	goto	l106
  9332  028F                     l3174:
  9333                           
  9334                           ;PIC16Xpress_DevBoard.c: 88:             TRISBbits.TRISB4 = io;
  9335  028F  0C4A               	rrf	SetPin@io,w
  9336  0290  0021               	movlb	1	; select bank1
  9337  0291  1C03               	skipc
  9338  0292  120D               	bcf	13,4	;volatile
  9339  0293  1803               	skipnc
  9340  0294  160D               	bsf	13,4	;volatile
  9341  0295  2AE4               	goto	l106
  9342  0296                     l3178:
  9343                           
  9344                           ;PIC16Xpress_DevBoard.c: 91:             TRISBbits.TRISB5 = io;
  9345  0296  0C4A               	rrf	SetPin@io,w
  9346  0297  0021               	movlb	1	; select bank1
  9347  0298  1C03               	skipc
  9348  0299  128D               	bcf	13,5	;volatile
  9349  029A  1803               	skipnc
  9350  029B  168D               	bsf	13,5	;volatile
  9351  029C  2AE4               	goto	l106
  9352  029D                     l3182:
  9353                           
  9354                           ;PIC16Xpress_DevBoard.c: 94:             TRISBbits.TRISB6 = io;
  9355  029D  0C4A               	rrf	SetPin@io,w
  9356  029E  0021               	movlb	1	; select bank1
  9357  029F  1C03               	skipc
  9358  02A0  130D               	bcf	13,6	;volatile
  9359  02A1  1803               	skipnc
  9360  02A2  170D               	bsf	13,6	;volatile
  9361  02A3  2AE4               	goto	l106
  9362  02A4                     l3188:
  9363  02A4  084D               	movf	SetPin@pin,w
  9364  02A5  00CB               	movwf	??_SetPin
  9365  02A6  01CC               	clrf	??_SetPin+1
  9366                           
  9367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9368                           ; Switch size 1, requested type "simple"
  9369                           ; Number of cases is 1, Range of values is 0 to 0
  9370                           ; switch strategies available:
  9371                           ; Name         Instructions Cycles
  9372                           ; simple_byte            4     3 (average)
  9373                           ; direct_byte            8     6 (fixed)
  9374                           ; jumptable            260     6 (fixed)
  9375                           ;	Chosen strategy is simple_byte
  9376  02A7  084C               	movf	??_SetPin+1,w
  9377  02A8  3A00               	xorlw	0	; case 0
  9378  02A9  1903               	skipnz
  9379  02AA  2AAC               	goto	l3948
  9380  02AB  2AE4               	goto	l106
  9381  02AC                     l3948:
  9382                           
  9383                           ; Switch size 1, requested type "simple"
  9384                           ; Number of cases is 18, Range of values is 0 to 17
  9385                           ; switch strategies available:
  9386                           ; Name         Instructions Cycles
  9387                           ; direct_byte           42     6 (fixed)
  9388                           ; simple_byte           55    28 (average)
  9389                           ; jumptable            260     6 (fixed)
  9390                           ;	Chosen strategy is simple_byte
  9391  02AC  084B               	movf	??_SetPin,w
  9392  02AD  3A00               	xorlw	0	; case 0
  9393  02AE  1903               	skipnz
  9394  02AF  2A2D               	goto	l3118
  9395  02B0  3A01               	xorlw	1	; case 1
  9396  02B1  1903               	skipnz
  9397  02B2  2A34               	goto	l3122
  9398  02B3  3A03               	xorlw	3	; case 2
  9399  02B4  1903               	skipnz
  9400  02B5  2AE4               	goto	l106
  9401  02B6  3A01               	xorlw	1	; case 3
  9402  02B7  1903               	skipnz
  9403  02B8  2A3B               	goto	l3126
  9404  02B9  3A07               	xorlw	7	; case 4
  9405  02BA  1903               	skipnz
  9406  02BB  2A42               	goto	l3130
  9407  02BC  3A01               	xorlw	1	; case 5
  9408  02BD  1903               	skipnz
  9409  02BE  2A49               	goto	l3134
  9410  02BF  3A03               	xorlw	3	; case 6
  9411  02C0  1903               	skipnz
  9412  02C1  2A50               	goto	l3138
  9413  02C2  3A01               	xorlw	1	; case 7
  9414  02C3  1903               	skipnz
  9415  02C4  2A57               	goto	l3142
  9416  02C5  3A0F               	xorlw	15	; case 8
  9417  02C6  1903               	skipnz
  9418  02C7  2A5E               	goto	l3146
  9419  02C8  3A01               	xorlw	1	; case 9
  9420  02C9  1903               	skipnz
  9421  02CA  2A65               	goto	l3150
  9422  02CB  3A03               	xorlw	3	; case 10
  9423  02CC  1903               	skipnz
  9424  02CD  2A6C               	goto	l3154
  9425  02CE  3A01               	xorlw	1	; case 11
  9426  02CF  1903               	skipnz
  9427  02D0  2A73               	goto	l3158
  9428  02D1  3A07               	xorlw	7	; case 12
  9429  02D2  1903               	skipnz
  9430  02D3  2A7A               	goto	l3162
  9431  02D4  3A01               	xorlw	1	; case 13
  9432  02D5  1903               	skipnz
  9433  02D6  2A81               	goto	l3166
  9434  02D7  3A03               	xorlw	3	; case 14
  9435  02D8  1903               	skipnz
  9436  02D9  2A88               	goto	l3170
  9437  02DA  3A01               	xorlw	1	; case 15
  9438  02DB  1903               	skipnz
  9439  02DC  2A8F               	goto	l3174
  9440  02DD  3A1F               	xorlw	31	; case 16
  9441  02DE  1903               	skipnz
  9442  02DF  2A96               	goto	l3178
  9443  02E0  3A01               	xorlw	1	; case 17
  9444  02E1  1903               	skipnz
  9445  02E2  2A9D               	goto	l3182
  9446  02E3  2AE4               	goto	l106
  9447  02E4                     l106:
  9448  02E4  0008               	return
  9449  02E5                     __end_of_SetPin:
  9450                           
  9451                           	psect	text13
  9452  0792                     __ptext13:	
  9453 ;; *************** function _PIC16_Init *****************
  9454 ;; Defined at:
  9455 ;;		line 16 in file "PIC16Xpress_DevBoard.c"
  9456 ;; Parameters:    Size  Location     Type
  9457 ;;		None
  9458 ;; Auto vars:     Size  Location     Type
  9459 ;;		None
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  1    wreg      void 
  9462 ;; Registers used:
  9463 ;;		wreg, status,2, status,0, pclath, cstack
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9473 ;;Total ram usage:        0 bytes
  9474 ;; Hardware stack levels used: 1
  9475 ;; Hardware stack levels required when called: 7
  9476 ;; This function calls:
  9477 ;;		_SYSTEM_Initialize
  9478 ;; This function is called by:
  9479 ;;		_main
  9480 ;; This function uses a non-reentrant model
  9481 ;;
  9482                           
  9483  0792                     _PIC16_Init:	
  9484                           ;psect for function _PIC16_Init
  9485                           
  9486  0792                     l3418:	
  9487                           ;incstack = 0
  9488                           ; Regs used in _PIC16_Init: [wreg+status,2+status,0+pclath+cstack]
  9489                           
  9490                           
  9491                           ;PIC16Xpress_DevBoard.c: 18:     PIE0 = 0x00;
  9492  0792  0021               	movlb	1	; select bank1
  9493  0793  0190               	clrf	16	;volatile
  9494                           
  9495                           ;PIC16Xpress_DevBoard.c: 19:     PIE1 = 0x00;
  9496  0794  0191               	clrf	17	;volatile
  9497                           
  9498                           ;PIC16Xpress_DevBoard.c: 20:     PIE2 = 0x00;
  9499  0795  0192               	clrf	18	;volatile
  9500                           
  9501                           ;PIC16Xpress_DevBoard.c: 21:     PIE3 = 0x00;
  9502  0796  0193               	clrf	19	;volatile
  9503                           
  9504                           ;PIC16Xpress_DevBoard.c: 22:     PIE4 = 0x00;
  9505  0797  0194               	clrf	20	;volatile
  9506                           
  9507                           ;PIC16Xpress_DevBoard.c: 25:     PIR0 = 0x00;
  9508  0798  0020               	movlb	0	; select bank0
  9509  0799  0190               	clrf	16	;volatile
  9510                           
  9511                           ;PIC16Xpress_DevBoard.c: 26:     PIR1 = 0x00;
  9512  079A  0191               	clrf	17	;volatile
  9513                           
  9514                           ;PIC16Xpress_DevBoard.c: 27:     PIR2 = 0x00;
  9515  079B  0192               	clrf	18	;volatile
  9516                           
  9517                           ;PIC16Xpress_DevBoard.c: 28:     PIR3 = 0x00;
  9518  079C  0193               	clrf	19	;volatile
  9519                           
  9520                           ;PIC16Xpress_DevBoard.c: 29:     PIR4 = 0x00;
  9521  079D  0194               	clrf	20	;volatile
  9522  079E                     l3420:
  9523                           
  9524                           ;PIC16Xpress_DevBoard.c: 32:     SYSTEM_Initialize();
  9525  079E  3186  2639  3187   	fcall	_SYSTEM_Initialize
  9526  07A1                     l3422:
  9527                           
  9528                           ;PIC16Xpress_DevBoard.c: 35:     (INTCONbits.PEIE = 1);
  9529  07A1  170B               	bsf	11,6	;volatile
  9530  07A2                     l3424:
  9531                           
  9532                           ;PIC16Xpress_DevBoard.c: 36:     (INTCONbits.GIE = 1);
  9533  07A2  178B               	bsf	11,7	;volatile
  9534  07A3                     l101:
  9535  07A3  0008               	return
  9536  07A4                     __end_of_PIC16_Init:
  9537                           
  9538                           	psect	text14
  9539  0639                     __ptext14:	
  9540 ;; *************** function _SYSTEM_Initialize *****************
  9541 ;; Defined at:
  9542 ;;		line 15 in file "mcc.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;		None
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;		None
  9547 ;; Return value:  Size  Location     Type
  9548 ;;                  1    wreg      void 
  9549 ;; Registers used:
  9550 ;;		wreg, status,2, status,0, pclath, cstack
  9551 ;; Tracked objects:
  9552 ;;		On entry : 0/0
  9553 ;;		On exit  : 0/0
  9554 ;;		Unchanged: 0/0
  9555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9560 ;;Total ram usage:        0 bytes
  9561 ;; Hardware stack levels used: 1
  9562 ;; Hardware stack levels required when called: 6
  9563 ;; This function calls:
  9564 ;;		_CCP1_Initialize
  9565 ;;		_CCP2_Initialize
  9566 ;;		_CCP3_Initialize
  9567 ;;		_CCP4_Initialize
  9568 ;;		_EUSART_Initialize
  9569 ;;		_OSCILLATOR_Initialize
  9570 ;;		_PIN_MANAGER_Initialize
  9571 ;;		_PMD_Initialize
  9572 ;;		_PWM5_Initialize
  9573 ;;		_TMR0_Initialize
  9574 ;;		_TMR1_Initialize
  9575 ;;		_TMR2_Initialize
  9576 ;;		_TMR3_Initialize
  9577 ;;		_WDT_Initialize
  9578 ;; This function is called by:
  9579 ;;		_PIC16_Init
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583  0639                     _SYSTEM_Initialize:	
  9584                           ;psect for function _SYSTEM_Initialize
  9585                           
  9586  0639                     l3276:	
  9587                           ;incstack = 0
  9588                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9589                           
  9590                           
  9591                           ;mcc.c: 17:     PMD_Initialize();
  9592  0639  318F  27C6  3186   	fcall	_PMD_Initialize
  9593                           
  9594                           ;mcc.c: 18:     PIN_MANAGER_Initialize();
  9595  063C  3184  24AF  3186   	fcall	_PIN_MANAGER_Initialize
  9596                           
  9597                           ;mcc.c: 19:     OSCILLATOR_Initialize();
  9598  063F  318F  27DA  3186   	fcall	_OSCILLATOR_Initialize
  9599                           
  9600                           ;mcc.c: 20:     WDT_Initialize();
  9601  0642  318F  2731  3186   	fcall	_WDT_Initialize
  9602                           
  9603                           ;mcc.c: 21:     CCP3_Initialize();
  9604  0645  3186  26F2  3186   	fcall	_CCP3_Initialize
  9605                           
  9606                           ;mcc.c: 22:     CCP1_Initialize();
  9607  0648  3187  2722  3186   	fcall	_CCP1_Initialize
  9608                           
  9609                           ;mcc.c: 23:     TMR2_Initialize();
  9610  064B  3187  27F8  3186   	fcall	_TMR2_Initialize
  9611                           
  9612                           ;mcc.c: 24:     TMR0_Initialize();
  9613  064E  3187  273A  3186   	fcall	_TMR0_Initialize
  9614                           
  9615                           ;mcc.c: 25:     CCP2_Initialize();
  9616  0651  3187  270A  3186   	fcall	_CCP2_Initialize
  9617                           
  9618                           ;mcc.c: 26:     CCP4_Initialize();
  9619  0654  3187  27B6  3186   	fcall	_CCP4_Initialize
  9620  0657                     l3278:
  9621                           
  9622                           ;mcc.c: 27:     TMR3_Initialize();
  9623  0657  318F  27E6  3186   	fcall	_TMR3_Initialize
  9624  065A                     l3280:
  9625                           
  9626                           ;mcc.c: 28:     PWM5_Initialize();
  9627  065A  318F  27D0  3186   	fcall	_PWM5_Initialize
  9628  065D                     l3282:
  9629                           
  9630                           ;mcc.c: 29:     TMR1_Initialize();
  9631  065D  3187  27E9  3186   	fcall	_TMR1_Initialize
  9632  0660                     l3284:
  9633                           
  9634                           ;mcc.c: 30:     EUSART_Initialize();
  9635  0660  3184  246A  3186   	fcall	_EUSART_Initialize
  9636  0663                     l230:
  9637  0663  0008               	return
  9638  0664                     __end_of_SYSTEM_Initialize:
  9639                           
  9640                           	psect	text15
  9641  0F31                     __ptext15:	
  9642 ;; *************** function _WDT_Initialize *****************
  9643 ;; Defined at:
  9644 ;;		line 55 in file "mcc.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;		None
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;		None
  9649 ;; Return value:  Size  Location     Type
  9650 ;;                  1    wreg      void 
  9651 ;; Registers used:
  9652 ;;		wreg
  9653 ;; Tracked objects:
  9654 ;;		On entry : 0/0
  9655 ;;		On exit  : 0/0
  9656 ;;		Unchanged: 0/0
  9657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9662 ;;Total ram usage:        0 bytes
  9663 ;; Hardware stack levels used: 1
  9664 ;; Hardware stack levels required when called: 4
  9665 ;; This function calls:
  9666 ;;		Nothing
  9667 ;; This function is called by:
  9668 ;;		_SYSTEM_Initialize
  9669 ;; This function uses a non-reentrant model
  9670 ;;
  9671                           
  9672  0F31                     _WDT_Initialize:	
  9673                           ;psect for function _WDT_Initialize
  9674                           
  9675  0F31                     l2942:	
  9676                           ;incstack = 0
  9677                           ; Regs used in _WDT_Initialize: [wreg]
  9678                           
  9679                           
  9680                           ;mcc.c: 58:     WDTCON = 0x16;
  9681  0F31  3016               	movlw	22
  9682  0F32  0021               	movlb	1	; select bank1
  9683  0F33  0097               	movwf	23	;volatile
  9684  0F34                     l239:
  9685  0F34  0008               	return
  9686  0F35                     __end_of_WDT_Initialize:
  9687                           
  9688                           	psect	text16
  9689  0FE6                     __ptext16:	
  9690 ;; *************** function _TMR3_Initialize *****************
  9691 ;; Defined at:
  9692 ;;		line 20 in file "tmr3.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;		None
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;		None
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1    wreg      void 
  9699 ;; Registers used:
  9700 ;;		status,2
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9710 ;;Total ram usage:        0 bytes
  9711 ;; Hardware stack levels used: 1
  9712 ;; Hardware stack levels required when called: 4
  9713 ;; This function calls:
  9714 ;;		Nothing
  9715 ;; This function is called by:
  9716 ;;		_SYSTEM_Initialize
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720  0FE6                     _TMR3_Initialize:	
  9721                           ;psect for function _TMR3_Initialize
  9722                           
  9723  0FE6                     l3022:	
  9724                           ;incstack = 0
  9725                           ; Regs used in _TMR3_Initialize: [status,2]
  9726                           
  9727                           
  9728                           ;tmr3.c: 23:     T3GCON = 0x00;
  9729  0FE6  0028               	movlb	8	; select bank8
  9730  0FE7  0194               	clrf	20	;volatile
  9731                           
  9732                           ;tmr3.c: 26:     TMR3H = 0x00;
  9733  0FE8  0192               	clrf	18	;volatile
  9734                           
  9735                           ;tmr3.c: 29:     TMR3L = 0x00;
  9736  0FE9  0191               	clrf	17	;volatile
  9737  0FEA                     l3024:
  9738                           
  9739                           ;tmr3.c: 32:     PIR3bits.TMR3IF = 0;
  9740  0FEA  0020               	movlb	0	; select bank0
  9741  0FEB  1213               	bcf	19,4	;volatile
  9742                           
  9743                           ;tmr3.c: 35:     timer3ReloadVal = 0x0000;
  9744  0FEC  01A0               	clrf	_timer3ReloadVal	;volatile
  9745  0FED  01A1               	clrf	_timer3ReloadVal+1	;volatile
  9746  0FEE                     l3026:
  9747                           
  9748                           ;tmr3.c: 38:     PIE3bits.TMR3IE = 1;
  9749  0FEE  0021               	movlb	1	; select bank1
  9750  0FEF  1613               	bsf	19,4	;volatile
  9751                           
  9752                           ;tmr3.c: 41:     T3CON = 0x00;
  9753  0FF0  0028               	movlb	8	; select bank8
  9754  0FF1  0193               	clrf	19	;volatile
  9755  0FF2                     l955:
  9756  0FF2  0008               	return
  9757  0FF3                     __end_of_TMR3_Initialize:
  9758                           
  9759                           	psect	text17
  9760  07F8                     __ptext17:	
  9761 ;; *************** function _TMR2_Initialize *****************
  9762 ;; Defined at:
  9763 ;;		line 17 in file "tmr2.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;		None
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;		None
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      void 
  9770 ;; Registers used:
  9771 ;;		wreg, status,2
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9781 ;;Total ram usage:        0 bytes
  9782 ;; Hardware stack levels used: 1
  9783 ;; Hardware stack levels required when called: 4
  9784 ;; This function calls:
  9785 ;;		Nothing
  9786 ;; This function is called by:
  9787 ;;		_SYSTEM_Initialize
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791  07F8                     _TMR2_Initialize:	
  9792                           ;psect for function _TMR2_Initialize
  9793                           
  9794  07F8                     l2976:	
  9795                           ;incstack = 0
  9796                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9797                           
  9798                           
  9799                           ;tmr2.c: 20:     PR2 = 0xF9;
  9800  07F8  30F9               	movlw	249
  9801  07F9  0020               	movlb	0	; select bank0
  9802  07FA  009E               	movwf	30	;volatile
  9803  07FB                     l2978:
  9804                           
  9805                           ;tmr2.c: 23:     TMR2 = 0x00;
  9806  07FB  019D               	clrf	29	;volatile
  9807  07FC                     l2980:
  9808                           
  9809                           ;tmr2.c: 26:     PIR1bits.TMR2IF = 0;
  9810  07FC  1091               	bcf	17,1	;volatile
  9811  07FD                     l2982:
  9812                           
  9813                           ;tmr2.c: 29:     T2CON = 0x06;
  9814  07FD  3006               	movlw	6
  9815  07FE  009F               	movwf	31	;volatile
  9816  07FF                     l915:
  9817  07FF  0008               	return
  9818  0800                     __end_of_TMR2_Initialize:
  9819                           
  9820                           	psect	text18
  9821  07E9                     __ptext18:	
  9822 ;; *************** function _TMR1_Initialize *****************
  9823 ;; Defined at:
  9824 ;;		line 19 in file "tmr1.c"
  9825 ;; Parameters:    Size  Location     Type
  9826 ;;		None
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;		None
  9829 ;; Return value:  Size  Location     Type
  9830 ;;                  1    wreg      void 
  9831 ;; Registers used:
  9832 ;;		wreg, status,2
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9842 ;;Total ram usage:        0 bytes
  9843 ;; Hardware stack levels used: 1
  9844 ;; Hardware stack levels required when called: 4
  9845 ;; This function calls:
  9846 ;;		Nothing
  9847 ;; This function is called by:
  9848 ;;		_SYSTEM_Initialize
  9849 ;; This function uses a non-reentrant model
  9850 ;;
  9851                           
  9852  07E9                     _TMR1_Initialize:	
  9853                           ;psect for function _TMR1_Initialize
  9854                           
  9855  07E9                     l3036:	
  9856                           ;incstack = 0
  9857                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  9858                           
  9859                           
  9860                           ;tmr1.c: 24:     T1GCON = 0x00;
  9861  07E9  0020               	movlb	0	; select bank0
  9862  07EA  019C               	clrf	28	;volatile
  9863                           
  9864                           ;tmr1.c: 27:     TMR1H = 0x00;
  9865  07EB  019A               	clrf	26	;volatile
  9866                           
  9867                           ;tmr1.c: 30:     TMR1L = 0x00;
  9868  07EC  0199               	clrf	25	;volatile
  9869  07ED                     l3038:
  9870                           
  9871                           ;tmr1.c: 33:     PIR1bits.TMR1IF = 0;
  9872  07ED  1011               	bcf	17,0	;volatile
  9873  07EE                     l3040:
  9874                           
  9875                           ;tmr1.c: 36:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  9876  07EE  081A               	movf	26,w	;volatile
  9877  07EF  00AB               	movwf	_timer1ReloadVal+1	;volatile
  9878  07F0  0819               	movf	25,w	;volatile
  9879  07F1  00AA               	movwf	_timer1ReloadVal	;volatile
  9880  07F2                     l3042:
  9881                           
  9882                           ;tmr1.c: 39:     PIE1bits.TMR1IE = 1;
  9883  07F2  0021               	movlb	1	; select bank1
  9884  07F3  1411               	bsf	17,0	;volatile
  9885  07F4                     l3044:
  9886                           
  9887                           ;tmr1.c: 42:     T1CON = 0b00100001;
  9888  07F4  3021               	movlw	33
  9889  07F5  0020               	movlb	0	; select bank0
  9890  07F6  009B               	movwf	27	;volatile
  9891  07F7                     l461:
  9892  07F7  0008               	return
  9893  07F8                     __end_of_TMR1_Initialize:
  9894                           
  9895                           	psect	text19
  9896  073A                     __ptext19:	
  9897 ;; *************** function _TMR0_Initialize *****************
  9898 ;; Defined at:
  9899 ;;		line 19 in file "tmr0.c"
  9900 ;; Parameters:    Size  Location     Type
  9901 ;;		None
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;		None
  9904 ;; Return value:  Size  Location     Type
  9905 ;;                  1    wreg      void 
  9906 ;; Registers used:
  9907 ;;		wreg, status,2, status,0, pclath, cstack
  9908 ;; Tracked objects:
  9909 ;;		On entry : 0/0
  9910 ;;		On exit  : 0/0
  9911 ;;		Unchanged: 0/0
  9912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9917 ;;Total ram usage:        0 bytes
  9918 ;; Hardware stack levels used: 1
  9919 ;; Hardware stack levels required when called: 5
  9920 ;; This function calls:
  9921 ;;		_TMR0_SetInterruptHandler
  9922 ;; This function is called by:
  9923 ;;		_SYSTEM_Initialize
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           
  9927  073A                     _TMR0_Initialize:	
  9928                           ;psect for function _TMR0_Initialize
  9929                           
  9930  073A                     l2984:	
  9931                           ;incstack = 0
  9932                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9933                           
  9934                           
  9935                           ;tmr0.c: 22:     T0CON1 = 0x42;
  9936  073A  3042               	movlw	66
  9937  073B  0020               	movlb	0	; select bank0
  9938  073C  0098               	movwf	24	;volatile
  9939                           
  9940                           ;tmr0.c: 25:     TMR0H = 0xF9;
  9941  073D  30F9               	movlw	249
  9942  073E  0096               	movwf	22	;volatile
  9943  073F                     l2986:
  9944                           
  9945                           ;tmr0.c: 28:     TMR0L = 0x00;
  9946  073F  0195               	clrf	21	;volatile
  9947  0740                     l2988:
  9948                           
  9949                           ;tmr0.c: 31:     PIR0bits.TMR0IF = 0;
  9950  0740  1290               	bcf	16,5	;volatile
  9951  0741                     l2990:
  9952                           
  9953                           ;tmr0.c: 34:     PIE0bits.TMR0IE = 1;
  9954  0741  0021               	movlb	1	; select bank1
  9955  0742  1690               	bsf	16,5	;volatile
  9956  0743                     l2992:
  9957                           
  9958                           ;tmr0.c: 37:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  9959  0743  3000               	movlw	0
  9960  0744  0020               	movlb	0	; select bank0
  9961  0745  00CA               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  9962  0746  3000               	movlw	0
  9963  0747  00CB               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9964  0748  318F  2796  3187   	fcall	_TMR0_SetInterruptHandler
  9965  074B                     l2994:
  9966                           
  9967                           ;tmr0.c: 40:     T0CON0 = 0x80;
  9968  074B  3080               	movlw	128
  9969  074C  0020               	movlb	0	; select bank0
  9970  074D  0097               	movwf	23	;volatile
  9971  074E                     l2996:
  9972                           
  9973                           ;tmr0.c: 41:     CountCallBack = 0;
  9974  074E  01C8               	clrf	_CountCallBack	;volatile
  9975  074F                     l273:
  9976  074F  0008               	return
  9977  0750                     __end_of_TMR0_Initialize:
  9978                           
  9979                           	psect	text20
  9980  0F96                     __ptext20:	
  9981 ;; *************** function _TMR0_SetInterruptHandler *****************
  9982 ;; Defined at:
  9983 ;;		line 117 in file "tmr0.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9986 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  9987 ;; Auto vars:     Size  Location     Type
  9988 ;;		None
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  1    wreg      void 
  9991 ;; Registers used:
  9992 ;;		wreg
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9998 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10001 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10002 ;;Total ram usage:        2 bytes
 10003 ;; Hardware stack levels used: 1
 10004 ;; Hardware stack levels required when called: 4
 10005 ;; This function calls:
 10006 ;;		Nothing
 10007 ;; This function is called by:
 10008 ;;		_TMR0_Initialize
 10009 ;; This function uses a non-reentrant model
 10010 ;;
 10011                           
 10012  0F96                     _TMR0_SetInterruptHandler:	
 10013                           ;psect for function _TMR0_SetInterruptHandler
 10014                           
 10015  0F96                     l2764:	
 10016                           ;incstack = 0
 10017                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 10018                           
 10019                           
 10020                           ;tmr0.c: 118:     TMR0_InterruptHandler = InterruptHandler;
 10021  0F96  0020               	movlb	0	; select bank0
 10022  0F97  084B               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 10023  0F98  0021               	movlb	1	; select bank1
 10024  0F99  00DF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 10025  0F9A  0020               	movlb	0	; select bank0
 10026  0F9B  084A               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 10027  0F9C  0021               	movlb	1	; select bank1
 10028  0F9D  00DE               	movwf	_TMR0_InterruptHandler^(0+128)
 10029  0F9E                     l298:
 10030  0F9E  0008               	return
 10031  0F9F                     __end_of_TMR0_SetInterruptHandler:
 10032                           
 10033                           	psect	text21
 10034  0FD0                     __ptext21:	
 10035 ;; *************** function _PWM5_Initialize *****************
 10036 ;; Defined at:
 10037 ;;		line 16 in file "pwm5.c"
 10038 ;; Parameters:    Size  Location     Type
 10039 ;;		None
 10040 ;; Auto vars:     Size  Location     Type
 10041 ;;		None
 10042 ;; Return value:  Size  Location     Type
 10043 ;;                  1    wreg      void 
 10044 ;; Registers used:
 10045 ;;		wreg, status,2, status,0
 10046 ;; Tracked objects:
 10047 ;;		On entry : 0/0
 10048 ;;		On exit  : 0/0
 10049 ;;		Unchanged: 0/0
 10050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10055 ;;Total ram usage:        0 bytes
 10056 ;; Hardware stack levels used: 1
 10057 ;; Hardware stack levels required when called: 4
 10058 ;; This function calls:
 10059 ;;		Nothing
 10060 ;; This function is called by:
 10061 ;;		_SYSTEM_Initialize
 10062 ;; This function uses a non-reentrant model
 10063 ;;
 10064                           
 10065  0FD0                     _PWM5_Initialize:	
 10066                           ;psect for function _PWM5_Initialize
 10067                           
 10068  0FD0                     l3028:	
 10069                           ;incstack = 0
 10070                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 10071                           
 10072                           
 10073                           ;pwm5.c: 18:     PWM5CON = 0x80;
 10074  0FD0  3080               	movlw	128
 10075  0FD1  002C               	movlb	12	; select bank12
 10076  0FD2  0099               	movwf	25	;volatile
 10077  0FD3                     l3030:
 10078                           
 10079                           ;pwm5.c: 21:     PWM5DCH = 0x00;
 10080  0FD3  0198               	clrf	24	;volatile
 10081  0FD4                     l3032:
 10082                           
 10083                           ;pwm5.c: 24:     PWM5DCL = 0x00;
 10084  0FD4  0197               	clrf	23	;volatile
 10085  0FD5                     l3034:
 10086                           
 10087                           ;pwm5.c: 27:     PWMTMRSbits.P5TSEL = 1;
 10088  0FD5  081F               	movf	31,w	;volatile
 10089  0FD6  39FC               	andlw	-4
 10090  0FD7  3801               	iorlw	1
 10091  0FD8  009F               	movwf	31	;volatile
 10092  0FD9                     l899:
 10093  0FD9  0008               	return
 10094  0FDA                     __end_of_PWM5_Initialize:
 10095                           
 10096                           	psect	text22
 10097  0FC6                     __ptext22:	
 10098 ;; *************** function _PMD_Initialize *****************
 10099 ;; Defined at:
 10100 ;;		line 63 in file "mcc.c"
 10101 ;; Parameters:    Size  Location     Type
 10102 ;;		None
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;		None
 10105 ;; Return value:  Size  Location     Type
 10106 ;;                  1    wreg      void 
 10107 ;; Registers used:
 10108 ;;		wreg, status,2
 10109 ;; Tracked objects:
 10110 ;;		On entry : 0/0
 10111 ;;		On exit  : 0/0
 10112 ;;		Unchanged: 0/0
 10113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10118 ;;Total ram usage:        0 bytes
 10119 ;; Hardware stack levels used: 1
 10120 ;; Hardware stack levels required when called: 4
 10121 ;; This function calls:
 10122 ;;		Nothing
 10123 ;; This function is called by:
 10124 ;;		_SYSTEM_Initialize
 10125 ;; This function uses a non-reentrant model
 10126 ;;
 10127                           
 10128  0FC6                     _PMD_Initialize:	
 10129                           ;psect for function _PMD_Initialize
 10130                           
 10131  0FC6                     l2886:	
 10132                           ;incstack = 0
 10133                           ; Regs used in _PMD_Initialize: [wreg+status,2]
 10134                           
 10135                           
 10136                           ;mcc.c: 67:     PMD0 = 0x00;
 10137  0FC6  0032               	movlb	18	; select bank18
 10138  0FC7  0191               	clrf	17	;volatile
 10139                           
 10140                           ;mcc.c: 68:     PMD1 = 0x00;
 10141  0FC8  0192               	clrf	18	;volatile
 10142  0FC9                     l2888:
 10143                           
 10144                           ;mcc.c: 71:     PMD2 = 0x66;
 10145  0FC9  3066               	movlw	102
 10146  0FCA  0093               	movwf	19	;volatile
 10147  0FCB                     l2890:
 10148                           
 10149                           ;mcc.c: 72:     PMD3 = 0x00;
 10150  0FCB  0194               	clrf	20	;volatile
 10151  0FCC                     l2892:
 10152                           
 10153                           ;mcc.c: 73:     PMD4 = 0x00;
 10154  0FCC  0195               	clrf	21	;volatile
 10155  0FCD                     l2894:
 10156                           
 10157                           ;mcc.c: 76:     PMD5 = 0x1F;
 10158  0FCD  301F               	movlw	31
 10159  0FCE  0096               	movwf	22	;volatile
 10160  0FCF                     l242:
 10161  0FCF  0008               	return
 10162  0FD0                     __end_of_PMD_Initialize:
 10163                           
 10164                           	psect	text23
 10165  04AF                     __ptext23:	
 10166 ;; *************** function _PIN_MANAGER_Initialize *****************
 10167 ;; Defined at:
 10168 ;;		line 14 in file "pin_manager.c"
 10169 ;; Parameters:    Size  Location     Type
 10170 ;;		None
 10171 ;; Auto vars:     Size  Location     Type
 10172 ;;		None
 10173 ;; Return value:  Size  Location     Type
 10174 ;;                  1    wreg      void 
 10175 ;; Registers used:
 10176 ;;		wreg, status,2
 10177 ;; Tracked objects:
 10178 ;;		On entry : 0/0
 10179 ;;		On exit  : 0/0
 10180 ;;		Unchanged: 0/0
 10181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10186 ;;Total ram usage:        0 bytes
 10187 ;; Hardware stack levels used: 1
 10188 ;; Hardware stack levels required when called: 4
 10189 ;; This function calls:
 10190 ;;		Nothing
 10191 ;; This function is called by:
 10192 ;;		_SYSTEM_Initialize
 10193 ;; This function uses a non-reentrant model
 10194 ;;
 10195                           
 10196  04AF                     _PIN_MANAGER_Initialize:	
 10197                           ;psect for function _PIN_MANAGER_Initialize
 10198                           
 10199  04AF                     l2896:	
 10200                           ;incstack = 0
 10201                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10202                           
 10203                           
 10204                           ;pin_manager.c: 19:     LATA = 0x00;
 10205  04AF  0022               	movlb	2	; select bank2
 10206  04B0  018C               	clrf	12	;volatile
 10207                           
 10208                           ;pin_manager.c: 20:     LATB = 0x00;
 10209  04B1  018D               	clrf	13	;volatile
 10210                           
 10211                           ;pin_manager.c: 21:     LATC = 0x00;
 10212  04B2  018E               	clrf	14	;volatile
 10213  04B3                     l2898:
 10214                           
 10215                           ;pin_manager.c: 26:     TRISA = 0x37;
 10216  04B3  3037               	movlw	55
 10217  04B4  0021               	movlb	1	; select bank1
 10218  04B5  008C               	movwf	12	;volatile
 10219  04B6                     l2900:
 10220                           
 10221                           ;pin_manager.c: 27:     TRISB = 0xF0;
 10222  04B6  30F0               	movlw	240
 10223  04B7  008D               	movwf	13	;volatile
 10224  04B8                     l2902:
 10225                           
 10226                           ;pin_manager.c: 28:     TRISC = 0xEF;
 10227  04B8  30EF               	movlw	239
 10228  04B9  008E               	movwf	14	;volatile
 10229  04BA                     l2904:
 10230                           
 10231                           ;pin_manager.c: 33:     ANSELC = 0xD7;
 10232  04BA  30D7               	movlw	215
 10233  04BB  0023               	movlb	3	; select bank3
 10234  04BC  008E               	movwf	14	;volatile
 10235  04BD                     l2906:
 10236                           
 10237                           ;pin_manager.c: 34:     ANSELB = 0xD0;
 10238  04BD  30D0               	movlw	208
 10239  04BE  008D               	movwf	13	;volatile
 10240  04BF                     l2908:
 10241                           
 10242                           ;pin_manager.c: 35:     ANSELA = 0x33;
 10243  04BF  3033               	movlw	51
 10244  04C0  008C               	movwf	12	;volatile
 10245                           
 10246                           ;pin_manager.c: 40:     WPUB = 0x00;
 10247  04C1  0024               	movlb	4	; select bank4
 10248  04C2  018D               	clrf	13	;volatile
 10249                           
 10250                           ;pin_manager.c: 41:     WPUA = 0x00;
 10251  04C3  018C               	clrf	12	;volatile
 10252                           
 10253                           ;pin_manager.c: 42:     WPUC = 0x00;
 10254  04C4  018E               	clrf	14	;volatile
 10255                           
 10256                           ;pin_manager.c: 47:     ODCONA = 0x00;
 10257  04C5  0025               	movlb	5	; select bank5
 10258  04C6  018C               	clrf	12	;volatile
 10259                           
 10260                           ;pin_manager.c: 48:     ODCONB = 0x00;
 10261  04C7  018D               	clrf	13	;volatile
 10262                           
 10263                           ;pin_manager.c: 49:     ODCONC = 0x00;
 10264  04C8  018E               	clrf	14	;volatile
 10265  04C9                     l2910:
 10266                           
 10267                           ;pin_manager.c: 54:     SLRCONA = 0x37;
 10268  04C9  3037               	movlw	55
 10269  04CA  0026               	movlb	6	; select bank6
 10270  04CB  008C               	movwf	12	;volatile
 10271  04CC                     l2912:
 10272                           
 10273                           ;pin_manager.c: 55:     SLRCONB = 0xF0;
 10274  04CC  30F0               	movlw	240
 10275  04CD  008D               	movwf	13	;volatile
 10276  04CE                     l2914:
 10277                           
 10278                           ;pin_manager.c: 56:     SLRCONC = 0xFF;
 10279  04CE  30FF               	movlw	255
 10280  04CF  008E               	movwf	14	;volatile
 10281  04D0                     l2916:
 10282                           
 10283                           ;pin_manager.c: 61:     INLVLA = 0x3F;
 10284  04D0  303F               	movlw	63
 10285  04D1  0027               	movlb	7	; select bank7
 10286  04D2  008C               	movwf	12	;volatile
 10287  04D3                     l2918:
 10288                           
 10289                           ;pin_manager.c: 62:     INLVLB = 0xF0;
 10290  04D3  30F0               	movlw	240
 10291  04D4  008D               	movwf	13	;volatile
 10292  04D5                     l2920:
 10293                           
 10294                           ;pin_manager.c: 63:     INLVLC = 0xFF;
 10295  04D5  30FF               	movlw	255
 10296  04D6  008E               	movwf	14	;volatile
 10297  04D7                     l2922:
 10298                           
 10299                           ;pin_manager.c: 66:     RXPPS = 0x0D;
 10300  04D7  300D               	movlw	13
 10301  04D8  003C               	movlb	28	; select bank28
 10302  04D9  00A4               	movwf	36	;volatile
 10303  04DA                     l2924:
 10304                           
 10305                           ;pin_manager.c: 67:     RC4PPS = 0x14;
 10306  04DA  3014               	movlw	20
 10307  04DB  003D               	movlb	29	; select bank29
 10308  04DC  00A4               	movwf	36	;volatile
 10309  04DD                     l2926:
 10310                           
 10311                           ;pin_manager.c: 69:     CCP1PPS = 0x15;
 10312  04DD  3015               	movlw	21
 10313  04DE  003C               	movlb	28	; select bank28
 10314  04DF  0094               	movwf	20	;volatile
 10315  04E0                     l2928:
 10316                           
 10317                           ;pin_manager.c: 70:     CCP2PPS = 0x13;
 10318  04E0  3013               	movlw	19
 10319  04E1  0095               	movwf	21	;volatile
 10320  04E2                     l2930:
 10321                           
 10322                           ;pin_manager.c: 71:     CCP3PPS = 0x02;
 10323  04E2  3002               	movlw	2
 10324  04E3  0096               	movwf	22	;volatile
 10325  04E4                     l2932:
 10326                           
 10327                           ;pin_manager.c: 73:     RC1PPS = 0x0F;
 10328  04E4  300F               	movlw	15
 10329  04E5  003D               	movlb	29	; select bank29
 10330  04E6  00A1               	movwf	33	;volatile
 10331  04E7                     l2934:
 10332                           
 10333                           ;pin_manager.c: 74:     RB6PPS = 0x02;
 10334  04E7  3002               	movlw	2
 10335  04E8  009E               	movwf	30	;volatile
 10336  04E9                     l749:
 10337  04E9  0008               	return
 10338  04EA                     __end_of_PIN_MANAGER_Initialize:
 10339                           
 10340                           	psect	text24
 10341  0FDA                     __ptext24:	
 10342 ;; *************** function _OSCILLATOR_Initialize *****************
 10343 ;; Defined at:
 10344 ;;		line 35 in file "mcc.c"
 10345 ;; Parameters:    Size  Location     Type
 10346 ;;		None
 10347 ;; Auto vars:     Size  Location     Type
 10348 ;;		None
 10349 ;; Return value:  Size  Location     Type
 10350 ;;                  1    wreg      void 
 10351 ;; Registers used:
 10352 ;;		wreg, status,2
 10353 ;; Tracked objects:
 10354 ;;		On entry : 0/0
 10355 ;;		On exit  : 0/0
 10356 ;;		Unchanged: 0/0
 10357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10362 ;;Total ram usage:        0 bytes
 10363 ;; Hardware stack levels used: 1
 10364 ;; Hardware stack levels required when called: 4
 10365 ;; This function calls:
 10366 ;;		Nothing
 10367 ;; This function is called by:
 10368 ;;		_SYSTEM_Initialize
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372  0FDA                     _OSCILLATOR_Initialize:	
 10373                           ;psect for function _OSCILLATOR_Initialize
 10374                           
 10375  0FDA                     l2936:	
 10376                           ;incstack = 0
 10377                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10378                           
 10379                           
 10380                           ;mcc.c: 38:     OSCCON1 = 0x00;
 10381  0FDA  0032               	movlb	18	; select bank18
 10382  0FDB  0199               	clrf	25	;volatile
 10383                           
 10384                           ;mcc.c: 40:     OSCCON3 = 0x00;
 10385  0FDC  019B               	clrf	27	;volatile
 10386                           
 10387                           ;mcc.c: 42:     OSCEN = 0x00;
 10388  0FDD  019D               	clrf	29	;volatile
 10389  0FDE                     l2938:
 10390                           
 10391                           ;mcc.c: 44:     OSCFRQ = 0x04;
 10392  0FDE  3004               	movlw	4
 10393  0FDF  009F               	movwf	31	;volatile
 10394  0FE0                     l2940:
 10395                           
 10396                           ;mcc.c: 46:     OSCTUNE = 0x00;
 10397  0FE0  019E               	clrf	30	;volatile
 10398  0FE1                     l233:	
 10399                           ;mcc.c: 49:     {;mcc.c: 50:     }
 10400                           
 10401                           
 10402                           ;mcc.c: 48:     while(PLLR == 0)
 10403  0FE1  1C1C               	btfss	28,0	;volatile
 10404  0FE2  2FE4               	goto	u561
 10405  0FE3  2FE5               	goto	u560
 10406  0FE4                     u561:
 10407  0FE4  2FE1               	goto	l233
 10408  0FE5                     u560:
 10409  0FE5                     l236:
 10410  0FE5  0008               	return
 10411  0FE6                     __end_of_OSCILLATOR_Initialize:
 10412                           
 10413                           	psect	text25
 10414  046A                     __ptext25:	
 10415 ;; *************** function _EUSART_Initialize *****************
 10416 ;; Defined at:
 10417 ;;		line 45 in file "eusart.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;		None
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;		None
 10422 ;; Return value:  Size  Location     Type
 10423 ;;                  1    wreg      void 
 10424 ;; Registers used:
 10425 ;;		wreg, status,2, status,0, pclath, cstack
 10426 ;; Tracked objects:
 10427 ;;		On entry : 0/0
 10428 ;;		On exit  : 0/0
 10429 ;;		Unchanged: 0/0
 10430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10433 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10434 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10435 ;;Total ram usage:        1 bytes
 10436 ;; Hardware stack levels used: 1
 10437 ;; Hardware stack levels required when called: 5
 10438 ;; This function calls:
 10439 ;;		_EUSART_SetErrorHandler
 10440 ;;		_EUSART_SetFramingErrorHandler
 10441 ;;		_EUSART_SetOverrunErrorHandler
 10442 ;;		_EUSART_SetRxInterruptHandler
 10443 ;;		_EUSART_SetTxInterruptHandler
 10444 ;; This function is called by:
 10445 ;;		_SYSTEM_Initialize
 10446 ;; This function uses a non-reentrant model
 10447 ;;
 10448                           
 10449  046A                     _EUSART_Initialize:	
 10450                           ;psect for function _EUSART_Initialize
 10451                           
 10452  046A                     l3046:	
 10453                           ;incstack = 0
 10454                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10455                           
 10456                           
 10457                           ;eusart.c: 48:     PIE1bits.RCIE = 0;
 10458  046A  0021               	movlb	1	; select bank1
 10459  046B  1291               	bcf	17,5	;volatile
 10460  046C                     l3048:
 10461                           
 10462                           ;eusart.c: 49:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 10463  046C  30EA               	movlw	low _EUSART_Receive_ISR
 10464  046D  0020               	movlb	0	; select bank0
 10465  046E  00CA               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 10466  046F  3004               	movlw	high _EUSART_Receive_ISR
 10467  0470  00CB               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 10468  0471  318F  275D  3184   	fcall	_EUSART_SetRxInterruptHandler
 10469  0474                     l3050:
 10470                           
 10471                           ;eusart.c: 50:     PIE1bits.TXIE = 0;
 10472  0474  0021               	movlb	1	; select bank1
 10473  0475  1211               	bcf	17,4	;volatile
 10474                           
 10475                           ;eusart.c: 51:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
 10476  0476  3064               	movlw	low _EUSART_Transmit_ISR
 10477  0477  0020               	movlb	0	; select bank0
 10478  0478  00CA               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 10479  0479  3006               	movlw	high _EUSART_Transmit_ISR
 10480  047A  00CB               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 10481  047B  318F  2763  3184   	fcall	_EUSART_SetTxInterruptHandler
 10482  047E                     l3052:
 10483                           
 10484                           ;eusart.c: 55:     BAUD1CON = 0x08;
 10485  047E  3008               	movlw	8
 10486  047F  0023               	movlb	3	; select bank3
 10487  0480  009F               	movwf	31	;volatile
 10488  0481                     l3054:
 10489                           
 10490                           ;eusart.c: 58:     RC1STA = 0x90;
 10491  0481  3090               	movlw	144
 10492  0482  009D               	movwf	29	;volatile
 10493  0483                     l3056:
 10494                           
 10495                           ;eusart.c: 61:     TX1STA = 0x24;
 10496  0483  3024               	movlw	36
 10497  0484  009E               	movwf	30	;volatile
 10498  0485                     l3058:
 10499                           
 10500                           ;eusart.c: 64:     SP1BRGL = 0xA0;
 10501  0485  30A0               	movlw	160
 10502  0486  009B               	movwf	27	;volatile
 10503  0487                     l3060:
 10504                           
 10505                           ;eusart.c: 67:     SP1BRGH = 0x01;
 10506  0487  3001               	movlw	1
 10507  0488  009C               	movwf	28	;volatile
 10508  0489                     l3062:
 10509                           
 10510                           ;eusart.c: 70:     EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
 10511  0489  3003               	movlw	low _EUSART_DefaultFramingErrorHandler
 10512  048A  0020               	movlb	0	; select bank0
 10513  048B  00CA               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 10514  048C  3000               	movlw	high _EUSART_DefaultFramingErrorHandler
 10515  048D  00CB               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 10516  048E  318F  2751  3184   	fcall	_EUSART_SetFramingErrorHandler
 10517  0491                     l3064:
 10518                           
 10519                           ;eusart.c: 71:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
 10520  0491  302D               	movlw	low _EUSART_DefaultOverrunErrorHandler
 10521  0492  0020               	movlb	0	; select bank0
 10522  0493  00CA               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 10523  0494  300F               	movlw	high _EUSART_DefaultOverrunErrorHandler
 10524  0495  00CB               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 10525  0496  318F  2757  3184   	fcall	_EUSART_SetOverrunErrorHandler
 10526  0499                     l3066:
 10527                           
 10528                           ;eusart.c: 72:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
 10529  0499  3029               	movlw	low _EUSART_DefaultErrorHandler
 10530  049A  0020               	movlb	0	; select bank0
 10531  049B  00CA               	movwf	EUSART_SetErrorHandler@interruptHandler
 10532  049C  300F               	movlw	high _EUSART_DefaultErrorHandler
 10533  049D  00CB               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 10534  049E  318F  278D  3184   	fcall	_EUSART_SetErrorHandler
 10535  04A1                     l3068:
 10536                           
 10537                           ;eusart.c: 74:     eusartRxLastError.status = 0;
 10538  04A1  0020               	movlb	0	; select bank0
 10539  04A2  01BF               	clrf	_eusartRxLastError	;volatile
 10540  04A3                     l3070:
 10541                           
 10542                           ;eusart.c: 77:     eusartTxHead = 0;
 10543  04A3  01C4               	clrf	_eusartTxHead	;volatile
 10544  04A4                     l3072:
 10545                           
 10546                           ;eusart.c: 78:     eusartTxTail = 0;
 10547  04A4  01C3               	clrf	_eusartTxTail	;volatile
 10548  04A5                     l3074:
 10549                           
 10550                           ;eusart.c: 79:     eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 10551  04A5  3008               	movlw	8
 10552  04A6  00CC               	movwf	??_EUSART_Initialize
 10553  04A7  084C               	movf	??_EUSART_Initialize,w
 10554  04A8  00C2               	movwf	_eusartTxBufferRemaining	;volatile
 10555                           
 10556                           ;eusart.c: 81:     eusartRxHead = 0;
 10557  04A9  01C1               	clrf	_eusartRxHead	;volatile
 10558                           
 10559                           ;eusart.c: 82:     eusartRxTail = 0;
 10560  04AA  01FA               	clrf	_eusartRxTail	;volatile
 10561                           
 10562                           ;eusart.c: 83:     eusartRxCount = 0;
 10563  04AB  01C0               	clrf	_eusartRxCount	;volatile
 10564  04AC                     l3076:
 10565                           
 10566                           ;eusart.c: 86:     PIE1bits.RCIE = 1;
 10567  04AC  0021               	movlb	1	; select bank1
 10568  04AD  1691               	bsf	17,5	;volatile
 10569  04AE                     l556:
 10570  04AE  0008               	return
 10571  04AF                     __end_of_EUSART_Initialize:
 10572                           
 10573                           	psect	text26
 10574  0F63                     __ptext26:	
 10575 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 10576 ;; Defined at:
 10577 ;;		line 278 in file "eusart.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10580 ;;		 -> EUSART_Transmit_ISR(1), 
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;		None
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  1    wreg      void 
 10585 ;; Registers used:
 10586 ;;		wreg
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10592 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10595 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10596 ;;Total ram usage:        2 bytes
 10597 ;; Hardware stack levels used: 1
 10598 ;; Hardware stack levels required when called: 4
 10599 ;; This function calls:
 10600 ;;		Nothing
 10601 ;; This function is called by:
 10602 ;;		_EUSART_Initialize
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606  0F63                     _EUSART_SetTxInterruptHandler:	
 10607                           ;psect for function _EUSART_SetTxInterruptHandler
 10608                           
 10609  0F63                     l2774:	
 10610                           ;incstack = 0
 10611                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 10612                           
 10613                           
 10614                           ;eusart.c: 279:     EUSART_TxDefaultInterruptHandler = interruptHandler;
 10615  0F63  0020               	movlb	0	; select bank0
 10616  0F64  084B               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 10617  0F65  00A9               	movwf	_EUSART_TxDefaultInterruptHandler+1
 10618  0F66  084A               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 10619  0F67  00A8               	movwf	_EUSART_TxDefaultInterruptHandler
 10620  0F68                     l628:
 10621  0F68  0008               	return
 10622  0F69                     __end_of_EUSART_SetTxInterruptHandler:
 10623                           
 10624                           	psect	text27
 10625  0F5D                     __ptext27:	
 10626 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 10627 ;; Defined at:
 10628 ;;		line 284 in file "eusart.c"
 10629 ;; Parameters:    Size  Location     Type
 10630 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10631 ;;		 -> EUSART_Receive_ISR(1), 
 10632 ;; Auto vars:     Size  Location     Type
 10633 ;;		None
 10634 ;; Return value:  Size  Location     Type
 10635 ;;                  1    wreg      void 
 10636 ;; Registers used:
 10637 ;;		wreg
 10638 ;; Tracked objects:
 10639 ;;		On entry : 0/0
 10640 ;;		On exit  : 0/0
 10641 ;;		Unchanged: 0/0
 10642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10643 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10646 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10647 ;;Total ram usage:        2 bytes
 10648 ;; Hardware stack levels used: 1
 10649 ;; Hardware stack levels required when called: 4
 10650 ;; This function calls:
 10651 ;;		Nothing
 10652 ;; This function is called by:
 10653 ;;		_EUSART_Initialize
 10654 ;; This function uses a non-reentrant model
 10655 ;;
 10656                           
 10657  0F5D                     _EUSART_SetRxInterruptHandler:	
 10658                           ;psect for function _EUSART_SetRxInterruptHandler
 10659                           
 10660  0F5D                     l2772:	
 10661                           ;incstack = 0
 10662                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 10663                           
 10664                           
 10665                           ;eusart.c: 285:     EUSART_RxDefaultInterruptHandler = interruptHandler;
 10666  0F5D  0020               	movlb	0	; select bank0
 10667  0F5E  084B               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 10668  0F5F  00A7               	movwf	_EUSART_RxDefaultInterruptHandler+1
 10669  0F60  084A               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 10670  0F61  00A6               	movwf	_EUSART_RxDefaultInterruptHandler
 10671  0F62                     l631:
 10672  0F62  0008               	return
 10673  0F63                     __end_of_EUSART_SetRxInterruptHandler:
 10674                           
 10675                           	psect	text28
 10676  0F57                     __ptext28:	
 10677 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 10678 ;; Defined at:
 10679 ;;		line 266 in file "eusart.c"
 10680 ;; Parameters:    Size  Location     Type
 10681 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10682 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 10683 ;; Auto vars:     Size  Location     Type
 10684 ;;		None
 10685 ;; Return value:  Size  Location     Type
 10686 ;;                  1    wreg      void 
 10687 ;; Registers used:
 10688 ;;		wreg
 10689 ;; Tracked objects:
 10690 ;;		On entry : 0/0
 10691 ;;		On exit  : 0/0
 10692 ;;		Unchanged: 0/0
 10693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10694 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10697 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10698 ;;Total ram usage:        2 bytes
 10699 ;; Hardware stack levels used: 1
 10700 ;; Hardware stack levels required when called: 4
 10701 ;; This function calls:
 10702 ;;		Nothing
 10703 ;; This function is called by:
 10704 ;;		_EUSART_Initialize
 10705 ;; This function uses a non-reentrant model
 10706 ;;
 10707                           
 10708  0F57                     _EUSART_SetOverrunErrorHandler:	
 10709                           ;psect for function _EUSART_SetOverrunErrorHandler
 10710                           
 10711  0F57                     l2778:	
 10712                           ;incstack = 0
 10713                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 10714                           
 10715                           
 10716                           ;eusart.c: 267:     EUSART_OverrunErrorHandler = interruptHandler;
 10717  0F57  0020               	movlb	0	; select bank0
 10718  0F58  084B               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 10719  0F59  00A3               	movwf	_EUSART_OverrunErrorHandler+1
 10720  0F5A  084A               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 10721  0F5B  00A2               	movwf	_EUSART_OverrunErrorHandler
 10722  0F5C                     l622:
 10723  0F5C  0008               	return
 10724  0F5D                     __end_of_EUSART_SetOverrunErrorHandler:
 10725                           
 10726                           	psect	text29
 10727  0F51                     __ptext29:	
 10728 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 10729 ;; Defined at:
 10730 ;;		line 260 in file "eusart.c"
 10731 ;; Parameters:    Size  Location     Type
 10732 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10733 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;		None
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  1    wreg      void 
 10738 ;; Registers used:
 10739 ;;		wreg
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10745 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10748 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10749 ;;Total ram usage:        2 bytes
 10750 ;; Hardware stack levels used: 1
 10751 ;; Hardware stack levels required when called: 4
 10752 ;; This function calls:
 10753 ;;		Nothing
 10754 ;; This function is called by:
 10755 ;;		_EUSART_Initialize
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759  0F51                     _EUSART_SetFramingErrorHandler:	
 10760                           ;psect for function _EUSART_SetFramingErrorHandler
 10761                           
 10762  0F51                     l2776:	
 10763                           ;incstack = 0
 10764                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 10765                           
 10766                           
 10767                           ;eusart.c: 261:     EUSART_FramingErrorHandler = interruptHandler;
 10768  0F51  0020               	movlb	0	; select bank0
 10769  0F52  084B               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 10770  0F53  00A5               	movwf	_EUSART_FramingErrorHandler+1
 10771  0F54  084A               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 10772  0F55  00A4               	movwf	_EUSART_FramingErrorHandler
 10773  0F56                     l619:
 10774  0F56  0008               	return
 10775  0F57                     __end_of_EUSART_SetFramingErrorHandler:
 10776                           
 10777                           	psect	text30
 10778  0F8D                     __ptext30:	
 10779 ;; *************** function _EUSART_SetErrorHandler *****************
 10780 ;; Defined at:
 10781 ;;		line 272 in file "eusart.c"
 10782 ;; Parameters:    Size  Location     Type
 10783 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10784 ;;		 -> EUSART_DefaultErrorHandler(1), 
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;		None
 10787 ;; Return value:  Size  Location     Type
 10788 ;;                  1    wreg      void 
 10789 ;; Registers used:
 10790 ;;		wreg
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10796 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;Total ram usage:        2 bytes
 10801 ;; Hardware stack levels used: 1
 10802 ;; Hardware stack levels required when called: 4
 10803 ;; This function calls:
 10804 ;;		Nothing
 10805 ;; This function is called by:
 10806 ;;		_EUSART_Initialize
 10807 ;; This function uses a non-reentrant model
 10808 ;;
 10809                           
 10810  0F8D                     _EUSART_SetErrorHandler:	
 10811                           ;psect for function _EUSART_SetErrorHandler
 10812                           
 10813  0F8D                     l2780:	
 10814                           ;incstack = 0
 10815                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 10816                           
 10817                           
 10818                           ;eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
 10819  0F8D  0020               	movlb	0	; select bank0
 10820  0F8E  084B               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 10821  0F8F  0021               	movlb	1	; select bank1
 10822  0F90  00DD               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
 10823  0F91  0020               	movlb	0	; select bank0
 10824  0F92  084A               	movf	EUSART_SetErrorHandler@interruptHandler,w
 10825  0F93  0021               	movlb	1	; select bank1
 10826  0F94  00DC               	movwf	_EUSART_ErrorHandler^(0+128)
 10827  0F95                     l625:
 10828  0F95  0008               	return
 10829  0F96                     __end_of_EUSART_SetErrorHandler:
 10830                           
 10831                           	psect	text31
 10832  07B6                     __ptext31:	
 10833 ;; *************** function _CCP4_Initialize *****************
 10834 ;; Defined at:
 10835 ;;		line 18 in file "ccp4.c"
 10836 ;; Parameters:    Size  Location     Type
 10837 ;;		None
 10838 ;; Auto vars:     Size  Location     Type
 10839 ;;		None
 10840 ;; Return value:  Size  Location     Type
 10841 ;;                  1    wreg      void 
 10842 ;; Registers used:
 10843 ;;		wreg, status,2, status,0
 10844 ;; Tracked objects:
 10845 ;;		On entry : 0/0
 10846 ;;		On exit  : 0/0
 10847 ;;		Unchanged: 0/0
 10848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10853 ;;Total ram usage:        0 bytes
 10854 ;; Hardware stack levels used: 1
 10855 ;; Hardware stack levels required when called: 4
 10856 ;; This function calls:
 10857 ;;		Nothing
 10858 ;; This function is called by:
 10859 ;;		_SYSTEM_Initialize
 10860 ;; This function uses a non-reentrant model
 10861 ;;
 10862                           
 10863  07B6                     _CCP4_Initialize:	
 10864                           ;psect for function _CCP4_Initialize
 10865                           
 10866  07B6                     l3014:	
 10867                           ;incstack = 0
 10868                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0]
 10869                           
 10870                           
 10871                           ;ccp4.c: 21:  CCP4CON = 0x81;
 10872  07B6  3081               	movlw	129
 10873  07B7  0026               	movlb	6	; select bank6
 10874  07B8  0097               	movwf	23	;volatile
 10875                           
 10876                           ;ccp4.c: 24:  CCPR4H = 0x11;
 10877  07B9  3011               	movlw	17
 10878  07BA  0096               	movwf	22	;volatile
 10879                           
 10880                           ;ccp4.c: 25:  CCPR4L = 0xC1;
 10881  07BB  30C1               	movlw	193
 10882  07BC  0095               	movwf	21	;volatile
 10883  07BD                     l3016:
 10884                           
 10885                           ;ccp4.c: 28:  CCPTMRSbits.C4TSEL = 0x2;
 10886  07BD  0025               	movlb	5	; select bank5
 10887  07BE  081F               	movf	31,w	;volatile
 10888  07BF  393F               	andlw	-193
 10889  07C0  3880               	iorlw	128
 10890  07C1  009F               	movwf	31	;volatile
 10891  07C2                     l3018:
 10892                           
 10893                           ;ccp4.c: 31:     PIR4bits.CCP4IF = 0;
 10894  07C2  0020               	movlb	0	; select bank0
 10895  07C3  1194               	bcf	20,3	;volatile
 10896  07C4                     l3020:
 10897                           
 10898                           ;ccp4.c: 34:     PIE4bits.CCP4IE = 1;
 10899  07C4  0021               	movlb	1	; select bank1
 10900  07C5  1594               	bsf	20,3	;volatile
 10901  07C6                     l879:
 10902  07C6  0008               	return
 10903  07C7                     __end_of_CCP4_Initialize:
 10904                           
 10905                           	psect	text32
 10906  06F2                     __ptext32:	
 10907 ;; *************** function _CCP3_Initialize *****************
 10908 ;; Defined at:
 10909 ;;		line 49 in file "ccp3.c"
 10910 ;; Parameters:    Size  Location     Type
 10911 ;;		None
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;		None
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  1    wreg      void 
 10916 ;; Registers used:
 10917 ;;		wreg, status,2, status,0, pclath, cstack
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/0
 10920 ;;		On exit  : 0/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10927 ;;Total ram usage:        0 bytes
 10928 ;; Hardware stack levels used: 1
 10929 ;; Hardware stack levels required when called: 5
 10930 ;; This function calls:
 10931 ;;		_CCP3_SetCallBack
 10932 ;; This function is called by:
 10933 ;;		_SYSTEM_Initialize
 10934 ;; This function uses a non-reentrant model
 10935 ;;
 10936                           
 10937  06F2                     _CCP3_Initialize:	
 10938                           ;psect for function _CCP3_Initialize
 10939                           
 10940  06F2                     l2944:	
 10941                           ;incstack = 0
 10942                           ; Regs used in _CCP3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10943                           
 10944                           
 10945                           ;ccp3.c: 52:  CCP3CON = 0x83;
 10946  06F2  3083               	movlw	131
 10947  06F3  0026               	movlb	6	; select bank6
 10948  06F4  0093               	movwf	19	;volatile
 10949  06F5                     l2946:
 10950                           
 10951                           ;ccp3.c: 55:  CCP3CAP = 0x00;
 10952  06F5  0194               	clrf	20	;volatile
 10953  06F6                     l2948:
 10954                           
 10955                           ;ccp3.c: 58:  CCPR3H = 0x00;
 10956  06F6  0192               	clrf	18	;volatile
 10957  06F7                     l2950:
 10958                           
 10959                           ;ccp3.c: 61:  CCPR3L = 0x00;
 10960  06F7  0191               	clrf	17	;volatile
 10961  06F8                     l2952:
 10962                           
 10963                           ;ccp3.c: 64:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 10964  06F8  305F               	movlw	low _CCP3_DefaultCallBack
 10965  06F9  0020               	movlb	0	; select bank0
 10966  06FA  00CA               	movwf	CCP3_SetCallBack@customCallBack
 10967  06FB  3005               	movlw	high _CCP3_DefaultCallBack
 10968  06FC  00CB               	movwf	CCP3_SetCallBack@customCallBack+1
 10969  06FD  318F  274B  3186   	fcall	_CCP3_SetCallBack
 10970  0700                     l2954:
 10971                           
 10972                           ;ccp3.c: 67:  CCPTMRSbits.C3TSEL = 0x1;
 10973  0700  0025               	movlb	5	; select bank5
 10974  0701  081F               	movf	31,w	;volatile
 10975  0702  39CF               	andlw	-49
 10976  0703  3810               	iorlw	16
 10977  0704  009F               	movwf	31	;volatile
 10978  0705                     l2956:
 10979                           
 10980                           ;ccp3.c: 70:     PIR4bits.CCP3IF = 0;
 10981  0705  0020               	movlb	0	; select bank0
 10982  0706  1114               	bcf	20,2	;volatile
 10983  0707                     l2958:
 10984                           
 10985                           ;ccp3.c: 73:     PIE4bits.CCP3IE = 1;
 10986  0707  0021               	movlb	1	; select bank1
 10987  0708  1514               	bsf	20,2	;volatile
 10988  0709                     l436:
 10989  0709  0008               	return
 10990  070A                     __end_of_CCP3_Initialize:
 10991                           
 10992                           	psect	text33
 10993  0F4B                     __ptext33:	
 10994 ;; *************** function _CCP3_SetCallBack *****************
 10995 ;; Defined at:
 10996 ;;		line 95 in file "ccp3.c"
 10997 ;; Parameters:    Size  Location     Type
 10998 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10999 ;;		 -> CCP3_DefaultCallBack(1), 
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;		None
 11002 ;; Return value:  Size  Location     Type
 11003 ;;                  1    wreg      void 
 11004 ;; Registers used:
 11005 ;;		wreg
 11006 ;; Tracked objects:
 11007 ;;		On entry : 0/0
 11008 ;;		On exit  : 0/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11011 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11014 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11015 ;;Total ram usage:        2 bytes
 11016 ;; Hardware stack levels used: 1
 11017 ;; Hardware stack levels required when called: 4
 11018 ;; This function calls:
 11019 ;;		Nothing
 11020 ;; This function is called by:
 11021 ;;		_CCP3_Initialize
 11022 ;; This function uses a non-reentrant model
 11023 ;;
 11024                           
 11025  0F4B                     _CCP3_SetCallBack:	
 11026                           ;psect for function _CCP3_SetCallBack
 11027                           
 11028  0F4B                     l2770:	
 11029                           ;incstack = 0
 11030                           ; Regs used in _CCP3_SetCallBack: [wreg]
 11031                           
 11032                           
 11033                           ;ccp3.c: 96:     CCP3_CallBack = customCallBack;
 11034  0F4B  0020               	movlb	0	; select bank0
 11035  0F4C  084B               	movf	CCP3_SetCallBack@customCallBack+1,w
 11036  0F4D  00B1               	movwf	_CCP3_CallBack+1
 11037  0F4E  084A               	movf	CCP3_SetCallBack@customCallBack,w
 11038  0F4F  00B0               	movwf	_CCP3_CallBack
 11039  0F50                     l442:
 11040  0F50  0008               	return
 11041  0F51                     __end_of_CCP3_SetCallBack:
 11042                           
 11043                           	psect	text34
 11044  070A                     __ptext34:	
 11045 ;; *************** function _CCP2_Initialize *****************
 11046 ;; Defined at:
 11047 ;;		line 49 in file "ccp2.c"
 11048 ;; Parameters:    Size  Location     Type
 11049 ;;		None
 11050 ;; Auto vars:     Size  Location     Type
 11051 ;;		None
 11052 ;; Return value:  Size  Location     Type
 11053 ;;                  1    wreg      void 
 11054 ;; Registers used:
 11055 ;;		wreg, status,2, status,0, pclath, cstack
 11056 ;; Tracked objects:
 11057 ;;		On entry : 0/0
 11058 ;;		On exit  : 0/0
 11059 ;;		Unchanged: 0/0
 11060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11065 ;;Total ram usage:        0 bytes
 11066 ;; Hardware stack levels used: 1
 11067 ;; Hardware stack levels required when called: 5
 11068 ;; This function calls:
 11069 ;;		_CCP2_SetCallBack
 11070 ;; This function is called by:
 11071 ;;		_SYSTEM_Initialize
 11072 ;; This function uses a non-reentrant model
 11073 ;;
 11074                           
 11075  070A                     _CCP2_Initialize:	
 11076                           ;psect for function _CCP2_Initialize
 11077                           
 11078  070A                     l2998:	
 11079                           ;incstack = 0
 11080                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11081                           
 11082                           
 11083                           ;ccp2.c: 52:  CCP2CON = 0x83;
 11084  070A  3083               	movlw	131
 11085  070B  0025               	movlb	5	; select bank5
 11086  070C  0097               	movwf	23	;volatile
 11087  070D                     l3000:
 11088                           
 11089                           ;ccp2.c: 55:  CCP2CAP = 0x00;
 11090  070D  0198               	clrf	24	;volatile
 11091  070E                     l3002:
 11092                           
 11093                           ;ccp2.c: 58:  CCPR2H = 0x00;
 11094  070E  0196               	clrf	22	;volatile
 11095  070F                     l3004:
 11096                           
 11097                           ;ccp2.c: 61:  CCPR2L = 0x00;
 11098  070F  0195               	clrf	21	;volatile
 11099  0710                     l3006:
 11100                           
 11101                           ;ccp2.c: 64:     CCP2_SetCallBack(CCP2_DefaultCallBack);
 11102  0710  3097               	movlw	low _CCP2_DefaultCallBack
 11103  0711  0020               	movlb	0	; select bank0
 11104  0712  00CA               	movwf	CCP2_SetCallBack@customCallBack
 11105  0713  3005               	movlw	high _CCP2_DefaultCallBack
 11106  0714  00CB               	movwf	CCP2_SetCallBack@customCallBack+1
 11107  0715  318F  2745  3187   	fcall	_CCP2_SetCallBack
 11108  0718                     l3008:
 11109                           
 11110                           ;ccp2.c: 67:  CCPTMRSbits.C2TSEL = 0x1;
 11111  0718  0025               	movlb	5	; select bank5
 11112  0719  081F               	movf	31,w	;volatile
 11113  071A  39F3               	andlw	-13
 11114  071B  3804               	iorlw	4
 11115  071C  009F               	movwf	31	;volatile
 11116  071D                     l3010:
 11117                           
 11118                           ;ccp2.c: 70:     PIR4bits.CCP2IF = 0;
 11119  071D  0020               	movlb	0	; select bank0
 11120  071E  1094               	bcf	20,1	;volatile
 11121  071F                     l3012:
 11122                           
 11123                           ;ccp2.c: 73:     PIE4bits.CCP2IE = 1;
 11124  071F  0021               	movlb	1	; select bank1
 11125  0720  1494               	bsf	20,1	;volatile
 11126  0721                     l390:
 11127  0721  0008               	return
 11128  0722                     __end_of_CCP2_Initialize:
 11129                           
 11130                           	psect	text35
 11131  0F45                     __ptext35:	
 11132 ;; *************** function _CCP2_SetCallBack *****************
 11133 ;; Defined at:
 11134 ;;		line 95 in file "ccp2.c"
 11135 ;; Parameters:    Size  Location     Type
 11136 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 11137 ;;		 -> CCP2_DefaultCallBack(1), 
 11138 ;; Auto vars:     Size  Location     Type
 11139 ;;		None
 11140 ;; Return value:  Size  Location     Type
 11141 ;;                  1    wreg      void 
 11142 ;; Registers used:
 11143 ;;		wreg
 11144 ;; Tracked objects:
 11145 ;;		On entry : 0/0
 11146 ;;		On exit  : 0/0
 11147 ;;		Unchanged: 0/0
 11148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11149 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11152 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11153 ;;Total ram usage:        2 bytes
 11154 ;; Hardware stack levels used: 1
 11155 ;; Hardware stack levels required when called: 4
 11156 ;; This function calls:
 11157 ;;		Nothing
 11158 ;; This function is called by:
 11159 ;;		_CCP2_Initialize
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           
 11163  0F45                     _CCP2_SetCallBack:	
 11164                           ;psect for function _CCP2_SetCallBack
 11165                           
 11166  0F45                     l2768:	
 11167                           ;incstack = 0
 11168                           ; Regs used in _CCP2_SetCallBack: [wreg]
 11169                           
 11170                           
 11171                           ;ccp2.c: 96:     CCP2_CallBack = customCallBack;
 11172  0F45  0020               	movlb	0	; select bank0
 11173  0F46  084B               	movf	CCP2_SetCallBack@customCallBack+1,w
 11174  0F47  00B7               	movwf	_CCP2_CallBack+1
 11175  0F48  084A               	movf	CCP2_SetCallBack@customCallBack,w
 11176  0F49  00B6               	movwf	_CCP2_CallBack
 11177  0F4A                     l396:
 11178  0F4A  0008               	return
 11179  0F4B                     __end_of_CCP2_SetCallBack:
 11180                           
 11181                           	psect	text36
 11182  0722                     __ptext36:	
 11183 ;; *************** function _CCP1_Initialize *****************
 11184 ;; Defined at:
 11185 ;;		line 49 in file "ccp1.c"
 11186 ;; Parameters:    Size  Location     Type
 11187 ;;		None
 11188 ;; Auto vars:     Size  Location     Type
 11189 ;;		None
 11190 ;; Return value:  Size  Location     Type
 11191 ;;                  1    wreg      void 
 11192 ;; Registers used:
 11193 ;;		wreg, status,2, status,0, pclath, cstack
 11194 ;; Tracked objects:
 11195 ;;		On entry : 0/0
 11196 ;;		On exit  : 0/0
 11197 ;;		Unchanged: 0/0
 11198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11203 ;;Total ram usage:        0 bytes
 11204 ;; Hardware stack levels used: 1
 11205 ;; Hardware stack levels required when called: 5
 11206 ;; This function calls:
 11207 ;;		_CCP1_SetCallBack
 11208 ;; This function is called by:
 11209 ;;		_SYSTEM_Initialize
 11210 ;; This function uses a non-reentrant model
 11211 ;;
 11212                           
 11213  0722                     _CCP1_Initialize:	
 11214                           ;psect for function _CCP1_Initialize
 11215                           
 11216  0722                     l2960:	
 11217                           ;incstack = 0
 11218                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11219                           
 11220                           
 11221                           ;ccp1.c: 52:  CCP1CON = 0x83;
 11222  0722  3083               	movlw	131
 11223  0723  0025               	movlb	5	; select bank5
 11224  0724  0093               	movwf	19	;volatile
 11225  0725                     l2962:
 11226                           
 11227                           ;ccp1.c: 55:  CCP1CAP = 0x00;
 11228  0725  0194               	clrf	20	;volatile
 11229  0726                     l2964:
 11230                           
 11231                           ;ccp1.c: 58:  CCPR1H = 0x00;
 11232  0726  0192               	clrf	18	;volatile
 11233  0727                     l2966:
 11234                           
 11235                           ;ccp1.c: 61:  CCPR1L = 0x00;
 11236  0727  0191               	clrf	17	;volatile
 11237  0728                     l2968:
 11238                           
 11239                           ;ccp1.c: 64:     CCP1_SetCallBack(CCP1_DefaultCallBack);
 11240  0728  30CF               	movlw	low _CCP1_DefaultCallBack
 11241  0729  0020               	movlb	0	; select bank0
 11242  072A  00CA               	movwf	CCP1_SetCallBack@customCallBack
 11243  072B  3005               	movlw	high _CCP1_DefaultCallBack
 11244  072C  00CB               	movwf	CCP1_SetCallBack@customCallBack+1
 11245  072D  318F  273F  3187   	fcall	_CCP1_SetCallBack
 11246  0730                     l2970:
 11247                           
 11248                           ;ccp1.c: 67:  CCPTMRSbits.C1TSEL = 0x1;
 11249  0730  0025               	movlb	5	; select bank5
 11250  0731  081F               	movf	31,w	;volatile
 11251  0732  39FC               	andlw	-4
 11252  0733  3801               	iorlw	1
 11253  0734  009F               	movwf	31	;volatile
 11254  0735                     l2972:
 11255                           
 11256                           ;ccp1.c: 70:     PIR4bits.CCP1IF = 0;
 11257  0735  0020               	movlb	0	; select bank0
 11258  0736  1014               	bcf	20,0	;volatile
 11259  0737                     l2974:
 11260                           
 11261                           ;ccp1.c: 73:     PIE4bits.CCP1IE = 1;
 11262  0737  0021               	movlb	1	; select bank1
 11263  0738  1414               	bsf	20,0	;volatile
 11264  0739                     l344:
 11265  0739  0008               	return
 11266  073A                     __end_of_CCP1_Initialize:
 11267                           
 11268                           	psect	text37
 11269  0F3F                     __ptext37:	
 11270 ;; *************** function _CCP1_SetCallBack *****************
 11271 ;; Defined at:
 11272 ;;		line 95 in file "ccp1.c"
 11273 ;; Parameters:    Size  Location     Type
 11274 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 11275 ;;		 -> CCP1_DefaultCallBack(1), 
 11276 ;; Auto vars:     Size  Location     Type
 11277 ;;		None
 11278 ;; Return value:  Size  Location     Type
 11279 ;;                  1    wreg      void 
 11280 ;; Registers used:
 11281 ;;		wreg
 11282 ;; Tracked objects:
 11283 ;;		On entry : 0/0
 11284 ;;		On exit  : 0/0
 11285 ;;		Unchanged: 0/0
 11286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11287 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11290 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11291 ;;Total ram usage:        2 bytes
 11292 ;; Hardware stack levels used: 1
 11293 ;; Hardware stack levels required when called: 4
 11294 ;; This function calls:
 11295 ;;		Nothing
 11296 ;; This function is called by:
 11297 ;;		_CCP1_Initialize
 11298 ;; This function uses a non-reentrant model
 11299 ;;
 11300                           
 11301  0F3F                     _CCP1_SetCallBack:	
 11302                           ;psect for function _CCP1_SetCallBack
 11303                           
 11304  0F3F                     l2766:	
 11305                           ;incstack = 0
 11306                           ; Regs used in _CCP1_SetCallBack: [wreg]
 11307                           
 11308                           
 11309                           ;ccp1.c: 96:     CCP1_CallBack = customCallBack;
 11310  0F3F  0020               	movlb	0	; select bank0
 11311  0F40  084B               	movf	CCP1_SetCallBack@customCallBack+1,w
 11312  0F41  00BD               	movwf	_CCP1_CallBack+1
 11313  0F42  084A               	movf	CCP1_SetCallBack@customCallBack,w
 11314  0F43  00BC               	movwf	_CCP1_CallBack
 11315  0F44                     l350:
 11316  0F44  0008               	return
 11317  0F45                     __end_of_CCP1_SetCallBack:
 11318                           
 11319                           	psect	text38
 11320  03D7                     __ptext38:	
 11321 ;; *************** function _FRT_GetMicros *****************
 11322 ;; Defined at:
 11323 ;;		line 32 in file "FRT.c"
 11324 ;; Parameters:    Size  Location     Type
 11325 ;;		None
 11326 ;; Auto vars:     Size  Location     Type
 11327 ;;		None
 11328 ;; Return value:  Size  Location     Type
 11329 ;;                  4    6[BANK0 ] unsigned long 
 11330 ;; Registers used:
 11331 ;;		wreg, status,2, status,0, pclath, cstack
 11332 ;; Tracked objects:
 11333 ;;		On entry : 0/0
 11334 ;;		On exit  : 0/0
 11335 ;;		Unchanged: 0/0
 11336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11337 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11339 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11341 ;;Total ram usage:       18 bytes
 11342 ;; Hardware stack levels used: 1
 11343 ;; Hardware stack levels required when called: 5
 11344 ;; This function calls:
 11345 ;;		_TMR0_GetCallBackNum
 11346 ;;		_TMR0_ReadTimer
 11347 ;;		___wmul
 11348 ;; This function is called by:
 11349 ;;		_main
 11350 ;;		_JSN_Sensor_Trig
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354  03D7                     _FRT_GetMicros:	
 11355                           ;psect for function _FRT_GetMicros
 11356                           
 11357  03D7                     l3414:	
 11358                           ;incstack = 0
 11359                           ; Regs used in _FRT_GetMicros: [wreg+status,2+status,0+pclath+cstack]
 11360                           
 11361                           
 11362                           ;FRT.c: 33:     return (micros + (250*TMR0_GetCallBackNum()) + TMR0_ReadTimer());
 11363  03D7  0021               	movlb	1	; select bank1
 11364  03D8  084A               	movf	_micros@FRT$F1508^(0+128),w
 11365  03D9  0020               	movlb	0	; select bank0
 11366  03DA  00D4               	movwf	??_FRT_GetMicros
 11367  03DB  0021               	movlb	1	; select bank1
 11368  03DC  084B               	movf	(_micros@FRT$F1508+1)^(0+128),w
 11369  03DD  0020               	movlb	0	; select bank0
 11370  03DE  00D5               	movwf	??_FRT_GetMicros+1
 11371  03DF  0021               	movlb	1	; select bank1
 11372  03E0  084C               	movf	(_micros@FRT$F1508+2)^(0+128),w
 11373  03E1  0020               	movlb	0	; select bank0
 11374  03E2  00D6               	movwf	??_FRT_GetMicros+2
 11375  03E3  0021               	movlb	1	; select bank1
 11376  03E4  084D               	movf	(_micros@FRT$F1508+3)^(0+128),w
 11377  03E5  0020               	movlb	0	; select bank0
 11378  03E6  00D7               	movwf	??_FRT_GetMicros+3
 11379  03E7  318F  2776  3183   	fcall	_TMR0_ReadTimer
 11380  03EA  0020               	movlb	0	; select bank0
 11381  03EB  00D8               	movwf	??_FRT_GetMicros+4
 11382  03EC  01D9               	clrf	??_FRT_GetMicros+5
 11383  03ED  01DA               	clrf	??_FRT_GetMicros+6
 11384  03EE  01DB               	clrf	??_FRT_GetMicros+7
 11385  03EF  318F  2720  3183   	fcall	_TMR0_GetCallBackNum
 11386  03F2  0020               	movlb	0	; select bank0
 11387  03F3  00DC               	movwf	??_FRT_GetMicros+8
 11388  03F4  01DD               	clrf	??_FRT_GetMicros+9
 11389  03F5  085C               	movf	??_FRT_GetMicros+8,w
 11390  03F6  00CA               	movwf	___wmul@multiplier
 11391  03F7  085D               	movf	??_FRT_GetMicros+9,w
 11392  03F8  00CB               	movwf	___wmul@multiplier+1
 11393  03F9  30FA               	movlw	250
 11394  03FA  00CC               	movwf	___wmul@multiplicand
 11395  03FB  3000               	movlw	0
 11396  03FC  00CD               	movwf	___wmul@multiplicand+1
 11397  03FD  3186  2686  3183   	fcall	___wmul
 11398  0400  0020               	movlb	0	; select bank0
 11399  0401  084A               	movf	?___wmul,w
 11400  0402  00DE               	movwf	??_FRT_GetMicros+10
 11401  0403  084B               	movf	?___wmul+1,w
 11402  0404  00DF               	movwf	??_FRT_GetMicros+11
 11403  0405  3000               	movlw	0
 11404  0406  1BDF               	btfsc	??_FRT_GetMicros+11,7
 11405  0407  30FF               	movlw	255
 11406  0408  00E0               	movwf	??_FRT_GetMicros+12
 11407  0409  00E1               	movwf	??_FRT_GetMicros+13
 11408  040A  085E               	movf	??_FRT_GetMicros+10,w
 11409  040B  07D8               	addwf	??_FRT_GetMicros+4,f
 11410  040C  085F               	movf	??_FRT_GetMicros+11,w
 11411  040D  3DD9               	addwfc	??_FRT_GetMicros+5,f
 11412  040E  0860               	movf	??_FRT_GetMicros+12,w
 11413  040F  3DDA               	addwfc	??_FRT_GetMicros+6,f
 11414  0410  0861               	movf	??_FRT_GetMicros+13,w
 11415  0411  3DDB               	addwfc	??_FRT_GetMicros+7,f
 11416  0412  0858               	movf	??_FRT_GetMicros+4,w
 11417  0413  07D4               	addwf	??_FRT_GetMicros,f
 11418  0414  0859               	movf	??_FRT_GetMicros+5,w
 11419  0415  3DD5               	addwfc	??_FRT_GetMicros+1,f
 11420  0416  085A               	movf	??_FRT_GetMicros+6,w
 11421  0417  3DD6               	addwfc	??_FRT_GetMicros+2,f
 11422  0418  085B               	movf	??_FRT_GetMicros+7,w
 11423  0419  3DD7               	addwfc	??_FRT_GetMicros+3,f
 11424  041A  0857               	movf	??_FRT_GetMicros+3,w
 11425  041B  00D3               	movwf	?_FRT_GetMicros+3
 11426  041C  0856               	movf	??_FRT_GetMicros+2,w
 11427  041D  00D2               	movwf	?_FRT_GetMicros+2
 11428  041E  0855               	movf	??_FRT_GetMicros+1,w
 11429  041F  00D1               	movwf	?_FRT_GetMicros+1
 11430  0420  0854               	movf	??_FRT_GetMicros,w
 11431  0421  00D0               	movwf	?_FRT_GetMicros
 11432  0422                     l766:
 11433  0422  0008               	return
 11434  0423                     __end_of_FRT_GetMicros:
 11435                           
 11436                           	psect	text39
 11437  0686                     __ptext39:	
 11438 ;; *************** function ___wmul *****************
 11439 ;; Defined at:
 11440 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 11441 ;; Parameters:    Size  Location     Type
 11442 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11443 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11444 ;; Auto vars:     Size  Location     Type
 11445 ;;  product         2    4[BANK0 ] unsigned int 
 11446 ;; Return value:  Size  Location     Type
 11447 ;;                  2    0[BANK0 ] unsigned int 
 11448 ;; Registers used:
 11449 ;;		wreg, status,2, status,0
 11450 ;; Tracked objects:
 11451 ;;		On entry : 0/0
 11452 ;;		On exit  : 0/0
 11453 ;;		Unchanged: 0/0
 11454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11455 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11456 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11458 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11459 ;;Total ram usage:        6 bytes
 11460 ;; Hardware stack levels used: 1
 11461 ;; Hardware stack levels required when called: 4
 11462 ;; This function calls:
 11463 ;;		Nothing
 11464 ;; This function is called by:
 11465 ;;		_FRT_GetMicros
 11466 ;;		_MotorControl_SetIntensity
 11467 ;; This function uses a non-reentrant model
 11468 ;;
 11469                           
 11470  0686                     ___wmul:	
 11471                           ;psect for function ___wmul
 11472                           
 11473  0686                     l3374:	
 11474                           ;incstack = 0
 11475                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11476                           
 11477  0686  0020               	movlb	0	; select bank0
 11478  0687  01CE               	clrf	___wmul@product
 11479  0688  01CF               	clrf	___wmul@product+1
 11480  0689                     l3376:
 11481  0689  1C4A               	btfss	___wmul@multiplier,0
 11482  068A  2E8C               	goto	u601
 11483  068B  2E8D               	goto	u600
 11484  068C                     u601:
 11485  068C  2E91               	goto	l1133
 11486  068D                     u600:
 11487  068D                     l3378:
 11488  068D  084C               	movf	___wmul@multiplicand,w
 11489  068E  07CE               	addwf	___wmul@product,f
 11490  068F  084D               	movf	___wmul@multiplicand+1,w
 11491  0690  3DCF               	addwfc	___wmul@product+1,f
 11492  0691                     l1133:
 11493  0691  3001               	movlw	1
 11494  0692                     u615:
 11495  0692  35CC               	lslf	___wmul@multiplicand,f
 11496  0693  0DCD               	rlf	___wmul@multiplicand+1,f
 11497  0694  0B89               	decfsz	9,f
 11498  0695  2E92               	goto	u615
 11499  0696                     l3380:
 11500  0696  3001               	movlw	1
 11501  0697                     u625:
 11502  0697  36CB               	lsrf	___wmul@multiplier+1,f
 11503  0698  0CCA               	rrf	___wmul@multiplier,f
 11504  0699  0B89               	decfsz	9,f
 11505  069A  2E97               	goto	u625
 11506  069B                     l3382:
 11507  069B  084A               	movf	___wmul@multiplier,w
 11508  069C  044B               	iorwf	___wmul@multiplier+1,w
 11509  069D  1D03               	btfss	3,2
 11510  069E  2EA0               	goto	u631
 11511  069F  2EA1               	goto	u630
 11512  06A0                     u631:
 11513  06A0  2E89               	goto	l3376
 11514  06A1                     u630:
 11515  06A1                     l3384:
 11516  06A1  084F               	movf	___wmul@product+1,w
 11517  06A2  00CB               	movwf	?___wmul+1
 11518  06A3  084E               	movf	___wmul@product,w
 11519  06A4  00CA               	movwf	?___wmul
 11520  06A5                     l1135:
 11521  06A5  0008               	return
 11522  06A6                     __end_of___wmul:
 11523                           
 11524                           	psect	text40
 11525  0F76                     __ptext40:	
 11526 ;; *************** function _TMR0_ReadTimer *****************
 11527 ;; Defined at:
 11528 ;;		line 62 in file "tmr0.c"
 11529 ;; Parameters:    Size  Location     Type
 11530 ;;		None
 11531 ;; Auto vars:     Size  Location     Type
 11532 ;;  readVal         1    1[BANK0 ] unsigned char 
 11533 ;; Return value:  Size  Location     Type
 11534 ;;                  1    wreg      unsigned char 
 11535 ;; Registers used:
 11536 ;;		wreg
 11537 ;; Tracked objects:
 11538 ;;		On entry : 0/0
 11539 ;;		On exit  : 0/0
 11540 ;;		Unchanged: 0/0
 11541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11543 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11544 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11545 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11546 ;;Total ram usage:        2 bytes
 11547 ;; Hardware stack levels used: 1
 11548 ;; Hardware stack levels required when called: 4
 11549 ;; This function calls:
 11550 ;;		Nothing
 11551 ;; This function is called by:
 11552 ;;		_FRT_GetMicros
 11553 ;; This function uses a non-reentrant model
 11554 ;;
 11555                           
 11556  0F76                     _TMR0_ReadTimer:	
 11557                           ;psect for function _TMR0_ReadTimer
 11558                           
 11559  0F76                     l3286:	
 11560                           ;incstack = 0
 11561                           ; Regs used in _TMR0_ReadTimer: [wreg]
 11562                           
 11563                           
 11564                           ;tmr0.c: 64:     uint8_t readVal;;tmr0.c: 67:     readVal = TMR0L;
 11565  0F76  0020               	movlb	0	; select bank0
 11566  0F77  0815               	movf	21,w	;volatile
 11567  0F78  00CA               	movwf	??_TMR0_ReadTimer
 11568  0F79  084A               	movf	??_TMR0_ReadTimer,w
 11569  0F7A  00CB               	movwf	TMR0_ReadTimer@readVal
 11570                           
 11571                           ;tmr0.c: 69:     return readVal;
 11572  0F7B  084B               	movf	TMR0_ReadTimer@readVal,w
 11573  0F7C                     l282:
 11574  0F7C  0008               	return
 11575  0F7D                     __end_of_TMR0_ReadTimer:
 11576                           
 11577                           	psect	text41
 11578  0F20                     __ptext41:	
 11579 ;; *************** function _TMR0_GetCallBackNum *****************
 11580 ;; Defined at:
 11581 ;;		line 130 in file "tmr0.c"
 11582 ;; Parameters:    Size  Location     Type
 11583 ;;		None
 11584 ;; Auto vars:     Size  Location     Type
 11585 ;;		None
 11586 ;; Return value:  Size  Location     Type
 11587 ;;                  1    wreg      unsigned char 
 11588 ;; Registers used:
 11589 ;;		wreg
 11590 ;; Tracked objects:
 11591 ;;		On entry : 0/0
 11592 ;;		On exit  : 0/0
 11593 ;;		Unchanged: 0/0
 11594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11599 ;;Total ram usage:        0 bytes
 11600 ;; Hardware stack levels used: 1
 11601 ;; Hardware stack levels required when called: 4
 11602 ;; This function calls:
 11603 ;;		Nothing
 11604 ;; This function is called by:
 11605 ;;		_FRT_GetMicros
 11606 ;; This function uses a non-reentrant model
 11607 ;;
 11608                           
 11609  0F20                     _TMR0_GetCallBackNum:	
 11610                           ;psect for function _TMR0_GetCallBackNum
 11611                           
 11612  0F20                     l3292:	
 11613                           ;incstack = 0
 11614                           ; Regs used in _TMR0_GetCallBackNum: [wreg]
 11615                           
 11616                           
 11617                           ;tmr0.c: 131:     return CountCallBack;
 11618  0F20  0020               	movlb	0	; select bank0
 11619  0F21  0848               	movf	_CountCallBack,w	;volatile
 11620  0F22                     l304:
 11621  0F22  0008               	return
 11622  0F23                     __end_of_TMR0_GetCallBackNum:
 11623                           
 11624                           	psect	intentry
 11625  0004                     __pintentry:	
 11626 ;; *************** function _INTERRUPT_InterruptManager *****************
 11627 ;; Defined at:
 11628 ;;		line 16 in file "interrupt_manager.c"
 11629 ;; Parameters:    Size  Location     Type
 11630 ;;		None
 11631 ;; Auto vars:     Size  Location     Type
 11632 ;;		None
 11633 ;; Return value:  Size  Location     Type
 11634 ;;                  1    wreg      void 
 11635 ;; Registers used:
 11636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11637 ;; Tracked objects:
 11638 ;;		On entry : 0/0
 11639 ;;		On exit  : 0/0
 11640 ;;		Unchanged: 0/0
 11641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11646 ;;Total ram usage:        0 bytes
 11647 ;; Hardware stack levels used: 1
 11648 ;; Hardware stack levels required when called: 3
 11649 ;; This function calls:
 11650 ;;		Absolute function
 11651 ;;		_CCP1_CaptureISR
 11652 ;;		_CCP2_CaptureISR
 11653 ;;		_CCP3_CaptureISR
 11654 ;;		_CCP4_CompareISR
 11655 ;;		_EUSART_Receive_ISR
 11656 ;;		_EUSART_Transmit_ISR
 11657 ;;		_TMR0_ISR
 11658 ;;		_TMR1_ISR
 11659 ;;		_TMR3_ISR
 11660 ;; This function is called by:
 11661 ;;		Interrupt level 1
 11662 ;; This function uses a non-reentrant model
 11663 ;;
 11664                           
 11665  0004                     _INTERRUPT_InterruptManager:
 11666                           
 11667                           ;incstack = 0
 11668  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11669                           
 11670                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11671  0005  3180               	pagesel	$
 11672  0006                     i1l3622:
 11673                           
 11674                           ;interrupt_manager.c: 19:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 11675  0006  0021               	movlb	1	; select bank1
 11676  0007  1E90               	btfss	16,5	;volatile
 11677  0008  280A               	goto	u85_21
 11678  0009  280B               	goto	u85_20
 11679  000A                     u85_21:
 11680  000A  2814               	goto	i1l672
 11681  000B                     u85_20:
 11682  000B                     i1l3624:
 11683  000B  0020               	movlb	0	; select bank0
 11684  000C  1E90               	btfss	16,5	;volatile
 11685  000D  280F               	goto	u86_21
 11686  000E  2810               	goto	u86_20
 11687  000F                     u86_21:
 11688  000F  2814               	goto	i1l672
 11689  0010                     u86_20:
 11690  0010                     i1l3626:
 11691                           
 11692                           ;interrupt_manager.c: 20:     {;interrupt_manager.c: 21:         TMR0_ISR();
 11693  0010  3187  27A4  3180   	fcall	_TMR0_ISR
 11694                           
 11695                           ;interrupt_manager.c: 22:     }
 11696  0013  288C               	goto	i1l690
 11697  0014                     i1l672:	
 11698                           ;interrupt_manager.c: 23:     else if(INTCONbits.PEIE == 1)
 11699                           
 11700  0014  1F0B               	btfss	11,6	;volatile
 11701  0015  2817               	goto	u87_21
 11702  0016  2818               	goto	u87_20
 11703  0017                     u87_21:
 11704  0017  288C               	goto	i1l690
 11705  0018                     u87_20:
 11706  0018                     i1l3628:
 11707                           
 11708                           ;interrupt_manager.c: 24:     {;interrupt_manager.c: 25:         if(PIE4bits.CCP4IE == 1
      +                           && PIR4bits.CCP4IF == 1)
 11709  0018  0021               	movlb	1	; select bank1
 11710  0019  1D94               	btfss	20,3	;volatile
 11711  001A  281C               	goto	u88_21
 11712  001B  281D               	goto	u88_20
 11713  001C                     u88_21:
 11714  001C  2826               	goto	i1l675
 11715  001D                     u88_20:
 11716  001D                     i1l3630:
 11717  001D  0020               	movlb	0	; select bank0
 11718  001E  1D94               	btfss	20,3	;volatile
 11719  001F  2821               	goto	u89_21
 11720  0020  2822               	goto	u89_20
 11721  0021                     u89_21:
 11722  0021  2826               	goto	i1l675
 11723  0022                     u89_20:
 11724  0022                     i1l3632:
 11725                           
 11726                           ;interrupt_manager.c: 26:         {;interrupt_manager.c: 27:             CCP4_CompareISR
      +                          ();
 11727  0022  318F  271D  3180   	fcall	_CCP4_CompareISR
 11728                           
 11729                           ;interrupt_manager.c: 28:         }
 11730  0025  288C               	goto	i1l690
 11731  0026                     i1l675:	
 11732                           ;interrupt_manager.c: 29:         else if(PIE3bits.TMR3IE == 1 && PIR3bits.TMR3IF == 1)
 11733                           
 11734  0026  0021               	movlb	1	; select bank1
 11735  0027  1E13               	btfss	19,4	;volatile
 11736  0028  282A               	goto	u90_21
 11737  0029  282B               	goto	u90_20
 11738  002A                     u90_21:
 11739  002A  2834               	goto	i1l677
 11740  002B                     u90_20:
 11741  002B                     i1l3634:
 11742  002B  0020               	movlb	0	; select bank0
 11743  002C  1E13               	btfss	19,4	;volatile
 11744  002D  282F               	goto	u91_21
 11745  002E  2830               	goto	u91_20
 11746  002F                     u91_21:
 11747  002F  2834               	goto	i1l677
 11748  0030                     u91_20:
 11749  0030                     i1l3636:
 11750                           
 11751                           ;interrupt_manager.c: 30:         {;interrupt_manager.c: 31:             TMR3_ISR();
 11752  0030  318F  2739  3180   	fcall	_TMR3_ISR
 11753                           
 11754                           ;interrupt_manager.c: 32:         }
 11755  0033  288C               	goto	i1l690
 11756  0034                     i1l677:	
 11757                           ;interrupt_manager.c: 33:         else if(PIE4bits.CCP1IE == 1 && PIR4bits.CCP1IF == 1)
 11758                           
 11759  0034  0021               	movlb	1	; select bank1
 11760  0035  1C14               	btfss	20,0	;volatile
 11761  0036  2838               	goto	u92_21
 11762  0037  2839               	goto	u92_20
 11763  0038                     u92_21:
 11764  0038  2842               	goto	i1l679
 11765  0039                     u92_20:
 11766  0039                     i1l3638:
 11767  0039  0020               	movlb	0	; select bank0
 11768  003A  1C14               	btfss	20,0	;volatile
 11769  003B  283D               	goto	u93_21
 11770  003C  283E               	goto	u93_20
 11771  003D                     u93_21:
 11772  003D  2842               	goto	i1l679
 11773  003E                     u93_20:
 11774  003E                     i1l3640:
 11775                           
 11776                           ;interrupt_manager.c: 34:         {;interrupt_manager.c: 35:             CCP1_CaptureISR
      +                          ();
 11777  003E  3187  277C  3180   	fcall	_CCP1_CaptureISR
 11778                           
 11779                           ;interrupt_manager.c: 36:         }
 11780  0041  288C               	goto	i1l690
 11781  0042                     i1l679:	
 11782                           ;interrupt_manager.c: 37:         else if(PIE4bits.CCP3IE == 1 && PIR4bits.CCP3IF == 1)
 11783                           
 11784  0042  0021               	movlb	1	; select bank1
 11785  0043  1D14               	btfss	20,2	;volatile
 11786  0044  2846               	goto	u94_21
 11787  0045  2847               	goto	u94_20
 11788  0046                     u94_21:
 11789  0046  2850               	goto	i1l681
 11790  0047                     u94_20:
 11791  0047                     i1l3642:
 11792  0047  0020               	movlb	0	; select bank0
 11793  0048  1D14               	btfss	20,2	;volatile
 11794  0049  284B               	goto	u95_21
 11795  004A  284C               	goto	u95_20
 11796  004B                     u95_21:
 11797  004B  2850               	goto	i1l681
 11798  004C                     u95_20:
 11799  004C                     i1l3644:
 11800                           
 11801                           ;interrupt_manager.c: 38:         {;interrupt_manager.c: 39:             CCP3_CaptureISR
      +                          ();
 11802  004C  3187  2750  3180   	fcall	_CCP3_CaptureISR
 11803                           
 11804                           ;interrupt_manager.c: 40:         }
 11805  004F  288C               	goto	i1l690
 11806  0050                     i1l681:	
 11807                           ;interrupt_manager.c: 41:         else if(PIE4bits.CCP2IE == 1 && PIR4bits.CCP2IF == 1)
 11808                           
 11809  0050  0021               	movlb	1	; select bank1
 11810  0051  1C94               	btfss	20,1	;volatile
 11811  0052  2854               	goto	u96_21
 11812  0053  2855               	goto	u96_20
 11813  0054                     u96_21:
 11814  0054  285E               	goto	i1l683
 11815  0055                     u96_20:
 11816  0055                     i1l3646:
 11817  0055  0020               	movlb	0	; select bank0
 11818  0056  1C94               	btfss	20,1	;volatile
 11819  0057  2859               	goto	u97_21
 11820  0058  285A               	goto	u97_20
 11821  0059                     u97_21:
 11822  0059  285E               	goto	i1l683
 11823  005A                     u97_20:
 11824  005A                     i1l3648:
 11825                           
 11826                           ;interrupt_manager.c: 42:         {;interrupt_manager.c: 43:             CCP2_CaptureISR
      +                          ();
 11827  005A  3187  2766  3180   	fcall	_CCP2_CaptureISR
 11828                           
 11829                           ;interrupt_manager.c: 44:         }
 11830  005D  288C               	goto	i1l690
 11831  005E                     i1l683:	
 11832                           ;interrupt_manager.c: 45:         else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 11833                           
 11834  005E  0021               	movlb	1	; select bank1
 11835  005F  1C11               	btfss	17,0	;volatile
 11836  0060  2862               	goto	u98_21
 11837  0061  2863               	goto	u98_20
 11838  0062                     u98_21:
 11839  0062  286C               	goto	i1l685
 11840  0063                     u98_20:
 11841  0063                     i1l3650:
 11842  0063  0020               	movlb	0	; select bank0
 11843  0064  1C11               	btfss	17,0	;volatile
 11844  0065  2867               	goto	u99_21
 11845  0066  2868               	goto	u99_20
 11846  0067                     u99_21:
 11847  0067  286C               	goto	i1l685
 11848  0068                     u99_20:
 11849  0068                     i1l3652:
 11850                           
 11851                           ;interrupt_manager.c: 46:         {;interrupt_manager.c: 47:             TMR1_ISR();
 11852  0068  318F  27BC  3180   	fcall	_TMR1_ISR
 11853                           
 11854                           ;interrupt_manager.c: 48:         }
 11855  006B  288C               	goto	i1l690
 11856  006C                     i1l685:	
 11857                           ;interrupt_manager.c: 49:         else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 11858                           
 11859  006C  0021               	movlb	1	; select bank1
 11860  006D  1E91               	btfss	17,5	;volatile
 11861  006E  2870               	goto	u100_21
 11862  006F  2871               	goto	u100_20
 11863  0070                     u100_21:
 11864  0070  287C               	goto	i1l687
 11865  0071                     u100_20:
 11866  0071                     i1l3654:
 11867  0071  0020               	movlb	0	; select bank0
 11868  0072  1E91               	btfss	17,5	;volatile
 11869  0073  2875               	goto	u101_21
 11870  0074  2876               	goto	u101_20
 11871  0075                     u101_21:
 11872  0075  287C               	goto	i1l687
 11873  0076                     u101_20:
 11874  0076                     i1l3656:
 11875                           
 11876                           ;interrupt_manager.c: 50:         {;interrupt_manager.c: 51:             EUSART_RxDefaul
      +                          tInterruptHandler();
 11877  0076  0827               	movf	_EUSART_RxDefaultInterruptHandler+1,w
 11878  0077  008A               	movwf	10
 11879  0078  0826               	movf	_EUSART_RxDefaultInterruptHandler,w
 11880  0079  000A               	callw
 11881  007A  3180               	pagesel	$
 11882                           
 11883                           ;interrupt_manager.c: 52:         }
 11884  007B  288C               	goto	i1l690
 11885  007C                     i1l687:	
 11886                           ;interrupt_manager.c: 53:         else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 11887                           
 11888  007C  0021               	movlb	1	; select bank1
 11889  007D  1E11               	btfss	17,4	;volatile
 11890  007E  2880               	goto	u102_21
 11891  007F  2881               	goto	u102_20
 11892  0080                     u102_21:
 11893  0080  288C               	goto	i1l684
 11894  0081                     u102_20:
 11895  0081                     i1l3658:
 11896  0081  0020               	movlb	0	; select bank0
 11897  0082  1E11               	btfss	17,4	;volatile
 11898  0083  2885               	goto	u103_21
 11899  0084  2886               	goto	u103_20
 11900  0085                     u103_21:
 11901  0085  288C               	goto	i1l684
 11902  0086                     u103_20:
 11903  0086                     i1l3660:
 11904                           
 11905                           ;interrupt_manager.c: 54:         {;interrupt_manager.c: 55:             EUSART_TxDefaul
      +                          tInterruptHandler();
 11906  0086  0829               	movf	_EUSART_TxDefaultInterruptHandler+1,w
 11907  0087  008A               	movwf	10
 11908  0088  0828               	movf	_EUSART_TxDefaultInterruptHandler,w
 11909  0089  000A               	callw
 11910  008A  3180               	pagesel	$
 11911  008B  288C               	goto	i1l690
 11912  008C                     i1l684:
 11913  008C                     i1l690:
 11914  008C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11915  008D  0009               	retfie
 11916  008E                     __end_of_INTERRUPT_InterruptManager:
 11917                           
 11918                           	psect	text43
 11919  0F39                     __ptext43:	
 11920 ;; *************** function _TMR3_ISR *****************
 11921 ;; Defined at:
 11922 ;;		line 124 in file "tmr3.c"
 11923 ;; Parameters:    Size  Location     Type
 11924 ;;		None
 11925 ;; Auto vars:     Size  Location     Type
 11926 ;;		None
 11927 ;; Return value:  Size  Location     Type
 11928 ;;                  1    wreg      void 
 11929 ;; Registers used:
 11930 ;;		wreg, status,2, status,0, pclath, cstack
 11931 ;; Tracked objects:
 11932 ;;		On entry : 0/0
 11933 ;;		On exit  : 0/0
 11934 ;;		Unchanged: 0/0
 11935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;Total ram usage:        0 bytes
 11941 ;; Hardware stack levels used: 1
 11942 ;; Hardware stack levels required when called: 2
 11943 ;; This function calls:
 11944 ;;		i1_TMR3_Reload
 11945 ;; This function is called by:
 11946 ;;		_INTERRUPT_InterruptManager
 11947 ;; This function uses a non-reentrant model
 11948 ;;
 11949                           
 11950  0F39                     _TMR3_ISR:	
 11951                           ;psect for function _TMR3_ISR
 11952                           
 11953  0F39                     i1l3530:	
 11954                           ;incstack = 0
 11955                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 11956                           
 11957                           
 11958                           ;tmr3.c: 127:     PIR3bits.TMR3IF = 0;
 11959  0F39  0020               	movlb	0	; select bank0
 11960  0F3A  1213               	bcf	19,4	;volatile
 11961  0F3B                     i1l3532:
 11962                           
 11963                           ;tmr3.c: 128:     TMR3_Reload();
 11964  0F3B  318F  2784  318F   	fcall	i1_TMR3_Reload
 11965  0F3E                     i1l981:
 11966  0F3E  0008               	return
 11967  0F3F                     __end_of_TMR3_ISR:
 11968                           
 11969                           	psect	text44
 11970  0F84                     __ptext44:	
 11971 ;; *************** function i1_TMR3_Reload *****************
 11972 ;; Defined at:
 11973 ;;		line 103 in file "tmr3.c"
 11974 ;; Parameters:    Size  Location     Type
 11975 ;;		None
 11976 ;; Auto vars:     Size  Location     Type
 11977 ;;		None
 11978 ;; Return value:  Size  Location     Type
 11979 ;;                  1    wreg      void 
 11980 ;; Registers used:
 11981 ;;		wreg, status,2, status,0, pclath, cstack
 11982 ;; Tracked objects:
 11983 ;;		On entry : 0/0
 11984 ;;		On exit  : 0/0
 11985 ;;		Unchanged: 0/0
 11986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11991 ;;Total ram usage:        0 bytes
 11992 ;; Hardware stack levels used: 1
 11993 ;; Hardware stack levels required when called: 1
 11994 ;; This function calls:
 11995 ;;		i1_TMR3_WriteTimer
 11996 ;; This function is called by:
 11997 ;;		_TMR3_ISR
 11998 ;; This function uses a non-reentrant model
 11999 ;;
 12000                           
 12001  0F84                     i1_TMR3_Reload:	
 12002                           ;psect for function i1_TMR3_Reload
 12003                           
 12004  0F84                     i1l3412:	
 12005                           ;incstack = 0
 12006                           ; Regs used in i1_TMR3_Reload: [wreg+status,2+status,0+pclath+cstack]
 12007                           
 12008                           
 12009                           ;tmr3.c: 105:     TMR3_WriteTimer(timer3ReloadVal);
 12010  0F84  0020               	movlb	0	; select bank0
 12011  0F85  0821               	movf	_timer3ReloadVal+1,w	;volatile
 12012  0F86  00F1               	movwf	i1TMR3_WriteTimer@timerVal+1
 12013  0F87  0820               	movf	_timer3ReloadVal,w	;volatile
 12014  0F88  00F0               	movwf	i1TMR3_WriteTimer@timerVal
 12015  0F89  3187  27C7  318F   	fcall	i1_TMR3_WriteTimer
 12016  0F8C                     i1l972:
 12017  0F8C  0008               	return
 12018  0F8D                     __end_ofi1_TMR3_Reload:
 12019                           
 12020                           	psect	text45
 12021  07C7                     __ptext45:	
 12022 ;; *************** function i1_TMR3_WriteTimer *****************
 12023 ;; Defined at:
 12024 ;;		line 79 in file "tmr3.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;  timerVal        2    0[COMMON] unsigned short 
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      void 
 12031 ;; Registers used:
 12032 ;;		wreg, status,2
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12042 ;;Total ram usage:        2 bytes
 12043 ;; Hardware stack levels used: 1
 12044 ;; This function calls:
 12045 ;;		Nothing
 12046 ;; This function is called by:
 12047 ;;		i1_TMR3_Reload
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051  07C7                     i1_TMR3_WriteTimer:	
 12052                           ;psect for function i1_TMR3_WriteTimer
 12053                           
 12054  07C7                     i1l3102:	
 12055                           ;incstack = 0
 12056                           ; Regs used in i1_TMR3_WriteTimer: [wreg+status,2]
 12057                           
 12058                           
 12059                           ;tmr3.c: 79: void TMR3_WriteTimer(uint16_t timerVal);tmr3.c: 80: {;tmr3.c: 81:     if (T
      +                          3CONbits.T3SYNC == 1)
 12060  07C7  0028               	movlb	8	; select bank8
 12061  07C8  1D13               	btfss	19,2	;volatile
 12062  07C9  2FCB               	goto	u58_21
 12063  07CA  2FCC               	goto	u58_20
 12064  07CB                     u58_21:
 12065  07CB  2FD3               	goto	i1l3112
 12066  07CC                     u58_20:
 12067  07CC                     i1l3104:
 12068                           
 12069                           ;tmr3.c: 82:     {;tmr3.c: 84:         T3CONbits.TMR3ON = 0;
 12070  07CC  1013               	bcf	19,0	;volatile
 12071  07CD                     i1l3106:
 12072                           
 12073                           ;tmr3.c: 87:         TMR3H = (uint8_t)(timerVal >> 8);
 12074  07CD  0871               	movf	i1TMR3_WriteTimer@timerVal+1,w
 12075  07CE  0092               	movwf	18	;volatile
 12076  07CF                     i1l3108:
 12077                           
 12078                           ;tmr3.c: 88:         TMR3L = (uint8_t)timerVal;
 12079  07CF  0870               	movf	i1TMR3_WriteTimer@timerVal,w
 12080  07D0  0091               	movwf	17	;volatile
 12081  07D1                     i1l3110:
 12082                           
 12083                           ;tmr3.c: 91:         T3CONbits.TMR3ON =1;
 12084  07D1  1413               	bsf	19,0	;volatile
 12085                           
 12086                           ;tmr3.c: 92:     }
 12087  07D2  2FD7               	goto	i1l969
 12088  07D3                     i1l3112:
 12089                           
 12090                           ;tmr3.c: 94:     {;tmr3.c: 96:         TMR3H = (uint8_t)(timerVal >> 8);
 12091  07D3  0871               	movf	i1TMR3_WriteTimer@timerVal+1,w
 12092  07D4  0092               	movwf	18	;volatile
 12093  07D5                     i1l3114:
 12094                           
 12095                           ;tmr3.c: 97:         TMR3L = (uint8_t)timerVal;
 12096  07D5  0870               	movf	i1TMR3_WriteTimer@timerVal,w
 12097  07D6  0091               	movwf	17	;volatile
 12098  07D7                     i1l969:
 12099  07D7  0008               	return
 12100  07D8                     __end_ofi1_TMR3_WriteTimer:
 12101                           
 12102                           	psect	text46
 12103  0FBC                     __ptext46:	
 12104 ;; *************** function _TMR1_ISR *****************
 12105 ;; Defined at:
 12106 ;;		line 111 in file "tmr1.c"
 12107 ;; Parameters:    Size  Location     Type
 12108 ;;		None
 12109 ;; Auto vars:     Size  Location     Type
 12110 ;;		None
 12111 ;; Return value:  Size  Location     Type
 12112 ;;                  1    wreg      void 
 12113 ;; Registers used:
 12114 ;;		wreg, status,2, status,0, pclath, cstack
 12115 ;; Tracked objects:
 12116 ;;		On entry : 0/0
 12117 ;;		On exit  : 0/0
 12118 ;;		Unchanged: 0/0
 12119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12124 ;;Total ram usage:        0 bytes
 12125 ;; Hardware stack levels used: 1
 12126 ;; Hardware stack levels required when called: 1
 12127 ;; This function calls:
 12128 ;;		_TMR1_WriteTimer
 12129 ;; This function is called by:
 12130 ;;		_INTERRUPT_InterruptManager
 12131 ;; This function uses a non-reentrant model
 12132 ;;
 12133                           
 12134  0FBC                     _TMR1_ISR:	
 12135                           ;psect for function _TMR1_ISR
 12136                           
 12137  0FBC                     i1l3452:	
 12138                           ;incstack = 0
 12139                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 12140                           
 12141                           
 12142                           ;tmr1.c: 114:     PIR1bits.TMR1IF = 0;
 12143  0FBC  0020               	movlb	0	; select bank0
 12144  0FBD  1011               	bcf	17,0	;volatile
 12145  0FBE                     i1l3454:
 12146                           
 12147                           ;tmr1.c: 115:     TMR1_WriteTimer(timer1ReloadVal);
 12148  0FBE  082B               	movf	_timer1ReloadVal+1,w	;volatile
 12149  0FBF  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 12150  0FC0  082A               	movf	_timer1ReloadVal,w	;volatile
 12151  0FC1  00F0               	movwf	TMR1_WriteTimer@timerVal
 12152  0FC2  3187  27D8  318F   	fcall	_TMR1_WriteTimer
 12153  0FC5                     i1l481:
 12154  0FC5  0008               	return
 12155  0FC6                     __end_of_TMR1_ISR:
 12156                           
 12157                           	psect	text47
 12158  07D8                     __ptext47:	
 12159 ;; *************** function _TMR1_WriteTimer *****************
 12160 ;; Defined at:
 12161 ;;		line 80 in file "tmr1.c"
 12162 ;; Parameters:    Size  Location     Type
 12163 ;;  timerVal        2    0[COMMON] unsigned short 
 12164 ;; Auto vars:     Size  Location     Type
 12165 ;;		None
 12166 ;; Return value:  Size  Location     Type
 12167 ;;                  1    wreg      void 
 12168 ;; Registers used:
 12169 ;;		wreg, status,2
 12170 ;; Tracked objects:
 12171 ;;		On entry : 0/0
 12172 ;;		On exit  : 0/0
 12173 ;;		Unchanged: 0/0
 12174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12179 ;;Total ram usage:        2 bytes
 12180 ;; Hardware stack levels used: 1
 12181 ;; This function calls:
 12182 ;;		Nothing
 12183 ;; This function is called by:
 12184 ;;		_TMR1_ISR
 12185 ;;		_TMR1_Reload
 12186 ;; This function uses a non-reentrant model
 12187 ;;
 12188                           
 12189  07D8                     _TMR1_WriteTimer:	
 12190                           ;psect for function _TMR1_WriteTimer
 12191                           
 12192  07D8                     i1l3344:	
 12193                           ;incstack = 0
 12194                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 12195                           
 12196                           
 12197                           ;tmr1.c: 80: void TMR1_WriteTimer(uint16_t timerVal);tmr1.c: 81: {;tmr1.c: 82:     if (T
      +                          1CONbits.T1SYNC == 1)
 12198  07D8  0020               	movlb	0	; select bank0
 12199  07D9  1D1B               	btfss	27,2	;volatile
 12200  07DA  2FDC               	goto	u59_21
 12201  07DB  2FDD               	goto	u59_20
 12202  07DC                     u59_21:
 12203  07DC  2FE4               	goto	i1l3354
 12204  07DD                     u59_20:
 12205  07DD                     i1l3346:
 12206                           
 12207                           ;tmr1.c: 83:     {;tmr1.c: 85:         T1CONbits.TMR1ON = 0;
 12208  07DD  101B               	bcf	27,0	;volatile
 12209  07DE                     i1l3348:
 12210                           
 12211                           ;tmr1.c: 88:         TMR1H = (uint8_t)(timerVal >> 8);
 12212  07DE  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 12213  07DF  009A               	movwf	26	;volatile
 12214  07E0                     i1l3350:
 12215                           
 12216                           ;tmr1.c: 89:         TMR1L = (uint8_t)timerVal;
 12217  07E0  0870               	movf	TMR1_WriteTimer@timerVal,w
 12218  07E1  0099               	movwf	25	;volatile
 12219  07E2                     i1l3352:
 12220                           
 12221                           ;tmr1.c: 92:         T1CONbits.TMR1ON =1;
 12222  07E2  141B               	bsf	27,0	;volatile
 12223                           
 12224                           ;tmr1.c: 93:     }
 12225  07E3  2FE8               	goto	i1l475
 12226  07E4                     i1l3354:
 12227                           
 12228                           ;tmr1.c: 95:     {;tmr1.c: 97:         TMR1H = (uint8_t)(timerVal >> 8);
 12229  07E4  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 12230  07E5  009A               	movwf	26	;volatile
 12231  07E6                     i1l3356:
 12232                           
 12233                           ;tmr1.c: 98:         TMR1L = (uint8_t)timerVal;
 12234  07E6  0870               	movf	TMR1_WriteTimer@timerVal,w
 12235  07E7  0099               	movwf	25	;volatile
 12236  07E8                     i1l475:
 12237  07E8  0008               	return
 12238  07E9                     __end_of_TMR1_WriteTimer:
 12239                           
 12240                           	psect	text48
 12241  07A4                     __ptext48:	
 12242 ;; *************** function _TMR0_ISR *****************
 12243 ;; Defined at:
 12244 ;;		line 90 in file "tmr0.c"
 12245 ;; Parameters:    Size  Location     Type
 12246 ;;		None
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;		None
 12249 ;; Return value:  Size  Location     Type
 12250 ;;                  1    wreg      void 
 12251 ;; Registers used:
 12252 ;;		wreg, status,2, status,0, pclath, cstack
 12253 ;; Tracked objects:
 12254 ;;		On entry : 0/0
 12255 ;;		On exit  : 0/0
 12256 ;;		Unchanged: 0/0
 12257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;Total ram usage:        1 bytes
 12263 ;; Hardware stack levels used: 1
 12264 ;; Hardware stack levels required when called: 2
 12265 ;; This function calls:
 12266 ;;		_TMR0_CallBack
 12267 ;; This function is called by:
 12268 ;;		_INTERRUPT_InterruptManager
 12269 ;; This function uses a non-reentrant model
 12270 ;;
 12271                           
 12272  07A4                     _TMR0_ISR:	
 12273                           ;psect for function _TMR0_ISR
 12274                           
 12275  07A4                     i1l3426:	
 12276                           ;incstack = 0
 12277                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 12278                           
 12279                           
 12280                           ;tmr0.c: 93:     PIR0bits.TMR0IF = 0;
 12281  07A4  0020               	movlb	0	; select bank0
 12282  07A5  1290               	bcf	16,5	;volatile
 12283  07A6                     i1l3428:
 12284                           
 12285                           ;tmr0.c: 95:     if (++CountCallBack >= 4)
 12286  07A6  3001               	movlw	1
 12287  07A7  00F0               	movwf	??_TMR0_ISR
 12288  07A8  0870               	movf	??_TMR0_ISR,w
 12289  07A9  07C8               	addwf	_CountCallBack,f	;volatile
 12290  07AA  3004               	movlw	4
 12291  07AB  0248               	subwf	_CountCallBack,w	;volatile
 12292  07AC  1C03               	skipc
 12293  07AD  2FAF               	goto	u71_21
 12294  07AE  2FB0               	goto	u71_20
 12295  07AF                     u71_21:
 12296  07AF  2FB5               	goto	i1l292
 12297  07B0                     u71_20:
 12298  07B0                     i1l3430:
 12299                           
 12300                           ;tmr0.c: 96:     {;tmr0.c: 98:         TMR0_CallBack();
 12301  07B0  318F  276F  3187   	fcall	_TMR0_CallBack
 12302  07B3                     i1l3432:
 12303                           
 12304                           ;tmr0.c: 101:         CountCallBack = 0;
 12305  07B3  0020               	movlb	0	; select bank0
 12306  07B4  01C8               	clrf	_CountCallBack	;volatile
 12307  07B5                     i1l292:
 12308  07B5  0008               	return
 12309  07B6                     __end_of_TMR0_ISR:
 12310                           
 12311                           	psect	text49
 12312  0F6F                     __ptext49:	
 12313 ;; *************** function _TMR0_CallBack *****************
 12314 ;; Defined at:
 12315 ;;		line 109 in file "tmr0.c"
 12316 ;; Parameters:    Size  Location     Type
 12317 ;;		None
 12318 ;; Auto vars:     Size  Location     Type
 12319 ;;		None
 12320 ;; Return value:  Size  Location     Type
 12321 ;;                  1    wreg      void 
 12322 ;; Registers used:
 12323 ;;		wreg, status,2, status,0, pclath, cstack
 12324 ;; Tracked objects:
 12325 ;;		On entry : 0/0
 12326 ;;		On exit  : 0/0
 12327 ;;		Unchanged: 0/0
 12328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12333 ;;Total ram usage:        0 bytes
 12334 ;; Hardware stack levels used: 1
 12335 ;; Hardware stack levels required when called: 1
 12336 ;; This function calls:
 12337 ;;		_FRT_IncMicros
 12338 ;;		_FRT_IncMillis
 12339 ;; This function is called by:
 12340 ;;		_TMR0_ISR
 12341 ;; This function uses a non-reentrant model
 12342 ;;
 12343                           
 12344  0F6F                     _TMR0_CallBack:	
 12345                           ;psect for function _TMR0_CallBack
 12346                           
 12347  0F6F                     i1l3290:	
 12348                           ;incstack = 0
 12349                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 12350                           
 12351                           
 12352                           ;tmr0.c: 111:     FRT_IncMillis();
 12353  0F6F  318F  27B2  318F   	fcall	_FRT_IncMillis
 12354                           
 12355                           ;tmr0.c: 112:     FRT_IncMicros();
 12356  0F72  318F  27A8  318F   	fcall	_FRT_IncMicros
 12357  0F75                     i1l295:
 12358  0F75  0008               	return
 12359  0F76                     __end_of_TMR0_CallBack:
 12360                           
 12361                           	psect	text50
 12362  0FB2                     __ptext50:	
 12363 ;; *************** function _FRT_IncMillis *****************
 12364 ;; Defined at:
 12365 ;;		line 38 in file "FRT.c"
 12366 ;; Parameters:    Size  Location     Type
 12367 ;;		None
 12368 ;; Auto vars:     Size  Location     Type
 12369 ;;		None
 12370 ;; Return value:  Size  Location     Type
 12371 ;;                  1    wreg      void 
 12372 ;; Registers used:
 12373 ;;		wreg
 12374 ;; Tracked objects:
 12375 ;;		On entry : 0/0
 12376 ;;		On exit  : 0/0
 12377 ;;		Unchanged: 0/0
 12378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12383 ;;Total ram usage:        0 bytes
 12384 ;; Hardware stack levels used: 1
 12385 ;; This function calls:
 12386 ;;		Nothing
 12387 ;; This function is called by:
 12388 ;;		_TMR0_CallBack
 12389 ;; This function uses a non-reentrant model
 12390 ;;
 12391                           
 12392  0FB2                     _FRT_IncMillis:	
 12393                           ;psect for function _FRT_IncMillis
 12394                           
 12395  0FB2                     i1l3078:	
 12396                           ;incstack = 0
 12397                           ; Regs used in _FRT_IncMillis: [wreg]
 12398                           
 12399                           
 12400                           ;FRT.c: 39:     millis ++;
 12401  0FB2  3001               	movlw	1
 12402  0FB3  0021               	movlb	1	; select bank1
 12403  0FB4  07CE               	addwf	_millis^(0+128),f
 12404  0FB5  3000               	movlw	0
 12405  0FB6  3DCF               	addwfc	(_millis+1)^(0+128),f
 12406  0FB7  3000               	movlw	0
 12407  0FB8  3DD0               	addwfc	(_millis+2)^(0+128),f
 12408  0FB9  3000               	movlw	0
 12409  0FBA  3DD1               	addwfc	(_millis+3)^(0+128),f
 12410  0FBB                     i1l769:
 12411  0FBB  0008               	return
 12412  0FBC                     __end_of_FRT_IncMillis:
 12413                           
 12414                           	psect	text51
 12415  0FA8                     __ptext51:	
 12416 ;; *************** function _FRT_IncMicros *****************
 12417 ;; Defined at:
 12418 ;;		line 45 in file "FRT.c"
 12419 ;; Parameters:    Size  Location     Type
 12420 ;;		None
 12421 ;; Auto vars:     Size  Location     Type
 12422 ;;		None
 12423 ;; Return value:  Size  Location     Type
 12424 ;;                  1    wreg      void 
 12425 ;; Registers used:
 12426 ;;		wreg
 12427 ;; Tracked objects:
 12428 ;;		On entry : 0/0
 12429 ;;		On exit  : 0/0
 12430 ;;		Unchanged: 0/0
 12431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12436 ;;Total ram usage:        0 bytes
 12437 ;; Hardware stack levels used: 1
 12438 ;; This function calls:
 12439 ;;		Nothing
 12440 ;; This function is called by:
 12441 ;;		_TMR0_CallBack
 12442 ;; This function uses a non-reentrant model
 12443 ;;
 12444                           
 12445  0FA8                     _FRT_IncMicros:	
 12446                           ;psect for function _FRT_IncMicros
 12447                           
 12448  0FA8                     i1l3082:	
 12449                           ;incstack = 0
 12450                           ; Regs used in _FRT_IncMicros: [wreg]
 12451                           
 12452                           
 12453                           ;FRT.c: 46:     micros += 1000;
 12454  0FA8  30E8               	movlw	232
 12455  0FA9  0021               	movlb	1	; select bank1
 12456  0FAA  07CA               	addwf	_micros@FRT$F1508^(0+128),f
 12457  0FAB  3003               	movlw	3
 12458  0FAC  3DCB               	addwfc	(_micros@FRT$F1508+1)^(0+128),f
 12459  0FAD  3000               	movlw	0
 12460  0FAE  3DCC               	addwfc	(_micros@FRT$F1508+2)^(0+128),f
 12461  0FAF  3000               	movlw	0
 12462  0FB0  3DCD               	addwfc	(_micros@FRT$F1508+3)^(0+128),f
 12463  0FB1                     i1l772:
 12464  0FB1  0008               	return
 12465  0FB2                     __end_of_FRT_IncMicros:
 12466                           
 12467                           	psect	text52
 12468  0664                     __ptext52:	
 12469 ;; *************** function _EUSART_Transmit_ISR *****************
 12470 ;; Defined at:
 12471 ;;		line 181 in file "eusart.c"
 12472 ;; Parameters:    Size  Location     Type
 12473 ;;		None
 12474 ;; Auto vars:     Size  Location     Type
 12475 ;;		None
 12476 ;; Return value:  Size  Location     Type
 12477 ;;                  1    wreg      void 
 12478 ;; Registers used:
 12479 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12480 ;; Tracked objects:
 12481 ;;		On entry : 0/0
 12482 ;;		On exit  : 0/0
 12483 ;;		Unchanged: 0/0
 12484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12487 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12488 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12489 ;;Total ram usage:        1 bytes
 12490 ;; Hardware stack levels used: 1
 12491 ;; This function calls:
 12492 ;;		Nothing
 12493 ;; This function is called by:
 12494 ;;		_EUSART_Initialize
 12495 ;;		_INTERRUPT_InterruptManager
 12496 ;; This function uses a non-reentrant model
 12497 ;;
 12498                           
 12499  0664                     _EUSART_Transmit_ISR:	
 12500                           ;psect for function _EUSART_Transmit_ISR
 12501                           
 12502  0664                     i1l3496:	
 12503                           ;incstack = 0
 12504                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 12505                           
 12506                           
 12507                           ;eusart.c: 185:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 12508  0664  3008               	movlw	8
 12509  0665  0020               	movlb	0	; select bank0
 12510  0666  0242               	subwf	_eusartTxBufferRemaining,w	;volatile
 12511  0667  1803               	skipnc
 12512  0668  2E6A               	goto	u77_21
 12513  0669  2E6B               	goto	u77_20
 12514  066A                     u77_21:
 12515  066A  2E83               	goto	i1l593
 12516  066B                     u77_20:
 12517  066B                     i1l3498:
 12518                           
 12519                           ;eusart.c: 186:     {;eusart.c: 187:         TX1REG = eusartTxBuffer[eusartTxTail++];
 12520  066B  0843               	movf	_eusartTxTail,w
 12521  066C  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
 12522  066D  0086               	movwf	6
 12523  066E  0187               	clrf	7
 12524  066F  0801               	movf	1,w
 12525  0670  0023               	movlb	3	; select bank3
 12526  0671  009A               	movwf	26	;volatile
 12527  0672                     i1l3500:
 12528  0672  3001               	movlw	1
 12529  0673  00F0               	movwf	??_EUSART_Transmit_ISR
 12530  0674  0870               	movf	??_EUSART_Transmit_ISR,w
 12531  0675  0020               	movlb	0	; select bank0
 12532  0676  07C3               	addwf	_eusartTxTail,f	;volatile
 12533  0677                     i1l3502:
 12534                           
 12535                           ;eusart.c: 188:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 12536  0677  3008               	movlw	8
 12537  0678  0243               	subwf	_eusartTxTail,w	;volatile
 12538  0679  1C03               	skipc
 12539  067A  2E7C               	goto	u78_21
 12540  067B  2E7D               	goto	u78_20
 12541  067C                     u78_21:
 12542  067C  2E7E               	goto	i1l3506
 12543  067D                     u78_20:
 12544  067D                     i1l3504:
 12545                           
 12546                           ;eusart.c: 189:         {;eusart.c: 190:             eusartTxTail = 0;
 12547  067D  01C3               	clrf	_eusartTxTail	;volatile
 12548  067E                     i1l3506:
 12549                           
 12550                           ;eusart.c: 192:         eusartTxBufferRemaining++;
 12551  067E  3001               	movlw	1
 12552  067F  00F0               	movwf	??_EUSART_Transmit_ISR
 12553  0680  0870               	movf	??_EUSART_Transmit_ISR,w
 12554  0681  07C2               	addwf	_eusartTxBufferRemaining,f	;volatile
 12555                           
 12556                           ;eusart.c: 193:     }
 12557  0682  2E85               	goto	i1l596
 12558  0683                     i1l593:	
 12559                           ;eusart.c: 194:     else
 12560                           
 12561                           
 12562                           ;eusart.c: 195:     {;eusart.c: 196:         PIE1bits.TXIE = 0;
 12563  0683  0021               	movlb	1	; select bank1
 12564  0684  1211               	bcf	17,4	;volatile
 12565  0685                     i1l596:
 12566  0685  0008               	return
 12567  0686                     __end_of_EUSART_Transmit_ISR:
 12568                           
 12569                           	psect	text53
 12570  04EA                     __ptext53:	
 12571 ;; *************** function _EUSART_Receive_ISR *****************
 12572 ;; Defined at:
 12573 ;;		line 202 in file "eusart.c"
 12574 ;; Parameters:    Size  Location     Type
 12575 ;;		None
 12576 ;; Auto vars:     Size  Location     Type
 12577 ;;		None
 12578 ;; Return value:  Size  Location     Type
 12579 ;;                  1    wreg      void 
 12580 ;; Registers used:
 12581 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12582 ;; Tracked objects:
 12583 ;;		On entry : 0/0
 12584 ;;		On exit  : 0/0
 12585 ;;		Unchanged: 0/0
 12586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12591 ;;Total ram usage:        0 bytes
 12592 ;; Hardware stack levels used: 1
 12593 ;; Hardware stack levels required when called: 2
 12594 ;; This function calls:
 12595 ;;		Absolute function
 12596 ;;		_EUSART_DefaultErrorHandler
 12597 ;;		_EUSART_DefaultFramingErrorHandler
 12598 ;;		_EUSART_DefaultOverrunErrorHandler
 12599 ;;		_EUSART_RxDataHandler
 12600 ;; This function is called by:
 12601 ;;		_EUSART_Initialize
 12602 ;;		_INTERRUPT_InterruptManager
 12603 ;; This function uses a non-reentrant model
 12604 ;;
 12605                           
 12606  04EA                     _EUSART_Receive_ISR:	
 12607                           ;psect for function _EUSART_Receive_ISR
 12608                           
 12609  04EA                     i1l3508:	
 12610                           ;incstack = 0
 12611                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12612                           
 12613                           
 12614                           ;eusart.c: 205:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 12615  04EA  0020               	movlb	0	; select bank0
 12616  04EB  0841               	movf	_eusartRxHead,w	;volatile
 12617  04EC  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 12618  04ED  0086               	movwf	6
 12619  04EE  0187               	clrf	7
 12620  04EF  0181               	clrf	1
 12621  04F0                     i1l3510:
 12622                           
 12623                           ;eusart.c: 207:     if(RC1STAbits.FERR){
 12624  04F0  0023               	movlb	3	; select bank3
 12625  04F1  1D1D               	btfss	29,2	;volatile
 12626  04F2  2CF4               	goto	u79_21
 12627  04F3  2CF5               	goto	u79_20
 12628  04F4                     u79_21:
 12629  04F4  2D00               	goto	i1l3516
 12630  04F5                     u79_20:
 12631  04F5                     i1l3512:
 12632                           
 12633                           ;eusart.c: 208:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 12634  04F5  0020               	movlb	0	; select bank0
 12635  04F6  0841               	movf	_eusartRxHead,w	;volatile
 12636  04F7  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 12637  04F8  0086               	movwf	6
 12638  04F9  0187               	clrf	7
 12639  04FA  1481               	bsf	1,1
 12640  04FB                     i1l3514:
 12641                           
 12642                           ;eusart.c: 209:         EUSART_FramingErrorHandler();
 12643  04FB  0825               	movf	_EUSART_FramingErrorHandler+1,w
 12644  04FC  008A               	movwf	10
 12645  04FD  0824               	movf	_EUSART_FramingErrorHandler,w
 12646  04FE  000A               	callw
 12647  04FF  3184               	pagesel	$
 12648  0500                     i1l3516:
 12649                           
 12650                           ;eusart.c: 212:     if(RC1STAbits.OERR){
 12651  0500  0023               	movlb	3	; select bank3
 12652  0501  1C9D               	btfss	29,1	;volatile
 12653  0502  2D04               	goto	u80_21
 12654  0503  2D05               	goto	u80_20
 12655  0504                     u80_21:
 12656  0504  2D10               	goto	i1l3522
 12657  0505                     u80_20:
 12658  0505                     i1l3518:
 12659                           
 12660                           ;eusart.c: 213:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 12661  0505  0020               	movlb	0	; select bank0
 12662  0506  0841               	movf	_eusartRxHead,w	;volatile
 12663  0507  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 12664  0508  0086               	movwf	6
 12665  0509  0187               	clrf	7
 12666  050A  1501               	bsf	1,2
 12667  050B                     i1l3520:
 12668                           
 12669                           ;eusart.c: 214:         EUSART_OverrunErrorHandler();
 12670  050B  0823               	movf	_EUSART_OverrunErrorHandler+1,w
 12671  050C  008A               	movwf	10
 12672  050D  0822               	movf	_EUSART_OverrunErrorHandler,w
 12673  050E  000A               	callw
 12674  050F  3184               	pagesel	$
 12675  0510                     i1l3522:
 12676                           
 12677                           ;eusart.c: 217:     if(eusartRxStatusBuffer[eusartRxHead].status){
 12678  0510  0020               	movlb	0	; select bank0
 12679  0511  0841               	movf	_eusartRxHead,w	;volatile
 12680  0512  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 12681  0513  0086               	movwf	6
 12682  0514  0187               	clrf	7
 12683  0515  0801               	movf	1,w
 12684  0516  1903               	btfsc	3,2
 12685  0517  2D19               	goto	u81_21
 12686  0518  2D1A               	goto	u81_20
 12687  0519                     u81_21:
 12688  0519  2D21               	goto	i1l3526
 12689  051A                     u81_20:
 12690  051A                     i1l3524:
 12691                           
 12692                           ;eusart.c: 218:         EUSART_ErrorHandler();
 12693  051A  0021               	movlb	1	; select bank1
 12694  051B  085D               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 12695  051C  008A               	movwf	10
 12696  051D  085C               	movf	_EUSART_ErrorHandler^(0+128),w
 12697  051E  000A               	callw
 12698  051F  3184               	pagesel	$
 12699                           
 12700                           ;eusart.c: 219:     } else {
 12701  0520  2D24               	goto	i1l603
 12702  0521                     i1l3526:
 12703                           
 12704                           ;eusart.c: 220:         EUSART_RxDataHandler();
 12705  0521  3186  26A6  3184   	fcall	_EUSART_RxDataHandler
 12706  0524                     i1l603:
 12707  0524  0008               	return
 12708  0525                     __end_of_EUSART_Receive_ISR:
 12709                           
 12710                           	psect	text54
 12711  0F2D                     __ptext54:	
 12712 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 12713 ;; Defined at:
 12714 ;;		line 244 in file "eusart.c"
 12715 ;; Parameters:    Size  Location     Type
 12716 ;;		None
 12717 ;; Auto vars:     Size  Location     Type
 12718 ;;		None
 12719 ;; Return value:  Size  Location     Type
 12720 ;;                  1    wreg      void 
 12721 ;; Registers used:
 12722 ;;		None
 12723 ;; Tracked objects:
 12724 ;;		On entry : 0/0
 12725 ;;		On exit  : 0/0
 12726 ;;		Unchanged: 0/0
 12727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12732 ;;Total ram usage:        0 bytes
 12733 ;; Hardware stack levels used: 1
 12734 ;; This function calls:
 12735 ;;		Nothing
 12736 ;; This function is called by:
 12737 ;;		_EUSART_Initialize
 12738 ;;		_EUSART_Receive_ISR
 12739 ;; This function uses a non-reentrant model
 12740 ;;
 12741                           
 12742  0F2D                     _EUSART_DefaultOverrunErrorHandler:	
 12743                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 12744                           
 12745  0F2D                     i1l3358:	
 12746                           ;incstack = 0
 12747                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 12748                           
 12749                           
 12750                           ;eusart.c: 247:     RC1STAbits.CREN = 0;
 12751  0F2D  0023               	movlb	3	; select bank3
 12752  0F2E  121D               	bcf	29,4	;volatile
 12753                           
 12754                           ;eusart.c: 248:     RC1STAbits.CREN = 1;
 12755  0F2F  161D               	bsf	29,4	;volatile
 12756  0F30                     i1l613:
 12757  0F30  0008               	return
 12758  0F31                     __end_of_EUSART_DefaultOverrunErrorHandler:
 12759                           
 12760                           	psect	text55
 12761  0003                     __ptext55:	
 12762 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 12763 ;; Defined at:
 12764 ;;		line 240 in file "eusart.c"
 12765 ;; Parameters:    Size  Location     Type
 12766 ;;		None
 12767 ;; Auto vars:     Size  Location     Type
 12768 ;;		None
 12769 ;; Return value:  Size  Location     Type
 12770 ;;                  1    wreg      void 
 12771 ;; Registers used:
 12772 ;;		None
 12773 ;; Tracked objects:
 12774 ;;		On entry : 0/0
 12775 ;;		On exit  : 0/0
 12776 ;;		Unchanged: 0/0
 12777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12782 ;;Total ram usage:        0 bytes
 12783 ;; Hardware stack levels used: 1
 12784 ;; This function calls:
 12785 ;;		Nothing
 12786 ;; This function is called by:
 12787 ;;		_EUSART_Initialize
 12788 ;;		_EUSART_Receive_ISR
 12789 ;; This function uses a non-reentrant model
 12790 ;;
 12791                           
 12792  0003                     _EUSART_DefaultFramingErrorHandler:	
 12793                           ;psect for function _EUSART_DefaultFramingErrorHandler
 12794                           
 12795  0003                     i1l610:	
 12796                           ;incstack = 0
 12797                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 12798                           
 12799  0003  0008               	return
 12800  0004                     __end_of_EUSART_DefaultFramingErrorHandler:
 12801                           
 12802                           	psect	text56
 12803  0F29                     __ptext56:	
 12804 ;; *************** function _EUSART_DefaultErrorHandler *****************
 12805 ;; Defined at:
 12806 ;;		line 254 in file "eusart.c"
 12807 ;; Parameters:    Size  Location     Type
 12808 ;;		None
 12809 ;; Auto vars:     Size  Location     Type
 12810 ;;		None
 12811 ;; Return value:  Size  Location     Type
 12812 ;;                  1    wreg      void 
 12813 ;; Registers used:
 12814 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12815 ;; Tracked objects:
 12816 ;;		On entry : 0/0
 12817 ;;		On exit  : 0/0
 12818 ;;		Unchanged: 0/0
 12819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12824 ;;Total ram usage:        0 bytes
 12825 ;; Hardware stack levels used: 1
 12826 ;; Hardware stack levels required when called: 1
 12827 ;; This function calls:
 12828 ;;		_EUSART_RxDataHandler
 12829 ;; This function is called by:
 12830 ;;		_EUSART_Initialize
 12831 ;;		_EUSART_Receive_ISR
 12832 ;; This function uses a non-reentrant model
 12833 ;;
 12834                           
 12835  0F29                     _EUSART_DefaultErrorHandler:	
 12836                           ;psect for function _EUSART_DefaultErrorHandler
 12837                           
 12838  0F29                     i1l3360:	
 12839                           ;incstack = 0
 12840                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12841                           
 12842                           
 12843                           ;eusart.c: 255:     EUSART_RxDataHandler();
 12844  0F29  3186  26A6  318F   	fcall	_EUSART_RxDataHandler
 12845  0F2C                     i1l616:
 12846  0F2C  0008               	return
 12847  0F2D                     __end_of_EUSART_DefaultErrorHandler:
 12848                           
 12849                           	psect	text57
 12850  06A6                     __ptext57:	
 12851 ;; *************** function _EUSART_RxDataHandler *****************
 12852 ;; Defined at:
 12853 ;;		line 228 in file "eusart.c"
 12854 ;; Parameters:    Size  Location     Type
 12855 ;;		None
 12856 ;; Auto vars:     Size  Location     Type
 12857 ;;		None
 12858 ;; Return value:  Size  Location     Type
 12859 ;;                  1    wreg      void 
 12860 ;; Registers used:
 12861 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12862 ;; Tracked objects:
 12863 ;;		On entry : 0/0
 12864 ;;		On exit  : 0/0
 12865 ;;		Unchanged: 0/0
 12866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12871 ;;Total ram usage:        1 bytes
 12872 ;; Hardware stack levels used: 1
 12873 ;; This function calls:
 12874 ;;		Nothing
 12875 ;; This function is called by:
 12876 ;;		_EUSART_Receive_ISR
 12877 ;;		_EUSART_DefaultErrorHandler
 12878 ;; This function uses a non-reentrant model
 12879 ;;
 12880                           
 12881  06A6                     _EUSART_RxDataHandler:	
 12882                           ;psect for function _EUSART_RxDataHandler
 12883                           
 12884  06A6                     i1l3086:	
 12885                           ;incstack = 0
 12886                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12887                           
 12888                           
 12889                           ;eusart.c: 230:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 12890  06A6  0023               	movlb	3	; select bank3
 12891  06A7  0819               	movf	25,w	;volatile
 12892  06A8  00F0               	movwf	??_EUSART_RxDataHandler
 12893  06A9  0020               	movlb	0	; select bank0
 12894  06AA  0841               	movf	_eusartRxHead,w
 12895  06AB  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 12896  06AC  0086               	movwf	6
 12897  06AD  0187               	clrf	7
 12898  06AE  0870               	movf	??_EUSART_RxDataHandler,w
 12899  06AF  0081               	movwf	1
 12900  06B0                     i1l3088:
 12901  06B0  3001               	movlw	1
 12902  06B1  00F0               	movwf	??_EUSART_RxDataHandler
 12903  06B2  0870               	movf	??_EUSART_RxDataHandler,w
 12904  06B3  07C1               	addwf	_eusartRxHead,f	;volatile
 12905  06B4                     i1l3090:
 12906                           
 12907                           ;eusart.c: 231:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 12908  06B4  3008               	movlw	8
 12909  06B5  0241               	subwf	_eusartRxHead,w	;volatile
 12910  06B6  1C03               	skipc
 12911  06B7  2EB9               	goto	u57_21
 12912  06B8  2EBA               	goto	u57_20
 12913  06B9                     u57_21:
 12914  06B9  2EBB               	goto	i1l3094
 12915  06BA                     u57_20:
 12916  06BA                     i1l3092:
 12917                           
 12918                           ;eusart.c: 232:     {;eusart.c: 233:         eusartRxHead = 0;
 12919  06BA  01C1               	clrf	_eusartRxHead	;volatile
 12920  06BB                     i1l3094:
 12921                           
 12922                           ;eusart.c: 235:     eusartRxCount++;
 12923  06BB  3001               	movlw	1
 12924  06BC  00F0               	movwf	??_EUSART_RxDataHandler
 12925  06BD  0870               	movf	??_EUSART_RxDataHandler,w
 12926  06BE  07C0               	addwf	_eusartRxCount,f	;volatile
 12927  06BF                     i1l607:
 12928  06BF  0008               	return
 12929  06C0                     __end_of_EUSART_RxDataHandler:
 12930                           
 12931                           	psect	text58
 12932  0F1D                     __ptext58:	
 12933 ;; *************** function _CCP4_CompareISR *****************
 12934 ;; Defined at:
 12935 ;;		line 60 in file "ccp4.c"
 12936 ;; Parameters:    Size  Location     Type
 12937 ;;		None
 12938 ;; Auto vars:     Size  Location     Type
 12939 ;;		None
 12940 ;; Return value:  Size  Location     Type
 12941 ;;                  1    wreg      void 
 12942 ;; Registers used:
 12943 ;;		None
 12944 ;; Tracked objects:
 12945 ;;		On entry : 0/0
 12946 ;;		On exit  : 0/0
 12947 ;;		Unchanged: 0/0
 12948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12953 ;;Total ram usage:        0 bytes
 12954 ;; Hardware stack levels used: 1
 12955 ;; This function calls:
 12956 ;;		Nothing
 12957 ;; This function is called by:
 12958 ;;		_INTERRUPT_InterruptManager
 12959 ;; This function uses a non-reentrant model
 12960 ;;
 12961                           
 12962  0F1D                     _CCP4_CompareISR:	
 12963                           ;psect for function _CCP4_CompareISR
 12964                           
 12965  0F1D                     i1l3528:	
 12966                           ;incstack = 0
 12967                           ; Regs used in _CCP4_CompareISR: []
 12968                           
 12969                           
 12970                           ;ccp4.c: 63:     PIR4bits.CCP4IF = 0;
 12971  0F1D  0020               	movlb	0	; select bank0
 12972  0F1E  1194               	bcf	20,3	;volatile
 12973  0F1F                     i1l888:
 12974  0F1F  0008               	return
 12975  0F20                     __end_of_CCP4_CompareISR:
 12976                           
 12977                           	psect	text59
 12978  0750                     __ptext59:	
 12979 ;; *************** function _CCP3_CaptureISR *****************
 12980 ;; Defined at:
 12981 ;;		line 78 in file "ccp3.c"
 12982 ;; Parameters:    Size  Location     Type
 12983 ;;		None
 12984 ;; Auto vars:     Size  Location     Type
 12985 ;;  module          2    8[COMMON] struct CCPR3Reg_tag
 12986 ;; Return value:  Size  Location     Type
 12987 ;;                  1    wreg      void 
 12988 ;; Registers used:
 12989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12990 ;; Tracked objects:
 12991 ;;		On entry : 0/0
 12992 ;;		On exit  : 0/0
 12993 ;;		Unchanged: 0/0
 12994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12996 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12998 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12999 ;;Total ram usage:        3 bytes
 13000 ;; Hardware stack levels used: 1
 13001 ;; Hardware stack levels required when called: 2
 13002 ;; This function calls:
 13003 ;;		Absolute function
 13004 ;;		_CCP3_DefaultCallBack
 13005 ;; This function is called by:
 13006 ;;		_INTERRUPT_InterruptManager
 13007 ;; This function uses a non-reentrant model
 13008 ;;
 13009                           
 13010  0750                     _CCP3_CaptureISR:	
 13011                           ;psect for function _CCP3_CaptureISR
 13012                           
 13013  0750                     i1l3446:	
 13014                           ;incstack = 0
 13015                           ; Regs used in _CCP3_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13016                           
 13017                           
 13018                           ;ccp3.c: 80:     CCP3_PERIOD_REG_T module;;ccp3.c: 83:     PIR4bits.CCP3IF = 0;
 13019  0750  0020               	movlb	0	; select bank0
 13020  0751  1114               	bcf	20,2	;volatile
 13021  0752                     i1l3448:
 13022                           
 13023                           ;ccp3.c: 86:     module.ccpr3l = CCPR3L;
 13024  0752  0026               	movlb	6	; select bank6
 13025  0753  0811               	movf	17,w	;volatile
 13026  0754  00F7               	movwf	??_CCP3_CaptureISR
 13027  0755  0877               	movf	??_CCP3_CaptureISR,w
 13028  0756  00F8               	movwf	CCP3_CaptureISR@module
 13029                           
 13030                           ;ccp3.c: 87:     module.ccpr3h = CCPR3H;
 13031  0757  0812               	movf	18,w	;volatile
 13032  0758  00F7               	movwf	??_CCP3_CaptureISR
 13033  0759  0877               	movf	??_CCP3_CaptureISR,w
 13034  075A  00F9               	movwf	CCP3_CaptureISR@module+1
 13035  075B                     i1l3450:
 13036                           
 13037                           ;ccp3.c: 90:     CCP3_CallBack(module.ccpr3_16Bit);
 13038  075B  0879               	movf	CCP3_CaptureISR@module+1,w
 13039  075C  00F4               	movwf	CCP3_DefaultCallBack@capturedValue+1
 13040  075D  0878               	movf	CCP3_CaptureISR@module,w
 13041  075E  00F3               	movwf	CCP3_DefaultCallBack@capturedValue
 13042  075F  0020               	movlb	0	; select bank0
 13043  0760  0831               	movf	_CCP3_CallBack+1,w
 13044  0761  008A               	movwf	10
 13045  0762  0830               	movf	_CCP3_CallBack,w
 13046  0763  000A               	callw
 13047  0764  3187               	pagesel	$
 13048  0765                     i1l439:
 13049  0765  0008               	return
 13050  0766                     __end_of_CCP3_CaptureISR:
 13051                           
 13052                           	psect	text60
 13053  055F                     __ptext60:	
 13054 ;; *************** function _CCP3_DefaultCallBack *****************
 13055 ;; Defined at:
 13056 ;;		line 29 in file "ccp3.c"
 13057 ;; Parameters:    Size  Location     Type
 13058 ;;  capturedValu    2    3[COMMON] unsigned short 
 13059 ;; Auto vars:     Size  Location     Type
 13060 ;;		None
 13061 ;; Return value:  Size  Location     Type
 13062 ;;                  1    wreg      void 
 13063 ;; Registers used:
 13064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13065 ;; Tracked objects:
 13066 ;;		On entry : 0/0
 13067 ;;		On exit  : 0/0
 13068 ;;		Unchanged: 0/0
 13069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13072 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13073 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13074 ;;Total ram usage:        4 bytes
 13075 ;; Hardware stack levels used: 1
 13076 ;; Hardware stack levels required when called: 1
 13077 ;; This function calls:
 13078 ;;		_JSN_GetLastTrig
 13079 ;;		_ReadPin
 13080 ;; This function is called by:
 13081 ;;		_CCP3_Initialize
 13082 ;;		_CCP3_CaptureISR
 13083 ;; This function uses a non-reentrant model
 13084 ;;
 13085                           
 13086  055F                     _CCP3_DefaultCallBack:	
 13087                           ;psect for function _CCP3_DefaultCallBack
 13088                           
 13089  055F                     i1l3328:	
 13090                           ;incstack = 0
 13091                           ; Regs used in _CCP3_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13092                           
 13093                           
 13094                           ;ccp3.c: 29: static void CCP3_DefaultCallBack(uint16_t capturedValue);ccp3.c: 30: {;ccp3
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 13095  055F  318F  271A  3185   	fcall	_JSN_GetLastTrig
 13096  0562  00F5               	movwf	??_CCP3_DefaultCallBack
 13097  0563  0875               	movf	??_CCP3_DefaultCallBack,w
 13098  0564  00FB               	movwf	_lastTrig@ccp3$F969
 13099                           
 13100                           ;ccp3.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 13101  0565  2D7F               	goto	i1l3338
 13102  0566                     i1l3330:
 13103                           
 13104                           ;ccp3.c: 35:             ticksUp = capturedValue;
 13105  0566  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 13106  0567  0020               	movlb	0	; select bank0
 13107  0568  00AF               	movwf	_ticksUp@ccp3$F966+1
 13108  0569  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 13109  056A  00AE               	movwf	_ticksUp@ccp3$F966
 13110                           
 13111                           ;ccp3.c: 36:             break;
 13112  056B  2D96               	goto	i1l433
 13113  056C                     i1l3332:
 13114                           
 13115                           ;ccp3.c: 39:             ticksDown = capturedValue;
 13116  056C  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 13117  056D  0020               	movlb	0	; select bank0
 13118  056E  00AD               	movwf	_ticksDown@ccp3$F967+1
 13119  056F  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 13120  0570  00AC               	movwf	_ticksDown@ccp3$F967
 13121  0571                     i1l3334:
 13122                           
 13123                           ;ccp3.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 13124  0571  082E               	movf	_ticksUp@ccp3$F966,w
 13125  0572  022C               	subwf	_ticksDown@ccp3$F967,w
 13126  0573  00F5               	movwf	??_CCP3_DefaultCallBack
 13127  0574  082F               	movf	_ticksUp@ccp3$F966+1,w
 13128  0575  3B2D               	subwfb	_ticksDown@ccp3$F967+1,w
 13129  0576  00F6               	movwf	??_CCP3_DefaultCallBack+1
 13130  0577  087B               	movf	_lastTrig@ccp3$F969,w
 13131  0578  0086               	movwf	6
 13132  0579  0187               	clrf	7
 13133  057A  0875               	movf	??_CCP3_DefaultCallBack,w
 13134  057B  3FC0               	movwi [0]fsr1
 13135  057C  0876               	movf	??_CCP3_DefaultCallBack+1,w
 13136  057D  3FC1               	movwi [1]fsr1
 13137                           
 13138                           ;ccp3.c: 43:             break;
 13139  057E  2D96               	goto	i1l433
 13140  057F                     i1l3338:
 13141  057F  087B               	movf	_lastTrig@ccp3$F969,w
 13142  0580  3E05               	addlw	5
 13143  0581  0086               	movwf	6
 13144  0582  0187               	clrf	7
 13145  0583  0801               	movf	1,w
 13146  0584  3182  22E5  3185   	fcall	_ReadPin
 13147  0587  00F5               	movwf	??_CCP3_DefaultCallBack
 13148  0588  01F6               	clrf	??_CCP3_DefaultCallBack+1
 13149                           
 13150                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13151                           ; Switch size 1, requested type "simple"
 13152                           ; Number of cases is 1, Range of values is 0 to 0
 13153                           ; switch strategies available:
 13154                           ; Name         Instructions Cycles
 13155                           ; simple_byte            4     3 (average)
 13156                           ; direct_byte            8     6 (fixed)
 13157                           ; jumptable            260     6 (fixed)
 13158                           ;	Chosen strategy is simple_byte
 13159  0589  0876               	movf	??_CCP3_DefaultCallBack+1,w
 13160  058A  3A00               	xorlw	0	; case 0
 13161  058B  1903               	skipnz
 13162  058C  2D8E               	goto	i1l3950
 13163  058D  2D96               	goto	i1l433
 13164  058E                     i1l3950:
 13165                           
 13166                           ; Switch size 1, requested type "simple"
 13167                           ; Number of cases is 2, Range of values is 0 to 1
 13168                           ; switch strategies available:
 13169                           ; Name         Instructions Cycles
 13170                           ; simple_byte            7     4 (average)
 13171                           ; direct_byte           10     6 (fixed)
 13172                           ; jumptable            260     6 (fixed)
 13173                           ;	Chosen strategy is simple_byte
 13174  058E  0875               	movf	??_CCP3_DefaultCallBack,w
 13175  058F  3A00               	xorlw	0	; case 0
 13176  0590  1903               	skipnz
 13177  0591  2D6C               	goto	i1l3332
 13178  0592  3A01               	xorlw	1	; case 1
 13179  0593  1903               	skipnz
 13180  0594  2D66               	goto	i1l3330
 13181  0595  2D96               	goto	i1l433
 13182  0596                     i1l433:
 13183  0596  0008               	return
 13184  0597                     __end_of_CCP3_DefaultCallBack:
 13185                           
 13186                           	psect	text61
 13187  0766                     __ptext61:	
 13188 ;; *************** function _CCP2_CaptureISR *****************
 13189 ;; Defined at:
 13190 ;;		line 78 in file "ccp2.c"
 13191 ;; Parameters:    Size  Location     Type
 13192 ;;		None
 13193 ;; Auto vars:     Size  Location     Type
 13194 ;;  module          2    8[COMMON] struct CCPR2Reg_tag
 13195 ;; Return value:  Size  Location     Type
 13196 ;;                  1    wreg      void 
 13197 ;; Registers used:
 13198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13199 ;; Tracked objects:
 13200 ;;		On entry : 0/0
 13201 ;;		On exit  : 0/0
 13202 ;;		Unchanged: 0/0
 13203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13207 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13208 ;;Total ram usage:        3 bytes
 13209 ;; Hardware stack levels used: 1
 13210 ;; Hardware stack levels required when called: 2
 13211 ;; This function calls:
 13212 ;;		Absolute function
 13213 ;;		_CCP2_DefaultCallBack
 13214 ;; This function is called by:
 13215 ;;		_INTERRUPT_InterruptManager
 13216 ;; This function uses a non-reentrant model
 13217 ;;
 13218                           
 13219  0766                     _CCP2_CaptureISR:	
 13220                           ;psect for function _CCP2_CaptureISR
 13221                           
 13222  0766                     i1l3440:	
 13223                           ;incstack = 0
 13224                           ; Regs used in _CCP2_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13225                           
 13226                           
 13227                           ;ccp2.c: 80:     CCP2_PERIOD_REG_T module;;ccp2.c: 83:     PIR4bits.CCP2IF = 0;
 13228  0766  0020               	movlb	0	; select bank0
 13229  0767  1094               	bcf	20,1	;volatile
 13230  0768                     i1l3442:
 13231                           
 13232                           ;ccp2.c: 86:     module.ccpr2l = CCPR2L;
 13233  0768  0025               	movlb	5	; select bank5
 13234  0769  0815               	movf	21,w	;volatile
 13235  076A  00F7               	movwf	??_CCP2_CaptureISR
 13236  076B  0877               	movf	??_CCP2_CaptureISR,w
 13237  076C  00F8               	movwf	CCP2_CaptureISR@module
 13238                           
 13239                           ;ccp2.c: 87:     module.ccpr2h = CCPR2H;
 13240  076D  0816               	movf	22,w	;volatile
 13241  076E  00F7               	movwf	??_CCP2_CaptureISR
 13242  076F  0877               	movf	??_CCP2_CaptureISR,w
 13243  0770  00F9               	movwf	CCP2_CaptureISR@module+1
 13244  0771                     i1l3444:
 13245                           
 13246                           ;ccp2.c: 90:     CCP2_CallBack(module.ccpr2_16Bit);
 13247  0771  0879               	movf	CCP2_CaptureISR@module+1,w
 13248  0772  00F4               	movwf	CCP2_DefaultCallBack@capturedValue+1
 13249  0773  0878               	movf	CCP2_CaptureISR@module,w
 13250  0774  00F3               	movwf	CCP2_DefaultCallBack@capturedValue
 13251  0775  0020               	movlb	0	; select bank0
 13252  0776  0837               	movf	_CCP2_CallBack+1,w
 13253  0777  008A               	movwf	10
 13254  0778  0836               	movf	_CCP2_CallBack,w
 13255  0779  000A               	callw
 13256  077A  3187               	pagesel	$
 13257  077B                     i1l393:
 13258  077B  0008               	return
 13259  077C                     __end_of_CCP2_CaptureISR:
 13260                           
 13261                           	psect	text62
 13262  0597                     __ptext62:	
 13263 ;; *************** function _CCP2_DefaultCallBack *****************
 13264 ;; Defined at:
 13265 ;;		line 29 in file "ccp2.c"
 13266 ;; Parameters:    Size  Location     Type
 13267 ;;  capturedValu    2    3[COMMON] unsigned short 
 13268 ;; Auto vars:     Size  Location     Type
 13269 ;;		None
 13270 ;; Return value:  Size  Location     Type
 13271 ;;                  1    wreg      void 
 13272 ;; Registers used:
 13273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13274 ;; Tracked objects:
 13275 ;;		On entry : 0/0
 13276 ;;		On exit  : 0/0
 13277 ;;		Unchanged: 0/0
 13278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13281 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13282 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13283 ;;Total ram usage:        4 bytes
 13284 ;; Hardware stack levels used: 1
 13285 ;; Hardware stack levels required when called: 1
 13286 ;; This function calls:
 13287 ;;		_JSN_GetLastTrig
 13288 ;;		_ReadPin
 13289 ;; This function is called by:
 13290 ;;		_CCP2_Initialize
 13291 ;;		_CCP2_CaptureISR
 13292 ;; This function uses a non-reentrant model
 13293 ;;
 13294                           
 13295  0597                     _CCP2_DefaultCallBack:	
 13296                           ;psect for function _CCP2_DefaultCallBack
 13297                           
 13298  0597                     i1l3312:	
 13299                           ;incstack = 0
 13300                           ; Regs used in _CCP2_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13301                           
 13302                           
 13303                           ;ccp2.c: 29: static void CCP2_DefaultCallBack(uint16_t capturedValue);ccp2.c: 30: {;ccp2
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 13304  0597  318F  271A  3185   	fcall	_JSN_GetLastTrig
 13305  059A  00F5               	movwf	??_CCP2_DefaultCallBack
 13306  059B  0875               	movf	??_CCP2_DefaultCallBack,w
 13307  059C  00FC               	movwf	_lastTrig@ccp2$F848
 13308                           
 13309                           ;ccp2.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 13310  059D  2DB7               	goto	i1l3322
 13311  059E                     i1l3314:
 13312                           
 13313                           ;ccp2.c: 35:             ticksUp = capturedValue;
 13314  059E  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 13315  059F  0020               	movlb	0	; select bank0
 13316  05A0  00B5               	movwf	_ticksUp@ccp2$F845+1
 13317  05A1  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 13318  05A2  00B4               	movwf	_ticksUp@ccp2$F845
 13319                           
 13320                           ;ccp2.c: 36:             break;
 13321  05A3  2DCE               	goto	i1l387
 13322  05A4                     i1l3316:
 13323                           
 13324                           ;ccp2.c: 39:             ticksDown = capturedValue;
 13325  05A4  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 13326  05A5  0020               	movlb	0	; select bank0
 13327  05A6  00B3               	movwf	_ticksDown@ccp2$F846+1
 13328  05A7  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 13329  05A8  00B2               	movwf	_ticksDown@ccp2$F846
 13330  05A9                     i1l3318:
 13331                           
 13332                           ;ccp2.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 13333  05A9  0834               	movf	_ticksUp@ccp2$F845,w
 13334  05AA  0232               	subwf	_ticksDown@ccp2$F846,w
 13335  05AB  00F5               	movwf	??_CCP2_DefaultCallBack
 13336  05AC  0835               	movf	_ticksUp@ccp2$F845+1,w
 13337  05AD  3B33               	subwfb	_ticksDown@ccp2$F846+1,w
 13338  05AE  00F6               	movwf	??_CCP2_DefaultCallBack+1
 13339  05AF  087C               	movf	_lastTrig@ccp2$F848,w
 13340  05B0  0086               	movwf	6
 13341  05B1  0187               	clrf	7
 13342  05B2  0875               	movf	??_CCP2_DefaultCallBack,w
 13343  05B3  3FC0               	movwi [0]fsr1
 13344  05B4  0876               	movf	??_CCP2_DefaultCallBack+1,w
 13345  05B5  3FC1               	movwi [1]fsr1
 13346                           
 13347                           ;ccp2.c: 43:             break;
 13348  05B6  2DCE               	goto	i1l387
 13349  05B7                     i1l3322:
 13350  05B7  087C               	movf	_lastTrig@ccp2$F848,w
 13351  05B8  3E05               	addlw	5
 13352  05B9  0086               	movwf	6
 13353  05BA  0187               	clrf	7
 13354  05BB  0801               	movf	1,w
 13355  05BC  3182  22E5  3185   	fcall	_ReadPin
 13356  05BF  00F5               	movwf	??_CCP2_DefaultCallBack
 13357  05C0  01F6               	clrf	??_CCP2_DefaultCallBack+1
 13358                           
 13359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13360                           ; Switch size 1, requested type "simple"
 13361                           ; Number of cases is 1, Range of values is 0 to 0
 13362                           ; switch strategies available:
 13363                           ; Name         Instructions Cycles
 13364                           ; simple_byte            4     3 (average)
 13365                           ; direct_byte            8     6 (fixed)
 13366                           ; jumptable            260     6 (fixed)
 13367                           ;	Chosen strategy is simple_byte
 13368  05C1  0876               	movf	??_CCP2_DefaultCallBack+1,w
 13369  05C2  3A00               	xorlw	0	; case 0
 13370  05C3  1903               	skipnz
 13371  05C4  2DC6               	goto	i1l3952
 13372  05C5  2DCE               	goto	i1l387
 13373  05C6                     i1l3952:
 13374                           
 13375                           ; Switch size 1, requested type "simple"
 13376                           ; Number of cases is 2, Range of values is 0 to 1
 13377                           ; switch strategies available:
 13378                           ; Name         Instructions Cycles
 13379                           ; simple_byte            7     4 (average)
 13380                           ; direct_byte           10     6 (fixed)
 13381                           ; jumptable            260     6 (fixed)
 13382                           ;	Chosen strategy is simple_byte
 13383  05C6  0875               	movf	??_CCP2_DefaultCallBack,w
 13384  05C7  3A00               	xorlw	0	; case 0
 13385  05C8  1903               	skipnz
 13386  05C9  2DA4               	goto	i1l3316
 13387  05CA  3A01               	xorlw	1	; case 1
 13388  05CB  1903               	skipnz
 13389  05CC  2D9E               	goto	i1l3314
 13390  05CD  2DCE               	goto	i1l387
 13391  05CE                     i1l387:
 13392  05CE  0008               	return
 13393  05CF                     __end_of_CCP2_DefaultCallBack:
 13394                           
 13395                           	psect	text63
 13396  077C                     __ptext63:	
 13397 ;; *************** function _CCP1_CaptureISR *****************
 13398 ;; Defined at:
 13399 ;;		line 78 in file "ccp1.c"
 13400 ;; Parameters:    Size  Location     Type
 13401 ;;		None
 13402 ;; Auto vars:     Size  Location     Type
 13403 ;;  module          2    8[COMMON] struct CCPR1Reg_tag
 13404 ;; Return value:  Size  Location     Type
 13405 ;;                  1    wreg      void 
 13406 ;; Registers used:
 13407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13408 ;; Tracked objects:
 13409 ;;		On entry : 0/0
 13410 ;;		On exit  : 0/0
 13411 ;;		Unchanged: 0/0
 13412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13415 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13416 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13417 ;;Total ram usage:        3 bytes
 13418 ;; Hardware stack levels used: 1
 13419 ;; Hardware stack levels required when called: 2
 13420 ;; This function calls:
 13421 ;;		Absolute function
 13422 ;;		_CCP1_DefaultCallBack
 13423 ;; This function is called by:
 13424 ;;		_INTERRUPT_InterruptManager
 13425 ;; This function uses a non-reentrant model
 13426 ;;
 13427                           
 13428  077C                     _CCP1_CaptureISR:	
 13429                           ;psect for function _CCP1_CaptureISR
 13430                           
 13431  077C                     i1l3434:	
 13432                           ;incstack = 0
 13433                           ; Regs used in _CCP1_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13434                           
 13435                           
 13436                           ;ccp1.c: 80:     CCP1_PERIOD_REG_T module;;ccp1.c: 83:     PIR4bits.CCP1IF = 0;
 13437  077C  0020               	movlb	0	; select bank0
 13438  077D  1014               	bcf	20,0	;volatile
 13439  077E                     i1l3436:
 13440                           
 13441                           ;ccp1.c: 86:     module.ccpr1l = CCPR1L;
 13442  077E  0025               	movlb	5	; select bank5
 13443  077F  0811               	movf	17,w	;volatile
 13444  0780  00F7               	movwf	??_CCP1_CaptureISR
 13445  0781  0877               	movf	??_CCP1_CaptureISR,w
 13446  0782  00F8               	movwf	CCP1_CaptureISR@module
 13447                           
 13448                           ;ccp1.c: 87:     module.ccpr1h = CCPR1H;
 13449  0783  0812               	movf	18,w	;volatile
 13450  0784  00F7               	movwf	??_CCP1_CaptureISR
 13451  0785  0877               	movf	??_CCP1_CaptureISR,w
 13452  0786  00F9               	movwf	CCP1_CaptureISR@module+1
 13453  0787                     i1l3438:
 13454                           
 13455                           ;ccp1.c: 90:     CCP1_CallBack(module.ccpr1_16Bit);
 13456  0787  0879               	movf	CCP1_CaptureISR@module+1,w
 13457  0788  00F4               	movwf	CCP1_DefaultCallBack@capturedValue+1
 13458  0789  0878               	movf	CCP1_CaptureISR@module,w
 13459  078A  00F3               	movwf	CCP1_DefaultCallBack@capturedValue
 13460  078B  0020               	movlb	0	; select bank0
 13461  078C  083D               	movf	_CCP1_CallBack+1,w
 13462  078D  008A               	movwf	10
 13463  078E  083C               	movf	_CCP1_CallBack,w
 13464  078F  000A               	callw
 13465  0790  3187               	pagesel	$
 13466  0791                     i1l347:
 13467  0791  0008               	return
 13468  0792                     __end_of_CCP1_CaptureISR:
 13469                           
 13470                           	psect	text64
 13471  05CF                     __ptext64:	
 13472 ;; *************** function _CCP1_DefaultCallBack *****************
 13473 ;; Defined at:
 13474 ;;		line 29 in file "ccp1.c"
 13475 ;; Parameters:    Size  Location     Type
 13476 ;;  capturedValu    2    3[COMMON] unsigned short 
 13477 ;; Auto vars:     Size  Location     Type
 13478 ;;		None
 13479 ;; Return value:  Size  Location     Type
 13480 ;;                  1    wreg      void 
 13481 ;; Registers used:
 13482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13483 ;; Tracked objects:
 13484 ;;		On entry : 0/0
 13485 ;;		On exit  : 0/0
 13486 ;;		Unchanged: 0/0
 13487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13491 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13492 ;;Total ram usage:        4 bytes
 13493 ;; Hardware stack levels used: 1
 13494 ;; Hardware stack levels required when called: 1
 13495 ;; This function calls:
 13496 ;;		_JSN_GetLastTrig
 13497 ;;		_ReadPin
 13498 ;; This function is called by:
 13499 ;;		_CCP1_Initialize
 13500 ;;		_CCP1_CaptureISR
 13501 ;; This function uses a non-reentrant model
 13502 ;;
 13503                           
 13504  05CF                     _CCP1_DefaultCallBack:	
 13505                           ;psect for function _CCP1_DefaultCallBack
 13506                           
 13507  05CF                     i1l3296:	
 13508                           ;incstack = 0
 13509                           ; Regs used in _CCP1_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13510                           
 13511                           
 13512                           ;ccp1.c: 29: static void CCP1_DefaultCallBack(uint16_t capturedValue);ccp1.c: 30: {;ccp1
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 13513  05CF  318F  271A  3185   	fcall	_JSN_GetLastTrig
 13514  05D2  00F5               	movwf	??_CCP1_DefaultCallBack
 13515  05D3  0875               	movf	??_CCP1_DefaultCallBack,w
 13516  05D4  00FD               	movwf	_lastTrig@ccp1$F706
 13517                           
 13518                           ;ccp1.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 13519  05D5  2DEF               	goto	i1l3306
 13520  05D6                     i1l3298:
 13521                           
 13522                           ;ccp1.c: 35:             ticksUp = capturedValue;
 13523  05D6  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 13524  05D7  0020               	movlb	0	; select bank0
 13525  05D8  00BB               	movwf	_ticksUp+1
 13526  05D9  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 13527  05DA  00BA               	movwf	_ticksUp
 13528                           
 13529                           ;ccp1.c: 36:             break;
 13530  05DB  2E06               	goto	i1l341
 13531  05DC                     i1l3300:
 13532                           
 13533                           ;ccp1.c: 39:             ticksDown = capturedValue;
 13534  05DC  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 13535  05DD  0020               	movlb	0	; select bank0
 13536  05DE  00B9               	movwf	_ticksDown+1
 13537  05DF  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 13538  05E0  00B8               	movwf	_ticksDown
 13539  05E1                     i1l3302:
 13540                           
 13541                           ;ccp1.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 13542  05E1  083A               	movf	_ticksUp,w
 13543  05E2  0238               	subwf	_ticksDown,w
 13544  05E3  00F5               	movwf	??_CCP1_DefaultCallBack
 13545  05E4  083B               	movf	_ticksUp+1,w
 13546  05E5  3B39               	subwfb	_ticksDown+1,w
 13547  05E6  00F6               	movwf	??_CCP1_DefaultCallBack+1
 13548  05E7  087D               	movf	_lastTrig@ccp1$F706,w
 13549  05E8  0086               	movwf	6
 13550  05E9  0187               	clrf	7
 13551  05EA  0875               	movf	??_CCP1_DefaultCallBack,w
 13552  05EB  3FC0               	movwi [0]fsr1
 13553  05EC  0876               	movf	??_CCP1_DefaultCallBack+1,w
 13554  05ED  3FC1               	movwi [1]fsr1
 13555                           
 13556                           ;ccp1.c: 43:             break;
 13557  05EE  2E06               	goto	i1l341
 13558  05EF                     i1l3306:
 13559  05EF  087D               	movf	_lastTrig@ccp1$F706,w
 13560  05F0  3E05               	addlw	5
 13561  05F1  0086               	movwf	6
 13562  05F2  0187               	clrf	7
 13563  05F3  0801               	movf	1,w
 13564  05F4  3182  22E5  3185   	fcall	_ReadPin
 13565  05F7  00F5               	movwf	??_CCP1_DefaultCallBack
 13566  05F8  01F6               	clrf	??_CCP1_DefaultCallBack+1
 13567                           
 13568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13569                           ; Switch size 1, requested type "simple"
 13570                           ; Number of cases is 1, Range of values is 0 to 0
 13571                           ; switch strategies available:
 13572                           ; Name         Instructions Cycles
 13573                           ; simple_byte            4     3 (average)
 13574                           ; direct_byte            8     6 (fixed)
 13575                           ; jumptable            260     6 (fixed)
 13576                           ;	Chosen strategy is simple_byte
 13577  05F9  0876               	movf	??_CCP1_DefaultCallBack+1,w
 13578  05FA  3A00               	xorlw	0	; case 0
 13579  05FB  1903               	skipnz
 13580  05FC  2DFE               	goto	i1l3954
 13581  05FD  2E06               	goto	i1l341
 13582  05FE                     i1l3954:
 13583                           
 13584                           ; Switch size 1, requested type "simple"
 13585                           ; Number of cases is 2, Range of values is 0 to 1
 13586                           ; switch strategies available:
 13587                           ; Name         Instructions Cycles
 13588                           ; simple_byte            7     4 (average)
 13589                           ; direct_byte           10     6 (fixed)
 13590                           ; jumptable            260     6 (fixed)
 13591                           ;	Chosen strategy is simple_byte
 13592  05FE  0875               	movf	??_CCP1_DefaultCallBack,w
 13593  05FF  3A00               	xorlw	0	; case 0
 13594  0600  1903               	skipnz
 13595  0601  2DDC               	goto	i1l3300
 13596  0602  3A01               	xorlw	1	; case 1
 13597  0603  1903               	skipnz
 13598  0604  2DD6               	goto	i1l3298
 13599  0605  2E06               	goto	i1l341
 13600  0606                     i1l341:
 13601  0606  0008               	return
 13602  0607                     __end_of_CCP1_DefaultCallBack:
 13603                           
 13604                           	psect	text65
 13605  02E5                     __ptext65:	
 13606 ;; *************** function _ReadPin *****************
 13607 ;; Defined at:
 13608 ;;		line 103 in file "PIC16Xpress_DevBoard.c"
 13609 ;; Parameters:    Size  Location     Type
 13610 ;;  pin             1    wreg     enum E7144
 13611 ;; Auto vars:     Size  Location     Type
 13612 ;;  pin             1    2[COMMON] enum E7144
 13613 ;; Return value:  Size  Location     Type
 13614 ;;                  1    wreg      unsigned char 
 13615 ;; Registers used:
 13616 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13617 ;; Tracked objects:
 13618 ;;		On entry : 0/0
 13619 ;;		On exit  : 0/0
 13620 ;;		Unchanged: 0/0
 13621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13624 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13625 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13626 ;;Total ram usage:        3 bytes
 13627 ;; Hardware stack levels used: 1
 13628 ;; This function calls:
 13629 ;;		Nothing
 13630 ;; This function is called by:
 13631 ;;		_CCP1_DefaultCallBack
 13632 ;;		_CCP2_DefaultCallBack
 13633 ;;		_CCP3_DefaultCallBack
 13634 ;; This function uses a non-reentrant model
 13635 ;;
 13636                           
 13637  02E5                     _ReadPin:	
 13638                           ;psect for function _ReadPin
 13639                           
 13640                           
 13641                           ;incstack = 0
 13642                           ; Regs used in _ReadPin: [wreg-fsr0h+status,2+status,0]
 13643                           ;ReadPin@pin stored from wreg
 13644  02E5  00F2               	movwf	ReadPin@pin
 13645  02E6                     i1l2800:
 13646                           
 13647                           ;PIC16Xpress_DevBoard.c: 104:     switch(pin) {
 13648  02E6  2B3B               	goto	i1l2880
 13649  02E7                     i1l2802:
 13650                           
 13651                           ;PIC16Xpress_DevBoard.c: 106:             return PORTAbits.RA5;
 13652  02E7  0020               	movlb	0	; select bank0
 13653  02E8  0E0C               	swapf	12,w	;volatile
 13654  02E9  0C89               	rrf	9,f
 13655  02EA  3901               	andlw	1
 13656  02EB  2B7B               	goto	i1l130
 13657  02EC                     i1l2806:
 13658                           
 13659                           ;PIC16Xpress_DevBoard.c: 108:             return PORTAbits.RA4;
 13660  02EC  0020               	movlb	0	; select bank0
 13661  02ED  0E0C               	swapf	12,w	;volatile
 13662  02EE  3901               	andlw	1
 13663  02EF  2B7B               	goto	i1l130
 13664  02F0                     i1l2810:
 13665                           
 13666                           ;PIC16Xpress_DevBoard.c: 110:             return 0xFF;
 13667  02F0  30FF               	movlw	255
 13668  02F1  2B7B               	goto	i1l130
 13669  02F2                     i1l2814:
 13670                           
 13671                           ;PIC16Xpress_DevBoard.c: 112:             return PORTCbits.RC5;
 13672  02F2  0020               	movlb	0	; select bank0
 13673  02F3  0E0E               	swapf	14,w	;volatile
 13674  02F4  0C89               	rrf	9,f
 13675  02F5  3901               	andlw	1
 13676  02F6  2B7B               	goto	i1l130
 13677  02F7                     i1l2818:
 13678                           
 13679                           ;PIC16Xpress_DevBoard.c: 114:             return PORTCbits.RC4;
 13680  02F7  0020               	movlb	0	; select bank0
 13681  02F8  0E0E               	swapf	14,w	;volatile
 13682  02F9  3901               	andlw	1
 13683  02FA  2B7B               	goto	i1l130
 13684  02FB                     i1l2822:
 13685                           
 13686                           ;PIC16Xpress_DevBoard.c: 116:             return PORTCbits.RC3;
 13687  02FB  0020               	movlb	0	; select bank0
 13688  02FC  0C0E               	rrf	14,w	;volatile
 13689  02FD  00F0               	movwf	??_ReadPin
 13690  02FE  0CF0               	rrf	??_ReadPin,f
 13691  02FF  0C70               	rrf	??_ReadPin,w
 13692  0300  3901               	andlw	1
 13693  0301  2B7B               	goto	i1l130
 13694  0302                     i1l2826:
 13695                           
 13696                           ;PIC16Xpress_DevBoard.c: 118:             return PORTCbits.RC6;
 13697  0302  0020               	movlb	0	; select bank0
 13698  0303  0E0E               	swapf	14,w	;volatile
 13699  0304  0C89               	rrf	9,f
 13700  0305  0C89               	rrf	9,f
 13701  0306  3901               	andlw	1
 13702  0307  2B7B               	goto	i1l130
 13703  0308                     i1l2830:
 13704                           
 13705                           ;PIC16Xpress_DevBoard.c: 120:             return PORTCbits.RC7;
 13706  0308  0020               	movlb	0	; select bank0
 13707  0309  0D0E               	rlf	14,w	;volatile
 13708  030A  0D0E               	rlf	14,w	;volatile
 13709  030B  3901               	andlw	1
 13710  030C  2B7B               	goto	i1l130
 13711  030D                     i1l2834:
 13712                           
 13713                           ;PIC16Xpress_DevBoard.c: 122:             return PORTBbits.RB7;
 13714  030D  0020               	movlb	0	; select bank0
 13715  030E  0D0D               	rlf	13,w	;volatile
 13716  030F  0D0D               	rlf	13,w	;volatile
 13717  0310  3901               	andlw	1
 13718  0311  2B7B               	goto	i1l130
 13719  0312                     i1l2838:
 13720                           
 13721                           ;PIC16Xpress_DevBoard.c: 124:             return PORTAbits.RA0;
 13722  0312  0020               	movlb	0	; select bank0
 13723  0313  080C               	movf	12,w	;volatile
 13724  0314  3901               	andlw	1
 13725  0315  2B7B               	goto	i1l130
 13726  0316                     i1l2842:
 13727                           
 13728                           ;PIC16Xpress_DevBoard.c: 126:             return PORTAbits.RA1;
 13729  0316  0020               	movlb	0	; select bank0
 13730  0317  0C0C               	rrf	12,w	;volatile
 13731  0318  3901               	andlw	1
 13732  0319  2B7B               	goto	i1l130
 13733  031A                     i1l2846:
 13734                           
 13735                           ;PIC16Xpress_DevBoard.c: 128:             return PORTAbits.RA2;
 13736  031A  0020               	movlb	0	; select bank0
 13737  031B  0C0C               	rrf	12,w	;volatile
 13738  031C  0C89               	rrf	9,f
 13739  031D  3901               	andlw	1
 13740  031E  2B7B               	goto	i1l130
 13741  031F                     i1l2850:
 13742                           
 13743                           ;PIC16Xpress_DevBoard.c: 130:             return PORTCbits.RC0;
 13744  031F  0020               	movlb	0	; select bank0
 13745  0320  080E               	movf	14,w	;volatile
 13746  0321  3901               	andlw	1
 13747  0322  2B7B               	goto	i1l130
 13748  0323                     i1l2854:
 13749                           
 13750                           ;PIC16Xpress_DevBoard.c: 132:             return PORTCbits.RC1;
 13751  0323  0020               	movlb	0	; select bank0
 13752  0324  0C0E               	rrf	14,w	;volatile
 13753  0325  3901               	andlw	1
 13754  0326  2B7B               	goto	i1l130
 13755  0327                     i1l2858:
 13756                           
 13757                           ;PIC16Xpress_DevBoard.c: 134:             return PORTCbits.RC2;
 13758  0327  0020               	movlb	0	; select bank0
 13759  0328  0C0E               	rrf	14,w	;volatile
 13760  0329  0C89               	rrf	9,f
 13761  032A  3901               	andlw	1
 13762  032B  2B7B               	goto	i1l130
 13763  032C                     i1l2862:
 13764                           
 13765                           ;PIC16Xpress_DevBoard.c: 136:             return PORTBbits.RB4;
 13766  032C  0020               	movlb	0	; select bank0
 13767  032D  0E0D               	swapf	13,w	;volatile
 13768  032E  3901               	andlw	1
 13769  032F  2B7B               	goto	i1l130
 13770  0330                     i1l2866:
 13771                           
 13772                           ;PIC16Xpress_DevBoard.c: 138:             return PORTBbits.RB5;
 13773  0330  0020               	movlb	0	; select bank0
 13774  0331  0E0D               	swapf	13,w	;volatile
 13775  0332  0C89               	rrf	9,f
 13776  0333  3901               	andlw	1
 13777  0334  2B7B               	goto	i1l130
 13778  0335                     i1l2870:
 13779                           
 13780                           ;PIC16Xpress_DevBoard.c: 140:             return PORTBbits.RB6;
 13781  0335  0020               	movlb	0	; select bank0
 13782  0336  0E0D               	swapf	13,w	;volatile
 13783  0337  0C89               	rrf	9,f
 13784  0338  0C89               	rrf	9,f
 13785  0339  3901               	andlw	1
 13786  033A  2B7B               	goto	i1l130
 13787  033B                     i1l2880:
 13788  033B  0872               	movf	ReadPin@pin,w
 13789  033C  00F0               	movwf	??_ReadPin
 13790  033D  01F1               	clrf	??_ReadPin+1
 13791                           
 13792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13793                           ; Switch size 1, requested type "simple"
 13794                           ; Number of cases is 1, Range of values is 0 to 0
 13795                           ; switch strategies available:
 13796                           ; Name         Instructions Cycles
 13797                           ; simple_byte            4     3 (average)
 13798                           ; direct_byte            8     6 (fixed)
 13799                           ; jumptable            260     6 (fixed)
 13800                           ;	Chosen strategy is simple_byte
 13801  033E  0871               	movf	??_ReadPin+1,w
 13802  033F  3A00               	xorlw	0	; case 0
 13803  0340  1903               	skipnz
 13804  0341  2B43               	goto	i1l3956
 13805  0342  2AF0               	goto	i1l2810
 13806  0343                     i1l3956:
 13807                           
 13808                           ; Switch size 1, requested type "simple"
 13809                           ; Number of cases is 18, Range of values is 0 to 17
 13810                           ; switch strategies available:
 13811                           ; Name         Instructions Cycles
 13812                           ; direct_byte           42     6 (fixed)
 13813                           ; simple_byte           55    28 (average)
 13814                           ; jumptable            260     6 (fixed)
 13815                           ;	Chosen strategy is simple_byte
 13816  0343  0870               	movf	??_ReadPin,w
 13817  0344  3A00               	xorlw	0	; case 0
 13818  0345  1903               	skipnz
 13819  0346  2AE7               	goto	i1l2802
 13820  0347  3A01               	xorlw	1	; case 1
 13821  0348  1903               	skipnz
 13822  0349  2AEC               	goto	i1l2806
 13823  034A  3A03               	xorlw	3	; case 2
 13824  034B  1903               	skipnz
 13825  034C  2AF0               	goto	i1l2810
 13826  034D  3A01               	xorlw	1	; case 3
 13827  034E  1903               	skipnz
 13828  034F  2AF2               	goto	i1l2814
 13829  0350  3A07               	xorlw	7	; case 4
 13830  0351  1903               	skipnz
 13831  0352  2AF7               	goto	i1l2818
 13832  0353  3A01               	xorlw	1	; case 5
 13833  0354  1903               	skipnz
 13834  0355  2AFB               	goto	i1l2822
 13835  0356  3A03               	xorlw	3	; case 6
 13836  0357  1903               	skipnz
 13837  0358  2B02               	goto	i1l2826
 13838  0359  3A01               	xorlw	1	; case 7
 13839  035A  1903               	skipnz
 13840  035B  2B08               	goto	i1l2830
 13841  035C  3A0F               	xorlw	15	; case 8
 13842  035D  1903               	skipnz
 13843  035E  2B0D               	goto	i1l2834
 13844  035F  3A01               	xorlw	1	; case 9
 13845  0360  1903               	skipnz
 13846  0361  2B12               	goto	i1l2838
 13847  0362  3A03               	xorlw	3	; case 10
 13848  0363  1903               	skipnz
 13849  0364  2B16               	goto	i1l2842
 13850  0365  3A01               	xorlw	1	; case 11
 13851  0366  1903               	skipnz
 13852  0367  2B1A               	goto	i1l2846
 13853  0368  3A07               	xorlw	7	; case 12
 13854  0369  1903               	skipnz
 13855  036A  2B1F               	goto	i1l2850
 13856  036B  3A01               	xorlw	1	; case 13
 13857  036C  1903               	skipnz
 13858  036D  2B23               	goto	i1l2854
 13859  036E  3A03               	xorlw	3	; case 14
 13860  036F  1903               	skipnz
 13861  0370  2B27               	goto	i1l2858
 13862  0371  3A01               	xorlw	1	; case 15
 13863  0372  1903               	skipnz
 13864  0373  2B2C               	goto	i1l2862
 13865  0374  3A1F               	xorlw	31	; case 16
 13866  0375  1903               	skipnz
 13867  0376  2B30               	goto	i1l2866
 13868  0377  3A01               	xorlw	1	; case 17
 13869  0378  1903               	skipnz
 13870  0379  2B35               	goto	i1l2870
 13871  037A  2AF0               	goto	i1l2810
 13872  037B                     i1l130:
 13873  037B  0008               	return
 13874  037C                     __end_of_ReadPin:
 13875                           
 13876                           	psect	text66
 13877  0F1A                     __ptext66:	
 13878 ;; *************** function _JSN_GetLastTrig *****************
 13879 ;; Defined at:
 13880 ;;		line 119 in file "JSN_Sensor.c"
 13881 ;; Parameters:    Size  Location     Type
 13882 ;;		None
 13883 ;; Auto vars:     Size  Location     Type
 13884 ;;		None
 13885 ;; Return value:  Size  Location     Type
 13886 ;;                  1    wreg      PTR struct .
 13887 ;; Registers used:
 13888 ;;		wreg
 13889 ;; Tracked objects:
 13890 ;;		On entry : 0/0
 13891 ;;		On exit  : 0/0
 13892 ;;		Unchanged: 0/0
 13893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13898 ;;Total ram usage:        0 bytes
 13899 ;; Hardware stack levels used: 1
 13900 ;; This function calls:
 13901 ;;		Nothing
 13902 ;; This function is called by:
 13903 ;;		_CCP1_DefaultCallBack
 13904 ;;		_CCP2_DefaultCallBack
 13905 ;;		_CCP3_DefaultCallBack
 13906 ;; This function uses a non-reentrant model
 13907 ;;
 13908                           
 13909  0F1A                     _JSN_GetLastTrig:	
 13910                           ;psect for function _JSN_GetLastTrig
 13911                           
 13912  0F1A                     i1l2796:	
 13913                           ;incstack = 0
 13914                           ; Regs used in _JSN_GetLastTrig: [wreg]
 13915                           
 13916                           
 13917                           ;JSN_Sensor.c: 120:     return lastTrig;
 13918  0F1A  0020               	movlb	0	; select bank0
 13919  0F1B  0849               	movf	_lastTrig,w
 13920  0F1C                     i1l56:
 13921  0F1C  0008               	return
 13922  0F1D                     __end_of_JSN_GetLastTrig:
 13923  007E                     btemp	set	126	;btemp
 13924  007E                     int$flags	set	126
 13925  007E                     wtemp0	set	126
 13926                           
 13927                           	psect	idloc
 13928                           
 13929                           ;Config register IDLOC0 @ 0x8000
 13930                           ;	unspecified, using default values
 13931  8000                     	org	32768
 13932  8000  3FFF               	dw	16383
 13933                           
 13934                           ;Config register IDLOC1 @ 0x8001
 13935                           ;	unspecified, using default values
 13936  8001                     	org	32769
 13937  8001  3FFF               	dw	16383
 13938                           
 13939                           ;Config register IDLOC2 @ 0x8002
 13940                           ;	unspecified, using default values
 13941  8002                     	org	32770
 13942  8002  3FFF               	dw	16383
 13943                           
 13944                           ;Config register IDLOC3 @ 0x8003
 13945                           ;	unspecified, using default values
 13946  8003                     	org	32771
 13947  8003  3FFF               	dw	16383
 13948                           
 13949                           	psect	config
 13950                           
 13951                           ;Config register CONFIG1 @ 0x8007
 13952                           ;	FEXTOSC External Oscillator mode Selection bits
 13953                           ;	FEXTOSC = OFF, Oscillator not enabled
 13954                           ;	Power-up default value for COSC bits
 13955                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 13956                           ;	Clock Out Enable bit
 13957                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 13958                           ;	Clock Switch Enable bit
 13959                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13960                           ;	Fail-Safe Clock Monitor Enable
 13961                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13962  8007                     	org	32775
 13963  8007  3F8C               	dw	16268
 13964                           
 13965                           ;Config register CONFIG2 @ 0x8008
 13966                           ;	Master Clear Enable bit
 13967                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 13968                           ;	Power-up Timer Enable bit
 13969                           ;	PWRTE = OFF, PWRT disabled
 13970                           ;	Watchdog Timer Enable bits
 13971                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 13972                           ;	Low-power BOR enable bit
 13973                           ;	LPBOREN = OFF, ULPBOR disabled
 13974                           ;	Brown-out Reset Enable bits
 13975                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 13976                           ;	Brown-out Reset Voltage selection bit
 13977                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 13978                           ;	PPSLOCK bit One-Way Set Enable bit
 13979                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 13980                           ;	Stack Overflow/Underflow Reset Enable bit
 13981                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13982                           ;	Debugger enable bit
 13983                           ;	DEBUG = OFF, Background debugger disabled
 13984  8008                     	org	32776
 13985  8008  3FF3               	dw	16371
 13986                           
 13987                           ;Config register CONFIG3 @ 0x8009
 13988                           ;	User NVM self-write protection bits
 13989                           ;	WRT = OFF, Write protection off
 13990                           ;	Low Voltage Programming Enable bit
 13991                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 13992  8009                     	org	32777
 13993  8009  3FFF               	dw	16383
 13994                           
 13995                           ;Config register CONFIG4 @ 0x800A
 13996                           ;	User NVM Program Memory Code Protection bit
 13997                           ;	CP = OFF, User NVM code protection disabled
 13998                           ;	Data NVM Memory Code Protection bit
 13999                           ;	CPD = OFF, Data NVM code protection disabled
 14000  800A                     	org	32778
 14001  800A  3FFF               	dw	16383

Data Sizes:
    Strings     108
    Constant    0
    Data        0
    BSS         110
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     37      79
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMMON[1]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_2(CODE[58]), STR_1(CODE[50]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sameSens@ccp3$F968	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sameSens@ccp2$F847	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sameSens	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP3_DefaultCallBack(), 

    lastTrig@ccp3$F969	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    CCP2_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP2_DefaultCallBack(), 

    CCP2_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP2_DefaultCallBack(), 

    lastTrig@ccp2$F848	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP1_DefaultCallBack(), 

    lastTrig@ccp1$F706	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    sp__JSN_GetLastTrig	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    lastTrig	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _INTERRUPT_InterruptManager->_CCP2_CaptureISR
    _INTERRUPT_InterruptManager->_CCP3_CaptureISR
    i1_TMR3_Reload->i1_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _CCP3_CaptureISR->_CCP3_DefaultCallBack
    _CCP3_DefaultCallBack->_ReadPin
    _CCP2_CaptureISR->_CCP2_DefaultCallBack
    _CCP2_DefaultCallBack->_ReadPin
    _CCP1_CaptureISR->_CCP1_DefaultCallBack
    _CCP1_DefaultCallBack->_ReadPin

Critical Paths under _main in BANK0

    _main->_FRT_GetMicros
    _SpeakerTone_SetFrequency->___lldiv
    _SpeakerTone_Init->_SetPin
    _SpeakerTone_Init->_WritePin
    _TMR3_Reload->_TMR3_WriteTimer
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _CCP3_Initialize->_CCP3_SetCallBack
    _CCP2_Initialize->_CCP2_SetCallBack
    _CCP1_Initialize->_CCP1_SetCallBack
    _FRT_GetMicros->___wmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    4261
                                             24 BANK0     13    13      0
                      _FRT_GetMicros
                         _PIC16_Init
                   _SpeakerTone_Init
                    _SpeakerTone_Off
                     _SpeakerTone_On
           _SpeakerTone_SetFrequency
 ---------------------------------------------------------------------------------
 (1) _SpeakerTone_SetFrequency                             2     0      2    1166
                                             14 BANK0      2     0      2
               _CCP4_SetCompareCount
                    _SpeakerTone_Off
                     _SpeakerTone_On
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _SpeakerTone_On                                       0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_SetCompareCount                                 4     2      2     144
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SpeakerTone_Init                                     0     0      0    1488
                             _SetPin
                    _SpeakerTone_Off
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _WritePin                                             4     3      1     700
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _SpeakerTone_Off                                      0     0      0     164
                        _TMR3_Reload
                     _TMR3_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR3_Reload                                          0     0      0     164
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (4) _TMR3_WriteTimer                                      2     0      2     164
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SetPin                                               4     3      1     624
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _PIC16_Init                                           0     0      0     882
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     882
                    _CCP1_Initialize
                    _CCP2_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Initialize                                    1     1      0     490
                                              2 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP3_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP2_Initialize                                      0     0      0      98
                   _CCP2_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP2_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP1_Initialize                                      0     0      0      98
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP1_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _FRT_GetMicros                                       18    14      4     419
                                              6 BANK0     18    14      4
                _TMR0_GetCallBackNum
                     _TMR0_ReadTimer
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
                _TMR0_GetCallBackNum (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMR0_ReadTimer                                       2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_GetCallBackNum                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     852
                   Absolute function *
                    _CCP1_CaptureISR
                    _CCP2_CaptureISR
                    _CCP3_CaptureISR
                    _CCP4_CompareISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR3_ISR                                             0     0      0     114
                      i1_TMR3_Reload
 ---------------------------------------------------------------------------------
 (7) i1_TMR3_Reload                                        0     0      0     114
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (8) i1_TMR3_WriteTimer                                    2     0      2     114
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0       0
                      _FRT_IncMicros
                      _FRT_IncMillis
 ---------------------------------------------------------------------------------
 (8) _FRT_IncMillis                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _FRT_IncMicros                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _CCP4_CompareISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CCP3_CaptureISR                                      3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (7) _CCP3_DefaultCallBack                                 4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (6) _CCP2_CaptureISR                                      3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP2_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (7) _CCP2_DefaultCallBack                                 4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (6) _CCP1_CaptureISR                                      3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP1_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (7) _CCP1_DefaultCallBack                                 4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (8) _ReadPin                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (8) _JSN_GetLastTrig                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FRT_GetMicros
     _TMR0_GetCallBackNum
     _TMR0_ReadTimer
     ___wmul
       _TMR0_GetCallBackNum (ARG)
   _PIC16_Init
     _SYSTEM_Initialize
       _CCP1_Initialize
         _CCP1_SetCallBack
       _CCP2_Initialize
         _CCP2_SetCallBack
       _CCP3_Initialize
         _CCP3_SetCallBack
       _CCP4_Initialize
       _EUSART_Initialize
         _EUSART_SetErrorHandler
         _EUSART_SetFramingErrorHandler
         _EUSART_SetOverrunErrorHandler
         _EUSART_SetRxInterruptHandler
         _EUSART_SetTxInterruptHandler
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _PWM5_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR1_Initialize
       _TMR2_Initialize
       _TMR3_Initialize
       _WDT_Initialize
   _SpeakerTone_Init
     _SetPin
     _SpeakerTone_Off
       _TMR3_Reload
         _TMR3_WriteTimer
       _TMR3_StopTimer
     _WritePin
   _SpeakerTone_Off
   _SpeakerTone_On
     _TMR3_StartTimer
   _SpeakerTone_SetFrequency
     _CCP4_SetCompareCount
     _SpeakerTone_Off
     _SpeakerTone_On
     ___lldiv

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _CCP1_CaptureISR *
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP2_CaptureISR *
     Absolute function(Fake) *
     _CCP2_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP3_CaptureISR *
     Absolute function(Fake) *
     _CCP3_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP4_CompareISR *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     _TMR0_CallBack
       _FRT_IncMicros
       _FRT_IncMillis
   _TMR1_ISR *
     _TMR1_WriteTimer
   _TMR3_ISR *
     i1_TMR3_Reload
       i1_TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     25      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Feb 10 17:44:53 2022

                              _CCP4_Initialize 07B6                  ?_EUSART_SetRxInterruptHandler 004A  
                       ??_CCP3_DefaultCallBack 0075                          __end_ofi1_TMR3_Reload 0F8D  
                          ___wmul@multiplicand 004C                        __end_of_CCP1_Initialize 073A  
                                          l101 07A3                                            l106 02E4  
                                          l230 0663                                            l304 0F22  
                                          l233 0FE1                                            l242 0FCF  
                                          l154 0229                                            l236 0FE5  
                                          l350 0F44                                            l239 0F34  
                                          l344 0739                                            l273 074F  
                                          l282 0F7C                                            l442 0F50  
                                          l436 0709                                            l461 07F7  
                                          l390 0721                                            l622 0F5C  
                                          l631 0F62                                            l625 0F95  
                                          l298 0F9E                                            l619 0F56  
                                          l396 0F4A                                            l628 0F68  
                                          l556 04AE                                            l812 0F83  
                                          l805 0469                                            l815 0F38  
                                          l915 07FF                                            l749 04E9  
                                          l766 0422                                            l961 0F25  
                                          l882 0FFF                                            l955 0FF2  
                                          l972 0FA7                                            l958 0F28  
                                          l879 07C6                                            l799 06D8  
                                          l969 06F1                                            l899 0FD9  
                                          _PR2 001E                                            u600 068D  
                                          u601 068C                                            u700 03CE  
                                          u701 03CD                                            u630 06A1  
                                          u550 06DE                                            u631 06A0  
                                          u615 0692                                            u551 06DD  
                                          u560 0FE5                                            u640 038D  
                                          u625 0697                                            u561 0FE4  
                                          u641 038C                                            u660 039F  
                                          u820 042D                                            u661 039E  
                                          u821 042C                                            u830 0436  
                                          u655 0391                                            u831 0435  
                                          u680 03B8                                            u681 03B7  
                                          u675 03A0                                            u685 03B4  
                                          u695 03C2                                _timer1ReloadVal 002A  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 004A  
                              _TMR2_Initialize 07F8                                            wreg 0009  
                             ?_SpeakerTone_Off 0070                                           l1133 0691  
                                         l1135 06A5                                           l3000 070D  
                                         l3010 071D                                           l3002 070E  
                                         l3012 071F                                           l3004 070F  
                                         l3020 07C4                                           l3100 0F26  
                                         l3006 0710                                           l3014 07B6  
                                         l3030 0FD3                                           l3022 0FE6  
                                         l3008 0718                                           l3016 07BD  
                                         l3032 0FD4                                           l3040 07EE  
                                         l3024 0FEA                                           l1169 03D6  
                                         l3018 07C2                                           l3050 0474  
                                         l3034 0FD5                                           l3042 07F2  
                                         l3026 0FEE                                           l3130 0242  
                                         l3122 0234                                           l3210 0187  
                                         l3202 0179                                _timer3ReloadVal 0020  
                                         l3060 0487                                           l3052 047E  
                                         l3028 0FD0                                           l3044 07F4  
                                         l3036 07E9                                           l3116 022C  
                                         l3070 04A3                                           l3062 0489  
                                         l3054 0481                                           l3046 046A  
                                         l3038 07ED                                           l3150 0265  
                                         l3142 0257                                           l3134 0249  
                                         l3126 023B                                           l3118 022D  
                                         l3230 01AA                                           l3222 019C  
                                         l3214 018E                                           l3206 0180  
                                         l3072 04A4                                           l3064 0491  
                                         l3056 0483                                           l3048 046C  
                                         l3400 03B8                                           l3074 04A5  
                                         l3066 0499                                           l3058 0485  
                                         l3170 0288                                           l3162 027A  
                                         l3154 026C                                           l3146 025E  
                                         l3138 0250                                           l3250 01CD  
                                         l3242 01BF                                           l3234 01B1  
                                         l3226 01A3                                           l3218 0195  
                                         l3402 03C0                                           l3076 04AC  
                                         l3068 04A1                                           l3420 079E  
                                         l3404 03C1                                           l3414 03D7  
                                         l3422 07A1                                           l3182 029D  
                                         l3174 028F                                           l3166 0281  
                                         l3158 0273                                           l3262 01E2  
                                         l3254 01D4                                           l3246 01C6  
                                         l3238 01B8                                           l3406 03C8  
                                         l3280 065A                                           l3424 07A2  
                                         l3096 0F23                                           l3408 03CE  
                                         l3282 065D                                           l3418 0792  
                                         l3178 0296                                           l3098 0F9F  
                                         l3362 0F7D                                           l3258 01DB  
                                         l3370 0F35                                           l3292 0F20  
                                         l3380 0696                                           l2900 04B6  
                                         l3284 0660                                           l3276 0639  
                                         l3188 02A4                                           l3364 0F80  
                                         l3268 01E9                                           l3196 0171  
                                         l3540 06D5                                           l3700 0148  
                                         l3286 0F76                                           l3382 069B  
                                         l3374 0686                                           l2910 04C9  
                                         l2902 04B8                                           l3278 0657  
                                         l3198 0172                                           l3534 06C0  
                                         l3390 038D                                           l3550 043A  
                                         l3542 0423                                           l3702 014A  
                                         l3384 06A1                                           l3376 0689  
                                         l2920 04D5                                           l2912 04CC  
                                         l2904 04BA                                           l3536 06CC  
                                         l3368 0FF3                                           l3392 0390  
                                         l3552 0442                                           l3544 042D  
                                         l3704 0164                                           l3378 068D  
                                         l2770 0F4B                                           l2930 04E2  
                                         l2922 04D7                                           l2914 04CE  
                                         l2906 04BD                                           l3538 06D1  
                                         l3394 039B                                           l3554 045C  
                                         l2780 0F8D                                           l2772 0F5D  
                                         l2940 0FE0                                           l2932 04E4  
                                         l2924 04DA                                           l2916 04D0  
                                         l2908 04BF                                           l2764 0F96  
                                         l3396 039F                                           l3388 037C  
                                         l3548 0437                                           l2766 0F3F  
                                         l2950 06F7                                           l2774 0F63  
                                         l2934 04E7                                           l2926 04DD  
                                         l2918 04D3                                           l2942 0F31  
                                         l2790 06E7                                           l2782 06D9  
                                         l3398 03A6                                           l3670 00C2  
                                         l3662 00A8                                           l2960 0722  
                                         l2768 0F45                                           l2952 06F8  
                                         l2944 06F2                                           l2776 0F51  
                                         l2936 0FDA                                           l2928 04E0  
                                         l2784 06DE                                           l2792 06E9  
                                         l3680 00F0                                           l3672 00C3  
                                         l3664 00AB                                           l2970 0730  
                                         l2962 0725                                           l2954 0700  
                                         l2946 06F5                                           l2778 0F57  
                                         l2938 0FDE                                           l2890 0FCB  
                                         l2794 06ED                                           l2786 06DF  
                                         l3690 010B                                           l3682 00F3  
                                         l3674 00CF                                           l3666 00AE  
                                         l2972 0735                                           l2964 0726  
                                         l2956 0705                                           l2948 06F6  
                                         l2892 0FCC                                           l2980 07FC  
                                         l2788 06E3                                           l3692 0111  
                                         l3684 00F7                                           l3668 00BA  
                                         l2974 0737                                           l2966 0727  
                                         l2958 0707                                           l2894 0FCD  
                                         l2886 0FC6                                           l2990 0741  
                                         l2982 07FD                                           l3694 0118  
                                         l3686 00FE                                           l3678 00E9  
                                         l2968 0728                                           l2896 04AF  
                                         l2888 0FC9                                           l2992 0743  
                                         l2984 073A                                           l2976 07F8  
                                         l3944 0153                                           l3696 011E  
                                         l3688 0104                                           l2898 04B3  
                                         l2994 074B                                           l2986 073F  
                                         l2978 07FB                                           l3946 01F1  
                                         l3698 0121                                           l2996 074E  
                                         l2988 0740                                           l3948 02AC  
                                         l2998 070A                                           STR_1 0607  
                                         STR_2 0525                                           u1040 00E8  
                                         u1041 00E7                                           u1050 0148  
                                         u1051 0147                                           u1055 0144  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           _PIE0 0090  
                                         _PIE1 0091                                           _PIE2 0092  
                                         _PIE3 0093                                           _PIE4 0094  
                                         _PMD0 0911                                           _PMD1 0912  
                                         _PMD2 0913                                           _PMD3 0914  
                                         _PMD4 0915                                           _PMD5 0916  
                                         i1l56 0F1C                                           _PIR0 0010  
                                         _PIR1 0011                                           _PIR2 0012  
                                         _PIR3 0013                                           _PIR4 0014  
                                         _PLLR 48E0                                           _TMR2 001D  
                       ??_CCP4_SetCompareCount 004C                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                      __end_of_CCP2_Initialize 0722                                           _main 00A8  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                     ReadPin@pin 0072  
                                         start 008E                                _TMR3_Initialize 0FE6  
                              _PWM5_Initialize 0FD0                       __end_of_CCP1_SetCallBack 0F45  
                        ??_TMR0_GetCallBackNum 004A                               ?_CCP1_CaptureISR 0070  
                            ?_SpeakerTone_Init 0070                                __end_of_ReadPin 037C  
                      __end_of_CCP4_CompareISR 0F20                     ??_SpeakerTone_SetFrequency 005A  
                           ??_SpeakerTone_Init 004E                        __end_of_TMR0_Initialize 0750  
                __end_of_OSCILLATOR_Initialize 0FE6                        __end_of_CCP3_Initialize 070A  
                                        ?_main 0070                                __end_of___lldiv 03D7  
                                        _T1CON 001B                                          _T2CON 001F  
                                        _T3CON 0413                                          i1l130 037B  
                                        i1l341 0606                                          i1l433 0596  
                                        i1l610 0003                                          i1l347 0791  
                                        i1l603 0524                                          i1l292 07B5  
                                        i1l613 0F30                                          i1l439 0765  
                                        i1l607 06BF                                          i1l295 0F75  
                                        i1l616 0F2C                                          i1l393 077B  
                                        i1l481 0FC5                                          i1l387 05CE  
                                        i1l475 07E8                                          i1l672 0014  
                                        i1l593 0683                                          i1l681 0050  
                                        i1l690 008C                                          i1l683 005E  
                                        i1l675 0026                                          i1l596 0685  
                                        i1l772 0FB1                                          i1l684 008C  
                                        i1l685 006C                                          i1l677 0034  
                                        i1l687 007C                                          i1l679 0042  
                                        i1l769 0FBB                                          i1l972 0F8C  
                                        i1l981 0F3E                                          i1l888 0F1F  
                                        i1l969 07D7                                          _OSCEN 091D  
                                        _TMR0H 0016                                          _TMR1H 001A  
                                        _TMR0L 0015                                          _TMR3H 0412  
                                        _TMR1L 0019                                          _TMR3L 0411  
                                        u71_20 07B0                                          u71_21 07AF  
                                        u80_20 0505                                          u80_21 0504  
                                        u57_20 06BA                                          u81_20 051A  
                                        u57_21 06B9                                          u81_21 0519  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          u58_20 07CC  
                                        u90_20 002B                                          u58_21 07CB  
                                        u90_21 002A                                          u59_20 07DD  
                                        u91_20 0030                                          u59_21 07DC  
                                        u91_21 002F                                          u92_20 0039  
                                        u92_21 0038                                          u77_20 066B  
                                        u93_20 003E                                          u85_20 000B  
                                        u77_21 066A                                          u93_21 003D  
                                        u85_21 000A                                          u78_20 067D  
                                        u94_20 0047                                          u86_20 0010  
                                        u78_21 067C                                          u94_21 0046  
                                        u86_21 000F                                          u79_20 04F5  
                                        u95_20 004C                                          u87_20 0018  
                                        u79_21 04F4                                          u95_21 004B  
                                        u87_21 0017                                          u96_20 0055  
                                        u88_20 001D                                          u96_21 0054  
                                        u88_21 001C                                          _RXPPS 0E24  
                                        u97_20 005A                                          u89_20 0022  
                                        u97_21 0059                                          u89_21 0021  
                                        u98_20 0063                                          u98_21 0062  
                                        u99_20 0068                                          u99_21 0067  
                    ?_TMR0_SetInterruptHandler 004A                                          _Sens1 00C4  
                                        _Sens2 00BE                                          _Sens3 00B8  
                             __end_of_TMR0_ISR 07B6                               __end_of_TMR1_ISR 0FC6  
                             __end_of_TMR3_ISR 0F3F                               ?_CCP2_CaptureISR 0070  
                               _WDT_Initialize 0F31                                          main@i 006A  
                      __end_of_TMR1_Initialize 07F8                                          pclath 000A  
                                        status 0003                        __end_of_CCP4_Initialize 07C7  
                                        wtemp0 007E                                _TMR1_WriteTimer 07D8  
                     __end_of_CCP2_SetCallBack 0F4B                                __initialization 0090  
                             ?_CCP3_CaptureISR 0070                                   __end_of_main 016F  
         SpeakerTone_SetFrequency@newFrequency 0058                        __end_of_TMR2_Initialize 0800  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 004C  
                                       ??_main 0062                               ?_CCP1_Initialize 0070  
                              _TMR3_StartTimer 0F26                         __end_of_WDT_Initialize 0F35  
                              _JSN_GetLastTrig 0F1A      __end_of_EUSART_DefaultFramingErrorHandler 0004  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0003                     _EUSART_OverrunErrorHandler 0022  
                                       _CCPR1H 0292                                         _CCPR2H 0296  
                                       _CCPR3H 0312                                         _CCPR1L 0291  
                                       _CCPR4H 0316                                         _CCPR2L 0295  
                                       _CCPR3L 0311                                         _CCPR4L 0315  
                   CCP4_SetCompareCount@module 004C                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _T0CON0 0017                                         _T0CON1 0018  
                                       _T1GCON 001C                                         _T3GCON 0414  
                                       _RC1REG 0199                               __end_of_WritePin 022A  
                                       _RC1PPS 0EA1                                         _RC1STA 019D  
                                       u100_20 0071                                         u100_21 0070  
                                       u101_20 0076                                         u101_21 0075  
                                       u102_20 0081                                         u102_21 0080  
                      TMR1_WriteTimer@timerVal 0070                                         _RC4PPS 0EA4  
                                       _RB6PPS 0E9E                                         u103_20 0086  
                                       u103_21 0085                                         i1l3110 07D1  
                                       i1l3102 07C7                                         i1l3104 07CC  
                                       i1l3112 07D3                                         _ODCONA 028C  
                                       i1l3114 07D5                                         i1l3106 07CD  
                                       _ODCONB 028D                                         _ODCONC 028E  
                                       i1l3300 05DC                                         i1l3108 07CF  
                                       i1l3302 05E1                                         i1l3312 0597  
                                       i1l3306 05EF                                         i1l3314 059E  
                                       i1l3322 05B7                                         i1l3330 0566  
                                       i1l3090 06B4                                         i1l3082 0FA8  
                                       i1l3316 05A4                                         i1l3332 056C  
                                       i1l3092 06BA                                         i1l3500 0672  
                                       i1l3412 0F84                                         i1l3318 05A9  
                                       i1l3334 0571                                         i1l3094 06BB  
                                       i1l3086 06A6                                         i1l3510 04F0  
                                       i1l3502 0677                                         i1l3078 0FB2  
                                       i1l3430 07B0                                         i1l3350 07E0  
                                       i1l2800 02E6                                         i1l3440 0766  
                                       i1l3328 055F                                         i1l3088 06B0  
                                       i1l3360 0F29                                         i1l3520 050B  
                                       i1l3512 04F5                                         i1l3504 067D  
                                       i1l3432 07B3                                         i1l3352 07E2  
                                       i1l3344 07D8                                         i1l2810 02F0  
                                       i1l2802 02E7                                         i1l3434 077C  
                                       i1l3442 0768                                         i1l3338 057F  
                                       i1l3450 075B                                         i1l3522 0510  
                                       i1l3514 04FB                                         i1l3506 067E  
                                       i1l3290 0F6F                                         i1l3426 07A4  
                                       i1l3346 07DD                                         i1l3354 07E4  
                                       i1l3530 0F39                                         i1l3436 077E  
                                       i1l3444 0771                                         i1l3524 051A  
                                       i1l3516 0500                                         i1l3508 04EA  
                                       i1l3428 07A6                                         i1l3356 07E6  
                                       i1l3348 07DE                                         i1l3452 0FBC  
                                       i1l3532 0F3B                        __end_of_PWM5_Initialize 0FDA  
                      __end_of_TMR3_Initialize 0FF3                                         i1l2830 0308  
                                       i1l2822 02FB                                         i1l2814 02F2  
                                       i1l2806 02EC                                         i1l3438 0787  
                                       i1l3446 0750                                         i1l3358 0F2D  
                                       i1l3526 0521                                         i1l3518 0505  
                                       i1l3454 0FBE                                         i1l3630 001D  
                                       i1l3622 0006                                         i1l3296 05CF  
                                       i1l3448 0752                                         i1l3528 0F1D  
                                       i1l3640 003E                                         i1l3632 0022  
                                       i1l3624 000B                                         i1l2850 031F  
                                       i1l2842 0316                                         i1l2834 030D  
                                       i1l2826 0302                                         i1l2818 02F7  
                                       i1l3298 05D6                                         i1l3650 0063  
                                       i1l3642 0047                                         i1l3634 002B  
                                       i1l3626 0010                                         i1l3660 0086  
                                       i1l3652 0068                                         i1l3644 004C  
                                       i1l3636 0030                                         i1l3628 0018  
                                       i1l2870 0335                                         i1l2862 032C  
                                       i1l2854 0323                                         i1l2846 031A  
                                       i1l2838 0312                                         i1l3654 0071  
                                       i1l3646 0055                                         i1l3638 0039  
                                       i1l2880 033B                                         i1l3496 0664  
                                       i1l3656 0076                                         i1l3648 005A  
                                       i1l2866 0330                                         i1l2858 0327  
                                       i1l3498 066B                                         i1l3658 0081  
                                       i1l2796 0F1A                                         i1l3950 058E  
                                       i1l3952 05C6                                         i1l3954 05FE  
                                       i1l3956 0343                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                main@currMicro 006B                                         _OSCFRQ 091F  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                               ?_CCP2_Initialize 0070  
                                    ??_ReadPin 0070                                _TMR3_WriteTimer 06D9  
                                _CCP1_CallBack 003C                       __end_of_CCP3_SetCallBack 0F51  
                                       _SetPin 022A                                  _CCP2_CallBack 0036  
                                       ___wmul 0686                                      ??___lldiv 0052  
                             ?_CCP4_CompareISR 0070                                   ?_TMR3_Reload 0070  
                                _CCP3_CallBack 0030                            _EUSART_Transmit_ISR 0664  
                             ?_TMR0_Initialize 0070                                         _micros 00D2  
                                       _millis 00CE                             _lastTrig@ccp1$F706 007D  
                           _lastTrig@ccp2$F848 007C                             _lastTrig@ccp3$F969 007B  
                                main@prevMicro 0066                               ?_CCP3_Initialize 0070  
                               _PMD_Initialize 0FC6              CCP2_DefaultCallBack@capturedValue 0073  
                              ?_WDT_Initialize 0070                          __end_of_TMR0_CallBack 0F76  
     TMR0_SetInterruptHandler@InterruptHandler 004A                        __end_of_TMR1_WriteTimer 07E9  
                         ?_EUSART_Transmit_ISR 0070                               ?_TMR1_Initialize 0070  
                            _SYSTEM_Initialize 0639                        __end_of__initialization 00A4  
                             ?_CCP4_Initialize 0070                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 0F69                   _EUSART_SetTxInterruptHandler 0F63  
                                 ??_PIC16_Init 004D                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 004D                        __end_of_TMR3_StartTimer 0F29  
                                    ?_TMR0_ISR 0070                                      ?_TMR1_ISR 0070  
                                    ?_TMR3_ISR 0070                               ?_TMR2_Initialize 0070  
                       __end_of_PMD_Initialize 0FD0                        __end_of_JSN_GetLastTrig 0F1D  
                        CCP3_CaptureISR@module 0078                           _eusartRxStatusBuffer 00A0  
               CCP3_SetCallBack@customCallBack 004A                ??_EUSART_SetOverrunErrorHandler 004C  
                           __end_of_PIC16_Init 07A4                      __end_of_SYSTEM_Initialize 0664  
                        ??_EUSART_Transmit_ISR 0070                        __end_of_TMR3_WriteTimer 06F2  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                             ?_PWM5_Initialize 0070                               ?_TMR3_Initialize 0070  
                                      ?_SetPin 004A                              ?_CCP1_SetCallBack 004A  
                                   __pmaintext 00A8                  ?_EUSART_SetTxInterruptHandler 004A  
             _EUSART_TxDefaultInterruptHandler 0028               __end_of_TMR0_SetInterruptHandler 0F9F  
                                      ?___wmul 004A                                  _FRT_GetMicros 03D7  
                                   ??_TMR0_ISR 0070                                     ??_TMR1_ISR 0072  
                                   ??_TMR3_ISR 0072                             ??_CCP1_SetCallBack 004C  
                                   __pintentry 0004                                        _CCP1CAP 0294  
                                      _CCP2CAP 0298                                        _CCP3CAP 0314  
                                      _CCP1CON 0293                                        _CCP2CON 0297  
                                      _CCP3CON 0313                                        _CCP4CON 0317  
                                      _CCP1PPS 0E14                                        _CCP2PPS 0E15  
                                      _CCP3PPS 0E16                                  _FRT_IncMicros 0FA8  
                 ??_EUSART_DefaultErrorHandler 0071                                  _FRT_IncMillis 0FB2  
                              ?_PMD_Initialize 0070                                      ?_WritePin 004A  
                                _eusartRxCount 0040                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                                        _OSCCON1 0919  
                                      _OSCCON3 091B                                        _OSCTUNE 091E  
                                      _PWM5DCH 0618                                        _PWM5DCL 0617  
                                      _PWM5CON 0619                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 004C                               ?_TMR1_WriteTimer 0070  
            CCP1_DefaultCallBack@capturedValue 0073                    __end_of_TMR0_GetCallBackNum 0F23  
                             _micros@FRT$F1508 00CA                                 _SpeakerTone_On 0F35  
                                      _ReadPin 02E5                              ?_CCP2_SetCallBack 004A  
                               ?_FRT_GetMicros 0050                               ?_TMR3_StartTimer 0070  
                                      ___lldiv 037C                             ??_CCP2_SetCallBack 004C  
                               ?_FRT_IncMicros 0070                                 ?_FRT_IncMillis 0070  
                                      _ocCount 00D8                                     ??_WritePin 004B  
                                      __ptext1 0423                                        __ptext2 037C  
                                      __ptext3 0F35                                        __ptext4 0F26  
                                      __ptext5 0FF3                                        __ptext6 06C0  
                                      __ptext7 016F                                        __ptext8 0F7D  
                                      __ptext9 0F23                               ?_JSN_GetLastTrig 0070  
                                    _T1CONbits 001B                          _OSCILLATOR_Initialize 0FDA  
                                    _T2CONbits 001F                                      _T3CONbits 0413  
                           _sameSens@ccp2$F847 0046                             _sameSens@ccp3$F968 0045  
                     ??_PIN_MANAGER_Initialize 004A                                        _ticksUp 003A  
                                      clrloop0 0F6A                      ?_SpeakerTone_SetFrequency 0058  
                         end_of_initialization 00A4                               ?_TMR3_WriteTimer 004A  
        __end_of_EUSART_SetOverrunErrorHandler 0F5D                  _EUSART_SetOverrunErrorHandler 0F57  
                       __end_of_SpeakerTone_On 0F39                              _EUSART_Initialize 046A  
                              ___lldiv@divisor 004A                                ___lldiv@counter 0057  
                           ?_EUSART_Initialize 0070                              ?_CCP3_SetCallBack 004A  
                        TMR0_ReadTimer@readVal 004B                   __end_of_CCP1_DefaultCallBack 0607  
                           ??_CCP3_SetCallBack 004C                                 _TMR0_ReadTimer 0F76  
                                i1_TMR3_Reload 0F84                            ??_EUSART_Initialize 004C  
                             ??_WDT_Initialize 004A                 ??_EUSART_SetTxInterruptHandler 004C  
                     _TMR0_SetInterruptHandler 0F96                                      _PORTAbits 000C  
                                    _PORTBbits 000D                                      _PORTCbits 000E  
                                    _TRISAbits 008C                                      _TRISBbits 008D  
                                    _TRISCbits 008E                                ?_SpeakerTone_On 0070  
                    __end_of_EUSART_Initialize 04AF                                    _CCP4CONbits 0317  
                              ??_FRT_GetMicros 0054                         __end_of_TMR0_ReadTimer 0F7D  
                            ??_SpeakerTone_Off 004C                                ??_FRT_IncMicros 0070  
                               __end_of_SetPin 02E5                                ??_FRT_IncMillis 0070  
                               ?i1_TMR3_Reload 0070             __end_of_EUSART_DefaultErrorHandler 0F2D  
                   _EUSART_DefaultErrorHandler 0F29                                 __end_of___wmul 06A6  
                       ?_OSCILLATOR_Initialize 0070                   __end_of_CCP2_DefaultCallBack 05CF  
                          start_initialization 0090                               _SpeakerTone_Init 06C0  
               CCP2_SetCallBack@customCallBack 004A                                      SetPin@pin 004D  
                            ??_CCP1_CaptureISR 0077   EUSART_SetRxInterruptHandler@interruptHandler 004A  
 EUSART_SetTxInterruptHandler@interruptHandler 004A                                 _TMR3_StopTimer 0F23  
                            _ticksUp@ccp2$F845 0034                              _ticksUp@ccp3$F966 002E  
               ?_EUSART_SetOverrunErrorHandler 004A                                       ??_SetPin 004B  
                   _EUSART_FramingErrorHandler 0024                               ??_PMD_Initialize 004A  
                              ?_TMR0_ReadTimer 0070                                       ??___wmul 004E  
                            ??_CCP2_CaptureISR 0077                         _EUSART_SetErrorHandler 0F8D  
                                  _CCPTMRSbits 029F                          CCP1_CaptureISR@module 0078  
                  __end_of_EUSART_Transmit_ISR 0686                                    __pbssCOMMON 007A  
                                    ___latbits 0002                                  __pcstackBANK0 004A  
                            ??_CCP3_CaptureISR 0077                   __end_of_CCP3_DefaultCallBack 0597  
                       __end_of_TMR3_StopTimer 0F26                           _CCP1_DefaultCallBack 05CF  
                   __end_of_EUSART_Receive_ISR 0525               _EUSART_RxDefaultInterruptHandler 0026  
                        _TMR0_InterruptHandler 00DE                              ??_CCP1_Initialize 004C  
                               _dutyCycle10bit 00D6                                       ?_ReadPin 0070  
                                  WritePin@pin 004D                                    WritePin@val 004A  
                 __end_of_EUSART_RxDataHandler 06C0                         _PIN_MANAGER_Initialize 04AF  
                              ??i1_TMR3_Reload 0072              CCP3_DefaultCallBack@capturedValue 0073  
                                     ?___lldiv 004A                                   _eusartRxHead 0041  
                                 _eusartTxHead 0044                                   _eusartRxTail 007A  
                                 _eusartTxTail 0043               __end_of_SpeakerTone_SetFrequency 046A  
                 ??_INTERRUPT_InterruptManager 007A                   __end_of_CCP4_SetCompareCount 1000  
                      _eusartTxBufferRemaining 0042                                       _BAUD1CON 019F  
                            ??_CCP2_Initialize 004C                               _dutyCyclePercent 003E  
                                _TMR0_CallBack 0F6F                          ?_CCP1_DefaultCallBack 0073  
                              ?_TMR3_StopTimer 0070                              ??_CCP4_CompareISR 0070  
                               _eusartRxBuffer 00A8                              ??_TMR0_Initialize 004C  
                               _eusartTxBuffer 00B0                                 ___wmul@product 004E  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 004A  
                                     _LATBbits 010D                                       _LATCbits 010E  
                                    clear_ram0 0F69                              ??_CCP3_Initialize 004C  
                                     _PIE0bits 0090                                       _PIE1bits 0091  
                                     _PIE3bits 0093                                       _PIE4bits 0094  
                            _eusartRxLastError 003F                           _CCP2_DefaultCallBack 0597  
                   ??_TMR0_SetInterruptHandler 004C                                       _PIR0bits 0010  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 004C  
                                    _ticksDown 0038                                       _PIR3bits 0013  
                                     _PIR4bits 0014                                       _TMR0_ISR 07A4  
    __end_of_EUSART_DefaultOverrunErrorHandler 0F31            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 0F2D  
                                     _TMR1_ISR 0FBC                                  ??_TMR3_Reload 004C  
                                     _TMR3_ISR 0F39                              ??_TMR1_Initialize 004A  
                            ___wmul@multiplier 004A                              ??_CCP4_Initialize 004A  
                             ??_SpeakerTone_On 004A                                 ?_TMR0_CallBack 0070  
                              _SpeakerTone_Off 0F7D                                       SetPin@io 004A  
                            i1_TMR3_WriteTimer 07C7                              ??_TMR2_Initialize 004A  
                           ?i1_TMR3_WriteTimer 0070                          ?_CCP2_DefaultCallBack 0073  
                     __end_of_SpeakerTone_Init 06D9                            ??i1_TMR3_WriteTimer 0072  
             CCP4_SetCompareCount@compareCount 004A                        ??_OSCILLATOR_Initialize 004A  
                          _EUSART_ErrorHandler 00DC                           _CCP3_DefaultCallBack 055F  
                  ?_EUSART_DefaultErrorHandler 0070                                _CCP1_CaptureISR 077C  
                                     _WritePin 016F                              ??_PWM5_Initialize 004A  
                            ??_TMR3_Initialize 004A                            __end_of_TMR3_Reload 0FA8  
                                   _T0CON0bits 0017                       _SpeakerTone_SetFrequency 0423  
                             _CCP1_SetCallBack 0F3F                           _EUSART_RxDataHandler 06A6  
               CCP1_SetCallBack@customCallBack 004A                                       __ptext10 0F9F  
                                     __ptext11 06D9                                       __ptext20 0F96  
                                     __ptext12 022A                                       __ptext21 0FD0  
                                     __ptext13 0792                                       __ptext30 0F8D  
                                     __ptext22 0FC6                                       __ptext14 0639  
                                     __ptext31 07B6                                       __ptext23 04AF  
                                     __ptext15 0F31                                       __ptext40 0F76  
                                     __ptext32 06F2                                       __ptext24 0FDA  
                                     __ptext16 0FE6                                       __ptext41 0F20  
                                     __ptext33 0F4B                                       __ptext25 046A  
                                     __ptext17 07F8                                       __ptext50 0FB2  
                                     __ptext34 070A                                       __ptext26 0F63  
                                     __ptext18 07E9                                       __ptext51 0FA8  
                                     __ptext43 0F39                                       __ptext35 0F45  
                                     __ptext27 0F5D                                       __ptext19 073A  
                                     __ptext60 055F                                       __ptext52 0664  
                                     __ptext44 0F84                                       __ptext36 0722  
                                     __ptext28 0F57                                       __ptext61 0766  
                                     __ptext53 04EA                                       __ptext45 07C7  
                                     __ptext37 0F3F                                       __ptext29 0F51  
                                     __ptext62 0597                                       __ptext54 0F2D  
                                     __ptext46 0FBC                                       __ptext38 03D7  
                                     __ptext63 077C                                       __ptext55 0003  
                                     __ptext47 07D8                                       __ptext39 0686  
                                     __ptext64 05CF                                       __ptext56 0F29  
                                     __ptext48 07A4                                       __ptext65 02E5  
                                     __ptext57 06A6                                       __ptext49 0F6F  
                                     __ptext66 0F1A                                       __ptext58 0F1D  
                                     __ptext59 0750                         ??_CCP1_DefaultCallBack 0075  
                    __end_ofi1_TMR3_WriteTimer 07D8                                     _T3GCONbits 0414  
                      TMR3_WriteTimer@timerVal 004A                                       _currFreq 00DA  
                                     _lastTrig 0049                                _CCP2_CaptureISR 0766  
                         _CCP4_SetCompareCount 0FF3                               ??_TMR0_ReadTimer 004A  
                                     _sameSens 0047                   _TMR0_DefaultInterruptHandler 0000  
                      ?_EUSART_SetErrorHandler 004A                            _ticksDown@ccp2$F846 0032  
                          _ticksDown@ccp3$F967 002C                                     _PIC16_Init 0792  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 004A  
                        __end_of_FRT_GetMicros 0423                      i1TMR3_WriteTimer@timerVal 0070  
                                     int$flags 007E                          ?_CCP3_DefaultCallBack 0073  
           __end_of_INTERRUPT_InterruptManager 008E                     _INTERRUPT_InterruptManager 0004  
                        __end_of_FRT_IncMicros 0FB2                          __end_of_FRT_IncMillis 0FBC  
        __end_of_EUSART_SetFramingErrorHandler 0F57                  _EUSART_SetFramingErrorHandler 0F51  
                            ??_TMR1_WriteTimer 0072                                _CCP3_CaptureISR 0750  
                                   _INTCONbits 000B                                ??_TMR0_CallBack 0070  
                             _CCP2_SetCallBack 0F45                          ?_EUSART_RxDataHandler 0070  
                      __end_of_SpeakerTone_Off 0F84                                _CCP1_Initialize 0722  
                            ??_TMR3_StartTimer 004A                                       intlevel1 0000  
                                _CountCallBack 0048                          ?_CCP4_SetCompareCount 004A  
                             ___lldiv@dividend 004E                        ?_PIN_MANAGER_Initialize 0070  
                       ??_CCP2_DefaultCallBack 0075                 __end_of_EUSART_SetErrorHandler 0F96  
                            ??_JSN_GetLastTrig 0070           __end_of_EUSART_SetRxInterruptHandler 0F63  
                 _EUSART_SetRxInterruptHandler 0F5D                        __end_of_CCP1_CaptureISR 0792  
                              _CCP2_Initialize 070A                             _EUSART_Receive_ISR 04EA  
EUSART_SetFramingErrorHandler@interruptHandler 004A                                    _TMR3_Reload 0F9F  
                            ??_TMR3_WriteTimer 004C                                  __pstringtext1 0525  
                                __pstringtext2 0607                                  __pstringtext3 0000  
                        CCP2_CaptureISR@module 0078                                _CCP4_CompareISR 0F1D  
                          ?_EUSART_Receive_ISR 0070                               ___lldiv@quotient 0053  
                              _TMR0_Initialize 073A                               ??_TMR3_StopTimer 004A  
                             _CCP3_SetCallBack 0F4B                        __end_of_CCP2_CaptureISR 077C  
                          _TMR0_GetCallBackNum 0F20                                _CCP3_Initialize 06F2  
                                   _TX1STAbits 019E                 __end_of_PIN_MANAGER_Initialize 04EA  
                                  _PWMTMRSbits 061F                           ??_EUSART_Receive_ISR 0071  
                              _TMR1_Initialize 07E9                                    ?_PIC16_Init 0070  
                         ?_TMR0_GetCallBackNum 0070                        __end_of_CCP3_CaptureISR 0766  
