

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun Jan 30 15:01:59 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	text64,local,class=CODE,merge=1,delta=2
    79                           	psect	text65,local,class=CODE,merge=1,delta=2
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    82                           	dabs	1,0x7E,2
    83  0000                     
    84                           ; Version 2.40
    85                           ; Generated 19/01/2022 GMT
    86                           ; 
    87                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC16F18345 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0090                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0097                     	;# 
   162  009B                     	;# 
   163  009B                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  0111                     	;# 
   172  0112                     	;# 
   173  0113                     	;# 
   174  0114                     	;# 
   175  0115                     	;# 
   176  0116                     	;# 
   177  0117                     	;# 
   178  0118                     	;# 
   179  0119                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182  018E                     	;# 
   183  0197                     	;# 
   184  0199                     	;# 
   185  0199                     	;# 
   186  0199                     	;# 
   187  019A                     	;# 
   188  019A                     	;# 
   189  019A                     	;# 
   190  019B                     	;# 
   191  019B                     	;# 
   192  019B                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019C                     	;# 
   196  019C                     	;# 
   197  019C                     	;# 
   198  019D                     	;# 
   199  019D                     	;# 
   200  019D                     	;# 
   201  019E                     	;# 
   202  019E                     	;# 
   203  019E                     	;# 
   204  019F                     	;# 
   205  019F                     	;# 
   206  019F                     	;# 
   207  019F                     	;# 
   208  019F                     	;# 
   209  020C                     	;# 
   210  020D                     	;# 
   211  020E                     	;# 
   212  0211                     	;# 
   213  0211                     	;# 
   214  0212                     	;# 
   215  0212                     	;# 
   216  0213                     	;# 
   217  0213                     	;# 
   218  0214                     	;# 
   219  0214                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0215                     	;# 
   224  0216                     	;# 
   225  0216                     	;# 
   226  0217                     	;# 
   227  0217                     	;# 
   228  0219                     	;# 
   229  021A                     	;# 
   230  021B                     	;# 
   231  021C                     	;# 
   232  021D                     	;# 
   233  021D                     	;# 
   234  021E                     	;# 
   235  021F                     	;# 
   236  028C                     	;# 
   237  028D                     	;# 
   238  028E                     	;# 
   239  0291                     	;# 
   240  0291                     	;# 
   241  0292                     	;# 
   242  0293                     	;# 
   243  0294                     	;# 
   244  0295                     	;# 
   245  0295                     	;# 
   246  0296                     	;# 
   247  0297                     	;# 
   248  0298                     	;# 
   249  029F                     	;# 
   250  030C                     	;# 
   251  030D                     	;# 
   252  030E                     	;# 
   253  0311                     	;# 
   254  0311                     	;# 
   255  0312                     	;# 
   256  0313                     	;# 
   257  0314                     	;# 
   258  0315                     	;# 
   259  0315                     	;# 
   260  0316                     	;# 
   261  0317                     	;# 
   262  0318                     	;# 
   263  038C                     	;# 
   264  038D                     	;# 
   265  038E                     	;# 
   266  0391                     	;# 
   267  0392                     	;# 
   268  0393                     	;# 
   269  0394                     	;# 
   270  0395                     	;# 
   271  0396                     	;# 
   272  0397                     	;# 
   273  0398                     	;# 
   274  0399                     	;# 
   275  039A                     	;# 
   276  039C                     	;# 
   277  039D                     	;# 
   278  039E                     	;# 
   279  039F                     	;# 
   280  0411                     	;# 
   281  0411                     	;# 
   282  0412                     	;# 
   283  0413                     	;# 
   284  0414                     	;# 
   285  0415                     	;# 
   286  0416                     	;# 
   287  0417                     	;# 
   288  0418                     	;# 
   289  0418                     	;# 
   290  0419                     	;# 
   291  041A                     	;# 
   292  041B                     	;# 
   293  041C                     	;# 
   294  041D                     	;# 
   295  041E                     	;# 
   296  041F                     	;# 
   297  0498                     	;# 
   298  0498                     	;# 
   299  0499                     	;# 
   300  049A                     	;# 
   301  049B                     	;# 
   302  049B                     	;# 
   303  049C                     	;# 
   304  049D                     	;# 
   305  049E                     	;# 
   306  049F                     	;# 
   307  0617                     	;# 
   308  0618                     	;# 
   309  0619                     	;# 
   310  0619                     	;# 
   311  061A                     	;# 
   312  061B                     	;# 
   313  061C                     	;# 
   314  061C                     	;# 
   315  061F                     	;# 
   316  0691                     	;# 
   317  0692                     	;# 
   318  0693                     	;# 
   319  0694                     	;# 
   320  0695                     	;# 
   321  0696                     	;# 
   322  0697                     	;# 
   323  0698                     	;# 
   324  0699                     	;# 
   325  0711                     	;# 
   326  0712                     	;# 
   327  0713                     	;# 
   328  0714                     	;# 
   329  0715                     	;# 
   330  0716                     	;# 
   331  0717                     	;# 
   332  0718                     	;# 
   333  0719                     	;# 
   334  0891                     	;# 
   335  0891                     	;# 
   336  0891                     	;# 
   337  0891                     	;# 
   338  0891                     	;# 
   339  0891                     	;# 
   340  0892                     	;# 
   341  0892                     	;# 
   342  0892                     	;# 
   343  0893                     	;# 
   344  0893                     	;# 
   345  0893                     	;# 
   346  0893                     	;# 
   347  0893                     	;# 
   348  0893                     	;# 
   349  0894                     	;# 
   350  0894                     	;# 
   351  0894                     	;# 
   352  0895                     	;# 
   353  0895                     	;# 
   354  0895                     	;# 
   355  0896                     	;# 
   356  0896                     	;# 
   357  0896                     	;# 
   358  089B                     	;# 
   359  0911                     	;# 
   360  0912                     	;# 
   361  0913                     	;# 
   362  0914                     	;# 
   363  0915                     	;# 
   364  0916                     	;# 
   365  0918                     	;# 
   366  0919                     	;# 
   367  091A                     	;# 
   368  091B                     	;# 
   369  091C                     	;# 
   370  091D                     	;# 
   371  091E                     	;# 
   372  091F                     	;# 
   373  0E0F                     	;# 
   374  0E10                     	;# 
   375  0E11                     	;# 
   376  0E12                     	;# 
   377  0E13                     	;# 
   378  0E14                     	;# 
   379  0E15                     	;# 
   380  0E16                     	;# 
   381  0E17                     	;# 
   382  0E18                     	;# 
   383  0E19                     	;# 
   384  0E1A                     	;# 
   385  0E1B                     	;# 
   386  0E1C                     	;# 
   387  0E1D                     	;# 
   388  0E1E                     	;# 
   389  0E1F                     	;# 
   390  0E20                     	;# 
   391  0E21                     	;# 
   392  0E22                     	;# 
   393  0E24                     	;# 
   394  0E25                     	;# 
   395  0E28                     	;# 
   396  0E29                     	;# 
   397  0E2A                     	;# 
   398  0E2B                     	;# 
   399  0E2C                     	;# 
   400  0E2D                     	;# 
   401  0E2E                     	;# 
   402  0E2F                     	;# 
   403  0E90                     	;# 
   404  0E91                     	;# 
   405  0E92                     	;# 
   406  0E94                     	;# 
   407  0E95                     	;# 
   408  0E9C                     	;# 
   409  0E9D                     	;# 
   410  0E9E                     	;# 
   411  0E9F                     	;# 
   412  0EA0                     	;# 
   413  0EA1                     	;# 
   414  0EA2                     	;# 
   415  0EA3                     	;# 
   416  0EA4                     	;# 
   417  0EA5                     	;# 
   418  0EA6                     	;# 
   419  0EA7                     	;# 
   420  0F0F                     	;# 
   421  0F10                     	;# 
   422  0F11                     	;# 
   423  0F12                     	;# 
   424  0F13                     	;# 
   425  0F14                     	;# 
   426  0F15                     	;# 
   427  0F16                     	;# 
   428  0F17                     	;# 
   429  0F18                     	;# 
   430  0F19                     	;# 
   431  0F1A                     	;# 
   432  0F1B                     	;# 
   433  0F1C                     	;# 
   434  0F1D                     	;# 
   435  0F1E                     	;# 
   436  0F1F                     	;# 
   437  0F20                     	;# 
   438  0F21                     	;# 
   439  0F22                     	;# 
   440  0F23                     	;# 
   441  0F24                     	;# 
   442  0F25                     	;# 
   443  0F26                     	;# 
   444  0F27                     	;# 
   445  0F28                     	;# 
   446  0F29                     	;# 
   447  0F2A                     	;# 
   448  0F2B                     	;# 
   449  0F2C                     	;# 
   450  0F2D                     	;# 
   451  0F2E                     	;# 
   452  0F2F                     	;# 
   453  0F30                     	;# 
   454  0F31                     	;# 
   455  0F32                     	;# 
   456  0F33                     	;# 
   457  0F34                     	;# 
   458  0F35                     	;# 
   459  0F36                     	;# 
   460  0F37                     	;# 
   461  0FE4                     	;# 
   462  0FE5                     	;# 
   463  0FE6                     	;# 
   464  0FE7                     	;# 
   465  0FE8                     	;# 
   466  0FE9                     	;# 
   467  0FEA                     	;# 
   468  0FEB                     	;# 
   469  0FED                     	;# 
   470  0FEE                     	;# 
   471  0FEF                     	;# 
   472  0000                     	;# 
   473  0001                     	;# 
   474  0002                     	;# 
   475  0003                     	;# 
   476  0004                     	;# 
   477  0005                     	;# 
   478  0006                     	;# 
   479  0007                     	;# 
   480  0008                     	;# 
   481  0009                     	;# 
   482  000A                     	;# 
   483  000B                     	;# 
   484  000C                     	;# 
   485  000D                     	;# 
   486  000E                     	;# 
   487  0010                     	;# 
   488  0011                     	;# 
   489  0012                     	;# 
   490  0013                     	;# 
   491  0014                     	;# 
   492  0015                     	;# 
   493  0015                     	;# 
   494  0016                     	;# 
   495  0016                     	;# 
   496  0017                     	;# 
   497  0018                     	;# 
   498  0019                     	;# 
   499  0019                     	;# 
   500  001A                     	;# 
   501  001B                     	;# 
   502  001C                     	;# 
   503  001D                     	;# 
   504  001E                     	;# 
   505  001F                     	;# 
   506  008C                     	;# 
   507  008D                     	;# 
   508  008E                     	;# 
   509  0090                     	;# 
   510  0091                     	;# 
   511  0092                     	;# 
   512  0093                     	;# 
   513  0094                     	;# 
   514  0097                     	;# 
   515  009B                     	;# 
   516  009B                     	;# 
   517  009C                     	;# 
   518  009D                     	;# 
   519  009E                     	;# 
   520  009F                     	;# 
   521  010C                     	;# 
   522  010D                     	;# 
   523  010E                     	;# 
   524  0111                     	;# 
   525  0112                     	;# 
   526  0113                     	;# 
   527  0114                     	;# 
   528  0115                     	;# 
   529  0116                     	;# 
   530  0117                     	;# 
   531  0118                     	;# 
   532  0119                     	;# 
   533  018C                     	;# 
   534  018D                     	;# 
   535  018E                     	;# 
   536  0197                     	;# 
   537  0199                     	;# 
   538  0199                     	;# 
   539  0199                     	;# 
   540  019A                     	;# 
   541  019A                     	;# 
   542  019A                     	;# 
   543  019B                     	;# 
   544  019B                     	;# 
   545  019B                     	;# 
   546  019B                     	;# 
   547  019B                     	;# 
   548  019C                     	;# 
   549  019C                     	;# 
   550  019C                     	;# 
   551  019D                     	;# 
   552  019D                     	;# 
   553  019D                     	;# 
   554  019E                     	;# 
   555  019E                     	;# 
   556  019E                     	;# 
   557  019F                     	;# 
   558  019F                     	;# 
   559  019F                     	;# 
   560  019F                     	;# 
   561  019F                     	;# 
   562  020C                     	;# 
   563  020D                     	;# 
   564  020E                     	;# 
   565  0211                     	;# 
   566  0211                     	;# 
   567  0212                     	;# 
   568  0212                     	;# 
   569  0213                     	;# 
   570  0213                     	;# 
   571  0214                     	;# 
   572  0214                     	;# 
   573  0215                     	;# 
   574  0215                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0216                     	;# 
   578  0216                     	;# 
   579  0217                     	;# 
   580  0217                     	;# 
   581  0219                     	;# 
   582  021A                     	;# 
   583  021B                     	;# 
   584  021C                     	;# 
   585  021D                     	;# 
   586  021D                     	;# 
   587  021E                     	;# 
   588  021F                     	;# 
   589  028C                     	;# 
   590  028D                     	;# 
   591  028E                     	;# 
   592  0291                     	;# 
   593  0291                     	;# 
   594  0292                     	;# 
   595  0293                     	;# 
   596  0294                     	;# 
   597  0295                     	;# 
   598  0295                     	;# 
   599  0296                     	;# 
   600  0297                     	;# 
   601  0298                     	;# 
   602  029F                     	;# 
   603  030C                     	;# 
   604  030D                     	;# 
   605  030E                     	;# 
   606  0311                     	;# 
   607  0311                     	;# 
   608  0312                     	;# 
   609  0313                     	;# 
   610  0314                     	;# 
   611  0315                     	;# 
   612  0315                     	;# 
   613  0316                     	;# 
   614  0317                     	;# 
   615  0318                     	;# 
   616  038C                     	;# 
   617  038D                     	;# 
   618  038E                     	;# 
   619  0391                     	;# 
   620  0392                     	;# 
   621  0393                     	;# 
   622  0394                     	;# 
   623  0395                     	;# 
   624  0396                     	;# 
   625  0397                     	;# 
   626  0398                     	;# 
   627  0399                     	;# 
   628  039A                     	;# 
   629  039C                     	;# 
   630  039D                     	;# 
   631  039E                     	;# 
   632  039F                     	;# 
   633  0411                     	;# 
   634  0411                     	;# 
   635  0412                     	;# 
   636  0413                     	;# 
   637  0414                     	;# 
   638  0415                     	;# 
   639  0416                     	;# 
   640  0417                     	;# 
   641  0418                     	;# 
   642  0418                     	;# 
   643  0419                     	;# 
   644  041A                     	;# 
   645  041B                     	;# 
   646  041C                     	;# 
   647  041D                     	;# 
   648  041E                     	;# 
   649  041F                     	;# 
   650  0498                     	;# 
   651  0498                     	;# 
   652  0499                     	;# 
   653  049A                     	;# 
   654  049B                     	;# 
   655  049B                     	;# 
   656  049C                     	;# 
   657  049D                     	;# 
   658  049E                     	;# 
   659  049F                     	;# 
   660  0617                     	;# 
   661  0618                     	;# 
   662  0619                     	;# 
   663  0619                     	;# 
   664  061A                     	;# 
   665  061B                     	;# 
   666  061C                     	;# 
   667  061C                     	;# 
   668  061F                     	;# 
   669  0691                     	;# 
   670  0692                     	;# 
   671  0693                     	;# 
   672  0694                     	;# 
   673  0695                     	;# 
   674  0696                     	;# 
   675  0697                     	;# 
   676  0698                     	;# 
   677  0699                     	;# 
   678  0711                     	;# 
   679  0712                     	;# 
   680  0713                     	;# 
   681  0714                     	;# 
   682  0715                     	;# 
   683  0716                     	;# 
   684  0717                     	;# 
   685  0718                     	;# 
   686  0719                     	;# 
   687  0891                     	;# 
   688  0891                     	;# 
   689  0891                     	;# 
   690  0891                     	;# 
   691  0891                     	;# 
   692  0891                     	;# 
   693  0892                     	;# 
   694  0892                     	;# 
   695  0892                     	;# 
   696  0893                     	;# 
   697  0893                     	;# 
   698  0893                     	;# 
   699  0893                     	;# 
   700  0893                     	;# 
   701  0893                     	;# 
   702  0894                     	;# 
   703  0894                     	;# 
   704  0894                     	;# 
   705  0895                     	;# 
   706  0895                     	;# 
   707  0895                     	;# 
   708  0896                     	;# 
   709  0896                     	;# 
   710  0896                     	;# 
   711  089B                     	;# 
   712  0911                     	;# 
   713  0912                     	;# 
   714  0913                     	;# 
   715  0914                     	;# 
   716  0915                     	;# 
   717  0916                     	;# 
   718  0918                     	;# 
   719  0919                     	;# 
   720  091A                     	;# 
   721  091B                     	;# 
   722  091C                     	;# 
   723  091D                     	;# 
   724  091E                     	;# 
   725  091F                     	;# 
   726  0E0F                     	;# 
   727  0E10                     	;# 
   728  0E11                     	;# 
   729  0E12                     	;# 
   730  0E13                     	;# 
   731  0E14                     	;# 
   732  0E15                     	;# 
   733  0E16                     	;# 
   734  0E17                     	;# 
   735  0E18                     	;# 
   736  0E19                     	;# 
   737  0E1A                     	;# 
   738  0E1B                     	;# 
   739  0E1C                     	;# 
   740  0E1D                     	;# 
   741  0E1E                     	;# 
   742  0E1F                     	;# 
   743  0E20                     	;# 
   744  0E21                     	;# 
   745  0E22                     	;# 
   746  0E24                     	;# 
   747  0E25                     	;# 
   748  0E28                     	;# 
   749  0E29                     	;# 
   750  0E2A                     	;# 
   751  0E2B                     	;# 
   752  0E2C                     	;# 
   753  0E2D                     	;# 
   754  0E2E                     	;# 
   755  0E2F                     	;# 
   756  0E90                     	;# 
   757  0E91                     	;# 
   758  0E92                     	;# 
   759  0E94                     	;# 
   760  0E95                     	;# 
   761  0E9C                     	;# 
   762  0E9D                     	;# 
   763  0E9E                     	;# 
   764  0E9F                     	;# 
   765  0EA0                     	;# 
   766  0EA1                     	;# 
   767  0EA2                     	;# 
   768  0EA3                     	;# 
   769  0EA4                     	;# 
   770  0EA5                     	;# 
   771  0EA6                     	;# 
   772  0EA7                     	;# 
   773  0F0F                     	;# 
   774  0F10                     	;# 
   775  0F11                     	;# 
   776  0F12                     	;# 
   777  0F13                     	;# 
   778  0F14                     	;# 
   779  0F15                     	;# 
   780  0F16                     	;# 
   781  0F17                     	;# 
   782  0F18                     	;# 
   783  0F19                     	;# 
   784  0F1A                     	;# 
   785  0F1B                     	;# 
   786  0F1C                     	;# 
   787  0F1D                     	;# 
   788  0F1E                     	;# 
   789  0F1F                     	;# 
   790  0F20                     	;# 
   791  0F21                     	;# 
   792  0F22                     	;# 
   793  0F23                     	;# 
   794  0F24                     	;# 
   795  0F25                     	;# 
   796  0F26                     	;# 
   797  0F27                     	;# 
   798  0F28                     	;# 
   799  0F29                     	;# 
   800  0F2A                     	;# 
   801  0F2B                     	;# 
   802  0F2C                     	;# 
   803  0F2D                     	;# 
   804  0F2E                     	;# 
   805  0F2F                     	;# 
   806  0F30                     	;# 
   807  0F31                     	;# 
   808  0F32                     	;# 
   809  0F33                     	;# 
   810  0F34                     	;# 
   811  0F35                     	;# 
   812  0F36                     	;# 
   813  0F37                     	;# 
   814  0FE4                     	;# 
   815  0FE5                     	;# 
   816  0FE6                     	;# 
   817  0FE7                     	;# 
   818  0FE8                     	;# 
   819  0FE9                     	;# 
   820  0FEA                     	;# 
   821  0FEB                     	;# 
   822  0FED                     	;# 
   823  0FEE                     	;# 
   824  0FEF                     	;# 
   825  0000                     	;# 
   826  0001                     	;# 
   827  0002                     	;# 
   828  0003                     	;# 
   829  0004                     	;# 
   830  0005                     	;# 
   831  0006                     	;# 
   832  0007                     	;# 
   833  0008                     	;# 
   834  0009                     	;# 
   835  000A                     	;# 
   836  000B                     	;# 
   837  000C                     	;# 
   838  000D                     	;# 
   839  000E                     	;# 
   840  0010                     	;# 
   841  0011                     	;# 
   842  0012                     	;# 
   843  0013                     	;# 
   844  0014                     	;# 
   845  0015                     	;# 
   846  0015                     	;# 
   847  0016                     	;# 
   848  0016                     	;# 
   849  0017                     	;# 
   850  0018                     	;# 
   851  0019                     	;# 
   852  0019                     	;# 
   853  001A                     	;# 
   854  001B                     	;# 
   855  001C                     	;# 
   856  001D                     	;# 
   857  001E                     	;# 
   858  001F                     	;# 
   859  008C                     	;# 
   860  008D                     	;# 
   861  008E                     	;# 
   862  0090                     	;# 
   863  0091                     	;# 
   864  0092                     	;# 
   865  0093                     	;# 
   866  0094                     	;# 
   867  0097                     	;# 
   868  009B                     	;# 
   869  009B                     	;# 
   870  009C                     	;# 
   871  009D                     	;# 
   872  009E                     	;# 
   873  009F                     	;# 
   874  010C                     	;# 
   875  010D                     	;# 
   876  010E                     	;# 
   877  0111                     	;# 
   878  0112                     	;# 
   879  0113                     	;# 
   880  0114                     	;# 
   881  0115                     	;# 
   882  0116                     	;# 
   883  0117                     	;# 
   884  0118                     	;# 
   885  0119                     	;# 
   886  018C                     	;# 
   887  018D                     	;# 
   888  018E                     	;# 
   889  0197                     	;# 
   890  0199                     	;# 
   891  0199                     	;# 
   892  0199                     	;# 
   893  019A                     	;# 
   894  019A                     	;# 
   895  019A                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019C                     	;# 
   902  019C                     	;# 
   903  019C                     	;# 
   904  019D                     	;# 
   905  019D                     	;# 
   906  019D                     	;# 
   907  019E                     	;# 
   908  019E                     	;# 
   909  019E                     	;# 
   910  019F                     	;# 
   911  019F                     	;# 
   912  019F                     	;# 
   913  019F                     	;# 
   914  019F                     	;# 
   915  020C                     	;# 
   916  020D                     	;# 
   917  020E                     	;# 
   918  0211                     	;# 
   919  0211                     	;# 
   920  0212                     	;# 
   921  0212                     	;# 
   922  0213                     	;# 
   923  0213                     	;# 
   924  0214                     	;# 
   925  0214                     	;# 
   926  0215                     	;# 
   927  0215                     	;# 
   928  0215                     	;# 
   929  0215                     	;# 
   930  0216                     	;# 
   931  0216                     	;# 
   932  0217                     	;# 
   933  0217                     	;# 
   934  0219                     	;# 
   935  021A                     	;# 
   936  021B                     	;# 
   937  021C                     	;# 
   938  021D                     	;# 
   939  021D                     	;# 
   940  021E                     	;# 
   941  021F                     	;# 
   942  028C                     	;# 
   943  028D                     	;# 
   944  028E                     	;# 
   945  0291                     	;# 
   946  0291                     	;# 
   947  0292                     	;# 
   948  0293                     	;# 
   949  0294                     	;# 
   950  0295                     	;# 
   951  0295                     	;# 
   952  0296                     	;# 
   953  0297                     	;# 
   954  0298                     	;# 
   955  029F                     	;# 
   956  030C                     	;# 
   957  030D                     	;# 
   958  030E                     	;# 
   959  0311                     	;# 
   960  0311                     	;# 
   961  0312                     	;# 
   962  0313                     	;# 
   963  0314                     	;# 
   964  0315                     	;# 
   965  0315                     	;# 
   966  0316                     	;# 
   967  0317                     	;# 
   968  0318                     	;# 
   969  038C                     	;# 
   970  038D                     	;# 
   971  038E                     	;# 
   972  0391                     	;# 
   973  0392                     	;# 
   974  0393                     	;# 
   975  0394                     	;# 
   976  0395                     	;# 
   977  0396                     	;# 
   978  0397                     	;# 
   979  0398                     	;# 
   980  0399                     	;# 
   981  039A                     	;# 
   982  039C                     	;# 
   983  039D                     	;# 
   984  039E                     	;# 
   985  039F                     	;# 
   986  0411                     	;# 
   987  0411                     	;# 
   988  0412                     	;# 
   989  0413                     	;# 
   990  0414                     	;# 
   991  0415                     	;# 
   992  0416                     	;# 
   993  0417                     	;# 
   994  0418                     	;# 
   995  0418                     	;# 
   996  0419                     	;# 
   997  041A                     	;# 
   998  041B                     	;# 
   999  041C                     	;# 
  1000  041D                     	;# 
  1001  041E                     	;# 
  1002  041F                     	;# 
  1003  0498                     	;# 
  1004  0498                     	;# 
  1005  0499                     	;# 
  1006  049A                     	;# 
  1007  049B                     	;# 
  1008  049B                     	;# 
  1009  049C                     	;# 
  1010  049D                     	;# 
  1011  049E                     	;# 
  1012  049F                     	;# 
  1013  0617                     	;# 
  1014  0618                     	;# 
  1015  0619                     	;# 
  1016  0619                     	;# 
  1017  061A                     	;# 
  1018  061B                     	;# 
  1019  061C                     	;# 
  1020  061C                     	;# 
  1021  061F                     	;# 
  1022  0691                     	;# 
  1023  0692                     	;# 
  1024  0693                     	;# 
  1025  0694                     	;# 
  1026  0695                     	;# 
  1027  0696                     	;# 
  1028  0697                     	;# 
  1029  0698                     	;# 
  1030  0699                     	;# 
  1031  0711                     	;# 
  1032  0712                     	;# 
  1033  0713                     	;# 
  1034  0714                     	;# 
  1035  0715                     	;# 
  1036  0716                     	;# 
  1037  0717                     	;# 
  1038  0718                     	;# 
  1039  0719                     	;# 
  1040  0891                     	;# 
  1041  0891                     	;# 
  1042  0891                     	;# 
  1043  0891                     	;# 
  1044  0891                     	;# 
  1045  0891                     	;# 
  1046  0892                     	;# 
  1047  0892                     	;# 
  1048  0892                     	;# 
  1049  0893                     	;# 
  1050  0893                     	;# 
  1051  0893                     	;# 
  1052  0893                     	;# 
  1053  0893                     	;# 
  1054  0893                     	;# 
  1055  0894                     	;# 
  1056  0894                     	;# 
  1057  0894                     	;# 
  1058  0895                     	;# 
  1059  0895                     	;# 
  1060  0895                     	;# 
  1061  0896                     	;# 
  1062  0896                     	;# 
  1063  0896                     	;# 
  1064  089B                     	;# 
  1065  0911                     	;# 
  1066  0912                     	;# 
  1067  0913                     	;# 
  1068  0914                     	;# 
  1069  0915                     	;# 
  1070  0916                     	;# 
  1071  0918                     	;# 
  1072  0919                     	;# 
  1073  091A                     	;# 
  1074  091B                     	;# 
  1075  091C                     	;# 
  1076  091D                     	;# 
  1077  091E                     	;# 
  1078  091F                     	;# 
  1079  0E0F                     	;# 
  1080  0E10                     	;# 
  1081  0E11                     	;# 
  1082  0E12                     	;# 
  1083  0E13                     	;# 
  1084  0E14                     	;# 
  1085  0E15                     	;# 
  1086  0E16                     	;# 
  1087  0E17                     	;# 
  1088  0E18                     	;# 
  1089  0E19                     	;# 
  1090  0E1A                     	;# 
  1091  0E1B                     	;# 
  1092  0E1C                     	;# 
  1093  0E1D                     	;# 
  1094  0E1E                     	;# 
  1095  0E1F                     	;# 
  1096  0E20                     	;# 
  1097  0E21                     	;# 
  1098  0E22                     	;# 
  1099  0E24                     	;# 
  1100  0E25                     	;# 
  1101  0E28                     	;# 
  1102  0E29                     	;# 
  1103  0E2A                     	;# 
  1104  0E2B                     	;# 
  1105  0E2C                     	;# 
  1106  0E2D                     	;# 
  1107  0E2E                     	;# 
  1108  0E2F                     	;# 
  1109  0E90                     	;# 
  1110  0E91                     	;# 
  1111  0E92                     	;# 
  1112  0E94                     	;# 
  1113  0E95                     	;# 
  1114  0E9C                     	;# 
  1115  0E9D                     	;# 
  1116  0E9E                     	;# 
  1117  0E9F                     	;# 
  1118  0EA0                     	;# 
  1119  0EA1                     	;# 
  1120  0EA2                     	;# 
  1121  0EA3                     	;# 
  1122  0EA4                     	;# 
  1123  0EA5                     	;# 
  1124  0EA6                     	;# 
  1125  0EA7                     	;# 
  1126  0F0F                     	;# 
  1127  0F10                     	;# 
  1128  0F11                     	;# 
  1129  0F12                     	;# 
  1130  0F13                     	;# 
  1131  0F14                     	;# 
  1132  0F15                     	;# 
  1133  0F16                     	;# 
  1134  0F17                     	;# 
  1135  0F18                     	;# 
  1136  0F19                     	;# 
  1137  0F1A                     	;# 
  1138  0F1B                     	;# 
  1139  0F1C                     	;# 
  1140  0F1D                     	;# 
  1141  0F1E                     	;# 
  1142  0F1F                     	;# 
  1143  0F20                     	;# 
  1144  0F21                     	;# 
  1145  0F22                     	;# 
  1146  0F23                     	;# 
  1147  0F24                     	;# 
  1148  0F25                     	;# 
  1149  0F26                     	;# 
  1150  0F27                     	;# 
  1151  0F28                     	;# 
  1152  0F29                     	;# 
  1153  0F2A                     	;# 
  1154  0F2B                     	;# 
  1155  0F2C                     	;# 
  1156  0F2D                     	;# 
  1157  0F2E                     	;# 
  1158  0F2F                     	;# 
  1159  0F30                     	;# 
  1160  0F31                     	;# 
  1161  0F32                     	;# 
  1162  0F33                     	;# 
  1163  0F34                     	;# 
  1164  0F35                     	;# 
  1165  0F36                     	;# 
  1166  0F37                     	;# 
  1167  0FE4                     	;# 
  1168  0FE5                     	;# 
  1169  0FE6                     	;# 
  1170  0FE7                     	;# 
  1171  0FE8                     	;# 
  1172  0FE9                     	;# 
  1173  0FEA                     	;# 
  1174  0FEB                     	;# 
  1175  0FED                     	;# 
  1176  0FEE                     	;# 
  1177  0FEF                     	;# 
  1178  0000                     	;# 
  1179  0001                     	;# 
  1180  0002                     	;# 
  1181  0003                     	;# 
  1182  0004                     	;# 
  1183  0005                     	;# 
  1184  0006                     	;# 
  1185  0007                     	;# 
  1186  0008                     	;# 
  1187  0009                     	;# 
  1188  000A                     	;# 
  1189  000B                     	;# 
  1190  000C                     	;# 
  1191  000D                     	;# 
  1192  000E                     	;# 
  1193  0010                     	;# 
  1194  0011                     	;# 
  1195  0012                     	;# 
  1196  0013                     	;# 
  1197  0014                     	;# 
  1198  0015                     	;# 
  1199  0015                     	;# 
  1200  0016                     	;# 
  1201  0016                     	;# 
  1202  0017                     	;# 
  1203  0018                     	;# 
  1204  0019                     	;# 
  1205  0019                     	;# 
  1206  001A                     	;# 
  1207  001B                     	;# 
  1208  001C                     	;# 
  1209  001D                     	;# 
  1210  001E                     	;# 
  1211  001F                     	;# 
  1212  008C                     	;# 
  1213  008D                     	;# 
  1214  008E                     	;# 
  1215  0090                     	;# 
  1216  0091                     	;# 
  1217  0092                     	;# 
  1218  0093                     	;# 
  1219  0094                     	;# 
  1220  0097                     	;# 
  1221  009B                     	;# 
  1222  009B                     	;# 
  1223  009C                     	;# 
  1224  009D                     	;# 
  1225  009E                     	;# 
  1226  009F                     	;# 
  1227  010C                     	;# 
  1228  010D                     	;# 
  1229  010E                     	;# 
  1230  0111                     	;# 
  1231  0112                     	;# 
  1232  0113                     	;# 
  1233  0114                     	;# 
  1234  0115                     	;# 
  1235  0116                     	;# 
  1236  0117                     	;# 
  1237  0118                     	;# 
  1238  0119                     	;# 
  1239  018C                     	;# 
  1240  018D                     	;# 
  1241  018E                     	;# 
  1242  0197                     	;# 
  1243  0199                     	;# 
  1244  0199                     	;# 
  1245  0199                     	;# 
  1246  019A                     	;# 
  1247  019A                     	;# 
  1248  019A                     	;# 
  1249  019B                     	;# 
  1250  019B                     	;# 
  1251  019B                     	;# 
  1252  019B                     	;# 
  1253  019B                     	;# 
  1254  019C                     	;# 
  1255  019C                     	;# 
  1256  019C                     	;# 
  1257  019D                     	;# 
  1258  019D                     	;# 
  1259  019D                     	;# 
  1260  019E                     	;# 
  1261  019E                     	;# 
  1262  019E                     	;# 
  1263  019F                     	;# 
  1264  019F                     	;# 
  1265  019F                     	;# 
  1266  019F                     	;# 
  1267  019F                     	;# 
  1268  020C                     	;# 
  1269  020D                     	;# 
  1270  020E                     	;# 
  1271  0211                     	;# 
  1272  0211                     	;# 
  1273  0212                     	;# 
  1274  0212                     	;# 
  1275  0213                     	;# 
  1276  0213                     	;# 
  1277  0214                     	;# 
  1278  0214                     	;# 
  1279  0215                     	;# 
  1280  0215                     	;# 
  1281  0215                     	;# 
  1282  0215                     	;# 
  1283  0216                     	;# 
  1284  0216                     	;# 
  1285  0217                     	;# 
  1286  0217                     	;# 
  1287  0219                     	;# 
  1288  021A                     	;# 
  1289  021B                     	;# 
  1290  021C                     	;# 
  1291  021D                     	;# 
  1292  021D                     	;# 
  1293  021E                     	;# 
  1294  021F                     	;# 
  1295  028C                     	;# 
  1296  028D                     	;# 
  1297  028E                     	;# 
  1298  0291                     	;# 
  1299  0291                     	;# 
  1300  0292                     	;# 
  1301  0293                     	;# 
  1302  0294                     	;# 
  1303  0295                     	;# 
  1304  0295                     	;# 
  1305  0296                     	;# 
  1306  0297                     	;# 
  1307  0298                     	;# 
  1308  029F                     	;# 
  1309  030C                     	;# 
  1310  030D                     	;# 
  1311  030E                     	;# 
  1312  0311                     	;# 
  1313  0311                     	;# 
  1314  0312                     	;# 
  1315  0313                     	;# 
  1316  0314                     	;# 
  1317  0315                     	;# 
  1318  0315                     	;# 
  1319  0316                     	;# 
  1320  0317                     	;# 
  1321  0318                     	;# 
  1322  038C                     	;# 
  1323  038D                     	;# 
  1324  038E                     	;# 
  1325  0391                     	;# 
  1326  0392                     	;# 
  1327  0393                     	;# 
  1328  0394                     	;# 
  1329  0395                     	;# 
  1330  0396                     	;# 
  1331  0397                     	;# 
  1332  0398                     	;# 
  1333  0399                     	;# 
  1334  039A                     	;# 
  1335  039C                     	;# 
  1336  039D                     	;# 
  1337  039E                     	;# 
  1338  039F                     	;# 
  1339  0411                     	;# 
  1340  0411                     	;# 
  1341  0412                     	;# 
  1342  0413                     	;# 
  1343  0414                     	;# 
  1344  0415                     	;# 
  1345  0416                     	;# 
  1346  0417                     	;# 
  1347  0418                     	;# 
  1348  0418                     	;# 
  1349  0419                     	;# 
  1350  041A                     	;# 
  1351  041B                     	;# 
  1352  041C                     	;# 
  1353  041D                     	;# 
  1354  041E                     	;# 
  1355  041F                     	;# 
  1356  0498                     	;# 
  1357  0498                     	;# 
  1358  0499                     	;# 
  1359  049A                     	;# 
  1360  049B                     	;# 
  1361  049B                     	;# 
  1362  049C                     	;# 
  1363  049D                     	;# 
  1364  049E                     	;# 
  1365  049F                     	;# 
  1366  0617                     	;# 
  1367  0618                     	;# 
  1368  0619                     	;# 
  1369  0619                     	;# 
  1370  061A                     	;# 
  1371  061B                     	;# 
  1372  061C                     	;# 
  1373  061C                     	;# 
  1374  061F                     	;# 
  1375  0691                     	;# 
  1376  0692                     	;# 
  1377  0693                     	;# 
  1378  0694                     	;# 
  1379  0695                     	;# 
  1380  0696                     	;# 
  1381  0697                     	;# 
  1382  0698                     	;# 
  1383  0699                     	;# 
  1384  0711                     	;# 
  1385  0712                     	;# 
  1386  0713                     	;# 
  1387  0714                     	;# 
  1388  0715                     	;# 
  1389  0716                     	;# 
  1390  0717                     	;# 
  1391  0718                     	;# 
  1392  0719                     	;# 
  1393  0891                     	;# 
  1394  0891                     	;# 
  1395  0891                     	;# 
  1396  0891                     	;# 
  1397  0891                     	;# 
  1398  0891                     	;# 
  1399  0892                     	;# 
  1400  0892                     	;# 
  1401  0892                     	;# 
  1402  0893                     	;# 
  1403  0893                     	;# 
  1404  0893                     	;# 
  1405  0893                     	;# 
  1406  0893                     	;# 
  1407  0893                     	;# 
  1408  0894                     	;# 
  1409  0894                     	;# 
  1410  0894                     	;# 
  1411  0895                     	;# 
  1412  0895                     	;# 
  1413  0895                     	;# 
  1414  0896                     	;# 
  1415  0896                     	;# 
  1416  0896                     	;# 
  1417  089B                     	;# 
  1418  0911                     	;# 
  1419  0912                     	;# 
  1420  0913                     	;# 
  1421  0914                     	;# 
  1422  0915                     	;# 
  1423  0916                     	;# 
  1424  0918                     	;# 
  1425  0919                     	;# 
  1426  091A                     	;# 
  1427  091B                     	;# 
  1428  091C                     	;# 
  1429  091D                     	;# 
  1430  091E                     	;# 
  1431  091F                     	;# 
  1432  0E0F                     	;# 
  1433  0E10                     	;# 
  1434  0E11                     	;# 
  1435  0E12                     	;# 
  1436  0E13                     	;# 
  1437  0E14                     	;# 
  1438  0E15                     	;# 
  1439  0E16                     	;# 
  1440  0E17                     	;# 
  1441  0E18                     	;# 
  1442  0E19                     	;# 
  1443  0E1A                     	;# 
  1444  0E1B                     	;# 
  1445  0E1C                     	;# 
  1446  0E1D                     	;# 
  1447  0E1E                     	;# 
  1448  0E1F                     	;# 
  1449  0E20                     	;# 
  1450  0E21                     	;# 
  1451  0E22                     	;# 
  1452  0E24                     	;# 
  1453  0E25                     	;# 
  1454  0E28                     	;# 
  1455  0E29                     	;# 
  1456  0E2A                     	;# 
  1457  0E2B                     	;# 
  1458  0E2C                     	;# 
  1459  0E2D                     	;# 
  1460  0E2E                     	;# 
  1461  0E2F                     	;# 
  1462  0E90                     	;# 
  1463  0E91                     	;# 
  1464  0E92                     	;# 
  1465  0E94                     	;# 
  1466  0E95                     	;# 
  1467  0E9C                     	;# 
  1468  0E9D                     	;# 
  1469  0E9E                     	;# 
  1470  0E9F                     	;# 
  1471  0EA0                     	;# 
  1472  0EA1                     	;# 
  1473  0EA2                     	;# 
  1474  0EA3                     	;# 
  1475  0EA4                     	;# 
  1476  0EA5                     	;# 
  1477  0EA6                     	;# 
  1478  0EA7                     	;# 
  1479  0F0F                     	;# 
  1480  0F10                     	;# 
  1481  0F11                     	;# 
  1482  0F12                     	;# 
  1483  0F13                     	;# 
  1484  0F14                     	;# 
  1485  0F15                     	;# 
  1486  0F16                     	;# 
  1487  0F17                     	;# 
  1488  0F18                     	;# 
  1489  0F19                     	;# 
  1490  0F1A                     	;# 
  1491  0F1B                     	;# 
  1492  0F1C                     	;# 
  1493  0F1D                     	;# 
  1494  0F1E                     	;# 
  1495  0F1F                     	;# 
  1496  0F20                     	;# 
  1497  0F21                     	;# 
  1498  0F22                     	;# 
  1499  0F23                     	;# 
  1500  0F24                     	;# 
  1501  0F25                     	;# 
  1502  0F26                     	;# 
  1503  0F27                     	;# 
  1504  0F28                     	;# 
  1505  0F29                     	;# 
  1506  0F2A                     	;# 
  1507  0F2B                     	;# 
  1508  0F2C                     	;# 
  1509  0F2D                     	;# 
  1510  0F2E                     	;# 
  1511  0F2F                     	;# 
  1512  0F30                     	;# 
  1513  0F31                     	;# 
  1514  0F32                     	;# 
  1515  0F33                     	;# 
  1516  0F34                     	;# 
  1517  0F35                     	;# 
  1518  0F36                     	;# 
  1519  0F37                     	;# 
  1520  0FE4                     	;# 
  1521  0FE5                     	;# 
  1522  0FE6                     	;# 
  1523  0FE7                     	;# 
  1524  0FE8                     	;# 
  1525  0FE9                     	;# 
  1526  0FEA                     	;# 
  1527  0FEB                     	;# 
  1528  0FED                     	;# 
  1529  0FEE                     	;# 
  1530  0FEF                     	;# 
  1531  0000                     	;# 
  1532  0001                     	;# 
  1533  0002                     	;# 
  1534  0003                     	;# 
  1535  0004                     	;# 
  1536  0005                     	;# 
  1537  0006                     	;# 
  1538  0007                     	;# 
  1539  0008                     	;# 
  1540  0009                     	;# 
  1541  000A                     	;# 
  1542  000B                     	;# 
  1543  000C                     	;# 
  1544  000D                     	;# 
  1545  000E                     	;# 
  1546  0010                     	;# 
  1547  0011                     	;# 
  1548  0012                     	;# 
  1549  0013                     	;# 
  1550  0014                     	;# 
  1551  0015                     	;# 
  1552  0015                     	;# 
  1553  0016                     	;# 
  1554  0016                     	;# 
  1555  0017                     	;# 
  1556  0018                     	;# 
  1557  0019                     	;# 
  1558  0019                     	;# 
  1559  001A                     	;# 
  1560  001B                     	;# 
  1561  001C                     	;# 
  1562  001D                     	;# 
  1563  001E                     	;# 
  1564  001F                     	;# 
  1565  008C                     	;# 
  1566  008D                     	;# 
  1567  008E                     	;# 
  1568  0090                     	;# 
  1569  0091                     	;# 
  1570  0092                     	;# 
  1571  0093                     	;# 
  1572  0094                     	;# 
  1573  0097                     	;# 
  1574  009B                     	;# 
  1575  009B                     	;# 
  1576  009C                     	;# 
  1577  009D                     	;# 
  1578  009E                     	;# 
  1579  009F                     	;# 
  1580  010C                     	;# 
  1581  010D                     	;# 
  1582  010E                     	;# 
  1583  0111                     	;# 
  1584  0112                     	;# 
  1585  0113                     	;# 
  1586  0114                     	;# 
  1587  0115                     	;# 
  1588  0116                     	;# 
  1589  0117                     	;# 
  1590  0118                     	;# 
  1591  0119                     	;# 
  1592  018C                     	;# 
  1593  018D                     	;# 
  1594  018E                     	;# 
  1595  0197                     	;# 
  1596  0199                     	;# 
  1597  0199                     	;# 
  1598  0199                     	;# 
  1599  019A                     	;# 
  1600  019A                     	;# 
  1601  019A                     	;# 
  1602  019B                     	;# 
  1603  019B                     	;# 
  1604  019B                     	;# 
  1605  019B                     	;# 
  1606  019B                     	;# 
  1607  019C                     	;# 
  1608  019C                     	;# 
  1609  019C                     	;# 
  1610  019D                     	;# 
  1611  019D                     	;# 
  1612  019D                     	;# 
  1613  019E                     	;# 
  1614  019E                     	;# 
  1615  019E                     	;# 
  1616  019F                     	;# 
  1617  019F                     	;# 
  1618  019F                     	;# 
  1619  019F                     	;# 
  1620  019F                     	;# 
  1621  020C                     	;# 
  1622  020D                     	;# 
  1623  020E                     	;# 
  1624  0211                     	;# 
  1625  0211                     	;# 
  1626  0212                     	;# 
  1627  0212                     	;# 
  1628  0213                     	;# 
  1629  0213                     	;# 
  1630  0214                     	;# 
  1631  0214                     	;# 
  1632  0215                     	;# 
  1633  0215                     	;# 
  1634  0215                     	;# 
  1635  0215                     	;# 
  1636  0216                     	;# 
  1637  0216                     	;# 
  1638  0217                     	;# 
  1639  0217                     	;# 
  1640  0219                     	;# 
  1641  021A                     	;# 
  1642  021B                     	;# 
  1643  021C                     	;# 
  1644  021D                     	;# 
  1645  021D                     	;# 
  1646  021E                     	;# 
  1647  021F                     	;# 
  1648  028C                     	;# 
  1649  028D                     	;# 
  1650  028E                     	;# 
  1651  0291                     	;# 
  1652  0291                     	;# 
  1653  0292                     	;# 
  1654  0293                     	;# 
  1655  0294                     	;# 
  1656  0295                     	;# 
  1657  0295                     	;# 
  1658  0296                     	;# 
  1659  0297                     	;# 
  1660  0298                     	;# 
  1661  029F                     	;# 
  1662  030C                     	;# 
  1663  030D                     	;# 
  1664  030E                     	;# 
  1665  0311                     	;# 
  1666  0311                     	;# 
  1667  0312                     	;# 
  1668  0313                     	;# 
  1669  0314                     	;# 
  1670  0315                     	;# 
  1671  0315                     	;# 
  1672  0316                     	;# 
  1673  0317                     	;# 
  1674  0318                     	;# 
  1675  038C                     	;# 
  1676  038D                     	;# 
  1677  038E                     	;# 
  1678  0391                     	;# 
  1679  0392                     	;# 
  1680  0393                     	;# 
  1681  0394                     	;# 
  1682  0395                     	;# 
  1683  0396                     	;# 
  1684  0397                     	;# 
  1685  0398                     	;# 
  1686  0399                     	;# 
  1687  039A                     	;# 
  1688  039C                     	;# 
  1689  039D                     	;# 
  1690  039E                     	;# 
  1691  039F                     	;# 
  1692  0411                     	;# 
  1693  0411                     	;# 
  1694  0412                     	;# 
  1695  0413                     	;# 
  1696  0414                     	;# 
  1697  0415                     	;# 
  1698  0416                     	;# 
  1699  0417                     	;# 
  1700  0418                     	;# 
  1701  0418                     	;# 
  1702  0419                     	;# 
  1703  041A                     	;# 
  1704  041B                     	;# 
  1705  041C                     	;# 
  1706  041D                     	;# 
  1707  041E                     	;# 
  1708  041F                     	;# 
  1709  0498                     	;# 
  1710  0498                     	;# 
  1711  0499                     	;# 
  1712  049A                     	;# 
  1713  049B                     	;# 
  1714  049B                     	;# 
  1715  049C                     	;# 
  1716  049D                     	;# 
  1717  049E                     	;# 
  1718  049F                     	;# 
  1719  0617                     	;# 
  1720  0618                     	;# 
  1721  0619                     	;# 
  1722  0619                     	;# 
  1723  061A                     	;# 
  1724  061B                     	;# 
  1725  061C                     	;# 
  1726  061C                     	;# 
  1727  061F                     	;# 
  1728  0691                     	;# 
  1729  0692                     	;# 
  1730  0693                     	;# 
  1731  0694                     	;# 
  1732  0695                     	;# 
  1733  0696                     	;# 
  1734  0697                     	;# 
  1735  0698                     	;# 
  1736  0699                     	;# 
  1737  0711                     	;# 
  1738  0712                     	;# 
  1739  0713                     	;# 
  1740  0714                     	;# 
  1741  0715                     	;# 
  1742  0716                     	;# 
  1743  0717                     	;# 
  1744  0718                     	;# 
  1745  0719                     	;# 
  1746  0891                     	;# 
  1747  0891                     	;# 
  1748  0891                     	;# 
  1749  0891                     	;# 
  1750  0891                     	;# 
  1751  0891                     	;# 
  1752  0892                     	;# 
  1753  0892                     	;# 
  1754  0892                     	;# 
  1755  0893                     	;# 
  1756  0893                     	;# 
  1757  0893                     	;# 
  1758  0893                     	;# 
  1759  0893                     	;# 
  1760  0893                     	;# 
  1761  0894                     	;# 
  1762  0894                     	;# 
  1763  0894                     	;# 
  1764  0895                     	;# 
  1765  0895                     	;# 
  1766  0895                     	;# 
  1767  0896                     	;# 
  1768  0896                     	;# 
  1769  0896                     	;# 
  1770  089B                     	;# 
  1771  0911                     	;# 
  1772  0912                     	;# 
  1773  0913                     	;# 
  1774  0914                     	;# 
  1775  0915                     	;# 
  1776  0916                     	;# 
  1777  0918                     	;# 
  1778  0919                     	;# 
  1779  091A                     	;# 
  1780  091B                     	;# 
  1781  091C                     	;# 
  1782  091D                     	;# 
  1783  091E                     	;# 
  1784  091F                     	;# 
  1785  0E0F                     	;# 
  1786  0E10                     	;# 
  1787  0E11                     	;# 
  1788  0E12                     	;# 
  1789  0E13                     	;# 
  1790  0E14                     	;# 
  1791  0E15                     	;# 
  1792  0E16                     	;# 
  1793  0E17                     	;# 
  1794  0E18                     	;# 
  1795  0E19                     	;# 
  1796  0E1A                     	;# 
  1797  0E1B                     	;# 
  1798  0E1C                     	;# 
  1799  0E1D                     	;# 
  1800  0E1E                     	;# 
  1801  0E1F                     	;# 
  1802  0E20                     	;# 
  1803  0E21                     	;# 
  1804  0E22                     	;# 
  1805  0E24                     	;# 
  1806  0E25                     	;# 
  1807  0E28                     	;# 
  1808  0E29                     	;# 
  1809  0E2A                     	;# 
  1810  0E2B                     	;# 
  1811  0E2C                     	;# 
  1812  0E2D                     	;# 
  1813  0E2E                     	;# 
  1814  0E2F                     	;# 
  1815  0E90                     	;# 
  1816  0E91                     	;# 
  1817  0E92                     	;# 
  1818  0E94                     	;# 
  1819  0E95                     	;# 
  1820  0E9C                     	;# 
  1821  0E9D                     	;# 
  1822  0E9E                     	;# 
  1823  0E9F                     	;# 
  1824  0EA0                     	;# 
  1825  0EA1                     	;# 
  1826  0EA2                     	;# 
  1827  0EA3                     	;# 
  1828  0EA4                     	;# 
  1829  0EA5                     	;# 
  1830  0EA6                     	;# 
  1831  0EA7                     	;# 
  1832  0F0F                     	;# 
  1833  0F10                     	;# 
  1834  0F11                     	;# 
  1835  0F12                     	;# 
  1836  0F13                     	;# 
  1837  0F14                     	;# 
  1838  0F15                     	;# 
  1839  0F16                     	;# 
  1840  0F17                     	;# 
  1841  0F18                     	;# 
  1842  0F19                     	;# 
  1843  0F1A                     	;# 
  1844  0F1B                     	;# 
  1845  0F1C                     	;# 
  1846  0F1D                     	;# 
  1847  0F1E                     	;# 
  1848  0F1F                     	;# 
  1849  0F20                     	;# 
  1850  0F21                     	;# 
  1851  0F22                     	;# 
  1852  0F23                     	;# 
  1853  0F24                     	;# 
  1854  0F25                     	;# 
  1855  0F26                     	;# 
  1856  0F27                     	;# 
  1857  0F28                     	;# 
  1858  0F29                     	;# 
  1859  0F2A                     	;# 
  1860  0F2B                     	;# 
  1861  0F2C                     	;# 
  1862  0F2D                     	;# 
  1863  0F2E                     	;# 
  1864  0F2F                     	;# 
  1865  0F30                     	;# 
  1866  0F31                     	;# 
  1867  0F32                     	;# 
  1868  0F33                     	;# 
  1869  0F34                     	;# 
  1870  0F35                     	;# 
  1871  0F36                     	;# 
  1872  0F37                     	;# 
  1873  0FE4                     	;# 
  1874  0FE5                     	;# 
  1875  0FE6                     	;# 
  1876  0FE7                     	;# 
  1877  0FE8                     	;# 
  1878  0FE9                     	;# 
  1879  0FEA                     	;# 
  1880  0FEB                     	;# 
  1881  0FED                     	;# 
  1882  0FEE                     	;# 
  1883  0FEF                     	;# 
  1884  0000                     	;# 
  1885  0001                     	;# 
  1886  0002                     	;# 
  1887  0003                     	;# 
  1888  0004                     	;# 
  1889  0005                     	;# 
  1890  0006                     	;# 
  1891  0007                     	;# 
  1892  0008                     	;# 
  1893  0009                     	;# 
  1894  000A                     	;# 
  1895  000B                     	;# 
  1896  000C                     	;# 
  1897  000D                     	;# 
  1898  000E                     	;# 
  1899  0010                     	;# 
  1900  0011                     	;# 
  1901  0012                     	;# 
  1902  0013                     	;# 
  1903  0014                     	;# 
  1904  0015                     	;# 
  1905  0015                     	;# 
  1906  0016                     	;# 
  1907  0016                     	;# 
  1908  0017                     	;# 
  1909  0018                     	;# 
  1910  0019                     	;# 
  1911  0019                     	;# 
  1912  001A                     	;# 
  1913  001B                     	;# 
  1914  001C                     	;# 
  1915  001D                     	;# 
  1916  001E                     	;# 
  1917  001F                     	;# 
  1918  008C                     	;# 
  1919  008D                     	;# 
  1920  008E                     	;# 
  1921  0090                     	;# 
  1922  0091                     	;# 
  1923  0092                     	;# 
  1924  0093                     	;# 
  1925  0094                     	;# 
  1926  0097                     	;# 
  1927  009B                     	;# 
  1928  009B                     	;# 
  1929  009C                     	;# 
  1930  009D                     	;# 
  1931  009E                     	;# 
  1932  009F                     	;# 
  1933  010C                     	;# 
  1934  010D                     	;# 
  1935  010E                     	;# 
  1936  0111                     	;# 
  1937  0112                     	;# 
  1938  0113                     	;# 
  1939  0114                     	;# 
  1940  0115                     	;# 
  1941  0116                     	;# 
  1942  0117                     	;# 
  1943  0118                     	;# 
  1944  0119                     	;# 
  1945  018C                     	;# 
  1946  018D                     	;# 
  1947  018E                     	;# 
  1948  0197                     	;# 
  1949  0199                     	;# 
  1950  0199                     	;# 
  1951  0199                     	;# 
  1952  019A                     	;# 
  1953  019A                     	;# 
  1954  019A                     	;# 
  1955  019B                     	;# 
  1956  019B                     	;# 
  1957  019B                     	;# 
  1958  019B                     	;# 
  1959  019B                     	;# 
  1960  019C                     	;# 
  1961  019C                     	;# 
  1962  019C                     	;# 
  1963  019D                     	;# 
  1964  019D                     	;# 
  1965  019D                     	;# 
  1966  019E                     	;# 
  1967  019E                     	;# 
  1968  019E                     	;# 
  1969  019F                     	;# 
  1970  019F                     	;# 
  1971  019F                     	;# 
  1972  019F                     	;# 
  1973  019F                     	;# 
  1974  020C                     	;# 
  1975  020D                     	;# 
  1976  020E                     	;# 
  1977  0211                     	;# 
  1978  0211                     	;# 
  1979  0212                     	;# 
  1980  0212                     	;# 
  1981  0213                     	;# 
  1982  0213                     	;# 
  1983  0214                     	;# 
  1984  0214                     	;# 
  1985  0215                     	;# 
  1986  0215                     	;# 
  1987  0215                     	;# 
  1988  0215                     	;# 
  1989  0216                     	;# 
  1990  0216                     	;# 
  1991  0217                     	;# 
  1992  0217                     	;# 
  1993  0219                     	;# 
  1994  021A                     	;# 
  1995  021B                     	;# 
  1996  021C                     	;# 
  1997  021D                     	;# 
  1998  021D                     	;# 
  1999  021E                     	;# 
  2000  021F                     	;# 
  2001  028C                     	;# 
  2002  028D                     	;# 
  2003  028E                     	;# 
  2004  0291                     	;# 
  2005  0291                     	;# 
  2006  0292                     	;# 
  2007  0293                     	;# 
  2008  0294                     	;# 
  2009  0295                     	;# 
  2010  0295                     	;# 
  2011  0296                     	;# 
  2012  0297                     	;# 
  2013  0298                     	;# 
  2014  029F                     	;# 
  2015  030C                     	;# 
  2016  030D                     	;# 
  2017  030E                     	;# 
  2018  0311                     	;# 
  2019  0311                     	;# 
  2020  0312                     	;# 
  2021  0313                     	;# 
  2022  0314                     	;# 
  2023  0315                     	;# 
  2024  0315                     	;# 
  2025  0316                     	;# 
  2026  0317                     	;# 
  2027  0318                     	;# 
  2028  038C                     	;# 
  2029  038D                     	;# 
  2030  038E                     	;# 
  2031  0391                     	;# 
  2032  0392                     	;# 
  2033  0393                     	;# 
  2034  0394                     	;# 
  2035  0395                     	;# 
  2036  0396                     	;# 
  2037  0397                     	;# 
  2038  0398                     	;# 
  2039  0399                     	;# 
  2040  039A                     	;# 
  2041  039C                     	;# 
  2042  039D                     	;# 
  2043  039E                     	;# 
  2044  039F                     	;# 
  2045  0411                     	;# 
  2046  0411                     	;# 
  2047  0412                     	;# 
  2048  0413                     	;# 
  2049  0414                     	;# 
  2050  0415                     	;# 
  2051  0416                     	;# 
  2052  0417                     	;# 
  2053  0418                     	;# 
  2054  0418                     	;# 
  2055  0419                     	;# 
  2056  041A                     	;# 
  2057  041B                     	;# 
  2058  041C                     	;# 
  2059  041D                     	;# 
  2060  041E                     	;# 
  2061  041F                     	;# 
  2062  0498                     	;# 
  2063  0498                     	;# 
  2064  0499                     	;# 
  2065  049A                     	;# 
  2066  049B                     	;# 
  2067  049B                     	;# 
  2068  049C                     	;# 
  2069  049D                     	;# 
  2070  049E                     	;# 
  2071  049F                     	;# 
  2072  0617                     	;# 
  2073  0618                     	;# 
  2074  0619                     	;# 
  2075  0619                     	;# 
  2076  061A                     	;# 
  2077  061B                     	;# 
  2078  061C                     	;# 
  2079  061C                     	;# 
  2080  061F                     	;# 
  2081  0691                     	;# 
  2082  0692                     	;# 
  2083  0693                     	;# 
  2084  0694                     	;# 
  2085  0695                     	;# 
  2086  0696                     	;# 
  2087  0697                     	;# 
  2088  0698                     	;# 
  2089  0699                     	;# 
  2090  0711                     	;# 
  2091  0712                     	;# 
  2092  0713                     	;# 
  2093  0714                     	;# 
  2094  0715                     	;# 
  2095  0716                     	;# 
  2096  0717                     	;# 
  2097  0718                     	;# 
  2098  0719                     	;# 
  2099  0891                     	;# 
  2100  0891                     	;# 
  2101  0891                     	;# 
  2102  0891                     	;# 
  2103  0891                     	;# 
  2104  0891                     	;# 
  2105  0892                     	;# 
  2106  0892                     	;# 
  2107  0892                     	;# 
  2108  0893                     	;# 
  2109  0893                     	;# 
  2110  0893                     	;# 
  2111  0893                     	;# 
  2112  0893                     	;# 
  2113  0893                     	;# 
  2114  0894                     	;# 
  2115  0894                     	;# 
  2116  0894                     	;# 
  2117  0895                     	;# 
  2118  0895                     	;# 
  2119  0895                     	;# 
  2120  0896                     	;# 
  2121  0896                     	;# 
  2122  0896                     	;# 
  2123  089B                     	;# 
  2124  0911                     	;# 
  2125  0912                     	;# 
  2126  0913                     	;# 
  2127  0914                     	;# 
  2128  0915                     	;# 
  2129  0916                     	;# 
  2130  0918                     	;# 
  2131  0919                     	;# 
  2132  091A                     	;# 
  2133  091B                     	;# 
  2134  091C                     	;# 
  2135  091D                     	;# 
  2136  091E                     	;# 
  2137  091F                     	;# 
  2138  0E0F                     	;# 
  2139  0E10                     	;# 
  2140  0E11                     	;# 
  2141  0E12                     	;# 
  2142  0E13                     	;# 
  2143  0E14                     	;# 
  2144  0E15                     	;# 
  2145  0E16                     	;# 
  2146  0E17                     	;# 
  2147  0E18                     	;# 
  2148  0E19                     	;# 
  2149  0E1A                     	;# 
  2150  0E1B                     	;# 
  2151  0E1C                     	;# 
  2152  0E1D                     	;# 
  2153  0E1E                     	;# 
  2154  0E1F                     	;# 
  2155  0E20                     	;# 
  2156  0E21                     	;# 
  2157  0E22                     	;# 
  2158  0E24                     	;# 
  2159  0E25                     	;# 
  2160  0E28                     	;# 
  2161  0E29                     	;# 
  2162  0E2A                     	;# 
  2163  0E2B                     	;# 
  2164  0E2C                     	;# 
  2165  0E2D                     	;# 
  2166  0E2E                     	;# 
  2167  0E2F                     	;# 
  2168  0E90                     	;# 
  2169  0E91                     	;# 
  2170  0E92                     	;# 
  2171  0E94                     	;# 
  2172  0E95                     	;# 
  2173  0E9C                     	;# 
  2174  0E9D                     	;# 
  2175  0E9E                     	;# 
  2176  0E9F                     	;# 
  2177  0EA0                     	;# 
  2178  0EA1                     	;# 
  2179  0EA2                     	;# 
  2180  0EA3                     	;# 
  2181  0EA4                     	;# 
  2182  0EA5                     	;# 
  2183  0EA6                     	;# 
  2184  0EA7                     	;# 
  2185  0F0F                     	;# 
  2186  0F10                     	;# 
  2187  0F11                     	;# 
  2188  0F12                     	;# 
  2189  0F13                     	;# 
  2190  0F14                     	;# 
  2191  0F15                     	;# 
  2192  0F16                     	;# 
  2193  0F17                     	;# 
  2194  0F18                     	;# 
  2195  0F19                     	;# 
  2196  0F1A                     	;# 
  2197  0F1B                     	;# 
  2198  0F1C                     	;# 
  2199  0F1D                     	;# 
  2200  0F1E                     	;# 
  2201  0F1F                     	;# 
  2202  0F20                     	;# 
  2203  0F21                     	;# 
  2204  0F22                     	;# 
  2205  0F23                     	;# 
  2206  0F24                     	;# 
  2207  0F25                     	;# 
  2208  0F26                     	;# 
  2209  0F27                     	;# 
  2210  0F28                     	;# 
  2211  0F29                     	;# 
  2212  0F2A                     	;# 
  2213  0F2B                     	;# 
  2214  0F2C                     	;# 
  2215  0F2D                     	;# 
  2216  0F2E                     	;# 
  2217  0F2F                     	;# 
  2218  0F30                     	;# 
  2219  0F31                     	;# 
  2220  0F32                     	;# 
  2221  0F33                     	;# 
  2222  0F34                     	;# 
  2223  0F35                     	;# 
  2224  0F36                     	;# 
  2225  0F37                     	;# 
  2226  0FE4                     	;# 
  2227  0FE5                     	;# 
  2228  0FE6                     	;# 
  2229  0FE7                     	;# 
  2230  0FE8                     	;# 
  2231  0FE9                     	;# 
  2232  0FEA                     	;# 
  2233  0FEB                     	;# 
  2234  0FED                     	;# 
  2235  0FEE                     	;# 
  2236  0FEF                     	;# 
  2237  0000                     	;# 
  2238  0001                     	;# 
  2239  0002                     	;# 
  2240  0003                     	;# 
  2241  0004                     	;# 
  2242  0005                     	;# 
  2243  0006                     	;# 
  2244  0007                     	;# 
  2245  0008                     	;# 
  2246  0009                     	;# 
  2247  000A                     	;# 
  2248  000B                     	;# 
  2249  000C                     	;# 
  2250  000D                     	;# 
  2251  000E                     	;# 
  2252  0010                     	;# 
  2253  0011                     	;# 
  2254  0012                     	;# 
  2255  0013                     	;# 
  2256  0014                     	;# 
  2257  0015                     	;# 
  2258  0015                     	;# 
  2259  0016                     	;# 
  2260  0016                     	;# 
  2261  0017                     	;# 
  2262  0018                     	;# 
  2263  0019                     	;# 
  2264  0019                     	;# 
  2265  001A                     	;# 
  2266  001B                     	;# 
  2267  001C                     	;# 
  2268  001D                     	;# 
  2269  001E                     	;# 
  2270  001F                     	;# 
  2271  008C                     	;# 
  2272  008D                     	;# 
  2273  008E                     	;# 
  2274  0090                     	;# 
  2275  0091                     	;# 
  2276  0092                     	;# 
  2277  0093                     	;# 
  2278  0094                     	;# 
  2279  0097                     	;# 
  2280  009B                     	;# 
  2281  009B                     	;# 
  2282  009C                     	;# 
  2283  009D                     	;# 
  2284  009E                     	;# 
  2285  009F                     	;# 
  2286  010C                     	;# 
  2287  010D                     	;# 
  2288  010E                     	;# 
  2289  0111                     	;# 
  2290  0112                     	;# 
  2291  0113                     	;# 
  2292  0114                     	;# 
  2293  0115                     	;# 
  2294  0116                     	;# 
  2295  0117                     	;# 
  2296  0118                     	;# 
  2297  0119                     	;# 
  2298  018C                     	;# 
  2299  018D                     	;# 
  2300  018E                     	;# 
  2301  0197                     	;# 
  2302  0199                     	;# 
  2303  0199                     	;# 
  2304  0199                     	;# 
  2305  019A                     	;# 
  2306  019A                     	;# 
  2307  019A                     	;# 
  2308  019B                     	;# 
  2309  019B                     	;# 
  2310  019B                     	;# 
  2311  019B                     	;# 
  2312  019B                     	;# 
  2313  019C                     	;# 
  2314  019C                     	;# 
  2315  019C                     	;# 
  2316  019D                     	;# 
  2317  019D                     	;# 
  2318  019D                     	;# 
  2319  019E                     	;# 
  2320  019E                     	;# 
  2321  019E                     	;# 
  2322  019F                     	;# 
  2323  019F                     	;# 
  2324  019F                     	;# 
  2325  019F                     	;# 
  2326  019F                     	;# 
  2327  020C                     	;# 
  2328  020D                     	;# 
  2329  020E                     	;# 
  2330  0211                     	;# 
  2331  0211                     	;# 
  2332  0212                     	;# 
  2333  0212                     	;# 
  2334  0213                     	;# 
  2335  0213                     	;# 
  2336  0214                     	;# 
  2337  0214                     	;# 
  2338  0215                     	;# 
  2339  0215                     	;# 
  2340  0215                     	;# 
  2341  0215                     	;# 
  2342  0216                     	;# 
  2343  0216                     	;# 
  2344  0217                     	;# 
  2345  0217                     	;# 
  2346  0219                     	;# 
  2347  021A                     	;# 
  2348  021B                     	;# 
  2349  021C                     	;# 
  2350  021D                     	;# 
  2351  021D                     	;# 
  2352  021E                     	;# 
  2353  021F                     	;# 
  2354  028C                     	;# 
  2355  028D                     	;# 
  2356  028E                     	;# 
  2357  0291                     	;# 
  2358  0291                     	;# 
  2359  0292                     	;# 
  2360  0293                     	;# 
  2361  0294                     	;# 
  2362  0295                     	;# 
  2363  0295                     	;# 
  2364  0296                     	;# 
  2365  0297                     	;# 
  2366  0298                     	;# 
  2367  029F                     	;# 
  2368  030C                     	;# 
  2369  030D                     	;# 
  2370  030E                     	;# 
  2371  0311                     	;# 
  2372  0311                     	;# 
  2373  0312                     	;# 
  2374  0313                     	;# 
  2375  0314                     	;# 
  2376  0315                     	;# 
  2377  0315                     	;# 
  2378  0316                     	;# 
  2379  0317                     	;# 
  2380  0318                     	;# 
  2381  038C                     	;# 
  2382  038D                     	;# 
  2383  038E                     	;# 
  2384  0391                     	;# 
  2385  0392                     	;# 
  2386  0393                     	;# 
  2387  0394                     	;# 
  2388  0395                     	;# 
  2389  0396                     	;# 
  2390  0397                     	;# 
  2391  0398                     	;# 
  2392  0399                     	;# 
  2393  039A                     	;# 
  2394  039C                     	;# 
  2395  039D                     	;# 
  2396  039E                     	;# 
  2397  039F                     	;# 
  2398  0411                     	;# 
  2399  0411                     	;# 
  2400  0412                     	;# 
  2401  0413                     	;# 
  2402  0414                     	;# 
  2403  0415                     	;# 
  2404  0416                     	;# 
  2405  0417                     	;# 
  2406  0418                     	;# 
  2407  0418                     	;# 
  2408  0419                     	;# 
  2409  041A                     	;# 
  2410  041B                     	;# 
  2411  041C                     	;# 
  2412  041D                     	;# 
  2413  041E                     	;# 
  2414  041F                     	;# 
  2415  0498                     	;# 
  2416  0498                     	;# 
  2417  0499                     	;# 
  2418  049A                     	;# 
  2419  049B                     	;# 
  2420  049B                     	;# 
  2421  049C                     	;# 
  2422  049D                     	;# 
  2423  049E                     	;# 
  2424  049F                     	;# 
  2425  0617                     	;# 
  2426  0618                     	;# 
  2427  0619                     	;# 
  2428  0619                     	;# 
  2429  061A                     	;# 
  2430  061B                     	;# 
  2431  061C                     	;# 
  2432  061C                     	;# 
  2433  061F                     	;# 
  2434  0691                     	;# 
  2435  0692                     	;# 
  2436  0693                     	;# 
  2437  0694                     	;# 
  2438  0695                     	;# 
  2439  0696                     	;# 
  2440  0697                     	;# 
  2441  0698                     	;# 
  2442  0699                     	;# 
  2443  0711                     	;# 
  2444  0712                     	;# 
  2445  0713                     	;# 
  2446  0714                     	;# 
  2447  0715                     	;# 
  2448  0716                     	;# 
  2449  0717                     	;# 
  2450  0718                     	;# 
  2451  0719                     	;# 
  2452  0891                     	;# 
  2453  0891                     	;# 
  2454  0891                     	;# 
  2455  0891                     	;# 
  2456  0891                     	;# 
  2457  0891                     	;# 
  2458  0892                     	;# 
  2459  0892                     	;# 
  2460  0892                     	;# 
  2461  0893                     	;# 
  2462  0893                     	;# 
  2463  0893                     	;# 
  2464  0893                     	;# 
  2465  0893                     	;# 
  2466  0893                     	;# 
  2467  0894                     	;# 
  2468  0894                     	;# 
  2469  0894                     	;# 
  2470  0895                     	;# 
  2471  0895                     	;# 
  2472  0895                     	;# 
  2473  0896                     	;# 
  2474  0896                     	;# 
  2475  0896                     	;# 
  2476  089B                     	;# 
  2477  0911                     	;# 
  2478  0912                     	;# 
  2479  0913                     	;# 
  2480  0914                     	;# 
  2481  0915                     	;# 
  2482  0916                     	;# 
  2483  0918                     	;# 
  2484  0919                     	;# 
  2485  091A                     	;# 
  2486  091B                     	;# 
  2487  091C                     	;# 
  2488  091D                     	;# 
  2489  091E                     	;# 
  2490  091F                     	;# 
  2491  0E0F                     	;# 
  2492  0E10                     	;# 
  2493  0E11                     	;# 
  2494  0E12                     	;# 
  2495  0E13                     	;# 
  2496  0E14                     	;# 
  2497  0E15                     	;# 
  2498  0E16                     	;# 
  2499  0E17                     	;# 
  2500  0E18                     	;# 
  2501  0E19                     	;# 
  2502  0E1A                     	;# 
  2503  0E1B                     	;# 
  2504  0E1C                     	;# 
  2505  0E1D                     	;# 
  2506  0E1E                     	;# 
  2507  0E1F                     	;# 
  2508  0E20                     	;# 
  2509  0E21                     	;# 
  2510  0E22                     	;# 
  2511  0E24                     	;# 
  2512  0E25                     	;# 
  2513  0E28                     	;# 
  2514  0E29                     	;# 
  2515  0E2A                     	;# 
  2516  0E2B                     	;# 
  2517  0E2C                     	;# 
  2518  0E2D                     	;# 
  2519  0E2E                     	;# 
  2520  0E2F                     	;# 
  2521  0E90                     	;# 
  2522  0E91                     	;# 
  2523  0E92                     	;# 
  2524  0E94                     	;# 
  2525  0E95                     	;# 
  2526  0E9C                     	;# 
  2527  0E9D                     	;# 
  2528  0E9E                     	;# 
  2529  0E9F                     	;# 
  2530  0EA0                     	;# 
  2531  0EA1                     	;# 
  2532  0EA2                     	;# 
  2533  0EA3                     	;# 
  2534  0EA4                     	;# 
  2535  0EA5                     	;# 
  2536  0EA6                     	;# 
  2537  0EA7                     	;# 
  2538  0F0F                     	;# 
  2539  0F10                     	;# 
  2540  0F11                     	;# 
  2541  0F12                     	;# 
  2542  0F13                     	;# 
  2543  0F14                     	;# 
  2544  0F15                     	;# 
  2545  0F16                     	;# 
  2546  0F17                     	;# 
  2547  0F18                     	;# 
  2548  0F19                     	;# 
  2549  0F1A                     	;# 
  2550  0F1B                     	;# 
  2551  0F1C                     	;# 
  2552  0F1D                     	;# 
  2553  0F1E                     	;# 
  2554  0F1F                     	;# 
  2555  0F20                     	;# 
  2556  0F21                     	;# 
  2557  0F22                     	;# 
  2558  0F23                     	;# 
  2559  0F24                     	;# 
  2560  0F25                     	;# 
  2561  0F26                     	;# 
  2562  0F27                     	;# 
  2563  0F28                     	;# 
  2564  0F29                     	;# 
  2565  0F2A                     	;# 
  2566  0F2B                     	;# 
  2567  0F2C                     	;# 
  2568  0F2D                     	;# 
  2569  0F2E                     	;# 
  2570  0F2F                     	;# 
  2571  0F30                     	;# 
  2572  0F31                     	;# 
  2573  0F32                     	;# 
  2574  0F33                     	;# 
  2575  0F34                     	;# 
  2576  0F35                     	;# 
  2577  0F36                     	;# 
  2578  0F37                     	;# 
  2579  0FE4                     	;# 
  2580  0FE5                     	;# 
  2581  0FE6                     	;# 
  2582  0FE7                     	;# 
  2583  0FE8                     	;# 
  2584  0FE9                     	;# 
  2585  0FEA                     	;# 
  2586  0FEB                     	;# 
  2587  0FED                     	;# 
  2588  0FEE                     	;# 
  2589  0FEF                     	;# 
  2590  0000                     	;# 
  2591  0001                     	;# 
  2592  0002                     	;# 
  2593  0003                     	;# 
  2594  0004                     	;# 
  2595  0005                     	;# 
  2596  0006                     	;# 
  2597  0007                     	;# 
  2598  0008                     	;# 
  2599  0009                     	;# 
  2600  000A                     	;# 
  2601  000B                     	;# 
  2602  000C                     	;# 
  2603  000D                     	;# 
  2604  000E                     	;# 
  2605  0010                     	;# 
  2606  0011                     	;# 
  2607  0012                     	;# 
  2608  0013                     	;# 
  2609  0014                     	;# 
  2610  0015                     	;# 
  2611  0015                     	;# 
  2612  0016                     	;# 
  2613  0016                     	;# 
  2614  0017                     	;# 
  2615  0018                     	;# 
  2616  0019                     	;# 
  2617  0019                     	;# 
  2618  001A                     	;# 
  2619  001B                     	;# 
  2620  001C                     	;# 
  2621  001D                     	;# 
  2622  001E                     	;# 
  2623  001F                     	;# 
  2624  008C                     	;# 
  2625  008D                     	;# 
  2626  008E                     	;# 
  2627  0090                     	;# 
  2628  0091                     	;# 
  2629  0092                     	;# 
  2630  0093                     	;# 
  2631  0094                     	;# 
  2632  0097                     	;# 
  2633  009B                     	;# 
  2634  009B                     	;# 
  2635  009C                     	;# 
  2636  009D                     	;# 
  2637  009E                     	;# 
  2638  009F                     	;# 
  2639  010C                     	;# 
  2640  010D                     	;# 
  2641  010E                     	;# 
  2642  0111                     	;# 
  2643  0112                     	;# 
  2644  0113                     	;# 
  2645  0114                     	;# 
  2646  0115                     	;# 
  2647  0116                     	;# 
  2648  0117                     	;# 
  2649  0118                     	;# 
  2650  0119                     	;# 
  2651  018C                     	;# 
  2652  018D                     	;# 
  2653  018E                     	;# 
  2654  0197                     	;# 
  2655  0199                     	;# 
  2656  0199                     	;# 
  2657  0199                     	;# 
  2658  019A                     	;# 
  2659  019A                     	;# 
  2660  019A                     	;# 
  2661  019B                     	;# 
  2662  019B                     	;# 
  2663  019B                     	;# 
  2664  019B                     	;# 
  2665  019B                     	;# 
  2666  019C                     	;# 
  2667  019C                     	;# 
  2668  019C                     	;# 
  2669  019D                     	;# 
  2670  019D                     	;# 
  2671  019D                     	;# 
  2672  019E                     	;# 
  2673  019E                     	;# 
  2674  019E                     	;# 
  2675  019F                     	;# 
  2676  019F                     	;# 
  2677  019F                     	;# 
  2678  019F                     	;# 
  2679  019F                     	;# 
  2680  020C                     	;# 
  2681  020D                     	;# 
  2682  020E                     	;# 
  2683  0211                     	;# 
  2684  0211                     	;# 
  2685  0212                     	;# 
  2686  0212                     	;# 
  2687  0213                     	;# 
  2688  0213                     	;# 
  2689  0214                     	;# 
  2690  0214                     	;# 
  2691  0215                     	;# 
  2692  0215                     	;# 
  2693  0215                     	;# 
  2694  0215                     	;# 
  2695  0216                     	;# 
  2696  0216                     	;# 
  2697  0217                     	;# 
  2698  0217                     	;# 
  2699  0219                     	;# 
  2700  021A                     	;# 
  2701  021B                     	;# 
  2702  021C                     	;# 
  2703  021D                     	;# 
  2704  021D                     	;# 
  2705  021E                     	;# 
  2706  021F                     	;# 
  2707  028C                     	;# 
  2708  028D                     	;# 
  2709  028E                     	;# 
  2710  0291                     	;# 
  2711  0291                     	;# 
  2712  0292                     	;# 
  2713  0293                     	;# 
  2714  0294                     	;# 
  2715  0295                     	;# 
  2716  0295                     	;# 
  2717  0296                     	;# 
  2718  0297                     	;# 
  2719  0298                     	;# 
  2720  029F                     	;# 
  2721  030C                     	;# 
  2722  030D                     	;# 
  2723  030E                     	;# 
  2724  0311                     	;# 
  2725  0311                     	;# 
  2726  0312                     	;# 
  2727  0313                     	;# 
  2728  0314                     	;# 
  2729  0315                     	;# 
  2730  0315                     	;# 
  2731  0316                     	;# 
  2732  0317                     	;# 
  2733  0318                     	;# 
  2734  038C                     	;# 
  2735  038D                     	;# 
  2736  038E                     	;# 
  2737  0391                     	;# 
  2738  0392                     	;# 
  2739  0393                     	;# 
  2740  0394                     	;# 
  2741  0395                     	;# 
  2742  0396                     	;# 
  2743  0397                     	;# 
  2744  0398                     	;# 
  2745  0399                     	;# 
  2746  039A                     	;# 
  2747  039C                     	;# 
  2748  039D                     	;# 
  2749  039E                     	;# 
  2750  039F                     	;# 
  2751  0411                     	;# 
  2752  0411                     	;# 
  2753  0412                     	;# 
  2754  0413                     	;# 
  2755  0414                     	;# 
  2756  0415                     	;# 
  2757  0416                     	;# 
  2758  0417                     	;# 
  2759  0418                     	;# 
  2760  0418                     	;# 
  2761  0419                     	;# 
  2762  041A                     	;# 
  2763  041B                     	;# 
  2764  041C                     	;# 
  2765  041D                     	;# 
  2766  041E                     	;# 
  2767  041F                     	;# 
  2768  0498                     	;# 
  2769  0498                     	;# 
  2770  0499                     	;# 
  2771  049A                     	;# 
  2772  049B                     	;# 
  2773  049B                     	;# 
  2774  049C                     	;# 
  2775  049D                     	;# 
  2776  049E                     	;# 
  2777  049F                     	;# 
  2778  0617                     	;# 
  2779  0618                     	;# 
  2780  0619                     	;# 
  2781  0619                     	;# 
  2782  061A                     	;# 
  2783  061B                     	;# 
  2784  061C                     	;# 
  2785  061C                     	;# 
  2786  061F                     	;# 
  2787  0691                     	;# 
  2788  0692                     	;# 
  2789  0693                     	;# 
  2790  0694                     	;# 
  2791  0695                     	;# 
  2792  0696                     	;# 
  2793  0697                     	;# 
  2794  0698                     	;# 
  2795  0699                     	;# 
  2796  0711                     	;# 
  2797  0712                     	;# 
  2798  0713                     	;# 
  2799  0714                     	;# 
  2800  0715                     	;# 
  2801  0716                     	;# 
  2802  0717                     	;# 
  2803  0718                     	;# 
  2804  0719                     	;# 
  2805  0891                     	;# 
  2806  0891                     	;# 
  2807  0891                     	;# 
  2808  0891                     	;# 
  2809  0891                     	;# 
  2810  0891                     	;# 
  2811  0892                     	;# 
  2812  0892                     	;# 
  2813  0892                     	;# 
  2814  0893                     	;# 
  2815  0893                     	;# 
  2816  0893                     	;# 
  2817  0893                     	;# 
  2818  0893                     	;# 
  2819  0893                     	;# 
  2820  0894                     	;# 
  2821  0894                     	;# 
  2822  0894                     	;# 
  2823  0895                     	;# 
  2824  0895                     	;# 
  2825  0895                     	;# 
  2826  0896                     	;# 
  2827  0896                     	;# 
  2828  0896                     	;# 
  2829  089B                     	;# 
  2830  0911                     	;# 
  2831  0912                     	;# 
  2832  0913                     	;# 
  2833  0914                     	;# 
  2834  0915                     	;# 
  2835  0916                     	;# 
  2836  0918                     	;# 
  2837  0919                     	;# 
  2838  091A                     	;# 
  2839  091B                     	;# 
  2840  091C                     	;# 
  2841  091D                     	;# 
  2842  091E                     	;# 
  2843  091F                     	;# 
  2844  0E0F                     	;# 
  2845  0E10                     	;# 
  2846  0E11                     	;# 
  2847  0E12                     	;# 
  2848  0E13                     	;# 
  2849  0E14                     	;# 
  2850  0E15                     	;# 
  2851  0E16                     	;# 
  2852  0E17                     	;# 
  2853  0E18                     	;# 
  2854  0E19                     	;# 
  2855  0E1A                     	;# 
  2856  0E1B                     	;# 
  2857  0E1C                     	;# 
  2858  0E1D                     	;# 
  2859  0E1E                     	;# 
  2860  0E1F                     	;# 
  2861  0E20                     	;# 
  2862  0E21                     	;# 
  2863  0E22                     	;# 
  2864  0E24                     	;# 
  2865  0E25                     	;# 
  2866  0E28                     	;# 
  2867  0E29                     	;# 
  2868  0E2A                     	;# 
  2869  0E2B                     	;# 
  2870  0E2C                     	;# 
  2871  0E2D                     	;# 
  2872  0E2E                     	;# 
  2873  0E2F                     	;# 
  2874  0E90                     	;# 
  2875  0E91                     	;# 
  2876  0E92                     	;# 
  2877  0E94                     	;# 
  2878  0E95                     	;# 
  2879  0E9C                     	;# 
  2880  0E9D                     	;# 
  2881  0E9E                     	;# 
  2882  0E9F                     	;# 
  2883  0EA0                     	;# 
  2884  0EA1                     	;# 
  2885  0EA2                     	;# 
  2886  0EA3                     	;# 
  2887  0EA4                     	;# 
  2888  0EA5                     	;# 
  2889  0EA6                     	;# 
  2890  0EA7                     	;# 
  2891  0F0F                     	;# 
  2892  0F10                     	;# 
  2893  0F11                     	;# 
  2894  0F12                     	;# 
  2895  0F13                     	;# 
  2896  0F14                     	;# 
  2897  0F15                     	;# 
  2898  0F16                     	;# 
  2899  0F17                     	;# 
  2900  0F18                     	;# 
  2901  0F19                     	;# 
  2902  0F1A                     	;# 
  2903  0F1B                     	;# 
  2904  0F1C                     	;# 
  2905  0F1D                     	;# 
  2906  0F1E                     	;# 
  2907  0F1F                     	;# 
  2908  0F20                     	;# 
  2909  0F21                     	;# 
  2910  0F22                     	;# 
  2911  0F23                     	;# 
  2912  0F24                     	;# 
  2913  0F25                     	;# 
  2914  0F26                     	;# 
  2915  0F27                     	;# 
  2916  0F28                     	;# 
  2917  0F29                     	;# 
  2918  0F2A                     	;# 
  2919  0F2B                     	;# 
  2920  0F2C                     	;# 
  2921  0F2D                     	;# 
  2922  0F2E                     	;# 
  2923  0F2F                     	;# 
  2924  0F30                     	;# 
  2925  0F31                     	;# 
  2926  0F32                     	;# 
  2927  0F33                     	;# 
  2928  0F34                     	;# 
  2929  0F35                     	;# 
  2930  0F36                     	;# 
  2931  0F37                     	;# 
  2932  0FE4                     	;# 
  2933  0FE5                     	;# 
  2934  0FE6                     	;# 
  2935  0FE7                     	;# 
  2936  0FE8                     	;# 
  2937  0FE9                     	;# 
  2938  0FEA                     	;# 
  2939  0FEB                     	;# 
  2940  0FED                     	;# 
  2941  0FEE                     	;# 
  2942  0FEF                     	;# 
  2943  0000                     	;# 
  2944  0001                     	;# 
  2945  0002                     	;# 
  2946  0003                     	;# 
  2947  0004                     	;# 
  2948  0005                     	;# 
  2949  0006                     	;# 
  2950  0007                     	;# 
  2951  0008                     	;# 
  2952  0009                     	;# 
  2953  000A                     	;# 
  2954  000B                     	;# 
  2955  000C                     	;# 
  2956  000D                     	;# 
  2957  000E                     	;# 
  2958  0010                     	;# 
  2959  0011                     	;# 
  2960  0012                     	;# 
  2961  0013                     	;# 
  2962  0014                     	;# 
  2963  0015                     	;# 
  2964  0015                     	;# 
  2965  0016                     	;# 
  2966  0016                     	;# 
  2967  0017                     	;# 
  2968  0018                     	;# 
  2969  0019                     	;# 
  2970  0019                     	;# 
  2971  001A                     	;# 
  2972  001B                     	;# 
  2973  001C                     	;# 
  2974  001D                     	;# 
  2975  001E                     	;# 
  2976  001F                     	;# 
  2977  008C                     	;# 
  2978  008D                     	;# 
  2979  008E                     	;# 
  2980  0090                     	;# 
  2981  0091                     	;# 
  2982  0092                     	;# 
  2983  0093                     	;# 
  2984  0094                     	;# 
  2985  0097                     	;# 
  2986  009B                     	;# 
  2987  009B                     	;# 
  2988  009C                     	;# 
  2989  009D                     	;# 
  2990  009E                     	;# 
  2991  009F                     	;# 
  2992  010C                     	;# 
  2993  010D                     	;# 
  2994  010E                     	;# 
  2995  0111                     	;# 
  2996  0112                     	;# 
  2997  0113                     	;# 
  2998  0114                     	;# 
  2999  0115                     	;# 
  3000  0116                     	;# 
  3001  0117                     	;# 
  3002  0118                     	;# 
  3003  0119                     	;# 
  3004  018C                     	;# 
  3005  018D                     	;# 
  3006  018E                     	;# 
  3007  0197                     	;# 
  3008  0199                     	;# 
  3009  0199                     	;# 
  3010  0199                     	;# 
  3011  019A                     	;# 
  3012  019A                     	;# 
  3013  019A                     	;# 
  3014  019B                     	;# 
  3015  019B                     	;# 
  3016  019B                     	;# 
  3017  019B                     	;# 
  3018  019B                     	;# 
  3019  019C                     	;# 
  3020  019C                     	;# 
  3021  019C                     	;# 
  3022  019D                     	;# 
  3023  019D                     	;# 
  3024  019D                     	;# 
  3025  019E                     	;# 
  3026  019E                     	;# 
  3027  019E                     	;# 
  3028  019F                     	;# 
  3029  019F                     	;# 
  3030  019F                     	;# 
  3031  019F                     	;# 
  3032  019F                     	;# 
  3033  020C                     	;# 
  3034  020D                     	;# 
  3035  020E                     	;# 
  3036  0211                     	;# 
  3037  0211                     	;# 
  3038  0212                     	;# 
  3039  0212                     	;# 
  3040  0213                     	;# 
  3041  0213                     	;# 
  3042  0214                     	;# 
  3043  0214                     	;# 
  3044  0215                     	;# 
  3045  0215                     	;# 
  3046  0215                     	;# 
  3047  0215                     	;# 
  3048  0216                     	;# 
  3049  0216                     	;# 
  3050  0217                     	;# 
  3051  0217                     	;# 
  3052  0219                     	;# 
  3053  021A                     	;# 
  3054  021B                     	;# 
  3055  021C                     	;# 
  3056  021D                     	;# 
  3057  021D                     	;# 
  3058  021E                     	;# 
  3059  021F                     	;# 
  3060  028C                     	;# 
  3061  028D                     	;# 
  3062  028E                     	;# 
  3063  0291                     	;# 
  3064  0291                     	;# 
  3065  0292                     	;# 
  3066  0293                     	;# 
  3067  0294                     	;# 
  3068  0295                     	;# 
  3069  0295                     	;# 
  3070  0296                     	;# 
  3071  0297                     	;# 
  3072  0298                     	;# 
  3073  029F                     	;# 
  3074  030C                     	;# 
  3075  030D                     	;# 
  3076  030E                     	;# 
  3077  0311                     	;# 
  3078  0311                     	;# 
  3079  0312                     	;# 
  3080  0313                     	;# 
  3081  0314                     	;# 
  3082  0315                     	;# 
  3083  0315                     	;# 
  3084  0316                     	;# 
  3085  0317                     	;# 
  3086  0318                     	;# 
  3087  038C                     	;# 
  3088  038D                     	;# 
  3089  038E                     	;# 
  3090  0391                     	;# 
  3091  0392                     	;# 
  3092  0393                     	;# 
  3093  0394                     	;# 
  3094  0395                     	;# 
  3095  0396                     	;# 
  3096  0397                     	;# 
  3097  0398                     	;# 
  3098  0399                     	;# 
  3099  039A                     	;# 
  3100  039C                     	;# 
  3101  039D                     	;# 
  3102  039E                     	;# 
  3103  039F                     	;# 
  3104  0411                     	;# 
  3105  0411                     	;# 
  3106  0412                     	;# 
  3107  0413                     	;# 
  3108  0414                     	;# 
  3109  0415                     	;# 
  3110  0416                     	;# 
  3111  0417                     	;# 
  3112  0418                     	;# 
  3113  0418                     	;# 
  3114  0419                     	;# 
  3115  041A                     	;# 
  3116  041B                     	;# 
  3117  041C                     	;# 
  3118  041D                     	;# 
  3119  041E                     	;# 
  3120  041F                     	;# 
  3121  0498                     	;# 
  3122  0498                     	;# 
  3123  0499                     	;# 
  3124  049A                     	;# 
  3125  049B                     	;# 
  3126  049B                     	;# 
  3127  049C                     	;# 
  3128  049D                     	;# 
  3129  049E                     	;# 
  3130  049F                     	;# 
  3131  0617                     	;# 
  3132  0618                     	;# 
  3133  0619                     	;# 
  3134  0619                     	;# 
  3135  061A                     	;# 
  3136  061B                     	;# 
  3137  061C                     	;# 
  3138  061C                     	;# 
  3139  061F                     	;# 
  3140  0691                     	;# 
  3141  0692                     	;# 
  3142  0693                     	;# 
  3143  0694                     	;# 
  3144  0695                     	;# 
  3145  0696                     	;# 
  3146  0697                     	;# 
  3147  0698                     	;# 
  3148  0699                     	;# 
  3149  0711                     	;# 
  3150  0712                     	;# 
  3151  0713                     	;# 
  3152  0714                     	;# 
  3153  0715                     	;# 
  3154  0716                     	;# 
  3155  0717                     	;# 
  3156  0718                     	;# 
  3157  0719                     	;# 
  3158  0891                     	;# 
  3159  0891                     	;# 
  3160  0891                     	;# 
  3161  0891                     	;# 
  3162  0891                     	;# 
  3163  0891                     	;# 
  3164  0892                     	;# 
  3165  0892                     	;# 
  3166  0892                     	;# 
  3167  0893                     	;# 
  3168  0893                     	;# 
  3169  0893                     	;# 
  3170  0893                     	;# 
  3171  0893                     	;# 
  3172  0893                     	;# 
  3173  0894                     	;# 
  3174  0894                     	;# 
  3175  0894                     	;# 
  3176  0895                     	;# 
  3177  0895                     	;# 
  3178  0895                     	;# 
  3179  0896                     	;# 
  3180  0896                     	;# 
  3181  0896                     	;# 
  3182  089B                     	;# 
  3183  0911                     	;# 
  3184  0912                     	;# 
  3185  0913                     	;# 
  3186  0914                     	;# 
  3187  0915                     	;# 
  3188  0916                     	;# 
  3189  0918                     	;# 
  3190  0919                     	;# 
  3191  091A                     	;# 
  3192  091B                     	;# 
  3193  091C                     	;# 
  3194  091D                     	;# 
  3195  091E                     	;# 
  3196  091F                     	;# 
  3197  0E0F                     	;# 
  3198  0E10                     	;# 
  3199  0E11                     	;# 
  3200  0E12                     	;# 
  3201  0E13                     	;# 
  3202  0E14                     	;# 
  3203  0E15                     	;# 
  3204  0E16                     	;# 
  3205  0E17                     	;# 
  3206  0E18                     	;# 
  3207  0E19                     	;# 
  3208  0E1A                     	;# 
  3209  0E1B                     	;# 
  3210  0E1C                     	;# 
  3211  0E1D                     	;# 
  3212  0E1E                     	;# 
  3213  0E1F                     	;# 
  3214  0E20                     	;# 
  3215  0E21                     	;# 
  3216  0E22                     	;# 
  3217  0E24                     	;# 
  3218  0E25                     	;# 
  3219  0E28                     	;# 
  3220  0E29                     	;# 
  3221  0E2A                     	;# 
  3222  0E2B                     	;# 
  3223  0E2C                     	;# 
  3224  0E2D                     	;# 
  3225  0E2E                     	;# 
  3226  0E2F                     	;# 
  3227  0E90                     	;# 
  3228  0E91                     	;# 
  3229  0E92                     	;# 
  3230  0E94                     	;# 
  3231  0E95                     	;# 
  3232  0E9C                     	;# 
  3233  0E9D                     	;# 
  3234  0E9E                     	;# 
  3235  0E9F                     	;# 
  3236  0EA0                     	;# 
  3237  0EA1                     	;# 
  3238  0EA2                     	;# 
  3239  0EA3                     	;# 
  3240  0EA4                     	;# 
  3241  0EA5                     	;# 
  3242  0EA6                     	;# 
  3243  0EA7                     	;# 
  3244  0F0F                     	;# 
  3245  0F10                     	;# 
  3246  0F11                     	;# 
  3247  0F12                     	;# 
  3248  0F13                     	;# 
  3249  0F14                     	;# 
  3250  0F15                     	;# 
  3251  0F16                     	;# 
  3252  0F17                     	;# 
  3253  0F18                     	;# 
  3254  0F19                     	;# 
  3255  0F1A                     	;# 
  3256  0F1B                     	;# 
  3257  0F1C                     	;# 
  3258  0F1D                     	;# 
  3259  0F1E                     	;# 
  3260  0F1F                     	;# 
  3261  0F20                     	;# 
  3262  0F21                     	;# 
  3263  0F22                     	;# 
  3264  0F23                     	;# 
  3265  0F24                     	;# 
  3266  0F25                     	;# 
  3267  0F26                     	;# 
  3268  0F27                     	;# 
  3269  0F28                     	;# 
  3270  0F29                     	;# 
  3271  0F2A                     	;# 
  3272  0F2B                     	;# 
  3273  0F2C                     	;# 
  3274  0F2D                     	;# 
  3275  0F2E                     	;# 
  3276  0F2F                     	;# 
  3277  0F30                     	;# 
  3278  0F31                     	;# 
  3279  0F32                     	;# 
  3280  0F33                     	;# 
  3281  0F34                     	;# 
  3282  0F35                     	;# 
  3283  0F36                     	;# 
  3284  0F37                     	;# 
  3285  0FE4                     	;# 
  3286  0FE5                     	;# 
  3287  0FE6                     	;# 
  3288  0FE7                     	;# 
  3289  0FE8                     	;# 
  3290  0FE9                     	;# 
  3291  0FEA                     	;# 
  3292  0FEB                     	;# 
  3293  0FED                     	;# 
  3294  0FEE                     	;# 
  3295  0FEF                     	;# 
  3296  0000                     	;# 
  3297  0001                     	;# 
  3298  0002                     	;# 
  3299  0003                     	;# 
  3300  0004                     	;# 
  3301  0005                     	;# 
  3302  0006                     	;# 
  3303  0007                     	;# 
  3304  0008                     	;# 
  3305  0009                     	;# 
  3306  000A                     	;# 
  3307  000B                     	;# 
  3308  000C                     	;# 
  3309  000D                     	;# 
  3310  000E                     	;# 
  3311  0010                     	;# 
  3312  0011                     	;# 
  3313  0012                     	;# 
  3314  0013                     	;# 
  3315  0014                     	;# 
  3316  0015                     	;# 
  3317  0015                     	;# 
  3318  0016                     	;# 
  3319  0016                     	;# 
  3320  0017                     	;# 
  3321  0018                     	;# 
  3322  0019                     	;# 
  3323  0019                     	;# 
  3324  001A                     	;# 
  3325  001B                     	;# 
  3326  001C                     	;# 
  3327  001D                     	;# 
  3328  001E                     	;# 
  3329  001F                     	;# 
  3330  008C                     	;# 
  3331  008D                     	;# 
  3332  008E                     	;# 
  3333  0090                     	;# 
  3334  0091                     	;# 
  3335  0092                     	;# 
  3336  0093                     	;# 
  3337  0094                     	;# 
  3338  0097                     	;# 
  3339  009B                     	;# 
  3340  009B                     	;# 
  3341  009C                     	;# 
  3342  009D                     	;# 
  3343  009E                     	;# 
  3344  009F                     	;# 
  3345  010C                     	;# 
  3346  010D                     	;# 
  3347  010E                     	;# 
  3348  0111                     	;# 
  3349  0112                     	;# 
  3350  0113                     	;# 
  3351  0114                     	;# 
  3352  0115                     	;# 
  3353  0116                     	;# 
  3354  0117                     	;# 
  3355  0118                     	;# 
  3356  0119                     	;# 
  3357  018C                     	;# 
  3358  018D                     	;# 
  3359  018E                     	;# 
  3360  0197                     	;# 
  3361  0199                     	;# 
  3362  0199                     	;# 
  3363  0199                     	;# 
  3364  019A                     	;# 
  3365  019A                     	;# 
  3366  019A                     	;# 
  3367  019B                     	;# 
  3368  019B                     	;# 
  3369  019B                     	;# 
  3370  019B                     	;# 
  3371  019B                     	;# 
  3372  019C                     	;# 
  3373  019C                     	;# 
  3374  019C                     	;# 
  3375  019D                     	;# 
  3376  019D                     	;# 
  3377  019D                     	;# 
  3378  019E                     	;# 
  3379  019E                     	;# 
  3380  019E                     	;# 
  3381  019F                     	;# 
  3382  019F                     	;# 
  3383  019F                     	;# 
  3384  019F                     	;# 
  3385  019F                     	;# 
  3386  020C                     	;# 
  3387  020D                     	;# 
  3388  020E                     	;# 
  3389  0211                     	;# 
  3390  0211                     	;# 
  3391  0212                     	;# 
  3392  0212                     	;# 
  3393  0213                     	;# 
  3394  0213                     	;# 
  3395  0214                     	;# 
  3396  0214                     	;# 
  3397  0215                     	;# 
  3398  0215                     	;# 
  3399  0215                     	;# 
  3400  0215                     	;# 
  3401  0216                     	;# 
  3402  0216                     	;# 
  3403  0217                     	;# 
  3404  0217                     	;# 
  3405  0219                     	;# 
  3406  021A                     	;# 
  3407  021B                     	;# 
  3408  021C                     	;# 
  3409  021D                     	;# 
  3410  021D                     	;# 
  3411  021E                     	;# 
  3412  021F                     	;# 
  3413  028C                     	;# 
  3414  028D                     	;# 
  3415  028E                     	;# 
  3416  0291                     	;# 
  3417  0291                     	;# 
  3418  0292                     	;# 
  3419  0293                     	;# 
  3420  0294                     	;# 
  3421  0295                     	;# 
  3422  0295                     	;# 
  3423  0296                     	;# 
  3424  0297                     	;# 
  3425  0298                     	;# 
  3426  029F                     	;# 
  3427  030C                     	;# 
  3428  030D                     	;# 
  3429  030E                     	;# 
  3430  0311                     	;# 
  3431  0311                     	;# 
  3432  0312                     	;# 
  3433  0313                     	;# 
  3434  0314                     	;# 
  3435  0315                     	;# 
  3436  0315                     	;# 
  3437  0316                     	;# 
  3438  0317                     	;# 
  3439  0318                     	;# 
  3440  038C                     	;# 
  3441  038D                     	;# 
  3442  038E                     	;# 
  3443  0391                     	;# 
  3444  0392                     	;# 
  3445  0393                     	;# 
  3446  0394                     	;# 
  3447  0395                     	;# 
  3448  0396                     	;# 
  3449  0397                     	;# 
  3450  0398                     	;# 
  3451  0399                     	;# 
  3452  039A                     	;# 
  3453  039C                     	;# 
  3454  039D                     	;# 
  3455  039E                     	;# 
  3456  039F                     	;# 
  3457  0411                     	;# 
  3458  0411                     	;# 
  3459  0412                     	;# 
  3460  0413                     	;# 
  3461  0414                     	;# 
  3462  0415                     	;# 
  3463  0416                     	;# 
  3464  0417                     	;# 
  3465  0418                     	;# 
  3466  0418                     	;# 
  3467  0419                     	;# 
  3468  041A                     	;# 
  3469  041B                     	;# 
  3470  041C                     	;# 
  3471  041D                     	;# 
  3472  041E                     	;# 
  3473  041F                     	;# 
  3474  0498                     	;# 
  3475  0498                     	;# 
  3476  0499                     	;# 
  3477  049A                     	;# 
  3478  049B                     	;# 
  3479  049B                     	;# 
  3480  049C                     	;# 
  3481  049D                     	;# 
  3482  049E                     	;# 
  3483  049F                     	;# 
  3484  0617                     	;# 
  3485  0618                     	;# 
  3486  0619                     	;# 
  3487  0619                     	;# 
  3488  061A                     	;# 
  3489  061B                     	;# 
  3490  061C                     	;# 
  3491  061C                     	;# 
  3492  061F                     	;# 
  3493  0691                     	;# 
  3494  0692                     	;# 
  3495  0693                     	;# 
  3496  0694                     	;# 
  3497  0695                     	;# 
  3498  0696                     	;# 
  3499  0697                     	;# 
  3500  0698                     	;# 
  3501  0699                     	;# 
  3502  0711                     	;# 
  3503  0712                     	;# 
  3504  0713                     	;# 
  3505  0714                     	;# 
  3506  0715                     	;# 
  3507  0716                     	;# 
  3508  0717                     	;# 
  3509  0718                     	;# 
  3510  0719                     	;# 
  3511  0891                     	;# 
  3512  0891                     	;# 
  3513  0891                     	;# 
  3514  0891                     	;# 
  3515  0891                     	;# 
  3516  0891                     	;# 
  3517  0892                     	;# 
  3518  0892                     	;# 
  3519  0892                     	;# 
  3520  0893                     	;# 
  3521  0893                     	;# 
  3522  0893                     	;# 
  3523  0893                     	;# 
  3524  0893                     	;# 
  3525  0893                     	;# 
  3526  0894                     	;# 
  3527  0894                     	;# 
  3528  0894                     	;# 
  3529  0895                     	;# 
  3530  0895                     	;# 
  3531  0895                     	;# 
  3532  0896                     	;# 
  3533  0896                     	;# 
  3534  0896                     	;# 
  3535  089B                     	;# 
  3536  0911                     	;# 
  3537  0912                     	;# 
  3538  0913                     	;# 
  3539  0914                     	;# 
  3540  0915                     	;# 
  3541  0916                     	;# 
  3542  0918                     	;# 
  3543  0919                     	;# 
  3544  091A                     	;# 
  3545  091B                     	;# 
  3546  091C                     	;# 
  3547  091D                     	;# 
  3548  091E                     	;# 
  3549  091F                     	;# 
  3550  0E0F                     	;# 
  3551  0E10                     	;# 
  3552  0E11                     	;# 
  3553  0E12                     	;# 
  3554  0E13                     	;# 
  3555  0E14                     	;# 
  3556  0E15                     	;# 
  3557  0E16                     	;# 
  3558  0E17                     	;# 
  3559  0E18                     	;# 
  3560  0E19                     	;# 
  3561  0E1A                     	;# 
  3562  0E1B                     	;# 
  3563  0E1C                     	;# 
  3564  0E1D                     	;# 
  3565  0E1E                     	;# 
  3566  0E1F                     	;# 
  3567  0E20                     	;# 
  3568  0E21                     	;# 
  3569  0E22                     	;# 
  3570  0E24                     	;# 
  3571  0E25                     	;# 
  3572  0E28                     	;# 
  3573  0E29                     	;# 
  3574  0E2A                     	;# 
  3575  0E2B                     	;# 
  3576  0E2C                     	;# 
  3577  0E2D                     	;# 
  3578  0E2E                     	;# 
  3579  0E2F                     	;# 
  3580  0E90                     	;# 
  3581  0E91                     	;# 
  3582  0E92                     	;# 
  3583  0E94                     	;# 
  3584  0E95                     	;# 
  3585  0E9C                     	;# 
  3586  0E9D                     	;# 
  3587  0E9E                     	;# 
  3588  0E9F                     	;# 
  3589  0EA0                     	;# 
  3590  0EA1                     	;# 
  3591  0EA2                     	;# 
  3592  0EA3                     	;# 
  3593  0EA4                     	;# 
  3594  0EA5                     	;# 
  3595  0EA6                     	;# 
  3596  0EA7                     	;# 
  3597  0F0F                     	;# 
  3598  0F10                     	;# 
  3599  0F11                     	;# 
  3600  0F12                     	;# 
  3601  0F13                     	;# 
  3602  0F14                     	;# 
  3603  0F15                     	;# 
  3604  0F16                     	;# 
  3605  0F17                     	;# 
  3606  0F18                     	;# 
  3607  0F19                     	;# 
  3608  0F1A                     	;# 
  3609  0F1B                     	;# 
  3610  0F1C                     	;# 
  3611  0F1D                     	;# 
  3612  0F1E                     	;# 
  3613  0F1F                     	;# 
  3614  0F20                     	;# 
  3615  0F21                     	;# 
  3616  0F22                     	;# 
  3617  0F23                     	;# 
  3618  0F24                     	;# 
  3619  0F25                     	;# 
  3620  0F26                     	;# 
  3621  0F27                     	;# 
  3622  0F28                     	;# 
  3623  0F29                     	;# 
  3624  0F2A                     	;# 
  3625  0F2B                     	;# 
  3626  0F2C                     	;# 
  3627  0F2D                     	;# 
  3628  0F2E                     	;# 
  3629  0F2F                     	;# 
  3630  0F30                     	;# 
  3631  0F31                     	;# 
  3632  0F32                     	;# 
  3633  0F33                     	;# 
  3634  0F34                     	;# 
  3635  0F35                     	;# 
  3636  0F36                     	;# 
  3637  0F37                     	;# 
  3638  0FE4                     	;# 
  3639  0FE5                     	;# 
  3640  0FE6                     	;# 
  3641  0FE7                     	;# 
  3642  0FE8                     	;# 
  3643  0FE9                     	;# 
  3644  0FEA                     	;# 
  3645  0FEB                     	;# 
  3646  0FED                     	;# 
  3647  0FEE                     	;# 
  3648  0FEF                     	;# 
  3649  0000                     	;# 
  3650  0001                     	;# 
  3651  0002                     	;# 
  3652  0003                     	;# 
  3653  0004                     	;# 
  3654  0005                     	;# 
  3655  0006                     	;# 
  3656  0007                     	;# 
  3657  0008                     	;# 
  3658  0009                     	;# 
  3659  000A                     	;# 
  3660  000B                     	;# 
  3661  000C                     	;# 
  3662  000D                     	;# 
  3663  000E                     	;# 
  3664  0010                     	;# 
  3665  0011                     	;# 
  3666  0012                     	;# 
  3667  0013                     	;# 
  3668  0014                     	;# 
  3669  0015                     	;# 
  3670  0015                     	;# 
  3671  0016                     	;# 
  3672  0016                     	;# 
  3673  0017                     	;# 
  3674  0018                     	;# 
  3675  0019                     	;# 
  3676  0019                     	;# 
  3677  001A                     	;# 
  3678  001B                     	;# 
  3679  001C                     	;# 
  3680  001D                     	;# 
  3681  001E                     	;# 
  3682  001F                     	;# 
  3683  008C                     	;# 
  3684  008D                     	;# 
  3685  008E                     	;# 
  3686  0090                     	;# 
  3687  0091                     	;# 
  3688  0092                     	;# 
  3689  0093                     	;# 
  3690  0094                     	;# 
  3691  0097                     	;# 
  3692  009B                     	;# 
  3693  009B                     	;# 
  3694  009C                     	;# 
  3695  009D                     	;# 
  3696  009E                     	;# 
  3697  009F                     	;# 
  3698  010C                     	;# 
  3699  010D                     	;# 
  3700  010E                     	;# 
  3701  0111                     	;# 
  3702  0112                     	;# 
  3703  0113                     	;# 
  3704  0114                     	;# 
  3705  0115                     	;# 
  3706  0116                     	;# 
  3707  0117                     	;# 
  3708  0118                     	;# 
  3709  0119                     	;# 
  3710  018C                     	;# 
  3711  018D                     	;# 
  3712  018E                     	;# 
  3713  0197                     	;# 
  3714  0199                     	;# 
  3715  0199                     	;# 
  3716  0199                     	;# 
  3717  019A                     	;# 
  3718  019A                     	;# 
  3719  019A                     	;# 
  3720  019B                     	;# 
  3721  019B                     	;# 
  3722  019B                     	;# 
  3723  019B                     	;# 
  3724  019B                     	;# 
  3725  019C                     	;# 
  3726  019C                     	;# 
  3727  019C                     	;# 
  3728  019D                     	;# 
  3729  019D                     	;# 
  3730  019D                     	;# 
  3731  019E                     	;# 
  3732  019E                     	;# 
  3733  019E                     	;# 
  3734  019F                     	;# 
  3735  019F                     	;# 
  3736  019F                     	;# 
  3737  019F                     	;# 
  3738  019F                     	;# 
  3739  020C                     	;# 
  3740  020D                     	;# 
  3741  020E                     	;# 
  3742  0211                     	;# 
  3743  0211                     	;# 
  3744  0212                     	;# 
  3745  0212                     	;# 
  3746  0213                     	;# 
  3747  0213                     	;# 
  3748  0214                     	;# 
  3749  0214                     	;# 
  3750  0215                     	;# 
  3751  0215                     	;# 
  3752  0215                     	;# 
  3753  0215                     	;# 
  3754  0216                     	;# 
  3755  0216                     	;# 
  3756  0217                     	;# 
  3757  0217                     	;# 
  3758  0219                     	;# 
  3759  021A                     	;# 
  3760  021B                     	;# 
  3761  021C                     	;# 
  3762  021D                     	;# 
  3763  021D                     	;# 
  3764  021E                     	;# 
  3765  021F                     	;# 
  3766  028C                     	;# 
  3767  028D                     	;# 
  3768  028E                     	;# 
  3769  0291                     	;# 
  3770  0291                     	;# 
  3771  0292                     	;# 
  3772  0293                     	;# 
  3773  0294                     	;# 
  3774  0295                     	;# 
  3775  0295                     	;# 
  3776  0296                     	;# 
  3777  0297                     	;# 
  3778  0298                     	;# 
  3779  029F                     	;# 
  3780  030C                     	;# 
  3781  030D                     	;# 
  3782  030E                     	;# 
  3783  0311                     	;# 
  3784  0311                     	;# 
  3785  0312                     	;# 
  3786  0313                     	;# 
  3787  0314                     	;# 
  3788  0315                     	;# 
  3789  0315                     	;# 
  3790  0316                     	;# 
  3791  0317                     	;# 
  3792  0318                     	;# 
  3793  038C                     	;# 
  3794  038D                     	;# 
  3795  038E                     	;# 
  3796  0391                     	;# 
  3797  0392                     	;# 
  3798  0393                     	;# 
  3799  0394                     	;# 
  3800  0395                     	;# 
  3801  0396                     	;# 
  3802  0397                     	;# 
  3803  0398                     	;# 
  3804  0399                     	;# 
  3805  039A                     	;# 
  3806  039C                     	;# 
  3807  039D                     	;# 
  3808  039E                     	;# 
  3809  039F                     	;# 
  3810  0411                     	;# 
  3811  0411                     	;# 
  3812  0412                     	;# 
  3813  0413                     	;# 
  3814  0414                     	;# 
  3815  0415                     	;# 
  3816  0416                     	;# 
  3817  0417                     	;# 
  3818  0418                     	;# 
  3819  0418                     	;# 
  3820  0419                     	;# 
  3821  041A                     	;# 
  3822  041B                     	;# 
  3823  041C                     	;# 
  3824  041D                     	;# 
  3825  041E                     	;# 
  3826  041F                     	;# 
  3827  0498                     	;# 
  3828  0498                     	;# 
  3829  0499                     	;# 
  3830  049A                     	;# 
  3831  049B                     	;# 
  3832  049B                     	;# 
  3833  049C                     	;# 
  3834  049D                     	;# 
  3835  049E                     	;# 
  3836  049F                     	;# 
  3837  0617                     	;# 
  3838  0618                     	;# 
  3839  0619                     	;# 
  3840  0619                     	;# 
  3841  061A                     	;# 
  3842  061B                     	;# 
  3843  061C                     	;# 
  3844  061C                     	;# 
  3845  061F                     	;# 
  3846  0691                     	;# 
  3847  0692                     	;# 
  3848  0693                     	;# 
  3849  0694                     	;# 
  3850  0695                     	;# 
  3851  0696                     	;# 
  3852  0697                     	;# 
  3853  0698                     	;# 
  3854  0699                     	;# 
  3855  0711                     	;# 
  3856  0712                     	;# 
  3857  0713                     	;# 
  3858  0714                     	;# 
  3859  0715                     	;# 
  3860  0716                     	;# 
  3861  0717                     	;# 
  3862  0718                     	;# 
  3863  0719                     	;# 
  3864  0891                     	;# 
  3865  0891                     	;# 
  3866  0891                     	;# 
  3867  0891                     	;# 
  3868  0891                     	;# 
  3869  0891                     	;# 
  3870  0892                     	;# 
  3871  0892                     	;# 
  3872  0892                     	;# 
  3873  0893                     	;# 
  3874  0893                     	;# 
  3875  0893                     	;# 
  3876  0893                     	;# 
  3877  0893                     	;# 
  3878  0893                     	;# 
  3879  0894                     	;# 
  3880  0894                     	;# 
  3881  0894                     	;# 
  3882  0895                     	;# 
  3883  0895                     	;# 
  3884  0895                     	;# 
  3885  0896                     	;# 
  3886  0896                     	;# 
  3887  0896                     	;# 
  3888  089B                     	;# 
  3889  0911                     	;# 
  3890  0912                     	;# 
  3891  0913                     	;# 
  3892  0914                     	;# 
  3893  0915                     	;# 
  3894  0916                     	;# 
  3895  0918                     	;# 
  3896  0919                     	;# 
  3897  091A                     	;# 
  3898  091B                     	;# 
  3899  091C                     	;# 
  3900  091D                     	;# 
  3901  091E                     	;# 
  3902  091F                     	;# 
  3903  0E0F                     	;# 
  3904  0E10                     	;# 
  3905  0E11                     	;# 
  3906  0E12                     	;# 
  3907  0E13                     	;# 
  3908  0E14                     	;# 
  3909  0E15                     	;# 
  3910  0E16                     	;# 
  3911  0E17                     	;# 
  3912  0E18                     	;# 
  3913  0E19                     	;# 
  3914  0E1A                     	;# 
  3915  0E1B                     	;# 
  3916  0E1C                     	;# 
  3917  0E1D                     	;# 
  3918  0E1E                     	;# 
  3919  0E1F                     	;# 
  3920  0E20                     	;# 
  3921  0E21                     	;# 
  3922  0E22                     	;# 
  3923  0E24                     	;# 
  3924  0E25                     	;# 
  3925  0E28                     	;# 
  3926  0E29                     	;# 
  3927  0E2A                     	;# 
  3928  0E2B                     	;# 
  3929  0E2C                     	;# 
  3930  0E2D                     	;# 
  3931  0E2E                     	;# 
  3932  0E2F                     	;# 
  3933  0E90                     	;# 
  3934  0E91                     	;# 
  3935  0E92                     	;# 
  3936  0E94                     	;# 
  3937  0E95                     	;# 
  3938  0E9C                     	;# 
  3939  0E9D                     	;# 
  3940  0E9E                     	;# 
  3941  0E9F                     	;# 
  3942  0EA0                     	;# 
  3943  0EA1                     	;# 
  3944  0EA2                     	;# 
  3945  0EA3                     	;# 
  3946  0EA4                     	;# 
  3947  0EA5                     	;# 
  3948  0EA6                     	;# 
  3949  0EA7                     	;# 
  3950  0F0F                     	;# 
  3951  0F10                     	;# 
  3952  0F11                     	;# 
  3953  0F12                     	;# 
  3954  0F13                     	;# 
  3955  0F14                     	;# 
  3956  0F15                     	;# 
  3957  0F16                     	;# 
  3958  0F17                     	;# 
  3959  0F18                     	;# 
  3960  0F19                     	;# 
  3961  0F1A                     	;# 
  3962  0F1B                     	;# 
  3963  0F1C                     	;# 
  3964  0F1D                     	;# 
  3965  0F1E                     	;# 
  3966  0F1F                     	;# 
  3967  0F20                     	;# 
  3968  0F21                     	;# 
  3969  0F22                     	;# 
  3970  0F23                     	;# 
  3971  0F24                     	;# 
  3972  0F25                     	;# 
  3973  0F26                     	;# 
  3974  0F27                     	;# 
  3975  0F28                     	;# 
  3976  0F29                     	;# 
  3977  0F2A                     	;# 
  3978  0F2B                     	;# 
  3979  0F2C                     	;# 
  3980  0F2D                     	;# 
  3981  0F2E                     	;# 
  3982  0F2F                     	;# 
  3983  0F30                     	;# 
  3984  0F31                     	;# 
  3985  0F32                     	;# 
  3986  0F33                     	;# 
  3987  0F34                     	;# 
  3988  0F35                     	;# 
  3989  0F36                     	;# 
  3990  0F37                     	;# 
  3991  0FE4                     	;# 
  3992  0FE5                     	;# 
  3993  0FE6                     	;# 
  3994  0FE7                     	;# 
  3995  0FE8                     	;# 
  3996  0FE9                     	;# 
  3997  0FEA                     	;# 
  3998  0FEB                     	;# 
  3999  0FED                     	;# 
  4000  0FEE                     	;# 
  4001  0FEF                     	;# 
  4002  0000                     	;# 
  4003  0001                     	;# 
  4004  0002                     	;# 
  4005  0003                     	;# 
  4006  0004                     	;# 
  4007  0005                     	;# 
  4008  0006                     	;# 
  4009  0007                     	;# 
  4010  0008                     	;# 
  4011  0009                     	;# 
  4012  000A                     	;# 
  4013  000B                     	;# 
  4014  000C                     	;# 
  4015  000D                     	;# 
  4016  000E                     	;# 
  4017  0010                     	;# 
  4018  0011                     	;# 
  4019  0012                     	;# 
  4020  0013                     	;# 
  4021  0014                     	;# 
  4022  0015                     	;# 
  4023  0015                     	;# 
  4024  0016                     	;# 
  4025  0016                     	;# 
  4026  0017                     	;# 
  4027  0018                     	;# 
  4028  0019                     	;# 
  4029  0019                     	;# 
  4030  001A                     	;# 
  4031  001B                     	;# 
  4032  001C                     	;# 
  4033  001D                     	;# 
  4034  001E                     	;# 
  4035  001F                     	;# 
  4036  008C                     	;# 
  4037  008D                     	;# 
  4038  008E                     	;# 
  4039  0090                     	;# 
  4040  0091                     	;# 
  4041  0092                     	;# 
  4042  0093                     	;# 
  4043  0094                     	;# 
  4044  0097                     	;# 
  4045  009B                     	;# 
  4046  009B                     	;# 
  4047  009C                     	;# 
  4048  009D                     	;# 
  4049  009E                     	;# 
  4050  009F                     	;# 
  4051  010C                     	;# 
  4052  010D                     	;# 
  4053  010E                     	;# 
  4054  0111                     	;# 
  4055  0112                     	;# 
  4056  0113                     	;# 
  4057  0114                     	;# 
  4058  0115                     	;# 
  4059  0116                     	;# 
  4060  0117                     	;# 
  4061  0118                     	;# 
  4062  0119                     	;# 
  4063  018C                     	;# 
  4064  018D                     	;# 
  4065  018E                     	;# 
  4066  0197                     	;# 
  4067  0199                     	;# 
  4068  0199                     	;# 
  4069  0199                     	;# 
  4070  019A                     	;# 
  4071  019A                     	;# 
  4072  019A                     	;# 
  4073  019B                     	;# 
  4074  019B                     	;# 
  4075  019B                     	;# 
  4076  019B                     	;# 
  4077  019B                     	;# 
  4078  019C                     	;# 
  4079  019C                     	;# 
  4080  019C                     	;# 
  4081  019D                     	;# 
  4082  019D                     	;# 
  4083  019D                     	;# 
  4084  019E                     	;# 
  4085  019E                     	;# 
  4086  019E                     	;# 
  4087  019F                     	;# 
  4088  019F                     	;# 
  4089  019F                     	;# 
  4090  019F                     	;# 
  4091  019F                     	;# 
  4092  020C                     	;# 
  4093  020D                     	;# 
  4094  020E                     	;# 
  4095  0211                     	;# 
  4096  0211                     	;# 
  4097  0212                     	;# 
  4098  0212                     	;# 
  4099  0213                     	;# 
  4100  0213                     	;# 
  4101  0214                     	;# 
  4102  0214                     	;# 
  4103  0215                     	;# 
  4104  0215                     	;# 
  4105  0215                     	;# 
  4106  0215                     	;# 
  4107  0216                     	;# 
  4108  0216                     	;# 
  4109  0217                     	;# 
  4110  0217                     	;# 
  4111  0219                     	;# 
  4112  021A                     	;# 
  4113  021B                     	;# 
  4114  021C                     	;# 
  4115  021D                     	;# 
  4116  021D                     	;# 
  4117  021E                     	;# 
  4118  021F                     	;# 
  4119  028C                     	;# 
  4120  028D                     	;# 
  4121  028E                     	;# 
  4122  0291                     	;# 
  4123  0291                     	;# 
  4124  0292                     	;# 
  4125  0293                     	;# 
  4126  0294                     	;# 
  4127  0295                     	;# 
  4128  0295                     	;# 
  4129  0296                     	;# 
  4130  0297                     	;# 
  4131  0298                     	;# 
  4132  029F                     	;# 
  4133  030C                     	;# 
  4134  030D                     	;# 
  4135  030E                     	;# 
  4136  0311                     	;# 
  4137  0311                     	;# 
  4138  0312                     	;# 
  4139  0313                     	;# 
  4140  0314                     	;# 
  4141  0315                     	;# 
  4142  0315                     	;# 
  4143  0316                     	;# 
  4144  0317                     	;# 
  4145  0318                     	;# 
  4146  038C                     	;# 
  4147  038D                     	;# 
  4148  038E                     	;# 
  4149  0391                     	;# 
  4150  0392                     	;# 
  4151  0393                     	;# 
  4152  0394                     	;# 
  4153  0395                     	;# 
  4154  0396                     	;# 
  4155  0397                     	;# 
  4156  0398                     	;# 
  4157  0399                     	;# 
  4158  039A                     	;# 
  4159  039C                     	;# 
  4160  039D                     	;# 
  4161  039E                     	;# 
  4162  039F                     	;# 
  4163  0411                     	;# 
  4164  0411                     	;# 
  4165  0412                     	;# 
  4166  0413                     	;# 
  4167  0414                     	;# 
  4168  0415                     	;# 
  4169  0416                     	;# 
  4170  0417                     	;# 
  4171  0418                     	;# 
  4172  0418                     	;# 
  4173  0419                     	;# 
  4174  041A                     	;# 
  4175  041B                     	;# 
  4176  041C                     	;# 
  4177  041D                     	;# 
  4178  041E                     	;# 
  4179  041F                     	;# 
  4180  0498                     	;# 
  4181  0498                     	;# 
  4182  0499                     	;# 
  4183  049A                     	;# 
  4184  049B                     	;# 
  4185  049B                     	;# 
  4186  049C                     	;# 
  4187  049D                     	;# 
  4188  049E                     	;# 
  4189  049F                     	;# 
  4190  0617                     	;# 
  4191  0618                     	;# 
  4192  0619                     	;# 
  4193  0619                     	;# 
  4194  061A                     	;# 
  4195  061B                     	;# 
  4196  061C                     	;# 
  4197  061C                     	;# 
  4198  061F                     	;# 
  4199  0691                     	;# 
  4200  0692                     	;# 
  4201  0693                     	;# 
  4202  0694                     	;# 
  4203  0695                     	;# 
  4204  0696                     	;# 
  4205  0697                     	;# 
  4206  0698                     	;# 
  4207  0699                     	;# 
  4208  0711                     	;# 
  4209  0712                     	;# 
  4210  0713                     	;# 
  4211  0714                     	;# 
  4212  0715                     	;# 
  4213  0716                     	;# 
  4214  0717                     	;# 
  4215  0718                     	;# 
  4216  0719                     	;# 
  4217  0891                     	;# 
  4218  0891                     	;# 
  4219  0891                     	;# 
  4220  0891                     	;# 
  4221  0891                     	;# 
  4222  0891                     	;# 
  4223  0892                     	;# 
  4224  0892                     	;# 
  4225  0892                     	;# 
  4226  0893                     	;# 
  4227  0893                     	;# 
  4228  0893                     	;# 
  4229  0893                     	;# 
  4230  0893                     	;# 
  4231  0893                     	;# 
  4232  0894                     	;# 
  4233  0894                     	;# 
  4234  0894                     	;# 
  4235  0895                     	;# 
  4236  0895                     	;# 
  4237  0895                     	;# 
  4238  0896                     	;# 
  4239  0896                     	;# 
  4240  0896                     	;# 
  4241  089B                     	;# 
  4242  0911                     	;# 
  4243  0912                     	;# 
  4244  0913                     	;# 
  4245  0914                     	;# 
  4246  0915                     	;# 
  4247  0916                     	;# 
  4248  0918                     	;# 
  4249  0919                     	;# 
  4250  091A                     	;# 
  4251  091B                     	;# 
  4252  091C                     	;# 
  4253  091D                     	;# 
  4254  091E                     	;# 
  4255  091F                     	;# 
  4256  0E0F                     	;# 
  4257  0E10                     	;# 
  4258  0E11                     	;# 
  4259  0E12                     	;# 
  4260  0E13                     	;# 
  4261  0E14                     	;# 
  4262  0E15                     	;# 
  4263  0E16                     	;# 
  4264  0E17                     	;# 
  4265  0E18                     	;# 
  4266  0E19                     	;# 
  4267  0E1A                     	;# 
  4268  0E1B                     	;# 
  4269  0E1C                     	;# 
  4270  0E1D                     	;# 
  4271  0E1E                     	;# 
  4272  0E1F                     	;# 
  4273  0E20                     	;# 
  4274  0E21                     	;# 
  4275  0E22                     	;# 
  4276  0E24                     	;# 
  4277  0E25                     	;# 
  4278  0E28                     	;# 
  4279  0E29                     	;# 
  4280  0E2A                     	;# 
  4281  0E2B                     	;# 
  4282  0E2C                     	;# 
  4283  0E2D                     	;# 
  4284  0E2E                     	;# 
  4285  0E2F                     	;# 
  4286  0E90                     	;# 
  4287  0E91                     	;# 
  4288  0E92                     	;# 
  4289  0E94                     	;# 
  4290  0E95                     	;# 
  4291  0E9C                     	;# 
  4292  0E9D                     	;# 
  4293  0E9E                     	;# 
  4294  0E9F                     	;# 
  4295  0EA0                     	;# 
  4296  0EA1                     	;# 
  4297  0EA2                     	;# 
  4298  0EA3                     	;# 
  4299  0EA4                     	;# 
  4300  0EA5                     	;# 
  4301  0EA6                     	;# 
  4302  0EA7                     	;# 
  4303  0F0F                     	;# 
  4304  0F10                     	;# 
  4305  0F11                     	;# 
  4306  0F12                     	;# 
  4307  0F13                     	;# 
  4308  0F14                     	;# 
  4309  0F15                     	;# 
  4310  0F16                     	;# 
  4311  0F17                     	;# 
  4312  0F18                     	;# 
  4313  0F19                     	;# 
  4314  0F1A                     	;# 
  4315  0F1B                     	;# 
  4316  0F1C                     	;# 
  4317  0F1D                     	;# 
  4318  0F1E                     	;# 
  4319  0F1F                     	;# 
  4320  0F20                     	;# 
  4321  0F21                     	;# 
  4322  0F22                     	;# 
  4323  0F23                     	;# 
  4324  0F24                     	;# 
  4325  0F25                     	;# 
  4326  0F26                     	;# 
  4327  0F27                     	;# 
  4328  0F28                     	;# 
  4329  0F29                     	;# 
  4330  0F2A                     	;# 
  4331  0F2B                     	;# 
  4332  0F2C                     	;# 
  4333  0F2D                     	;# 
  4334  0F2E                     	;# 
  4335  0F2F                     	;# 
  4336  0F30                     	;# 
  4337  0F31                     	;# 
  4338  0F32                     	;# 
  4339  0F33                     	;# 
  4340  0F34                     	;# 
  4341  0F35                     	;# 
  4342  0F36                     	;# 
  4343  0F37                     	;# 
  4344  0FE4                     	;# 
  4345  0FE5                     	;# 
  4346  0FE6                     	;# 
  4347  0FE7                     	;# 
  4348  0FE8                     	;# 
  4349  0FE9                     	;# 
  4350  0FEA                     	;# 
  4351  0FEB                     	;# 
  4352  0FED                     	;# 
  4353  0FEE                     	;# 
  4354  0FEF                     	;# 
  4355  0000                     	;# 
  4356  0001                     	;# 
  4357  0002                     	;# 
  4358  0003                     	;# 
  4359  0004                     	;# 
  4360  0005                     	;# 
  4361  0006                     	;# 
  4362  0007                     	;# 
  4363  0008                     	;# 
  4364  0009                     	;# 
  4365  000A                     	;# 
  4366  000B                     	;# 
  4367  000C                     	;# 
  4368  000D                     	;# 
  4369  000E                     	;# 
  4370  0010                     	;# 
  4371  0011                     	;# 
  4372  0012                     	;# 
  4373  0013                     	;# 
  4374  0014                     	;# 
  4375  0015                     	;# 
  4376  0015                     	;# 
  4377  0016                     	;# 
  4378  0016                     	;# 
  4379  0017                     	;# 
  4380  0018                     	;# 
  4381  0019                     	;# 
  4382  0019                     	;# 
  4383  001A                     	;# 
  4384  001B                     	;# 
  4385  001C                     	;# 
  4386  001D                     	;# 
  4387  001E                     	;# 
  4388  001F                     	;# 
  4389  008C                     	;# 
  4390  008D                     	;# 
  4391  008E                     	;# 
  4392  0090                     	;# 
  4393  0091                     	;# 
  4394  0092                     	;# 
  4395  0093                     	;# 
  4396  0094                     	;# 
  4397  0097                     	;# 
  4398  009B                     	;# 
  4399  009B                     	;# 
  4400  009C                     	;# 
  4401  009D                     	;# 
  4402  009E                     	;# 
  4403  009F                     	;# 
  4404  010C                     	;# 
  4405  010D                     	;# 
  4406  010E                     	;# 
  4407  0111                     	;# 
  4408  0112                     	;# 
  4409  0113                     	;# 
  4410  0114                     	;# 
  4411  0115                     	;# 
  4412  0116                     	;# 
  4413  0117                     	;# 
  4414  0118                     	;# 
  4415  0119                     	;# 
  4416  018C                     	;# 
  4417  018D                     	;# 
  4418  018E                     	;# 
  4419  0197                     	;# 
  4420  0199                     	;# 
  4421  0199                     	;# 
  4422  0199                     	;# 
  4423  019A                     	;# 
  4424  019A                     	;# 
  4425  019A                     	;# 
  4426  019B                     	;# 
  4427  019B                     	;# 
  4428  019B                     	;# 
  4429  019B                     	;# 
  4430  019B                     	;# 
  4431  019C                     	;# 
  4432  019C                     	;# 
  4433  019C                     	;# 
  4434  019D                     	;# 
  4435  019D                     	;# 
  4436  019D                     	;# 
  4437  019E                     	;# 
  4438  019E                     	;# 
  4439  019E                     	;# 
  4440  019F                     	;# 
  4441  019F                     	;# 
  4442  019F                     	;# 
  4443  019F                     	;# 
  4444  019F                     	;# 
  4445  020C                     	;# 
  4446  020D                     	;# 
  4447  020E                     	;# 
  4448  0211                     	;# 
  4449  0211                     	;# 
  4450  0212                     	;# 
  4451  0212                     	;# 
  4452  0213                     	;# 
  4453  0213                     	;# 
  4454  0214                     	;# 
  4455  0214                     	;# 
  4456  0215                     	;# 
  4457  0215                     	;# 
  4458  0215                     	;# 
  4459  0215                     	;# 
  4460  0216                     	;# 
  4461  0216                     	;# 
  4462  0217                     	;# 
  4463  0217                     	;# 
  4464  0219                     	;# 
  4465  021A                     	;# 
  4466  021B                     	;# 
  4467  021C                     	;# 
  4468  021D                     	;# 
  4469  021D                     	;# 
  4470  021E                     	;# 
  4471  021F                     	;# 
  4472  028C                     	;# 
  4473  028D                     	;# 
  4474  028E                     	;# 
  4475  0291                     	;# 
  4476  0291                     	;# 
  4477  0292                     	;# 
  4478  0293                     	;# 
  4479  0294                     	;# 
  4480  0295                     	;# 
  4481  0295                     	;# 
  4482  0296                     	;# 
  4483  0297                     	;# 
  4484  0298                     	;# 
  4485  029F                     	;# 
  4486  030C                     	;# 
  4487  030D                     	;# 
  4488  030E                     	;# 
  4489  0311                     	;# 
  4490  0311                     	;# 
  4491  0312                     	;# 
  4492  0313                     	;# 
  4493  0314                     	;# 
  4494  0315                     	;# 
  4495  0315                     	;# 
  4496  0316                     	;# 
  4497  0317                     	;# 
  4498  0318                     	;# 
  4499  038C                     	;# 
  4500  038D                     	;# 
  4501  038E                     	;# 
  4502  0391                     	;# 
  4503  0392                     	;# 
  4504  0393                     	;# 
  4505  0394                     	;# 
  4506  0395                     	;# 
  4507  0396                     	;# 
  4508  0397                     	;# 
  4509  0398                     	;# 
  4510  0399                     	;# 
  4511  039A                     	;# 
  4512  039C                     	;# 
  4513  039D                     	;# 
  4514  039E                     	;# 
  4515  039F                     	;# 
  4516  0411                     	;# 
  4517  0411                     	;# 
  4518  0412                     	;# 
  4519  0413                     	;# 
  4520  0414                     	;# 
  4521  0415                     	;# 
  4522  0416                     	;# 
  4523  0417                     	;# 
  4524  0418                     	;# 
  4525  0418                     	;# 
  4526  0419                     	;# 
  4527  041A                     	;# 
  4528  041B                     	;# 
  4529  041C                     	;# 
  4530  041D                     	;# 
  4531  041E                     	;# 
  4532  041F                     	;# 
  4533  0498                     	;# 
  4534  0498                     	;# 
  4535  0499                     	;# 
  4536  049A                     	;# 
  4537  049B                     	;# 
  4538  049B                     	;# 
  4539  049C                     	;# 
  4540  049D                     	;# 
  4541  049E                     	;# 
  4542  049F                     	;# 
  4543  0617                     	;# 
  4544  0618                     	;# 
  4545  0619                     	;# 
  4546  0619                     	;# 
  4547  061A                     	;# 
  4548  061B                     	;# 
  4549  061C                     	;# 
  4550  061C                     	;# 
  4551  061F                     	;# 
  4552  0691                     	;# 
  4553  0692                     	;# 
  4554  0693                     	;# 
  4555  0694                     	;# 
  4556  0695                     	;# 
  4557  0696                     	;# 
  4558  0697                     	;# 
  4559  0698                     	;# 
  4560  0699                     	;# 
  4561  0711                     	;# 
  4562  0712                     	;# 
  4563  0713                     	;# 
  4564  0714                     	;# 
  4565  0715                     	;# 
  4566  0716                     	;# 
  4567  0717                     	;# 
  4568  0718                     	;# 
  4569  0719                     	;# 
  4570  0891                     	;# 
  4571  0891                     	;# 
  4572  0891                     	;# 
  4573  0891                     	;# 
  4574  0891                     	;# 
  4575  0891                     	;# 
  4576  0892                     	;# 
  4577  0892                     	;# 
  4578  0892                     	;# 
  4579  0893                     	;# 
  4580  0893                     	;# 
  4581  0893                     	;# 
  4582  0893                     	;# 
  4583  0893                     	;# 
  4584  0893                     	;# 
  4585  0894                     	;# 
  4586  0894                     	;# 
  4587  0894                     	;# 
  4588  0895                     	;# 
  4589  0895                     	;# 
  4590  0895                     	;# 
  4591  0896                     	;# 
  4592  0896                     	;# 
  4593  0896                     	;# 
  4594  089B                     	;# 
  4595  0911                     	;# 
  4596  0912                     	;# 
  4597  0913                     	;# 
  4598  0914                     	;# 
  4599  0915                     	;# 
  4600  0916                     	;# 
  4601  0918                     	;# 
  4602  0919                     	;# 
  4603  091A                     	;# 
  4604  091B                     	;# 
  4605  091C                     	;# 
  4606  091D                     	;# 
  4607  091E                     	;# 
  4608  091F                     	;# 
  4609  0E0F                     	;# 
  4610  0E10                     	;# 
  4611  0E11                     	;# 
  4612  0E12                     	;# 
  4613  0E13                     	;# 
  4614  0E14                     	;# 
  4615  0E15                     	;# 
  4616  0E16                     	;# 
  4617  0E17                     	;# 
  4618  0E18                     	;# 
  4619  0E19                     	;# 
  4620  0E1A                     	;# 
  4621  0E1B                     	;# 
  4622  0E1C                     	;# 
  4623  0E1D                     	;# 
  4624  0E1E                     	;# 
  4625  0E1F                     	;# 
  4626  0E20                     	;# 
  4627  0E21                     	;# 
  4628  0E22                     	;# 
  4629  0E24                     	;# 
  4630  0E25                     	;# 
  4631  0E28                     	;# 
  4632  0E29                     	;# 
  4633  0E2A                     	;# 
  4634  0E2B                     	;# 
  4635  0E2C                     	;# 
  4636  0E2D                     	;# 
  4637  0E2E                     	;# 
  4638  0E2F                     	;# 
  4639  0E90                     	;# 
  4640  0E91                     	;# 
  4641  0E92                     	;# 
  4642  0E94                     	;# 
  4643  0E95                     	;# 
  4644  0E9C                     	;# 
  4645  0E9D                     	;# 
  4646  0E9E                     	;# 
  4647  0E9F                     	;# 
  4648  0EA0                     	;# 
  4649  0EA1                     	;# 
  4650  0EA2                     	;# 
  4651  0EA3                     	;# 
  4652  0EA4                     	;# 
  4653  0EA5                     	;# 
  4654  0EA6                     	;# 
  4655  0EA7                     	;# 
  4656  0F0F                     	;# 
  4657  0F10                     	;# 
  4658  0F11                     	;# 
  4659  0F12                     	;# 
  4660  0F13                     	;# 
  4661  0F14                     	;# 
  4662  0F15                     	;# 
  4663  0F16                     	;# 
  4664  0F17                     	;# 
  4665  0F18                     	;# 
  4666  0F19                     	;# 
  4667  0F1A                     	;# 
  4668  0F1B                     	;# 
  4669  0F1C                     	;# 
  4670  0F1D                     	;# 
  4671  0F1E                     	;# 
  4672  0F1F                     	;# 
  4673  0F20                     	;# 
  4674  0F21                     	;# 
  4675  0F22                     	;# 
  4676  0F23                     	;# 
  4677  0F24                     	;# 
  4678  0F25                     	;# 
  4679  0F26                     	;# 
  4680  0F27                     	;# 
  4681  0F28                     	;# 
  4682  0F29                     	;# 
  4683  0F2A                     	;# 
  4684  0F2B                     	;# 
  4685  0F2C                     	;# 
  4686  0F2D                     	;# 
  4687  0F2E                     	;# 
  4688  0F2F                     	;# 
  4689  0F30                     	;# 
  4690  0F31                     	;# 
  4691  0F32                     	;# 
  4692  0F33                     	;# 
  4693  0F34                     	;# 
  4694  0F35                     	;# 
  4695  0F36                     	;# 
  4696  0F37                     	;# 
  4697  0FE4                     	;# 
  4698  0FE5                     	;# 
  4699  0FE6                     	;# 
  4700  0FE7                     	;# 
  4701  0FE8                     	;# 
  4702  0FE9                     	;# 
  4703  0FEA                     	;# 
  4704  0FEB                     	;# 
  4705  0FED                     	;# 
  4706  0FEE                     	;# 
  4707  0FEF                     	;# 
  4708                           
  4709 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
  4710  0000                     
  4711 ;; Function _TMR1_DefaultInterruptHandler is unused but had its address taken
  4712  001C                     _T1GCONbits	set	28
  4713  001B                     _T1CONbits	set	27
  4714  001B                     _T1CON	set	27
  4715  0011                     _PIR1bits	set	17
  4716  0019                     _TMR1L	set	25
  4717  001A                     _TMR1H	set	26
  4718  001C                     _T1GCON	set	28
  4719  0014                     _PIR4bits	set	20
  4720  0017                     _T0CON0bits	set	23
  4721  0017                     _T0CON0	set	23
  4722  0010                     _PIR0bits	set	16
  4723  0015                     _TMR0L	set	21
  4724  0016                     _TMR0H	set	22
  4725  0018                     _T0CON1	set	24
  4726  000D                     _PORTBbits	set	13
  4727  000E                     _PORTCbits	set	14
  4728  000C                     _PORTAbits	set	12
  4729  000B                     _INTCONbits	set	11
  4730  0014                     _PIR4	set	20
  4731  0013                     _PIR3	set	19
  4732  0012                     _PIR2	set	18
  4733  0011                     _PIR1	set	17
  4734  0010                     _PIR0	set	16
  4735  0091                     _PIE1bits	set	145
  4736  0094                     _PIE4bits	set	148
  4737  0090                     _PIE0bits	set	144
  4738  0097                     _WDTCON	set	151
  4739  008D                     _TRISBbits	set	141
  4740  008E                     _TRISCbits	set	142
  4741  008C                     _TRISAbits	set	140
  4742  008E                     _TRISC	set	142
  4743  008D                     _TRISB	set	141
  4744  008C                     _TRISA	set	140
  4745  0094                     _PIE4	set	148
  4746  0093                     _PIE3	set	147
  4747  0092                     _PIE2	set	146
  4748  0091                     _PIE1	set	145
  4749  0090                     _PIE0	set	144
  4750  010D                     _LATBbits	set	269
  4751  010E                     _LATCbits	set	270
  4752  010C                     _LATAbits	set	268
  4753  010E                     _LATC	set	270
  4754  010D                     _LATB	set	269
  4755  010C                     _LATA	set	268
  4756  0199                     _RC1REG	set	409
  4757  019D                     _RC1STAbits	set	413
  4758  019A                     _TX1REG	set	410
  4759  019E                     _TX1STAbits	set	414
  4760  019C                     _SP1BRGH	set	412
  4761  019B                     _SP1BRGL	set	411
  4762  019E                     _TX1STA	set	414
  4763  019D                     _RC1STA	set	413
  4764  019F                     _BAUD1CON	set	415
  4765  018C                     _ANSELA	set	396
  4766  018D                     _ANSELB	set	397
  4767  018E                     _ANSELC	set	398
  4768  020E                     _WPUC	set	526
  4769  020C                     _WPUA	set	524
  4770  020D                     _WPUB	set	525
  4771  0295                     _CCPR2L	set	661
  4772  0296                     _CCPR2H	set	662
  4773  0298                     _CCP2CAP	set	664
  4774  0297                     _CCP2CON	set	663
  4775  029F                     _CCPTMRSbits	set	671
  4776  0291                     _CCPR1L	set	657
  4777  0292                     _CCPR1H	set	658
  4778  0294                     _CCP1CAP	set	660
  4779  0293                     _CCP1CON	set	659
  4780  028E                     _ODCONC	set	654
  4781  028D                     _ODCONB	set	653
  4782  028C                     _ODCONA	set	652
  4783  0311                     _CCPR3L	set	785
  4784  0312                     _CCPR3H	set	786
  4785  0314                     _CCP3CAP	set	788
  4786  0313                     _CCP3CON	set	787
  4787  030E                     _SLRCONC	set	782
  4788  030D                     _SLRCONB	set	781
  4789  030C                     _SLRCONA	set	780
  4790  038E                     _INLVLC	set	910
  4791  038D                     _INLVLB	set	909
  4792  038C                     _INLVLA	set	908
  4793  0916                     _PMD5	set	2326
  4794  0915                     _PMD4	set	2325
  4795  0914                     _PMD3	set	2324
  4796  0913                     _PMD2	set	2323
  4797  0912                     _PMD1	set	2322
  4798  0911                     _PMD0	set	2321
  4799  091E                     _OSCTUNE	set	2334
  4800  091F                     _OSCFRQ	set	2335
  4801  091D                     _OSCEN	set	2333
  4802  091B                     _OSCCON3	set	2331
  4803  0919                     _OSCCON1	set	2329
  4804  48E0                     _PLLR	set	18656
  4805  0E14                     _CCP1PPS	set	3604
  4806  0E16                     _CCP3PPS	set	3606
  4807  0E15                     _CCP2PPS	set	3605
  4808  0E24                     _RXPPS	set	3620
  4809  0EA4                     _RC4PPS	set	3748
  4810                           
  4811                           	psect	stringtext1
  4812  1000                     __pstringtext1:
  4813  1000                     STR_1:
  4814  1000  3425               	retlw	37	;'%'
  4815  1001  3475               	retlw	117	;'u'
  4816  1002  3400               	retlw	0
  4817                           
  4818                           	psect	stringtext2
  4819  0000                     __pstringtext2:
  4820  1000                     
  4821                           	psect	cinit
  4822  0076                     start_initialization:	
  4823                           ; #config settings
  4824                           
  4825  0076                     __initialization:
  4826                           
  4827                           ; Clear objects allocated to COMMON
  4828  0076  01FA               	clrf	__pbssCOMMON& (0+127)
  4829  0077  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  4830  0078  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  4831  0079  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  4832                           
  4833                           ; Clear objects allocated to BANK1
  4834  007A  30A0               	movlw	low __pbssBANK1
  4835  007B  0084               	movwf	4
  4836  007C  3000               	movlw	high __pbssBANK1
  4837  007D  0085               	movwf	5
  4838  007E  3040               	movlw	64
  4839  007F  318B  2322  3180   	fcall	clear_ram0
  4840                           
  4841                           ; Clear objects allocated to BANK2
  4842  0082  3020               	movlw	low __pbssBANK2
  4843  0083  0084               	movwf	4
  4844  0084  3001               	movlw	high __pbssBANK2
  4845  0085  0085               	movwf	5
  4846  0086  304C               	movlw	76
  4847  0087  318B  2322  3180   	fcall	clear_ram0
  4848  008A                     end_of_initialization:	
  4849                           ;End of C runtime variable initialization code
  4850                           
  4851  008A                     __end_of__initialization:
  4852  008A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4853  008B  0020               	movlb	0
  4854  008C  3181  297D         	ljmp	_main	;jump to C main() function
  4855                           
  4856                           	psect	bssCOMMON
  4857  007A                     __pbssCOMMON:
  4858  007A                     _eusartRxTail:
  4859  007A                     	ds	1
  4860  007B                     _eusartRxHead:
  4861  007B                     	ds	1
  4862  007C                     _eusartTxTail:
  4863  007C                     	ds	1
  4864  007D                     _eusartTxHead:
  4865  007D                     	ds	1
  4866                           
  4867                           	psect	bssBANK1
  4868  00A0                     __pbssBANK1:
  4869  00A0                     _nout:
  4870  00A0                     	ds	2
  4871  00A2                     _width:
  4872  00A2                     	ds	2
  4873  00A4                     _prec:
  4874  00A4                     	ds	2
  4875  00A6                     _flags:
  4876  00A6                     	ds	2
  4877  00A8                     _EUSART_ErrorHandler:
  4878  00A8                     	ds	2
  4879  00AA                     _EUSART_OverrunErrorHandler:
  4880  00AA                     	ds	2
  4881  00AC                     _EUSART_FramingErrorHandler:
  4882  00AC                     	ds	2
  4883  00AE                     _EUSART_RxDefaultInterruptHandler:
  4884  00AE                     	ds	2
  4885  00B0                     _EUSART_TxDefaultInterruptHandler:
  4886  00B0                     	ds	2
  4887  00B2                     _TMR1_InterruptHandler:
  4888  00B2                     	ds	2
  4889  00B4                     _timer1ReloadVal:
  4890  00B4                     	ds	2
  4891  00B6                     _ticksDown@ccp3$F998:
  4892  00B6                     	ds	2
  4893  00B8                     _ticksUp@ccp3$F997:
  4894  00B8                     	ds	2
  4895  00BA                     _CCP3_CallBack:
  4896  00BA                     	ds	2
  4897  00BC                     _ticksDown@ccp2$F873:
  4898  00BC                     	ds	2
  4899  00BE                     _ticksUp@ccp2$F872:
  4900  00BE                     	ds	2
  4901  00C0                     _CCP2_CallBack:
  4902  00C0                     	ds	2
  4903  00C2                     _ticksDown:
  4904  00C2                     	ds	2
  4905  00C4                     _ticksUp:
  4906  00C4                     	ds	2
  4907  00C6                     _CCP1_CallBack:
  4908  00C6                     	ds	2
  4909  00C8                     TMR0_ISR@CountCallBack:
  4910  00C8                     	ds	2
  4911  00CA                     _eusartRxLastError:
  4912  00CA                     	ds	1
  4913  00CB                     _eusartRxCount:
  4914  00CB                     	ds	1
  4915  00CC                     _eusartTxBufferRemaining:
  4916  00CC                     	ds	1
  4917  00CD                     _lastTrig@ccp3$F1000:
  4918  00CD                     	ds	1
  4919  00CE                     _sameSens@ccp3$F999:
  4920  00CE                     	ds	1
  4921  00CF                     _lastTrig@ccp2$F875:
  4922  00CF                     	ds	1
  4923  00D0                     _sameSens@ccp2$F874:
  4924  00D0                     	ds	1
  4925  00D1                     _lastTrig@ccp1$F729:
  4926  00D1                     	ds	1
  4927  00D2                     _sameSens:
  4928  00D2                     	ds	1
  4929  00D3                     _lastTrig:
  4930  00D3                     	ds	1
  4931  00D4                     _Sens2:
  4932  00D4                     	ds	6
  4933  00DA                     _Sens1:
  4934  00DA                     	ds	6
  4935                           
  4936                           	psect	bssBANK2
  4937  0120                     __pbssBANK2:
  4938  0120                     _eusartRxStatusBuffer:
  4939  0120                     	ds	8
  4940  0128                     _eusartRxBuffer:
  4941  0128                     	ds	8
  4942  0130                     _eusartTxBuffer:
  4943  0130                     	ds	8
  4944  0138                     _Sens3:
  4945  0138                     	ds	6
  4946  013E                     _micros@FRT$F1533:
  4947  013E                     	ds	4
  4948  0142                     _millis:
  4949  0142                     	ds	4
  4950  0146                     _micros:
  4951  0146                     	ds	4
  4952  014A                     _TMR0_InterruptHandler:
  4953  014A                     	ds	2
  4954  014C                     _dbuf:
  4955  014C                     	ds	32
  4956                           
  4957                           	psect	clrtext
  4958  0B22                     clear_ram0:	
  4959                           ;	Called with FSR0 containing the base address, and
  4960                           ;	WREG with the size to clear
  4961                           
  4962  0B22  0064               	clrwdt	;clear the watchdog before getting into this loop
  4963  0B23                     clrloop0:
  4964  0B23  0180               	clrf	0	;clear RAM location pointed to by FSR
  4965  0B24  3101               	addfsr 0,1
  4966  0B25  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4967  0B26  2B23               	goto	clrloop0	;have we reached the end yet?
  4968  0B27  3400               	retlw	0	;all done for this memory range, return
  4969                           
  4970                           	psect	cstackBANK1
  4971  00E0                     __pcstackBANK1:
  4972  00E0                     ??_printf:
  4973                           
  4974                           ; 1 bytes @ 0x0
  4975  00E0                     	ds	1
  4976  00E1                     printf@ap:
  4977                           
  4978                           ; 1 bytes @ 0x1
  4979  00E1                     	ds	1
  4980  00E2                     ??_main:
  4981                           
  4982                           ; 1 bytes @ 0x2
  4983  00E2                     	ds	4
  4984  00E6                     main@prevMilli:
  4985                           
  4986                           ; 4 bytes @ 0x6
  4987  00E6                     	ds	4
  4988  00EA                     main@i:
  4989                           
  4990                           ; 1 bytes @ 0xA
  4991  00EA                     	ds	1
  4992  00EB                     main@currMilli:
  4993                           
  4994                           ; 4 bytes @ 0xB
  4995  00EB                     	ds	4
  4996                           
  4997                           	psect	cstackCOMMON
  4998  0070                     __pcstackCOMMON:
  4999  0070                     ?_PIC16_Init:
  5000  0070                     ?_JSN_GetLastTrig:	
  5001                           ; 1 bytes @ 0x0
  5002                           
  5003  0070                     ??_JSN_GetLastTrig:	
  5004                           ; 1 bytes @ 0x0
  5005                           
  5006  0070                     ?_SYSTEM_Initialize:	
  5007                           ; 1 bytes @ 0x0
  5008                           
  5009  0070                     ?_PMD_Initialize:	
  5010                           ; 1 bytes @ 0x0
  5011                           
  5012  0070                     ?_PIN_MANAGER_Initialize:	
  5013                           ; 1 bytes @ 0x0
  5014                           
  5015  0070                     ?_OSCILLATOR_Initialize:	
  5016                           ; 1 bytes @ 0x0
  5017                           
  5018  0070                     ?_WDT_Initialize:	
  5019                           ; 1 bytes @ 0x0
  5020                           
  5021  0070                     ?_CCP2_Initialize:	
  5022                           ; 1 bytes @ 0x0
  5023                           
  5024  0070                     ?_CCP3_Initialize:	
  5025                           ; 1 bytes @ 0x0
  5026                           
  5027  0070                     ?_CCP1_Initialize:	
  5028                           ; 1 bytes @ 0x0
  5029                           
  5030  0070                     ?_TMR1_Initialize:	
  5031                           ; 1 bytes @ 0x0
  5032                           
  5033  0070                     ?_TMR0_Initialize:	
  5034                           ; 1 bytes @ 0x0
  5035                           
  5036  0070                     ?_EUSART_Initialize:	
  5037                           ; 1 bytes @ 0x0
  5038                           
  5039  0070                     ?_TMR0_CallBack:	
  5040                           ; 1 bytes @ 0x0
  5041                           
  5042  0070                     ??_TMR0_CallBack:	
  5043                           ; 1 bytes @ 0x0
  5044                           
  5045  0070                     ?_FRT_IncMillis:	
  5046                           ; 1 bytes @ 0x0
  5047                           
  5048  0070                     ??_FRT_IncMillis:	
  5049                           ; 1 bytes @ 0x0
  5050                           
  5051  0070                     ?_FRT_IncMicros:	
  5052                           ; 1 bytes @ 0x0
  5053                           
  5054  0070                     ??_FRT_IncMicros:	
  5055                           ; 1 bytes @ 0x0
  5056                           
  5057  0070                     ?_EUSART_Receive_ISR:	
  5058                           ; 1 bytes @ 0x0
  5059                           
  5060  0070                     ?_EUSART_Transmit_ISR:	
  5061                           ; 1 bytes @ 0x0
  5062                           
  5063  0070                     ??_EUSART_Transmit_ISR:	
  5064                           ; 1 bytes @ 0x0
  5065                           
  5066  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  5067                           ; 1 bytes @ 0x0
  5068                           
  5069  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  5070                           ; 1 bytes @ 0x0
  5071                           
  5072  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  5073                           ; 1 bytes @ 0x0
  5074                           
  5075  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  5076                           ; 1 bytes @ 0x0
  5077                           
  5078  0070                     ?_EUSART_DefaultErrorHandler:	
  5079                           ; 1 bytes @ 0x0
  5080                           
  5081  0070                     ?_EUSART_RxDataHandler:	
  5082                           ; 1 bytes @ 0x0
  5083                           
  5084  0070                     ??_EUSART_RxDataHandler:	
  5085                           ; 1 bytes @ 0x0
  5086                           
  5087  0070                     ?_JSN_Sensor_Trig:	
  5088                           ; 1 bytes @ 0x0
  5089                           
  5090  0070                     ?_ReadPin:	
  5091                           ; 1 bytes @ 0x0
  5092                           
  5093  0070                     ??_ReadPin:	
  5094                           ; 1 bytes @ 0x0
  5095                           
  5096  0070                     ?_TMR0_ReadTimer:	
  5097                           ; 1 bytes @ 0x0
  5098                           
  5099  0070                     ?_TMR0_ISR:	
  5100                           ; 1 bytes @ 0x0
  5101                           
  5102  0070                     ??_TMR0_ISR:	
  5103                           ; 1 bytes @ 0x0
  5104                           
  5105  0070                     ?_CCP1_CaptureISR:	
  5106                           ; 1 bytes @ 0x0
  5107                           
  5108  0070                     ?_CCP2_CaptureISR:	
  5109                           ; 1 bytes @ 0x0
  5110                           
  5111  0070                     ?_CCP3_CaptureISR:	
  5112                           ; 1 bytes @ 0x0
  5113                           
  5114  0070                     ?_TMR1_WriteTimer:	
  5115                           ; 1 bytes @ 0x0
  5116                           
  5117  0070                     ?_TMR1_ISR:	
  5118                           ; 1 bytes @ 0x0
  5119                           
  5120  0070                     ?_EUSART_Write:	
  5121                           ; 1 bytes @ 0x0
  5122                           
  5123  0070                     ?_putch:	
  5124                           ; 1 bytes @ 0x0
  5125                           
  5126  0070                     ?_INTERRUPT_InterruptManager:	
  5127                           ; 1 bytes @ 0x0
  5128                           
  5129  0070                     ?_main:	
  5130                           ; 1 bytes @ 0x0
  5131                           
  5132  0070                     TMR1_WriteTimer@timerVal:	
  5133                           ; 2 bytes @ 0x0
  5134                           
  5135                           
  5136                           ; 2 bytes @ 0x0
  5137  0070                     	ds	1
  5138  0071                     ??_EUSART_Receive_ISR:
  5139  0071                     ??_EUSART_DefaultErrorHandler:	
  5140                           ; 1 bytes @ 0x1
  5141                           
  5142                           
  5143                           ; 1 bytes @ 0x1
  5144  0071                     	ds	1
  5145  0072                     ??_TMR1_WriteTimer:
  5146  0072                     ??_TMR1_ISR:	
  5147                           ; 1 bytes @ 0x2
  5148                           
  5149  0072                     ReadPin@pin:	
  5150                           ; 1 bytes @ 0x2
  5151                           
  5152                           
  5153                           ; 1 bytes @ 0x2
  5154  0072                     	ds	1
  5155  0073                     ?_CCP1_DefaultCallBack:
  5156  0073                     ?_CCP2_DefaultCallBack:	
  5157                           ; 1 bytes @ 0x3
  5158                           
  5159  0073                     ?_CCP3_DefaultCallBack:	
  5160                           ; 1 bytes @ 0x3
  5161                           
  5162  0073                     CCP1_DefaultCallBack@capturedValue:	
  5163                           ; 1 bytes @ 0x3
  5164                           
  5165  0073                     CCP2_DefaultCallBack@capturedValue:	
  5166                           ; 2 bytes @ 0x3
  5167                           
  5168  0073                     CCP3_DefaultCallBack@capturedValue:	
  5169                           ; 2 bytes @ 0x3
  5170                           
  5171                           
  5172                           ; 2 bytes @ 0x3
  5173  0073                     	ds	2
  5174  0075                     ??_CCP1_DefaultCallBack:
  5175  0075                     ??_CCP2_DefaultCallBack:	
  5176                           ; 1 bytes @ 0x5
  5177                           
  5178  0075                     ??_CCP3_DefaultCallBack:	
  5179                           ; 1 bytes @ 0x5
  5180                           
  5181                           
  5182                           ; 1 bytes @ 0x5
  5183  0075                     	ds	2
  5184  0077                     ??_CCP1_CaptureISR:
  5185  0077                     ??_CCP2_CaptureISR:	
  5186                           ; 1 bytes @ 0x7
  5187                           
  5188  0077                     ??_CCP3_CaptureISR:	
  5189                           ; 1 bytes @ 0x7
  5190                           
  5191                           
  5192                           ; 1 bytes @ 0x7
  5193  0077                     	ds	1
  5194  0078                     CCP1_CaptureISR@module:
  5195  0078                     CCP2_CaptureISR@module:	
  5196                           ; 2 bytes @ 0x8
  5197                           
  5198  0078                     CCP3_CaptureISR@module:	
  5199                           ; 2 bytes @ 0x8
  5200                           
  5201                           
  5202                           ; 2 bytes @ 0x8
  5203  0078                     	ds	2
  5204  007A                     ??_INTERRUPT_InterruptManager:
  5205                           
  5206                           	psect	cstackBANK0
  5207  0020                     __pcstackBANK0:	
  5208                           ; 1 bytes @ 0xA
  5209                           
  5210  0020                     ?_SetPin:
  5211  0020                     ?_WritePin:	
  5212                           ; 1 bytes @ 0x0
  5213                           
  5214  0020                     ??_PMD_Initialize:	
  5215                           ; 1 bytes @ 0x0
  5216                           
  5217  0020                     ??_PIN_MANAGER_Initialize:	
  5218                           ; 1 bytes @ 0x0
  5219                           
  5220  0020                     ??_OSCILLATOR_Initialize:	
  5221                           ; 1 bytes @ 0x0
  5222                           
  5223  0020                     ??_WDT_Initialize:	
  5224                           ; 1 bytes @ 0x0
  5225                           
  5226  0020                     ?_TMR0_SetInterruptHandler:	
  5227                           ; 1 bytes @ 0x0
  5228                           
  5229  0020                     ?_CCP1_SetCallBack:	
  5230                           ; 1 bytes @ 0x0
  5231                           
  5232  0020                     ?_CCP2_SetCallBack:	
  5233                           ; 1 bytes @ 0x0
  5234                           
  5235  0020                     ?_CCP3_SetCallBack:	
  5236                           ; 1 bytes @ 0x0
  5237                           
  5238  0020                     ?_TMR1_SetInterruptHandler:	
  5239                           ; 1 bytes @ 0x0
  5240                           
  5241  0020                     ?_EUSART_SetRxInterruptHandler:	
  5242                           ; 1 bytes @ 0x0
  5243                           
  5244  0020                     ?_EUSART_SetTxInterruptHandler:	
  5245                           ; 1 bytes @ 0x0
  5246                           
  5247  0020                     ?_EUSART_SetFramingErrorHandler:	
  5248                           ; 1 bytes @ 0x0
  5249                           
  5250  0020                     ?_EUSART_SetOverrunErrorHandler:	
  5251                           ; 1 bytes @ 0x0
  5252                           
  5253  0020                     ?_EUSART_SetErrorHandler:	
  5254                           ; 1 bytes @ 0x0
  5255                           
  5256  0020                     ??_TMR0_ReadTimer:	
  5257                           ; 1 bytes @ 0x0
  5258                           
  5259  0020                     ??_EUSART_Write:	
  5260                           ; 1 bytes @ 0x0
  5261                           
  5262  0020                     ?_strlen:	
  5263                           ; 1 bytes @ 0x0
  5264                           
  5265  0020                     ?_FRT_GetMillis:	
  5266                           ; 2 bytes @ 0x0
  5267                           
  5268  0020                     ?___lmul:	
  5269                           ; 4 bytes @ 0x0
  5270                           
  5271  0020                     ?___lodiv:	
  5272                           ; 4 bytes @ 0x0
  5273                           
  5274  0020                     ?___lomod:	
  5275                           ; 8 bytes @ 0x0
  5276                           
  5277  0020                     SetPin@io:	
  5278                           ; 8 bytes @ 0x0
  5279                           
  5280  0020                     WritePin@val:	
  5281                           ; 1 bytes @ 0x0
  5282                           
  5283  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  5284                           ; 1 bytes @ 0x0
  5285                           
  5286  0020                     CCP1_SetCallBack@customCallBack:	
  5287                           ; 2 bytes @ 0x0
  5288                           
  5289  0020                     CCP2_SetCallBack@customCallBack:	
  5290                           ; 2 bytes @ 0x0
  5291                           
  5292  0020                     CCP3_SetCallBack@customCallBack:	
  5293                           ; 2 bytes @ 0x0
  5294                           
  5295  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  5296                           ; 2 bytes @ 0x0
  5297                           
  5298  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  5299                           ; 2 bytes @ 0x0
  5300                           
  5301  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  5302                           ; 2 bytes @ 0x0
  5303                           
  5304  0020                     EUSART_SetErrorHandler@interruptHandler:	
  5305                           ; 2 bytes @ 0x0
  5306                           
  5307  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  5308                           ; 2 bytes @ 0x0
  5309                           
  5310  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  5311                           ; 2 bytes @ 0x0
  5312                           
  5313  0020                     ___lmul@multiplier:	
  5314                           ; 2 bytes @ 0x0
  5315                           
  5316  0020                     ___lodiv@divisor:	
  5317                           ; 4 bytes @ 0x0
  5318                           
  5319  0020                     ___lomod@divisor:	
  5320                           ; 8 bytes @ 0x0
  5321                           
  5322                           
  5323                           ; 8 bytes @ 0x0
  5324  0020                     	ds	1
  5325  0021                     ??_SetPin:
  5326  0021                     ??_WritePin:	
  5327                           ; 1 bytes @ 0x1
  5328                           
  5329  0021                     TMR0_ReadTimer@readVal:	
  5330                           ; 1 bytes @ 0x1
  5331                           
  5332  0021                     EUSART_Write@txData:	
  5333                           ; 1 bytes @ 0x1
  5334                           
  5335                           
  5336                           ; 1 bytes @ 0x1
  5337  0021                     	ds	1
  5338  0022                     ??_CCP2_Initialize:
  5339  0022                     ??_CCP3_Initialize:	
  5340                           ; 1 bytes @ 0x2
  5341                           
  5342  0022                     ??_CCP1_Initialize:	
  5343                           ; 1 bytes @ 0x2
  5344                           
  5345  0022                     ??_TMR1_Initialize:	
  5346                           ; 1 bytes @ 0x2
  5347                           
  5348  0022                     ??_TMR0_Initialize:	
  5349                           ; 1 bytes @ 0x2
  5350                           
  5351  0022                     ??_EUSART_Initialize:	
  5352                           ; 1 bytes @ 0x2
  5353                           
  5354  0022                     ??_TMR0_SetInterruptHandler:	
  5355                           ; 1 bytes @ 0x2
  5356                           
  5357  0022                     ??_CCP1_SetCallBack:	
  5358                           ; 1 bytes @ 0x2
  5359                           
  5360  0022                     ??_CCP2_SetCallBack:	
  5361                           ; 1 bytes @ 0x2
  5362                           
  5363  0022                     ??_CCP3_SetCallBack:	
  5364                           ; 1 bytes @ 0x2
  5365                           
  5366  0022                     ??_TMR1_SetInterruptHandler:	
  5367                           ; 1 bytes @ 0x2
  5368                           
  5369  0022                     ??_EUSART_SetRxInterruptHandler:	
  5370                           ; 1 bytes @ 0x2
  5371                           
  5372  0022                     ??_EUSART_SetTxInterruptHandler:	
  5373                           ; 1 bytes @ 0x2
  5374                           
  5375  0022                     ??_EUSART_SetFramingErrorHandler:	
  5376                           ; 1 bytes @ 0x2
  5377                           
  5378  0022                     ??_EUSART_SetOverrunErrorHandler:	
  5379                           ; 1 bytes @ 0x2
  5380                           
  5381  0022                     ??_EUSART_SetErrorHandler:	
  5382                           ; 1 bytes @ 0x2
  5383                           
  5384  0022                     ??_strlen:	
  5385                           ; 1 bytes @ 0x2
  5386                           
  5387  0022                     ??_putch:	
  5388                           ; 1 bytes @ 0x2
  5389                           
  5390  0022                     ?_FRT_GetMicros:	
  5391                           ; 1 bytes @ 0x2
  5392                           
  5393  0022                     putch@txData:	
  5394                           ; 4 bytes @ 0x2
  5395                           
  5396                           
  5397                           ; 1 bytes @ 0x2
  5398  0022                     	ds	1
  5399  0023                     ??_PIC16_Init:
  5400  0023                     ??_SYSTEM_Initialize:	
  5401                           ; 1 bytes @ 0x3
  5402                           
  5403  0023                     ?_fputc:	
  5404                           ; 1 bytes @ 0x3
  5405                           
  5406  0023                     SetPin@pin:	
  5407                           ; 2 bytes @ 0x3
  5408                           
  5409  0023                     WritePin@pin:	
  5410                           ; 1 bytes @ 0x3
  5411                           
  5412  0023                     strlen@a:	
  5413                           ; 1 bytes @ 0x3
  5414                           
  5415  0023                     fputc@c:	
  5416                           ; 1 bytes @ 0x3
  5417                           
  5418                           
  5419                           ; 2 bytes @ 0x3
  5420  0023                     	ds	1
  5421  0024                     ??_FRT_GetMillis:
  5422  0024                     ?_JSN_Sensor_Init:	
  5423                           ; 1 bytes @ 0x4
  5424                           
  5425  0024                     JSN_Sensor_Init@trigPin:	
  5426                           ; 1 bytes @ 0x4
  5427                           
  5428  0024                     strlen@s:	
  5429                           ; 1 bytes @ 0x4
  5430                           
  5431  0024                     ___lmul@multiplicand:	
  5432                           ; 1 bytes @ 0x4
  5433                           
  5434                           
  5435                           ; 4 bytes @ 0x4
  5436  0024                     	ds	1
  5437  0025                     JSN_Sensor_Init@echoPin:
  5438  0025                     fputc@fp:	
  5439                           ; 1 bytes @ 0x5
  5440                           
  5441                           
  5442                           ; 1 bytes @ 0x5
  5443  0025                     	ds	1
  5444  0026                     ??_FRT_GetMicros:
  5445  0026                     ??_fputc:	
  5446                           ; 1 bytes @ 0x6
  5447                           
  5448  0026                     ??_JSN_Sensor_Init:	
  5449                           ; 1 bytes @ 0x6
  5450                           
  5451  0026                     ??_JSN_Sensor_Trig:	
  5452                           ; 1 bytes @ 0x6
  5453                           
  5454                           
  5455                           ; 1 bytes @ 0x6
  5456  0026                     	ds	2
  5457  0028                     ??___lmul:
  5458  0028                     JSN_Sensor_Init@Sensor:	
  5459                           ; 1 bytes @ 0x8
  5460                           
  5461  0028                     ___lmul@product:	
  5462                           ; 1 bytes @ 0x8
  5463                           
  5464  0028                     ___lodiv@dividend:	
  5465                           ; 4 bytes @ 0x8
  5466                           
  5467  0028                     ___lomod@dividend:	
  5468                           ; 8 bytes @ 0x8
  5469                           
  5470                           
  5471                           ; 8 bytes @ 0x8
  5472  0028                     	ds	2
  5473  002A                     JSN_Sensor_Trig@Sensor:
  5474                           
  5475                           ; 1 bytes @ 0xA
  5476  002A                     	ds	1
  5477  002B                     ?_fputs:
  5478  002B                     fputs@fp:	
  5479                           ; 2 bytes @ 0xB
  5480                           
  5481                           
  5482                           ; 1 bytes @ 0xB
  5483  002B                     	ds	1
  5484  002C                     ??_fputs:
  5485  002C                     ?___lldiv:	
  5486                           ; 1 bytes @ 0xC
  5487                           
  5488  002C                     ___lldiv@divisor:	
  5489                           ; 4 bytes @ 0xC
  5490                           
  5491                           
  5492                           ; 4 bytes @ 0xC
  5493  002C                     	ds	3
  5494  002F                     fputs@c:
  5495                           
  5496                           ; 1 bytes @ 0xF
  5497  002F                     	ds	1
  5498  0030                     ??___lodiv:
  5499  0030                     ??___lomod:	
  5500                           ; 1 bytes @ 0x10
  5501                           
  5502  0030                     fputs@i:	
  5503                           ; 1 bytes @ 0x10
  5504                           
  5505  0030                     ___lldiv@dividend:	
  5506                           ; 2 bytes @ 0x10
  5507                           
  5508                           
  5509                           ; 4 bytes @ 0x10
  5510  0030                     	ds	1
  5511  0031                     ___lomod@counter:
  5512  0031                     ___lodiv@quotient:	
  5513                           ; 1 bytes @ 0x11
  5514                           
  5515                           
  5516                           ; 8 bytes @ 0x11
  5517  0031                     	ds	1
  5518  0032                     fputs@s:
  5519                           
  5520                           ; 1 bytes @ 0x12
  5521  0032                     	ds	1
  5522  0033                     ?_pad:
  5523  0033                     pad@buf:	
  5524                           ; 2 bytes @ 0x13
  5525                           
  5526                           
  5527                           ; 1 bytes @ 0x13
  5528  0033                     	ds	1
  5529  0034                     ??___lldiv:
  5530  0034                     pad@p:	
  5531                           ; 1 bytes @ 0x14
  5532                           
  5533                           
  5534                           ; 2 bytes @ 0x14
  5535  0034                     	ds	1
  5536  0035                     ___lldiv@quotient:
  5537                           
  5538                           ; 4 bytes @ 0x15
  5539  0035                     	ds	1
  5540  0036                     ??_pad:
  5541                           
  5542                           ; 1 bytes @ 0x16
  5543  0036                     	ds	1
  5544  0037                     pad@i:
  5545                           
  5546                           ; 2 bytes @ 0x17
  5547  0037                     	ds	2
  5548  0039                     ___lldiv@counter:
  5549  0039                     ___lodiv@counter:	
  5550                           ; 1 bytes @ 0x19
  5551                           
  5552  0039                     pad@w:	
  5553                           ; 1 bytes @ 0x19
  5554                           
  5555                           
  5556                           ; 2 bytes @ 0x19
  5557  0039                     	ds	1
  5558  003A                     ?_JSN_Sensor_GetDistance:
  5559                           
  5560                           ; 2 bytes @ 0x1A
  5561  003A                     	ds	1
  5562  003B                     pad@fp:
  5563                           
  5564                           ; 1 bytes @ 0x1B
  5565  003B                     	ds	1
  5566  003C                     ??_JSN_Sensor_GetDistance:
  5567  003C                     ?_utoa:	
  5568                           ; 1 bytes @ 0x1C
  5569                           
  5570  003C                     utoa@d:	
  5571                           ; 2 bytes @ 0x1C
  5572                           
  5573                           
  5574                           ; 8 bytes @ 0x1C
  5575  003C                     	ds	2
  5576  003E                     JSN_Sensor_GetDistance@Sensor:
  5577                           
  5578                           ; 1 bytes @ 0x1E
  5579  003E                     	ds	6
  5580  0044                     ??_utoa:
  5581                           
  5582                           ; 1 bytes @ 0x24
  5583  0044                     	ds	1
  5584  0045                     utoa@p:
  5585                           
  5586                           ; 2 bytes @ 0x25
  5587  0045                     	ds	2
  5588  0047                     utoa@fp:
  5589                           
  5590                           ; 1 bytes @ 0x27
  5591  0047                     	ds	1
  5592  0048                     utoa@w:
  5593                           
  5594                           ; 2 bytes @ 0x28
  5595  0048                     	ds	2
  5596  004A                     utoa@n:
  5597                           
  5598                           ; 8 bytes @ 0x2A
  5599  004A                     	ds	8
  5600  0052                     utoa@i:
  5601                           
  5602                           ; 2 bytes @ 0x32
  5603  0052                     	ds	2
  5604  0054                     ?_vfpfcnvrt:
  5605  0054                     vfpfcnvrt@fmt:	
  5606                           ; 2 bytes @ 0x34
  5607                           
  5608                           
  5609                           ; 1 bytes @ 0x34
  5610  0054                     	ds	1
  5611  0055                     vfpfcnvrt@ap:
  5612                           
  5613                           ; 1 bytes @ 0x35
  5614  0055                     	ds	1
  5615  0056                     ??_vfpfcnvrt:
  5616                           
  5617                           ; 1 bytes @ 0x36
  5618  0056                     	ds	5
  5619  005B                     vfpfcnvrt@llu:
  5620                           
  5621                           ; 8 bytes @ 0x3B
  5622  005B                     	ds	8
  5623  0063                     vfpfcnvrt@fp:
  5624                           
  5625                           ; 1 bytes @ 0x43
  5626  0063                     	ds	1
  5627  0064                     ?_vfprintf:
  5628  0064                     vfprintf@fmt:	
  5629                           ; 2 bytes @ 0x44
  5630                           
  5631                           
  5632                           ; 2 bytes @ 0x44
  5633  0064                     	ds	2
  5634  0066                     vfprintf@ap:
  5635                           
  5636                           ; 1 bytes @ 0x46
  5637  0066                     	ds	1
  5638  0067                     ??_vfprintf:
  5639                           
  5640                           ; 1 bytes @ 0x47
  5641  0067                     	ds	2
  5642  0069                     vfprintf@fp:
  5643                           
  5644                           ; 1 bytes @ 0x49
  5645  0069                     	ds	1
  5646  006A                     vfprintf@cfmt:
  5647                           
  5648                           ; 2 bytes @ 0x4A
  5649  006A                     	ds	2
  5650  006C                     ?_printf:
  5651  006C                     printf@fmt:	
  5652                           ; 2 bytes @ 0x4C
  5653                           
  5654                           
  5655                           ; 2 bytes @ 0x4C
  5656  006C                     	ds	4
  5657                           
  5658                           	psect	maintext
  5659  017D                     __pmaintext:	
  5660 ;;
  5661 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  5662 ;;
  5663 ;; *************** function _main *****************
  5664 ;; Defined at:
  5665 ;;		line 130 in file "JSN_Sensor.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;		None
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;  currMilli       4   11[BANK1 ] unsigned long 
  5670 ;;  prevMilli       4    6[BANK1 ] unsigned long 
  5671 ;;  i               1   10[BANK1 ] unsigned char 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  2   64[None  ] int 
  5674 ;; Registers used:
  5675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5676 ;; Tracked objects:
  5677 ;;		On entry : B1F/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5682 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5683 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5684 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5685 ;;Total ram usage:       13 bytes
  5686 ;; Hardware stack levels required when called: 13
  5687 ;; This function calls:
  5688 ;;		_FRT_GetMillis
  5689 ;;		_JSN_Sensor_GetDistance
  5690 ;;		_JSN_Sensor_Init
  5691 ;;		_JSN_Sensor_Trig
  5692 ;;		_PIC16_Init
  5693 ;;		_SetPin
  5694 ;;		_WritePin
  5695 ;;		_printf
  5696 ;; This function is called by:
  5697 ;;		Startup code after reset
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701  017D                     _main:	
  5702                           ;psect for function _main
  5703                           
  5704  017D                     l3780:	
  5705                           ;incstack = 0
  5706                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5707                           
  5708                           
  5709                           ;JSN_Sensor.c: 132:     PIC16_Init();
  5710  017D  318E  264F  3181   	fcall	_PIC16_Init
  5711  0180                     l3782:
  5712                           
  5713                           ;JSN_Sensor.c: 133:     JSN_Sensor_Init(&Sens1, C6, C5);
  5714  0180  3006               	movlw	6
  5715  0181  0021               	movlb	1	; select bank1
  5716  0182  00E2               	movwf	??_main^(0+128)
  5717  0183  0862               	movf	??_main^(0+128),w
  5718  0184  0020               	movlb	0	; select bank0
  5719  0185  00A4               	movwf	JSN_Sensor_Init@trigPin
  5720  0186  3003               	movlw	3
  5721  0187  0021               	movlb	1	; select bank1
  5722  0188  00E3               	movwf	(??_main+1)^(0+128)
  5723  0189  0863               	movf	(??_main+1)^(0+128),w
  5724  018A  0020               	movlb	0	; select bank0
  5725  018B  00A5               	movwf	JSN_Sensor_Init@echoPin
  5726  018C  30DA               	movlw	(low (_Sens1| 0))& (0+255)
  5727  018D  3185  25B3  3181   	fcall	_JSN_Sensor_Init
  5728  0190                     l3784:
  5729                           
  5730                           ;JSN_Sensor.c: 134:     JSN_Sensor_Init(&Sens2, A1, C3);
  5731  0190  300A               	movlw	10
  5732  0191  0021               	movlb	1	; select bank1
  5733  0192  00E2               	movwf	??_main^(0+128)
  5734  0193  0862               	movf	??_main^(0+128),w
  5735  0194  0020               	movlb	0	; select bank0
  5736  0195  00A4               	movwf	JSN_Sensor_Init@trigPin
  5737  0196  3005               	movlw	5
  5738  0197  0021               	movlb	1	; select bank1
  5739  0198  00E3               	movwf	(??_main+1)^(0+128)
  5740  0199  0863               	movf	(??_main+1)^(0+128),w
  5741  019A  0020               	movlb	0	; select bank0
  5742  019B  00A5               	movwf	JSN_Sensor_Init@echoPin
  5743  019C  30D4               	movlw	(low (_Sens2| 0))& (0+255)
  5744  019D  3185  25B3  3181   	fcall	_JSN_Sensor_Init
  5745  01A0                     l3786:
  5746  01A0                     l3788:
  5747                           
  5748                           ;JSN_Sensor.c: 138:     unsigned long prevMilli = 0;
  5749  01A0  3000               	movlw	0
  5750  01A1  0021               	movlb	1	; select bank1
  5751  01A2  00E9               	movwf	(main@prevMilli+3)^(0+128)
  5752  01A3  3000               	movlw	0
  5753  01A4  00E8               	movwf	(main@prevMilli+2)^(0+128)
  5754  01A5  3000               	movlw	0
  5755  01A6  00E7               	movwf	(main@prevMilli+1)^(0+128)
  5756  01A7  3000               	movlw	0
  5757  01A8  00E6               	movwf	main@prevMilli^(0+128)
  5758  01A9                     l3790:
  5759                           
  5760                           ;JSN_Sensor.c: 139:     uint8_t i = 1;
  5761  01A9  01EA               	clrf	main@i^(0+128)
  5762  01AA  0AEA               	incf	main@i^(0+128),f
  5763  01AB                     l3792:
  5764                           
  5765                           ;JSN_Sensor.c: 140:     SetPin(C0, 0);
  5766  01AB  0020               	movlb	0	; select bank0
  5767  01AC  01A0               	clrf	SetPin@io
  5768  01AD  300C               	movlw	12
  5769  01AE  3183  23DD  3181   	fcall	_SetPin
  5770  01B1                     l3794:
  5771                           
  5772                           ;JSN_Sensor.c: 141:     WritePin(C0, 0);
  5773  01B1  0020               	movlb	0	; select bank0
  5774  01B2  01A0               	clrf	WritePin@val
  5775  01B3  300C               	movlw	12
  5776  01B4  3183  2322  3181   	fcall	_WritePin
  5777  01B7                     l3796:
  5778                           
  5779                           ;JSN_Sensor.c: 143:     JSN_Sensor_Trig(&Sens1);
  5780  01B7  30DA               	movlw	(low (_Sens1| 0))& (0+255)
  5781  01B8  3187  275A  3181   	fcall	_JSN_Sensor_Trig
  5782  01BB                     l3798:
  5783                           
  5784                           ;JSN_Sensor.c: 144:     JSN_Sensor_Trig(&Sens2);
  5785  01BB  30D4               	movlw	(low (_Sens2| 0))& (0+255)
  5786  01BC  3187  275A  3181   	fcall	_JSN_Sensor_Trig
  5787  01BF                     l3800:
  5788                           
  5789                           ;JSN_Sensor.c: 147:         currMilli = FRT_GetMillis();
  5790  01BF  318B  23D6  3181   	fcall	_FRT_GetMillis
  5791  01C2  0020               	movlb	0	; select bank0
  5792  01C3  0823               	movf	?_FRT_GetMillis+3,w
  5793  01C4  0021               	movlb	1	; select bank1
  5794  01C5  00EE               	movwf	(main@currMilli+3)^(0+128)
  5795  01C6  0020               	movlb	0	; select bank0
  5796  01C7  0822               	movf	?_FRT_GetMillis+2,w
  5797  01C8  0021               	movlb	1	; select bank1
  5798  01C9  00ED               	movwf	(main@currMilli+2)^(0+128)
  5799  01CA  0020               	movlb	0	; select bank0
  5800  01CB  0821               	movf	?_FRT_GetMillis+1,w
  5801  01CC  0021               	movlb	1	; select bank1
  5802  01CD  00EC               	movwf	(main@currMilli+1)^(0+128)
  5803  01CE  0020               	movlb	0	; select bank0
  5804  01CF  0820               	movf	?_FRT_GetMillis,w
  5805  01D0  0021               	movlb	1	; select bank1
  5806  01D1  00EB               	movwf	main@currMilli^(0+128)
  5807  01D2                     l3802:
  5808                           
  5809                           ;JSN_Sensor.c: 150:         if ((currMilli - prevMilli) >= 50) {
  5810  01D2  0866               	movf	main@prevMilli^(0+128),w
  5811  01D3  026B               	subwf	main@currMilli^(0+128),w
  5812  01D4  00E2               	movwf	??_main^(0+128)
  5813  01D5  0867               	movf	(main@prevMilli+1)^(0+128),w
  5814  01D6  3B6C               	subwfb	(main@currMilli+1)^(0+128),w
  5815  01D7  00E3               	movwf	(??_main^(0+128)+1)
  5816  01D8  0868               	movf	(main@prevMilli+2)^(0+128),w
  5817  01D9  3B6D               	subwfb	(main@currMilli+2)^(0+128),w
  5818  01DA  00E4               	movwf	(??_main^(0+128)+2)
  5819  01DB  0869               	movf	(main@prevMilli+3)^(0+128),w
  5820  01DC  3B6E               	subwfb	(main@currMilli+3)^(0+128),w
  5821  01DD  00E5               	movwf	(??_main^(0+128)+3)
  5822  01DE  0865               	movf	(??_main^(0+128)+3),w
  5823  01DF  1D03               	btfss	3,2
  5824  01E0  29ED               	goto	u1320
  5825  01E1  0864               	movf	(??_main^(0+128)+2),w
  5826  01E2  1D03               	btfss	3,2
  5827  01E3  29ED               	goto	u1320
  5828  01E4  0863               	movf	(??_main^(0+128)+1),w
  5829  01E5  1D03               	btfss	3,2
  5830  01E6  29ED               	goto	u1320
  5831  01E7  3032               	movlw	50
  5832  01E8  0262               	subwf	??_main^(0+128),w
  5833  01E9  1C03               	btfss	3,0
  5834  01EA  29EC               	goto	u1321
  5835  01EB  29ED               	goto	u1320
  5836  01EC                     u1321:
  5837  01EC  29BF               	goto	l3800
  5838  01ED                     u1320:
  5839  01ED  2A00               	goto	l3816
  5840  01EE                     l3806:
  5841                           
  5842                           ;JSN_Sensor.c: 154:                     JSN_Sensor_Trig(&Sens1);
  5843  01EE  30DA               	movlw	(low (_Sens1| 0))& (0+255)
  5844  01EF  3187  275A  3181   	fcall	_JSN_Sensor_Trig
  5845  01F2                     l3808:
  5846                           
  5847                           ;JSN_Sensor.c: 155:                     i = 2;
  5848  01F2  3002               	movlw	2
  5849  01F3  0021               	movlb	1	; select bank1
  5850  01F4  00E2               	movwf	??_main^(0+128)
  5851  01F5  0862               	movf	??_main^(0+128),w
  5852  01F6  00EA               	movwf	main@i^(0+128)
  5853                           
  5854                           ;JSN_Sensor.c: 156:                     break;
  5855  01F7  2A11               	goto	l3818
  5856  01F8                     l3810:
  5857                           
  5858                           ;JSN_Sensor.c: 160:                     JSN_Sensor_Trig(&Sens2);
  5859  01F8  30D4               	movlw	(low (_Sens2| 0))& (0+255)
  5860  01F9  3187  275A  3181   	fcall	_JSN_Sensor_Trig
  5861  01FC                     l3812:
  5862                           
  5863                           ;JSN_Sensor.c: 161:                     i = 1;
  5864  01FC  0021               	movlb	1	; select bank1
  5865  01FD  01EA               	clrf	main@i^(0+128)
  5866  01FE  0AEA               	incf	main@i^(0+128),f
  5867                           
  5868                           ;JSN_Sensor.c: 162:                     break;
  5869  01FF  2A11               	goto	l3818
  5870  0200                     l3816:
  5871  0200  0021               	movlb	1	; select bank1
  5872  0201  086A               	movf	main@i^(0+128),w
  5873  0202  00E2               	movwf	??_main^(0+128)
  5874  0203  01E3               	clrf	(??_main^(0+128)+1)
  5875                           
  5876                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5877                           ; Switch size 1, requested type "simple"
  5878                           ; Number of cases is 1, Range of values is 0 to 0
  5879                           ; switch strategies available:
  5880                           ; Name         Instructions Cycles
  5881                           ; simple_byte            4     3 (average)
  5882                           ; direct_byte            8     6 (fixed)
  5883                           ; jumptable            260     6 (fixed)
  5884                           ;	Chosen strategy is simple_byte
  5885  0204  0863               	movf	(??_main+1)^(0+128),w
  5886  0205  3A00               	xorlw	0	; case 0
  5887  0206  1903               	skipnz
  5888  0207  2A09               	goto	l4110
  5889  0208  2A11               	goto	l3818
  5890  0209                     l4110:
  5891                           
  5892                           ; Switch size 1, requested type "simple"
  5893                           ; Number of cases is 2, Range of values is 1 to 2
  5894                           ; switch strategies available:
  5895                           ; Name         Instructions Cycles
  5896                           ; simple_byte            7     4 (average)
  5897                           ; direct_byte           13     9 (fixed)
  5898                           ; jumptable            263     9 (fixed)
  5899                           ;	Chosen strategy is simple_byte
  5900  0209  0862               	movf	??_main^(0+128),w
  5901  020A  3A01               	xorlw	1	; case 1
  5902  020B  1903               	skipnz
  5903  020C  29EE               	goto	l3806
  5904  020D  3A03               	xorlw	3	; case 2
  5905  020E  1903               	skipnz
  5906  020F  29F8               	goto	l3810
  5907  0210  2A11               	goto	l3818
  5908  0211                     l3818:
  5909                           
  5910                           ;JSN_Sensor.c: 166:             if ((Sens1.distance < 500)||(Sens2.distance < 500)) {
  5911  0211  3001               	movlw	1
  5912  0212  025D               	subwf	((_Sens1+1)^(0+128)+2),w
  5913  0213  30F4               	movlw	244
  5914  0214  1903               	skipnz
  5915  0215  025C               	subwf	(_Sens1^(0+128)+2),w
  5916  0216  1C03               	skipc
  5917  0217  2A19               	goto	u1331
  5918  0218  2A1A               	goto	u1330
  5919  0219                     u1331:
  5920  0219  2A23               	goto	l3822
  5921  021A                     u1330:
  5922  021A                     l3820:
  5923  021A  3001               	movlw	1
  5924  021B  0257               	subwf	((_Sens2+1)^(0+128)+2),w
  5925  021C  30F4               	movlw	244
  5926  021D  1903               	skipnz
  5927  021E  0256               	subwf	(_Sens2^(0+128)+2),w
  5928  021F  1803               	skipnc
  5929  0220  2A22               	goto	u1341
  5930  0221  2A23               	goto	u1340
  5931  0222                     u1341:
  5932  0222  2A2B               	goto	l3824
  5933  0223                     u1340:
  5934  0223                     l3822:
  5935                           
  5936                           ;JSN_Sensor.c: 167:                 WritePin(C0, 1);
  5937  0223  0020               	movlb	0	; select bank0
  5938  0224  01A0               	clrf	WritePin@val
  5939  0225  0AA0               	incf	WritePin@val,f
  5940  0226  300C               	movlw	12
  5941  0227  3183  2322  3181   	fcall	_WritePin
  5942                           
  5943                           ;JSN_Sensor.c: 168:             } else {
  5944  022A  2A31               	goto	l3826
  5945  022B                     l3824:
  5946                           
  5947                           ;JSN_Sensor.c: 169:                 WritePin(C0, 0);
  5948  022B  0020               	movlb	0	; select bank0
  5949  022C  01A0               	clrf	WritePin@val
  5950  022D  300C               	movlw	12
  5951  022E  3183  2322  3181   	fcall	_WritePin
  5952  0231                     l3826:
  5953                           
  5954                           ;JSN_Sensor.c: 173:             printf("%u", JSN_Sensor_GetDistance(&Sens1));
  5955  0231  3000               	movlw	low (STR_1| (0+32768))
  5956  0232  0020               	movlb	0	; select bank0
  5957  0233  00EC               	movwf	printf@fmt
  5958  0234  3090               	movlw	high (STR_1| (0+32768))
  5959  0235  00ED               	movwf	printf@fmt+1
  5960  0236  30DA               	movlw	(low (_Sens1| 0))& (0+255)
  5961  0237  318F  277D  3181   	fcall	_JSN_Sensor_GetDistance
  5962  023A  0020               	movlb	0	; select bank0
  5963  023B  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  5964  023C  00EF               	movwf	?_printf+3
  5965  023D  083A               	movf	?_JSN_Sensor_GetDistance,w
  5966  023E  00EE               	movwf	?_printf+2
  5967  023F  318B  23FC  3181   	fcall	_printf
  5968  0242                     l3828:
  5969                           
  5970                           ;JSN_Sensor.c: 174:             printf("%u", JSN_Sensor_GetDistance(&Sens2));
  5971  0242  3000               	movlw	low (STR_1| (0+32768))
  5972  0243  0020               	movlb	0	; select bank0
  5973  0244  00EC               	movwf	printf@fmt
  5974  0245  3090               	movlw	high (STR_1| (0+32768))
  5975  0246  00ED               	movwf	printf@fmt+1
  5976  0247  30D4               	movlw	(low (_Sens2| 0))& (0+255)
  5977  0248  318F  277D  3181   	fcall	_JSN_Sensor_GetDistance
  5978  024B  0020               	movlb	0	; select bank0
  5979  024C  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  5980  024D  00EF               	movwf	?_printf+3
  5981  024E  083A               	movf	?_JSN_Sensor_GetDistance,w
  5982  024F  00EE               	movwf	?_printf+2
  5983  0250  318B  23FC  3181   	fcall	_printf
  5984  0253                     l3830:
  5985                           
  5986                           ;JSN_Sensor.c: 177:             prevMilli = currMilli;
  5987  0253  0021               	movlb	1	; select bank1
  5988  0254  086E               	movf	(main@currMilli+3)^(0+128),w
  5989  0255  00E9               	movwf	(main@prevMilli+3)^(0+128)
  5990  0256  086D               	movf	(main@currMilli+2)^(0+128),w
  5991  0257  00E8               	movwf	(main@prevMilli+2)^(0+128)
  5992  0258  086C               	movf	(main@currMilli+1)^(0+128),w
  5993  0259  00E7               	movwf	(main@prevMilli+1)^(0+128)
  5994  025A  086B               	movf	main@currMilli^(0+128),w
  5995  025B  00E6               	movwf	main@prevMilli^(0+128)
  5996  025C  29BF               	goto	l3800
  5997  025D  3180  2874         	ljmp	start
  5998  025F                     __end_of_main:
  5999                           
  6000                           	psect	text1
  6001  0BFC                     __ptext1:	
  6002 ;; *************** function _printf *****************
  6003 ;; Defined at:
  6004 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\printf.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
  6007 ;;		 -> STR_2(3), STR_1(3), 
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;  ret             2    0        int 
  6010 ;;  ap              1    1[BANK1 ] PTR void [1]
  6011 ;;		 -> ?_printf(2), 
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  2   76[BANK0 ] int 
  6014 ;; Registers used:
  6015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6021 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6022 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6023 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;Total ram usage:        6 bytes
  6026 ;; Hardware stack levels used: 1
  6027 ;; Hardware stack levels required when called: 12
  6028 ;; This function calls:
  6029 ;;		_vfprintf
  6030 ;; This function is called by:
  6031 ;;		_main
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035  0BFC                     _printf:	
  6036                           ;psect for function _printf
  6037                           
  6038  0BFC                     l3690:	
  6039                           ;incstack = 0
  6040                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6041                           
  6042  0BFC  306E               	movlw	(low ((?_printf| 0+2)))& (0+255)
  6043  0BFD  0021               	movlb	1	; select bank1
  6044  0BFE  00E0               	movwf	??_printf^(0+128)
  6045  0BFF  0860               	movf	??_printf^(0+128),w
  6046  0C00  00E1               	movwf	printf@ap^(0+128)
  6047  0C01                     l3692:
  6048  0C01  0020               	movlb	0	; select bank0
  6049  0C02  086D               	movf	printf@fmt+1,w
  6050  0C03  00E5               	movwf	vfprintf@fmt+1
  6051  0C04  086C               	movf	printf@fmt,w
  6052  0C05  00E4               	movwf	vfprintf@fmt
  6053  0C06  30E1               	movlw	(low (printf@ap| 0))& (0+255)
  6054  0C07  0021               	movlb	1	; select bank1
  6055  0C08  00E0               	movwf	??_printf^(0+128)
  6056  0C09  0860               	movf	??_printf^(0+128),w
  6057  0C0A  0020               	movlb	0	; select bank0
  6058  0C0B  00E6               	movwf	vfprintf@ap
  6059  0C0C  3000               	movlw	0
  6060  0C0D  318D  25B4  318B   	fcall	_vfprintf
  6061  0C10                     l1445:
  6062  0C10  0008               	return
  6063  0C11                     __end_of_printf:
  6064                           
  6065                           	psect	text2
  6066  0DB4                     __ptext2:	
  6067 ;; *************** function _vfprintf *****************
  6068 ;; Defined at:
  6069 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;  fp              1    wreg     PTR struct _IO_FILE
  6072 ;;		 -> NULL(0), 
  6073 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
  6074 ;;		 -> STR_2(3), STR_1(3), 
  6075 ;;  ap              1   70[BANK0 ] PTR PTR void 
  6076 ;;		 -> printf@ap(1), 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
  6079 ;;		 -> NULL(0), 
  6080 ;;  cfmt            2   74[BANK0 ] PTR unsigned char 
  6081 ;;		 -> STR_2(3), STR_1(3), 
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  2   68[BANK0 ] int 
  6084 ;; Registers used:
  6085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6091 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6092 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6093 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6094 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6095 ;;Total ram usage:        8 bytes
  6096 ;; Hardware stack levels used: 1
  6097 ;; Hardware stack levels required when called: 11
  6098 ;; This function calls:
  6099 ;;		_vfpfcnvrt
  6100 ;; This function is called by:
  6101 ;;		_printf
  6102 ;; This function uses a non-reentrant model
  6103 ;;
  6104                           
  6105  0DB4                     _vfprintf:	
  6106                           ;psect for function _vfprintf
  6107                           
  6108                           
  6109                           ;incstack = 0
  6110                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6111                           ;vfprintf@fp stored from wreg
  6112  0DB4  0020               	movlb	0	; select bank0
  6113  0DB5  00E9               	movwf	vfprintf@fp
  6114  0DB6                     l3586:
  6115                           
  6116                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6117  0DB6  0865               	movf	vfprintf@fmt+1,w
  6118  0DB7  00EB               	movwf	vfprintf@cfmt+1
  6119  0DB8  0864               	movf	vfprintf@fmt,w
  6120  0DB9  00EA               	movwf	vfprintf@cfmt
  6121  0DBA                     l3588:
  6122                           
  6123                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6124  0DBA  0021               	movlb	1	; select bank1
  6125  0DBB  01A0               	clrf	_nout^(0+128)
  6126  0DBC  01A1               	clrf	(_nout+1)^(0+128)
  6127                           
  6128                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6129  0DBD  2DD2               	goto	l3592
  6130  0DBE                     l3590:
  6131                           
  6132                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6133  0DBE  306A               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6134  0DBF  00E7               	movwf	??_vfprintf
  6135  0DC0  0867               	movf	??_vfprintf,w
  6136  0DC1  00D4               	movwf	vfpfcnvrt@fmt
  6137  0DC2  0866               	movf	vfprintf@ap,w
  6138  0DC3  00E8               	movwf	??_vfprintf+1
  6139  0DC4  0868               	movf	??_vfprintf+1,w
  6140  0DC5  00D5               	movwf	vfpfcnvrt@ap
  6141  0DC6  0869               	movf	vfprintf@fp,w
  6142  0DC7  3182  225F  318D   	fcall	_vfpfcnvrt
  6143  0DCA  0020               	movlb	0	; select bank0
  6144  0DCB  0854               	movf	?_vfpfcnvrt,w
  6145  0DCC  0021               	movlb	1	; select bank1
  6146  0DCD  07A0               	addwf	_nout^(0+128),f
  6147  0DCE  0020               	movlb	0	; select bank0
  6148  0DCF  0855               	movf	?_vfpfcnvrt+1,w
  6149  0DD0  0021               	movlb	1	; select bank1
  6150  0DD1  3DA1               	addwfc	(_nout+1)^(0+128),f
  6151  0DD2                     l3592:
  6152                           
  6153                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6154  0DD2  0020               	movlb	0	; select bank0
  6155  0DD3  086A               	movf	vfprintf@cfmt,w
  6156  0DD4  0084               	movwf	4
  6157  0DD5  086B               	movf	vfprintf@cfmt+1,w
  6158  0DD6  0085               	movwf	5
  6159  0DD7  0012               	moviw fsr0++
  6160  0DD8  1D03               	btfss	3,2
  6161  0DD9  2DDB               	goto	u1221
  6162  0DDA  2DDC               	goto	u1220
  6163  0DDB                     u1221:
  6164  0DDB  2DBE               	goto	l3590
  6165  0DDC                     u1220:
  6166  0DDC                     l3594:
  6167                           
  6168                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6169  0DDC  0021               	movlb	1	; select bank1
  6170  0DDD  0821               	movf	(_nout+1)^(0+128),w
  6171  0DDE  0020               	movlb	0	; select bank0
  6172  0DDF  00E5               	movwf	?_vfprintf+1
  6173  0DE0  0021               	movlb	1	; select bank1
  6174  0DE1  0820               	movf	_nout^(0+128),w
  6175  0DE2  0020               	movlb	0	; select bank0
  6176  0DE3  00E4               	movwf	?_vfprintf
  6177  0DE4                     l1502:
  6178  0DE4  0008               	return
  6179  0DE5                     __end_of_vfprintf:
  6180                           
  6181                           	psect	text3
  6182  025F                     __ptext3:	
  6183 ;; *************** function _vfpfcnvrt *****************
  6184 ;; Defined at:
  6185 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;  fp              1    wreg     PTR struct _IO_FILE
  6188 ;;		 -> NULL(0), 
  6189 ;;  fmt             1   52[BANK0 ] PTR PTR unsigned char 
  6190 ;;		 -> vfprintf@cfmt(2), 
  6191 ;;  ap              1   53[BANK0 ] PTR PTR void 
  6192 ;;		 -> printf@ap(1), 
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  6195 ;;		 -> NULL(0), 
  6196 ;;  llu             8   59[BANK0 ] unsigned long long 
  6197 ;;  ll              8    0        long long 
  6198 ;;  f               4    0        long long 
  6199 ;;  ct              3    0        unsigned char [3]
  6200 ;;  vp              2    0        PTR void 
  6201 ;;  i               2    0        int 
  6202 ;;  done            2    0        int 
  6203 ;;  cp              2    0        PTR unsigned char 
  6204 ;;  c               1    0        unsigned char 
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  2   52[BANK0 ] int 
  6207 ;; Registers used:
  6208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6214 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6216 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6217 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6218 ;;Total ram usage:       16 bytes
  6219 ;; Hardware stack levels used: 1
  6220 ;; Hardware stack levels required when called: 10
  6221 ;; This function calls:
  6222 ;;		_fputc
  6223 ;;		_utoa
  6224 ;; This function is called by:
  6225 ;;		_vfprintf
  6226 ;; This function uses a non-reentrant model
  6227 ;;
  6228                           
  6229  025F                     _vfpfcnvrt:	
  6230                           ;psect for function _vfpfcnvrt
  6231                           
  6232                           
  6233                           ;incstack = 0
  6234                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6235                           ;vfpfcnvrt@fp stored from wreg
  6236  025F  0020               	movlb	0	; select bank0
  6237  0260  00E3               	movwf	vfpfcnvrt@fp
  6238  0261                     l3272:
  6239                           
  6240                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6241  0261  0854               	movf	vfpfcnvrt@fmt,w
  6242  0262  0086               	movwf	6
  6243  0263  0187               	clrf	7
  6244  0264  3F40               	moviw [0]fsr1
  6245  0265  00D6               	movwf	??_vfpfcnvrt
  6246  0266  3F41               	moviw [1]fsr1
  6247  0267  00D7               	movwf	??_vfpfcnvrt+1
  6248  0268  0856               	movf	??_vfpfcnvrt,w
  6249  0269  0084               	movwf	4
  6250  026A  0857               	movf	??_vfpfcnvrt+1,w
  6251  026B  0085               	movwf	5
  6252  026C  0012               	moviw fsr0++
  6253  026D  3A25               	xorlw	37
  6254  026E  1D03               	btfss	3,2
  6255  026F  2A71               	goto	u1071
  6256  0270  2A72               	goto	u1070
  6257  0271                     u1071:
  6258  0271  2AFE               	goto	l3306
  6259  0272                     u1070:
  6260  0272                     l3274:
  6261                           
  6262                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6263  0272  0854               	movf	vfpfcnvrt@fmt,w
  6264  0273  0086               	movwf	6
  6265  0274  0187               	clrf	7
  6266  0275  3001               	movlw	1
  6267  0276  0781               	addwf	1,f
  6268  0277  3141               	addfsr 1,1
  6269  0278  1803               	skipnc
  6270  0279  0A81               	incf	1,f
  6271  027A                     l3276:
  6272                           
  6273                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6274  027A  0021               	movlb	1	; select bank1
  6275  027B  01A2               	clrf	_width^(0+128)
  6276  027C  01A3               	clrf	(_width+1)^(0+128)
  6277  027D  01A6               	clrf	_flags^(0+128)
  6278  027E  01A7               	clrf	(_flags+1)^(0+128)
  6279  027F                     l3278:
  6280                           
  6281                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6282  027F  30FF               	movlw	255
  6283  0280  00A4               	movwf	_prec^(0+128)
  6284  0281  30FF               	movlw	255
  6285  0282  00A5               	movwf	(_prec^(0+128)+1)
  6286  0283                     l3280:
  6287                           
  6288                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  6289  0283  0020               	movlb	0	; select bank0
  6290  0284  0854               	movf	vfpfcnvrt@fmt,w
  6291  0285  0086               	movwf	6
  6292  0286  0187               	clrf	7
  6293  0287  3F40               	moviw [0]fsr1
  6294  0288  00D6               	movwf	??_vfpfcnvrt
  6295  0289  3F41               	moviw [1]fsr1
  6296  028A  00D7               	movwf	??_vfpfcnvrt+1
  6297  028B  0856               	movf	??_vfpfcnvrt,w
  6298  028C  0084               	movwf	4
  6299  028D  0857               	movf	??_vfpfcnvrt+1,w
  6300  028E  0085               	movwf	5
  6301  028F  0012               	moviw fsr0++
  6302  0290  3A75               	xorlw	117
  6303  0291  1D03               	btfss	3,2
  6304  0292  2A94               	goto	u1081
  6305  0293  2A95               	goto	u1080
  6306  0294                     u1081:
  6307  0294  2AC9               	goto	l3290
  6308  0295                     u1080:
  6309  0295                     l3282:
  6310                           
  6311                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  6312  0295  0854               	movf	vfpfcnvrt@fmt,w
  6313  0296  0086               	movwf	6
  6314  0297  0187               	clrf	7
  6315  0298  3001               	movlw	1
  6316  0299  0781               	addwf	1,f
  6317  029A  3141               	addfsr 1,1
  6318  029B  1803               	skipnc
  6319  029C  0A81               	incf	1,f
  6320  029D                     l3284:
  6321                           
  6322                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  6323  029D  0855               	movf	vfpfcnvrt@ap,w
  6324  029E  0086               	movwf	6
  6325  029F  0187               	clrf	7
  6326  02A0  0801               	movf	1,w
  6327  02A1  0084               	movwf	4
  6328  02A2  0185               	clrf	5
  6329  02A3  3002               	movlw	2
  6330  02A4  0781               	addwf	1,f
  6331  02A5  3F00               	moviw [0]fsr0
  6332  02A6  00DB               	movwf	vfpfcnvrt@llu
  6333  02A7  3F01               	moviw [1]fsr0
  6334  02A8  00DC               	movwf	vfpfcnvrt@llu+1
  6335  02A9  01DD               	clrf	vfpfcnvrt@llu+2
  6336  02AA  01DE               	clrf	vfpfcnvrt@llu+3
  6337  02AB  01DF               	clrf	vfpfcnvrt@llu+4
  6338  02AC  01E0               	clrf	vfpfcnvrt@llu+5
  6339  02AD  01E1               	clrf	vfpfcnvrt@llu+6
  6340  02AE  01E2               	clrf	vfpfcnvrt@llu+7
  6341  02AF                     l3286:
  6342                           
  6343                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  6344  02AF  085B               	movf	vfpfcnvrt@llu,w
  6345  02B0  00BC               	movwf	utoa@d
  6346  02B1  085C               	movf	vfpfcnvrt@llu+1,w
  6347  02B2  00BD               	movwf	utoa@d+1
  6348  02B3  085D               	movf	vfpfcnvrt@llu+2,w
  6349  02B4  00BE               	movwf	utoa@d+2
  6350  02B5  085E               	movf	vfpfcnvrt@llu+3,w
  6351  02B6  00BF               	movwf	utoa@d+3
  6352  02B7  085F               	movf	vfpfcnvrt@llu+4,w
  6353  02B8  00C0               	movwf	utoa@d+4
  6354  02B9  0860               	movf	vfpfcnvrt@llu+5,w
  6355  02BA  00C1               	movwf	utoa@d+5
  6356  02BB  0861               	movf	vfpfcnvrt@llu+6,w
  6357  02BC  00C2               	movwf	utoa@d+6
  6358  02BD  0862               	movf	vfpfcnvrt@llu+7,w
  6359  02BE  00C3               	movwf	utoa@d+7
  6360  02BF  0863               	movf	vfpfcnvrt@fp,w
  6361  02C0  3180  208E  3182   	fcall	_utoa
  6362  02C3  0020               	movlb	0	; select bank0
  6363  02C4  083D               	movf	?_utoa+1,w
  6364  02C5  00D5               	movwf	?_vfpfcnvrt+1
  6365  02C6  083C               	movf	?_utoa,w
  6366  02C7  00D4               	movwf	?_vfpfcnvrt
  6367  02C8  2B21               	goto	l1495
  6368  02C9                     l3290:
  6369                           
  6370                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6371  02C9  0854               	movf	vfpfcnvrt@fmt,w
  6372  02CA  0086               	movwf	6
  6373  02CB  0187               	clrf	7
  6374  02CC  3F40               	moviw [0]fsr1
  6375  02CD  00D6               	movwf	??_vfpfcnvrt
  6376  02CE  3F41               	moviw [1]fsr1
  6377  02CF  00D7               	movwf	??_vfpfcnvrt+1
  6378  02D0  0856               	movf	??_vfpfcnvrt,w
  6379  02D1  0084               	movwf	4
  6380  02D2  0857               	movf	??_vfpfcnvrt+1,w
  6381  02D3  0085               	movwf	5
  6382  02D4  0012               	moviw fsr0++
  6383  02D5  3A25               	xorlw	37
  6384  02D6  1D03               	btfss	3,2
  6385  02D7  2AD9               	goto	u1091
  6386  02D8  2ADA               	goto	u1090
  6387  02D9                     u1091:
  6388  02D9  2AF3               	goto	l3300
  6389  02DA                     u1090:
  6390  02DA                     l3292:
  6391                           
  6392                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6393  02DA  0854               	movf	vfpfcnvrt@fmt,w
  6394  02DB  0086               	movwf	6
  6395  02DC  0187               	clrf	7
  6396  02DD  3001               	movlw	1
  6397  02DE  0781               	addwf	1,f
  6398  02DF  3141               	addfsr 1,1
  6399  02E0  1803               	skipnc
  6400  02E1  0A81               	incf	1,f
  6401  02E2                     l3294:
  6402                           
  6403                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6404  02E2  3025               	movlw	37
  6405  02E3  00A3               	movwf	fputc@c
  6406  02E4  3000               	movlw	0
  6407  02E5  00A4               	movwf	fputc@c+1
  6408  02E6  0863               	movf	vfpfcnvrt@fp,w
  6409  02E7  00D6               	movwf	??_vfpfcnvrt
  6410  02E8  0856               	movf	??_vfpfcnvrt,w
  6411  02E9  00A5               	movwf	fputc@fp
  6412  02EA  318F  27BD  3182   	fcall	_fputc
  6413  02ED                     l3296:
  6414                           
  6415                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6416  02ED  3001               	movlw	1
  6417  02EE  0020               	movlb	0	; select bank0
  6418  02EF  00D4               	movwf	?_vfpfcnvrt
  6419  02F0  3000               	movlw	0
  6420  02F1  00D5               	movwf	?_vfpfcnvrt+1
  6421  02F2  2B21               	goto	l1495
  6422  02F3                     l3300:
  6423                           
  6424                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6425  02F3  0854               	movf	vfpfcnvrt@fmt,w
  6426  02F4  0086               	movwf	6
  6427  02F5  0187               	clrf	7
  6428  02F6  3001               	movlw	1
  6429  02F7  0781               	addwf	1,f
  6430  02F8  3141               	addfsr 1,1
  6431  02F9  1803               	skipnc
  6432  02FA  0A81               	incf	1,f
  6433  02FB                     l3302:
  6434                           
  6435                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6436  02FB  01D4               	clrf	?_vfpfcnvrt
  6437  02FC  01D5               	clrf	?_vfpfcnvrt+1
  6438  02FD  2B21               	goto	l1495
  6439  02FE                     l3306:
  6440                           
  6441                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6442  02FE  0854               	movf	vfpfcnvrt@fmt,w
  6443  02FF  0086               	movwf	6
  6444  0300  0187               	clrf	7
  6445  0301  3F40               	moviw [0]fsr1
  6446  0302  00D6               	movwf	??_vfpfcnvrt
  6447  0303  3F41               	moviw [1]fsr1
  6448  0304  00D7               	movwf	??_vfpfcnvrt+1
  6449  0305  0856               	movf	??_vfpfcnvrt,w
  6450  0306  0084               	movwf	4
  6451  0307  0857               	movf	??_vfpfcnvrt+1,w
  6452  0308  0085               	movwf	5
  6453  0309  0800               	movf	0,w	;code access
  6454  030A  00D8               	movwf	??_vfpfcnvrt+2
  6455  030B  01D9               	clrf	??_vfpfcnvrt+3
  6456  030C  0858               	movf	??_vfpfcnvrt+2,w
  6457  030D  00A3               	movwf	fputc@c
  6458  030E  0859               	movf	??_vfpfcnvrt+3,w
  6459  030F  00A4               	movwf	fputc@c+1
  6460  0310  0863               	movf	vfpfcnvrt@fp,w
  6461  0311  00DA               	movwf	??_vfpfcnvrt+4
  6462  0312  085A               	movf	??_vfpfcnvrt+4,w
  6463  0313  00A5               	movwf	fputc@fp
  6464  0314  318F  27BD  3182   	fcall	_fputc
  6465  0317                     l3308:
  6466                           
  6467                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6468  0317  0020               	movlb	0	; select bank0
  6469  0318  0854               	movf	vfpfcnvrt@fmt,w
  6470  0319  0086               	movwf	6
  6471  031A  0187               	clrf	7
  6472  031B  3001               	movlw	1
  6473  031C  0781               	addwf	1,f
  6474  031D  3141               	addfsr 1,1
  6475  031E  1803               	skipnc
  6476  031F  0A81               	incf	1,f
  6477  0320  2AED               	goto	l3296
  6478  0321                     l1495:
  6479  0321  0008               	return
  6480  0322                     __end_of_vfpfcnvrt:
  6481                           
  6482                           	psect	text4
  6483  008E                     __ptext4:	
  6484 ;; *************** function _utoa *****************
  6485 ;; Defined at:
  6486 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  fp              1    wreg     PTR struct _IO_FILE
  6489 ;;		 -> NULL(0), 
  6490 ;;  d               8   28[BANK0 ] unsigned long long 
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;  fp              1   39[BANK0 ] PTR struct _IO_FILE
  6493 ;;		 -> NULL(0), 
  6494 ;;  n               8   42[BANK0 ] unsigned long long 
  6495 ;;  i               2   50[BANK0 ] int 
  6496 ;;  w               2   40[BANK0 ] int 
  6497 ;;  p               2   37[BANK0 ] int 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  2   28[BANK0 ] int 
  6500 ;; Registers used:
  6501 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6507 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6508 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6509 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6510 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6511 ;;Total ram usage:       24 bytes
  6512 ;; Hardware stack levels used: 1
  6513 ;; Hardware stack levels required when called: 9
  6514 ;; This function calls:
  6515 ;;		___lodiv
  6516 ;;		___lomod
  6517 ;;		_pad
  6518 ;; This function is called by:
  6519 ;;		_vfpfcnvrt
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523  008E                     _utoa:	
  6524                           ;psect for function _utoa
  6525                           
  6526                           
  6527                           ;incstack = 0
  6528                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6529                           ;utoa@fp stored from wreg
  6530  008E  0020               	movlb	0	; select bank0
  6531  008F  00C7               	movwf	utoa@fp
  6532  0090                     l2966:
  6533                           
  6534                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  6535  0090  0021               	movlb	1	; select bank1
  6536  0091  1BA5               	btfsc	(_prec+1)^(0+128),7
  6537  0092  2894               	goto	u981
  6538  0093  2895               	goto	u980
  6539  0094                     u981:
  6540  0094  2899               	goto	l1478
  6541  0095                     u980:
  6542  0095                     l2968:
  6543                           
  6544                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  6545  0095  30FD               	movlw	253
  6546  0096  05A6               	andwf	_flags^(0+128),f
  6547  0097  30FF               	movlw	255
  6548  0098  05A7               	andwf	(_flags+1)^(0+128),f
  6549  0099                     l1478:	
  6550                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 623:     }
  6551                           
  6552                           
  6553                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  6554  0099  0825               	movf	(_prec+1)^(0+128),w
  6555  009A  3A80               	xorlw	128
  6556  009B  0020               	movlb	0	; select bank0
  6557  009C  00C4               	movwf	??_utoa
  6558  009D  3080               	movlw	128
  6559  009E  0244               	subwf	??_utoa,w
  6560  009F  1D03               	skipz
  6561  00A0  28A4               	goto	u995
  6562  00A1  3001               	movlw	1
  6563  00A2  0021               	movlb	1	; select bank1
  6564  00A3  0224               	subwf	_prec^(0+128),w
  6565  00A4                     u995:
  6566  00A4  1803               	skipnc
  6567  00A5  28A7               	goto	u991
  6568  00A6  28A8               	goto	u990
  6569  00A7                     u991:
  6570  00A7  28AE               	goto	l2972
  6571  00A8                     u990:
  6572  00A8                     l2970:
  6573  00A8  3001               	movlw	1
  6574  00A9  0020               	movlb	0	; select bank0
  6575  00AA  00C5               	movwf	utoa@p
  6576  00AB  3000               	movlw	0
  6577  00AC  00C6               	movwf	utoa@p+1
  6578  00AD  28B6               	goto	l1482
  6579  00AE                     l2972:
  6580  00AE  0021               	movlb	1	; select bank1
  6581  00AF  0825               	movf	(_prec+1)^(0+128),w
  6582  00B0  0020               	movlb	0	; select bank0
  6583  00B1  00C6               	movwf	utoa@p+1
  6584  00B2  0021               	movlb	1	; select bank1
  6585  00B3  0824               	movf	_prec^(0+128),w
  6586  00B4  0020               	movlb	0	; select bank0
  6587  00B5  00C5               	movwf	utoa@p
  6588  00B6                     l1482:
  6589                           
  6590                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  6591  00B6  0021               	movlb	1	; select bank1
  6592  00B7  0823               	movf	(_width+1)^(0+128),w
  6593  00B8  0020               	movlb	0	; select bank0
  6594  00B9  00C9               	movwf	utoa@w+1
  6595  00BA  0021               	movlb	1	; select bank1
  6596  00BB  0822               	movf	_width^(0+128),w
  6597  00BC  0020               	movlb	0	; select bank0
  6598  00BD  00C8               	movwf	utoa@w
  6599  00BE                     l2974:
  6600                           
  6601                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 628:     n = d;
  6602  00BE  083C               	movf	utoa@d,w
  6603  00BF  00CA               	movwf	utoa@n
  6604  00C0  083D               	movf	utoa@d+1,w
  6605  00C1  00CB               	movwf	utoa@n+1
  6606  00C2  083E               	movf	utoa@d+2,w
  6607  00C3  00CC               	movwf	utoa@n+2
  6608  00C4  083F               	movf	utoa@d+3,w
  6609  00C5  00CD               	movwf	utoa@n+3
  6610  00C6  0840               	movf	utoa@d+4,w
  6611  00C7  00CE               	movwf	utoa@n+4
  6612  00C8  0841               	movf	utoa@d+5,w
  6613  00C9  00CF               	movwf	utoa@n+5
  6614  00CA  0842               	movf	utoa@d+6,w
  6615  00CB  00D0               	movwf	utoa@n+6
  6616  00CC  0843               	movf	utoa@d+7,w
  6617  00CD  00D1               	movwf	utoa@n+7
  6618                           
  6619                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  6620  00CE  301F               	movlw	31
  6621  00CF  00D2               	movwf	utoa@i
  6622  00D0  3000               	movlw	0
  6623  00D1  00D3               	movwf	utoa@i+1
  6624  00D2                     l2976:
  6625                           
  6626                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  6627  00D2  0022               	movlb	2	; select bank2
  6628  00D3  01EB               	clrf	(_dbuf^(0+256)+31)
  6629                           
  6630                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6631  00D4  2936               	goto	l2988
  6632  00D5                     l2978:
  6633                           
  6634                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 632:         --i;
  6635  00D5  30FF               	movlw	255
  6636  00D6  0020               	movlb	0	; select bank0
  6637  00D7  07D2               	addwf	utoa@i,f
  6638  00D8  30FF               	movlw	255
  6639  00D9  3DD3               	addwfc	utoa@i+1,f
  6640  00DA                     l2980:
  6641                           
  6642                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  6643  00DA  300A               	movlw	10
  6644  00DB  00A0               	movwf	___lomod@divisor
  6645  00DC  01A1               	clrf	___lomod@divisor+1
  6646  00DD  01A2               	clrf	___lomod@divisor+2
  6647  00DE  01A3               	clrf	___lomod@divisor+3
  6648  00DF  01A4               	clrf	___lomod@divisor+4
  6649  00E0  01A5               	clrf	___lomod@divisor+5
  6650  00E1  01A6               	clrf	___lomod@divisor+6
  6651  00E2  01A7               	clrf	___lomod@divisor+7
  6652  00E3  084A               	movf	utoa@n,w
  6653  00E4  00A8               	movwf	___lomod@dividend
  6654  00E5  084B               	movf	utoa@n+1,w
  6655  00E6  00A9               	movwf	___lomod@dividend+1
  6656  00E7  084C               	movf	utoa@n+2,w
  6657  00E8  00AA               	movwf	___lomod@dividend+2
  6658  00E9  084D               	movf	utoa@n+3,w
  6659  00EA  00AB               	movwf	___lomod@dividend+3
  6660  00EB  084E               	movf	utoa@n+4,w
  6661  00EC  00AC               	movwf	___lomod@dividend+4
  6662  00ED  084F               	movf	utoa@n+5,w
  6663  00EE  00AD               	movwf	___lomod@dividend+5
  6664  00EF  0850               	movf	utoa@n+6,w
  6665  00F0  00AE               	movwf	___lomod@dividend+6
  6666  00F1  0851               	movf	utoa@n+7,w
  6667  00F2  00AF               	movwf	___lomod@dividend+7
  6668  00F3  3186  2635  3180   	fcall	___lomod
  6669  00F6  0020               	movlb	0	; select bank0
  6670  00F7  0820               	movf	?___lomod,w
  6671  00F8  3E30               	addlw	48
  6672  00F9  00C4               	movwf	??_utoa
  6673  00FA  0852               	movf	utoa@i,w
  6674  00FB  3E4C               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6675  00FC  0086               	movwf	6
  6676  00FD  3001               	movlw	1	; select bank2/3
  6677  00FE  0087               	movwf	7
  6678  00FF  0844               	movf	??_utoa,w
  6679  0100  0081               	movwf	1
  6680  0101                     l2982:
  6681                           
  6682                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 634:         --p;
  6683  0101  30FF               	movlw	255
  6684  0102  07C5               	addwf	utoa@p,f
  6685  0103  30FF               	movlw	255
  6686  0104  3DC6               	addwfc	utoa@p+1,f
  6687  0105                     l2984:
  6688                           
  6689                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 635:         --w;
  6690  0105  30FF               	movlw	255
  6691  0106  07C8               	addwf	utoa@w,f
  6692  0107  30FF               	movlw	255
  6693  0108  3DC9               	addwfc	utoa@w+1,f
  6694  0109                     l2986:
  6695                           
  6696                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  6697  0109  300A               	movlw	10
  6698  010A  00A0               	movwf	___lodiv@divisor
  6699  010B  01A1               	clrf	___lodiv@divisor+1
  6700  010C  01A2               	clrf	___lodiv@divisor+2
  6701  010D  01A3               	clrf	___lodiv@divisor+3
  6702  010E  01A4               	clrf	___lodiv@divisor+4
  6703  010F  01A5               	clrf	___lodiv@divisor+5
  6704  0110  01A6               	clrf	___lodiv@divisor+6
  6705  0111  01A7               	clrf	___lodiv@divisor+7
  6706  0112  084A               	movf	utoa@n,w
  6707  0113  00A8               	movwf	___lodiv@dividend
  6708  0114  084B               	movf	utoa@n+1,w
  6709  0115  00A9               	movwf	___lodiv@dividend+1
  6710  0116  084C               	movf	utoa@n+2,w
  6711  0117  00AA               	movwf	___lodiv@dividend+2
  6712  0118  084D               	movf	utoa@n+3,w
  6713  0119  00AB               	movwf	___lodiv@dividend+3
  6714  011A  084E               	movf	utoa@n+4,w
  6715  011B  00AC               	movwf	___lodiv@dividend+4
  6716  011C  084F               	movf	utoa@n+5,w
  6717  011D  00AD               	movwf	___lodiv@dividend+5
  6718  011E  0850               	movf	utoa@n+6,w
  6719  011F  00AE               	movwf	___lodiv@dividend+6
  6720  0120  0851               	movf	utoa@n+7,w
  6721  0121  00AF               	movwf	___lodiv@dividend+7
  6722  0122  3185  252F  3180   	fcall	___lodiv
  6723  0125  0020               	movlb	0	; select bank0
  6724  0126  0820               	movf	?___lodiv,w
  6725  0127  00CA               	movwf	utoa@n
  6726  0128  0821               	movf	?___lodiv+1,w
  6727  0129  00CB               	movwf	utoa@n+1
  6728  012A  0822               	movf	?___lodiv+2,w
  6729  012B  00CC               	movwf	utoa@n+2
  6730  012C  0823               	movf	?___lodiv+3,w
  6731  012D  00CD               	movwf	utoa@n+3
  6732  012E  0824               	movf	?___lodiv+4,w
  6733  012F  00CE               	movwf	utoa@n+4
  6734  0130  0825               	movf	?___lodiv+5,w
  6735  0131  00CF               	movwf	utoa@n+5
  6736  0132  0826               	movf	?___lodiv+6,w
  6737  0133  00D0               	movwf	utoa@n+6
  6738  0134  0827               	movf	?___lodiv+7,w
  6739  0135  00D1               	movwf	utoa@n+7
  6740  0136                     l2988:
  6741                           
  6742                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6743  0136  0020               	movlb	0	; select bank0
  6744  0137  0852               	movf	utoa@i,w
  6745  0138  0453               	iorwf	utoa@i+1,w
  6746  0139  1903               	btfsc	3,2
  6747  013A  293C               	goto	u1001
  6748  013B  293D               	goto	u1000
  6749  013C                     u1001:
  6750  013C  2969               	goto	l2998
  6751  013D                     u1000:
  6752  013D                     l2990:
  6753  013D  084A               	movf	utoa@n,w
  6754  013E  044B               	iorwf	utoa@n+1,w
  6755  013F  044C               	iorwf	utoa@n+2,w
  6756  0140  044D               	iorwf	utoa@n+3,w
  6757  0141  044E               	iorwf	utoa@n+4,w
  6758  0142  044F               	iorwf	utoa@n+5,w
  6759  0143  0450               	iorwf	utoa@n+6,w
  6760  0144  0451               	iorwf	utoa@n+7,w
  6761  0145  1D03               	skipz
  6762  0146  2948               	goto	u1011
  6763  0147  2949               	goto	u1010
  6764  0148                     u1011:
  6765  0148  28D5               	goto	l2978
  6766  0149                     u1010:
  6767  0149                     l2992:
  6768  0149  0846               	movf	utoa@p+1,w
  6769  014A  3A80               	xorlw	128
  6770  014B  00C4               	movwf	??_utoa
  6771  014C  3080               	movlw	128
  6772  014D  0244               	subwf	??_utoa,w
  6773  014E  1D03               	skipz
  6774  014F  2952               	goto	u1025
  6775  0150  3001               	movlw	1
  6776  0151  0245               	subwf	utoa@p,w
  6777  0152                     u1025:
  6778  0152  1803               	skipnc
  6779  0153  2955               	goto	u1021
  6780  0154  2956               	goto	u1020
  6781  0155                     u1021:
  6782  0155  28D5               	goto	l2978
  6783  0156                     u1020:
  6784  0156                     l2994:
  6785  0156  0020               	movlb	0	; select bank0
  6786  0157  0849               	movf	utoa@w+1,w
  6787  0158  3A80               	xorlw	128
  6788  0159  00C4               	movwf	??_utoa
  6789  015A  3080               	movlw	128
  6790  015B  0244               	subwf	??_utoa,w
  6791  015C  1D03               	skipz
  6792  015D  2960               	goto	u1035
  6793  015E  3001               	movlw	1
  6794  015F  0248               	subwf	utoa@w,w
  6795  0160                     u1035:
  6796  0160  1C03               	skipc
  6797  0161  2963               	goto	u1031
  6798  0162  2964               	goto	u1030
  6799  0163                     u1031:
  6800  0163  2969               	goto	l2998
  6801  0164                     u1030:
  6802  0164                     l2996:
  6803  0164  0021               	movlb	1	; select bank1
  6804  0165  18A6               	btfsc	_flags^(0+128),1
  6805  0166  2968               	goto	u1041
  6806  0167  2969               	goto	u1040
  6807  0168                     u1041:
  6808  0168  28D5               	goto	l2978
  6809  0169                     u1040:
  6810  0169                     l2998:
  6811                           
  6812                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  6813  0169  0020               	movlb	0	; select bank0
  6814  016A  0852               	movf	utoa@i,w
  6815  016B  3E4C               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6816  016C  00C4               	movwf	??_utoa
  6817  016D  0844               	movf	??_utoa,w
  6818  016E  00B3               	movwf	pad@buf
  6819  016F  0849               	movf	utoa@w+1,w
  6820  0170  00B5               	movwf	pad@p+1
  6821  0171  0848               	movf	utoa@w,w
  6822  0172  00B4               	movwf	pad@p
  6823  0173  0847               	movf	utoa@fp,w
  6824  0174  3187  2701  3180   	fcall	_pad
  6825  0177  0020               	movlb	0	; select bank0
  6826  0178  0834               	movf	?_pad+1,w
  6827  0179  00BD               	movwf	?_utoa+1
  6828  017A  0833               	movf	?_pad,w
  6829  017B  00BC               	movwf	?_utoa
  6830  017C                     l1490:
  6831  017C  0008               	return
  6832  017D                     __end_of_utoa:
  6833                           
  6834                           	psect	text5
  6835  0701                     __ptext5:	
  6836 ;; *************** function _pad *****************
  6837 ;; Defined at:
  6838 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;  fp              1    wreg     PTR struct _IO_FILE
  6841 ;;		 -> NULL(0), 
  6842 ;;  buf             1   19[BANK0 ] PTR unsigned char 
  6843 ;;		 -> dbuf(32), 
  6844 ;;  p               2   20[BANK0 ] int 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  6847 ;;		 -> NULL(0), 
  6848 ;;  w               2   25[BANK0 ] int 
  6849 ;;  i               2   23[BANK0 ] int 
  6850 ;; Return value:  Size  Location     Type
  6851 ;;                  2   19[BANK0 ] int 
  6852 ;; Registers used:
  6853 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6854 ;; Tracked objects:
  6855 ;;		On entry : 0/0
  6856 ;;		On exit  : 0/0
  6857 ;;		Unchanged: 0/0
  6858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6859 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6860 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6861 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6862 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6863 ;;Total ram usage:        9 bytes
  6864 ;; Hardware stack levels used: 1
  6865 ;; Hardware stack levels required when called: 8
  6866 ;; This function calls:
  6867 ;;		_fputc
  6868 ;;		_fputs
  6869 ;;		_strlen
  6870 ;; This function is called by:
  6871 ;;		_utoa
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875  0701                     _pad:	
  6876                           ;psect for function _pad
  6877                           
  6878                           
  6879                           ;incstack = 0
  6880                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6881                           ;pad@fp stored from wreg
  6882  0701  0020               	movlb	0	; select bank0
  6883  0702  00BB               	movwf	pad@fp
  6884  0703                     l2926:
  6885                           
  6886                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6887  0703  0021               	movlb	1	; select bank1
  6888  0704  1C26               	btfss	_flags^(0+128),0
  6889  0705  2F07               	goto	u941
  6890  0706  2F08               	goto	u940
  6891  0707                     u941:
  6892  0707  2F11               	goto	l2930
  6893  0708                     u940:
  6894  0708                     l2928:
  6895                           
  6896                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6897  0708  0020               	movlb	0	; select bank0
  6898  0709  083B               	movf	pad@fp,w
  6899  070A  00B6               	movwf	??_pad
  6900  070B  0836               	movf	??_pad,w
  6901  070C  00AB               	movwf	fputs@fp
  6902  070D  0833               	movf	pad@buf,w
  6903  070E  318D  255E  3187   	fcall	_fputs
  6904  0711                     l2930:
  6905                           
  6906                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6907  0711  0020               	movlb	0	; select bank0
  6908  0712  1BB5               	btfsc	pad@p+1,7
  6909  0713  2F15               	goto	u951
  6910  0714  2F16               	goto	u950
  6911  0715                     u951:
  6912  0715  2F1B               	goto	l2934
  6913  0716                     u950:
  6914  0716                     l2932:
  6915  0716  0835               	movf	pad@p+1,w
  6916  0717  00BA               	movwf	pad@w+1
  6917  0718  0834               	movf	pad@p,w
  6918  0719  00B9               	movwf	pad@w
  6919  071A  2F1D               	goto	l1470
  6920  071B                     l2934:
  6921  071B  01B9               	clrf	pad@w
  6922  071C  01BA               	clrf	pad@w+1
  6923  071D                     l1470:
  6924                           
  6925                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6926  071D  01B7               	clrf	pad@i
  6927  071E  01B8               	clrf	pad@i+1
  6928                           
  6929                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6930  071F  2F31               	goto	l2940
  6931  0720                     l2936:
  6932                           
  6933                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6934  0720  3020               	movlw	32
  6935  0721  0020               	movlb	0	; select bank0
  6936  0722  00A3               	movwf	fputc@c
  6937  0723  3000               	movlw	0
  6938  0724  00A4               	movwf	fputc@c+1
  6939  0725  083B               	movf	pad@fp,w
  6940  0726  00B6               	movwf	??_pad
  6941  0727  0836               	movf	??_pad,w
  6942  0728  00A5               	movwf	fputc@fp
  6943  0729  318F  27BD  3187   	fcall	_fputc
  6944  072C                     l2938:
  6945                           
  6946                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6947  072C  3001               	movlw	1
  6948  072D  0020               	movlb	0	; select bank0
  6949  072E  07B7               	addwf	pad@i,f
  6950  072F  3000               	movlw	0
  6951  0730  3DB8               	addwfc	pad@i+1,f
  6952  0731                     l2940:
  6953                           
  6954                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6955  0731  0838               	movf	pad@i+1,w
  6956  0732  3A80               	xorlw	128
  6957  0733  00B6               	movwf	??_pad
  6958  0734  083A               	movf	pad@w+1,w
  6959  0735  3A80               	xorlw	128
  6960  0736  0236               	subwf	??_pad,w
  6961  0737  1D03               	skipz
  6962  0738  2F3B               	goto	u965
  6963  0739  0839               	movf	pad@w,w
  6964  073A  0237               	subwf	pad@i,w
  6965  073B                     u965:
  6966  073B  1C03               	skipc
  6967  073C  2F3E               	goto	u961
  6968  073D  2F3F               	goto	u960
  6969  073E                     u961:
  6970  073E  2F20               	goto	l2936
  6971  073F                     u960:
  6972  073F                     l1473:
  6973                           
  6974                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6975  073F  0021               	movlb	1	; select bank1
  6976  0740  1826               	btfsc	_flags^(0+128),0
  6977  0741  2F43               	goto	u971
  6978  0742  2F44               	goto	u970
  6979  0743                     u971:
  6980  0743  2F4D               	goto	l1474
  6981  0744                     u970:
  6982  0744                     l2942:
  6983                           
  6984                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6985  0744  0020               	movlb	0	; select bank0
  6986  0745  083B               	movf	pad@fp,w
  6987  0746  00B6               	movwf	??_pad
  6988  0747  0836               	movf	??_pad,w
  6989  0748  00AB               	movwf	fputs@fp
  6990  0749  0833               	movf	pad@buf,w
  6991  074A  318D  255E  3187   	fcall	_fputs
  6992  074D                     l1474:	
  6993                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 92:     }
  6994                           
  6995                           
  6996                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6997  074D  0020               	movlb	0	; select bank0
  6998  074E  0833               	movf	pad@buf,w
  6999  074F  318C  24E6  3187   	fcall	_strlen
  7000  0752  0020               	movlb	0	; select bank0
  7001  0753  0839               	movf	pad@w,w
  7002  0754  0720               	addwf	?_strlen,w
  7003  0755  00B3               	movwf	?_pad
  7004  0756  083A               	movf	pad@w+1,w
  7005  0757  3D21               	addwfc	?_strlen+1,w
  7006  0758  00B4               	movwf	?_pad+1
  7007  0759                     l1475:
  7008  0759  0008               	return
  7009  075A                     __end_of_pad:
  7010                           
  7011                           	psect	text6
  7012  0CE6                     __ptext6:	
  7013 ;; *************** function _strlen *****************
  7014 ;; Defined at:
  7015 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;  s               1    wreg     PTR const unsigned char 
  7018 ;;		 -> dbuf(32), 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  7021 ;;		 -> dbuf(32), 
  7022 ;;  a               1    3[BANK0 ] PTR const unsigned char 
  7023 ;;		 -> dbuf(32), 
  7024 ;; Return value:  Size  Location     Type
  7025 ;;                  2    0[BANK0 ] unsigned int 
  7026 ;; Registers used:
  7027 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7028 ;; Tracked objects:
  7029 ;;		On entry : 0/0
  7030 ;;		On exit  : 0/0
  7031 ;;		Unchanged: 0/0
  7032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7033 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7034 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7035 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7036 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7037 ;;Total ram usage:        5 bytes
  7038 ;; Hardware stack levels used: 1
  7039 ;; Hardware stack levels required when called: 4
  7040 ;; This function calls:
  7041 ;;		Nothing
  7042 ;; This function is called by:
  7043 ;;		_pad
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047  0CE6                     _strlen:	
  7048                           ;psect for function _strlen
  7049                           
  7050                           
  7051                           ;incstack = 0
  7052                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  7053                           ;strlen@s stored from wreg
  7054  0CE6  0020               	movlb	0	; select bank0
  7055  0CE7  00A4               	movwf	strlen@s
  7056  0CE8                     l2878:
  7057  0CE8  0824               	movf	strlen@s,w
  7058  0CE9  00A2               	movwf	??_strlen
  7059  0CEA  0822               	movf	??_strlen,w
  7060  0CEB  00A3               	movwf	strlen@a
  7061  0CEC  2CF1               	goto	l2882
  7062  0CED                     l2880:
  7063  0CED  3001               	movlw	1
  7064  0CEE  00A2               	movwf	??_strlen
  7065  0CEF  0822               	movf	??_strlen,w
  7066  0CF0  07A4               	addwf	strlen@s,f
  7067  0CF1                     l2882:
  7068  0CF1  0824               	movf	strlen@s,w
  7069  0CF2  0086               	movwf	6
  7070  0CF3  3001               	movlw	1	; select bank2/3
  7071  0CF4  0087               	movwf	7
  7072  0CF5  0801               	movf	1,w
  7073  0CF6  1D03               	btfss	3,2
  7074  0CF7  2CF9               	goto	u841
  7075  0CF8  2CFA               	goto	u840
  7076  0CF9                     u841:
  7077  0CF9  2CED               	goto	l2880
  7078  0CFA                     u840:
  7079  0CFA                     l2884:
  7080  0CFA  0823               	movf	strlen@a,w
  7081  0CFB  0224               	subwf	strlen@s,w
  7082  0CFC  00A0               	movwf	?_strlen
  7083  0CFD  01A1               	clrf	?_strlen+1
  7084  0CFE  1BA0               	btfsc	?_strlen,7
  7085  0CFF  03A1               	decf	?_strlen+1,f
  7086  0D00                     l1528:
  7087  0D00  0008               	return
  7088  0D01                     __end_of_strlen:
  7089                           
  7090                           	psect	text7
  7091  0D5E                     __ptext7:	
  7092 ;; *************** function _fputs *****************
  7093 ;; Defined at:
  7094 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  7095 ;; Parameters:    Size  Location     Type
  7096 ;;  s               1    wreg     PTR const unsigned char 
  7097 ;;		 -> dbuf(32), 
  7098 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  7099 ;;		 -> NULL(0), 
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;  s               1   18[BANK0 ] PTR const unsigned char 
  7102 ;;		 -> dbuf(32), 
  7103 ;;  i               2   16[BANK0 ] int 
  7104 ;;  c               1   15[BANK0 ] unsigned char 
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  2   11[BANK0 ] int 
  7107 ;; Registers used:
  7108 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7109 ;; Tracked objects:
  7110 ;;		On entry : 0/0
  7111 ;;		On exit  : 0/0
  7112 ;;		Unchanged: 0/0
  7113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7114 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7115 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7116 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7117 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7118 ;;Total ram usage:        8 bytes
  7119 ;; Hardware stack levels used: 1
  7120 ;; Hardware stack levels required when called: 7
  7121 ;; This function calls:
  7122 ;;		_fputc
  7123 ;; This function is called by:
  7124 ;;		_pad
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128  0D5E                     _fputs:	
  7129                           ;psect for function _fputs
  7130                           
  7131                           
  7132                           ;incstack = 0
  7133                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7134                           ;fputs@s stored from wreg
  7135  0D5E  0020               	movlb	0	; select bank0
  7136  0D5F  00B2               	movwf	fputs@s
  7137  0D60                     l2870:
  7138  0D60  01B0               	clrf	fputs@i
  7139  0D61  01B1               	clrf	fputs@i+1
  7140  0D62  2D76               	goto	l2876
  7141  0D63                     l2872:
  7142  0D63  082F               	movf	fputs@c,w
  7143  0D64  00AC               	movwf	??_fputs
  7144  0D65  01AD               	clrf	??_fputs+1
  7145  0D66  082C               	movf	??_fputs,w
  7146  0D67  00A3               	movwf	fputc@c
  7147  0D68  082D               	movf	??_fputs+1,w
  7148  0D69  00A4               	movwf	fputc@c+1
  7149  0D6A  082B               	movf	fputs@fp,w
  7150  0D6B  00AE               	movwf	??_fputs+2
  7151  0D6C  082E               	movf	??_fputs+2,w
  7152  0D6D  00A5               	movwf	fputc@fp
  7153  0D6E  318F  27BD  318D   	fcall	_fputc
  7154  0D71                     l2874:
  7155  0D71  3001               	movlw	1
  7156  0D72  0020               	movlb	0	; select bank0
  7157  0D73  07B0               	addwf	fputs@i,f
  7158  0D74  3000               	movlw	0
  7159  0D75  3DB1               	addwfc	fputs@i+1,f
  7160  0D76                     l2876:
  7161  0D76  0830               	movf	fputs@i,w
  7162  0D77  0732               	addwf	fputs@s,w
  7163  0D78  00AC               	movwf	??_fputs
  7164  0D79  082C               	movf	??_fputs,w
  7165  0D7A  0086               	movwf	6
  7166  0D7B  3001               	movlw	1	; select bank2/3
  7167  0D7C  0087               	movwf	7
  7168  0D7D  0801               	movf	1,w
  7169  0D7E  00AD               	movwf	??_fputs+1
  7170  0D7F  082D               	movf	??_fputs+1,w
  7171  0D80  00AF               	movwf	fputs@c
  7172  0D81  082F               	movf	fputs@c,w
  7173  0D82  1D03               	btfss	3,2
  7174  0D83  2D85               	goto	u831
  7175  0D84  2D86               	goto	u830
  7176  0D85                     u831:
  7177  0D85  2D63               	goto	l2872
  7178  0D86                     u830:
  7179  0D86                     l1522:
  7180  0D86  0008               	return
  7181  0D87                     __end_of_fputs:
  7182                           
  7183                           	psect	text8
  7184  0FBD                     __ptext8:	
  7185 ;; *************** function _fputc *****************
  7186 ;; Defined at:
  7187 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;  c               2    3[BANK0 ] int 
  7190 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
  7191 ;;		 -> NULL(0), 
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;		None
  7194 ;; Return value:  Size  Location     Type
  7195 ;;                  2    3[BANK0 ] int 
  7196 ;; Registers used:
  7197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7203 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7205 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7206 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7207 ;;Total ram usage:        8 bytes
  7208 ;; Hardware stack levels used: 1
  7209 ;; Hardware stack levels required when called: 6
  7210 ;; This function calls:
  7211 ;;		_putch
  7212 ;; This function is called by:
  7213 ;;		_pad
  7214 ;;		_vfpfcnvrt
  7215 ;;		_fputs
  7216 ;; This function uses a non-reentrant model
  7217 ;;
  7218                           
  7219  0FBD                     _fputc:	
  7220                           ;psect for function _fputc
  7221                           
  7222  0FBD                     l2856:	
  7223                           ;incstack = 0
  7224                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7225                           
  7226  0FBD  0020               	movlb	0	; select bank0
  7227  0FBE  0825               	movf	fputc@fp,w
  7228  0FBF  1903               	btfsc	3,2
  7229  0FC0  2FC2               	goto	u791
  7230  0FC1  2FC3               	goto	u790
  7231  0FC2                     u791:
  7232  0FC2  2FC8               	goto	l2860
  7233  0FC3                     u790:
  7234  0FC3                     l2858:
  7235  0FC3  0825               	movf	fputc@fp,w
  7236  0FC4  1D03               	btfss	3,2
  7237  0FC5  2FC7               	goto	u801
  7238  0FC6  2FC8               	goto	u800
  7239  0FC7                     u801:
  7240  0FC7  2FCD               	goto	l2862
  7241  0FC8                     u800:
  7242  0FC8                     l2860:
  7243  0FC8  0823               	movf	fputc@c,w
  7244  0FC9  318B  2336  318F   	fcall	_putch
  7245  0FCC  2FFF               	goto	l1514
  7246  0FCD                     l2862:
  7247  0FCD  0825               	movf	fputc@fp,w
  7248  0FCE  3E08               	addlw	8
  7249  0FCF  0086               	movwf	6
  7250  0FD0  0187               	clrf	7
  7251  0FD1  0016               	moviw fsr1++
  7252  0FD2  0401               	iorwf	1,w
  7253  0FD3  1903               	btfsc	3,2
  7254  0FD4  2FD6               	goto	u811
  7255  0FD5  2FD7               	goto	u810
  7256  0FD6                     u811:
  7257  0FD6  2FF5               	goto	l2866
  7258  0FD7                     u810:
  7259  0FD7                     l2864:
  7260  0FD7  0825               	movf	fputc@fp,w
  7261  0FD8  3E08               	addlw	8
  7262  0FD9  0086               	movwf	6
  7263  0FDA  0187               	clrf	7
  7264  0FDB  3F40               	moviw [0]fsr1
  7265  0FDC  00A6               	movwf	??_fputc
  7266  0FDD  3F41               	moviw [1]fsr1
  7267  0FDE  00A7               	movwf	??_fputc+1
  7268  0FDF  0825               	movf	fputc@fp,w
  7269  0FE0  3E02               	addlw	2
  7270  0FE1  0086               	movwf	6
  7271  0FE2  0187               	clrf	7
  7272  0FE3  3F40               	moviw [0]fsr1
  7273  0FE4  00A8               	movwf	??_fputc+2
  7274  0FE5  3F41               	moviw [1]fsr1
  7275  0FE6  00A9               	movwf	??_fputc+3
  7276  0FE7  0829               	movf	??_fputc+3,w
  7277  0FE8  3A80               	xorlw	128
  7278  0FE9  00AA               	movwf	??_fputc+4
  7279  0FEA  0827               	movf	??_fputc+1,w
  7280  0FEB  3A80               	xorlw	128
  7281  0FEC  022A               	subwf	??_fputc+4,w
  7282  0FED  1D03               	skipz
  7283  0FEE  2FF1               	goto	u825
  7284  0FEF  0826               	movf	??_fputc,w
  7285  0FF0  0228               	subwf	??_fputc+2,w
  7286  0FF1                     u825:
  7287  0FF1  1803               	skipnc
  7288  0FF2  2FF4               	goto	u821
  7289  0FF3  2FF5               	goto	u820
  7290  0FF4                     u821:
  7291  0FF4  2FFF               	goto	l1514
  7292  0FF5                     u820:
  7293  0FF5                     l2866:
  7294  0FF5  0020               	movlb	0	; select bank0
  7295  0FF6  0825               	movf	fputc@fp,w
  7296  0FF7  3E02               	addlw	2
  7297  0FF8  0086               	movwf	6
  7298  0FF9  0187               	clrf	7
  7299  0FFA  3001               	movlw	1
  7300  0FFB  0781               	addwf	1,f
  7301  0FFC  3141               	addfsr 1,1
  7302  0FFD  1803               	skipnc
  7303  0FFE  0A81               	incf	1,f
  7304  0FFF                     l1514:
  7305  0FFF  0008               	return
  7306  1000                     __end_of_fputc:
  7307                           
  7308                           	psect	text9
  7309  0B36                     __ptext9:	
  7310 ;; *************** function _putch *****************
  7311 ;; Defined at:
  7312 ;;		line 174 in file "eusart.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  txData          1    wreg     unsigned char 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  txData          1    2[BANK0 ] unsigned char 
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  1    wreg      void 
  7319 ;; Registers used:
  7320 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7327 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7329 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7330 ;;Total ram usage:        1 bytes
  7331 ;; Hardware stack levels used: 1
  7332 ;; Hardware stack levels required when called: 5
  7333 ;; This function calls:
  7334 ;;		_EUSART_Write
  7335 ;; This function is called by:
  7336 ;;		_fputc
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340  0B36                     _putch:	
  7341                           ;psect for function _putch
  7342                           
  7343                           
  7344                           ;incstack = 0
  7345                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7346                           ;putch@txData stored from wreg
  7347  0B36  0020               	movlb	0	; select bank0
  7348  0B37  00A2               	movwf	putch@txData
  7349  0B38                     l2854:
  7350                           
  7351                           ;eusart.c: 174: void putch(char txData);eusart.c: 175: {;eusart.c: 176:     EUSART_Write
      +                          (txData);
  7352  0B38  0822               	movf	putch@txData,w
  7353  0B39  318D  2587  318B   	fcall	_EUSART_Write
  7354  0B3C                     l666:
  7355  0B3C  0008               	return
  7356  0B3D                     __end_of_putch:
  7357                           
  7358                           	psect	text10
  7359  0D87                     __ptext10:	
  7360 ;; *************** function _EUSART_Write *****************
  7361 ;; Defined at:
  7362 ;;		line 142 in file "eusart.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  txData          1    wreg     unsigned char 
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;  txData          1    1[BANK0 ] unsigned char 
  7367 ;; Return value:  Size  Location     Type
  7368 ;;                  1    wreg      void 
  7369 ;; Registers used:
  7370 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7371 ;; Tracked objects:
  7372 ;;		On entry : 0/0
  7373 ;;		On exit  : 0/0
  7374 ;;		Unchanged: 0/0
  7375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7377 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7378 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7379 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7380 ;;Total ram usage:        2 bytes
  7381 ;; Hardware stack levels used: 1
  7382 ;; Hardware stack levels required when called: 4
  7383 ;; This function calls:
  7384 ;;		Nothing
  7385 ;; This function is called by:
  7386 ;;		_putch
  7387 ;; This function uses a non-reentrant model
  7388 ;;
  7389                           
  7390  0D87                     _EUSART_Write:	
  7391                           ;psect for function _EUSART_Write
  7392                           
  7393                           
  7394                           ;incstack = 0
  7395                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  7396                           ;EUSART_Write@txData stored from wreg
  7397  0D87  0020               	movlb	0	; select bank0
  7398  0D88  00A1               	movwf	EUSART_Write@txData
  7399  0D89                     l2836:
  7400  0D89                     l2838:	
  7401                           ;eusart.c: 142: void EUSART_Write(uint8_t txData);eusart.c: 143: {;eusart.c: 144:     wh
      +                          ile(0 == eusartTxBufferRemaining)
  7402                           
  7403                           
  7404                           ;eusart.c: 144:     while(0 == eusartTxBufferRemaining)
  7405  0D89  0021               	movlb	1	; select bank1
  7406  0D8A  084C               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
  7407  0D8B  1903               	btfsc	3,2
  7408  0D8C  2D8E               	goto	u761
  7409  0D8D  2D8F               	goto	u760
  7410  0D8E                     u761:
  7411  0D8E  2D89               	goto	l2838
  7412  0D8F                     u760:
  7413  0D8F                     l656:
  7414                           
  7415                           ;eusart.c: 148:     if(0 == PIE1bits.TXIE)
  7416  0D8F  1A11               	btfsc	17,4	;volatile
  7417  0D90  2D92               	goto	u771
  7418  0D91  2D93               	goto	u770
  7419  0D92                     u771:
  7420  0D92  2D98               	goto	l657
  7421  0D93                     u770:
  7422  0D93                     l2840:
  7423                           
  7424                           ;eusart.c: 149:     {;eusart.c: 150:         TX1REG = txData;
  7425  0D93  0020               	movlb	0	; select bank0
  7426  0D94  0821               	movf	EUSART_Write@txData,w
  7427  0D95  0023               	movlb	3	; select bank3
  7428  0D96  009A               	movwf	26	;volatile
  7429                           
  7430                           ;eusart.c: 151:     }
  7431  0D97  2DB1               	goto	l2852
  7432  0D98                     l657:	
  7433                           ;eusart.c: 152:     else
  7434                           
  7435                           
  7436                           ;eusart.c: 153:     {;eusart.c: 154:         PIE1bits.TXIE = 0;
  7437  0D98  1211               	bcf	17,4	;volatile
  7438  0D99                     l2842:
  7439                           
  7440                           ;eusart.c: 155:         eusartTxBuffer[eusartTxHead++] = txData;
  7441  0D99  0020               	movlb	0	; select bank0
  7442  0D9A  0821               	movf	EUSART_Write@txData,w
  7443  0D9B  00A0               	movwf	??_EUSART_Write
  7444  0D9C  087D               	movf	_eusartTxHead,w
  7445  0D9D  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
  7446  0D9E  0086               	movwf	6
  7447  0D9F  3001               	movlw	1	; select bank2/3
  7448  0DA0  0087               	movwf	7
  7449  0DA1  0820               	movf	??_EUSART_Write,w
  7450  0DA2  0081               	movwf	1
  7451  0DA3                     l2844:
  7452  0DA3  3001               	movlw	1
  7453  0DA4  00A0               	movwf	??_EUSART_Write
  7454  0DA5  0820               	movf	??_EUSART_Write,w
  7455  0DA6  07FD               	addwf	_eusartTxHead,f	;volatile
  7456  0DA7                     l2846:
  7457                           
  7458                           ;eusart.c: 156:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  7459  0DA7  3008               	movlw	8
  7460  0DA8  027D               	subwf	_eusartTxHead,w	;volatile
  7461  0DA9  1C03               	skipc
  7462  0DAA  2DAC               	goto	u781
  7463  0DAB  2DAD               	goto	u780
  7464  0DAC                     u781:
  7465  0DAC  2DAE               	goto	l2850
  7466  0DAD                     u780:
  7467  0DAD                     l2848:
  7468                           
  7469                           ;eusart.c: 157:         {;eusart.c: 158:             eusartTxHead = 0;
  7470  0DAD  01FD               	clrf	_eusartTxHead	;volatile
  7471  0DAE                     l2850:
  7472                           
  7473                           ;eusart.c: 160:         eusartTxBufferRemaining--;
  7474  0DAE  3001               	movlw	1
  7475  0DAF  0021               	movlb	1	; select bank1
  7476  0DB0  02CC               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  7477  0DB1                     l2852:
  7478                           
  7479                           ;eusart.c: 162:     PIE1bits.TXIE = 1;
  7480  0DB1  0021               	movlb	1	; select bank1
  7481  0DB2  1611               	bsf	17,4	;volatile
  7482  0DB3                     l660:
  7483  0DB3  0008               	return
  7484  0DB4                     __end_of_EUSART_Write:
  7485                           
  7486                           	psect	text11
  7487  0635                     __ptext11:	
  7488 ;; *************** function ___lomod *****************
  7489 ;; Defined at:
  7490 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lomod.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7493 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;  counter         1   17[BANK0 ] unsigned char 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  8    0[BANK0 ] unsigned long long 
  7498 ;; Registers used:
  7499 ;;		wreg, status,2, status,0
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7505 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7506 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7507 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7508 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7509 ;;Total ram usage:       18 bytes
  7510 ;; Hardware stack levels used: 1
  7511 ;; Hardware stack levels required when called: 4
  7512 ;; This function calls:
  7513 ;;		Nothing
  7514 ;; This function is called by:
  7515 ;;		_utoa
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           
  7519  0635                     ___lomod:	
  7520                           ;psect for function ___lomod
  7521                           
  7522  0635                     l2910:	
  7523                           ;incstack = 0
  7524                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7525                           
  7526  0635  0020               	movlb	0	; select bank0
  7527  0636  0820               	movf	___lomod@divisor,w
  7528  0637  0421               	iorwf	___lomod@divisor+1,w
  7529  0638  0422               	iorwf	___lomod@divisor+2,w
  7530  0639  0423               	iorwf	___lomod@divisor+3,w
  7531  063A  0424               	iorwf	___lomod@divisor+4,w
  7532  063B  0425               	iorwf	___lomod@divisor+5,w
  7533  063C  0426               	iorwf	___lomod@divisor+6,w
  7534  063D  0427               	iorwf	___lomod@divisor+7,w
  7535  063E  1903               	skipnz
  7536  063F  2E41               	goto	u901
  7537  0640  2E42               	goto	u900
  7538  0641                     u901:
  7539  0641  2E95               	goto	l1225
  7540  0642                     u900:
  7541  0642                     l2912:
  7542  0642  01B1               	clrf	___lomod@counter
  7543  0643  0AB1               	incf	___lomod@counter,f
  7544  0644  2E51               	goto	l2918
  7545  0645                     l2914:
  7546  0645  35A0               	lslf	___lomod@divisor,f
  7547  0646  0DA1               	rlf	___lomod@divisor+1,f
  7548  0647  0DA2               	rlf	___lomod@divisor+2,f
  7549  0648  0DA3               	rlf	___lomod@divisor+3,f
  7550  0649  0DA4               	rlf	___lomod@divisor+4,f
  7551  064A  0DA5               	rlf	___lomod@divisor+5,f
  7552  064B  0DA6               	rlf	___lomod@divisor+6,f
  7553  064C  0DA7               	rlf	___lomod@divisor+7,f
  7554  064D                     l2916:
  7555  064D  3001               	movlw	1
  7556  064E  00B0               	movwf	??___lomod
  7557  064F  0830               	movf	??___lomod,w
  7558  0650  07B1               	addwf	___lomod@counter,f
  7559  0651                     l2918:
  7560  0651  1FA7               	btfss	___lomod@divisor+7,7
  7561  0652  2E54               	goto	u911
  7562  0653  2E55               	goto	u910
  7563  0654                     u911:
  7564  0654  2E45               	goto	l2914
  7565  0655                     u910:
  7566  0655                     l2920:
  7567  0655  0827               	movf	___lomod@divisor+7,w
  7568  0656  022F               	subwf	___lomod@dividend+7,w
  7569  0657  1D03               	skipz
  7570  0658  2E73               	goto	u925
  7571  0659  0826               	movf	___lomod@divisor+6,w
  7572  065A  022E               	subwf	___lomod@dividend+6,w
  7573  065B  1D03               	skipz
  7574  065C  2E73               	goto	u925
  7575  065D  0825               	movf	___lomod@divisor+5,w
  7576  065E  022D               	subwf	___lomod@dividend+5,w
  7577  065F  1D03               	skipz
  7578  0660  2E73               	goto	u925
  7579  0661  0824               	movf	___lomod@divisor+4,w
  7580  0662  022C               	subwf	___lomod@dividend+4,w
  7581  0663  1D03               	skipz
  7582  0664  2E73               	goto	u925
  7583  0665  0823               	movf	___lomod@divisor+3,w
  7584  0666  022B               	subwf	___lomod@dividend+3,w
  7585  0667  1D03               	skipz
  7586  0668  2E73               	goto	u925
  7587  0669  0822               	movf	___lomod@divisor+2,w
  7588  066A  022A               	subwf	___lomod@dividend+2,w
  7589  066B  1D03               	skipz
  7590  066C  2E73               	goto	u925
  7591  066D  0821               	movf	___lomod@divisor+1,w
  7592  066E  0229               	subwf	___lomod@dividend+1,w
  7593  066F  1D03               	skipz
  7594  0670  2E73               	goto	u925
  7595  0671  0820               	movf	___lomod@divisor,w
  7596  0672  0228               	subwf	___lomod@dividend,w
  7597  0673                     u925:
  7598  0673  1C03               	skipc
  7599  0674  2E76               	goto	u921
  7600  0675  2E77               	goto	u920
  7601  0676                     u921:
  7602  0676  2E87               	goto	l2924
  7603  0677                     u920:
  7604  0677                     l2922:
  7605  0677  0820               	movf	___lomod@divisor,w
  7606  0678  02A8               	subwf	___lomod@dividend,f
  7607  0679  0821               	movf	___lomod@divisor+1,w
  7608  067A  3BA9               	subwfb	___lomod@dividend+1,f
  7609  067B  0822               	movf	___lomod@divisor+2,w
  7610  067C  3BAA               	subwfb	___lomod@dividend+2,f
  7611  067D  0823               	movf	___lomod@divisor+3,w
  7612  067E  3BAB               	subwfb	___lomod@dividend+3,f
  7613  067F  0824               	movf	___lomod@divisor+4,w
  7614  0680  3BAC               	subwfb	___lomod@dividend+4,f
  7615  0681  0825               	movf	___lomod@divisor+5,w
  7616  0682  3BAD               	subwfb	___lomod@dividend+5,f
  7617  0683  0826               	movf	___lomod@divisor+6,w
  7618  0684  3BAE               	subwfb	___lomod@dividend+6,f
  7619  0685  0827               	movf	___lomod@divisor+7,w
  7620  0686  3BAF               	subwfb	___lomod@dividend+7,f
  7621  0687                     l2924:
  7622  0687  36A7               	lsrf	___lomod@divisor+7,f
  7623  0688  0CA6               	rrf	___lomod@divisor+6,f
  7624  0689  0CA5               	rrf	___lomod@divisor+5,f
  7625  068A  0CA4               	rrf	___lomod@divisor+4,f
  7626  068B  0CA3               	rrf	___lomod@divisor+3,f
  7627  068C  0CA2               	rrf	___lomod@divisor+2,f
  7628  068D  0CA1               	rrf	___lomod@divisor+1,f
  7629  068E  0CA0               	rrf	___lomod@divisor,f
  7630  068F  3001               	movlw	1
  7631  0690  02B1               	subwf	___lomod@counter,f
  7632  0691  1D03               	btfss	3,2
  7633  0692  2E94               	goto	u931
  7634  0693  2E95               	goto	u930
  7635  0694                     u931:
  7636  0694  2E55               	goto	l2920
  7637  0695                     u930:
  7638  0695                     l1225:
  7639  0695  0828               	movf	___lomod@dividend,w
  7640  0696  00A0               	movwf	?___lomod
  7641  0697  0829               	movf	___lomod@dividend+1,w
  7642  0698  00A1               	movwf	?___lomod+1
  7643  0699  082A               	movf	___lomod@dividend+2,w
  7644  069A  00A2               	movwf	?___lomod+2
  7645  069B  082B               	movf	___lomod@dividend+3,w
  7646  069C  00A3               	movwf	?___lomod+3
  7647  069D  082C               	movf	___lomod@dividend+4,w
  7648  069E  00A4               	movwf	?___lomod+4
  7649  069F  082D               	movf	___lomod@dividend+5,w
  7650  06A0  00A5               	movwf	?___lomod+5
  7651  06A1  082E               	movf	___lomod@dividend+6,w
  7652  06A2  00A6               	movwf	?___lomod+6
  7653  06A3  082F               	movf	___lomod@dividend+7,w
  7654  06A4  00A7               	movwf	?___lomod+7
  7655  06A5                     l1232:
  7656  06A5  0008               	return
  7657  06A6                     __end_of___lomod:
  7658                           
  7659                           	psect	text12
  7660  052F                     __ptext12:	
  7661 ;; *************** function ___lodiv *****************
  7662 ;; Defined at:
  7663 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lodiv.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7666 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;  quotient        8   17[BANK0 ] unsigned long long 
  7669 ;;  counter         1   25[BANK0 ] unsigned char 
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  8    0[BANK0 ] unsigned long long 
  7672 ;; Registers used:
  7673 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7679 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7681 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;Total ram usage:       26 bytes
  7684 ;; Hardware stack levels used: 1
  7685 ;; Hardware stack levels required when called: 4
  7686 ;; This function calls:
  7687 ;;		Nothing
  7688 ;; This function is called by:
  7689 ;;		_utoa
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693  052F                     ___lodiv:	
  7694                           ;psect for function ___lodiv
  7695                           
  7696  052F                     l2888:	
  7697                           ;incstack = 0
  7698                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7699                           
  7700  052F  3031               	movlw	low ___lodiv@quotient
  7701  0530  0086               	movwf	6
  7702  0531  3000               	movlw	high ___lodiv@quotient
  7703  0532  0087               	movwf	7
  7704  0533  3008               	movlw	8
  7705  0534  0020               	movlb	0	; select bank0
  7706  0535  00B0               	movwf	??___lodiv
  7707  0536  3000               	movlw	0
  7708  0537                     u850:
  7709  0537  001E               	movwi fsr1++
  7710  0538  0BB0               	decfsz	??___lodiv,f
  7711  0539  2D37               	goto	u850
  7712  053A                     l2890:
  7713  053A  0820               	movf	___lodiv@divisor,w
  7714  053B  0421               	iorwf	___lodiv@divisor+1,w
  7715  053C  0422               	iorwf	___lodiv@divisor+2,w
  7716  053D  0423               	iorwf	___lodiv@divisor+3,w
  7717  053E  0424               	iorwf	___lodiv@divisor+4,w
  7718  053F  0425               	iorwf	___lodiv@divisor+5,w
  7719  0540  0426               	iorwf	___lodiv@divisor+6,w
  7720  0541  0427               	iorwf	___lodiv@divisor+7,w
  7721  0542  1903               	skipnz
  7722  0543  2D45               	goto	u861
  7723  0544  2D46               	goto	u860
  7724  0545                     u861:
  7725  0545  2DA2               	goto	l1215
  7726  0546                     u860:
  7727  0546                     l2892:
  7728  0546  01B9               	clrf	___lodiv@counter
  7729  0547  0AB9               	incf	___lodiv@counter,f
  7730  0548  2D55               	goto	l2898
  7731  0549                     l2894:
  7732  0549  35A0               	lslf	___lodiv@divisor,f
  7733  054A  0DA1               	rlf	___lodiv@divisor+1,f
  7734  054B  0DA2               	rlf	___lodiv@divisor+2,f
  7735  054C  0DA3               	rlf	___lodiv@divisor+3,f
  7736  054D  0DA4               	rlf	___lodiv@divisor+4,f
  7737  054E  0DA5               	rlf	___lodiv@divisor+5,f
  7738  054F  0DA6               	rlf	___lodiv@divisor+6,f
  7739  0550  0DA7               	rlf	___lodiv@divisor+7,f
  7740  0551                     l2896:
  7741  0551  3001               	movlw	1
  7742  0552  00B0               	movwf	??___lodiv
  7743  0553  0830               	movf	??___lodiv,w
  7744  0554  07B9               	addwf	___lodiv@counter,f
  7745  0555                     l2898:
  7746  0555  1FA7               	btfss	___lodiv@divisor+7,7
  7747  0556  2D58               	goto	u871
  7748  0557  2D59               	goto	u870
  7749  0558                     u871:
  7750  0558  2D49               	goto	l2894
  7751  0559                     u870:
  7752  0559                     l2900:
  7753  0559  35B1               	lslf	___lodiv@quotient,f
  7754  055A  0DB2               	rlf	___lodiv@quotient+1,f
  7755  055B  0DB3               	rlf	___lodiv@quotient+2,f
  7756  055C  0DB4               	rlf	___lodiv@quotient+3,f
  7757  055D  0DB5               	rlf	___lodiv@quotient+4,f
  7758  055E  0DB6               	rlf	___lodiv@quotient+5,f
  7759  055F  0DB7               	rlf	___lodiv@quotient+6,f
  7760  0560  0DB8               	rlf	___lodiv@quotient+7,f
  7761  0561                     l2902:
  7762  0561  0827               	movf	___lodiv@divisor+7,w
  7763  0562  022F               	subwf	___lodiv@dividend+7,w
  7764  0563  1D03               	skipz
  7765  0564  2D7F               	goto	u885
  7766  0565  0826               	movf	___lodiv@divisor+6,w
  7767  0566  022E               	subwf	___lodiv@dividend+6,w
  7768  0567  1D03               	skipz
  7769  0568  2D7F               	goto	u885
  7770  0569  0825               	movf	___lodiv@divisor+5,w
  7771  056A  022D               	subwf	___lodiv@dividend+5,w
  7772  056B  1D03               	skipz
  7773  056C  2D7F               	goto	u885
  7774  056D  0824               	movf	___lodiv@divisor+4,w
  7775  056E  022C               	subwf	___lodiv@dividend+4,w
  7776  056F  1D03               	skipz
  7777  0570  2D7F               	goto	u885
  7778  0571  0823               	movf	___lodiv@divisor+3,w
  7779  0572  022B               	subwf	___lodiv@dividend+3,w
  7780  0573  1D03               	skipz
  7781  0574  2D7F               	goto	u885
  7782  0575  0822               	movf	___lodiv@divisor+2,w
  7783  0576  022A               	subwf	___lodiv@dividend+2,w
  7784  0577  1D03               	skipz
  7785  0578  2D7F               	goto	u885
  7786  0579  0821               	movf	___lodiv@divisor+1,w
  7787  057A  0229               	subwf	___lodiv@dividend+1,w
  7788  057B  1D03               	skipz
  7789  057C  2D7F               	goto	u885
  7790  057D  0820               	movf	___lodiv@divisor,w
  7791  057E  0228               	subwf	___lodiv@dividend,w
  7792  057F                     u885:
  7793  057F  1C03               	skipc
  7794  0580  2D82               	goto	u881
  7795  0581  2D83               	goto	u880
  7796  0582                     u881:
  7797  0582  2D94               	goto	l2908
  7798  0583                     u880:
  7799  0583                     l2904:
  7800  0583  0820               	movf	___lodiv@divisor,w
  7801  0584  02A8               	subwf	___lodiv@dividend,f
  7802  0585  0821               	movf	___lodiv@divisor+1,w
  7803  0586  3BA9               	subwfb	___lodiv@dividend+1,f
  7804  0587  0822               	movf	___lodiv@divisor+2,w
  7805  0588  3BAA               	subwfb	___lodiv@dividend+2,f
  7806  0589  0823               	movf	___lodiv@divisor+3,w
  7807  058A  3BAB               	subwfb	___lodiv@dividend+3,f
  7808  058B  0824               	movf	___lodiv@divisor+4,w
  7809  058C  3BAC               	subwfb	___lodiv@dividend+4,f
  7810  058D  0825               	movf	___lodiv@divisor+5,w
  7811  058E  3BAD               	subwfb	___lodiv@dividend+5,f
  7812  058F  0826               	movf	___lodiv@divisor+6,w
  7813  0590  3BAE               	subwfb	___lodiv@dividend+6,f
  7814  0591  0827               	movf	___lodiv@divisor+7,w
  7815  0592  3BAF               	subwfb	___lodiv@dividend+7,f
  7816  0593                     l2906:
  7817  0593  1431               	bsf	___lodiv@quotient,0
  7818  0594                     l2908:
  7819  0594  36A7               	lsrf	___lodiv@divisor+7,f
  7820  0595  0CA6               	rrf	___lodiv@divisor+6,f
  7821  0596  0CA5               	rrf	___lodiv@divisor+5,f
  7822  0597  0CA4               	rrf	___lodiv@divisor+4,f
  7823  0598  0CA3               	rrf	___lodiv@divisor+3,f
  7824  0599  0CA2               	rrf	___lodiv@divisor+2,f
  7825  059A  0CA1               	rrf	___lodiv@divisor+1,f
  7826  059B  0CA0               	rrf	___lodiv@divisor,f
  7827  059C  3001               	movlw	1
  7828  059D  02B9               	subwf	___lodiv@counter,f
  7829  059E  1D03               	btfss	3,2
  7830  059F  2DA1               	goto	u891
  7831  05A0  2DA2               	goto	u890
  7832  05A1                     u891:
  7833  05A1  2D59               	goto	l2900
  7834  05A2                     u890:
  7835  05A2                     l1215:
  7836  05A2  0831               	movf	___lodiv@quotient,w
  7837  05A3  00A0               	movwf	?___lodiv
  7838  05A4  0832               	movf	___lodiv@quotient+1,w
  7839  05A5  00A1               	movwf	?___lodiv+1
  7840  05A6  0833               	movf	___lodiv@quotient+2,w
  7841  05A7  00A2               	movwf	?___lodiv+2
  7842  05A8  0834               	movf	___lodiv@quotient+3,w
  7843  05A9  00A3               	movwf	?___lodiv+3
  7844  05AA  0835               	movf	___lodiv@quotient+4,w
  7845  05AB  00A4               	movwf	?___lodiv+4
  7846  05AC  0836               	movf	___lodiv@quotient+5,w
  7847  05AD  00A5               	movwf	?___lodiv+5
  7848  05AE  0837               	movf	___lodiv@quotient+6,w
  7849  05AF  00A6               	movwf	?___lodiv+6
  7850  05B0  0838               	movf	___lodiv@quotient+7,w
  7851  05B1  00A7               	movwf	?___lodiv+7
  7852  05B2                     l1222:
  7853  05B2  0008               	return
  7854  05B3                     __end_of___lodiv:
  7855                           
  7856                           	psect	text13
  7857  0E4F                     __ptext13:	
  7858 ;; *************** function _PIC16_Init *****************
  7859 ;; Defined at:
  7860 ;;		line 16 in file "PIC16Xpress_DevBoard.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;		None
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;		None
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  1    wreg      void 
  7867 ;; Registers used:
  7868 ;;		wreg, status,2, status,0, pclath, cstack
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7878 ;;Total ram usage:        0 bytes
  7879 ;; Hardware stack levels used: 1
  7880 ;; Hardware stack levels required when called: 7
  7881 ;; This function calls:
  7882 ;;		_SYSTEM_Initialize
  7883 ;; This function is called by:
  7884 ;;		_main
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888  0E4F                     _PIC16_Init:	
  7889                           ;psect for function _PIC16_Init
  7890                           
  7891  0E4F                     l3654:	
  7892                           ;incstack = 0
  7893                           ; Regs used in _PIC16_Init: [wreg+status,2+status,0+pclath+cstack]
  7894                           
  7895                           
  7896                           ;PIC16Xpress_DevBoard.c: 18:     PIE0 = 0x00;
  7897  0E4F  0021               	movlb	1	; select bank1
  7898  0E50  0190               	clrf	16	;volatile
  7899                           
  7900                           ;PIC16Xpress_DevBoard.c: 19:     PIE1 = 0x00;
  7901  0E51  0191               	clrf	17	;volatile
  7902                           
  7903                           ;PIC16Xpress_DevBoard.c: 20:     PIE2 = 0x00;
  7904  0E52  0192               	clrf	18	;volatile
  7905                           
  7906                           ;PIC16Xpress_DevBoard.c: 21:     PIE3 = 0x00;
  7907  0E53  0193               	clrf	19	;volatile
  7908                           
  7909                           ;PIC16Xpress_DevBoard.c: 22:     PIE4 = 0x00;
  7910  0E54  0194               	clrf	20	;volatile
  7911                           
  7912                           ;PIC16Xpress_DevBoard.c: 25:     LATA = 0x00;
  7913  0E55  0022               	movlb	2	; select bank2
  7914  0E56  018C               	clrf	12	;volatile
  7915                           
  7916                           ;PIC16Xpress_DevBoard.c: 26:     LATB = 0x00;
  7917  0E57  018D               	clrf	13	;volatile
  7918                           
  7919                           ;PIC16Xpress_DevBoard.c: 27:     LATC = 0x00;
  7920  0E58  018E               	clrf	14	;volatile
  7921  0E59                     l3656:
  7922                           
  7923                           ;PIC16Xpress_DevBoard.c: 29:     TRISA = 0x37;
  7924  0E59  3037               	movlw	55
  7925  0E5A  0021               	movlb	1	; select bank1
  7926  0E5B  008C               	movwf	12	;volatile
  7927  0E5C                     l3658:
  7928                           
  7929                           ;PIC16Xpress_DevBoard.c: 30:     TRISB = 0xF0;
  7930  0E5C  30F0               	movlw	240
  7931  0E5D  008D               	movwf	13	;volatile
  7932  0E5E                     l3660:
  7933                           
  7934                           ;PIC16Xpress_DevBoard.c: 31:     TRISC = 0xFF;
  7935  0E5E  30FF               	movlw	255
  7936  0E5F  008E               	movwf	14	;volatile
  7937  0E60                     l3662:
  7938                           
  7939                           ;PIC16Xpress_DevBoard.c: 33:     ANSELC = 0xFF;
  7940  0E60  30FF               	movlw	255
  7941  0E61  0023               	movlb	3	; select bank3
  7942  0E62  008E               	movwf	14	;volatile
  7943  0E63                     l3664:
  7944                           
  7945                           ;PIC16Xpress_DevBoard.c: 34:     ANSELB = 0xF0;
  7946  0E63  30F0               	movlw	240
  7947  0E64  008D               	movwf	13	;volatile
  7948  0E65                     l3666:
  7949                           
  7950                           ;PIC16Xpress_DevBoard.c: 35:     ANSELA = 0x37;
  7951  0E65  3037               	movlw	55
  7952  0E66  008C               	movwf	12	;volatile
  7953                           
  7954                           ;PIC16Xpress_DevBoard.c: 37:     WPUB = 0x00;
  7955  0E67  0024               	movlb	4	; select bank4
  7956  0E68  018D               	clrf	13	;volatile
  7957                           
  7958                           ;PIC16Xpress_DevBoard.c: 38:     WPUA = 0x00;
  7959  0E69  018C               	clrf	12	;volatile
  7960                           
  7961                           ;PIC16Xpress_DevBoard.c: 39:     WPUC = 0x00;
  7962  0E6A  018E               	clrf	14	;volatile
  7963                           
  7964                           ;PIC16Xpress_DevBoard.c: 41:     ODCONA = 0x00;
  7965  0E6B  0025               	movlb	5	; select bank5
  7966  0E6C  018C               	clrf	12	;volatile
  7967                           
  7968                           ;PIC16Xpress_DevBoard.c: 42:     ODCONB = 0x00;
  7969  0E6D  018D               	clrf	13	;volatile
  7970                           
  7971                           ;PIC16Xpress_DevBoard.c: 43:     ODCONC = 0x00;
  7972  0E6E  018E               	clrf	14	;volatile
  7973  0E6F                     l3668:
  7974                           
  7975                           ;PIC16Xpress_DevBoard.c: 45:     SLRCONA = 0x37;
  7976  0E6F  3037               	movlw	55
  7977  0E70  0026               	movlb	6	; select bank6
  7978  0E71  008C               	movwf	12	;volatile
  7979  0E72                     l3670:
  7980                           
  7981                           ;PIC16Xpress_DevBoard.c: 46:     SLRCONB = 0xF0;
  7982  0E72  30F0               	movlw	240
  7983  0E73  008D               	movwf	13	;volatile
  7984  0E74                     l3672:
  7985                           
  7986                           ;PIC16Xpress_DevBoard.c: 47:     SLRCONC = 0xFF;
  7987  0E74  30FF               	movlw	255
  7988  0E75  008E               	movwf	14	;volatile
  7989  0E76                     l3674:
  7990                           
  7991                           ;PIC16Xpress_DevBoard.c: 49:     INLVLA = 0x3F;
  7992  0E76  303F               	movlw	63
  7993  0E77  0027               	movlb	7	; select bank7
  7994  0E78  008C               	movwf	12	;volatile
  7995  0E79                     l3676:
  7996                           
  7997                           ;PIC16Xpress_DevBoard.c: 50:     INLVLB = 0xF0;
  7998  0E79  30F0               	movlw	240
  7999  0E7A  008D               	movwf	13	;volatile
  8000  0E7B                     l3678:
  8001                           
  8002                           ;PIC16Xpress_DevBoard.c: 51:     INLVLC = 0xFF;
  8003  0E7B  30FF               	movlw	255
  8004  0E7C  008E               	movwf	14	;volatile
  8005                           
  8006                           ;PIC16Xpress_DevBoard.c: 54:     PIR0 = 0x00;
  8007  0E7D  0020               	movlb	0	; select bank0
  8008  0E7E  0190               	clrf	16	;volatile
  8009                           
  8010                           ;PIC16Xpress_DevBoard.c: 55:     PIR1 = 0x00;
  8011  0E7F  0191               	clrf	17	;volatile
  8012                           
  8013                           ;PIC16Xpress_DevBoard.c: 56:     PIR2 = 0x00;
  8014  0E80  0192               	clrf	18	;volatile
  8015                           
  8016                           ;PIC16Xpress_DevBoard.c: 57:     PIR3 = 0x00;
  8017  0E81  0193               	clrf	19	;volatile
  8018                           
  8019                           ;PIC16Xpress_DevBoard.c: 58:     PIR4 = 0x00;
  8020  0E82  0194               	clrf	20	;volatile
  8021  0E83                     l3680:
  8022                           
  8023                           ;PIC16Xpress_DevBoard.c: 61:     SYSTEM_Initialize();
  8024  0E83  318D  251D  318E   	fcall	_SYSTEM_Initialize
  8025  0E86                     l3682:
  8026                           
  8027                           ;PIC16Xpress_DevBoard.c: 64:     (INTCONbits.PEIE = 1);
  8028  0E86  170B               	bsf	11,6	;volatile
  8029  0E87                     l3684:
  8030                           
  8031                           ;PIC16Xpress_DevBoard.c: 65:     (INTCONbits.GIE = 1);
  8032  0E87  178B               	bsf	11,7	;volatile
  8033  0E88                     l164:
  8034  0E88  0008               	return
  8035  0E89                     __end_of_PIC16_Init:
  8036                           
  8037                           	psect	text14
  8038  0D1D                     __ptext14:	
  8039 ;; *************** function _SYSTEM_Initialize *****************
  8040 ;; Defined at:
  8041 ;;		line 15 in file "mcc.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;		None
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;		None
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  1    wreg      void 
  8048 ;; Registers used:
  8049 ;;		wreg, status,2, status,0, pclath, cstack
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8059 ;;Total ram usage:        0 bytes
  8060 ;; Hardware stack levels used: 1
  8061 ;; Hardware stack levels required when called: 6
  8062 ;; This function calls:
  8063 ;;		_CCP1_Initialize
  8064 ;;		_CCP2_Initialize
  8065 ;;		_CCP3_Initialize
  8066 ;;		_EUSART_Initialize
  8067 ;;		_OSCILLATOR_Initialize
  8068 ;;		_PIN_MANAGER_Initialize
  8069 ;;		_PMD_Initialize
  8070 ;;		_TMR0_Initialize
  8071 ;;		_TMR1_Initialize
  8072 ;;		_WDT_Initialize
  8073 ;; This function is called by:
  8074 ;;		_PIC16_Init
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078  0D1D                     _SYSTEM_Initialize:	
  8079                           ;psect for function _SYSTEM_Initialize
  8080                           
  8081  0D1D                     l3478:	
  8082                           ;incstack = 0
  8083                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8084                           
  8085                           
  8086                           ;mcc.c: 17:     PMD_Initialize();
  8087  0D1D  318B  23B9  318D   	fcall	_PMD_Initialize
  8088                           
  8089                           ;mcc.c: 18:     PIN_MANAGER_Initialize();
  8090  0D20  318E  2619  318D   	fcall	_PIN_MANAGER_Initialize
  8091                           
  8092                           ;mcc.c: 19:     OSCILLATOR_Initialize();
  8093  0D23  318B  23AD  318D   	fcall	_OSCILLATOR_Initialize
  8094                           
  8095                           ;mcc.c: 20:     WDT_Initialize();
  8096  0D26  318B  231E  318D   	fcall	_WDT_Initialize
  8097                           
  8098                           ;mcc.c: 21:     CCP2_Initialize();
  8099  0D29  318C  2482  318D   	fcall	_CCP2_Initialize
  8100                           
  8101                           ;mcc.c: 22:     CCP3_Initialize();
  8102  0D2C  318C  249A  318D   	fcall	_CCP3_Initialize
  8103                           
  8104                           ;mcc.c: 23:     CCP1_Initialize();
  8105  0D2F  318C  246A  318D   	fcall	_CCP1_Initialize
  8106                           
  8107                           ;mcc.c: 24:     TMR1_Initialize();
  8108  0D32  318C  24B2  318D   	fcall	_TMR1_Initialize
  8109                           
  8110                           ;mcc.c: 25:     TMR0_Initialize();
  8111  0D35  318B  23E7  318D   	fcall	_TMR0_Initialize
  8112                           
  8113                           ;mcc.c: 26:     EUSART_Initialize();
  8114  0D38  3187  27B1  318D   	fcall	_EUSART_Initialize
  8115  0D3B                     l285:
  8116  0D3B  0008               	return
  8117  0D3C                     __end_of_SYSTEM_Initialize:
  8118                           
  8119                           	psect	text15
  8120  0B1E                     __ptext15:	
  8121 ;; *************** function _WDT_Initialize *****************
  8122 ;; Defined at:
  8123 ;;		line 51 in file "mcc.c"
  8124 ;; Parameters:    Size  Location     Type
  8125 ;;		None
  8126 ;; Auto vars:     Size  Location     Type
  8127 ;;		None
  8128 ;; Return value:  Size  Location     Type
  8129 ;;                  1    wreg      void 
  8130 ;; Registers used:
  8131 ;;		wreg
  8132 ;; Tracked objects:
  8133 ;;		On entry : 0/0
  8134 ;;		On exit  : 0/0
  8135 ;;		Unchanged: 0/0
  8136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8141 ;;Total ram usage:        0 bytes
  8142 ;; Hardware stack levels used: 1
  8143 ;; Hardware stack levels required when called: 4
  8144 ;; This function calls:
  8145 ;;		Nothing
  8146 ;; This function is called by:
  8147 ;;		_SYSTEM_Initialize
  8148 ;; This function uses a non-reentrant model
  8149 ;;
  8150                           
  8151  0B1E                     _WDT_Initialize:	
  8152                           ;psect for function _WDT_Initialize
  8153                           
  8154  0B1E                     l3144:	
  8155                           ;incstack = 0
  8156                           ; Regs used in _WDT_Initialize: [wreg]
  8157                           
  8158                           
  8159                           ;mcc.c: 54:     WDTCON = 0x16;
  8160  0B1E  3016               	movlw	22
  8161  0B1F  0021               	movlb	1	; select bank1
  8162  0B20  0097               	movwf	23	;volatile
  8163  0B21                     l294:
  8164  0B21  0008               	return
  8165  0B22                     __end_of_WDT_Initialize:
  8166                           
  8167                           	psect	text16
  8168  0CB2                     __ptext16:	
  8169 ;; *************** function _TMR1_Initialize *****************
  8170 ;; Defined at:
  8171 ;;		line 20 in file "tmr1.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;		None
  8174 ;; Auto vars:     Size  Location     Type
  8175 ;;		None
  8176 ;; Return value:  Size  Location     Type
  8177 ;;                  1    wreg      void 
  8178 ;; Registers used:
  8179 ;;		wreg, status,2, status,0, pclath, cstack
  8180 ;; Tracked objects:
  8181 ;;		On entry : 0/0
  8182 ;;		On exit  : 0/0
  8183 ;;		Unchanged: 0/0
  8184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8189 ;;Total ram usage:        0 bytes
  8190 ;; Hardware stack levels used: 1
  8191 ;; Hardware stack levels required when called: 5
  8192 ;; This function calls:
  8193 ;;		_TMR1_SetInterruptHandler
  8194 ;; This function is called by:
  8195 ;;		_SYSTEM_Initialize
  8196 ;; This function uses a non-reentrant model
  8197 ;;
  8198                           
  8199  0CB2                     _TMR1_Initialize:	
  8200                           ;psect for function _TMR1_Initialize
  8201                           
  8202  0CB2                     l3194:	
  8203                           ;incstack = 0
  8204                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8205                           
  8206                           
  8207                           ;tmr1.c: 25:     T1GCON = 0x00;
  8208  0CB2  0020               	movlb	0	; select bank0
  8209  0CB3  019C               	clrf	28	;volatile
  8210                           
  8211                           ;tmr1.c: 28:     TMR1H = 0x00;
  8212  0CB4  019A               	clrf	26	;volatile
  8213                           
  8214                           ;tmr1.c: 31:     TMR1L = 0x00;
  8215  0CB5  0199               	clrf	25	;volatile
  8216  0CB6                     l3196:
  8217                           
  8218                           ;tmr1.c: 34:     PIR1bits.TMR1IF = 0;
  8219  0CB6  1011               	bcf	17,0	;volatile
  8220  0CB7                     l3198:
  8221                           
  8222                           ;tmr1.c: 37:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8223  0CB7  081A               	movf	26,w	;volatile
  8224  0CB8  0021               	movlb	1	; select bank1
  8225  0CB9  00B5               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  8226  0CBA  0020               	movlb	0	; select bank0
  8227  0CBB  0819               	movf	25,w	;volatile
  8228  0CBC  0021               	movlb	1	; select bank1
  8229  0CBD  00B4               	movwf	_timer1ReloadVal^(0+128)	;volatile
  8230  0CBE                     l3200:
  8231                           
  8232                           ;tmr1.c: 40:     PIE1bits.TMR1IE = 1;
  8233  0CBE  1411               	bsf	17,0	;volatile
  8234  0CBF                     l3202:
  8235                           
  8236                           ;tmr1.c: 43:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  8237  0CBF  3000               	movlw	0
  8238  0CC0  0020               	movlb	0	; select bank0
  8239  0CC1  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  8240  0CC2  3000               	movlw	0
  8241  0CC3  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  8242  0CC4  3187  27F7  318C   	fcall	_TMR1_SetInterruptHandler
  8243  0CC7                     l3204:
  8244                           
  8245                           ;tmr1.c: 46:     T1CON = 0b00100001;
  8246  0CC7  3021               	movlw	33
  8247  0CC8  0020               	movlb	0	; select bank0
  8248  0CC9  009B               	movwf	27	;volatile
  8249  0CCA                     l521:
  8250  0CCA  0008               	return
  8251  0CCB                     __end_of_TMR1_Initialize:
  8252                           
  8253                           	psect	text17
  8254  07F7                     __ptext17:	
  8255 ;; *************** function _TMR1_SetInterruptHandler *****************
  8256 ;; Defined at:
  8257 ;;		line 154 in file "tmr1.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8260 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;		None
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  1    wreg      void 
  8265 ;; Registers used:
  8266 ;;		wreg
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/0
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8272 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8275 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8276 ;;Total ram usage:        2 bytes
  8277 ;; Hardware stack levels used: 1
  8278 ;; Hardware stack levels required when called: 4
  8279 ;; This function calls:
  8280 ;;		Nothing
  8281 ;; This function is called by:
  8282 ;;		_TMR1_Initialize
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286  07F7                     _TMR1_SetInterruptHandler:	
  8287                           ;psect for function _TMR1_SetInterruptHandler
  8288                           
  8289  07F7                     l2954:	
  8290                           ;incstack = 0
  8291                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  8292                           
  8293                           
  8294                           ;tmr1.c: 155:     TMR1_InterruptHandler = InterruptHandler;
  8295  07F7  0020               	movlb	0	; select bank0
  8296  07F8  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  8297  07F9  0021               	movlb	1	; select bank1
  8298  07FA  00B3               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  8299  07FB  0020               	movlb	0	; select bank0
  8300  07FC  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  8301  07FD  0021               	movlb	1	; select bank1
  8302  07FE  00B2               	movwf	_TMR1_InterruptHandler^(0+128)
  8303  07FF                     l554:
  8304  07FF  0008               	return
  8305  0800                     __end_of_TMR1_SetInterruptHandler:
  8306                           
  8307                           	psect	text18
  8308  0BE7                     __ptext18:	
  8309 ;; *************** function _TMR0_Initialize *****************
  8310 ;; Defined at:
  8311 ;;		line 18 in file "tmr0.c"
  8312 ;; Parameters:    Size  Location     Type
  8313 ;;		None
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;		None
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  1    wreg      void 
  8318 ;; Registers used:
  8319 ;;		wreg, status,2, status,0, pclath, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;Total ram usage:        0 bytes
  8330 ;; Hardware stack levels used: 1
  8331 ;; Hardware stack levels required when called: 5
  8332 ;; This function calls:
  8333 ;;		_TMR0_SetInterruptHandler
  8334 ;; This function is called by:
  8335 ;;		_SYSTEM_Initialize
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339  0BE7                     _TMR0_Initialize:	
  8340                           ;psect for function _TMR0_Initialize
  8341                           
  8342  0BE7                     l3206:	
  8343                           ;incstack = 0
  8344                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8345                           
  8346                           
  8347                           ;tmr0.c: 23:     T0CON1 = 0x42;
  8348  0BE7  3042               	movlw	66
  8349  0BE8  0020               	movlb	0	; select bank0
  8350  0BE9  0098               	movwf	24	;volatile
  8351                           
  8352                           ;tmr0.c: 26:     TMR0H = 0xF9;
  8353  0BEA  30F9               	movlw	249
  8354  0BEB  0096               	movwf	22	;volatile
  8355  0BEC                     l3208:
  8356                           
  8357                           ;tmr0.c: 29:     TMR0L = 0x00;
  8358  0BEC  0195               	clrf	21	;volatile
  8359  0BED                     l3210:
  8360                           
  8361                           ;tmr0.c: 32:     PIR0bits.TMR0IF = 0;
  8362  0BED  1290               	bcf	16,5	;volatile
  8363  0BEE                     l3212:
  8364                           
  8365                           ;tmr0.c: 35:     PIE0bits.TMR0IE = 1;
  8366  0BEE  0021               	movlb	1	; select bank1
  8367  0BEF  1690               	bsf	16,5	;volatile
  8368  0BF0                     l3214:
  8369                           
  8370                           ;tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  8371  0BF0  3000               	movlw	0
  8372  0BF1  0020               	movlb	0	; select bank0
  8373  0BF2  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8374  0BF3  3000               	movlw	0
  8375  0BF4  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8376  0BF5  318B  2385  318B   	fcall	_TMR0_SetInterruptHandler
  8377  0BF8                     l3216:
  8378                           
  8379                           ;tmr0.c: 41:     T0CON0 = 0x80;
  8380  0BF8  3080               	movlw	128
  8381  0BF9  0020               	movlb	0	; select bank0
  8382  0BFA  0097               	movwf	23	;volatile
  8383  0BFB                     l326:
  8384  0BFB  0008               	return
  8385  0BFC                     __end_of_TMR0_Initialize:
  8386                           
  8387                           	psect	text19
  8388  0B85                     __ptext19:	
  8389 ;; *************** function _TMR0_SetInterruptHandler *****************
  8390 ;; Defined at:
  8391 ;;		line 119 in file "tmr0.c"
  8392 ;; Parameters:    Size  Location     Type
  8393 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8394 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;		None
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  1    wreg      void 
  8399 ;; Registers used:
  8400 ;;		wreg
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8406 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8409 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8410 ;;Total ram usage:        2 bytes
  8411 ;; Hardware stack levels used: 1
  8412 ;; Hardware stack levels required when called: 4
  8413 ;; This function calls:
  8414 ;;		Nothing
  8415 ;; This function is called by:
  8416 ;;		_TMR0_Initialize
  8417 ;; This function uses a non-reentrant model
  8418 ;;
  8419                           
  8420  0B85                     _TMR0_SetInterruptHandler:	
  8421                           ;psect for function _TMR0_SetInterruptHandler
  8422                           
  8423  0B85                     l2946:	
  8424                           ;incstack = 0
  8425                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  8426                           
  8427                           
  8428                           ;tmr0.c: 120:     TMR0_InterruptHandler = InterruptHandler;
  8429  0B85  0020               	movlb	0	; select bank0
  8430  0B86  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  8431  0B87  0022               	movlb	2	; select bank2
  8432  0B88  00CB               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
  8433  0B89  0020               	movlb	0	; select bank0
  8434  0B8A  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  8435  0B8B  0022               	movlb	2	; select bank2
  8436  0B8C  00CA               	movwf	_TMR0_InterruptHandler^(0+256)
  8437  0B8D                     l353:
  8438  0B8D  0008               	return
  8439  0B8E                     __end_of_TMR0_SetInterruptHandler:
  8440                           
  8441                           	psect	text20
  8442  0BB9                     __ptext20:	
  8443 ;; *************** function _PMD_Initialize *****************
  8444 ;; Defined at:
  8445 ;;		line 59 in file "mcc.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;		None
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;		None
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  1    wreg      void 
  8452 ;; Registers used:
  8453 ;;		wreg, status,2
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8463 ;;Total ram usage:        0 bytes
  8464 ;; Hardware stack levels used: 1
  8465 ;; Hardware stack levels required when called: 4
  8466 ;; This function calls:
  8467 ;;		Nothing
  8468 ;; This function is called by:
  8469 ;;		_SYSTEM_Initialize
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473  0BB9                     _PMD_Initialize:	
  8474                           ;psect for function _PMD_Initialize
  8475                           
  8476  0BB9                     l3092:	
  8477                           ;incstack = 0
  8478                           ; Regs used in _PMD_Initialize: [wreg+status,2]
  8479                           
  8480                           
  8481                           ;mcc.c: 62:     PMD0 = 0x00;
  8482  0BB9  0032               	movlb	18	; select bank18
  8483  0BBA  0191               	clrf	17	;volatile
  8484  0BBB                     l3094:
  8485                           
  8486                           ;mcc.c: 64:     PMD1 = 0x7C;
  8487  0BBB  307C               	movlw	124
  8488  0BBC  0092               	movwf	18	;volatile
  8489  0BBD                     l3096:
  8490                           
  8491                           ;mcc.c: 66:     PMD2 = 0x66;
  8492  0BBD  3066               	movlw	102
  8493  0BBE  0093               	movwf	19	;volatile
  8494  0BBF                     l3098:
  8495                           
  8496                           ;mcc.c: 68:     PMD3 = 0xC8;
  8497  0BBF  30C8               	movlw	200
  8498  0BC0  0094               	movwf	20	;volatile
  8499  0BC1                     l3100:
  8500                           
  8501                           ;mcc.c: 70:     PMD4 = 0x00;
  8502  0BC1  0195               	clrf	21	;volatile
  8503                           
  8504                           ;mcc.c: 72:     PMD5 = 0x1F;
  8505  0BC2  301F               	movlw	31
  8506  0BC3  0096               	movwf	22	;volatile
  8507  0BC4                     l297:
  8508  0BC4  0008               	return
  8509  0BC5                     __end_of_PMD_Initialize:
  8510                           
  8511                           	psect	text21
  8512  0E19                     __ptext21:	
  8513 ;; *************** function _PIN_MANAGER_Initialize *****************
  8514 ;; Defined at:
  8515 ;;		line 14 in file "pin_manager.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;		None
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;		None
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1    wreg      void 
  8522 ;; Registers used:
  8523 ;;		wreg, status,2
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8533 ;;Total ram usage:        0 bytes
  8534 ;; Hardware stack levels used: 1
  8535 ;; Hardware stack levels required when called: 4
  8536 ;; This function calls:
  8537 ;;		Nothing
  8538 ;; This function is called by:
  8539 ;;		_SYSTEM_Initialize
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543  0E19                     _PIN_MANAGER_Initialize:	
  8544                           ;psect for function _PIN_MANAGER_Initialize
  8545                           
  8546  0E19                     l3102:	
  8547                           ;incstack = 0
  8548                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8549                           
  8550                           
  8551                           ;pin_manager.c: 19:     LATA = 0x00;
  8552  0E19  0022               	movlb	2	; select bank2
  8553  0E1A  018C               	clrf	12	;volatile
  8554                           
  8555                           ;pin_manager.c: 20:     LATB = 0x00;
  8556  0E1B  018D               	clrf	13	;volatile
  8557                           
  8558                           ;pin_manager.c: 21:     LATC = 0x00;
  8559  0E1C  018E               	clrf	14	;volatile
  8560  0E1D                     l3104:
  8561                           
  8562                           ;pin_manager.c: 26:     TRISA = 0x37;
  8563  0E1D  3037               	movlw	55
  8564  0E1E  0021               	movlb	1	; select bank1
  8565  0E1F  008C               	movwf	12	;volatile
  8566  0E20                     l3106:
  8567                           
  8568                           ;pin_manager.c: 27:     TRISB = 0xF0;
  8569  0E20  30F0               	movlw	240
  8570  0E21  008D               	movwf	13	;volatile
  8571  0E22                     l3108:
  8572                           
  8573                           ;pin_manager.c: 28:     TRISC = 0xFF;
  8574  0E22  30FF               	movlw	255
  8575  0E23  008E               	movwf	14	;volatile
  8576  0E24                     l3110:
  8577                           
  8578                           ;pin_manager.c: 33:     ANSELC = 0xD7;
  8579  0E24  30D7               	movlw	215
  8580  0E25  0023               	movlb	3	; select bank3
  8581  0E26  008E               	movwf	14	;volatile
  8582  0E27                     l3112:
  8583                           
  8584                           ;pin_manager.c: 34:     ANSELB = 0xF0;
  8585  0E27  30F0               	movlw	240
  8586  0E28  008D               	movwf	13	;volatile
  8587  0E29                     l3114:
  8588                           
  8589                           ;pin_manager.c: 35:     ANSELA = 0x33;
  8590  0E29  3033               	movlw	51
  8591  0E2A  008C               	movwf	12	;volatile
  8592                           
  8593                           ;pin_manager.c: 40:     WPUB = 0x00;
  8594  0E2B  0024               	movlb	4	; select bank4
  8595  0E2C  018D               	clrf	13	;volatile
  8596                           
  8597                           ;pin_manager.c: 41:     WPUA = 0x00;
  8598  0E2D  018C               	clrf	12	;volatile
  8599                           
  8600                           ;pin_manager.c: 42:     WPUC = 0x00;
  8601  0E2E  018E               	clrf	14	;volatile
  8602                           
  8603                           ;pin_manager.c: 47:     ODCONA = 0x00;
  8604  0E2F  0025               	movlb	5	; select bank5
  8605  0E30  018C               	clrf	12	;volatile
  8606                           
  8607                           ;pin_manager.c: 48:     ODCONB = 0x00;
  8608  0E31  018D               	clrf	13	;volatile
  8609                           
  8610                           ;pin_manager.c: 49:     ODCONC = 0x00;
  8611  0E32  018E               	clrf	14	;volatile
  8612  0E33                     l3116:
  8613                           
  8614                           ;pin_manager.c: 54:     SLRCONA = 0x37;
  8615  0E33  3037               	movlw	55
  8616  0E34  0026               	movlb	6	; select bank6
  8617  0E35  008C               	movwf	12	;volatile
  8618  0E36                     l3118:
  8619                           
  8620                           ;pin_manager.c: 55:     SLRCONB = 0xF0;
  8621  0E36  30F0               	movlw	240
  8622  0E37  008D               	movwf	13	;volatile
  8623  0E38                     l3120:
  8624                           
  8625                           ;pin_manager.c: 56:     SLRCONC = 0xFF;
  8626  0E38  30FF               	movlw	255
  8627  0E39  008E               	movwf	14	;volatile
  8628  0E3A                     l3122:
  8629                           
  8630                           ;pin_manager.c: 61:     INLVLA = 0x3F;
  8631  0E3A  303F               	movlw	63
  8632  0E3B  0027               	movlb	7	; select bank7
  8633  0E3C  008C               	movwf	12	;volatile
  8634  0E3D                     l3124:
  8635                           
  8636                           ;pin_manager.c: 62:     INLVLB = 0xF0;
  8637  0E3D  30F0               	movlw	240
  8638  0E3E  008D               	movwf	13	;volatile
  8639  0E3F                     l3126:
  8640                           
  8641                           ;pin_manager.c: 63:     INLVLC = 0xFF;
  8642  0E3F  30FF               	movlw	255
  8643  0E40  008E               	movwf	14	;volatile
  8644  0E41                     l3128:
  8645                           
  8646                           ;pin_manager.c: 65:     RXPPS = 0x0D;
  8647  0E41  300D               	movlw	13
  8648  0E42  003C               	movlb	28	; select bank28
  8649  0E43  00A4               	movwf	36	;volatile
  8650  0E44                     l3130:
  8651                           
  8652                           ;pin_manager.c: 66:     CCP2PPS = 0x13;
  8653  0E44  3013               	movlw	19
  8654  0E45  0095               	movwf	21	;volatile
  8655  0E46                     l3132:
  8656                           
  8657                           ;pin_manager.c: 67:     CCP3PPS = 0x02;
  8658  0E46  3002               	movlw	2
  8659  0E47  0096               	movwf	22	;volatile
  8660  0E48                     l3134:
  8661                           
  8662                           ;pin_manager.c: 68:     RC4PPS = 0x14;
  8663  0E48  3014               	movlw	20
  8664  0E49  003D               	movlb	29	; select bank29
  8665  0E4A  00A4               	movwf	36	;volatile
  8666  0E4B                     l3136:
  8667                           
  8668                           ;pin_manager.c: 69:     CCP1PPS = 0x15;
  8669  0E4B  3015               	movlw	21
  8670  0E4C  003C               	movlb	28	; select bank28
  8671  0E4D  0094               	movwf	20	;volatile
  8672  0E4E                     l809:
  8673  0E4E  0008               	return
  8674  0E4F                     __end_of_PIN_MANAGER_Initialize:
  8675                           
  8676                           	psect	text22
  8677  0BAD                     __ptext22:	
  8678 ;; *************** function _OSCILLATOR_Initialize *****************
  8679 ;; Defined at:
  8680 ;;		line 31 in file "mcc.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;		None
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;		None
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  1    wreg      void 
  8687 ;; Registers used:
  8688 ;;		wreg, status,2
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8698 ;;Total ram usage:        0 bytes
  8699 ;; Hardware stack levels used: 1
  8700 ;; Hardware stack levels required when called: 4
  8701 ;; This function calls:
  8702 ;;		Nothing
  8703 ;; This function is called by:
  8704 ;;		_SYSTEM_Initialize
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708  0BAD                     _OSCILLATOR_Initialize:	
  8709                           ;psect for function _OSCILLATOR_Initialize
  8710                           
  8711  0BAD                     l3138:	
  8712                           ;incstack = 0
  8713                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8714                           
  8715                           
  8716                           ;mcc.c: 34:     OSCCON1 = 0x00;
  8717  0BAD  0032               	movlb	18	; select bank18
  8718  0BAE  0199               	clrf	25	;volatile
  8719                           
  8720                           ;mcc.c: 36:     OSCCON3 = 0x00;
  8721  0BAF  019B               	clrf	27	;volatile
  8722                           
  8723                           ;mcc.c: 38:     OSCEN = 0x00;
  8724  0BB0  019D               	clrf	29	;volatile
  8725  0BB1                     l3140:
  8726                           
  8727                           ;mcc.c: 40:     OSCFRQ = 0x04;
  8728  0BB1  3004               	movlw	4
  8729  0BB2  009F               	movwf	31	;volatile
  8730  0BB3                     l3142:
  8731                           
  8732                           ;mcc.c: 42:     OSCTUNE = 0x00;
  8733  0BB3  019E               	clrf	30	;volatile
  8734  0BB4                     l288:	
  8735                           ;mcc.c: 45:     {;mcc.c: 46:     }
  8736                           
  8737                           
  8738                           ;mcc.c: 44:     while(PLLR == 0)
  8739  0BB4  1C1C               	btfss	28,0	;volatile
  8740  0BB5  2BB7               	goto	u1051
  8741  0BB6  2BB8               	goto	u1050
  8742  0BB7                     u1051:
  8743  0BB7  2BB4               	goto	l288
  8744  0BB8                     u1050:
  8745  0BB8                     l291:
  8746  0BB8  0008               	return
  8747  0BB9                     __end_of_OSCILLATOR_Initialize:
  8748                           
  8749                           	psect	text23
  8750  07B1                     __ptext23:	
  8751 ;; *************** function _EUSART_Initialize *****************
  8752 ;; Defined at:
  8753 ;;		line 45 in file "eusart.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;		None
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;		None
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  1    wreg      void 
  8760 ;; Registers used:
  8761 ;;		wreg, status,2, status,0, pclath, cstack
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8769 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8770 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8771 ;;Total ram usage:        1 bytes
  8772 ;; Hardware stack levels used: 1
  8773 ;; Hardware stack levels required when called: 5
  8774 ;; This function calls:
  8775 ;;		_EUSART_SetErrorHandler
  8776 ;;		_EUSART_SetFramingErrorHandler
  8777 ;;		_EUSART_SetOverrunErrorHandler
  8778 ;;		_EUSART_SetRxInterruptHandler
  8779 ;;		_EUSART_SetTxInterruptHandler
  8780 ;; This function is called by:
  8781 ;;		_SYSTEM_Initialize
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785  07B1                     _EUSART_Initialize:	
  8786                           ;psect for function _EUSART_Initialize
  8787                           
  8788  07B1                     l3218:	
  8789                           ;incstack = 0
  8790                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8791                           
  8792                           
  8793                           ;eusart.c: 48:     PIE1bits.RCIE = 0;
  8794  07B1  0021               	movlb	1	; select bank1
  8795  07B2  1291               	bcf	17,5	;volatile
  8796  07B3                     l3220:
  8797                           
  8798                           ;eusart.c: 49:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  8799  07B3  3040               	movlw	low _EUSART_Receive_ISR
  8800  07B4  0020               	movlb	0	; select bank0
  8801  07B5  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  8802  07B6  300F               	movlw	high _EUSART_Receive_ISR
  8803  07B7  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  8804  07B8  318B  2373  3187   	fcall	_EUSART_SetRxInterruptHandler
  8805  07BB                     l3222:
  8806                           
  8807                           ;eusart.c: 50:     PIE1bits.TXIE = 0;
  8808  07BB  0021               	movlb	1	; select bank1
  8809  07BC  1211               	bcf	17,4	;volatile
  8810                           
  8811                           ;eusart.c: 51:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  8812  07BD  303C               	movlw	low _EUSART_Transmit_ISR
  8813  07BE  0020               	movlb	0	; select bank0
  8814  07BF  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  8815  07C0  300D               	movlw	high _EUSART_Transmit_ISR
  8816  07C1  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  8817  07C2  318B  237C  3187   	fcall	_EUSART_SetTxInterruptHandler
  8818  07C5                     l3224:
  8819                           
  8820                           ;eusart.c: 55:     BAUD1CON = 0x08;
  8821  07C5  3008               	movlw	8
  8822  07C6  0023               	movlb	3	; select bank3
  8823  07C7  009F               	movwf	31	;volatile
  8824  07C8                     l3226:
  8825                           
  8826                           ;eusart.c: 58:     RC1STA = 0x90;
  8827  07C8  3090               	movlw	144
  8828  07C9  009D               	movwf	29	;volatile
  8829  07CA                     l3228:
  8830                           
  8831                           ;eusart.c: 61:     TX1STA = 0x24;
  8832  07CA  3024               	movlw	36
  8833  07CB  009E               	movwf	30	;volatile
  8834  07CC                     l3230:
  8835                           
  8836                           ;eusart.c: 64:     SP1BRGL = 0xA0;
  8837  07CC  30A0               	movlw	160
  8838  07CD  009B               	movwf	27	;volatile
  8839  07CE                     l3232:
  8840                           
  8841                           ;eusart.c: 67:     SP1BRGH = 0x01;
  8842  07CE  3001               	movlw	1
  8843  07CF  009C               	movwf	28	;volatile
  8844  07D0                     l3234:
  8845                           
  8846                           ;eusart.c: 70:     EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  8847  07D0  3003               	movlw	low _EUSART_DefaultFramingErrorHandler
  8848  07D1  0020               	movlb	0	; select bank0
  8849  07D2  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  8850  07D3  3000               	movlw	high _EUSART_DefaultFramingErrorHandler
  8851  07D4  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  8852  07D5  318B  2361  3187   	fcall	_EUSART_SetFramingErrorHandler
  8853  07D8                     l3236:
  8854                           
  8855                           ;eusart.c: 71:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  8856  07D8  301A               	movlw	low _EUSART_DefaultOverrunErrorHandler
  8857  07D9  0020               	movlb	0	; select bank0
  8858  07DA  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  8859  07DB  300B               	movlw	high _EUSART_DefaultOverrunErrorHandler
  8860  07DC  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  8861  07DD  318B  236A  3187   	fcall	_EUSART_SetOverrunErrorHandler
  8862  07E0                     l3238:
  8863                           
  8864                           ;eusart.c: 72:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  8865  07E0  3016               	movlw	low _EUSART_DefaultErrorHandler
  8866  07E1  0020               	movlb	0	; select bank0
  8867  07E2  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  8868  07E3  300B               	movlw	high _EUSART_DefaultErrorHandler
  8869  07E4  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  8870  07E5  318B  2358  3187   	fcall	_EUSART_SetErrorHandler
  8871  07E8                     l3240:
  8872                           
  8873                           ;eusart.c: 74:     eusartRxLastError.status = 0;
  8874  07E8  0021               	movlb	1	; select bank1
  8875  07E9  01CA               	clrf	_eusartRxLastError^(0+128)	;volatile
  8876  07EA                     l3242:
  8877                           
  8878                           ;eusart.c: 77:     eusartTxHead = 0;
  8879  07EA  01FD               	clrf	_eusartTxHead	;volatile
  8880  07EB                     l3244:
  8881                           
  8882                           ;eusart.c: 78:     eusartTxTail = 0;
  8883  07EB  01FC               	clrf	_eusartTxTail	;volatile
  8884  07EC                     l3246:
  8885                           
  8886                           ;eusart.c: 79:     eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  8887  07EC  3008               	movlw	8
  8888  07ED  0020               	movlb	0	; select bank0
  8889  07EE  00A2               	movwf	??_EUSART_Initialize
  8890  07EF  0822               	movf	??_EUSART_Initialize,w
  8891  07F0  0021               	movlb	1	; select bank1
  8892  07F1  00CC               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  8893                           
  8894                           ;eusart.c: 81:     eusartRxHead = 0;
  8895  07F2  01FB               	clrf	_eusartRxHead	;volatile
  8896                           
  8897                           ;eusart.c: 82:     eusartRxTail = 0;
  8898  07F3  01FA               	clrf	_eusartRxTail	;volatile
  8899                           
  8900                           ;eusart.c: 83:     eusartRxCount = 0;
  8901  07F4  01CB               	clrf	_eusartRxCount^(0+128)	;volatile
  8902  07F5                     l3248:
  8903                           
  8904                           ;eusart.c: 86:     PIE1bits.RCIE = 1;
  8905  07F5  1691               	bsf	17,5	;volatile
  8906  07F6                     l632:
  8907  07F6  0008               	return
  8908  07F7                     __end_of_EUSART_Initialize:
  8909                           
  8910                           	psect	text24
  8911  0B7C                     __ptext24:	
  8912 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  8913 ;; Defined at:
  8914 ;;		line 278 in file "eusart.c"
  8915 ;; Parameters:    Size  Location     Type
  8916 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8917 ;;		 -> EUSART_Transmit_ISR(1), 
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;		None
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  1    wreg      void 
  8922 ;; Registers used:
  8923 ;;		wreg
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8929 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;Total ram usage:        2 bytes
  8934 ;; Hardware stack levels used: 1
  8935 ;; Hardware stack levels required when called: 4
  8936 ;; This function calls:
  8937 ;;		Nothing
  8938 ;; This function is called by:
  8939 ;;		_EUSART_Initialize
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943  0B7C                     _EUSART_SetTxInterruptHandler:	
  8944                           ;psect for function _EUSART_SetTxInterruptHandler
  8945                           
  8946  0B7C                     l2958:	
  8947                           ;incstack = 0
  8948                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  8949                           
  8950                           
  8951                           ;eusart.c: 279:     EUSART_TxDefaultInterruptHandler = interruptHandler;
  8952  0B7C  0020               	movlb	0	; select bank0
  8953  0B7D  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  8954  0B7E  0021               	movlb	1	; select bank1
  8955  0B7F  00B1               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
  8956  0B80  0020               	movlb	0	; select bank0
  8957  0B81  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  8958  0B82  0021               	movlb	1	; select bank1
  8959  0B83  00B0               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
  8960  0B84                     l704:
  8961  0B84  0008               	return
  8962  0B85                     __end_of_EUSART_SetTxInterruptHandler:
  8963                           
  8964                           	psect	text25
  8965  0B73                     __ptext25:	
  8966 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  8967 ;; Defined at:
  8968 ;;		line 284 in file "eusart.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8971 ;;		 -> EUSART_Receive_ISR(1), 
  8972 ;; Auto vars:     Size  Location     Type
  8973 ;;		None
  8974 ;; Return value:  Size  Location     Type
  8975 ;;                  1    wreg      void 
  8976 ;; Registers used:
  8977 ;;		wreg
  8978 ;; Tracked objects:
  8979 ;;		On entry : 0/0
  8980 ;;		On exit  : 0/0
  8981 ;;		Unchanged: 0/0
  8982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8983 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;Total ram usage:        2 bytes
  8988 ;; Hardware stack levels used: 1
  8989 ;; Hardware stack levels required when called: 4
  8990 ;; This function calls:
  8991 ;;		Nothing
  8992 ;; This function is called by:
  8993 ;;		_EUSART_Initialize
  8994 ;; This function uses a non-reentrant model
  8995 ;;
  8996                           
  8997  0B73                     _EUSART_SetRxInterruptHandler:	
  8998                           ;psect for function _EUSART_SetRxInterruptHandler
  8999                           
  9000  0B73                     l2956:	
  9001                           ;incstack = 0
  9002                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  9003                           
  9004                           
  9005                           ;eusart.c: 285:     EUSART_RxDefaultInterruptHandler = interruptHandler;
  9006  0B73  0020               	movlb	0	; select bank0
  9007  0B74  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  9008  0B75  0021               	movlb	1	; select bank1
  9009  0B76  00AF               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  9010  0B77  0020               	movlb	0	; select bank0
  9011  0B78  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  9012  0B79  0021               	movlb	1	; select bank1
  9013  0B7A  00AE               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  9014  0B7B                     l707:
  9015  0B7B  0008               	return
  9016  0B7C                     __end_of_EUSART_SetRxInterruptHandler:
  9017                           
  9018                           	psect	text26
  9019  0B6A                     __ptext26:	
  9020 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  9021 ;; Defined at:
  9022 ;;		line 266 in file "eusart.c"
  9023 ;; Parameters:    Size  Location     Type
  9024 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9025 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  9026 ;; Auto vars:     Size  Location     Type
  9027 ;;		None
  9028 ;; Return value:  Size  Location     Type
  9029 ;;                  1    wreg      void 
  9030 ;; Registers used:
  9031 ;;		wreg
  9032 ;; Tracked objects:
  9033 ;;		On entry : 0/0
  9034 ;;		On exit  : 0/0
  9035 ;;		Unchanged: 0/0
  9036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9037 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9040 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9041 ;;Total ram usage:        2 bytes
  9042 ;; Hardware stack levels used: 1
  9043 ;; Hardware stack levels required when called: 4
  9044 ;; This function calls:
  9045 ;;		Nothing
  9046 ;; This function is called by:
  9047 ;;		_EUSART_Initialize
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051  0B6A                     _EUSART_SetOverrunErrorHandler:	
  9052                           ;psect for function _EUSART_SetOverrunErrorHandler
  9053                           
  9054  0B6A                     l2962:	
  9055                           ;incstack = 0
  9056                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  9057                           
  9058                           
  9059                           ;eusart.c: 267:     EUSART_OverrunErrorHandler = interruptHandler;
  9060  0B6A  0020               	movlb	0	; select bank0
  9061  0B6B  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  9062  0B6C  0021               	movlb	1	; select bank1
  9063  0B6D  00AB               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  9064  0B6E  0020               	movlb	0	; select bank0
  9065  0B6F  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  9066  0B70  0021               	movlb	1	; select bank1
  9067  0B71  00AA               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  9068  0B72                     l698:
  9069  0B72  0008               	return
  9070  0B73                     __end_of_EUSART_SetOverrunErrorHandler:
  9071                           
  9072                           	psect	text27
  9073  0B61                     __ptext27:	
  9074 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  9075 ;; Defined at:
  9076 ;;		line 260 in file "eusart.c"
  9077 ;; Parameters:    Size  Location     Type
  9078 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9079 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;		None
  9082 ;; Return value:  Size  Location     Type
  9083 ;;                  1    wreg      void 
  9084 ;; Registers used:
  9085 ;;		wreg
  9086 ;; Tracked objects:
  9087 ;;		On entry : 0/0
  9088 ;;		On exit  : 0/0
  9089 ;;		Unchanged: 0/0
  9090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9091 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9094 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9095 ;;Total ram usage:        2 bytes
  9096 ;; Hardware stack levels used: 1
  9097 ;; Hardware stack levels required when called: 4
  9098 ;; This function calls:
  9099 ;;		Nothing
  9100 ;; This function is called by:
  9101 ;;		_EUSART_Initialize
  9102 ;; This function uses a non-reentrant model
  9103 ;;
  9104                           
  9105  0B61                     _EUSART_SetFramingErrorHandler:	
  9106                           ;psect for function _EUSART_SetFramingErrorHandler
  9107                           
  9108  0B61                     l2960:	
  9109                           ;incstack = 0
  9110                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9111                           
  9112                           
  9113                           ;eusart.c: 261:     EUSART_FramingErrorHandler = interruptHandler;
  9114  0B61  0020               	movlb	0	; select bank0
  9115  0B62  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  9116  0B63  0021               	movlb	1	; select bank1
  9117  0B64  00AD               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  9118  0B65  0020               	movlb	0	; select bank0
  9119  0B66  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  9120  0B67  0021               	movlb	1	; select bank1
  9121  0B68  00AC               	movwf	_EUSART_FramingErrorHandler^(0+128)
  9122  0B69                     l695:
  9123  0B69  0008               	return
  9124  0B6A                     __end_of_EUSART_SetFramingErrorHandler:
  9125                           
  9126                           	psect	text28
  9127  0B58                     __ptext28:	
  9128 ;; *************** function _EUSART_SetErrorHandler *****************
  9129 ;; Defined at:
  9130 ;;		line 272 in file "eusart.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9133 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9134 ;; Auto vars:     Size  Location     Type
  9135 ;;		None
  9136 ;; Return value:  Size  Location     Type
  9137 ;;                  1    wreg      void 
  9138 ;; Registers used:
  9139 ;;		wreg
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9145 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9148 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9149 ;;Total ram usage:        2 bytes
  9150 ;; Hardware stack levels used: 1
  9151 ;; Hardware stack levels required when called: 4
  9152 ;; This function calls:
  9153 ;;		Nothing
  9154 ;; This function is called by:
  9155 ;;		_EUSART_Initialize
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159  0B58                     _EUSART_SetErrorHandler:	
  9160                           ;psect for function _EUSART_SetErrorHandler
  9161                           
  9162  0B58                     l2964:	
  9163                           ;incstack = 0
  9164                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9165                           
  9166                           
  9167                           ;eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  9168  0B58  0020               	movlb	0	; select bank0
  9169  0B59  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9170  0B5A  0021               	movlb	1	; select bank1
  9171  0B5B  00A9               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  9172  0B5C  0020               	movlb	0	; select bank0
  9173  0B5D  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9174  0B5E  0021               	movlb	1	; select bank1
  9175  0B5F  00A8               	movwf	_EUSART_ErrorHandler^(0+128)
  9176  0B60                     l701:
  9177  0B60  0008               	return
  9178  0B61                     __end_of_EUSART_SetErrorHandler:
  9179                           
  9180                           	psect	text29
  9181  0C9A                     __ptext29:	
  9182 ;; *************** function _CCP3_Initialize *****************
  9183 ;; Defined at:
  9184 ;;		line 50 in file "ccp3.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;		None
  9187 ;; Auto vars:     Size  Location     Type
  9188 ;;		None
  9189 ;; Return value:  Size  Location     Type
  9190 ;;                  1    wreg      void 
  9191 ;; Registers used:
  9192 ;;		wreg, status,2, status,0, pclath, cstack
  9193 ;; Tracked objects:
  9194 ;;		On entry : 0/0
  9195 ;;		On exit  : 0/0
  9196 ;;		Unchanged: 0/0
  9197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9202 ;;Total ram usage:        0 bytes
  9203 ;; Hardware stack levels used: 1
  9204 ;; Hardware stack levels required when called: 5
  9205 ;; This function calls:
  9206 ;;		_CCP3_SetCallBack
  9207 ;; This function is called by:
  9208 ;;		_SYSTEM_Initialize
  9209 ;; This function uses a non-reentrant model
  9210 ;;
  9211                           
  9212  0C9A                     _CCP3_Initialize:	
  9213                           ;psect for function _CCP3_Initialize
  9214                           
  9215  0C9A                     l3162:	
  9216                           ;incstack = 0
  9217                           ; Regs used in _CCP3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9218                           
  9219                           
  9220                           ;ccp3.c: 55:  CCP3CON = 0x83;
  9221  0C9A  3083               	movlw	131
  9222  0C9B  0026               	movlb	6	; select bank6
  9223  0C9C  0093               	movwf	19	;volatile
  9224  0C9D                     l3164:
  9225                           
  9226                           ;ccp3.c: 58:  CCP3CAP = 0x00;
  9227  0C9D  0194               	clrf	20	;volatile
  9228  0C9E                     l3166:
  9229                           
  9230                           ;ccp3.c: 61:  CCPR3H = 0x00;
  9231  0C9E  0192               	clrf	18	;volatile
  9232  0C9F                     l3168:
  9233                           
  9234                           ;ccp3.c: 64:  CCPR3L = 0x00;
  9235  0C9F  0191               	clrf	17	;volatile
  9236  0CA0                     l3170:
  9237                           
  9238                           ;ccp3.c: 67:     CCP3_SetCallBack(CCP3_DefaultCallBack);
  9239  0CA0  3003               	movlw	low _CCP3_DefaultCallBack
  9240  0CA1  0020               	movlb	0	; select bank0
  9241  0CA2  00A0               	movwf	CCP3_SetCallBack@customCallBack
  9242  0CA3  300F               	movlw	high _CCP3_DefaultCallBack
  9243  0CA4  00A1               	movwf	CCP3_SetCallBack@customCallBack+1
  9244  0CA5  318B  234F  318C   	fcall	_CCP3_SetCallBack
  9245  0CA8                     l3172:
  9246                           
  9247                           ;ccp3.c: 70:  CCPTMRSbits.C3TSEL = 0x1;
  9248  0CA8  0025               	movlb	5	; select bank5
  9249  0CA9  081F               	movf	31,w	;volatile
  9250  0CAA  39CF               	andlw	-49
  9251  0CAB  3810               	iorlw	16
  9252  0CAC  009F               	movwf	31	;volatile
  9253  0CAD                     l3174:
  9254                           
  9255                           ;ccp3.c: 73:     PIR4bits.CCP3IF = 0;
  9256  0CAD  0020               	movlb	0	; select bank0
  9257  0CAE  1114               	bcf	20,2	;volatile
  9258  0CAF                     l3176:
  9259                           
  9260                           ;ccp3.c: 76:     PIE4bits.CCP3IE = 1;
  9261  0CAF  0021               	movlb	1	; select bank1
  9262  0CB0  1514               	bsf	20,2	;volatile
  9263  0CB1                     l488:
  9264  0CB1  0008               	return
  9265  0CB2                     __end_of_CCP3_Initialize:
  9266                           
  9267                           	psect	text30
  9268  0B4F                     __ptext30:	
  9269 ;; *************** function _CCP3_SetCallBack *****************
  9270 ;; Defined at:
  9271 ;;		line 98 in file "ccp3.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  9274 ;;		 -> CCP3_DefaultCallBack(1), 
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;		None
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  1    wreg      void 
  9279 ;; Registers used:
  9280 ;;		wreg
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9286 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9289 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9290 ;;Total ram usage:        2 bytes
  9291 ;; Hardware stack levels used: 1
  9292 ;; Hardware stack levels required when called: 4
  9293 ;; This function calls:
  9294 ;;		Nothing
  9295 ;; This function is called by:
  9296 ;;		_CCP3_Initialize
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300  0B4F                     _CCP3_SetCallBack:	
  9301                           ;psect for function _CCP3_SetCallBack
  9302                           
  9303  0B4F                     l2952:	
  9304                           ;incstack = 0
  9305                           ; Regs used in _CCP3_SetCallBack: [wreg]
  9306                           
  9307                           
  9308                           ;ccp3.c: 99:     CCP3_CallBack = customCallBack;
  9309  0B4F  0020               	movlb	0	; select bank0
  9310  0B50  0821               	movf	CCP3_SetCallBack@customCallBack+1,w
  9311  0B51  0021               	movlb	1	; select bank1
  9312  0B52  00BB               	movwf	(_CCP3_CallBack+1)^(0+128)
  9313  0B53  0020               	movlb	0	; select bank0
  9314  0B54  0820               	movf	CCP3_SetCallBack@customCallBack,w
  9315  0B55  0021               	movlb	1	; select bank1
  9316  0B56  00BA               	movwf	_CCP3_CallBack^(0+128)
  9317  0B57                     l494:
  9318  0B57  0008               	return
  9319  0B58                     __end_of_CCP3_SetCallBack:
  9320                           
  9321                           	psect	text31
  9322  0C82                     __ptext31:	
  9323 ;; *************** function _CCP2_Initialize *****************
  9324 ;; Defined at:
  9325 ;;		line 50 in file "ccp2.c"
  9326 ;; Parameters:    Size  Location     Type
  9327 ;;		None
  9328 ;; Auto vars:     Size  Location     Type
  9329 ;;		None
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  1    wreg      void 
  9332 ;; Registers used:
  9333 ;;		wreg, status,2, status,0, pclath, cstack
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9343 ;;Total ram usage:        0 bytes
  9344 ;; Hardware stack levels used: 1
  9345 ;; Hardware stack levels required when called: 5
  9346 ;; This function calls:
  9347 ;;		_CCP2_SetCallBack
  9348 ;; This function is called by:
  9349 ;;		_SYSTEM_Initialize
  9350 ;; This function uses a non-reentrant model
  9351 ;;
  9352                           
  9353  0C82                     _CCP2_Initialize:	
  9354                           ;psect for function _CCP2_Initialize
  9355                           
  9356  0C82                     l3146:	
  9357                           ;incstack = 0
  9358                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9359                           
  9360                           
  9361                           ;ccp2.c: 55:  CCP2CON = 0x83;
  9362  0C82  3083               	movlw	131
  9363  0C83  0025               	movlb	5	; select bank5
  9364  0C84  0097               	movwf	23	;volatile
  9365  0C85                     l3148:
  9366                           
  9367                           ;ccp2.c: 58:  CCP2CAP = 0x00;
  9368  0C85  0198               	clrf	24	;volatile
  9369  0C86                     l3150:
  9370                           
  9371                           ;ccp2.c: 61:  CCPR2H = 0x00;
  9372  0C86  0196               	clrf	22	;volatile
  9373  0C87                     l3152:
  9374                           
  9375                           ;ccp2.c: 64:  CCPR2L = 0x00;
  9376  0C87  0195               	clrf	21	;volatile
  9377  0C88                     l3154:
  9378                           
  9379                           ;ccp2.c: 67:     CCP2_SetCallBack(CCP2_DefaultCallBack);
  9380  0C88  30C6               	movlw	low _CCP2_DefaultCallBack
  9381  0C89  0020               	movlb	0	; select bank0
  9382  0C8A  00A0               	movwf	CCP2_SetCallBack@customCallBack
  9383  0C8B  300E               	movlw	high _CCP2_DefaultCallBack
  9384  0C8C  00A1               	movwf	CCP2_SetCallBack@customCallBack+1
  9385  0C8D  318B  2346  318C   	fcall	_CCP2_SetCallBack
  9386  0C90                     l3156:
  9387                           
  9388                           ;ccp2.c: 70:  CCPTMRSbits.C2TSEL = 0x1;
  9389  0C90  0025               	movlb	5	; select bank5
  9390  0C91  081F               	movf	31,w	;volatile
  9391  0C92  39F3               	andlw	-13
  9392  0C93  3804               	iorlw	4
  9393  0C94  009F               	movwf	31	;volatile
  9394  0C95                     l3158:
  9395                           
  9396                           ;ccp2.c: 73:     PIR4bits.CCP2IF = 0;
  9397  0C95  0020               	movlb	0	; select bank0
  9398  0C96  1094               	bcf	20,1	;volatile
  9399  0C97                     l3160:
  9400                           
  9401                           ;ccp2.c: 76:     PIE4bits.CCP2IE = 1;
  9402  0C97  0021               	movlb	1	; select bank1
  9403  0C98  1494               	bsf	20,1	;volatile
  9404  0C99                     l442:
  9405  0C99  0008               	return
  9406  0C9A                     __end_of_CCP2_Initialize:
  9407                           
  9408                           	psect	text32
  9409  0B46                     __ptext32:	
  9410 ;; *************** function _CCP2_SetCallBack *****************
  9411 ;; Defined at:
  9412 ;;		line 98 in file "ccp2.c"
  9413 ;; Parameters:    Size  Location     Type
  9414 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  9415 ;;		 -> CCP2_DefaultCallBack(1), 
  9416 ;; Auto vars:     Size  Location     Type
  9417 ;;		None
  9418 ;; Return value:  Size  Location     Type
  9419 ;;                  1    wreg      void 
  9420 ;; Registers used:
  9421 ;;		wreg
  9422 ;; Tracked objects:
  9423 ;;		On entry : 0/0
  9424 ;;		On exit  : 0/0
  9425 ;;		Unchanged: 0/0
  9426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9427 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9430 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9431 ;;Total ram usage:        2 bytes
  9432 ;; Hardware stack levels used: 1
  9433 ;; Hardware stack levels required when called: 4
  9434 ;; This function calls:
  9435 ;;		Nothing
  9436 ;; This function is called by:
  9437 ;;		_CCP2_Initialize
  9438 ;; This function uses a non-reentrant model
  9439 ;;
  9440                           
  9441  0B46                     _CCP2_SetCallBack:	
  9442                           ;psect for function _CCP2_SetCallBack
  9443                           
  9444  0B46                     l2950:	
  9445                           ;incstack = 0
  9446                           ; Regs used in _CCP2_SetCallBack: [wreg]
  9447                           
  9448                           
  9449                           ;ccp2.c: 99:     CCP2_CallBack = customCallBack;
  9450  0B46  0020               	movlb	0	; select bank0
  9451  0B47  0821               	movf	CCP2_SetCallBack@customCallBack+1,w
  9452  0B48  0021               	movlb	1	; select bank1
  9453  0B49  00C1               	movwf	(_CCP2_CallBack+1)^(0+128)
  9454  0B4A  0020               	movlb	0	; select bank0
  9455  0B4B  0820               	movf	CCP2_SetCallBack@customCallBack,w
  9456  0B4C  0021               	movlb	1	; select bank1
  9457  0B4D  00C0               	movwf	_CCP2_CallBack^(0+128)
  9458  0B4E                     l448:
  9459  0B4E  0008               	return
  9460  0B4F                     __end_of_CCP2_SetCallBack:
  9461                           
  9462                           	psect	text33
  9463  0C6A                     __ptext33:	
  9464 ;; *************** function _CCP1_Initialize *****************
  9465 ;; Defined at:
  9466 ;;		line 50 in file "ccp1.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;		None
  9469 ;; Auto vars:     Size  Location     Type
  9470 ;;		None
  9471 ;; Return value:  Size  Location     Type
  9472 ;;                  1    wreg      void 
  9473 ;; Registers used:
  9474 ;;		wreg, status,2, status,0, pclath, cstack
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9484 ;;Total ram usage:        0 bytes
  9485 ;; Hardware stack levels used: 1
  9486 ;; Hardware stack levels required when called: 5
  9487 ;; This function calls:
  9488 ;;		_CCP1_SetCallBack
  9489 ;; This function is called by:
  9490 ;;		_SYSTEM_Initialize
  9491 ;; This function uses a non-reentrant model
  9492 ;;
  9493                           
  9494  0C6A                     _CCP1_Initialize:	
  9495                           ;psect for function _CCP1_Initialize
  9496                           
  9497  0C6A                     l3178:	
  9498                           ;incstack = 0
  9499                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9500                           
  9501                           
  9502                           ;ccp1.c: 55:  CCP1CON = 0x83;
  9503  0C6A  3083               	movlw	131
  9504  0C6B  0025               	movlb	5	; select bank5
  9505  0C6C  0093               	movwf	19	;volatile
  9506  0C6D                     l3180:
  9507                           
  9508                           ;ccp1.c: 58:  CCP1CAP = 0x00;
  9509  0C6D  0194               	clrf	20	;volatile
  9510  0C6E                     l3182:
  9511                           
  9512                           ;ccp1.c: 61:  CCPR1H = 0x00;
  9513  0C6E  0192               	clrf	18	;volatile
  9514  0C6F                     l3184:
  9515                           
  9516                           ;ccp1.c: 64:  CCPR1L = 0x00;
  9517  0C6F  0191               	clrf	17	;volatile
  9518  0C70                     l3186:
  9519                           
  9520                           ;ccp1.c: 67:     CCP1_SetCallBack(CCP1_DefaultCallBack);
  9521  0C70  3089               	movlw	low _CCP1_DefaultCallBack
  9522  0C71  0020               	movlb	0	; select bank0
  9523  0C72  00A0               	movwf	CCP1_SetCallBack@customCallBack
  9524  0C73  300E               	movlw	high _CCP1_DefaultCallBack
  9525  0C74  00A1               	movwf	CCP1_SetCallBack@customCallBack+1
  9526  0C75  318B  233D  318C   	fcall	_CCP1_SetCallBack
  9527  0C78                     l3188:
  9528                           
  9529                           ;ccp1.c: 70:  CCPTMRSbits.C1TSEL = 0x1;
  9530  0C78  0025               	movlb	5	; select bank5
  9531  0C79  081F               	movf	31,w	;volatile
  9532  0C7A  39FC               	andlw	-4
  9533  0C7B  3801               	iorlw	1
  9534  0C7C  009F               	movwf	31	;volatile
  9535  0C7D                     l3190:
  9536                           
  9537                           ;ccp1.c: 73:     PIR4bits.CCP1IF = 0;
  9538  0C7D  0020               	movlb	0	; select bank0
  9539  0C7E  1014               	bcf	20,0	;volatile
  9540  0C7F                     l3192:
  9541                           
  9542                           ;ccp1.c: 76:     PIE4bits.CCP1IE = 1;
  9543  0C7F  0021               	movlb	1	; select bank1
  9544  0C80  1414               	bsf	20,0	;volatile
  9545  0C81                     l396:
  9546  0C81  0008               	return
  9547  0C82                     __end_of_CCP1_Initialize:
  9548                           
  9549                           	psect	text34
  9550  0B3D                     __ptext34:	
  9551 ;; *************** function _CCP1_SetCallBack *****************
  9552 ;; Defined at:
  9553 ;;		line 98 in file "ccp1.c"
  9554 ;; Parameters:    Size  Location     Type
  9555 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  9556 ;;		 -> CCP1_DefaultCallBack(1), 
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;		None
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      void 
  9561 ;; Registers used:
  9562 ;;		wreg
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9568 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9571 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9572 ;;Total ram usage:        2 bytes
  9573 ;; Hardware stack levels used: 1
  9574 ;; Hardware stack levels required when called: 4
  9575 ;; This function calls:
  9576 ;;		Nothing
  9577 ;; This function is called by:
  9578 ;;		_CCP1_Initialize
  9579 ;; This function uses a non-reentrant model
  9580 ;;
  9581                           
  9582  0B3D                     _CCP1_SetCallBack:	
  9583                           ;psect for function _CCP1_SetCallBack
  9584                           
  9585  0B3D                     l2948:	
  9586                           ;incstack = 0
  9587                           ; Regs used in _CCP1_SetCallBack: [wreg]
  9588                           
  9589                           
  9590                           ;ccp1.c: 99:     CCP1_CallBack = customCallBack;
  9591  0B3D  0020               	movlb	0	; select bank0
  9592  0B3E  0821               	movf	CCP1_SetCallBack@customCallBack+1,w
  9593  0B3F  0021               	movlb	1	; select bank1
  9594  0B40  00C7               	movwf	(_CCP1_CallBack+1)^(0+128)
  9595  0B41  0020               	movlb	0	; select bank0
  9596  0B42  0820               	movf	CCP1_SetCallBack@customCallBack,w
  9597  0B43  0021               	movlb	1	; select bank1
  9598  0B44  00C6               	movwf	_CCP1_CallBack^(0+128)
  9599  0B45                     l402:
  9600  0B45  0008               	return
  9601  0B46                     __end_of_CCP1_SetCallBack:
  9602                           
  9603                           	psect	text35
  9604  075A                     __ptext35:	
  9605 ;; *************** function _JSN_Sensor_Trig *****************
  9606 ;; Defined at:
  9607 ;;		line 85 in file "JSN_Sensor.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;  Sensor          1    wreg     PTR struct .
  9610 ;;		 -> Sens2(6), Sens1(6), 
  9611 ;; Auto vars:     Size  Location     Type
  9612 ;;  Sensor          1   10[BANK0 ] PTR struct .
  9613 ;;		 -> Sens2(6), Sens1(6), 
  9614 ;; Return value:  Size  Location     Type
  9615 ;;                  1    wreg      void 
  9616 ;; Registers used:
  9617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9618 ;; Tracked objects:
  9619 ;;		On entry : 0/0
  9620 ;;		On exit  : 0/0
  9621 ;;		Unchanged: 0/0
  9622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9624 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9625 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9626 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9627 ;;Total ram usage:        5 bytes
  9628 ;; Hardware stack levels used: 1
  9629 ;; Hardware stack levels required when called: 6
  9630 ;; This function calls:
  9631 ;;		_FRT_GetMicros
  9632 ;;		_WritePin
  9633 ;; This function is called by:
  9634 ;;		_main
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637                           
  9638  075A                     _JSN_Sensor_Trig:	
  9639                           ;psect for function _JSN_Sensor_Trig
  9640                           
  9641                           
  9642                           ;incstack = 0
  9643                           ; Regs used in _JSN_Sensor_Trig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9644                           ;JSN_Sensor_Trig@Sensor stored from wreg
  9645  075A  0020               	movlb	0	; select bank0
  9646  075B  00AA               	movwf	JSN_Sensor_Trig@Sensor
  9647  075C                     l3636:
  9648                           
  9649                           ;JSN_Sensor.c: 86:     micros = FRT_GetMicros();
  9650  075C  318D  2501  3187   	fcall	_FRT_GetMicros
  9651  075F  0020               	movlb	0	; select bank0
  9652  0760  0825               	movf	?_FRT_GetMicros+3,w
  9653  0761  0022               	movlb	2	; select bank2
  9654  0762  00C9               	movwf	(_micros+3)^(0+256)
  9655  0763  0020               	movlb	0	; select bank0
  9656  0764  0824               	movf	?_FRT_GetMicros+2,w
  9657  0765  0022               	movlb	2	; select bank2
  9658  0766  00C8               	movwf	(_micros+2)^(0+256)
  9659  0767  0020               	movlb	0	; select bank0
  9660  0768  0823               	movf	?_FRT_GetMicros+1,w
  9661  0769  0022               	movlb	2	; select bank2
  9662  076A  00C7               	movwf	(_micros+1)^(0+256)
  9663  076B  0020               	movlb	0	; select bank0
  9664  076C  0822               	movf	?_FRT_GetMicros,w
  9665  076D  0022               	movlb	2	; select bank2
  9666  076E  00C6               	movwf	_micros^(0+256)
  9667  076F                     l3638:
  9668                           
  9669                           ;JSN_Sensor.c: 89:     WritePin(Sensor->trigPin, 1);
  9670  076F  0020               	movlb	0	; select bank0
  9671  0770  01A0               	clrf	WritePin@val
  9672  0771  0AA0               	incf	WritePin@val,f
  9673  0772  082A               	movf	JSN_Sensor_Trig@Sensor,w
  9674  0773  3E04               	addlw	4
  9675  0774  0086               	movwf	6
  9676  0775  0187               	clrf	7
  9677  0776  0801               	movf	1,w
  9678  0777  3183  2322  3187   	fcall	_WritePin
  9679  077A                     l3640:	
  9680                           ;JSN_Sensor.c: 92:     while ((FRT_GetMicros() - micros) < 11);
  9681                           
  9682  077A  318D  2501  3187   	fcall	_FRT_GetMicros
  9683  077D  0022               	movlb	2	; select bank2
  9684  077E  0846               	movf	_micros^(0+256),w
  9685  077F  0020               	movlb	0	; select bank0
  9686  0780  0222               	subwf	?_FRT_GetMicros,w
  9687  0781  00A6               	movwf	??_JSN_Sensor_Trig
  9688  0782  0022               	movlb	2	; select bank2
  9689  0783  0847               	movf	(_micros+1)^(0+256),w
  9690  0784  0020               	movlb	0	; select bank0
  9691  0785  3B23               	subwfb	?_FRT_GetMicros+1,w
  9692  0786  00A7               	movwf	??_JSN_Sensor_Trig+1
  9693  0787  0022               	movlb	2	; select bank2
  9694  0788  0848               	movf	(_micros+2)^(0+256),w
  9695  0789  0020               	movlb	0	; select bank0
  9696  078A  3B24               	subwfb	?_FRT_GetMicros+2,w
  9697  078B  00A8               	movwf	??_JSN_Sensor_Trig+2
  9698  078C  0022               	movlb	2	; select bank2
  9699  078D  0849               	movf	(_micros+3)^(0+256),w
  9700  078E  0020               	movlb	0	; select bank0
  9701  078F  3B25               	subwfb	?_FRT_GetMicros+3,w
  9702  0790  00A9               	movwf	??_JSN_Sensor_Trig+3
  9703  0791  0829               	movf	??_JSN_Sensor_Trig+3,w
  9704  0792  1D03               	btfss	3,2
  9705  0793  2FA0               	goto	u1230
  9706  0794  0828               	movf	??_JSN_Sensor_Trig+2,w
  9707  0795  1D03               	btfss	3,2
  9708  0796  2FA0               	goto	u1230
  9709  0797  0827               	movf	??_JSN_Sensor_Trig+1,w
  9710  0798  1D03               	btfss	3,2
  9711  0799  2FA0               	goto	u1230
  9712  079A  300B               	movlw	11
  9713  079B  0226               	subwf	??_JSN_Sensor_Trig,w
  9714  079C  1C03               	btfss	3,0
  9715  079D  2F9F               	goto	u1231
  9716  079E  2FA0               	goto	u1230
  9717  079F                     u1231:
  9718  079F  2F7A               	goto	l3640
  9719  07A0                     u1230:
  9720  07A0                     l3642:
  9721                           
  9722                           ;JSN_Sensor.c: 95:     WritePin(Sensor->trigPin, 0);
  9723  07A0  0020               	movlb	0	; select bank0
  9724  07A1  01A0               	clrf	WritePin@val
  9725  07A2  082A               	movf	JSN_Sensor_Trig@Sensor,w
  9726  07A3  3E04               	addlw	4
  9727  07A4  0086               	movwf	6
  9728  07A5  0187               	clrf	7
  9729  07A6  0801               	movf	1,w
  9730  07A7  3183  2322  3187   	fcall	_WritePin
  9731  07AA                     l3644:
  9732                           
  9733                           ;JSN_Sensor.c: 98:     lastTrig = Sensor;
  9734  07AA  0020               	movlb	0	; select bank0
  9735  07AB  082A               	movf	JSN_Sensor_Trig@Sensor,w
  9736  07AC  00A6               	movwf	??_JSN_Sensor_Trig
  9737  07AD  0826               	movf	??_JSN_Sensor_Trig,w
  9738  07AE  0021               	movlb	1	; select bank1
  9739  07AF  00D3               	movwf	_lastTrig^(0+128)
  9740  07B0                     l54:
  9741  07B0  0008               	return
  9742  07B1                     __end_of_JSN_Sensor_Trig:
  9743                           
  9744                           	psect	text36
  9745  0D01                     __ptext36:	
  9746 ;; *************** function _FRT_GetMicros *****************
  9747 ;; Defined at:
  9748 ;;		line 36 in file "FRT.c"
  9749 ;; Parameters:    Size  Location     Type
  9750 ;;		None
  9751 ;; Auto vars:     Size  Location     Type
  9752 ;;		None
  9753 ;; Return value:  Size  Location     Type
  9754 ;;                  4    2[BANK0 ] unsigned long 
  9755 ;; Registers used:
  9756 ;;		wreg, pclath, cstack
  9757 ;; Tracked objects:
  9758 ;;		On entry : 0/0
  9759 ;;		On exit  : 0/0
  9760 ;;		Unchanged: 0/0
  9761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9762 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9765 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9766 ;;Total ram usage:        4 bytes
  9767 ;; Hardware stack levels used: 1
  9768 ;; Hardware stack levels required when called: 5
  9769 ;; This function calls:
  9770 ;;		_TMR0_ReadTimer
  9771 ;; This function is called by:
  9772 ;;		_JSN_Sensor_Trig
  9773 ;; This function uses a non-reentrant model
  9774 ;;
  9775                           
  9776  0D01                     _FRT_GetMicros:	
  9777                           ;psect for function _FRT_GetMicros
  9778                           
  9779  0D01                     l3474:	
  9780                           ;incstack = 0
  9781                           ; Regs used in _FRT_GetMicros: [wreg+pclath+cstack]
  9782                           
  9783                           
  9784                           ;FRT.c: 37:     return (micros + TMR0_ReadTimer());
  9785  0D01  318B  232F  318D   	fcall	_TMR0_ReadTimer
  9786  0D04  0022               	movlb	2	; select bank2
  9787  0D05  073E               	addwf	_micros@FRT$F1533^(0+256),w
  9788  0D06  0020               	movlb	0	; select bank0
  9789  0D07  00A2               	movwf	?_FRT_GetMicros
  9790  0D08  0022               	movlb	2	; select bank2
  9791  0D09  083F               	movf	(_micros@FRT$F1533+1)^(0+256),w
  9792  0D0A  1803               	skipnc
  9793  0D0B  0F3F               	incfsz	(_micros@FRT$F1533+1)^(0+256),w
  9794  0D0C  1003               	clrc
  9795  0D0D  0020               	movlb	0	; select bank0
  9796  0D0E  00A3               	movwf	?_FRT_GetMicros+1
  9797  0D0F  0022               	movlb	2	; select bank2
  9798  0D10  0840               	movf	(_micros@FRT$F1533+2)^(0+256),w
  9799  0D11  1803               	skipnc
  9800  0D12  0F40               	incfsz	(_micros@FRT$F1533+2)^(0+256),w
  9801  0D13  1003               	clrc
  9802  0D14  0020               	movlb	0	; select bank0
  9803  0D15  00A4               	movwf	?_FRT_GetMicros+2
  9804  0D16  0022               	movlb	2	; select bank2
  9805  0D17  0841               	movf	(_micros@FRT$F1533+3)^(0+256),w
  9806  0D18  1803               	skipnc
  9807  0D19  0A41               	incf	(_micros@FRT$F1533+3)^(0+256),w
  9808  0D1A  0020               	movlb	0	; select bank0
  9809  0D1B  00A5               	movwf	?_FRT_GetMicros+3
  9810  0D1C                     l824:
  9811  0D1C  0008               	return
  9812  0D1D                     __end_of_FRT_GetMicros:
  9813                           
  9814                           	psect	text37
  9815  0B2F                     __ptext37:	
  9816 ;; *************** function _TMR0_ReadTimer *****************
  9817 ;; Defined at:
  9818 ;;		line 62 in file "tmr0.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;		None
  9821 ;; Auto vars:     Size  Location     Type
  9822 ;;  readVal         1    1[BANK0 ] unsigned char 
  9823 ;; Return value:  Size  Location     Type
  9824 ;;                  1    wreg      unsigned char 
  9825 ;; Registers used:
  9826 ;;		wreg
  9827 ;; Tracked objects:
  9828 ;;		On entry : 0/0
  9829 ;;		On exit  : 0/0
  9830 ;;		Unchanged: 0/0
  9831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9833 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9834 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9835 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9836 ;;Total ram usage:        2 bytes
  9837 ;; Hardware stack levels used: 1
  9838 ;; Hardware stack levels required when called: 4
  9839 ;; This function calls:
  9840 ;;		Nothing
  9841 ;; This function is called by:
  9842 ;;		_FRT_GetMicros
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846  0B2F                     _TMR0_ReadTimer:	
  9847                           ;psect for function _TMR0_ReadTimer
  9848                           
  9849  0B2F                     l3250:	
  9850                           ;incstack = 0
  9851                           ; Regs used in _TMR0_ReadTimer: [wreg]
  9852                           
  9853                           
  9854                           ;tmr0.c: 64:     uint8_t readVal;;tmr0.c: 67:     readVal = TMR0L;
  9855  0B2F  0020               	movlb	0	; select bank0
  9856  0B30  0815               	movf	21,w	;volatile
  9857  0B31  00A0               	movwf	??_TMR0_ReadTimer
  9858  0B32  0820               	movf	??_TMR0_ReadTimer,w
  9859  0B33  00A1               	movwf	TMR0_ReadTimer@readVal
  9860                           
  9861                           ;tmr0.c: 69:     return readVal;
  9862  0B34  0821               	movf	TMR0_ReadTimer@readVal,w
  9863  0B35                     l335:
  9864  0B35  0008               	return
  9865  0B36                     __end_of_TMR0_ReadTimer:
  9866                           
  9867                           	psect	text38
  9868  05B3                     __ptext38:	
  9869 ;; *************** function _JSN_Sensor_Init *****************
  9870 ;; Defined at:
  9871 ;;		line 33 in file "JSN_Sensor.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  Sensor          1    wreg     PTR struct .
  9874 ;;		 -> Sens2(6), Sens1(6), 
  9875 ;;  trigPin         1    4[BANK0 ] enum E7110
  9876 ;;  echoPin         1    5[BANK0 ] enum E7110
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;  Sensor          1    8[BANK0 ] PTR struct .
  9879 ;;		 -> Sens2(6), Sens1(6), 
  9880 ;; Return value:  Size  Location     Type
  9881 ;;                  1    wreg      unsigned char 
  9882 ;; Registers used:
  9883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9884 ;; Tracked objects:
  9885 ;;		On entry : 0/0
  9886 ;;		On exit  : 0/0
  9887 ;;		Unchanged: 0/0
  9888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9889 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9890 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9892 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9893 ;;Total ram usage:        5 bytes
  9894 ;; Hardware stack levels used: 1
  9895 ;; Hardware stack levels required when called: 5
  9896 ;; This function calls:
  9897 ;;		_SetPin
  9898 ;;		_WritePin
  9899 ;; This function is called by:
  9900 ;;		_main
  9901 ;; This function uses a non-reentrant model
  9902 ;;
  9903                           
  9904  05B3                     _JSN_Sensor_Init:	
  9905                           ;psect for function _JSN_Sensor_Init
  9906                           
  9907                           
  9908                           ;incstack = 0
  9909                           ; Regs used in _JSN_Sensor_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9910                           ;JSN_Sensor_Init@Sensor stored from wreg
  9911  05B3  0020               	movlb	0	; select bank0
  9912  05B4  00A8               	movwf	JSN_Sensor_Init@Sensor
  9913  05B5                     l3598:
  9914                           
  9915                           ;JSN_Sensor.c: 36:     switch (echoPin) {
  9916  05B5  2DBD               	goto	l3604
  9917  05B6                     l28:	
  9918                           ;JSN_Sensor.c: 39:         case C3:
  9919                           
  9920  05B6                     l3600:
  9921                           
  9922                           ;JSN_Sensor.c: 41:             SetPin(echoPin, 1);
  9923  05B6  01A0               	clrf	SetPin@io
  9924  05B7  0AA0               	incf	SetPin@io,f
  9925  05B8  0825               	movf	JSN_Sensor_Init@echoPin,w
  9926  05B9  3183  23DD  3185   	fcall	_SetPin
  9927                           
  9928                           ;JSN_Sensor.c: 42:             break;
  9929  05BC  2DDF               	goto	l3610
  9930  05BD                     l3604:
  9931  05BD  0825               	movf	JSN_Sensor_Init@echoPin,w
  9932  05BE  00A6               	movwf	??_JSN_Sensor_Init
  9933  05BF  01A7               	clrf	??_JSN_Sensor_Init+1
  9934                           
  9935                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9936                           ; Switch size 1, requested type "simple"
  9937                           ; Number of cases is 1, Range of values is 0 to 0
  9938                           ; switch strategies available:
  9939                           ; Name         Instructions Cycles
  9940                           ; simple_byte            4     3 (average)
  9941                           ; direct_byte            8     6 (fixed)
  9942                           ; jumptable            260     6 (fixed)
  9943                           ;	Chosen strategy is simple_byte
  9944  05C0  0827               	movf	??_JSN_Sensor_Init+1,w
  9945  05C1  3A00               	xorlw	0	; case 0
  9946  05C2  1903               	skipnz
  9947  05C3  2DC5               	goto	l4112
  9948  05C4  2E34               	goto	l32
  9949  05C5                     l4112:
  9950                           
  9951                           ; Switch size 1, requested type "simple"
  9952                           ; Number of cases is 4, Range of values is 1 to 11
  9953                           ; switch strategies available:
  9954                           ; Name         Instructions Cycles
  9955                           ; simple_byte           13     7 (average)
  9956                           ; direct_byte           31     9 (fixed)
  9957                           ; jumptable            263     9 (fixed)
  9958                           ;	Chosen strategy is simple_byte
  9959  05C5  0826               	movf	??_JSN_Sensor_Init,w
  9960  05C6  3A01               	xorlw	1	; case 1
  9961  05C7  1903               	skipnz
  9962  05C8  2DB6               	goto	l3600
  9963  05C9  3A02               	xorlw	2	; case 3
  9964  05CA  1903               	skipnz
  9965  05CB  2DB6               	goto	l3600
  9966  05CC  3A06               	xorlw	6	; case 5
  9967  05CD  1903               	skipnz
  9968  05CE  2DB6               	goto	l3600
  9969  05CF  3A0E               	xorlw	14	; case 11
  9970  05D0  1903               	skipnz
  9971  05D1  2DB6               	goto	l28
  9972  05D2  2E34               	goto	l32
  9973  05D3                     l37:	
  9974                           ;JSN_Sensor.c: 52:         case C7:
  9975                           
  9976  05D3                     l3606:
  9977                           
  9978                           ;JSN_Sensor.c: 62:             SetPin(trigPin, 0);
  9979  05D3  01A0               	clrf	SetPin@io
  9980  05D4  0824               	movf	JSN_Sensor_Init@trigPin,w
  9981  05D5  3183  23DD  3185   	fcall	_SetPin
  9982                           
  9983                           ;JSN_Sensor.c: 63:             WritePin(trigPin, 0);
  9984  05D8  0020               	movlb	0	; select bank0
  9985  05D9  01A0               	clrf	WritePin@val
  9986  05DA  0824               	movf	JSN_Sensor_Init@trigPin,w
  9987  05DB  3183  2322  3185   	fcall	_WritePin
  9988                           
  9989                           ;JSN_Sensor.c: 64:             break;
  9990  05DE  2E11               	goto	l3612
  9991  05DF                     l3610:
  9992  05DF  0020               	movlb	0	; select bank0
  9993  05E0  0824               	movf	JSN_Sensor_Init@trigPin,w
  9994  05E1  00A6               	movwf	??_JSN_Sensor_Init
  9995  05E2  01A7               	clrf	??_JSN_Sensor_Init+1
  9996                           
  9997                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9998                           ; Switch size 1, requested type "simple"
  9999                           ; Number of cases is 1, Range of values is 0 to 0
 10000                           ; switch strategies available:
 10001                           ; Name         Instructions Cycles
 10002                           ; simple_byte            4     3 (average)
 10003                           ; direct_byte            8     6 (fixed)
 10004                           ; jumptable            260     6 (fixed)
 10005                           ;	Chosen strategy is simple_byte
 10006  05E3  0827               	movf	??_JSN_Sensor_Init+1,w
 10007  05E4  3A00               	xorlw	0	; case 0
 10008  05E5  1903               	skipnz
 10009  05E6  2DE8               	goto	l4114
 10010  05E7  2E34               	goto	l32
 10011  05E8                     l4114:
 10012                           
 10013                           ; Switch size 1, requested type "simple"
 10014                           ; Number of cases is 13, Range of values is 0 to 17
 10015                           ; switch strategies available:
 10016                           ; Name         Instructions Cycles
 10017                           ; simple_byte           40    21 (average)
 10018                           ; direct_byte           42     6 (fixed)
 10019                           ; jumptable            260     6 (fixed)
 10020                           ;	Chosen strategy is simple_byte
 10021  05E8  0826               	movf	??_JSN_Sensor_Init,w
 10022  05E9  3A00               	xorlw	0	; case 0
 10023  05EA  1903               	skipnz
 10024  05EB  2DD3               	goto	l37
 10025  05EC  3A04               	xorlw	4	; case 4
 10026  05ED  1903               	skipnz
 10027  05EE  2DD3               	goto	l37
 10028  05EF  3A02               	xorlw	2	; case 6
 10029  05F0  1903               	skipnz
 10030  05F1  2DD3               	goto	l37
 10031  05F2  3A01               	xorlw	1	; case 7
 10032  05F3  1903               	skipnz
 10033  05F4  2DD3               	goto	l3606
 10034  05F5  3A0F               	xorlw	15	; case 8
 10035  05F6  1903               	skipnz
 10036  05F7  2DD3               	goto	l3606
 10037  05F8  3A01               	xorlw	1	; case 9
 10038  05F9  1903               	skipnz
 10039  05FA  2DD3               	goto	l3606
 10040  05FB  3A03               	xorlw	3	; case 10
 10041  05FC  1903               	skipnz
 10042  05FD  2DD3               	goto	l3606
 10043  05FE  3A06               	xorlw	6	; case 12
 10044  05FF  1903               	skipnz
 10045  0600  2DD3               	goto	l3606
 10046  0601  3A01               	xorlw	1	; case 13
 10047  0602  1903               	skipnz
 10048  0603  2DD3               	goto	l3606
 10049  0604  3A03               	xorlw	3	; case 14
 10050  0605  1903               	skipnz
 10051  0606  2DD3               	goto	l3606
 10052  0607  3A01               	xorlw	1	; case 15
 10053  0608  1903               	skipnz
 10054  0609  2DD3               	goto	l3606
 10055  060A  3A1F               	xorlw	31	; case 16
 10056  060B  1903               	skipnz
 10057  060C  2DD3               	goto	l3606
 10058  060D  3A01               	xorlw	1	; case 17
 10059  060E  1903               	skipnz
 10060  060F  2DD3               	goto	l3606
 10061  0610  2E34               	goto	l32
 10062  0611                     l3612:
 10063                           
 10064                           ;JSN_Sensor.c: 70:     Sensor->distance = 0;
 10065  0611  0020               	movlb	0	; select bank0
 10066  0612  0828               	movf	JSN_Sensor_Init@Sensor,w
 10067  0613  3E02               	addlw	2
 10068  0614  0086               	movwf	6
 10069  0615  0187               	clrf	7
 10070  0616  3000               	movlw	0
 10071  0617  3FC0               	movwi [0]fsr1
 10072  0618  3FC1               	movwi [1]fsr1
 10073  0619                     l3614:
 10074                           
 10075                           ;JSN_Sensor.c: 71:     Sensor->echoHighTime = 0;
 10076  0619  0828               	movf	JSN_Sensor_Init@Sensor,w
 10077  061A  0086               	movwf	6
 10078  061B  0187               	clrf	7
 10079  061C  3000               	movlw	0
 10080  061D  3FC0               	movwi [0]fsr1
 10081  061E  3FC1               	movwi [1]fsr1
 10082  061F                     l3616:
 10083                           
 10084                           ;JSN_Sensor.c: 72:     Sensor->echoPin = echoPin;
 10085  061F  0825               	movf	JSN_Sensor_Init@echoPin,w
 10086  0620  00A6               	movwf	??_JSN_Sensor_Init
 10087  0621  0828               	movf	JSN_Sensor_Init@Sensor,w
 10088  0622  3E05               	addlw	5
 10089  0623  0086               	movwf	6
 10090  0624  0187               	clrf	7
 10091  0625  0826               	movf	??_JSN_Sensor_Init,w
 10092  0626  0081               	movwf	1
 10093  0627                     l3618:
 10094                           
 10095                           ;JSN_Sensor.c: 73:     Sensor->trigPin = trigPin;
 10096  0627  0824               	movf	JSN_Sensor_Init@trigPin,w
 10097  0628  00A6               	movwf	??_JSN_Sensor_Init
 10098  0629  0828               	movf	JSN_Sensor_Init@Sensor,w
 10099  062A  3E04               	addlw	4
 10100  062B  0086               	movwf	6
 10101  062C  0187               	clrf	7
 10102  062D  0826               	movf	??_JSN_Sensor_Init,w
 10103  062E  0081               	movwf	1
 10104  062F                     l3620:
 10105                           
 10106                           ;JSN_Sensor.c: 75:     lastTrig = Sensor;
 10107  062F  0828               	movf	JSN_Sensor_Init@Sensor,w
 10108  0630  00A6               	movwf	??_JSN_Sensor_Init
 10109  0631  0826               	movf	??_JSN_Sensor_Init,w
 10110  0632  0021               	movlb	1	; select bank1
 10111  0633  00D3               	movwf	_lastTrig^(0+128)
 10112  0634                     l32:
 10113  0634  0008               	return
 10114  0635                     __end_of_JSN_Sensor_Init:
 10115                           
 10116                           	psect	text39
 10117  0322                     __ptext39:	
 10118 ;; *************** function _WritePin *****************
 10119 ;; Defined at:
 10120 ;;		line 177 in file "PIC16Xpress_DevBoard.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;  pin             1    wreg     enum E7110
 10123 ;;  val             1    0[BANK0 ] unsigned char 
 10124 ;; Auto vars:     Size  Location     Type
 10125 ;;  pin             1    3[BANK0 ] enum E7110
 10126 ;; Return value:  Size  Location     Type
 10127 ;;                  1    wreg      unsigned char 
 10128 ;; Registers used:
 10129 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10130 ;; Tracked objects:
 10131 ;;		On entry : 0/0
 10132 ;;		On exit  : 0/0
 10133 ;;		Unchanged: 0/0
 10134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10135 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10136 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10137 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10138 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10139 ;;Total ram usage:        4 bytes
 10140 ;; Hardware stack levels used: 1
 10141 ;; Hardware stack levels required when called: 4
 10142 ;; This function calls:
 10143 ;;		Nothing
 10144 ;; This function is called by:
 10145 ;;		_JSN_Sensor_Init
 10146 ;;		_JSN_Sensor_Trig
 10147 ;;		_main
 10148 ;; This function uses a non-reentrant model
 10149 ;;
 10150                           
 10151  0322                     _WritePin:	
 10152                           ;psect for function _WritePin
 10153                           
 10154                           
 10155                           ;incstack = 0
 10156                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
 10157                           ;WritePin@pin stored from wreg
 10158  0322  0020               	movlb	0	; select bank0
 10159  0323  00A3               	movwf	WritePin@pin
 10160  0324                     l3394:
 10161                           
 10162                           ;PIC16Xpress_DevBoard.c: 178:     switch(pin) {
 10163  0324  2B9C               	goto	l3466
 10164  0325                     l3396:
 10165                           
 10166                           ;PIC16Xpress_DevBoard.c: 180:             LATAbits.LATA5 = val;
 10167  0325  0C20               	rrf	WritePin@val,w
 10168  0326  0022               	movlb	2	; select bank2
 10169  0327  1C03               	skipc
 10170  0328  128C               	bcf	12,5	;volatile
 10171  0329  1803               	skipnc
 10172  032A  168C               	bsf	12,5	;volatile
 10173  032B  2BDC               	goto	l217
 10174  032C                     l3400:
 10175                           
 10176                           ;PIC16Xpress_DevBoard.c: 183:             LATAbits.LATA4 = val;
 10177  032C  0C20               	rrf	WritePin@val,w
 10178  032D  0022               	movlb	2	; select bank2
 10179  032E  1C03               	skipc
 10180  032F  120C               	bcf	12,4	;volatile
 10181  0330  1803               	skipnc
 10182  0331  160C               	bsf	12,4	;volatile
 10183  0332  2BDC               	goto	l217
 10184  0333                     l3404:
 10185                           
 10186                           ;PIC16Xpress_DevBoard.c: 188:             LATCbits.LATC5 = val;
 10187  0333  0C20               	rrf	WritePin@val,w
 10188  0334  0022               	movlb	2	; select bank2
 10189  0335  1C03               	skipc
 10190  0336  128E               	bcf	14,5	;volatile
 10191  0337  1803               	skipnc
 10192  0338  168E               	bsf	14,5	;volatile
 10193  0339  2BDC               	goto	l217
 10194  033A                     l3408:
 10195                           
 10196                           ;PIC16Xpress_DevBoard.c: 191:             LATCbits.LATC4 = val;
 10197  033A  0C20               	rrf	WritePin@val,w
 10198  033B  0022               	movlb	2	; select bank2
 10199  033C  1C03               	skipc
 10200  033D  120E               	bcf	14,4	;volatile
 10201  033E  1803               	skipnc
 10202  033F  160E               	bsf	14,4	;volatile
 10203  0340  2BDC               	goto	l217
 10204  0341                     l3412:
 10205                           
 10206                           ;PIC16Xpress_DevBoard.c: 194:             LATCbits.LATC3 = val;
 10207  0341  0C20               	rrf	WritePin@val,w
 10208  0342  0022               	movlb	2	; select bank2
 10209  0343  1C03               	skipc
 10210  0344  118E               	bcf	14,3	;volatile
 10211  0345  1803               	skipnc
 10212  0346  158E               	bsf	14,3	;volatile
 10213  0347  2BDC               	goto	l217
 10214  0348                     l3416:
 10215                           
 10216                           ;PIC16Xpress_DevBoard.c: 197:             LATCbits.LATC6 = val;
 10217  0348  0C20               	rrf	WritePin@val,w
 10218  0349  0022               	movlb	2	; select bank2
 10219  034A  1C03               	skipc
 10220  034B  130E               	bcf	14,6	;volatile
 10221  034C  1803               	skipnc
 10222  034D  170E               	bsf	14,6	;volatile
 10223  034E  2BDC               	goto	l217
 10224  034F                     l3420:
 10225                           
 10226                           ;PIC16Xpress_DevBoard.c: 200:             LATCbits.LATC7 = val;
 10227  034F  0C20               	rrf	WritePin@val,w
 10228  0350  0022               	movlb	2	; select bank2
 10229  0351  1C03               	skipc
 10230  0352  138E               	bcf	14,7	;volatile
 10231  0353  1803               	skipnc
 10232  0354  178E               	bsf	14,7	;volatile
 10233  0355  2BDC               	goto	l217
 10234  0356                     l3424:
 10235                           
 10236                           ;PIC16Xpress_DevBoard.c: 203:             LATBbits.LATB7 = val;
 10237  0356  0C20               	rrf	WritePin@val,w
 10238  0357  0022               	movlb	2	; select bank2
 10239  0358  1C03               	skipc
 10240  0359  138D               	bcf	13,7	;volatile
 10241  035A  1803               	skipnc
 10242  035B  178D               	bsf	13,7	;volatile
 10243  035C  2BDC               	goto	l217
 10244  035D                     l3428:
 10245                           
 10246                           ;PIC16Xpress_DevBoard.c: 206:             LATAbits.LATA0 = val;
 10247  035D  0C20               	rrf	WritePin@val,w
 10248  035E  0022               	movlb	2	; select bank2
 10249  035F  1C03               	skipc
 10250  0360  100C               	bcf	12,0	;volatile
 10251  0361  1803               	skipnc
 10252  0362  140C               	bsf	12,0	;volatile
 10253  0363  2BDC               	goto	l217
 10254  0364                     l3432:
 10255                           
 10256                           ;PIC16Xpress_DevBoard.c: 209:             LATAbits.LATA1 = val;
 10257  0364  0C20               	rrf	WritePin@val,w
 10258  0365  0022               	movlb	2	; select bank2
 10259  0366  1C03               	skipc
 10260  0367  108C               	bcf	12,1	;volatile
 10261  0368  1803               	skipnc
 10262  0369  148C               	bsf	12,1	;volatile
 10263  036A  2BDC               	goto	l217
 10264  036B                     l3436:
 10265                           
 10266                           ;PIC16Xpress_DevBoard.c: 212:             LATAbits.LATA2 = val;
 10267  036B  0C20               	rrf	WritePin@val,w
 10268  036C  0022               	movlb	2	; select bank2
 10269  036D  1C03               	skipc
 10270  036E  110C               	bcf	12,2	;volatile
 10271  036F  1803               	skipnc
 10272  0370  150C               	bsf	12,2	;volatile
 10273  0371  2BDC               	goto	l217
 10274  0372                     l3440:
 10275                           
 10276                           ;PIC16Xpress_DevBoard.c: 215:             LATCbits.LATC0 = val;
 10277  0372  0C20               	rrf	WritePin@val,w
 10278  0373  0022               	movlb	2	; select bank2
 10279  0374  1C03               	skipc
 10280  0375  100E               	bcf	14,0	;volatile
 10281  0376  1803               	skipnc
 10282  0377  140E               	bsf	14,0	;volatile
 10283  0378  2BDC               	goto	l217
 10284  0379                     l3444:
 10285                           
 10286                           ;PIC16Xpress_DevBoard.c: 218:             LATCbits.LATC1 = val;
 10287  0379  0C20               	rrf	WritePin@val,w
 10288  037A  0022               	movlb	2	; select bank2
 10289  037B  1C03               	skipc
 10290  037C  108E               	bcf	14,1	;volatile
 10291  037D  1803               	skipnc
 10292  037E  148E               	bsf	14,1	;volatile
 10293  037F  2BDC               	goto	l217
 10294  0380                     l3448:
 10295                           
 10296                           ;PIC16Xpress_DevBoard.c: 221:             LATCbits.LATC2 = val;
 10297  0380  0C20               	rrf	WritePin@val,w
 10298  0381  0022               	movlb	2	; select bank2
 10299  0382  1C03               	skipc
 10300  0383  110E               	bcf	14,2	;volatile
 10301  0384  1803               	skipnc
 10302  0385  150E               	bsf	14,2	;volatile
 10303  0386  2BDC               	goto	l217
 10304  0387                     l3452:
 10305                           
 10306                           ;PIC16Xpress_DevBoard.c: 224:             LATBbits.LATB4 = val;
 10307  0387  0C20               	rrf	WritePin@val,w
 10308  0388  0022               	movlb	2	; select bank2
 10309  0389  1C03               	skipc
 10310  038A  120D               	bcf	13,4	;volatile
 10311  038B  1803               	skipnc
 10312  038C  160D               	bsf	13,4	;volatile
 10313  038D  2BDC               	goto	l217
 10314  038E                     l3456:
 10315                           
 10316                           ;PIC16Xpress_DevBoard.c: 227:             LATBbits.LATB5 = val;
 10317  038E  0C20               	rrf	WritePin@val,w
 10318  038F  0022               	movlb	2	; select bank2
 10319  0390  1C03               	skipc
 10320  0391  128D               	bcf	13,5	;volatile
 10321  0392  1803               	skipnc
 10322  0393  168D               	bsf	13,5	;volatile
 10323  0394  2BDC               	goto	l217
 10324  0395                     l3460:
 10325                           
 10326                           ;PIC16Xpress_DevBoard.c: 230:             LATBbits.LATB6 = val;
 10327  0395  0C20               	rrf	WritePin@val,w
 10328  0396  0022               	movlb	2	; select bank2
 10329  0397  1C03               	skipc
 10330  0398  130D               	bcf	13,6	;volatile
 10331  0399  1803               	skipnc
 10332  039A  170D               	bsf	13,6	;volatile
 10333  039B  2BDC               	goto	l217
 10334  039C                     l3466:
 10335  039C  0823               	movf	WritePin@pin,w
 10336  039D  00A1               	movwf	??_WritePin
 10337  039E  01A2               	clrf	??_WritePin+1
 10338                           
 10339                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10340                           ; Switch size 1, requested type "simple"
 10341                           ; Number of cases is 1, Range of values is 0 to 0
 10342                           ; switch strategies available:
 10343                           ; Name         Instructions Cycles
 10344                           ; simple_byte            4     3 (average)
 10345                           ; direct_byte            8     6 (fixed)
 10346                           ; jumptable            260     6 (fixed)
 10347                           ;	Chosen strategy is simple_byte
 10348  039F  0822               	movf	??_WritePin+1,w
 10349  03A0  3A00               	xorlw	0	; case 0
 10350  03A1  1903               	skipnz
 10351  03A2  2BA4               	goto	l4116
 10352  03A3  2BDC               	goto	l217
 10353  03A4                     l4116:
 10354                           
 10355                           ; Switch size 1, requested type "simple"
 10356                           ; Number of cases is 18, Range of values is 0 to 17
 10357                           ; switch strategies available:
 10358                           ; Name         Instructions Cycles
 10359                           ; direct_byte           42     6 (fixed)
 10360                           ; simple_byte           55    28 (average)
 10361                           ; jumptable            260     6 (fixed)
 10362                           ;	Chosen strategy is simple_byte
 10363  03A4  0821               	movf	??_WritePin,w
 10364  03A5  3A00               	xorlw	0	; case 0
 10365  03A6  1903               	skipnz
 10366  03A7  2B25               	goto	l3396
 10367  03A8  3A01               	xorlw	1	; case 1
 10368  03A9  1903               	skipnz
 10369  03AA  2B2C               	goto	l3400
 10370  03AB  3A03               	xorlw	3	; case 2
 10371  03AC  1903               	skipnz
 10372  03AD  2BDC               	goto	l217
 10373  03AE  3A01               	xorlw	1	; case 3
 10374  03AF  1903               	skipnz
 10375  03B0  2B33               	goto	l3404
 10376  03B1  3A07               	xorlw	7	; case 4
 10377  03B2  1903               	skipnz
 10378  03B3  2B3A               	goto	l3408
 10379  03B4  3A01               	xorlw	1	; case 5
 10380  03B5  1903               	skipnz
 10381  03B6  2B41               	goto	l3412
 10382  03B7  3A03               	xorlw	3	; case 6
 10383  03B8  1903               	skipnz
 10384  03B9  2B48               	goto	l3416
 10385  03BA  3A01               	xorlw	1	; case 7
 10386  03BB  1903               	skipnz
 10387  03BC  2B4F               	goto	l3420
 10388  03BD  3A0F               	xorlw	15	; case 8
 10389  03BE  1903               	skipnz
 10390  03BF  2B56               	goto	l3424
 10391  03C0  3A01               	xorlw	1	; case 9
 10392  03C1  1903               	skipnz
 10393  03C2  2B5D               	goto	l3428
 10394  03C3  3A03               	xorlw	3	; case 10
 10395  03C4  1903               	skipnz
 10396  03C5  2B64               	goto	l3432
 10397  03C6  3A01               	xorlw	1	; case 11
 10398  03C7  1903               	skipnz
 10399  03C8  2B6B               	goto	l3436
 10400  03C9  3A07               	xorlw	7	; case 12
 10401  03CA  1903               	skipnz
 10402  03CB  2B72               	goto	l3440
 10403  03CC  3A01               	xorlw	1	; case 13
 10404  03CD  1903               	skipnz
 10405  03CE  2B79               	goto	l3444
 10406  03CF  3A03               	xorlw	3	; case 14
 10407  03D0  1903               	skipnz
 10408  03D1  2B80               	goto	l3448
 10409  03D2  3A01               	xorlw	1	; case 15
 10410  03D3  1903               	skipnz
 10411  03D4  2B87               	goto	l3452
 10412  03D5  3A1F               	xorlw	31	; case 16
 10413  03D6  1903               	skipnz
 10414  03D7  2B8E               	goto	l3456
 10415  03D8  3A01               	xorlw	1	; case 17
 10416  03D9  1903               	skipnz
 10417  03DA  2B95               	goto	l3460
 10418  03DB  2BDC               	goto	l217
 10419  03DC                     l217:
 10420  03DC  0008               	return
 10421  03DD                     __end_of_WritePin:
 10422                           
 10423                           	psect	text40
 10424  03DD                     __ptext40:	
 10425 ;; *************** function _SetPin *****************
 10426 ;; Defined at:
 10427 ;;		line 70 in file "PIC16Xpress_DevBoard.c"
 10428 ;; Parameters:    Size  Location     Type
 10429 ;;  pin             1    wreg     enum E7110
 10430 ;;  io              1    0[BANK0 ] unsigned char 
 10431 ;; Auto vars:     Size  Location     Type
 10432 ;;  pin             1    3[BANK0 ] enum E7110
 10433 ;; Return value:  Size  Location     Type
 10434 ;;                  1    wreg      unsigned char 
 10435 ;; Registers used:
 10436 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10437 ;; Tracked objects:
 10438 ;;		On entry : 0/0
 10439 ;;		On exit  : 0/0
 10440 ;;		Unchanged: 0/0
 10441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10442 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10443 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10444 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10445 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10446 ;;Total ram usage:        4 bytes
 10447 ;; Hardware stack levels used: 1
 10448 ;; Hardware stack levels required when called: 4
 10449 ;; This function calls:
 10450 ;;		Nothing
 10451 ;; This function is called by:
 10452 ;;		_JSN_Sensor_Init
 10453 ;;		_main
 10454 ;; This function uses a non-reentrant model
 10455 ;;
 10456                           
 10457  03DD                     _SetPin:	
 10458                           ;psect for function _SetPin
 10459                           
 10460                           
 10461                           ;incstack = 0
 10462                           ; Regs used in _SetPin: [wreg-fsr0h+status,2+status,0]
 10463                           ;SetPin@pin stored from wreg
 10464  03DD  0020               	movlb	0	; select bank0
 10465  03DE  00A3               	movwf	SetPin@pin
 10466  03DF                     l3314:
 10467                           
 10468                           ;PIC16Xpress_DevBoard.c: 71:     switch(pin) {
 10469  03DF  2C57               	goto	l3386
 10470  03E0                     l3316:
 10471                           
 10472                           ;PIC16Xpress_DevBoard.c: 73:             TRISAbits.TRISA5 = io;
 10473  03E0  0C20               	rrf	SetPin@io,w
 10474  03E1  0021               	movlb	1	; select bank1
 10475  03E2  1C03               	skipc
 10476  03E3  128C               	bcf	12,5	;volatile
 10477  03E4  1803               	skipnc
 10478  03E5  168C               	bsf	12,5	;volatile
 10479  03E6  2C97               	goto	l169
 10480  03E7                     l3320:
 10481                           
 10482                           ;PIC16Xpress_DevBoard.c: 76:             TRISAbits.TRISA4 = io;
 10483  03E7  0C20               	rrf	SetPin@io,w
 10484  03E8  0021               	movlb	1	; select bank1
 10485  03E9  1C03               	skipc
 10486  03EA  120C               	bcf	12,4	;volatile
 10487  03EB  1803               	skipnc
 10488  03EC  160C               	bsf	12,4	;volatile
 10489  03ED  2C97               	goto	l169
 10490  03EE                     l3324:
 10491                           
 10492                           ;PIC16Xpress_DevBoard.c: 81:             TRISCbits.TRISC5 = io;
 10493  03EE  0C20               	rrf	SetPin@io,w
 10494  03EF  0021               	movlb	1	; select bank1
 10495  03F0  1C03               	skipc
 10496  03F1  128E               	bcf	14,5	;volatile
 10497  03F2  1803               	skipnc
 10498  03F3  168E               	bsf	14,5	;volatile
 10499  03F4  2C97               	goto	l169
 10500  03F5                     l3328:
 10501                           
 10502                           ;PIC16Xpress_DevBoard.c: 84:             TRISCbits.TRISC4 = io;
 10503  03F5  0C20               	rrf	SetPin@io,w
 10504  03F6  0021               	movlb	1	; select bank1
 10505  03F7  1C03               	skipc
 10506  03F8  120E               	bcf	14,4	;volatile
 10507  03F9  1803               	skipnc
 10508  03FA  160E               	bsf	14,4	;volatile
 10509  03FB  2C97               	goto	l169
 10510  03FC                     l3332:
 10511                           
 10512                           ;PIC16Xpress_DevBoard.c: 87:             TRISCbits.TRISC3 = io;
 10513  03FC  0C20               	rrf	SetPin@io,w
 10514  03FD  0021               	movlb	1	; select bank1
 10515  03FE  1C03               	skipc
 10516  03FF  118E               	bcf	14,3	;volatile
 10517  0400  1803               	skipnc
 10518  0401  158E               	bsf	14,3	;volatile
 10519  0402  2C97               	goto	l169
 10520  0403                     l3336:
 10521                           
 10522                           ;PIC16Xpress_DevBoard.c: 90:             TRISCbits.TRISC6 = io;
 10523  0403  0C20               	rrf	SetPin@io,w
 10524  0404  0021               	movlb	1	; select bank1
 10525  0405  1C03               	skipc
 10526  0406  130E               	bcf	14,6	;volatile
 10527  0407  1803               	skipnc
 10528  0408  170E               	bsf	14,6	;volatile
 10529  0409  2C97               	goto	l169
 10530  040A                     l3340:
 10531                           
 10532                           ;PIC16Xpress_DevBoard.c: 93:             TRISCbits.TRISC7 = io;
 10533  040A  0C20               	rrf	SetPin@io,w
 10534  040B  0021               	movlb	1	; select bank1
 10535  040C  1C03               	skipc
 10536  040D  138E               	bcf	14,7	;volatile
 10537  040E  1803               	skipnc
 10538  040F  178E               	bsf	14,7	;volatile
 10539  0410  2C97               	goto	l169
 10540  0411                     l3344:
 10541                           
 10542                           ;PIC16Xpress_DevBoard.c: 96:             TRISBbits.TRISB7 = io;
 10543  0411  0C20               	rrf	SetPin@io,w
 10544  0412  0021               	movlb	1	; select bank1
 10545  0413  1C03               	skipc
 10546  0414  138D               	bcf	13,7	;volatile
 10547  0415  1803               	skipnc
 10548  0416  178D               	bsf	13,7	;volatile
 10549  0417  2C97               	goto	l169
 10550  0418                     l3348:
 10551                           
 10552                           ;PIC16Xpress_DevBoard.c: 99:             TRISAbits.TRISA0 = io;
 10553  0418  0C20               	rrf	SetPin@io,w
 10554  0419  0021               	movlb	1	; select bank1
 10555  041A  1C03               	skipc
 10556  041B  100C               	bcf	12,0	;volatile
 10557  041C  1803               	skipnc
 10558  041D  140C               	bsf	12,0	;volatile
 10559  041E  2C97               	goto	l169
 10560  041F                     l3352:
 10561                           
 10562                           ;PIC16Xpress_DevBoard.c: 102:             TRISAbits.TRISA1 = io;
 10563  041F  0C20               	rrf	SetPin@io,w
 10564  0420  0021               	movlb	1	; select bank1
 10565  0421  1C03               	skipc
 10566  0422  108C               	bcf	12,1	;volatile
 10567  0423  1803               	skipnc
 10568  0424  148C               	bsf	12,1	;volatile
 10569  0425  2C97               	goto	l169
 10570  0426                     l3356:
 10571                           
 10572                           ;PIC16Xpress_DevBoard.c: 105:             TRISAbits.TRISA2 = io;
 10573  0426  0C20               	rrf	SetPin@io,w
 10574  0427  0021               	movlb	1	; select bank1
 10575  0428  1C03               	skipc
 10576  0429  110C               	bcf	12,2	;volatile
 10577  042A  1803               	skipnc
 10578  042B  150C               	bsf	12,2	;volatile
 10579  042C  2C97               	goto	l169
 10580  042D                     l3360:
 10581                           
 10582                           ;PIC16Xpress_DevBoard.c: 108:             TRISCbits.TRISC0 = io;
 10583  042D  0C20               	rrf	SetPin@io,w
 10584  042E  0021               	movlb	1	; select bank1
 10585  042F  1C03               	skipc
 10586  0430  100E               	bcf	14,0	;volatile
 10587  0431  1803               	skipnc
 10588  0432  140E               	bsf	14,0	;volatile
 10589  0433  2C97               	goto	l169
 10590  0434                     l3364:
 10591                           
 10592                           ;PIC16Xpress_DevBoard.c: 111:             TRISCbits.TRISC1 = io;
 10593  0434  0C20               	rrf	SetPin@io,w
 10594  0435  0021               	movlb	1	; select bank1
 10595  0436  1C03               	skipc
 10596  0437  108E               	bcf	14,1	;volatile
 10597  0438  1803               	skipnc
 10598  0439  148E               	bsf	14,1	;volatile
 10599  043A  2C97               	goto	l169
 10600  043B                     l3368:
 10601                           
 10602                           ;PIC16Xpress_DevBoard.c: 114:             TRISCbits.TRISC2 = io;
 10603  043B  0C20               	rrf	SetPin@io,w
 10604  043C  0021               	movlb	1	; select bank1
 10605  043D  1C03               	skipc
 10606  043E  110E               	bcf	14,2	;volatile
 10607  043F  1803               	skipnc
 10608  0440  150E               	bsf	14,2	;volatile
 10609  0441  2C97               	goto	l169
 10610  0442                     l3372:
 10611                           
 10612                           ;PIC16Xpress_DevBoard.c: 117:             TRISBbits.TRISB4 = io;
 10613  0442  0C20               	rrf	SetPin@io,w
 10614  0443  0021               	movlb	1	; select bank1
 10615  0444  1C03               	skipc
 10616  0445  120D               	bcf	13,4	;volatile
 10617  0446  1803               	skipnc
 10618  0447  160D               	bsf	13,4	;volatile
 10619  0448  2C97               	goto	l169
 10620  0449                     l3376:
 10621                           
 10622                           ;PIC16Xpress_DevBoard.c: 120:             TRISBbits.TRISB5 = io;
 10623  0449  0C20               	rrf	SetPin@io,w
 10624  044A  0021               	movlb	1	; select bank1
 10625  044B  1C03               	skipc
 10626  044C  128D               	bcf	13,5	;volatile
 10627  044D  1803               	skipnc
 10628  044E  168D               	bsf	13,5	;volatile
 10629  044F  2C97               	goto	l169
 10630  0450                     l3380:
 10631                           
 10632                           ;PIC16Xpress_DevBoard.c: 123:             TRISBbits.TRISB6 = io;
 10633  0450  0C20               	rrf	SetPin@io,w
 10634  0451  0021               	movlb	1	; select bank1
 10635  0452  1C03               	skipc
 10636  0453  130D               	bcf	13,6	;volatile
 10637  0454  1803               	skipnc
 10638  0455  170D               	bsf	13,6	;volatile
 10639  0456  2C97               	goto	l169
 10640  0457                     l3386:
 10641  0457  0823               	movf	SetPin@pin,w
 10642  0458  00A1               	movwf	??_SetPin
 10643  0459  01A2               	clrf	??_SetPin+1
 10644                           
 10645                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10646                           ; Switch size 1, requested type "simple"
 10647                           ; Number of cases is 1, Range of values is 0 to 0
 10648                           ; switch strategies available:
 10649                           ; Name         Instructions Cycles
 10650                           ; simple_byte            4     3 (average)
 10651                           ; direct_byte            8     6 (fixed)
 10652                           ; jumptable            260     6 (fixed)
 10653                           ;	Chosen strategy is simple_byte
 10654  045A  0822               	movf	??_SetPin+1,w
 10655  045B  3A00               	xorlw	0	; case 0
 10656  045C  1903               	skipnz
 10657  045D  2C5F               	goto	l4118
 10658  045E  2C97               	goto	l169
 10659  045F                     l4118:
 10660                           
 10661                           ; Switch size 1, requested type "simple"
 10662                           ; Number of cases is 18, Range of values is 0 to 17
 10663                           ; switch strategies available:
 10664                           ; Name         Instructions Cycles
 10665                           ; direct_byte           42     6 (fixed)
 10666                           ; simple_byte           55    28 (average)
 10667                           ; jumptable            260     6 (fixed)
 10668                           ;	Chosen strategy is simple_byte
 10669  045F  0821               	movf	??_SetPin,w
 10670  0460  3A00               	xorlw	0	; case 0
 10671  0461  1903               	skipnz
 10672  0462  2BE0               	goto	l3316
 10673  0463  3A01               	xorlw	1	; case 1
 10674  0464  1903               	skipnz
 10675  0465  2BE7               	goto	l3320
 10676  0466  3A03               	xorlw	3	; case 2
 10677  0467  1903               	skipnz
 10678  0468  2C97               	goto	l169
 10679  0469  3A01               	xorlw	1	; case 3
 10680  046A  1903               	skipnz
 10681  046B  2BEE               	goto	l3324
 10682  046C  3A07               	xorlw	7	; case 4
 10683  046D  1903               	skipnz
 10684  046E  2BF5               	goto	l3328
 10685  046F  3A01               	xorlw	1	; case 5
 10686  0470  1903               	skipnz
 10687  0471  2BFC               	goto	l3332
 10688  0472  3A03               	xorlw	3	; case 6
 10689  0473  1903               	skipnz
 10690  0474  2C03               	goto	l3336
 10691  0475  3A01               	xorlw	1	; case 7
 10692  0476  1903               	skipnz
 10693  0477  2C0A               	goto	l3340
 10694  0478  3A0F               	xorlw	15	; case 8
 10695  0479  1903               	skipnz
 10696  047A  2C11               	goto	l3344
 10697  047B  3A01               	xorlw	1	; case 9
 10698  047C  1903               	skipnz
 10699  047D  2C18               	goto	l3348
 10700  047E  3A03               	xorlw	3	; case 10
 10701  047F  1903               	skipnz
 10702  0480  2C1F               	goto	l3352
 10703  0481  3A01               	xorlw	1	; case 11
 10704  0482  1903               	skipnz
 10705  0483  2C26               	goto	l3356
 10706  0484  3A07               	xorlw	7	; case 12
 10707  0485  1903               	skipnz
 10708  0486  2C2D               	goto	l3360
 10709  0487  3A01               	xorlw	1	; case 13
 10710  0488  1903               	skipnz
 10711  0489  2C34               	goto	l3364
 10712  048A  3A03               	xorlw	3	; case 14
 10713  048B  1903               	skipnz
 10714  048C  2C3B               	goto	l3368
 10715  048D  3A01               	xorlw	1	; case 15
 10716  048E  1903               	skipnz
 10717  048F  2C42               	goto	l3372
 10718  0490  3A1F               	xorlw	31	; case 16
 10719  0491  1903               	skipnz
 10720  0492  2C49               	goto	l3376
 10721  0493  3A01               	xorlw	1	; case 17
 10722  0494  1903               	skipnz
 10723  0495  2C50               	goto	l3380
 10724  0496  2C97               	goto	l169
 10725  0497                     l169:
 10726  0497  0008               	return
 10727  0498                     __end_of_SetPin:
 10728                           
 10729                           	psect	text41
 10730  0F7D                     __ptext41:	
 10731 ;; *************** function _JSN_Sensor_GetDistance *****************
 10732 ;; Defined at:
 10733 ;;		line 104 in file "JSN_Sensor.c"
 10734 ;; Parameters:    Size  Location     Type
 10735 ;;  Sensor          1    wreg     PTR struct .
 10736 ;;		 -> Sens2(6), Sens1(6), 
 10737 ;; Auto vars:     Size  Location     Type
 10738 ;;  Sensor          1   30[BANK0 ] PTR struct .
 10739 ;;		 -> Sens2(6), Sens1(6), 
 10740 ;; Return value:  Size  Location     Type
 10741 ;;                  2   26[BANK0 ] unsigned int 
 10742 ;; Registers used:
 10743 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10744 ;; Tracked objects:
 10745 ;;		On entry : 0/0
 10746 ;;		On exit  : 0/0
 10747 ;;		Unchanged: 0/0
 10748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10749 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10750 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10751 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10752 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10753 ;;Total ram usage:        5 bytes
 10754 ;; Hardware stack levels used: 1
 10755 ;; Hardware stack levels required when called: 5
 10756 ;; This function calls:
 10757 ;;		___lldiv
 10758 ;;		___lmul
 10759 ;; This function is called by:
 10760 ;;		_main
 10761 ;; This function uses a non-reentrant model
 10762 ;;
 10763                           
 10764  0F7D                     _JSN_Sensor_GetDistance:	
 10765                           ;psect for function _JSN_Sensor_GetDistance
 10766                           
 10767                           
 10768                           ;incstack = 0
 10769                           ; Regs used in _JSN_Sensor_GetDistance: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 10770                           ;JSN_Sensor_GetDistance@Sensor stored from wreg
 10771  0F7D  0020               	movlb	0	; select bank0
 10772  0F7E  00BE               	movwf	JSN_Sensor_GetDistance@Sensor
 10773  0F7F                     l3648:
 10774                           
 10775                           ;JSN_Sensor.c: 109:     Sensor->distance = (unsigned int) (((uint32_t) Sensor->echoHighT
      +                          ime *
 10776  0F7F  3000               	movlw	0
 10777  0F80  00AF               	movwf	___lldiv@divisor+3
 10778  0F81  3000               	movlw	0
 10779  0F82  00AE               	movwf	___lldiv@divisor+2
 10780  0F83  3007               	movlw	7
 10781  0F84  00AD               	movwf	___lldiv@divisor+1
 10782  0F85  30D0               	movlw	208
 10783  0F86  00AC               	movwf	___lldiv@divisor
 10784  0F87  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 10785  0F88  0086               	movwf	6
 10786  0F89  0187               	clrf	7
 10787  0F8A  3F40               	moviw [0]fsr1
 10788  0F8B  00BC               	movwf	??_JSN_Sensor_GetDistance
 10789  0F8C  3F41               	moviw [1]fsr1
 10790  0F8D  00BD               	movwf	??_JSN_Sensor_GetDistance+1
 10791  0F8E  083C               	movf	??_JSN_Sensor_GetDistance,w
 10792  0F8F  00A0               	movwf	___lmul@multiplier
 10793  0F90  083D               	movf	??_JSN_Sensor_GetDistance+1,w
 10794  0F91  00A1               	movwf	___lmul@multiplier+1
 10795  0F92  01A2               	clrf	___lmul@multiplier+2
 10796  0F93  01A3               	clrf	___lmul@multiplier+3
 10797  0F94  3000               	movlw	0
 10798  0F95  00A7               	movwf	___lmul@multiplicand+3
 10799  0F96  3000               	movlw	0
 10800  0F97  00A6               	movwf	___lmul@multiplicand+2
 10801  0F98  3001               	movlw	1
 10802  0F99  00A5               	movwf	___lmul@multiplicand+1
 10803  0F9A  3057               	movlw	87
 10804  0F9B  00A4               	movwf	___lmul@multiplicand
 10805  0F9C  318D  25E5  318F   	fcall	___lmul
 10806  0F9F  0020               	movlb	0	; select bank0
 10807  0FA0  0823               	movf	?___lmul+3,w
 10808  0FA1  00B3               	movwf	___lldiv@dividend+3
 10809  0FA2  0822               	movf	?___lmul+2,w
 10810  0FA3  00B2               	movwf	___lldiv@dividend+2
 10811  0FA4  0821               	movf	?___lmul+1,w
 10812  0FA5  00B1               	movwf	___lldiv@dividend+1
 10813  0FA6  0820               	movf	?___lmul,w
 10814  0FA7  00B0               	movwf	___lldiv@dividend
 10815  0FA8  3186  26A6  318F   	fcall	___lldiv
 10816  0FAB  0020               	movlb	0	; select bank0
 10817  0FAC  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 10818  0FAD  3E02               	addlw	2
 10819  0FAE  0086               	movwf	6
 10820  0FAF  0187               	clrf	7
 10821  0FB0  082C               	movf	?___lldiv,w
 10822  0FB1  3FC0               	movwi [0]fsr1
 10823  0FB2  082D               	movf	?___lldiv+1,w
 10824  0FB3  3FC1               	movwi [1]fsr1
 10825  0FB4                     l3650:
 10826                           
 10827                           ;JSN_Sensor.c: 111:     return Sensor->distance;
 10828  0FB4  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 10829  0FB5  3E02               	addlw	2
 10830  0FB6  0086               	movwf	6
 10831  0FB7  0187               	clrf	7
 10832  0FB8  3F40               	moviw [0]fsr1
 10833  0FB9  00BA               	movwf	?_JSN_Sensor_GetDistance
 10834  0FBA  3F41               	moviw [1]fsr1
 10835  0FBB  00BB               	movwf	?_JSN_Sensor_GetDistance+1
 10836  0FBC                     l57:
 10837  0FBC  0008               	return
 10838  0FBD                     __end_of_JSN_Sensor_GetDistance:
 10839                           
 10840                           	psect	text42
 10841  0DE5                     __ptext42:	
 10842 ;; *************** function ___lmul *****************
 10843 ;; Defined at:
 10844 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul32.c"
 10845 ;; Parameters:    Size  Location     Type
 10846 ;;  multiplier      4    0[BANK0 ] unsigned long 
 10847 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 10848 ;; Auto vars:     Size  Location     Type
 10849 ;;  product         4    8[BANK0 ] unsigned long 
 10850 ;; Return value:  Size  Location     Type
 10851 ;;                  4    0[BANK0 ] unsigned long 
 10852 ;; Registers used:
 10853 ;;		wreg, status,2, status,0
 10854 ;; Tracked objects:
 10855 ;;		On entry : 0/0
 10856 ;;		On exit  : 0/0
 10857 ;;		Unchanged: 0/0
 10858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10859 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10860 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10862 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10863 ;;Total ram usage:       12 bytes
 10864 ;; Hardware stack levels used: 1
 10865 ;; Hardware stack levels required when called: 4
 10866 ;; This function calls:
 10867 ;;		Nothing
 10868 ;; This function is called by:
 10869 ;;		_JSN_Sensor_GetDistance
 10870 ;; This function uses a non-reentrant model
 10871 ;;
 10872                           
 10873  0DE5                     ___lmul:	
 10874                           ;psect for function ___lmul
 10875                           
 10876  0DE5                     l3548:	
 10877                           ;incstack = 0
 10878                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 10879                           
 10880  0DE5  3000               	movlw	0
 10881  0DE6  0020               	movlb	0	; select bank0
 10882  0DE7  00AB               	movwf	___lmul@product+3
 10883  0DE8  3000               	movlw	0
 10884  0DE9  00AA               	movwf	___lmul@product+2
 10885  0DEA  3000               	movlw	0
 10886  0DEB  00A9               	movwf	___lmul@product+1
 10887  0DEC  3000               	movlw	0
 10888  0DED  00A8               	movwf	___lmul@product
 10889  0DEE                     l3550:
 10890  0DEE  1C20               	btfss	___lmul@multiplier,0
 10891  0DEF  2DF1               	goto	u1111
 10892  0DF0  2DF2               	goto	u1110
 10893  0DF1                     u1111:
 10894  0DF1  2DFA               	goto	l3554
 10895  0DF2                     u1110:
 10896  0DF2                     l3552:
 10897  0DF2  0824               	movf	___lmul@multiplicand,w
 10898  0DF3  07A8               	addwf	___lmul@product,f
 10899  0DF4  0825               	movf	___lmul@multiplicand+1,w
 10900  0DF5  3DA9               	addwfc	___lmul@product+1,f
 10901  0DF6  0826               	movf	___lmul@multiplicand+2,w
 10902  0DF7  3DAA               	addwfc	___lmul@product+2,f
 10903  0DF8  0827               	movf	___lmul@multiplicand+3,w
 10904  0DF9  3DAB               	addwfc	___lmul@product+3,f
 10905  0DFA                     l3554:
 10906  0DFA  3001               	movlw	1
 10907  0DFB                     u1125:
 10908  0DFB  35A4               	lslf	___lmul@multiplicand,f
 10909  0DFC  0DA5               	rlf	___lmul@multiplicand+1,f
 10910  0DFD  0DA6               	rlf	___lmul@multiplicand+2,f
 10911  0DFE  0DA7               	rlf	___lmul@multiplicand+3,f
 10912  0DFF  0B89               	decfsz	9,f
 10913  0E00  2DFB               	goto	u1125
 10914  0E01                     l3556:
 10915  0E01  3001               	movlw	1
 10916  0E02                     u1135:
 10917  0E02  36A3               	lsrf	___lmul@multiplier+3,f
 10918  0E03  0CA2               	rrf	___lmul@multiplier+2,f
 10919  0E04  0CA1               	rrf	___lmul@multiplier+1,f
 10920  0E05  0CA0               	rrf	___lmul@multiplier,f
 10921  0E06  0B89               	decfsz	9,f
 10922  0E07  2E02               	goto	u1135
 10923  0E08  0823               	movf	___lmul@multiplier+3,w
 10924  0E09  0422               	iorwf	___lmul@multiplier+2,w
 10925  0E0A  0421               	iorwf	___lmul@multiplier+1,w
 10926  0E0B  0420               	iorwf	___lmul@multiplier,w
 10927  0E0C  1D03               	skipz
 10928  0E0D  2E0F               	goto	u1141
 10929  0E0E  2E10               	goto	u1140
 10930  0E0F                     u1141:
 10931  0E0F  2DEE               	goto	l3550
 10932  0E10                     u1140:
 10933  0E10                     l3558:
 10934  0E10  082B               	movf	___lmul@product+3,w
 10935  0E11  00A3               	movwf	?___lmul+3
 10936  0E12  082A               	movf	___lmul@product+2,w
 10937  0E13  00A2               	movwf	?___lmul+2
 10938  0E14  0829               	movf	___lmul@product+1,w
 10939  0E15  00A1               	movwf	?___lmul+1
 10940  0E16  0828               	movf	___lmul@product,w
 10941  0E17  00A0               	movwf	?___lmul
 10942  0E18                     l996:
 10943  0E18  0008               	return
 10944  0E19                     __end_of___lmul:
 10945                           
 10946                           	psect	text43
 10947  06A6                     __ptext43:	
 10948 ;; *************** function ___lldiv *****************
 10949 ;; Defined at:
 10950 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\__lldiv.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;  divisor         4   12[BANK0 ] unsigned long 
 10953 ;;  dividend        4   16[BANK0 ] unsigned long 
 10954 ;; Auto vars:     Size  Location     Type
 10955 ;;  quotient        4   21[BANK0 ] unsigned long 
 10956 ;;  counter         1   25[BANK0 ] unsigned char 
 10957 ;; Return value:  Size  Location     Type
 10958 ;;                  4   12[BANK0 ] unsigned long 
 10959 ;; Registers used:
 10960 ;;		wreg, status,2, status,0
 10961 ;; Tracked objects:
 10962 ;;		On entry : 0/0
 10963 ;;		On exit  : 0/0
 10964 ;;		Unchanged: 0/0
 10965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10966 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10967 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10968 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10969 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10970 ;;Total ram usage:       14 bytes
 10971 ;; Hardware stack levels used: 1
 10972 ;; Hardware stack levels required when called: 4
 10973 ;; This function calls:
 10974 ;;		Nothing
 10975 ;; This function is called by:
 10976 ;;		_JSN_Sensor_GetDistance
 10977 ;; This function uses a non-reentrant model
 10978 ;;
 10979                           
 10980  06A6                     ___lldiv:	
 10981                           ;psect for function ___lldiv
 10982                           
 10983  06A6                     l3562:	
 10984                           ;incstack = 0
 10985                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10986                           
 10987  06A6  3000               	movlw	0
 10988  06A7  0020               	movlb	0	; select bank0
 10989  06A8  00B8               	movwf	___lldiv@quotient+3
 10990  06A9  3000               	movlw	0
 10991  06AA  00B7               	movwf	___lldiv@quotient+2
 10992  06AB  3000               	movlw	0
 10993  06AC  00B6               	movwf	___lldiv@quotient+1
 10994  06AD  3000               	movlw	0
 10995  06AE  00B5               	movwf	___lldiv@quotient
 10996  06AF  082F               	movf	___lldiv@divisor+3,w
 10997  06B0  042E               	iorwf	___lldiv@divisor+2,w
 10998  06B1  042D               	iorwf	___lldiv@divisor+1,w
 10999  06B2  042C               	iorwf	___lldiv@divisor,w
 11000  06B3  1903               	skipnz
 11001  06B4  2EB6               	goto	u1151
 11002  06B5  2EB7               	goto	u1150
 11003  06B6                     u1151:
 11004  06B6  2EF8               	goto	l3582
 11005  06B7                     u1150:
 11006  06B7                     l3564:
 11007  06B7  01B9               	clrf	___lldiv@counter
 11008  06B8  0AB9               	incf	___lldiv@counter,f
 11009  06B9  2EC5               	goto	l3568
 11010  06BA                     l3566:
 11011  06BA  3001               	movlw	1
 11012  06BB                     u1165:
 11013  06BB  35AC               	lslf	___lldiv@divisor,f
 11014  06BC  0DAD               	rlf	___lldiv@divisor+1,f
 11015  06BD  0DAE               	rlf	___lldiv@divisor+2,f
 11016  06BE  0DAF               	rlf	___lldiv@divisor+3,f
 11017  06BF  0B89               	decfsz	9,f
 11018  06C0  2EBB               	goto	u1165
 11019  06C1  3001               	movlw	1
 11020  06C2  00B4               	movwf	??___lldiv
 11021  06C3  0834               	movf	??___lldiv,w
 11022  06C4  07B9               	addwf	___lldiv@counter,f
 11023  06C5                     l3568:
 11024  06C5  1FAF               	btfss	___lldiv@divisor+3,7
 11025  06C6  2EC8               	goto	u1171
 11026  06C7  2EC9               	goto	u1170
 11027  06C8                     u1171:
 11028  06C8  2EBA               	goto	l3566
 11029  06C9                     u1170:
 11030  06C9                     l3570:
 11031  06C9  3001               	movlw	1
 11032  06CA                     u1185:
 11033  06CA  35B5               	lslf	___lldiv@quotient,f
 11034  06CB  0DB6               	rlf	___lldiv@quotient+1,f
 11035  06CC  0DB7               	rlf	___lldiv@quotient+2,f
 11036  06CD  0DB8               	rlf	___lldiv@quotient+3,f
 11037  06CE  0B89               	decfsz	9,f
 11038  06CF  2ECA               	goto	u1185
 11039  06D0                     l3572:
 11040  06D0  082F               	movf	___lldiv@divisor+3,w
 11041  06D1  0233               	subwf	___lldiv@dividend+3,w
 11042  06D2  1D03               	skipz
 11043  06D3  2EDE               	goto	u1195
 11044  06D4  082E               	movf	___lldiv@divisor+2,w
 11045  06D5  0232               	subwf	___lldiv@dividend+2,w
 11046  06D6  1D03               	skipz
 11047  06D7  2EDE               	goto	u1195
 11048  06D8  082D               	movf	___lldiv@divisor+1,w
 11049  06D9  0231               	subwf	___lldiv@dividend+1,w
 11050  06DA  1D03               	skipz
 11051  06DB  2EDE               	goto	u1195
 11052  06DC  082C               	movf	___lldiv@divisor,w
 11053  06DD  0230               	subwf	___lldiv@dividend,w
 11054  06DE                     u1195:
 11055  06DE  1C03               	skipc
 11056  06DF  2EE1               	goto	u1191
 11057  06E0  2EE2               	goto	u1190
 11058  06E1                     u1191:
 11059  06E1  2EEB               	goto	l3578
 11060  06E2                     u1190:
 11061  06E2                     l3574:
 11062  06E2  082C               	movf	___lldiv@divisor,w
 11063  06E3  02B0               	subwf	___lldiv@dividend,f
 11064  06E4  082D               	movf	___lldiv@divisor+1,w
 11065  06E5  3BB1               	subwfb	___lldiv@dividend+1,f
 11066  06E6  082E               	movf	___lldiv@divisor+2,w
 11067  06E7  3BB2               	subwfb	___lldiv@dividend+2,f
 11068  06E8  082F               	movf	___lldiv@divisor+3,w
 11069  06E9  3BB3               	subwfb	___lldiv@dividend+3,f
 11070  06EA                     l3576:
 11071  06EA  1435               	bsf	___lldiv@quotient,0
 11072  06EB                     l3578:
 11073  06EB  3001               	movlw	1
 11074  06EC                     u1205:
 11075  06EC  36AF               	lsrf	___lldiv@divisor+3,f
 11076  06ED  0CAE               	rrf	___lldiv@divisor+2,f
 11077  06EE  0CAD               	rrf	___lldiv@divisor+1,f
 11078  06EF  0CAC               	rrf	___lldiv@divisor,f
 11079  06F0  0B89               	decfsz	9,f
 11080  06F1  2EEC               	goto	u1205
 11081  06F2                     l3580:
 11082  06F2  3001               	movlw	1
 11083  06F3  02B9               	subwf	___lldiv@counter,f
 11084  06F4  1D03               	btfss	3,2
 11085  06F5  2EF7               	goto	u1211
 11086  06F6  2EF8               	goto	u1210
 11087  06F7                     u1211:
 11088  06F7  2EC9               	goto	l3570
 11089  06F8                     u1210:
 11090  06F8                     l3582:
 11091  06F8  0838               	movf	___lldiv@quotient+3,w
 11092  06F9  00AF               	movwf	?___lldiv+3
 11093  06FA  0837               	movf	___lldiv@quotient+2,w
 11094  06FB  00AE               	movwf	?___lldiv+2
 11095  06FC  0836               	movf	___lldiv@quotient+1,w
 11096  06FD  00AD               	movwf	?___lldiv+1
 11097  06FE  0835               	movf	___lldiv@quotient,w
 11098  06FF  00AC               	movwf	?___lldiv
 11099  0700                     l1018:
 11100  0700  0008               	return
 11101  0701                     __end_of___lldiv:
 11102                           
 11103                           	psect	text44
 11104  0BD6                     __ptext44:	
 11105 ;; *************** function _FRT_GetMillis *****************
 11106 ;; Defined at:
 11107 ;;		line 30 in file "FRT.c"
 11108 ;; Parameters:    Size  Location     Type
 11109 ;;		None
 11110 ;; Auto vars:     Size  Location     Type
 11111 ;;		None
 11112 ;; Return value:  Size  Location     Type
 11113 ;;                  4    0[BANK0 ] unsigned long 
 11114 ;; Registers used:
 11115 ;;		wreg
 11116 ;; Tracked objects:
 11117 ;;		On entry : 0/0
 11118 ;;		On exit  : 0/0
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11121 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11124 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11125 ;;Total ram usage:        4 bytes
 11126 ;; Hardware stack levels used: 1
 11127 ;; Hardware stack levels required when called: 4
 11128 ;; This function calls:
 11129 ;;		Nothing
 11130 ;; This function is called by:
 11131 ;;		_main
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           
 11135  0BD6                     _FRT_GetMillis:	
 11136                           ;psect for function _FRT_GetMillis
 11137                           
 11138  0BD6                     l3686:	
 11139                           ;incstack = 0
 11140                           ; Regs used in _FRT_GetMillis: [wreg]
 11141                           
 11142                           
 11143                           ;FRT.c: 31:     return millis;
 11144  0BD6  0022               	movlb	2	; select bank2
 11145  0BD7  0845               	movf	(_millis+3)^(0+256),w
 11146  0BD8  0020               	movlb	0	; select bank0
 11147  0BD9  00A3               	movwf	?_FRT_GetMillis+3
 11148  0BDA  0022               	movlb	2	; select bank2
 11149  0BDB  0844               	movf	(_millis+2)^(0+256),w
 11150  0BDC  0020               	movlb	0	; select bank0
 11151  0BDD  00A2               	movwf	?_FRT_GetMillis+2
 11152  0BDE  0022               	movlb	2	; select bank2
 11153  0BDF  0843               	movf	(_millis+1)^(0+256),w
 11154  0BE0  0020               	movlb	0	; select bank0
 11155  0BE1  00A1               	movwf	?_FRT_GetMillis+1
 11156  0BE2  0022               	movlb	2	; select bank2
 11157  0BE3  0842               	movf	_millis^(0+256),w
 11158  0BE4  0020               	movlb	0	; select bank0
 11159  0BE5  00A0               	movwf	?_FRT_GetMillis
 11160  0BE6                     l821:
 11161  0BE6  0008               	return
 11162  0BE7                     __end_of_FRT_GetMillis:
 11163                           
 11164                           	psect	intentry
 11165  0004                     __pintentry:	
 11166 ;; *************** function _INTERRUPT_InterruptManager *****************
 11167 ;; Defined at:
 11168 ;;		line 16 in file "interrupt_manager.c"
 11169 ;; Parameters:    Size  Location     Type
 11170 ;;		None
 11171 ;; Auto vars:     Size  Location     Type
 11172 ;;		None
 11173 ;; Return value:  Size  Location     Type
 11174 ;;                  1    wreg      void 
 11175 ;; Registers used:
 11176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11177 ;; Tracked objects:
 11178 ;;		On entry : 0/0
 11179 ;;		On exit  : 0/0
 11180 ;;		Unchanged: 0/0
 11181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11186 ;;Total ram usage:        0 bytes
 11187 ;; Hardware stack levels used: 1
 11188 ;; Hardware stack levels required when called: 3
 11189 ;; This function calls:
 11190 ;;		Absolute function
 11191 ;;		_CCP1_CaptureISR
 11192 ;;		_CCP2_CaptureISR
 11193 ;;		_CCP3_CaptureISR
 11194 ;;		_EUSART_Receive_ISR
 11195 ;;		_EUSART_Transmit_ISR
 11196 ;;		_TMR0_ISR
 11197 ;;		_TMR1_ISR
 11198 ;; This function is called by:
 11199 ;;		Interrupt level 1
 11200 ;; This function uses a non-reentrant model
 11201 ;;
 11202                           
 11203  0004                     _INTERRUPT_InterruptManager:
 11204                           
 11205                           ;incstack = 0
 11206  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11207                           
 11208                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11209  0005  3180               	pagesel	$
 11210  0006                     i1l3848:
 11211  0006  0021               	movlb	1	; select bank1
 11212  0007  1E90               	btfss	16,5	;volatile
 11213  0008  280A               	goto	u136_21
 11214  0009  280B               	goto	u136_20
 11215  000A                     u136_21:
 11216  000A  2814               	goto	i1l740
 11217  000B                     u136_20:
 11218  000B                     i1l3850:
 11219  000B  0020               	movlb	0	; select bank0
 11220  000C  1E90               	btfss	16,5	;volatile
 11221  000D  280F               	goto	u137_21
 11222  000E  2810               	goto	u137_20
 11223  000F                     u137_21:
 11224  000F  2814               	goto	i1l740
 11225  0010                     u137_20:
 11226  0010                     i1l3852:
 11227  0010  318C  2453  3180   	fcall	_TMR0_ISR
 11228  0013  2872               	goto	i1l754
 11229  0014                     i1l740:
 11230  0014  1F0B               	btfss	11,6	;volatile
 11231  0015  2817               	goto	u138_21
 11232  0016  2818               	goto	u138_20
 11233  0017                     u138_21:
 11234  0017  2872               	goto	i1l754
 11235  0018                     u138_20:
 11236  0018                     i1l3854:
 11237  0018  0021               	movlb	1	; select bank1
 11238  0019  1C14               	btfss	20,0	;volatile
 11239  001A  281C               	goto	u139_21
 11240  001B  281D               	goto	u139_20
 11241  001C                     u139_21:
 11242  001C  2826               	goto	i1l743
 11243  001D                     u139_20:
 11244  001D                     i1l3856:
 11245  001D  0020               	movlb	0	; select bank0
 11246  001E  1C14               	btfss	20,0	;volatile
 11247  001F  2821               	goto	u140_21
 11248  0020  2822               	goto	u140_20
 11249  0021                     u140_21:
 11250  0021  2826               	goto	i1l743
 11251  0022                     u140_20:
 11252  0022                     i1l3858:
 11253  0022  318C  2411  3180   	fcall	_CCP1_CaptureISR
 11254  0025  2872               	goto	i1l754
 11255  0026                     i1l743:
 11256  0026  0021               	movlb	1	; select bank1
 11257  0027  1C94               	btfss	20,1	;volatile
 11258  0028  282A               	goto	u141_21
 11259  0029  282B               	goto	u141_20
 11260  002A                     u141_21:
 11261  002A  2834               	goto	i1l745
 11262  002B                     u141_20:
 11263  002B                     i1l3860:
 11264  002B  0020               	movlb	0	; select bank0
 11265  002C  1C94               	btfss	20,1	;volatile
 11266  002D  282F               	goto	u142_21
 11267  002E  2830               	goto	u142_20
 11268  002F                     u142_21:
 11269  002F  2834               	goto	i1l745
 11270  0030                     u142_20:
 11271  0030                     i1l3862:
 11272  0030  318C  2427  3180   	fcall	_CCP2_CaptureISR
 11273  0033  2872               	goto	i1l754
 11274  0034                     i1l745:
 11275  0034  0021               	movlb	1	; select bank1
 11276  0035  1D14               	btfss	20,2	;volatile
 11277  0036  2838               	goto	u143_21
 11278  0037  2839               	goto	u143_20
 11279  0038                     u143_21:
 11280  0038  2842               	goto	i1l747
 11281  0039                     u143_20:
 11282  0039                     i1l3864:
 11283  0039  0020               	movlb	0	; select bank0
 11284  003A  1D14               	btfss	20,2	;volatile
 11285  003B  283D               	goto	u144_21
 11286  003C  283E               	goto	u144_20
 11287  003D                     u144_21:
 11288  003D  2842               	goto	i1l747
 11289  003E                     u144_20:
 11290  003E                     i1l3866:
 11291  003E  318C  243D  3180   	fcall	_CCP3_CaptureISR
 11292  0041  2872               	goto	i1l754
 11293  0042                     i1l747:
 11294  0042  0021               	movlb	1	; select bank1
 11295  0043  1C11               	btfss	17,0	;volatile
 11296  0044  2846               	goto	u145_21
 11297  0045  2847               	goto	u145_20
 11298  0046                     u145_21:
 11299  0046  2850               	goto	i1l749
 11300  0047                     u145_20:
 11301  0047                     i1l3868:
 11302  0047  0020               	movlb	0	; select bank0
 11303  0048  1C11               	btfss	17,0	;volatile
 11304  0049  284B               	goto	u146_21
 11305  004A  284C               	goto	u146_20
 11306  004B                     u146_21:
 11307  004B  2850               	goto	i1l749
 11308  004C                     u146_20:
 11309  004C                     i1l3870:
 11310  004C  318B  23A2  3180   	fcall	_TMR1_ISR
 11311  004F  2872               	goto	i1l754
 11312  0050                     i1l749:
 11313  0050  0021               	movlb	1	; select bank1
 11314  0051  1E91               	btfss	17,5	;volatile
 11315  0052  2854               	goto	u147_21
 11316  0053  2855               	goto	u147_20
 11317  0054                     u147_21:
 11318  0054  2861               	goto	i1l751
 11319  0055                     u147_20:
 11320  0055                     i1l3872:
 11321  0055  0020               	movlb	0	; select bank0
 11322  0056  1E91               	btfss	17,5	;volatile
 11323  0057  2859               	goto	u148_21
 11324  0058  285A               	goto	u148_20
 11325  0059                     u148_21:
 11326  0059  2861               	goto	i1l751
 11327  005A                     u148_20:
 11328  005A                     i1l3874:
 11329  005A  0021               	movlb	1	; select bank1
 11330  005B  082F               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 11331  005C  008A               	movwf	10
 11332  005D  082E               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 11333  005E  000A               	callw
 11334  005F  3180               	pagesel	$
 11335  0060  2872               	goto	i1l754
 11336  0061                     i1l751:
 11337  0061  0021               	movlb	1	; select bank1
 11338  0062  1E11               	btfss	17,4	;volatile
 11339  0063  2865               	goto	u149_21
 11340  0064  2866               	goto	u149_20
 11341  0065                     u149_21:
 11342  0065  2872               	goto	i1l748
 11343  0066                     u149_20:
 11344  0066                     i1l3876:
 11345  0066  0020               	movlb	0	; select bank0
 11346  0067  1E11               	btfss	17,4	;volatile
 11347  0068  286A               	goto	u150_21
 11348  0069  286B               	goto	u150_20
 11349  006A                     u150_21:
 11350  006A  2872               	goto	i1l748
 11351  006B                     u150_20:
 11352  006B                     i1l3878:
 11353  006B  0021               	movlb	1	; select bank1
 11354  006C  0831               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 11355  006D  008A               	movwf	10
 11356  006E  0830               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 11357  006F  000A               	callw
 11358  0070  3180               	pagesel	$
 11359  0071  2872               	goto	i1l754
 11360  0072                     i1l748:
 11361  0072                     i1l754:
 11362  0072  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11363  0073  0009               	retfie
 11364  0074                     __end_of_INTERRUPT_InterruptManager:
 11365                           
 11366                           	psect	text46
 11367  0BA2                     __ptext46:	
 11368 ;; *************** function _TMR1_ISR *****************
 11369 ;; Defined at:
 11370 ;;		line 129 in file "tmr1.c"
 11371 ;; Parameters:    Size  Location     Type
 11372 ;;		None
 11373 ;; Auto vars:     Size  Location     Type
 11374 ;;		None
 11375 ;; Return value:  Size  Location     Type
 11376 ;;                  1    wreg      void 
 11377 ;; Registers used:
 11378 ;;		wreg, status,2, status,0, pclath, cstack
 11379 ;; Tracked objects:
 11380 ;;		On entry : 0/0
 11381 ;;		On exit  : 0/0
 11382 ;;		Unchanged: 0/0
 11383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11388 ;;Total ram usage:        0 bytes
 11389 ;; Hardware stack levels used: 1
 11390 ;; Hardware stack levels required when called: 1
 11391 ;; This function calls:
 11392 ;;		_TMR1_WriteTimer
 11393 ;; This function is called by:
 11394 ;;		_INTERRUPT_InterruptManager
 11395 ;; This function uses a non-reentrant model
 11396 ;;
 11397                           
 11398  0BA2                     _TMR1_ISR:	
 11399                           ;psect for function _TMR1_ISR
 11400                           
 11401  0BA2                     i1l3722:	
 11402                           ;incstack = 0
 11403                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 11404                           
 11405                           
 11406                           ;tmr1.c: 133:     PIR1bits.TMR1IF = 0;
 11407  0BA2  0020               	movlb	0	; select bank0
 11408  0BA3  1011               	bcf	17,0	;volatile
 11409  0BA4                     i1l3724:
 11410                           
 11411                           ;tmr1.c: 134:     TMR1_WriteTimer(timer1ReloadVal);
 11412  0BA4  0021               	movlb	1	; select bank1
 11413  0BA5  0835               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 11414  0BA6  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 11415  0BA7  0834               	movf	_timer1ReloadVal^(0+128),w	;volatile
 11416  0BA8  00F0               	movwf	TMR1_WriteTimer@timerVal
 11417  0BA9  318B  23C5  318B   	fcall	_TMR1_WriteTimer
 11418  0BAC                     i1l547:
 11419  0BAC  0008               	return
 11420  0BAD                     __end_of_TMR1_ISR:
 11421                           
 11422                           	psect	text47
 11423  0BC5                     __ptext47:	
 11424 ;; *************** function _TMR1_WriteTimer *****************
 11425 ;; Defined at:
 11426 ;;		line 84 in file "tmr1.c"
 11427 ;; Parameters:    Size  Location     Type
 11428 ;;  timerVal        2    0[COMMON] unsigned short 
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;		None
 11431 ;; Return value:  Size  Location     Type
 11432 ;;                  1    wreg      void 
 11433 ;; Registers used:
 11434 ;;		wreg, status,2
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 0/0
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11443 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11444 ;;Total ram usage:        2 bytes
 11445 ;; Hardware stack levels used: 1
 11446 ;; This function calls:
 11447 ;;		Nothing
 11448 ;; This function is called by:
 11449 ;;		_TMR1_ISR
 11450 ;;		_TMR1_Reload
 11451 ;; This function uses a non-reentrant model
 11452 ;;
 11453                           
 11454  0BC5                     _TMR1_WriteTimer:	
 11455                           ;psect for function _TMR1_WriteTimer
 11456                           
 11457  0BC5                     i1l3530:	
 11458                           ;incstack = 0
 11459                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 11460                           
 11461                           
 11462                           ;tmr1.c: 84: void TMR1_WriteTimer(uint16_t timerVal);tmr1.c: 85: {;tmr1.c: 86:     if (T
      +                          1CONbits.T1SYNC == 1)
 11463  0BC5  0020               	movlb	0	; select bank0
 11464  0BC6  1D1B               	btfss	27,2	;volatile
 11465  0BC7  2BC9               	goto	u110_21
 11466  0BC8  2BCA               	goto	u110_20
 11467  0BC9                     u110_21:
 11468  0BC9  2BD1               	goto	i1l3540
 11469  0BCA                     u110_20:
 11470  0BCA                     i1l3532:
 11471                           
 11472                           ;tmr1.c: 87:     {;tmr1.c: 89:         T1CONbits.TMR1ON = 0;
 11473  0BCA  101B               	bcf	27,0	;volatile
 11474  0BCB                     i1l3534:
 11475                           
 11476                           ;tmr1.c: 92:         TMR1H = (uint8_t)(timerVal >> 8);
 11477  0BCB  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11478  0BCC  009A               	movwf	26	;volatile
 11479  0BCD                     i1l3536:
 11480                           
 11481                           ;tmr1.c: 93:         TMR1L = (uint8_t)timerVal;
 11482  0BCD  0870               	movf	TMR1_WriteTimer@timerVal,w
 11483  0BCE  0099               	movwf	25	;volatile
 11484  0BCF                     i1l3538:
 11485                           
 11486                           ;tmr1.c: 96:         T1CONbits.TMR1ON =1;
 11487  0BCF  141B               	bsf	27,0	;volatile
 11488                           
 11489                           ;tmr1.c: 97:     }
 11490  0BD0  2BD5               	goto	i1l535
 11491  0BD1                     i1l3540:
 11492                           
 11493                           ;tmr1.c: 99:     {;tmr1.c: 101:         TMR1H = (uint8_t)(timerVal >> 8);
 11494  0BD1  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11495  0BD2  009A               	movwf	26	;volatile
 11496  0BD3                     i1l3542:
 11497                           
 11498                           ;tmr1.c: 102:         TMR1L = (uint8_t)timerVal;
 11499  0BD3  0870               	movf	TMR1_WriteTimer@timerVal,w
 11500  0BD4  0099               	movwf	25	;volatile
 11501  0BD5                     i1l535:
 11502  0BD5  0008               	return
 11503  0BD6                     __end_of_TMR1_WriteTimer:
 11504                           
 11505                           	psect	text48
 11506  0C53                     __ptext48:	
 11507 ;; *************** function _TMR0_ISR *****************
 11508 ;; Defined at:
 11509 ;;		line 90 in file "tmr0.c"
 11510 ;; Parameters:    Size  Location     Type
 11511 ;;		None
 11512 ;; Auto vars:     Size  Location     Type
 11513 ;;		None
 11514 ;; Return value:  Size  Location     Type
 11515 ;;                  1    wreg      void 
 11516 ;; Registers used:
 11517 ;;		wreg, status,2, status,0, pclath, cstack
 11518 ;; Tracked objects:
 11519 ;;		On entry : 0/0
 11520 ;;		On exit  : 0/0
 11521 ;;		Unchanged: 0/0
 11522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11527 ;;Total ram usage:        0 bytes
 11528 ;; Hardware stack levels used: 1
 11529 ;; Hardware stack levels required when called: 2
 11530 ;; This function calls:
 11531 ;;		_TMR0_CallBack
 11532 ;; This function is called by:
 11533 ;;		_INTERRUPT_InterruptManager
 11534 ;; This function uses a non-reentrant model
 11535 ;;
 11536                           
 11537  0C53                     _TMR0_ISR:	
 11538                           ;psect for function _TMR0_ISR
 11539                           
 11540  0C53                     i1l3696:	
 11541                           ;incstack = 0
 11542                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 11543                           
 11544                           
 11545                           ;tmr0.c: 92:     static volatile uint16_t CountCallBack = 0;;tmr0.c: 95:     PIR0bits.TM
      +                          R0IF = 0;
 11546  0C53  0020               	movlb	0	; select bank0
 11547  0C54  1290               	bcf	16,5	;volatile
 11548  0C55                     i1l3698:
 11549                           
 11550                           ;tmr0.c: 97:     if (++CountCallBack >= 4)
 11551  0C55  3001               	movlw	1
 11552  0C56  0021               	movlb	1	; select bank1
 11553  0C57  07C8               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
 11554  0C58  3000               	movlw	0
 11555  0C59  3DC9               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
 11556  0C5A  3000               	movlw	0
 11557  0C5B  0249               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
 11558  0C5C  3004               	movlw	4
 11559  0C5D  1903               	skipnz
 11560  0C5E  0248               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
 11561  0C5F  1C03               	skipc
 11562  0C60  2C62               	goto	u124_21
 11563  0C61  2C63               	goto	u124_20
 11564  0C62                     u124_21:
 11565  0C62  2C69               	goto	i1l347
 11566  0C63                     u124_20:
 11567  0C63                     i1l3700:
 11568                           
 11569                           ;tmr0.c: 98:     {;tmr0.c: 100:         TMR0_CallBack();
 11570  0C63  318B  2328  318C   	fcall	_TMR0_CallBack
 11571  0C66                     i1l3702:
 11572                           
 11573                           ;tmr0.c: 103:         CountCallBack = 0;
 11574  0C66  0021               	movlb	1	; select bank1
 11575  0C67  01C8               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
 11576  0C68  01C9               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
 11577  0C69                     i1l347:
 11578  0C69  0008               	return
 11579  0C6A                     __end_of_TMR0_ISR:
 11580                           
 11581                           	psect	text49
 11582  0B28                     __ptext49:	
 11583 ;; *************** function _TMR0_CallBack *****************
 11584 ;; Defined at:
 11585 ;;		line 111 in file "tmr0.c"
 11586 ;; Parameters:    Size  Location     Type
 11587 ;;		None
 11588 ;; Auto vars:     Size  Location     Type
 11589 ;;		None
 11590 ;; Return value:  Size  Location     Type
 11591 ;;                  1    wreg      void 
 11592 ;; Registers used:
 11593 ;;		wreg, status,2, status,0, pclath, cstack
 11594 ;; Tracked objects:
 11595 ;;		On entry : 0/0
 11596 ;;		On exit  : 0/0
 11597 ;;		Unchanged: 0/0
 11598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11603 ;;Total ram usage:        0 bytes
 11604 ;; Hardware stack levels used: 1
 11605 ;; Hardware stack levels required when called: 1
 11606 ;; This function calls:
 11607 ;;		_FRT_IncMicros
 11608 ;;		_FRT_IncMillis
 11609 ;; This function is called by:
 11610 ;;		_TMR0_ISR
 11611 ;; This function uses a non-reentrant model
 11612 ;;
 11613                           
 11614  0B28                     _TMR0_CallBack:	
 11615                           ;psect for function _TMR0_CallBack
 11616                           
 11617  0B28                     i1l3480:	
 11618                           ;incstack = 0
 11619                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 11620                           
 11621                           
 11622                           ;tmr0.c: 113:     FRT_IncMillis();
 11623  0B28  318B  2398  318B   	fcall	_FRT_IncMillis
 11624                           
 11625                           ;tmr0.c: 114:     FRT_IncMicros();
 11626  0B2B  318B  238E  318B   	fcall	_FRT_IncMicros
 11627  0B2E                     i1l350:
 11628  0B2E  0008               	return
 11629  0B2F                     __end_of_TMR0_CallBack:
 11630                           
 11631                           	psect	text50
 11632  0B98                     __ptext50:	
 11633 ;; *************** function _FRT_IncMillis *****************
 11634 ;; Defined at:
 11635 ;;		line 42 in file "FRT.c"
 11636 ;; Parameters:    Size  Location     Type
 11637 ;;		None
 11638 ;; Auto vars:     Size  Location     Type
 11639 ;;		None
 11640 ;; Return value:  Size  Location     Type
 11641 ;;                  1    wreg      void 
 11642 ;; Registers used:
 11643 ;;		wreg
 11644 ;; Tracked objects:
 11645 ;;		On entry : 0/0
 11646 ;;		On exit  : 0/0
 11647 ;;		Unchanged: 0/0
 11648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11653 ;;Total ram usage:        0 bytes
 11654 ;; Hardware stack levels used: 1
 11655 ;; This function calls:
 11656 ;;		Nothing
 11657 ;; This function is called by:
 11658 ;;		_TMR0_CallBack
 11659 ;; This function uses a non-reentrant model
 11660 ;;
 11661                           
 11662  0B98                     _FRT_IncMillis:	
 11663                           ;psect for function _FRT_IncMillis
 11664                           
 11665  0B98                     i1l3254:	
 11666                           ;incstack = 0
 11667                           ; Regs used in _FRT_IncMillis: [wreg]
 11668                           
 11669                           
 11670                           ;FRT.c: 43:     millis ++;
 11671  0B98  3001               	movlw	1
 11672  0B99  0022               	movlb	2	; select bank2
 11673  0B9A  07C2               	addwf	_millis^(0+256),f
 11674  0B9B  3000               	movlw	0
 11675  0B9C  3DC3               	addwfc	(_millis+1)^(0+256),f
 11676  0B9D  3000               	movlw	0
 11677  0B9E  3DC4               	addwfc	(_millis+2)^(0+256),f
 11678  0B9F  3000               	movlw	0
 11679  0BA0  3DC5               	addwfc	(_millis+3)^(0+256),f
 11680  0BA1                     i1l827:
 11681  0BA1  0008               	return
 11682  0BA2                     __end_of_FRT_IncMillis:
 11683                           
 11684                           	psect	text51
 11685  0B8E                     __ptext51:	
 11686 ;; *************** function _FRT_IncMicros *****************
 11687 ;; Defined at:
 11688 ;;		line 49 in file "FRT.c"
 11689 ;; Parameters:    Size  Location     Type
 11690 ;;		None
 11691 ;; Auto vars:     Size  Location     Type
 11692 ;;		None
 11693 ;; Return value:  Size  Location     Type
 11694 ;;                  1    wreg      void 
 11695 ;; Registers used:
 11696 ;;		wreg
 11697 ;; Tracked objects:
 11698 ;;		On entry : 0/0
 11699 ;;		On exit  : 0/0
 11700 ;;		Unchanged: 0/0
 11701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11706 ;;Total ram usage:        0 bytes
 11707 ;; Hardware stack levels used: 1
 11708 ;; This function calls:
 11709 ;;		Nothing
 11710 ;; This function is called by:
 11711 ;;		_TMR0_CallBack
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714                           
 11715  0B8E                     _FRT_IncMicros:	
 11716                           ;psect for function _FRT_IncMicros
 11717                           
 11718  0B8E                     i1l3258:	
 11719                           ;incstack = 0
 11720                           ; Regs used in _FRT_IncMicros: [wreg]
 11721                           
 11722                           
 11723                           ;FRT.c: 50:     micros += 1000;
 11724  0B8E  30E8               	movlw	232
 11725  0B8F  0022               	movlb	2	; select bank2
 11726  0B90  07BE               	addwf	_micros@FRT$F1533^(0+256),f
 11727  0B91  3003               	movlw	3
 11728  0B92  3DBF               	addwfc	(_micros@FRT$F1533+1)^(0+256),f
 11729  0B93  3000               	movlw	0
 11730  0B94  3DC0               	addwfc	(_micros@FRT$F1533+2)^(0+256),f
 11731  0B95  3000               	movlw	0
 11732  0B96  3DC1               	addwfc	(_micros@FRT$F1533+3)^(0+256),f
 11733  0B97                     i1l830:
 11734  0B97  0008               	return
 11735  0B98                     __end_of_FRT_IncMicros:
 11736                           
 11737                           	psect	text52
 11738  0D3C                     __ptext52:	
 11739 ;; *************** function _EUSART_Transmit_ISR *****************
 11740 ;; Defined at:
 11741 ;;		line 181 in file "eusart.c"
 11742 ;; Parameters:    Size  Location     Type
 11743 ;;		None
 11744 ;; Auto vars:     Size  Location     Type
 11745 ;;		None
 11746 ;; Return value:  Size  Location     Type
 11747 ;;                  1    wreg      void 
 11748 ;; Registers used:
 11749 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11750 ;; Tracked objects:
 11751 ;;		On entry : 0/0
 11752 ;;		On exit  : 0/0
 11753 ;;		Unchanged: 0/0
 11754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11757 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11758 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11759 ;;Total ram usage:        1 bytes
 11760 ;; Hardware stack levels used: 1
 11761 ;; This function calls:
 11762 ;;		Nothing
 11763 ;; This function is called by:
 11764 ;;		_EUSART_Initialize
 11765 ;;		_INTERRUPT_InterruptManager
 11766 ;; This function uses a non-reentrant model
 11767 ;;
 11768                           
 11769  0D3C                     _EUSART_Transmit_ISR:	
 11770                           ;psect for function _EUSART_Transmit_ISR
 11771                           
 11772  0D3C                     i1l3748:	
 11773                           ;incstack = 0
 11774                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 11775                           
 11776                           
 11777                           ;eusart.c: 185:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 11778  0D3C  3008               	movlw	8
 11779  0D3D  0021               	movlb	1	; select bank1
 11780  0D3E  024C               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 11781  0D3F  1803               	skipnc
 11782  0D40  2D42               	goto	u127_21
 11783  0D41  2D43               	goto	u127_20
 11784  0D42                     u127_21:
 11785  0D42  2D5C               	goto	i1l669
 11786  0D43                     u127_20:
 11787  0D43                     i1l3750:
 11788                           
 11789                           ;eusart.c: 186:     {;eusart.c: 187:         TX1REG = eusartTxBuffer[eusartTxTail++];
 11790  0D43  087C               	movf	_eusartTxTail,w
 11791  0D44  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 11792  0D45  0086               	movwf	6
 11793  0D46  3001               	movlw	1	; select bank2/3
 11794  0D47  0087               	movwf	7
 11795  0D48  0801               	movf	1,w
 11796  0D49  0023               	movlb	3	; select bank3
 11797  0D4A  009A               	movwf	26	;volatile
 11798  0D4B                     i1l3752:
 11799  0D4B  3001               	movlw	1
 11800  0D4C  00F0               	movwf	??_EUSART_Transmit_ISR
 11801  0D4D  0870               	movf	??_EUSART_Transmit_ISR,w
 11802  0D4E  07FC               	addwf	_eusartTxTail,f	;volatile
 11803  0D4F                     i1l3754:
 11804                           
 11805                           ;eusart.c: 188:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 11806  0D4F  3008               	movlw	8
 11807  0D50  027C               	subwf	_eusartTxTail,w	;volatile
 11808  0D51  1C03               	skipc
 11809  0D52  2D54               	goto	u128_21
 11810  0D53  2D55               	goto	u128_20
 11811  0D54                     u128_21:
 11812  0D54  2D56               	goto	i1l3758
 11813  0D55                     u128_20:
 11814  0D55                     i1l3756:
 11815                           
 11816                           ;eusart.c: 189:         {;eusart.c: 190:             eusartTxTail = 0;
 11817  0D55  01FC               	clrf	_eusartTxTail	;volatile
 11818  0D56                     i1l3758:
 11819                           
 11820                           ;eusart.c: 192:         eusartTxBufferRemaining++;
 11821  0D56  3001               	movlw	1
 11822  0D57  00F0               	movwf	??_EUSART_Transmit_ISR
 11823  0D58  0870               	movf	??_EUSART_Transmit_ISR,w
 11824  0D59  0021               	movlb	1	; select bank1
 11825  0D5A  07CC               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 11826                           
 11827                           ;eusart.c: 193:     }
 11828  0D5B  2D5D               	goto	i1l672
 11829  0D5C                     i1l669:	
 11830                           ;eusart.c: 194:     else
 11831                           
 11832                           
 11833                           ;eusart.c: 195:     {;eusart.c: 196:         PIE1bits.TXIE = 0;
 11834  0D5C  1211               	bcf	17,4	;volatile
 11835  0D5D                     i1l672:
 11836  0D5D  0008               	return
 11837  0D5E                     __end_of_EUSART_Transmit_ISR:
 11838                           
 11839                           	psect	text53
 11840  0F40                     __ptext53:	
 11841 ;; *************** function _EUSART_Receive_ISR *****************
 11842 ;; Defined at:
 11843 ;;		line 202 in file "eusart.c"
 11844 ;; Parameters:    Size  Location     Type
 11845 ;;		None
 11846 ;; Auto vars:     Size  Location     Type
 11847 ;;		None
 11848 ;; Return value:  Size  Location     Type
 11849 ;;                  1    wreg      void 
 11850 ;; Registers used:
 11851 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11852 ;; Tracked objects:
 11853 ;;		On entry : 0/0
 11854 ;;		On exit  : 0/0
 11855 ;;		Unchanged: 0/0
 11856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11861 ;;Total ram usage:        0 bytes
 11862 ;; Hardware stack levels used: 1
 11863 ;; Hardware stack levels required when called: 2
 11864 ;; This function calls:
 11865 ;;		Absolute function
 11866 ;;		_EUSART_DefaultErrorHandler
 11867 ;;		_EUSART_DefaultFramingErrorHandler
 11868 ;;		_EUSART_DefaultOverrunErrorHandler
 11869 ;;		_EUSART_RxDataHandler
 11870 ;; This function is called by:
 11871 ;;		_EUSART_Initialize
 11872 ;;		_INTERRUPT_InterruptManager
 11873 ;; This function uses a non-reentrant model
 11874 ;;
 11875                           
 11876  0F40                     _EUSART_Receive_ISR:	
 11877                           ;psect for function _EUSART_Receive_ISR
 11878                           
 11879  0F40                     i1l3760:	
 11880                           ;incstack = 0
 11881                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11882                           
 11883                           
 11884                           ;eusart.c: 205:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 11885  0F40  087B               	movf	_eusartRxHead,w	;volatile
 11886  0F41  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11887  0F42  0086               	movwf	6
 11888  0F43  3001               	movlw	1	; select bank2/3
 11889  0F44  0087               	movwf	7
 11890  0F45  0181               	clrf	1
 11891  0F46                     i1l3762:
 11892                           
 11893                           ;eusart.c: 207:     if(RC1STAbits.FERR){
 11894  0F46  0023               	movlb	3	; select bank3
 11895  0F47  1D1D               	btfss	29,2	;volatile
 11896  0F48  2F4A               	goto	u129_21
 11897  0F49  2F4B               	goto	u129_20
 11898  0F4A                     u129_21:
 11899  0F4A  2F57               	goto	i1l3768
 11900  0F4B                     u129_20:
 11901  0F4B                     i1l3764:
 11902                           
 11903                           ;eusart.c: 208:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 11904  0F4B  087B               	movf	_eusartRxHead,w	;volatile
 11905  0F4C  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11906  0F4D  0086               	movwf	6
 11907  0F4E  3001               	movlw	1	; select bank2/3
 11908  0F4F  0087               	movwf	7
 11909  0F50  1481               	bsf	1,1
 11910  0F51                     i1l3766:
 11911                           
 11912                           ;eusart.c: 209:         EUSART_FramingErrorHandler();
 11913  0F51  0021               	movlb	1	; select bank1
 11914  0F52  082D               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 11915  0F53  008A               	movwf	10
 11916  0F54  082C               	movf	_EUSART_FramingErrorHandler^(0+128),w
 11917  0F55  000A               	callw
 11918  0F56  318F               	pagesel	$
 11919  0F57                     i1l3768:
 11920                           
 11921                           ;eusart.c: 212:     if(RC1STAbits.OERR){
 11922  0F57  0023               	movlb	3	; select bank3
 11923  0F58  1C9D               	btfss	29,1	;volatile
 11924  0F59  2F5B               	goto	u130_21
 11925  0F5A  2F5C               	goto	u130_20
 11926  0F5B                     u130_21:
 11927  0F5B  2F68               	goto	i1l3774
 11928  0F5C                     u130_20:
 11929  0F5C                     i1l3770:
 11930                           
 11931                           ;eusart.c: 213:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 11932  0F5C  087B               	movf	_eusartRxHead,w	;volatile
 11933  0F5D  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11934  0F5E  0086               	movwf	6
 11935  0F5F  3001               	movlw	1	; select bank2/3
 11936  0F60  0087               	movwf	7
 11937  0F61  1501               	bsf	1,2
 11938  0F62                     i1l3772:
 11939                           
 11940                           ;eusart.c: 214:         EUSART_OverrunErrorHandler();
 11941  0F62  0021               	movlb	1	; select bank1
 11942  0F63  082B               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 11943  0F64  008A               	movwf	10
 11944  0F65  082A               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 11945  0F66  000A               	callw
 11946  0F67  318F               	pagesel	$
 11947  0F68                     i1l3774:
 11948                           
 11949                           ;eusart.c: 217:     if(eusartRxStatusBuffer[eusartRxHead].status){
 11950  0F68  087B               	movf	_eusartRxHead,w	;volatile
 11951  0F69  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11952  0F6A  0086               	movwf	6
 11953  0F6B  3001               	movlw	1	; select bank2/3
 11954  0F6C  0087               	movwf	7
 11955  0F6D  0801               	movf	1,w
 11956  0F6E  1903               	btfsc	3,2
 11957  0F6F  2F71               	goto	u131_21
 11958  0F70  2F72               	goto	u131_20
 11959  0F71                     u131_21:
 11960  0F71  2F79               	goto	i1l3778
 11961  0F72                     u131_20:
 11962  0F72                     i1l3776:
 11963                           
 11964                           ;eusart.c: 218:         EUSART_ErrorHandler();
 11965  0F72  0021               	movlb	1	; select bank1
 11966  0F73  0829               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 11967  0F74  008A               	movwf	10
 11968  0F75  0828               	movf	_EUSART_ErrorHandler^(0+128),w
 11969  0F76  000A               	callw
 11970  0F77  318F               	pagesel	$
 11971                           
 11972                           ;eusart.c: 219:     } else {
 11973  0F78  2F7C               	goto	i1l679
 11974  0F79                     i1l3778:
 11975                           
 11976                           ;eusart.c: 220:         EUSART_RxDataHandler();
 11977  0F79  318C  24CB  318F   	fcall	_EUSART_RxDataHandler
 11978  0F7C                     i1l679:
 11979  0F7C  0008               	return
 11980  0F7D                     __end_of_EUSART_Receive_ISR:
 11981                           
 11982                           	psect	text54
 11983  0B1A                     __ptext54:	
 11984 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 11985 ;; Defined at:
 11986 ;;		line 244 in file "eusart.c"
 11987 ;; Parameters:    Size  Location     Type
 11988 ;;		None
 11989 ;; Auto vars:     Size  Location     Type
 11990 ;;		None
 11991 ;; Return value:  Size  Location     Type
 11992 ;;                  1    wreg      void 
 11993 ;; Registers used:
 11994 ;;		None
 11995 ;; Tracked objects:
 11996 ;;		On entry : 0/0
 11997 ;;		On exit  : 0/0
 11998 ;;		Unchanged: 0/0
 11999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12004 ;;Total ram usage:        0 bytes
 12005 ;; Hardware stack levels used: 1
 12006 ;; This function calls:
 12007 ;;		Nothing
 12008 ;; This function is called by:
 12009 ;;		_EUSART_Initialize
 12010 ;;		_EUSART_Receive_ISR
 12011 ;; This function uses a non-reentrant model
 12012 ;;
 12013                           
 12014  0B1A                     _EUSART_DefaultOverrunErrorHandler:	
 12015                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 12016                           
 12017  0B1A                     i1l3544:	
 12018                           ;incstack = 0
 12019                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 12020                           
 12021                           
 12022                           ;eusart.c: 247:     RC1STAbits.CREN = 0;
 12023  0B1A  0023               	movlb	3	; select bank3
 12024  0B1B  121D               	bcf	29,4	;volatile
 12025                           
 12026                           ;eusart.c: 248:     RC1STAbits.CREN = 1;
 12027  0B1C  161D               	bsf	29,4	;volatile
 12028  0B1D                     i1l689:
 12029  0B1D  0008               	return
 12030  0B1E                     __end_of_EUSART_DefaultOverrunErrorHandler:
 12031                           
 12032                           	psect	text55
 12033  0003                     __ptext55:	
 12034 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 12035 ;; Defined at:
 12036 ;;		line 240 in file "eusart.c"
 12037 ;; Parameters:    Size  Location     Type
 12038 ;;		None
 12039 ;; Auto vars:     Size  Location     Type
 12040 ;;		None
 12041 ;; Return value:  Size  Location     Type
 12042 ;;                  1    wreg      void 
 12043 ;; Registers used:
 12044 ;;		None
 12045 ;; Tracked objects:
 12046 ;;		On entry : 0/0
 12047 ;;		On exit  : 0/0
 12048 ;;		Unchanged: 0/0
 12049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12054 ;;Total ram usage:        0 bytes
 12055 ;; Hardware stack levels used: 1
 12056 ;; This function calls:
 12057 ;;		Nothing
 12058 ;; This function is called by:
 12059 ;;		_EUSART_Initialize
 12060 ;;		_EUSART_Receive_ISR
 12061 ;; This function uses a non-reentrant model
 12062 ;;
 12063                           
 12064  0003                     _EUSART_DefaultFramingErrorHandler:	
 12065                           ;psect for function _EUSART_DefaultFramingErrorHandler
 12066                           
 12067  0003                     i1l686:	
 12068                           ;incstack = 0
 12069                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 12070                           
 12071  0003  0008               	return
 12072  0004                     __end_of_EUSART_DefaultFramingErrorHandler:
 12073                           
 12074                           	psect	text56
 12075  0B16                     __ptext56:	
 12076 ;; *************** function _EUSART_DefaultErrorHandler *****************
 12077 ;; Defined at:
 12078 ;;		line 254 in file "eusart.c"
 12079 ;; Parameters:    Size  Location     Type
 12080 ;;		None
 12081 ;; Auto vars:     Size  Location     Type
 12082 ;;		None
 12083 ;; Return value:  Size  Location     Type
 12084 ;;                  1    wreg      void 
 12085 ;; Registers used:
 12086 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12087 ;; Tracked objects:
 12088 ;;		On entry : 0/0
 12089 ;;		On exit  : 0/0
 12090 ;;		Unchanged: 0/0
 12091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12096 ;;Total ram usage:        0 bytes
 12097 ;; Hardware stack levels used: 1
 12098 ;; Hardware stack levels required when called: 1
 12099 ;; This function calls:
 12100 ;;		_EUSART_RxDataHandler
 12101 ;; This function is called by:
 12102 ;;		_EUSART_Initialize
 12103 ;;		_EUSART_Receive_ISR
 12104 ;; This function uses a non-reentrant model
 12105 ;;
 12106                           
 12107  0B16                     _EUSART_DefaultErrorHandler:	
 12108                           ;psect for function _EUSART_DefaultErrorHandler
 12109                           
 12110  0B16                     i1l3546:	
 12111                           ;incstack = 0
 12112                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12113                           
 12114                           
 12115                           ;eusart.c: 255:     EUSART_RxDataHandler();
 12116  0B16  318C  24CB  318B   	fcall	_EUSART_RxDataHandler
 12117  0B19                     i1l692:
 12118  0B19  0008               	return
 12119  0B1A                     __end_of_EUSART_DefaultErrorHandler:
 12120                           
 12121                           	psect	text57
 12122  0CCB                     __ptext57:	
 12123 ;; *************** function _EUSART_RxDataHandler *****************
 12124 ;; Defined at:
 12125 ;;		line 228 in file "eusart.c"
 12126 ;; Parameters:    Size  Location     Type
 12127 ;;		None
 12128 ;; Auto vars:     Size  Location     Type
 12129 ;;		None
 12130 ;; Return value:  Size  Location     Type
 12131 ;;                  1    wreg      void 
 12132 ;; Registers used:
 12133 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12134 ;; Tracked objects:
 12135 ;;		On entry : 0/0
 12136 ;;		On exit  : 0/0
 12137 ;;		Unchanged: 0/0
 12138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12141 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12142 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12143 ;;Total ram usage:        1 bytes
 12144 ;; Hardware stack levels used: 1
 12145 ;; This function calls:
 12146 ;;		Nothing
 12147 ;; This function is called by:
 12148 ;;		_EUSART_Receive_ISR
 12149 ;;		_EUSART_DefaultErrorHandler
 12150 ;; This function uses a non-reentrant model
 12151 ;;
 12152                           
 12153  0CCB                     _EUSART_RxDataHandler:	
 12154                           ;psect for function _EUSART_RxDataHandler
 12155                           
 12156  0CCB                     i1l3262:	
 12157                           ;incstack = 0
 12158                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12159                           
 12160                           
 12161                           ;eusart.c: 230:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 12162  0CCB  0023               	movlb	3	; select bank3
 12163  0CCC  0819               	movf	25,w	;volatile
 12164  0CCD  00F0               	movwf	??_EUSART_RxDataHandler
 12165  0CCE  087B               	movf	_eusartRxHead,w
 12166  0CCF  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 12167  0CD0  0086               	movwf	6
 12168  0CD1  3001               	movlw	1	; select bank2/3
 12169  0CD2  0087               	movwf	7
 12170  0CD3  0870               	movf	??_EUSART_RxDataHandler,w
 12171  0CD4  0081               	movwf	1
 12172  0CD5                     i1l3264:
 12173  0CD5  3001               	movlw	1
 12174  0CD6  00F0               	movwf	??_EUSART_RxDataHandler
 12175  0CD7  0870               	movf	??_EUSART_RxDataHandler,w
 12176  0CD8  07FB               	addwf	_eusartRxHead,f	;volatile
 12177  0CD9                     i1l3266:
 12178                           
 12179                           ;eusart.c: 231:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 12180  0CD9  3008               	movlw	8
 12181  0CDA  027B               	subwf	_eusartRxHead,w	;volatile
 12182  0CDB  1C03               	skipc
 12183  0CDC  2CDE               	goto	u106_21
 12184  0CDD  2CDF               	goto	u106_20
 12185  0CDE                     u106_21:
 12186  0CDE  2CE0               	goto	i1l3270
 12187  0CDF                     u106_20:
 12188  0CDF                     i1l3268:
 12189                           
 12190                           ;eusart.c: 232:     {;eusart.c: 233:         eusartRxHead = 0;
 12191  0CDF  01FB               	clrf	_eusartRxHead	;volatile
 12192  0CE0                     i1l3270:
 12193                           
 12194                           ;eusart.c: 235:     eusartRxCount++;
 12195  0CE0  3001               	movlw	1
 12196  0CE1  00F0               	movwf	??_EUSART_RxDataHandler
 12197  0CE2  0870               	movf	??_EUSART_RxDataHandler,w
 12198  0CE3  0021               	movlb	1	; select bank1
 12199  0CE4  07CB               	addwf	_eusartRxCount^(0+128),f	;volatile
 12200  0CE5                     i1l683:
 12201  0CE5  0008               	return
 12202  0CE6                     __end_of_EUSART_RxDataHandler:
 12203                           
 12204                           	psect	text58
 12205  0C3D                     __ptext58:	
 12206 ;; *************** function _CCP3_CaptureISR *****************
 12207 ;; Defined at:
 12208 ;;		line 81 in file "ccp3.c"
 12209 ;; Parameters:    Size  Location     Type
 12210 ;;		None
 12211 ;; Auto vars:     Size  Location     Type
 12212 ;;  module          2    8[COMMON] struct CCPR3Reg_tag
 12213 ;; Return value:  Size  Location     Type
 12214 ;;                  1    wreg      void 
 12215 ;; Registers used:
 12216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12217 ;; Tracked objects:
 12218 ;;		On entry : 0/0
 12219 ;;		On exit  : 0/0
 12220 ;;		Unchanged: 0/0
 12221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12224 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12225 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12226 ;;Total ram usage:        3 bytes
 12227 ;; Hardware stack levels used: 1
 12228 ;; Hardware stack levels required when called: 2
 12229 ;; This function calls:
 12230 ;;		Absolute function
 12231 ;;		_CCP3_DefaultCallBack
 12232 ;; This function is called by:
 12233 ;;		_INTERRUPT_InterruptManager
 12234 ;; This function uses a non-reentrant model
 12235 ;;
 12236                           
 12237  0C3D                     _CCP3_CaptureISR:	
 12238                           ;psect for function _CCP3_CaptureISR
 12239                           
 12240  0C3D                     i1l3716:	
 12241                           ;incstack = 0
 12242                           ; Regs used in _CCP3_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12243                           
 12244                           
 12245                           ;ccp3.c: 83:     CCP3_PERIOD_REG_T module;;ccp3.c: 86:     PIR4bits.CCP3IF = 0;
 12246  0C3D  0020               	movlb	0	; select bank0
 12247  0C3E  1114               	bcf	20,2	;volatile
 12248  0C3F                     i1l3718:
 12249                           
 12250                           ;ccp3.c: 89:     module.ccpr3l = CCPR3L;
 12251  0C3F  0026               	movlb	6	; select bank6
 12252  0C40  0811               	movf	17,w	;volatile
 12253  0C41  00F7               	movwf	??_CCP3_CaptureISR
 12254  0C42  0877               	movf	??_CCP3_CaptureISR,w
 12255  0C43  00F8               	movwf	CCP3_CaptureISR@module
 12256                           
 12257                           ;ccp3.c: 90:     module.ccpr3h = CCPR3H;
 12258  0C44  0812               	movf	18,w	;volatile
 12259  0C45  00F7               	movwf	??_CCP3_CaptureISR
 12260  0C46  0877               	movf	??_CCP3_CaptureISR,w
 12261  0C47  00F9               	movwf	CCP3_CaptureISR@module+1
 12262  0C48                     i1l3720:
 12263                           
 12264                           ;ccp3.c: 93:     CCP3_CallBack(module.ccpr3_16Bit);
 12265  0C48  0879               	movf	CCP3_CaptureISR@module+1,w
 12266  0C49  00F4               	movwf	CCP3_DefaultCallBack@capturedValue+1
 12267  0C4A  0878               	movf	CCP3_CaptureISR@module,w
 12268  0C4B  00F3               	movwf	CCP3_DefaultCallBack@capturedValue
 12269  0C4C  0021               	movlb	1	; select bank1
 12270  0C4D  083B               	movf	(_CCP3_CallBack+1)^(0+128),w
 12271  0C4E  008A               	movwf	10
 12272  0C4F  083A               	movf	_CCP3_CallBack^(0+128),w
 12273  0C50  000A               	callw
 12274  0C51  318C               	pagesel	$
 12275  0C52                     i1l491:
 12276  0C52  0008               	return
 12277  0C53                     __end_of_CCP3_CaptureISR:
 12278                           
 12279                           	psect	text59
 12280  0F03                     __ptext59:	
 12281 ;; *************** function _CCP3_DefaultCallBack *****************
 12282 ;; Defined at:
 12283 ;;		line 29 in file "ccp3.c"
 12284 ;; Parameters:    Size  Location     Type
 12285 ;;  capturedValu    2    3[COMMON] unsigned short 
 12286 ;; Auto vars:     Size  Location     Type
 12287 ;;		None
 12288 ;; Return value:  Size  Location     Type
 12289 ;;                  1    wreg      void 
 12290 ;; Registers used:
 12291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12292 ;; Tracked objects:
 12293 ;;		On entry : 0/0
 12294 ;;		On exit  : 0/0
 12295 ;;		Unchanged: 0/0
 12296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12299 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12300 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12301 ;;Total ram usage:        4 bytes
 12302 ;; Hardware stack levels used: 1
 12303 ;; Hardware stack levels required when called: 1
 12304 ;; This function calls:
 12305 ;;		_JSN_GetLastTrig
 12306 ;;		_ReadPin
 12307 ;; This function is called by:
 12308 ;;		_CCP3_Initialize
 12309 ;;		_CCP3_CaptureISR
 12310 ;; This function uses a non-reentrant model
 12311 ;;
 12312                           
 12313  0F03                     _CCP3_DefaultCallBack:	
 12314                           ;psect for function _CCP3_DefaultCallBack
 12315                           
 12316  0F03                     i1l3514:	
 12317                           ;incstack = 0
 12318                           ; Regs used in _CCP3_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12319                           
 12320                           
 12321                           ;ccp3.c: 29: static void CCP3_DefaultCallBack(uint16_t capturedValue);ccp3.c: 30: {;ccp3
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 12322  0F03  318B  2313  318F   	fcall	_JSN_GetLastTrig
 12323  0F06  00F5               	movwf	??_CCP3_DefaultCallBack
 12324  0F07  0875               	movf	??_CCP3_DefaultCallBack,w
 12325  0F08  0021               	movlb	1	; select bank1
 12326  0F09  00CD               	movwf	_lastTrig@ccp3$F1000^(0+128)
 12327                           
 12328                           ;ccp3.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 12329  0F0A  2F28               	goto	i1l3524
 12330  0F0B                     i1l3516:
 12331                           
 12332                           ;ccp3.c: 35:             ticksUp = capturedValue;
 12333  0F0B  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 12334  0F0C  0021               	movlb	1	; select bank1
 12335  0F0D  00B9               	movwf	(_ticksUp@ccp3$F997+1)^(0+128)
 12336  0F0E  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 12337  0F0F  00B8               	movwf	_ticksUp@ccp3$F997^(0+128)
 12338                           
 12339                           ;ccp3.c: 36:             sameSens = lastTrig;
 12340  0F10  084D               	movf	_lastTrig@ccp3$F1000^(0+128),w
 12341  0F11  00F5               	movwf	??_CCP3_DefaultCallBack
 12342  0F12  0875               	movf	??_CCP3_DefaultCallBack,w
 12343  0F13  00CE               	movwf	_sameSens@ccp3$F999^(0+128)
 12344                           
 12345                           ;ccp3.c: 37:             break;
 12346  0F14  2F3F               	goto	i1l485
 12347  0F15                     i1l3518:
 12348                           
 12349                           ;ccp3.c: 40:             ticksDown = capturedValue;
 12350  0F15  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 12351  0F16  0021               	movlb	1	; select bank1
 12352  0F17  00B7               	movwf	(_ticksDown@ccp3$F998+1)^(0+128)
 12353  0F18  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 12354  0F19  00B6               	movwf	_ticksDown@ccp3$F998^(0+128)
 12355  0F1A                     i1l3520:
 12356                           
 12357                           ;ccp3.c: 43:             sameSens->echoHighTime = (ticksDown - ticksUp);
 12358  0F1A  0838               	movf	_ticksUp@ccp3$F997^(0+128),w
 12359  0F1B  0236               	subwf	_ticksDown@ccp3$F998^(0+128),w
 12360  0F1C  00F5               	movwf	??_CCP3_DefaultCallBack
 12361  0F1D  0839               	movf	(_ticksUp@ccp3$F997+1)^(0+128),w
 12362  0F1E  3B37               	subwfb	(_ticksDown@ccp3$F998+1)^(0+128),w
 12363  0F1F  00F6               	movwf	??_CCP3_DefaultCallBack+1
 12364  0F20  084E               	movf	_sameSens@ccp3$F999^(0+128),w
 12365  0F21  0086               	movwf	6
 12366  0F22  0187               	clrf	7
 12367  0F23  0875               	movf	??_CCP3_DefaultCallBack,w
 12368  0F24  3FC0               	movwi [0]fsr1
 12369  0F25  0876               	movf	??_CCP3_DefaultCallBack+1,w
 12370  0F26  3FC1               	movwi [1]fsr1
 12371                           
 12372                           ;ccp3.c: 44:             break;
 12373  0F27  2F3F               	goto	i1l485
 12374  0F28                     i1l3524:
 12375  0F28  084D               	movf	_lastTrig@ccp3$F1000^(0+128),w
 12376  0F29  3E05               	addlw	5
 12377  0F2A  0086               	movwf	6
 12378  0F2B  0187               	clrf	7
 12379  0F2C  0801               	movf	1,w
 12380  0F2D  3184  2498  318F   	fcall	_ReadPin
 12381  0F30  00F5               	movwf	??_CCP3_DefaultCallBack
 12382  0F31  01F6               	clrf	??_CCP3_DefaultCallBack+1
 12383                           
 12384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12385                           ; Switch size 1, requested type "simple"
 12386                           ; Number of cases is 1, Range of values is 0 to 0
 12387                           ; switch strategies available:
 12388                           ; Name         Instructions Cycles
 12389                           ; simple_byte            4     3 (average)
 12390                           ; direct_byte            8     6 (fixed)
 12391                           ; jumptable            260     6 (fixed)
 12392                           ;	Chosen strategy is simple_byte
 12393  0F32  0876               	movf	??_CCP3_DefaultCallBack+1,w
 12394  0F33  3A00               	xorlw	0	; case 0
 12395  0F34  1903               	skipnz
 12396  0F35  2F37               	goto	i1l4120
 12397  0F36  2F3F               	goto	i1l485
 12398  0F37                     i1l4120:
 12399                           
 12400                           ; Switch size 1, requested type "simple"
 12401                           ; Number of cases is 2, Range of values is 0 to 1
 12402                           ; switch strategies available:
 12403                           ; Name         Instructions Cycles
 12404                           ; simple_byte            7     4 (average)
 12405                           ; direct_byte           10     6 (fixed)
 12406                           ; jumptable            260     6 (fixed)
 12407                           ;	Chosen strategy is simple_byte
 12408  0F37  0875               	movf	??_CCP3_DefaultCallBack,w
 12409  0F38  3A00               	xorlw	0	; case 0
 12410  0F39  1903               	skipnz
 12411  0F3A  2F15               	goto	i1l3518
 12412  0F3B  3A01               	xorlw	1	; case 1
 12413  0F3C  1903               	skipnz
 12414  0F3D  2F0B               	goto	i1l3516
 12415  0F3E  2F3F               	goto	i1l485
 12416  0F3F                     i1l485:
 12417  0F3F  0008               	return
 12418  0F40                     __end_of_CCP3_DefaultCallBack:
 12419                           
 12420                           	psect	text60
 12421  0C27                     __ptext60:	
 12422 ;; *************** function _CCP2_CaptureISR *****************
 12423 ;; Defined at:
 12424 ;;		line 81 in file "ccp2.c"
 12425 ;; Parameters:    Size  Location     Type
 12426 ;;		None
 12427 ;; Auto vars:     Size  Location     Type
 12428 ;;  module          2    8[COMMON] struct CCPR2Reg_tag
 12429 ;; Return value:  Size  Location     Type
 12430 ;;                  1    wreg      void 
 12431 ;; Registers used:
 12432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12433 ;; Tracked objects:
 12434 ;;		On entry : 0/0
 12435 ;;		On exit  : 0/0
 12436 ;;		Unchanged: 0/0
 12437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12439 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12440 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12441 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12442 ;;Total ram usage:        3 bytes
 12443 ;; Hardware stack levels used: 1
 12444 ;; Hardware stack levels required when called: 2
 12445 ;; This function calls:
 12446 ;;		Absolute function
 12447 ;;		_CCP2_DefaultCallBack
 12448 ;; This function is called by:
 12449 ;;		_INTERRUPT_InterruptManager
 12450 ;; This function uses a non-reentrant model
 12451 ;;
 12452                           
 12453  0C27                     _CCP2_CaptureISR:	
 12454                           ;psect for function _CCP2_CaptureISR
 12455                           
 12456  0C27                     i1l3710:	
 12457                           ;incstack = 0
 12458                           ; Regs used in _CCP2_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12459                           
 12460                           
 12461                           ;ccp2.c: 83:     CCP2_PERIOD_REG_T module;;ccp2.c: 86:     PIR4bits.CCP2IF = 0;
 12462  0C27  0020               	movlb	0	; select bank0
 12463  0C28  1094               	bcf	20,1	;volatile
 12464  0C29                     i1l3712:
 12465                           
 12466                           ;ccp2.c: 89:     module.ccpr2l = CCPR2L;
 12467  0C29  0025               	movlb	5	; select bank5
 12468  0C2A  0815               	movf	21,w	;volatile
 12469  0C2B  00F7               	movwf	??_CCP2_CaptureISR
 12470  0C2C  0877               	movf	??_CCP2_CaptureISR,w
 12471  0C2D  00F8               	movwf	CCP2_CaptureISR@module
 12472                           
 12473                           ;ccp2.c: 90:     module.ccpr2h = CCPR2H;
 12474  0C2E  0816               	movf	22,w	;volatile
 12475  0C2F  00F7               	movwf	??_CCP2_CaptureISR
 12476  0C30  0877               	movf	??_CCP2_CaptureISR,w
 12477  0C31  00F9               	movwf	CCP2_CaptureISR@module+1
 12478  0C32                     i1l3714:
 12479                           
 12480                           ;ccp2.c: 93:     CCP2_CallBack(module.ccpr2_16Bit);
 12481  0C32  0879               	movf	CCP2_CaptureISR@module+1,w
 12482  0C33  00F4               	movwf	CCP2_DefaultCallBack@capturedValue+1
 12483  0C34  0878               	movf	CCP2_CaptureISR@module,w
 12484  0C35  00F3               	movwf	CCP2_DefaultCallBack@capturedValue
 12485  0C36  0021               	movlb	1	; select bank1
 12486  0C37  0841               	movf	(_CCP2_CallBack+1)^(0+128),w
 12487  0C38  008A               	movwf	10
 12488  0C39  0840               	movf	_CCP2_CallBack^(0+128),w
 12489  0C3A  000A               	callw
 12490  0C3B  318C               	pagesel	$
 12491  0C3C                     i1l445:
 12492  0C3C  0008               	return
 12493  0C3D                     __end_of_CCP2_CaptureISR:
 12494                           
 12495                           	psect	text61
 12496  0EC6                     __ptext61:	
 12497 ;; *************** function _CCP2_DefaultCallBack *****************
 12498 ;; Defined at:
 12499 ;;		line 29 in file "ccp2.c"
 12500 ;; Parameters:    Size  Location     Type
 12501 ;;  capturedValu    2    3[COMMON] unsigned short 
 12502 ;; Auto vars:     Size  Location     Type
 12503 ;;		None
 12504 ;; Return value:  Size  Location     Type
 12505 ;;                  1    wreg      void 
 12506 ;; Registers used:
 12507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12508 ;; Tracked objects:
 12509 ;;		On entry : 0/0
 12510 ;;		On exit  : 0/0
 12511 ;;		Unchanged: 0/0
 12512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12515 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12516 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12517 ;;Total ram usage:        4 bytes
 12518 ;; Hardware stack levels used: 1
 12519 ;; Hardware stack levels required when called: 1
 12520 ;; This function calls:
 12521 ;;		_JSN_GetLastTrig
 12522 ;;		_ReadPin
 12523 ;; This function is called by:
 12524 ;;		_CCP2_Initialize
 12525 ;;		_CCP2_CaptureISR
 12526 ;; This function uses a non-reentrant model
 12527 ;;
 12528                           
 12529  0EC6                     _CCP2_DefaultCallBack:	
 12530                           ;psect for function _CCP2_DefaultCallBack
 12531                           
 12532  0EC6                     i1l3498:	
 12533                           ;incstack = 0
 12534                           ; Regs used in _CCP2_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12535                           
 12536                           
 12537                           ;ccp2.c: 29: static void CCP2_DefaultCallBack(uint16_t capturedValue);ccp2.c: 30: {;ccp2
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 12538  0EC6  318B  2313  318E   	fcall	_JSN_GetLastTrig
 12539  0EC9  00F5               	movwf	??_CCP2_DefaultCallBack
 12540  0ECA  0875               	movf	??_CCP2_DefaultCallBack,w
 12541  0ECB  0021               	movlb	1	; select bank1
 12542  0ECC  00CF               	movwf	_lastTrig@ccp2$F875^(0+128)
 12543                           
 12544                           ;ccp2.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 12545  0ECD  2EEB               	goto	i1l3508
 12546  0ECE                     i1l3500:
 12547                           
 12548                           ;ccp2.c: 35:             ticksUp = capturedValue;
 12549  0ECE  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 12550  0ECF  0021               	movlb	1	; select bank1
 12551  0ED0  00BF               	movwf	(_ticksUp@ccp2$F872+1)^(0+128)
 12552  0ED1  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 12553  0ED2  00BE               	movwf	_ticksUp@ccp2$F872^(0+128)
 12554                           
 12555                           ;ccp2.c: 36:             sameSens = lastTrig;
 12556  0ED3  084F               	movf	_lastTrig@ccp2$F875^(0+128),w
 12557  0ED4  00F5               	movwf	??_CCP2_DefaultCallBack
 12558  0ED5  0875               	movf	??_CCP2_DefaultCallBack,w
 12559  0ED6  00D0               	movwf	_sameSens@ccp2$F874^(0+128)
 12560                           
 12561                           ;ccp2.c: 37:             break;
 12562  0ED7  2F02               	goto	i1l439
 12563  0ED8                     i1l3502:
 12564                           
 12565                           ;ccp2.c: 40:             ticksDown = capturedValue;
 12566  0ED8  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 12567  0ED9  0021               	movlb	1	; select bank1
 12568  0EDA  00BD               	movwf	(_ticksDown@ccp2$F873+1)^(0+128)
 12569  0EDB  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 12570  0EDC  00BC               	movwf	_ticksDown@ccp2$F873^(0+128)
 12571  0EDD                     i1l3504:
 12572                           
 12573                           ;ccp2.c: 43:             sameSens->echoHighTime = (ticksDown - ticksUp);
 12574  0EDD  083E               	movf	_ticksUp@ccp2$F872^(0+128),w
 12575  0EDE  023C               	subwf	_ticksDown@ccp2$F873^(0+128),w
 12576  0EDF  00F5               	movwf	??_CCP2_DefaultCallBack
 12577  0EE0  083F               	movf	(_ticksUp@ccp2$F872+1)^(0+128),w
 12578  0EE1  3B3D               	subwfb	(_ticksDown@ccp2$F873+1)^(0+128),w
 12579  0EE2  00F6               	movwf	??_CCP2_DefaultCallBack+1
 12580  0EE3  0850               	movf	_sameSens@ccp2$F874^(0+128),w
 12581  0EE4  0086               	movwf	6
 12582  0EE5  0187               	clrf	7
 12583  0EE6  0875               	movf	??_CCP2_DefaultCallBack,w
 12584  0EE7  3FC0               	movwi [0]fsr1
 12585  0EE8  0876               	movf	??_CCP2_DefaultCallBack+1,w
 12586  0EE9  3FC1               	movwi [1]fsr1
 12587                           
 12588                           ;ccp2.c: 44:             break;
 12589  0EEA  2F02               	goto	i1l439
 12590  0EEB                     i1l3508:
 12591  0EEB  084F               	movf	_lastTrig@ccp2$F875^(0+128),w
 12592  0EEC  3E05               	addlw	5
 12593  0EED  0086               	movwf	6
 12594  0EEE  0187               	clrf	7
 12595  0EEF  0801               	movf	1,w
 12596  0EF0  3184  2498  318E   	fcall	_ReadPin
 12597  0EF3  00F5               	movwf	??_CCP2_DefaultCallBack
 12598  0EF4  01F6               	clrf	??_CCP2_DefaultCallBack+1
 12599                           
 12600                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12601                           ; Switch size 1, requested type "simple"
 12602                           ; Number of cases is 1, Range of values is 0 to 0
 12603                           ; switch strategies available:
 12604                           ; Name         Instructions Cycles
 12605                           ; simple_byte            4     3 (average)
 12606                           ; direct_byte            8     6 (fixed)
 12607                           ; jumptable            260     6 (fixed)
 12608                           ;	Chosen strategy is simple_byte
 12609  0EF5  0876               	movf	??_CCP2_DefaultCallBack+1,w
 12610  0EF6  3A00               	xorlw	0	; case 0
 12611  0EF7  1903               	skipnz
 12612  0EF8  2EFA               	goto	i1l4122
 12613  0EF9  2F02               	goto	i1l439
 12614  0EFA                     i1l4122:
 12615                           
 12616                           ; Switch size 1, requested type "simple"
 12617                           ; Number of cases is 2, Range of values is 0 to 1
 12618                           ; switch strategies available:
 12619                           ; Name         Instructions Cycles
 12620                           ; simple_byte            7     4 (average)
 12621                           ; direct_byte           10     6 (fixed)
 12622                           ; jumptable            260     6 (fixed)
 12623                           ;	Chosen strategy is simple_byte
 12624  0EFA  0875               	movf	??_CCP2_DefaultCallBack,w
 12625  0EFB  3A00               	xorlw	0	; case 0
 12626  0EFC  1903               	skipnz
 12627  0EFD  2ED8               	goto	i1l3502
 12628  0EFE  3A01               	xorlw	1	; case 1
 12629  0EFF  1903               	skipnz
 12630  0F00  2ECE               	goto	i1l3500
 12631  0F01  2F02               	goto	i1l439
 12632  0F02                     i1l439:
 12633  0F02  0008               	return
 12634  0F03                     __end_of_CCP2_DefaultCallBack:
 12635                           
 12636                           	psect	text62
 12637  0C11                     __ptext62:	
 12638 ;; *************** function _CCP1_CaptureISR *****************
 12639 ;; Defined at:
 12640 ;;		line 81 in file "ccp1.c"
 12641 ;; Parameters:    Size  Location     Type
 12642 ;;		None
 12643 ;; Auto vars:     Size  Location     Type
 12644 ;;  module          2    8[COMMON] struct CCPR1Reg_tag
 12645 ;; Return value:  Size  Location     Type
 12646 ;;                  1    wreg      void 
 12647 ;; Registers used:
 12648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12649 ;; Tracked objects:
 12650 ;;		On entry : 0/0
 12651 ;;		On exit  : 0/0
 12652 ;;		Unchanged: 0/0
 12653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12655 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12656 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12657 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12658 ;;Total ram usage:        3 bytes
 12659 ;; Hardware stack levels used: 1
 12660 ;; Hardware stack levels required when called: 2
 12661 ;; This function calls:
 12662 ;;		Absolute function
 12663 ;;		_CCP1_DefaultCallBack
 12664 ;; This function is called by:
 12665 ;;		_INTERRUPT_InterruptManager
 12666 ;; This function uses a non-reentrant model
 12667 ;;
 12668                           
 12669  0C11                     _CCP1_CaptureISR:	
 12670                           ;psect for function _CCP1_CaptureISR
 12671                           
 12672  0C11                     i1l3704:	
 12673                           ;incstack = 0
 12674                           ; Regs used in _CCP1_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12675                           
 12676                           
 12677                           ;ccp1.c: 83:     CCP1_PERIOD_REG_T module;;ccp1.c: 86:     PIR4bits.CCP1IF = 0;
 12678  0C11  0020               	movlb	0	; select bank0
 12679  0C12  1014               	bcf	20,0	;volatile
 12680  0C13                     i1l3706:
 12681                           
 12682                           ;ccp1.c: 89:     module.ccpr1l = CCPR1L;
 12683  0C13  0025               	movlb	5	; select bank5
 12684  0C14  0811               	movf	17,w	;volatile
 12685  0C15  00F7               	movwf	??_CCP1_CaptureISR
 12686  0C16  0877               	movf	??_CCP1_CaptureISR,w
 12687  0C17  00F8               	movwf	CCP1_CaptureISR@module
 12688                           
 12689                           ;ccp1.c: 90:     module.ccpr1h = CCPR1H;
 12690  0C18  0812               	movf	18,w	;volatile
 12691  0C19  00F7               	movwf	??_CCP1_CaptureISR
 12692  0C1A  0877               	movf	??_CCP1_CaptureISR,w
 12693  0C1B  00F9               	movwf	CCP1_CaptureISR@module+1
 12694  0C1C                     i1l3708:
 12695                           
 12696                           ;ccp1.c: 93:     CCP1_CallBack(module.ccpr1_16Bit);
 12697  0C1C  0879               	movf	CCP1_CaptureISR@module+1,w
 12698  0C1D  00F4               	movwf	CCP1_DefaultCallBack@capturedValue+1
 12699  0C1E  0878               	movf	CCP1_CaptureISR@module,w
 12700  0C1F  00F3               	movwf	CCP1_DefaultCallBack@capturedValue
 12701  0C20  0021               	movlb	1	; select bank1
 12702  0C21  0847               	movf	(_CCP1_CallBack+1)^(0+128),w
 12703  0C22  008A               	movwf	10
 12704  0C23  0846               	movf	_CCP1_CallBack^(0+128),w
 12705  0C24  000A               	callw
 12706  0C25  318C               	pagesel	$
 12707  0C26                     i1l399:
 12708  0C26  0008               	return
 12709  0C27                     __end_of_CCP1_CaptureISR:
 12710                           
 12711                           	psect	text63
 12712  0E89                     __ptext63:	
 12713 ;; *************** function _CCP1_DefaultCallBack *****************
 12714 ;; Defined at:
 12715 ;;		line 29 in file "ccp1.c"
 12716 ;; Parameters:    Size  Location     Type
 12717 ;;  capturedValu    2    3[COMMON] unsigned short 
 12718 ;; Auto vars:     Size  Location     Type
 12719 ;;		None
 12720 ;; Return value:  Size  Location     Type
 12721 ;;                  1    wreg      void 
 12722 ;; Registers used:
 12723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12724 ;; Tracked objects:
 12725 ;;		On entry : 0/0
 12726 ;;		On exit  : 0/0
 12727 ;;		Unchanged: 0/0
 12728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12731 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12732 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12733 ;;Total ram usage:        4 bytes
 12734 ;; Hardware stack levels used: 1
 12735 ;; Hardware stack levels required when called: 1
 12736 ;; This function calls:
 12737 ;;		_JSN_GetLastTrig
 12738 ;;		_ReadPin
 12739 ;; This function is called by:
 12740 ;;		_CCP1_Initialize
 12741 ;;		_CCP1_CaptureISR
 12742 ;; This function uses a non-reentrant model
 12743 ;;
 12744                           
 12745  0E89                     _CCP1_DefaultCallBack:	
 12746                           ;psect for function _CCP1_DefaultCallBack
 12747                           
 12748  0E89                     i1l3482:	
 12749                           ;incstack = 0
 12750                           ; Regs used in _CCP1_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12751                           
 12752                           
 12753                           ;ccp1.c: 29: static void CCP1_DefaultCallBack(uint16_t capturedValue);ccp1.c: 30: {;ccp1
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 12754  0E89  318B  2313  318E   	fcall	_JSN_GetLastTrig
 12755  0E8C  00F5               	movwf	??_CCP1_DefaultCallBack
 12756  0E8D  0875               	movf	??_CCP1_DefaultCallBack,w
 12757  0E8E  0021               	movlb	1	; select bank1
 12758  0E8F  00D1               	movwf	_lastTrig@ccp1$F729^(0+128)
 12759                           
 12760                           ;ccp1.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 12761  0E90  2EAE               	goto	i1l3492
 12762  0E91                     i1l3484:
 12763                           
 12764                           ;ccp1.c: 35:             ticksUp = capturedValue;
 12765  0E91  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 12766  0E92  0021               	movlb	1	; select bank1
 12767  0E93  00C5               	movwf	(_ticksUp+1)^(0+128)
 12768  0E94  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 12769  0E95  00C4               	movwf	_ticksUp^(0+128)
 12770                           
 12771                           ;ccp1.c: 36:             sameSens = lastTrig;
 12772  0E96  0851               	movf	_lastTrig@ccp1$F729^(0+128),w
 12773  0E97  00F5               	movwf	??_CCP1_DefaultCallBack
 12774  0E98  0875               	movf	??_CCP1_DefaultCallBack,w
 12775  0E99  00D2               	movwf	_sameSens^(0+128)
 12776                           
 12777                           ;ccp1.c: 37:             break;
 12778  0E9A  2EC5               	goto	i1l393
 12779  0E9B                     i1l3486:
 12780                           
 12781                           ;ccp1.c: 40:             ticksDown = capturedValue;
 12782  0E9B  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 12783  0E9C  0021               	movlb	1	; select bank1
 12784  0E9D  00C3               	movwf	(_ticksDown+1)^(0+128)
 12785  0E9E  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 12786  0E9F  00C2               	movwf	_ticksDown^(0+128)
 12787  0EA0                     i1l3488:
 12788                           
 12789                           ;ccp1.c: 43:             sameSens->echoHighTime = (ticksDown - ticksUp);
 12790  0EA0  0844               	movf	_ticksUp^(0+128),w
 12791  0EA1  0242               	subwf	_ticksDown^(0+128),w
 12792  0EA2  00F5               	movwf	??_CCP1_DefaultCallBack
 12793  0EA3  0845               	movf	(_ticksUp+1)^(0+128),w
 12794  0EA4  3B43               	subwfb	(_ticksDown+1)^(0+128),w
 12795  0EA5  00F6               	movwf	??_CCP1_DefaultCallBack+1
 12796  0EA6  0852               	movf	_sameSens^(0+128),w
 12797  0EA7  0086               	movwf	6
 12798  0EA8  0187               	clrf	7
 12799  0EA9  0875               	movf	??_CCP1_DefaultCallBack,w
 12800  0EAA  3FC0               	movwi [0]fsr1
 12801  0EAB  0876               	movf	??_CCP1_DefaultCallBack+1,w
 12802  0EAC  3FC1               	movwi [1]fsr1
 12803                           
 12804                           ;ccp1.c: 44:             break;
 12805  0EAD  2EC5               	goto	i1l393
 12806  0EAE                     i1l3492:
 12807  0EAE  0851               	movf	_lastTrig@ccp1$F729^(0+128),w
 12808  0EAF  3E05               	addlw	5
 12809  0EB0  0086               	movwf	6
 12810  0EB1  0187               	clrf	7
 12811  0EB2  0801               	movf	1,w
 12812  0EB3  3184  2498  318E   	fcall	_ReadPin
 12813  0EB6  00F5               	movwf	??_CCP1_DefaultCallBack
 12814  0EB7  01F6               	clrf	??_CCP1_DefaultCallBack+1
 12815                           
 12816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12817                           ; Switch size 1, requested type "simple"
 12818                           ; Number of cases is 1, Range of values is 0 to 0
 12819                           ; switch strategies available:
 12820                           ; Name         Instructions Cycles
 12821                           ; simple_byte            4     3 (average)
 12822                           ; direct_byte            8     6 (fixed)
 12823                           ; jumptable            260     6 (fixed)
 12824                           ;	Chosen strategy is simple_byte
 12825  0EB8  0876               	movf	??_CCP1_DefaultCallBack+1,w
 12826  0EB9  3A00               	xorlw	0	; case 0
 12827  0EBA  1903               	skipnz
 12828  0EBB  2EBD               	goto	i1l4124
 12829  0EBC  2EC5               	goto	i1l393
 12830  0EBD                     i1l4124:
 12831                           
 12832                           ; Switch size 1, requested type "simple"
 12833                           ; Number of cases is 2, Range of values is 0 to 1
 12834                           ; switch strategies available:
 12835                           ; Name         Instructions Cycles
 12836                           ; simple_byte            7     4 (average)
 12837                           ; direct_byte           10     6 (fixed)
 12838                           ; jumptable            260     6 (fixed)
 12839                           ;	Chosen strategy is simple_byte
 12840  0EBD  0875               	movf	??_CCP1_DefaultCallBack,w
 12841  0EBE  3A00               	xorlw	0	; case 0
 12842  0EBF  1903               	skipnz
 12843  0EC0  2E9B               	goto	i1l3486
 12844  0EC1  3A01               	xorlw	1	; case 1
 12845  0EC2  1903               	skipnz
 12846  0EC3  2E91               	goto	i1l3484
 12847  0EC4  2EC5               	goto	i1l393
 12848  0EC5                     i1l393:
 12849  0EC5  0008               	return
 12850  0EC6                     __end_of_CCP1_DefaultCallBack:
 12851                           
 12852                           	psect	text64
 12853  0498                     __ptext64:	
 12854 ;; *************** function _ReadPin *****************
 12855 ;; Defined at:
 12856 ;;		line 132 in file "PIC16Xpress_DevBoard.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;  pin             1    wreg     enum E7110
 12859 ;; Auto vars:     Size  Location     Type
 12860 ;;  pin             1    2[COMMON] enum E7110
 12861 ;; Return value:  Size  Location     Type
 12862 ;;                  1    wreg      unsigned char 
 12863 ;; Registers used:
 12864 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12865 ;; Tracked objects:
 12866 ;;		On entry : 0/0
 12867 ;;		On exit  : 0/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12872 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12873 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12874 ;;Total ram usage:        3 bytes
 12875 ;; Hardware stack levels used: 1
 12876 ;; This function calls:
 12877 ;;		Nothing
 12878 ;; This function is called by:
 12879 ;;		_CCP1_DefaultCallBack
 12880 ;;		_CCP2_DefaultCallBack
 12881 ;;		_CCP3_DefaultCallBack
 12882 ;; This function uses a non-reentrant model
 12883 ;;
 12884                           
 12885  0498                     _ReadPin:	
 12886                           ;psect for function _ReadPin
 12887                           
 12888                           
 12889                           ;incstack = 0
 12890                           ; Regs used in _ReadPin: [wreg-fsr0h+status,2+status,0]
 12891                           ;ReadPin@pin stored from wreg
 12892  0498  00F2               	movwf	ReadPin@pin
 12893  0499                     i1l3006:
 12894                           
 12895                           ;PIC16Xpress_DevBoard.c: 133:     switch(pin) {
 12896  0499  2CEE               	goto	i1l3086
 12897  049A                     i1l3008:
 12898                           
 12899                           ;PIC16Xpress_DevBoard.c: 135:             return PORTAbits.RA5;
 12900  049A  0020               	movlb	0	; select bank0
 12901  049B  0E0C               	swapf	12,w	;volatile
 12902  049C  0C89               	rrf	9,f
 12903  049D  3901               	andlw	1
 12904  049E  2D2E               	goto	i1l193
 12905  049F                     i1l3012:
 12906                           
 12907                           ;PIC16Xpress_DevBoard.c: 137:             return PORTAbits.RA4;
 12908  049F  0020               	movlb	0	; select bank0
 12909  04A0  0E0C               	swapf	12,w	;volatile
 12910  04A1  3901               	andlw	1
 12911  04A2  2D2E               	goto	i1l193
 12912  04A3                     i1l3016:
 12913                           
 12914                           ;PIC16Xpress_DevBoard.c: 139:             return 0xFF;
 12915  04A3  30FF               	movlw	255
 12916  04A4  2D2E               	goto	i1l193
 12917  04A5                     i1l3020:
 12918                           
 12919                           ;PIC16Xpress_DevBoard.c: 141:             return PORTCbits.RC5;
 12920  04A5  0020               	movlb	0	; select bank0
 12921  04A6  0E0E               	swapf	14,w	;volatile
 12922  04A7  0C89               	rrf	9,f
 12923  04A8  3901               	andlw	1
 12924  04A9  2D2E               	goto	i1l193
 12925  04AA                     i1l3024:
 12926                           
 12927                           ;PIC16Xpress_DevBoard.c: 143:             return PORTCbits.RC4;
 12928  04AA  0020               	movlb	0	; select bank0
 12929  04AB  0E0E               	swapf	14,w	;volatile
 12930  04AC  3901               	andlw	1
 12931  04AD  2D2E               	goto	i1l193
 12932  04AE                     i1l3028:
 12933                           
 12934                           ;PIC16Xpress_DevBoard.c: 145:             return PORTCbits.RC3;
 12935  04AE  0020               	movlb	0	; select bank0
 12936  04AF  0C0E               	rrf	14,w	;volatile
 12937  04B0  00F0               	movwf	??_ReadPin
 12938  04B1  0CF0               	rrf	??_ReadPin,f
 12939  04B2  0C70               	rrf	??_ReadPin,w
 12940  04B3  3901               	andlw	1
 12941  04B4  2D2E               	goto	i1l193
 12942  04B5                     i1l3032:
 12943                           
 12944                           ;PIC16Xpress_DevBoard.c: 147:             return PORTCbits.RC6;
 12945  04B5  0020               	movlb	0	; select bank0
 12946  04B6  0E0E               	swapf	14,w	;volatile
 12947  04B7  0C89               	rrf	9,f
 12948  04B8  0C89               	rrf	9,f
 12949  04B9  3901               	andlw	1
 12950  04BA  2D2E               	goto	i1l193
 12951  04BB                     i1l3036:
 12952                           
 12953                           ;PIC16Xpress_DevBoard.c: 149:             return PORTCbits.RC7;
 12954  04BB  0020               	movlb	0	; select bank0
 12955  04BC  0D0E               	rlf	14,w	;volatile
 12956  04BD  0D0E               	rlf	14,w	;volatile
 12957  04BE  3901               	andlw	1
 12958  04BF  2D2E               	goto	i1l193
 12959  04C0                     i1l3040:
 12960                           
 12961                           ;PIC16Xpress_DevBoard.c: 151:             return PORTBbits.RB7;
 12962  04C0  0020               	movlb	0	; select bank0
 12963  04C1  0D0D               	rlf	13,w	;volatile
 12964  04C2  0D0D               	rlf	13,w	;volatile
 12965  04C3  3901               	andlw	1
 12966  04C4  2D2E               	goto	i1l193
 12967  04C5                     i1l3044:
 12968                           
 12969                           ;PIC16Xpress_DevBoard.c: 153:             return PORTAbits.RA0;
 12970  04C5  0020               	movlb	0	; select bank0
 12971  04C6  080C               	movf	12,w	;volatile
 12972  04C7  3901               	andlw	1
 12973  04C8  2D2E               	goto	i1l193
 12974  04C9                     i1l3048:
 12975                           
 12976                           ;PIC16Xpress_DevBoard.c: 155:             return PORTAbits.RA1;
 12977  04C9  0020               	movlb	0	; select bank0
 12978  04CA  0C0C               	rrf	12,w	;volatile
 12979  04CB  3901               	andlw	1
 12980  04CC  2D2E               	goto	i1l193
 12981  04CD                     i1l3052:
 12982                           
 12983                           ;PIC16Xpress_DevBoard.c: 157:             return PORTAbits.RA2;
 12984  04CD  0020               	movlb	0	; select bank0
 12985  04CE  0C0C               	rrf	12,w	;volatile
 12986  04CF  0C89               	rrf	9,f
 12987  04D0  3901               	andlw	1
 12988  04D1  2D2E               	goto	i1l193
 12989  04D2                     i1l3056:
 12990                           
 12991                           ;PIC16Xpress_DevBoard.c: 159:             return PORTCbits.RC0;
 12992  04D2  0020               	movlb	0	; select bank0
 12993  04D3  080E               	movf	14,w	;volatile
 12994  04D4  3901               	andlw	1
 12995  04D5  2D2E               	goto	i1l193
 12996  04D6                     i1l3060:
 12997                           
 12998                           ;PIC16Xpress_DevBoard.c: 161:             return PORTCbits.RC1;
 12999  04D6  0020               	movlb	0	; select bank0
 13000  04D7  0C0E               	rrf	14,w	;volatile
 13001  04D8  3901               	andlw	1
 13002  04D9  2D2E               	goto	i1l193
 13003  04DA                     i1l3064:
 13004                           
 13005                           ;PIC16Xpress_DevBoard.c: 163:             return PORTCbits.RC2;
 13006  04DA  0020               	movlb	0	; select bank0
 13007  04DB  0C0E               	rrf	14,w	;volatile
 13008  04DC  0C89               	rrf	9,f
 13009  04DD  3901               	andlw	1
 13010  04DE  2D2E               	goto	i1l193
 13011  04DF                     i1l3068:
 13012                           
 13013                           ;PIC16Xpress_DevBoard.c: 165:             return PORTBbits.RB4;
 13014  04DF  0020               	movlb	0	; select bank0
 13015  04E0  0E0D               	swapf	13,w	;volatile
 13016  04E1  3901               	andlw	1
 13017  04E2  2D2E               	goto	i1l193
 13018  04E3                     i1l3072:
 13019                           
 13020                           ;PIC16Xpress_DevBoard.c: 167:             return PORTBbits.RB5;
 13021  04E3  0020               	movlb	0	; select bank0
 13022  04E4  0E0D               	swapf	13,w	;volatile
 13023  04E5  0C89               	rrf	9,f
 13024  04E6  3901               	andlw	1
 13025  04E7  2D2E               	goto	i1l193
 13026  04E8                     i1l3076:
 13027                           
 13028                           ;PIC16Xpress_DevBoard.c: 169:             return PORTBbits.RB6;
 13029  04E8  0020               	movlb	0	; select bank0
 13030  04E9  0E0D               	swapf	13,w	;volatile
 13031  04EA  0C89               	rrf	9,f
 13032  04EB  0C89               	rrf	9,f
 13033  04EC  3901               	andlw	1
 13034  04ED  2D2E               	goto	i1l193
 13035  04EE                     i1l3086:
 13036  04EE  0872               	movf	ReadPin@pin,w
 13037  04EF  00F0               	movwf	??_ReadPin
 13038  04F0  01F1               	clrf	??_ReadPin+1
 13039                           
 13040                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13041                           ; Switch size 1, requested type "simple"
 13042                           ; Number of cases is 1, Range of values is 0 to 0
 13043                           ; switch strategies available:
 13044                           ; Name         Instructions Cycles
 13045                           ; simple_byte            4     3 (average)
 13046                           ; direct_byte            8     6 (fixed)
 13047                           ; jumptable            260     6 (fixed)
 13048                           ;	Chosen strategy is simple_byte
 13049  04F1  0871               	movf	??_ReadPin+1,w
 13050  04F2  3A00               	xorlw	0	; case 0
 13051  04F3  1903               	skipnz
 13052  04F4  2CF6               	goto	i1l4126
 13053  04F5  2CA3               	goto	i1l3016
 13054  04F6                     i1l4126:
 13055                           
 13056                           ; Switch size 1, requested type "simple"
 13057                           ; Number of cases is 18, Range of values is 0 to 17
 13058                           ; switch strategies available:
 13059                           ; Name         Instructions Cycles
 13060                           ; direct_byte           42     6 (fixed)
 13061                           ; simple_byte           55    28 (average)
 13062                           ; jumptable            260     6 (fixed)
 13063                           ;	Chosen strategy is simple_byte
 13064  04F6  0870               	movf	??_ReadPin,w
 13065  04F7  3A00               	xorlw	0	; case 0
 13066  04F8  1903               	skipnz
 13067  04F9  2C9A               	goto	i1l3008
 13068  04FA  3A01               	xorlw	1	; case 1
 13069  04FB  1903               	skipnz
 13070  04FC  2C9F               	goto	i1l3012
 13071  04FD  3A03               	xorlw	3	; case 2
 13072  04FE  1903               	skipnz
 13073  04FF  2CA3               	goto	i1l3016
 13074  0500  3A01               	xorlw	1	; case 3
 13075  0501  1903               	skipnz
 13076  0502  2CA5               	goto	i1l3020
 13077  0503  3A07               	xorlw	7	; case 4
 13078  0504  1903               	skipnz
 13079  0505  2CAA               	goto	i1l3024
 13080  0506  3A01               	xorlw	1	; case 5
 13081  0507  1903               	skipnz
 13082  0508  2CAE               	goto	i1l3028
 13083  0509  3A03               	xorlw	3	; case 6
 13084  050A  1903               	skipnz
 13085  050B  2CB5               	goto	i1l3032
 13086  050C  3A01               	xorlw	1	; case 7
 13087  050D  1903               	skipnz
 13088  050E  2CBB               	goto	i1l3036
 13089  050F  3A0F               	xorlw	15	; case 8
 13090  0510  1903               	skipnz
 13091  0511  2CC0               	goto	i1l3040
 13092  0512  3A01               	xorlw	1	; case 9
 13093  0513  1903               	skipnz
 13094  0514  2CC5               	goto	i1l3044
 13095  0515  3A03               	xorlw	3	; case 10
 13096  0516  1903               	skipnz
 13097  0517  2CC9               	goto	i1l3048
 13098  0518  3A01               	xorlw	1	; case 11
 13099  0519  1903               	skipnz
 13100  051A  2CCD               	goto	i1l3052
 13101  051B  3A07               	xorlw	7	; case 12
 13102  051C  1903               	skipnz
 13103  051D  2CD2               	goto	i1l3056
 13104  051E  3A01               	xorlw	1	; case 13
 13105  051F  1903               	skipnz
 13106  0520  2CD6               	goto	i1l3060
 13107  0521  3A03               	xorlw	3	; case 14
 13108  0522  1903               	skipnz
 13109  0523  2CDA               	goto	i1l3064
 13110  0524  3A01               	xorlw	1	; case 15
 13111  0525  1903               	skipnz
 13112  0526  2CDF               	goto	i1l3068
 13113  0527  3A1F               	xorlw	31	; case 16
 13114  0528  1903               	skipnz
 13115  0529  2CE3               	goto	i1l3072
 13116  052A  3A01               	xorlw	1	; case 17
 13117  052B  1903               	skipnz
 13118  052C  2CE8               	goto	i1l3076
 13119  052D  2CA3               	goto	i1l3016
 13120  052E                     i1l193:
 13121  052E  0008               	return
 13122  052F                     __end_of_ReadPin:
 13123                           
 13124                           	psect	text65
 13125  0B13                     __ptext65:	
 13126 ;; *************** function _JSN_GetLastTrig *****************
 13127 ;; Defined at:
 13128 ;;		line 116 in file "JSN_Sensor.c"
 13129 ;; Parameters:    Size  Location     Type
 13130 ;;		None
 13131 ;; Auto vars:     Size  Location     Type
 13132 ;;		None
 13133 ;; Return value:  Size  Location     Type
 13134 ;;                  1    wreg      PTR struct .
 13135 ;; Registers used:
 13136 ;;		wreg
 13137 ;; Tracked objects:
 13138 ;;		On entry : 0/0
 13139 ;;		On exit  : 0/0
 13140 ;;		Unchanged: 0/0
 13141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13146 ;;Total ram usage:        0 bytes
 13147 ;; Hardware stack levels used: 1
 13148 ;; This function calls:
 13149 ;;		Nothing
 13150 ;; This function is called by:
 13151 ;;		_CCP1_DefaultCallBack
 13152 ;;		_CCP2_DefaultCallBack
 13153 ;;		_CCP3_DefaultCallBack
 13154 ;; This function uses a non-reentrant model
 13155 ;;
 13156                           
 13157  0B13                     _JSN_GetLastTrig:	
 13158                           ;psect for function _JSN_GetLastTrig
 13159                           
 13160  0B13                     i1l3002:	
 13161                           ;incstack = 0
 13162                           ; Regs used in _JSN_GetLastTrig: [wreg]
 13163                           
 13164                           
 13165                           ;JSN_Sensor.c: 117:     return lastTrig;
 13166  0B13  0021               	movlb	1	; select bank1
 13167  0B14  0853               	movf	_lastTrig^(0+128),w
 13168  0B15                     i1l60:
 13169  0B15  0008               	return
 13170  0B16                     __end_of_JSN_GetLastTrig:
 13171  007E                     btemp	set	126	;btemp
 13172  007E                     int$flags	set	126
 13173  007E                     wtemp0	set	126
 13174                           
 13175                           	psect	idloc
 13176                           
 13177                           ;Config register IDLOC0 @ 0x8000
 13178                           ;	unspecified, using default values
 13179  8000                     	org	32768
 13180  8000  3FFF               	dw	16383
 13181                           
 13182                           ;Config register IDLOC1 @ 0x8001
 13183                           ;	unspecified, using default values
 13184  8001                     	org	32769
 13185  8001  3FFF               	dw	16383
 13186                           
 13187                           ;Config register IDLOC2 @ 0x8002
 13188                           ;	unspecified, using default values
 13189  8002                     	org	32770
 13190  8002  3FFF               	dw	16383
 13191                           
 13192                           ;Config register IDLOC3 @ 0x8003
 13193                           ;	unspecified, using default values
 13194  8003                     	org	32771
 13195  8003  3FFF               	dw	16383
 13196                           
 13197                           	psect	config
 13198                           
 13199                           ;Config register CONFIG1 @ 0x8007
 13200                           ;	FEXTOSC External Oscillator mode Selection bits
 13201                           ;	FEXTOSC = OFF, Oscillator not enabled
 13202                           ;	Power-up default value for COSC bits
 13203                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 13204                           ;	Clock Out Enable bit
 13205                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 13206                           ;	Clock Switch Enable bit
 13207                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13208                           ;	Fail-Safe Clock Monitor Enable
 13209                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13210  8007                     	org	32775
 13211  8007  3F8C               	dw	16268
 13212                           
 13213                           ;Config register CONFIG2 @ 0x8008
 13214                           ;	Master Clear Enable bit
 13215                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 13216                           ;	Power-up Timer Enable bit
 13217                           ;	PWRTE = OFF, PWRT disabled
 13218                           ;	Watchdog Timer Enable bits
 13219                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 13220                           ;	Low-power BOR enable bit
 13221                           ;	LPBOREN = OFF, ULPBOR disabled
 13222                           ;	Brown-out Reset Enable bits
 13223                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 13224                           ;	Brown-out Reset Voltage selection bit
 13225                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 13226                           ;	PPSLOCK bit One-Way Set Enable bit
 13227                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 13228                           ;	Stack Overflow/Underflow Reset Enable bit
 13229                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13230                           ;	Debugger enable bit
 13231                           ;	DEBUG = OFF, Background debugger disabled
 13232  8008                     	org	32776
 13233  8008  3FF3               	dw	16371
 13234                           
 13235                           ;Config register CONFIG3 @ 0x8009
 13236                           ;	User NVM self-write protection bits
 13237                           ;	WRT = OFF, Write protection off
 13238                           ;	Low Voltage Programming Enable bit
 13239                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 13240  8009                     	org	32777
 13241  8009  3FFF               	dw	16383
 13242                           
 13243                           ;Config register CONFIG4 @ 0x800A
 13244                           ;	User NVM Program Memory Code Protection bit
 13245                           ;	CP = OFF, User NVM code protection disabled
 13246                           ;	Data NVM Memory Code Protection bit
 13247                           ;	CPD = OFF, Data NVM code protection disabled
 13248  800A                     	org	32778
 13249  800A  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         144
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     80      80
    BANK1            80     15      79
    BANK2            80      0      76
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1982$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    S1982$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP3_DefaultCallBack(), 

    sameSens@ccp3$F999	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens2(BANK1[6]), Sens1(BANK1[6]), 

    lastTrig@ccp3$F1000	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens2(BANK1[6]), Sens1(BANK1[6]), 

    CCP2_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP2_DefaultCallBack(), 

    CCP2_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP2_DefaultCallBack(), 

    sameSens@ccp2$F874	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens2(BANK1[6]), Sens1(BANK1[6]), 

    lastTrig@ccp2$F875	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens2(BANK1[6]), Sens1(BANK1[6]), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP1_DefaultCallBack(), 

    sameSens	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens2(BANK1[6]), Sens1(BANK1[6]), 

    lastTrig@ccp1$F729	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens2(BANK1[6]), Sens1(BANK1[6]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    sp__JSN_GetLastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens2(BANK1[6]), Sens1(BANK1[6]), 

    JSN_Sensor_GetDistance@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens2(BANK1[6]), Sens1(BANK1[6]), 

    JSN_Sensor_Trig@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens2(BANK1[6]), Sens1(BANK1[6]), 

    lastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens2(BANK1[6]), Sens1(BANK1[6]), 

    JSN_Sensor_Init@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens2(BANK1[6]), Sens1(BANK1[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _INTERRUPT_InterruptManager->_CCP2_CaptureISR
    _INTERRUPT_InterruptManager->_CCP3_CaptureISR
    _TMR1_ISR->_TMR1_WriteTimer
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _CCP3_CaptureISR->_CCP3_DefaultCallBack
    _CCP3_DefaultCallBack->_ReadPin
    _CCP2_CaptureISR->_CCP2_DefaultCallBack
    _CCP2_DefaultCallBack->_ReadPin
    _CCP1_CaptureISR->_CCP1_DefaultCallBack
    _CCP1_DefaultCallBack->_ReadPin

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _CCP3_Initialize->_CCP3_SetCallBack
    _CCP2_Initialize->_CCP2_SetCallBack
    _CCP1_Initialize->_CCP1_SetCallBack
    _JSN_Sensor_Trig->_FRT_GetMicros
    _FRT_GetMicros->_TMR0_ReadTimer
    _JSN_Sensor_Init->_SetPin
    _JSN_Sensor_Init->_WritePin
    _JSN_Sensor_GetDistance->___lldiv
    ___lldiv->___lmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   11880
                                              2 BANK1     13    13      0
                      _FRT_GetMillis
             _JSN_Sensor_GetDistance
                    _JSN_Sensor_Init
                    _JSN_Sensor_Trig
                         _PIC16_Init
                             _SetPin
                           _WritePin
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5456
                                             76 BANK0      4     0      4
                                              0 BANK1      2     2      0
             _JSN_Sensor_GetDistance (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5250
                                             68 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    4923
                                             52 BANK0     16    14      2
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                24    16      8    3578
                                             28 BANK0     24    16      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2554
                                             19 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                             11 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     834
                                              3 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      66
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             18     2     16     311
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             26    10     16     314
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _PIC16_Init                                           0     0      0     980
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     980
                    _CCP1_Initialize
                    _CCP2_Initialize
                    _CCP3_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR1_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Initialize                                    1     1      0     490
                                              2 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP3_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP2_Initialize                                      0     0      0      98
                   _CCP2_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP2_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP1_Initialize                                      0     0      0      98
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP1_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Trig                                      5     5      0    1073
                                              6 BANK0      5     5      0
                      _FRT_GetMicros
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _FRT_GetMicros                                        4     0      4      23
                                              2 BANK0      4     0      4
                     _TMR0_ReadTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_ReadTimer                                       2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Init                                      5     3      2    2110
                                              4 BANK0      5     3      2
                             _SetPin
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _WritePin                                             4     3      1     852
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetPin                                               4     3      1     624
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_GetDistance                               5     3      2     690
                                             26 BANK0      5     3      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _FRT_GetMillis                                        4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0     738
                   Absolute function *
                    _CCP1_CaptureISR
                    _CCP2_CaptureISR
                    _CCP3_CaptureISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR0_CallBack                                       0     0      0       0
                      _FRT_IncMicros
                      _FRT_IncMillis
 ---------------------------------------------------------------------------------
 (13) _FRT_IncMillis                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _FRT_IncMicros                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CCP3_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (12) _CCP3_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (11) _CCP2_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP2_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (12) _CCP2_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (11) _CCP1_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP1_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (12) _CCP1_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (13) _ReadPin                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (13) _JSN_GetLastTrig                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FRT_GetMillis
   _JSN_Sensor_GetDistance
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _JSN_Sensor_Init
     _SetPin
     _WritePin
   _JSN_Sensor_Trig
     _FRT_GetMicros
       _TMR0_ReadTimer
     _WritePin
   _PIC16_Init
     _SYSTEM_Initialize
       _CCP1_Initialize
         _CCP1_SetCallBack
       _CCP2_Initialize
         _CCP2_SetCallBack
       _CCP3_Initialize
         _CCP3_SetCallBack
       _EUSART_Initialize
         _EUSART_SetErrorHandler
         _EUSART_SetFramingErrorHandler
         _EUSART_SetOverrunErrorHandler
         _EUSART_SetRxInterruptHandler
         _EUSART_SetTxInterruptHandler
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR1_Initialize
         _TMR1_SetInterruptHandler
       _WDT_Initialize
   _SetPin
   _WritePin
   _printf
     _JSN_Sensor_GetDistance (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc
             _strlen

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _CCP1_CaptureISR *
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP2_CaptureISR *
     Absolute function(Fake) *
     _CCP2_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP3_CaptureISR *
     Absolute function(Fake) *
     _CCP3_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     _TMR0_CallBack
       _FRT_IncMicros
       _FRT_IncMillis
   _TMR1_ISR *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      F      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4C       9       95.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun Jan 30 15:01:59 2022

                ?_EUSART_SetRxInterruptHandler 0020                         ??_CCP3_DefaultCallBack 0075  
                                           l32 0634                                             l28 05B6  
                                           l37 05D3                                             l54 07B0  
                                           l57 0FBC                        __end_of_CCP1_Initialize 0C82  
                                          l217 03DC                                            l402 0B45  
                                          l164 0E88                                            l326 0BFB  
                                          l335 0B35                                            l169 0497  
                                          l353 0B8D                                            l521 0CCA  
                                          l442 0C99                                            l291 0BB8  
                                          l701 0B60                                            l285 0D3B  
                                          l294 0B21                                            l448 0B4E  
                                          l704 0B84                                            l632 07F6  
                                          l288 0BB4                                            l297 0BC4  
                                          l554 07FF                                            l707 0B7B  
                                          l396 0C81                                            l660 0DB3  
                                          l821 0BE6                                            l494 0B57  
                                          l824 0D1C                                            l488 0CB1  
                                          l656 0D8F                                            l809 0E4E  
                                          l657 0D98                                            l666 0B3C  
                                          l695 0B69                                            l698 0B72  
                                          l996 0E18                                            u800 0FC8  
                                          u801 0FC7                                            u810 0FD7  
                                          u811 0FD6                                            u900 0642  
                                          u820 0FF5                                            u901 0641  
                                          u821 0FF4                                            u910 0655  
                                          u830 0D86                                            u911 0654  
                                          u831 0D85                                            u920 0677  
                                          u760 0D8F                                            u840 0CFA  
                                          u921 0676                                            u761 0D8E  
                                          u825 0FF1                                            u841 0CF9  
                                          u850 0537                                            u930 0695  
                                          u770 0D93                                            u931 0694  
                                          u771 0D92                                            u860 0546  
                                          u780 0DAD                                            u940 0708  
                                          u861 0545                                            u925 0673  
                                          u781 0DAC                                            u941 0707  
                                          u870 0559                                            u790 0FC3  
                                          u950 0716                                            u871 0558  
                                          u791 0FC2                                            u951 0715  
                                          u880 0583                                            u960 073F  
                                          u881 0582                                            u961 073E  
                                          u890 05A2                                            u970 0744  
                                          u891 05A1                                            u971 0743  
                                          u980 0095                                            u885 057F  
                                          u965 073B                                            u981 0094  
                                          u990 00A8                                            u991 00A7  
                                          u995 00A4                                _timer1ReloadVal 00B4  
                       ??_EUSART_RxDataHandler 0070                                            _pad 0701  
               ?_EUSART_SetFramingErrorHandler 0020                                            wreg 0009  
                                         l1018 0700                                           l1222 05B2  
                                         l1215 05A2                                           l1232 06A5  
                                         l1225 0695                                           l3100 0BC1  
                                         l3110 0E24                                           l3102 0E19  
                                         l1502 0DE4                   JSN_Sensor_GetDistance@Sensor 003E  
                                         l3120 0E38                                           l3112 0E27  
                                         l3104 0E1D                                           l3200 0CBE  
                                         l3130 0E44                                           l3122 0E3A  
                                         l3114 0E29                                           l3106 0E20  
                                         l3210 0BED                                           l3202 0CBF  
                                         l1514 0FFF                                           l1522 0D86  
                                         l3220 07B3                                           l3140 0BB1  
                                         l3132 0E46                                           l3124 0E3D  
                                         l3116 0E33                                           l3108 0E22  
                                         l3212 0BEE                                           l3204 0CC7  
                                         l3300 02F3                                           l1445 0C10  
                                         l3150 0C86                                           l3230 07CC  
                                         l3222 07BB                                           l3142 0BB3  
                                         l3134 0E48                                           l3126 0E3F  
                                         l3118 0E36                                           l3214 0BF0  
                                         l3206 0BE7                                           l1470 071D  
                                         l3302 02FB                                           l4110 0209  
                                         l3320 03E7                                           l3400 032C  
                                         l4112 05C5                                           l3160 0C97  
                                         l3152 0C87                                           l3240 07E8  
                                         l3232 07CE                                           l3224 07C5  
                                         l3136 0E4B                                           l3128 0E41  
                                         l3216 0BF8                                           l3208 0BEC  
                                         l3144 0B1E                                           l1528 0D00  
                                         l1473 073F                                           l3314 03DF  
                                         l4114 05E8                                           l3250 0B2F  
                                         l3154 0C88                                           l3146 0C82  
                                         l3170 0CA0                                           l3162 0C9A  
                                         l3242 07EA                                           l3234 07D0  
                                         l3226 07C8                                           l3218 07B1  
                                         l3138 0BAD                                           l1474 074D  
                                         l1490 017C                                           l1482 00B6  
                                         l3306 02FE                                           l1475 0759  
                                         l3340 040A                                           l3332 03FC  
                                         l3324 03EE                                           l3316 03E0  
                                         l4116 03A4                                           l3420 034F  
                                         l3412 0341                                           l3404 0333  
                                         l3180 0C6D                                           l3156 0C90  
                                         l3148 0C85                                           l3172 0CA8  
                                         l3164 0C9D                                           l3244 07EB  
                                         l3236 07D8                                           l3228 07CA  
                                         l3092 0BB9                                           l3308 0317  
                                         l4118 045F                                           l3190 0C7D  
                                         l3182 0C6E                                           l3158 0C95  
                                         l3174 0CAD                                           l3166 0C9E  
                                         l3246 07EC                                           l3238 07E0  
                                         l3094 0BBB                                           l1478 0099  
                                         l1495 0321                                           l3360 042D  
                                         l3352 041F                                           l3344 0411  
                                         l3336 0403                                           l3328 03F5  
                                         l3440 0372                                           l3432 0364  
                                         l3424 0356                                           l3416 0348  
                                         l3408 033A                                           l3600 05B6  
                                         l3192 0C7F                                           l3184 0C6F  
                                         l3176 0CAF                                           l3168 0C9F  
                                         l3248 07F5                                           l3096 0BBD  
                                         l3280 0283                                           l3272 0261  
                                         l3610 05DF                                           l3186 0C70  
                                         l3178 0C6A                                           l3098 0BBF  
                                         l3194 0CB2                                           l3282 0295  
                                         l3290 02C9                                           l3274 0272  
                                         l3380 0450                                           l3372 0442  
                                         l3364 0434                                           l3356 0426  
                                         l3348 0418                                           l3460 0395  
                                         l3452 0387                                           l3444 0379  
                                         l3436 036B                                           l3428 035D  
                                         l3620 062F                                           l3612 0611  
                                         l3604 05BD                                           l3188 0C78  
                                         l3196 0CB6                                           l2900 0559  
                                         l3292 02DA                                           l3284 029D  
                                         l3276 027A                                           l3550 0DEE  
                                         l3614 0619                                           l3606 05D3  
                                         l3198 0CB7                                           l2902 0561  
                                         l2910 0635                                           l3294 02E2  
                                         l3286 02AF                                           l3278 027F  
                                         l3552 0DF2                                           l3376 0449  
                                         l3368 043B                                           l3456 038E  
                                         l3448 0380                                           l3616 061F  
                                         l3640 077A                                           l2904 0583  
                                         l2920 0655                                           l2912 0642  
                                         l2840 0D93                                           l3296 02ED  
                                         l3800 01BF                                           l3570 06C9  
                                         l3562 06A6                                           l3554 0DFA  
                                         l3650 0FB4                                           l3386 0457  
                                         l3466 039C                                           l3394 0324  
                                         l3618 0627                                           l3474 0D01  
                                         l3642 07A0                                           l2906 0593  
                                         l2922 0677                                           l2914 0645  
                                         l2850 0DAE                                           l2842 0D99  
                                         l2930 0711                                           l3810 01F8  
                                         l3802 01D2                                           l3580 06F2  
                                         l3572 06D0                                           l3564 06B7  
                                         l3556 0E01                                           l3548 0DE5  
                                         l3396 0325                                           l3644 07AA  
                                         l3636 075C                                           l3660 0E5E  
                                         l2908 0594                                           l2924 0687  
                                         l2916 064D                                           l2844 0DA3  
                                         l2852 0DB1                                           l2836 0D89  
                                         l2860 0FC8                                           l2940 0731  
                                         l2932 0716                                           l3820 021A  
                                         l3812 01FC                                           l3574 06E2  
                                         l3566 06BA                                           l3582 06F8  
                                         l3558 0E10                                           l3638 076F  
                                         l2950 0B46                                           l3478 0D1D  
                                         l3670 0E72                                           l3662 0E60  
                                         l3654 0E4F                                           l2918 0651  
                                         l2846 0DA7                                           l2838 0D89  
                                         l2854 0B38                                           l2862 0FCD  
                                         l2870 0D60                                           l2942 0744  
                                         l2934 071B                                           l2926 0703  
                                         l3590 0DBE                                           l3830 0253  
                                         l3822 0223                                           l3806 01EE  
                                         ?_pad 0033                                           l3576 06EA  
                                         l3568 06C5                                           l3648 0F7F  
                                         l2952 0B4F                                           l2960 0B61  
                                         l3680 0E83                                           l3672 0E74  
                                         l3664 0E63                                           l3656 0E59  
                                         l2848 0DAD                                           l2864 0FD7  
                                         l2856 0FBD                                           l2872 0D63  
                                         l2880 0CED                                           l2936 0720  
                                         l2928 0708                                           l3592 0DD2  
                                         l3824 022B                                           l3808 01F2  
                                         l3816 0200                                           l3578 06EB  
                                         l2962 0B6A                                           l2946 0B85  
                                         l2954 07F7                                           l3682 0E86  
                                         l3674 0E76                                           l3666 0E65  
                                         l3658 0E5C                                           l2890 053A  
                                         l2866 0FF5                                           l2858 0FC3  
                                         l2874 0D71                                           l2882 0CF1  
                                         l2938 072C                                           l2970 00A8  
                                         l3594 0DDC                                           l3586 0DB6  
                                         l3690 0BFC                                           l3826 0231  
                                         l3818 0211                                           l2948 0B3D  
                                         l2964 0B58                                           l2956 0B73  
                                         l3684 0E87                                           l3676 0E79  
                                         l3668 0E6F                                           l2892 0546  
                                         l2876 0D76                                           l2884 0CFA  
                                         l2980 00DA                                           l2972 00AE  
                                         l3588 0DBA                                           l3692 0C01  
                                         l3828 0242                                           l3780 017D  
                                         l3686 0BD6                                           l3598 05B5  
                                         l2958 0B7C                                           l3678 0E7B  
                                         l2894 0549                                           l2878 0CE8  
                                         l2990 013D                                           l2982 0101  
                                         l2974 00BE                                           l2966 0090  
                                         l3790 01A9                                           l3782 0180  
                                         l2896 0551                                           l2888 052F  
                                         l2992 0149                                           l2984 0105  
                                         l2976 00D2                                           l2968 0095  
                                         l3792 01AB                                           l3784 0190  
                                         l2898 0555                                           l2994 0156  
                                         l2986 0109                                           l2978 00D5  
                                         l3794 01B1                                           l3786 01A0  
                                         l2996 0164                                           l2988 0136  
                                         l3796 01B7                                           l3788 01A0  
                                         l2998 0169                                           l3798 01BB  
                                         STR_1 1000                                           STR_2 1000  
                                         u1000 013D                                           u1001 013C  
                                         u1010 0149                                           u1011 0148  
                                         u1020 0156                                           u1021 0155  
                                         u1110 0DF2                                           u1030 0164  
                                         u1111 0DF1                                           u1031 0163  
                                         u1040 0169                                           u1041 0168  
                                         u1025 0152                                           u1210 06F8  
                                         u1050 0BB8                                           u1211 06F7  
                                         u1051 0BB7                                           u1035 0160  
                                         u1140 0E10                                           u1220 0DDC  
                                         u1205 06EC                                           u1141 0E0F  
                                         u1125 0DFB                                           u1221 0DDB  
                                         u1150 06B7                                           u1230 07A0  
                                         u1070 0272                                           u1151 06B6  
                                         u1135 0E02                                           u1231 079F  
                                         u1071 0271                                           u1080 0295  
                                         u1320 01ED                                           u1081 0294  
                                         u1321 01EC                                           u1170 06C9  
                                         u1090 02DA                                           u1330 021A  
                                         u1171 06C8                                           u1091 02D9  
                                         u1331 0219                                           u1340 0223  
                                         u1165 06BB                                           u1341 0222  
                                         _LATA 010C                                           u1190 06E2  
                                         _LATB 010D                                           u1191 06E1  
                                         _LATC 010E                                           u1185 06CA  
                                         u1195 06DE                                           _PIE0 0090  
                                         _PIE1 0091                                           _PIE2 0092  
                                         _PIE3 0093                                           _PIE4 0094  
                                         _PMD0 0911                                           _PMD1 0912  
                                         _PMD2 0913                                           _PMD3 0914  
                                         _PMD4 0915                                           _PMD5 0916  
                                         i1l60 0B15                                           _PIR0 0010  
                                         _PIR1 0011                                           _PIR2 0012  
                                         _PIR3 0013                                           _PIR4 0014  
                                         _PLLR 48E0                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                         _dbuf 014C                        __end_of_CCP2_Initialize 0C9A  
                                         _main 017D                                           _prec 00A4  
                                         _nout 00A0                                           pad@i 0037  
                                         pad@p 0034                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 0039  
                                         btemp 007E                                           _utoa 008E  
                                   ReadPin@pin 0072                                           start 0074  
                     __end_of_CCP1_SetCallBack 0B46                     ??_TMR1_SetInterruptHandler 0022  
                             ?_CCP1_CaptureISR 0070                                __end_of_ReadPin 052F  
                                        ??_pad 0036                        __end_of_TMR0_Initialize 0BFC  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0BB9  
                      __end_of_CCP3_Initialize 0CB2                                          ?_main 0070  
                              __end_of___lldiv 0701                                          ?_utoa 003C  
                              __end_of___lodiv 05B3                                          _T1CON 001B  
                              __end_of___lomod 06A6                                          i1l350 0B2E  
                                        i1l193 052E                                          i1l347 0C69  
                                        i1l445 0C3C                                          i1l439 0F02  
                                        i1l535 0BD5                                          i1l393 0EC5  
                                        i1l491 0C52                                          i1l547 0BAC  
                                        i1l740 0014                                          i1l485 0F3F  
                                        i1l830 0B97                                          i1l399 0C26  
                                        i1l751 0061                                          i1l743 0026  
                                        i1l672 0D5D                                          i1l745 0034  
                                        i1l754 0072                                          i1l683 0CE5  
                                        i1l827 0BA1                                          i1l747 0042  
                                        i1l692 0B19                                          i1l748 0072  
                                        i1l669 0D5C                                          i1l749 0050  
                                        i1l686 0003                                          i1l679 0F7C  
                                        i1l689 0B1D                                          _OSCEN 091D  
                                 vfpfcnvrt@fmt 0054                                          _TMR0H 0016  
                                 vfpfcnvrt@llu 005B                                          _TMR1H 001A  
                                        _TMR0L 0015                                          _TMR1L 0019  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _RXPPS 0E24  
                          ___lmul@multiplicand 0024                      ?_TMR0_SetInterruptHandler 0020  
                                        _Sens1 00DA                                          _Sens2 00D4  
                                        _Sens3 0138                               __end_of_TMR0_ISR 0C6A  
                             __end_of_TMR1_ISR 0BAD                               ?_CCP2_CaptureISR 0070  
                                        _flags 00A6                                 _WDT_Initialize 0B1E  
                                        _fputc 0FBD                                          _fputs 0D5E  
                                        pad@fp 003B                                          _width 00A2  
                                        _putch 0B36                                          main@i 00EA  
                      __end_of_TMR1_Initialize 0CCB                                          pclath 000A  
                                        utoa@d 003C                                          utoa@i 0052  
                                        utoa@n 004A                                          utoa@p 0045  
                                        utoa@w 0048                                          status 0003  
                                        wtemp0 007E                               ___lodiv@dividend 0028  
                              _TMR1_WriteTimer 0BC5                       __end_of_CCP2_SetCallBack 0B4F  
                              __initialization 0076                               ?_CCP3_CaptureISR 0070  
                                 __end_of_main 025F                                   __end_of_utoa 017D  
                               ??_EUSART_Write 0020                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0022                                         ??_main 00E2  
                             ?_CCP1_Initialize 0070                                         ??_utoa 0044  
                             ___lodiv@quotient 0031                         __end_of_WDT_Initialize 0B22  
                              _JSN_GetLastTrig 0B13      __end_of_EUSART_DefaultFramingErrorHandler 0004  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0003                     _EUSART_OverrunErrorHandler 00AA  
                                       ?_fputc 0023                                         ?_fputs 002B  
                                       _CCPR1H 0292                                         _CCPR2H 0296  
                                       _CCPR3H 0312                                         _CCPR1L 0291  
                                       _CCPR2L 0295                                         _CCPR3L 0311  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _T0CON0 0017                                         _T0CON1 0018  
                                       _T1GCON 001C                                         _RC1REG 0199  
                             __end_of_WritePin 03DD                                         _RC1STA 019D  
                                       u110_20 0BCA                                         u110_21 0BC9  
                      TMR1_WriteTimer@timerVal 0070                                         _RC4PPS 0EA4  
                                       i1l3002 0B13                                         i1l3020 04A5  
                                       i1l3012 049F                                         i1l3006 0499  
                                       i1l3040 04C0                                         i1l3032 04B5  
                                       i1l3024 04AA                                         i1l3016 04A3  
                                       i1l3008 049A                                         _ODCONA 028C  
                                       _ODCONB 028D                                         _ODCONC 028E  
                                       i1l3060 04D6                                         i1l3052 04CD  
                                       i1l3044 04C5                                         i1l3036 04BB  
                                       i1l3028 04AE                                         i1l3072 04E3  
                                       i1l3064 04DA                                         i1l3056 04D2  
                                       i1l3048 04C9                                         i1l4120 0F37  
                                       i1l4122 0EFA                                         i1l3076 04E8  
                                       i1l3068 04DF                                         i1l4124 0EBD  
                                       i1l3500 0ECE                                         i1l4126 04F6  
                                       i1l3086 04EE                                         i1l3502 0ED8  
                                       i1l3270 0CE0                                         i1l3262 0CCB  
                                       i1l3254 0B98                                         i1l3504 0EDD  
                                       i1l3520 0F1A                                         u106_20 0CDF  
                                       i1l3264 0CD5                                         u130_20 0F5C  
                                       u106_21 0CDE                                         u130_21 0F5B  
                                       i1l3514 0F03                                         i1l3266 0CD9  
                                       i1l3258 0B8E                                         i1l3530 0BC5  
                                       i1l3508 0EEB                                         i1l3516 0F0B  
                                       i1l3524 0F28                                         i1l3268 0CDF  
                                       i1l3700 0C63                                         i1l3532 0BCA  
                                       i1l3540 0BD1                                         i1l3710 0C27  
                                       i1l3518 0F15                                         i1l3702 0C66  
                                       i1l3542 0BD3                                         i1l3534 0BCB  
                                       i1l3704 0C11                                         i1l3712 0C29  
                                       i1l3720 0C48                                         i1l3544 0B1A  
                                       u131_20 0F72                                         i1l3480 0B28  
                                       i1l3536 0BCD                                         u131_21 0F71  
                                       i1l3482 0E89                                         i1l3706 0C13  
                                       i1l3714 0C32                                         i1l3546 0B16  
                                       i1l3538 0BCF                                         i1l3722 0BA2  
                                       i1l3484 0E91                                         i1l3492 0EAE  
                                       i1l3708 0C1C                                         i1l3716 0C3D  
                                       i1l3724 0BA4                                         i1l3486 0E9B  
                                       i1l3718 0C3F                                         i1l3750 0D43  
                                       i1l3488 0EA0                                         i1l3760 0F40  
                                       i1l3752 0D4B                                         u124_20 0C63  
                                       u140_20 0022                                         u124_21 0C62  
                                       u140_21 0021                                         i1l3498 0EC6  
                                       i1l3770 0F5C                                         i1l3762 0F46  
                                       i1l3754 0D4F                                         i1l3850 000B  
                                       i1l3772 0F62                                         i1l3764 0F4B  
                                       i1l3756 0D55                                         i1l3748 0D3C  
                                       i1l3860 002B                                         i1l3852 0010  
                                       i1l3774 0F68                                         i1l3766 0F51  
                                       i1l3758 0D56                                         i1l3870 004C  
                                       i1l3862 0030                                         i1l3854 0018  
                                       i1l3776 0F72                                         i1l3768 0F57  
                                       i1l3696 0C53                                         i1l3872 0055  
                                       i1l3864 0039                                         u141_20 002B  
                                       i1l3856 001D                                         i1l3848 0006  
                                       u141_21 002A                                         i1l3778 0F79  
                                       i1l3698 0C55                                         i1l3874 005A  
                                       i1l3866 003E                                         i1l3858 0022  
                                       i1l3876 0066                                         i1l3868 0047  
                                       i1l3878 006B                                         u150_20 006B  
                                       u142_20 0030                                         u150_21 006A  
                                       u142_21 002F                                         u127_20 0D43  
                                       u143_20 0039                                         u127_21 0D42  
                                       u143_21 0038                                         u128_20 0D55  
                                       u144_20 003E                                         u136_20 000B  
                                       u128_21 0D54                                         u144_21 003D  
                                       u136_21 000A                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       u129_20 0F4B                                         u145_20 0047  
                                       u137_20 0010                                         u129_21 0F4A  
                                       u145_21 0046                                         u137_21 000F  
                                       u146_20 004C                                         u138_20 0018  
                                       u146_21 004B                                         u138_21 0017  
                                       u147_20 0055                                         u139_20 001D  
                                       u147_21 0054                                         u139_21 001C  
                                       u148_20 005A                                         u148_21 0059  
                                       u149_20 0066                                         u149_21 0065  
                                main@currMilli 00EB                                         _OSCFRQ 091F  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                               ?_CCP2_Initialize 0070  
                            ??_JSN_Sensor_Init 0026                                      ??_ReadPin 0070  
                            ??_JSN_Sensor_Trig 0026                                  _CCP1_CallBack 00C6  
                     __end_of_CCP3_SetCallBack 0B58                                         _SetPin 03DD  
                 _TMR1_DefaultInterruptHandler 0000                                  _CCP2_CallBack 00C0  
                                 vfprintf@cfmt 006A                                         ___lmul 0DE5  
                                    ??___lldiv 0034                                      ??___lodiv 0030  
                                    ??___lomod 0030                                  _CCP3_CallBack 00BA  
                          _EUSART_Transmit_ISR 0D3C                               ?_TMR0_Initialize 0070  
                                       _micros 0146                                         _millis 0142  
                           _lastTrig@ccp1$F729 00D1                             _lastTrig@ccp2$F875 00CF  
                                       _printf 0BFC                                         pad@buf 0033  
                                main@prevMilli 00E6                               ?_CCP3_Initialize 0070  
                                       _strlen 0CE6                                         fputc@c 0023  
                               _PMD_Initialize 0BB9                                         fputs@c 002F  
                                       fputs@i 0030                                         fputs@s 0032  
            CCP2_DefaultCallBack@capturedValue 0073                                ?_WDT_Initialize 0070  
                        __end_of_TMR0_CallBack 0B2F                               __end_of_vfprintf 0DE5  
                                       utoa@fp 0047       TMR1_SetInterruptHandler@InterruptHandler 0020  
     TMR0_SetInterruptHandler@InterruptHandler 0020                        __end_of_TMR1_WriteTimer 0BD6  
                         ?_EUSART_Transmit_ISR 0070                               ?_TMR1_Initialize 0070  
                            _SYSTEM_Initialize 0D1D                        __end_of__initialization 008A  
                           ?_SYSTEM_Initialize 0070           __end_of_EUSART_SetTxInterruptHandler 0B85  
                 _EUSART_SetTxInterruptHandler 0B7C                                   ??_PIC16_Init 0023  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0023  
                                    ?_TMR0_ISR 0070                                      ?_TMR1_ISR 0070  
                                __end_of_fputc 1000                                  __end_of_fputs 0D87  
                                __end_of_putch 0B3D                         __end_of_PMD_Initialize 0BC5  
                      __end_of_JSN_GetLastTrig 0B16                          CCP3_CaptureISR@module 0078  
                        TMR0_ISR@CountCallBack 00C8                           _eusartRxStatusBuffer 0120  
               CCP3_SetCallBack@customCallBack 0020                ??_EUSART_SetOverrunErrorHandler 0022  
                           __end_of_PIC16_Init 0E89                                        ??_fputc 0026  
                    __end_of_SYSTEM_Initialize 0D3C                                        ??_fputs 002C  
                        ??_EUSART_Transmit_ISR 0070                                        ??_putch 0022  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                         __end_of_EUSART_Write 0DB4                       ??_JSN_Sensor_GetDistance 003C  
                                      ?_SetPin 0020                              ?_CCP1_SetCallBack 0020  
                                   __pmaintext 017D                  ?_EUSART_SetTxInterruptHandler 0020  
             _EUSART_TxDefaultInterruptHandler 00B0               __end_of_TMR0_SetInterruptHandler 0B8E  
                                      ?___lmul 0020                                  _FRT_GetMicros 0D01  
                                   ??_TMR0_ISR 0070                                     ??_TMR1_ISR 0072  
                                _FRT_GetMillis 0BD6                             ??_CCP1_SetCallBack 0022  
                                   __pintentry 0004                                        _CCP1CAP 0294  
                                      _CCP2CAP 0298                                        _CCP3CAP 0314  
                                      _CCP1CON 0293                                        _CCP2CON 0297  
                                      _CCP3CON 0313                                        _CCP1PPS 0E14  
                                      _CCP2PPS 0E15                                        _CCP3PPS 0E16  
                               ___lmul@product 0028                                  _FRT_IncMicros 0B8E  
                 ??_EUSART_DefaultErrorHandler 0071                                  _FRT_IncMillis 0B98  
                                      ?_printf 006C                                ?_PMD_Initialize 0070  
                                    ?_WritePin 0020                                        ?_strlen 0020  
                                _eusartRxCount 00CB                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                                        _OSCCON1 0919  
                                      _OSCCON3 091B                                        _OSCTUNE 091E  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                       ??_EUSART_SetErrorHandler 0022  
                             ?_TMR1_WriteTimer 0070                               ___lomod@dividend 0028  
            CCP1_DefaultCallBack@capturedValue 0073                               _micros@FRT$F1533 013E  
                                      _ReadPin 0498                              ?_CCP2_SetCallBack 0020  
                               ?_FRT_GetMicros 0022                                 ?_FRT_GetMillis 0020  
                                      ___lldiv 06A6                                        ___lodiv 052F  
                           ??_CCP2_SetCallBack 0022                                        ___lomod 0635  
                                    ?_vfprintf 0064                                 ?_FRT_IncMicros 0070  
                               ?_FRT_IncMillis 0070                                     ??_WritePin 0021  
                                      __ptext1 0BFC                                        __ptext2 0DB4  
                                      __ptext3 025F                                        __ptext4 008E  
                                      __ptext5 0701                                        __ptext6 0CE6  
                                      __ptext7 0D5E                                        __ptext8 0FBD  
                                      __ptext9 0B36                               ?_JSN_GetLastTrig 0070  
                                    _T1CONbits 001B                          _OSCILLATOR_Initialize 0BAD  
                           _sameSens@ccp2$F874 00D0                             _sameSens@ccp3$F999 00CE  
                     ??_PIN_MANAGER_Initialize 0020                      ?_TMR1_SetInterruptHandler 0020  
                                      _ticksUp 00C4                            _lastTrig@ccp3$F1000 00CD  
                              _JSN_Sensor_Init 05B3                                _JSN_Sensor_Trig 075A  
                                      clrloop0 0B23                           end_of_initialization 008A  
        __end_of_EUSART_SetOverrunErrorHandler 0B73                  _EUSART_SetOverrunErrorHandler 0B6A  
                                      fputc@fp 0025                                        fputs@fp 002B  
                            _EUSART_Initialize 07B1                                ___lldiv@divisor 002C  
                              ___lldiv@counter 0039                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 0322                              ?_CCP3_SetCallBack 0020  
                        TMR0_ReadTimer@readVal 0021                   __end_of_CCP1_DefaultCallBack 0EC6  
                           ??_CCP3_SetCallBack 0022                                     ??_vfprintf 0067  
                               _TMR0_ReadTimer 0B2F                                        strlen@a 0023  
                                      strlen@s 0024                            ??_EUSART_Initialize 0022  
                             ??_WDT_Initialize 0020                 ??_EUSART_SetTxInterruptHandler 0022  
                     _TMR0_SetInterruptHandler 0B85                                      _PORTAbits 000C  
                                    _PORTBbits 000D                                      _PORTCbits 000E  
                                    _TRISAbits 008C                                      _TRISBbits 008D  
                                    _TRISCbits 008E                      __end_of_EUSART_Initialize 07F7  
                              ??_FRT_GetMicros 0026                                ??_FRT_GetMillis 0024  
                       __end_of_TMR0_ReadTimer 0B36                                ??_FRT_IncMicros 0070  
                               __end_of_SetPin 0498                                ??_FRT_IncMillis 0070  
                               __end_of___lmul 0E19             __end_of_EUSART_DefaultErrorHandler 0B1A  
                   _EUSART_DefaultErrorHandler 0B16                                    vfpfcnvrt@ap 0055  
                                  vfpfcnvrt@fp 0063                                   _EUSART_Write 0D87  
                      __end_of_JSN_Sensor_Init 0635                         _JSN_Sensor_GetDistance 0F7D  
                       ?_OSCILLATOR_Initialize 0070                        __end_of_JSN_Sensor_Trig 07B1  
                 __end_of_CCP2_DefaultCallBack 0F03                                 __end_of_printf 0C11  
                               __end_of_strlen 0D01                            start_initialization 0076  
                              ___lodiv@divisor 0020                                ___lodiv@counter 0039  
               CCP2_SetCallBack@customCallBack 0020                                      SetPin@pin 0023  
                                  __end_of_pad 075A                              ??_CCP1_CaptureISR 0077  
 EUSART_SetRxInterruptHandler@interruptHandler 0020   EUSART_SetTxInterruptHandler@interruptHandler 0020  
                                  putch@txData 0022                              _ticksUp@ccp2$F872 00BE  
                            _ticksUp@ccp3$F997 00B8                 ?_EUSART_SetOverrunErrorHandler 0020  
                                     ??_SetPin 0021                                    vfprintf@fmt 0064  
                   _EUSART_FramingErrorHandler 00AC                               ??_PMD_Initialize 0020  
                              ?_TMR0_ReadTimer 0070                                       ??___lmul 0028  
                            ??_CCP2_CaptureISR 0077                         _EUSART_SetErrorHandler 0B58  
                       JSN_Sensor_Init@echoPin 0025                                    _CCPTMRSbits 029F  
                                     ??_printf 00E0                                       ??_strlen 0022  
                        CCP1_CaptureISR@module 0078                    __end_of_EUSART_Transmit_ISR 0D5E  
                                  __pbssCOMMON 007A                                      ___latbits 0002  
                       JSN_Sensor_Init@trigPin 0024                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00E0                              ??_CCP3_CaptureISR 0077  
                 __end_of_CCP3_DefaultCallBack 0F40                           _CCP1_DefaultCallBack 0E89  
                   __end_of_EUSART_Receive_ISR 0F7D               _EUSART_RxDefaultInterruptHandler 00AE  
                        _TMR0_InterruptHandler 014A                              ??_CCP1_Initialize 0022  
                                     ?_ReadPin 0070                                    WritePin@pin 0023  
                                  WritePin@val 0020                   __end_of_EUSART_RxDataHandler 0CE6  
                       _PIN_MANAGER_Initialize 0E19               __end_of_TMR1_SetInterruptHandler 0800  
            CCP3_DefaultCallBack@capturedValue 0073                                       ?___lldiv 002C  
                                     ?___lodiv 0020                                       ?___lomod 0020  
                                 _eusartRxHead 007B                                   _eusartTxHead 007D  
                                 _eusartRxTail 007A                                   _eusartTxTail 007C  
                 ??_INTERRUPT_InterruptManager 007A                               ?_JSN_Sensor_Init 0024  
                             ?_JSN_Sensor_Trig 0070                        _eusartTxBufferRemaining 00CC  
                              ___lomod@divisor 0020                                       _BAUD1CON 019F  
                            ??_CCP2_Initialize 0022                                ___lomod@counter 0031  
                                _TMR0_CallBack 0B28                          ?_CCP1_DefaultCallBack 0073  
                               _eusartRxBuffer 0128                              ??_TMR0_Initialize 0022  
                               _eusartTxBuffer 0130                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0020                                       _LATBbits 010D  
                                     _LATCbits 010E                                      clear_ram0 0B22  
                            ??_CCP3_Initialize 0022                                       _PIE0bits 0090  
                                     _PIE1bits 0091                                       _PIE4bits 0094  
                            _eusartRxLastError 00CA                           _CCP2_DefaultCallBack 0EC6  
                   ??_TMR0_SetInterruptHandler 0022                                       _PIR0bits 0010  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0022  
                                    _ticksDown 00C2                                       _PIR4bits 0014  
                                     _TMR0_ISR 0C53      __end_of_EUSART_DefaultOverrunErrorHandler 0B1E  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 0B1A                                       _TMR1_ISR 0BA2  
                                    _vfpfcnvrt 025F                              ??_TMR1_Initialize 0022  
                               ?_TMR0_CallBack 0070                              ___lmul@multiplier 0020  
                                     SetPin@io 0020                          ?_CCP2_DefaultCallBack 0073  
                        JSN_Sensor_Init@Sensor 0028                                     vfprintf@ap 0066  
                                   vfprintf@fp 0069                        ?_JSN_Sensor_GetDistance 003A  
                      ??_OSCILLATOR_Initialize 0020                            _EUSART_ErrorHandler 00A8  
                         _CCP3_DefaultCallBack 0F03                    ?_EUSART_DefaultErrorHandler 0070  
                                   ?_vfpfcnvrt 0054                                _CCP1_CaptureISR 0C11  
                                     _WritePin 0322                       _TMR1_SetInterruptHandler 07F7  
                        _TMR1_InterruptHandler 00B2                                     _T0CON0bits 0017  
                             _CCP1_SetCallBack 0B3D                           _EUSART_RxDataHandler 0CCB  
               CCP1_SetCallBack@customCallBack 0020                                       __ptext10 0D87  
                                     __ptext11 0635                                       __ptext20 0BB9  
                                     __ptext12 052F                                       __ptext21 0E19  
                                     __ptext13 0E4F                                     _T1GCONbits 001C  
                                     __ptext30 0B4F                                       __ptext22 0BAD  
                                     __ptext14 0D1D                                       __ptext31 0C82  
                                     __ptext23 07B1                                       __ptext15 0B1E  
                                     __ptext40 03DD                                       __ptext32 0B46  
                                     __ptext24 0B7C                                       __ptext16 0CB2  
                                     __ptext41 0F7D                                       __ptext33 0C6A  
                                     __ptext25 0B73                                       __ptext17 07F7  
                                     __ptext50 0B98                                       __ptext42 0DE5  
                                     __ptext34 0B3D                                       __ptext26 0B6A  
                                     __ptext18 0BE7                                       __ptext51 0B8E  
                                     __ptext43 06A6                                       __ptext35 075A  
                                     __ptext27 0B61                                       __ptext19 0B85  
                                     __ptext60 0C27                                       __ptext52 0D3C  
                                     __ptext44 0BD6                                       __ptext36 0D01  
                                     __ptext28 0B58                                       __ptext61 0EC6  
                                     __ptext53 0F40                                       __ptext37 0B2F  
                                     __ptext29 0C9A                                       __ptext62 0C11  
                                     __ptext54 0B1A                                       __ptext46 0BA2  
                                     __ptext38 05B3                                       __ptext63 0E89  
                                     __ptext55 0003                                       __ptext47 0BC5  
                                     __ptext39 0322                                       __ptext64 0498  
                                     __ptext56 0B16                                       __ptext48 0C53  
                                     __ptext65 0B13                                       __ptext57 0CCB  
                                     __ptext49 0B28                                       __ptext58 0C3D  
                                     __ptext59 0F03                         ??_CCP1_DefaultCallBack 0075  
                                     _lastTrig 00D3                                _CCP2_CaptureISR 0C27  
                             ??_TMR0_ReadTimer 0020                                       _sameSens 00D2  
                 _TMR0_DefaultInterruptHandler 0000                        ?_EUSART_SetErrorHandler 0020  
                          _ticksDown@ccp2$F873 00BC                            _ticksDown@ccp3$F998 00B6  
                                   _PIC16_Init 0E4F                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0020                 __end_of_JSN_Sensor_GetDistance 0FBD  
                        __end_of_FRT_GetMicros 0D1D                          __end_of_FRT_GetMillis 0BE7  
                                     int$flags 007E                          ?_CCP3_DefaultCallBack 0073  
                                     _vfprintf 0DB4             __end_of_INTERRUPT_InterruptManager 0074  
                   _INTERRUPT_InterruptManager 0004                          __end_of_FRT_IncMicros 0B98  
                        __end_of_FRT_IncMillis 0BA2                                      printf@fmt 006C  
        __end_of_EUSART_SetFramingErrorHandler 0B6A                  _EUSART_SetFramingErrorHandler 0B61  
                            ??_TMR1_WriteTimer 0072                                _CCP3_CaptureISR 0C3D  
                                   _INTCONbits 000B                                ??_TMR0_CallBack 0070  
                             _CCP2_SetCallBack 0B46                          ?_EUSART_RxDataHandler 0070  
                              _CCP1_Initialize 0C6A                                       intlevel1 0000  
                             ___lldiv@dividend 0030                        ?_PIN_MANAGER_Initialize 0070  
                       ??_CCP2_DefaultCallBack 0075                 __end_of_EUSART_SetErrorHandler 0B61  
                            ??_JSN_GetLastTrig 0070           __end_of_EUSART_SetRxInterruptHandler 0B7C  
                 _EUSART_SetRxInterruptHandler 0B73                        __end_of_CCP1_CaptureISR 0C27  
                              _CCP2_Initialize 0C82                                       printf@ap 00E1  
                           _EUSART_Receive_ISR 0F40  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                                  ??_vfpfcnvrt 0056                                  __pstringtext1 1000  
                                __pstringtext2 0000                          CCP2_CaptureISR@module 0078  
                          ?_EUSART_Receive_ISR 0070                               ___lldiv@quotient 0035  
                              _TMR0_Initialize 0BE7                               _CCP3_SetCallBack 0B4F  
                      __end_of_CCP2_CaptureISR 0C3D                                _CCP3_Initialize 0C9A  
                                   _TX1STAbits 019E                             EUSART_Write@txData 0021  
               __end_of_PIN_MANAGER_Initialize 0E4F                           ??_EUSART_Receive_ISR 0071  
                        JSN_Sensor_Trig@Sensor 002A                                _TMR1_Initialize 0CB2  
                                  ?_PIC16_Init 0070                        __end_of_CCP3_CaptureISR 0C53  
