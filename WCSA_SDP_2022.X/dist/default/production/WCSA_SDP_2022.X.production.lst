

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun Feb 20 16:05:15 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text46,local,class=CODE,merge=1,delta=2,group=3
    64                           	psect	text47,local,class=CODE,merge=1,delta=2,group=3
    65                           	psect	text48,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	intentry,global,class=CODE,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,delta=2
    90                           	psect	text73,local,class=CODE,merge=1,delta=2
    91                           	psect	text74,local,class=CODE,merge=1,delta=2
    92                           	psect	text75,local,class=CODE,merge=1,delta=2
    93                           	psect	text76,local,class=CODE,merge=1,delta=2
    94                           	psect	text77,local,class=CODE,merge=1,delta=2
    95                           	psect	text78,local,class=CODE,merge=1,delta=2
    96                           	psect	text79,local,class=CODE,merge=1,delta=2
    97                           	psect	text80,local,class=CODE,merge=1,delta=2
    98                           	psect	text81,local,class=CODE,merge=1,delta=2
    99                           	psect	text82,local,class=CODE,merge=1,delta=2
   100                           	psect	text83,local,class=CODE,merge=1,delta=2
   101                           	psect	text84,local,class=CODE,merge=1,delta=2
   102                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   103                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   104                           	dabs	1,0x7E,2
   105  0000                     
   106                           ; Version 2.40
   107                           ; Generated 19/01/2022 GMT
   108                           ; 
   109                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   110                           ; All rights reserved.
   111                           ; 
   112                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   113                           ; 
   114                           ; Redistribution and use in source and binary forms, with or without modification, are
   115                           ; permitted provided that the following conditions are met:
   116                           ; 
   117                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   118                           ;        conditions and the following disclaimer.
   119                           ; 
   120                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   121                           ;        of conditions and the following disclaimer in the documentation and/or other
   122                           ;        materials provided with the distribution. Publication is not required when
   123                           ;        this file is used in an embedded application.
   124                           ; 
   125                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   126                           ;        software without specific prior written permission.
   127                           ; 
   128                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   129                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   130                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   131                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   132                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   133                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   134                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   135                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   136                           ; 
   137                           ; 
   138                           ; Code-generator required, PIC16F18345 Definitions
   139                           ; 
   140                           ; SFR Addresses
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0097                     	;# 
   184  009B                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  0111                     	;# 
   194  0112                     	;# 
   195  0113                     	;# 
   196  0114                     	;# 
   197  0115                     	;# 
   198  0116                     	;# 
   199  0117                     	;# 
   200  0118                     	;# 
   201  0119                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  018E                     	;# 
   205  0197                     	;# 
   206  0199                     	;# 
   207  0199                     	;# 
   208  0199                     	;# 
   209  019A                     	;# 
   210  019A                     	;# 
   211  019A                     	;# 
   212  019B                     	;# 
   213  019B                     	;# 
   214  019B                     	;# 
   215  019B                     	;# 
   216  019B                     	;# 
   217  019C                     	;# 
   218  019C                     	;# 
   219  019C                     	;# 
   220  019D                     	;# 
   221  019D                     	;# 
   222  019D                     	;# 
   223  019E                     	;# 
   224  019E                     	;# 
   225  019E                     	;# 
   226  019F                     	;# 
   227  019F                     	;# 
   228  019F                     	;# 
   229  019F                     	;# 
   230  019F                     	;# 
   231  020C                     	;# 
   232  020D                     	;# 
   233  020E                     	;# 
   234  0211                     	;# 
   235  0211                     	;# 
   236  0212                     	;# 
   237  0212                     	;# 
   238  0213                     	;# 
   239  0213                     	;# 
   240  0214                     	;# 
   241  0214                     	;# 
   242  0215                     	;# 
   243  0215                     	;# 
   244  0215                     	;# 
   245  0215                     	;# 
   246  0216                     	;# 
   247  0216                     	;# 
   248  0217                     	;# 
   249  0217                     	;# 
   250  0219                     	;# 
   251  021A                     	;# 
   252  021B                     	;# 
   253  021C                     	;# 
   254  021D                     	;# 
   255  021D                     	;# 
   256  021E                     	;# 
   257  021F                     	;# 
   258  028C                     	;# 
   259  028D                     	;# 
   260  028E                     	;# 
   261  0291                     	;# 
   262  0291                     	;# 
   263  0292                     	;# 
   264  0293                     	;# 
   265  0294                     	;# 
   266  0295                     	;# 
   267  0295                     	;# 
   268  0296                     	;# 
   269  0297                     	;# 
   270  0298                     	;# 
   271  029F                     	;# 
   272  030C                     	;# 
   273  030D                     	;# 
   274  030E                     	;# 
   275  0311                     	;# 
   276  0311                     	;# 
   277  0312                     	;# 
   278  0313                     	;# 
   279  0314                     	;# 
   280  0315                     	;# 
   281  0315                     	;# 
   282  0316                     	;# 
   283  0317                     	;# 
   284  0318                     	;# 
   285  038C                     	;# 
   286  038D                     	;# 
   287  038E                     	;# 
   288  0391                     	;# 
   289  0392                     	;# 
   290  0393                     	;# 
   291  0394                     	;# 
   292  0395                     	;# 
   293  0396                     	;# 
   294  0397                     	;# 
   295  0398                     	;# 
   296  0399                     	;# 
   297  039A                     	;# 
   298  039C                     	;# 
   299  039D                     	;# 
   300  039E                     	;# 
   301  039F                     	;# 
   302  0411                     	;# 
   303  0411                     	;# 
   304  0412                     	;# 
   305  0413                     	;# 
   306  0414                     	;# 
   307  0415                     	;# 
   308  0416                     	;# 
   309  0417                     	;# 
   310  0418                     	;# 
   311  0418                     	;# 
   312  0419                     	;# 
   313  041A                     	;# 
   314  041B                     	;# 
   315  041C                     	;# 
   316  041D                     	;# 
   317  041E                     	;# 
   318  041F                     	;# 
   319  0498                     	;# 
   320  0498                     	;# 
   321  0499                     	;# 
   322  049A                     	;# 
   323  049B                     	;# 
   324  049B                     	;# 
   325  049C                     	;# 
   326  049D                     	;# 
   327  049E                     	;# 
   328  049F                     	;# 
   329  0617                     	;# 
   330  0618                     	;# 
   331  0619                     	;# 
   332  0619                     	;# 
   333  061A                     	;# 
   334  061B                     	;# 
   335  061C                     	;# 
   336  061C                     	;# 
   337  061F                     	;# 
   338  0691                     	;# 
   339  0692                     	;# 
   340  0693                     	;# 
   341  0694                     	;# 
   342  0695                     	;# 
   343  0696                     	;# 
   344  0697                     	;# 
   345  0698                     	;# 
   346  0699                     	;# 
   347  0711                     	;# 
   348  0712                     	;# 
   349  0713                     	;# 
   350  0714                     	;# 
   351  0715                     	;# 
   352  0716                     	;# 
   353  0717                     	;# 
   354  0718                     	;# 
   355  0719                     	;# 
   356  0891                     	;# 
   357  0891                     	;# 
   358  0891                     	;# 
   359  0891                     	;# 
   360  0891                     	;# 
   361  0891                     	;# 
   362  0892                     	;# 
   363  0892                     	;# 
   364  0892                     	;# 
   365  0893                     	;# 
   366  0893                     	;# 
   367  0893                     	;# 
   368  0893                     	;# 
   369  0893                     	;# 
   370  0893                     	;# 
   371  0894                     	;# 
   372  0894                     	;# 
   373  0894                     	;# 
   374  0895                     	;# 
   375  0895                     	;# 
   376  0895                     	;# 
   377  0896                     	;# 
   378  0896                     	;# 
   379  0896                     	;# 
   380  089B                     	;# 
   381  0911                     	;# 
   382  0912                     	;# 
   383  0913                     	;# 
   384  0914                     	;# 
   385  0915                     	;# 
   386  0916                     	;# 
   387  0918                     	;# 
   388  0919                     	;# 
   389  091A                     	;# 
   390  091B                     	;# 
   391  091C                     	;# 
   392  091D                     	;# 
   393  091E                     	;# 
   394  091F                     	;# 
   395  0E0F                     	;# 
   396  0E10                     	;# 
   397  0E11                     	;# 
   398  0E12                     	;# 
   399  0E13                     	;# 
   400  0E14                     	;# 
   401  0E15                     	;# 
   402  0E16                     	;# 
   403  0E17                     	;# 
   404  0E18                     	;# 
   405  0E19                     	;# 
   406  0E1A                     	;# 
   407  0E1B                     	;# 
   408  0E1C                     	;# 
   409  0E1D                     	;# 
   410  0E1E                     	;# 
   411  0E1F                     	;# 
   412  0E20                     	;# 
   413  0E21                     	;# 
   414  0E22                     	;# 
   415  0E24                     	;# 
   416  0E25                     	;# 
   417  0E28                     	;# 
   418  0E29                     	;# 
   419  0E2A                     	;# 
   420  0E2B                     	;# 
   421  0E2C                     	;# 
   422  0E2D                     	;# 
   423  0E2E                     	;# 
   424  0E2F                     	;# 
   425  0E90                     	;# 
   426  0E91                     	;# 
   427  0E92                     	;# 
   428  0E94                     	;# 
   429  0E95                     	;# 
   430  0E9C                     	;# 
   431  0E9D                     	;# 
   432  0E9E                     	;# 
   433  0E9F                     	;# 
   434  0EA0                     	;# 
   435  0EA1                     	;# 
   436  0EA2                     	;# 
   437  0EA3                     	;# 
   438  0EA4                     	;# 
   439  0EA5                     	;# 
   440  0EA6                     	;# 
   441  0EA7                     	;# 
   442  0F0F                     	;# 
   443  0F10                     	;# 
   444  0F11                     	;# 
   445  0F12                     	;# 
   446  0F13                     	;# 
   447  0F14                     	;# 
   448  0F15                     	;# 
   449  0F16                     	;# 
   450  0F17                     	;# 
   451  0F18                     	;# 
   452  0F19                     	;# 
   453  0F1A                     	;# 
   454  0F1B                     	;# 
   455  0F1C                     	;# 
   456  0F1D                     	;# 
   457  0F1E                     	;# 
   458  0F1F                     	;# 
   459  0F20                     	;# 
   460  0F21                     	;# 
   461  0F22                     	;# 
   462  0F23                     	;# 
   463  0F24                     	;# 
   464  0F25                     	;# 
   465  0F26                     	;# 
   466  0F27                     	;# 
   467  0F28                     	;# 
   468  0F29                     	;# 
   469  0F2A                     	;# 
   470  0F2B                     	;# 
   471  0F2C                     	;# 
   472  0F2D                     	;# 
   473  0F2E                     	;# 
   474  0F2F                     	;# 
   475  0F30                     	;# 
   476  0F31                     	;# 
   477  0F32                     	;# 
   478  0F33                     	;# 
   479  0F34                     	;# 
   480  0F35                     	;# 
   481  0F36                     	;# 
   482  0F37                     	;# 
   483  0FE4                     	;# 
   484  0FE5                     	;# 
   485  0FE6                     	;# 
   486  0FE7                     	;# 
   487  0FE8                     	;# 
   488  0FE9                     	;# 
   489  0FEA                     	;# 
   490  0FEB                     	;# 
   491  0FED                     	;# 
   492  0FEE                     	;# 
   493  0FEF                     	;# 
   494  0000                     	;# 
   495  0001                     	;# 
   496  0002                     	;# 
   497  0003                     	;# 
   498  0004                     	;# 
   499  0005                     	;# 
   500  0006                     	;# 
   501  0007                     	;# 
   502  0008                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  0010                     	;# 
   510  0011                     	;# 
   511  0012                     	;# 
   512  0013                     	;# 
   513  0014                     	;# 
   514  0015                     	;# 
   515  0015                     	;# 
   516  0016                     	;# 
   517  0016                     	;# 
   518  0017                     	;# 
   519  0018                     	;# 
   520  0019                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001C                     	;# 
   525  001D                     	;# 
   526  001E                     	;# 
   527  001F                     	;# 
   528  008C                     	;# 
   529  008D                     	;# 
   530  008E                     	;# 
   531  0090                     	;# 
   532  0091                     	;# 
   533  0092                     	;# 
   534  0093                     	;# 
   535  0094                     	;# 
   536  0097                     	;# 
   537  009B                     	;# 
   538  009B                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  009F                     	;# 
   543  010C                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  0111                     	;# 
   547  0112                     	;# 
   548  0113                     	;# 
   549  0114                     	;# 
   550  0115                     	;# 
   551  0116                     	;# 
   552  0117                     	;# 
   553  0118                     	;# 
   554  0119                     	;# 
   555  018C                     	;# 
   556  018D                     	;# 
   557  018E                     	;# 
   558  0197                     	;# 
   559  0199                     	;# 
   560  0199                     	;# 
   561  0199                     	;# 
   562  019A                     	;# 
   563  019A                     	;# 
   564  019A                     	;# 
   565  019B                     	;# 
   566  019B                     	;# 
   567  019B                     	;# 
   568  019B                     	;# 
   569  019B                     	;# 
   570  019C                     	;# 
   571  019C                     	;# 
   572  019C                     	;# 
   573  019D                     	;# 
   574  019D                     	;# 
   575  019D                     	;# 
   576  019E                     	;# 
   577  019E                     	;# 
   578  019E                     	;# 
   579  019F                     	;# 
   580  019F                     	;# 
   581  019F                     	;# 
   582  019F                     	;# 
   583  019F                     	;# 
   584  020C                     	;# 
   585  020D                     	;# 
   586  020E                     	;# 
   587  0211                     	;# 
   588  0211                     	;# 
   589  0212                     	;# 
   590  0212                     	;# 
   591  0213                     	;# 
   592  0213                     	;# 
   593  0214                     	;# 
   594  0214                     	;# 
   595  0215                     	;# 
   596  0215                     	;# 
   597  0215                     	;# 
   598  0215                     	;# 
   599  0216                     	;# 
   600  0216                     	;# 
   601  0217                     	;# 
   602  0217                     	;# 
   603  0219                     	;# 
   604  021A                     	;# 
   605  021B                     	;# 
   606  021C                     	;# 
   607  021D                     	;# 
   608  021D                     	;# 
   609  021E                     	;# 
   610  021F                     	;# 
   611  028C                     	;# 
   612  028D                     	;# 
   613  028E                     	;# 
   614  0291                     	;# 
   615  0291                     	;# 
   616  0292                     	;# 
   617  0293                     	;# 
   618  0294                     	;# 
   619  0295                     	;# 
   620  0295                     	;# 
   621  0296                     	;# 
   622  0297                     	;# 
   623  0298                     	;# 
   624  029F                     	;# 
   625  030C                     	;# 
   626  030D                     	;# 
   627  030E                     	;# 
   628  0311                     	;# 
   629  0311                     	;# 
   630  0312                     	;# 
   631  0313                     	;# 
   632  0314                     	;# 
   633  0315                     	;# 
   634  0315                     	;# 
   635  0316                     	;# 
   636  0317                     	;# 
   637  0318                     	;# 
   638  038C                     	;# 
   639  038D                     	;# 
   640  038E                     	;# 
   641  0391                     	;# 
   642  0392                     	;# 
   643  0393                     	;# 
   644  0394                     	;# 
   645  0395                     	;# 
   646  0396                     	;# 
   647  0397                     	;# 
   648  0398                     	;# 
   649  0399                     	;# 
   650  039A                     	;# 
   651  039C                     	;# 
   652  039D                     	;# 
   653  039E                     	;# 
   654  039F                     	;# 
   655  0411                     	;# 
   656  0411                     	;# 
   657  0412                     	;# 
   658  0413                     	;# 
   659  0414                     	;# 
   660  0415                     	;# 
   661  0416                     	;# 
   662  0417                     	;# 
   663  0418                     	;# 
   664  0418                     	;# 
   665  0419                     	;# 
   666  041A                     	;# 
   667  041B                     	;# 
   668  041C                     	;# 
   669  041D                     	;# 
   670  041E                     	;# 
   671  041F                     	;# 
   672  0498                     	;# 
   673  0498                     	;# 
   674  0499                     	;# 
   675  049A                     	;# 
   676  049B                     	;# 
   677  049B                     	;# 
   678  049C                     	;# 
   679  049D                     	;# 
   680  049E                     	;# 
   681  049F                     	;# 
   682  0617                     	;# 
   683  0618                     	;# 
   684  0619                     	;# 
   685  0619                     	;# 
   686  061A                     	;# 
   687  061B                     	;# 
   688  061C                     	;# 
   689  061C                     	;# 
   690  061F                     	;# 
   691  0691                     	;# 
   692  0692                     	;# 
   693  0693                     	;# 
   694  0694                     	;# 
   695  0695                     	;# 
   696  0696                     	;# 
   697  0697                     	;# 
   698  0698                     	;# 
   699  0699                     	;# 
   700  0711                     	;# 
   701  0712                     	;# 
   702  0713                     	;# 
   703  0714                     	;# 
   704  0715                     	;# 
   705  0716                     	;# 
   706  0717                     	;# 
   707  0718                     	;# 
   708  0719                     	;# 
   709  0891                     	;# 
   710  0891                     	;# 
   711  0891                     	;# 
   712  0891                     	;# 
   713  0891                     	;# 
   714  0891                     	;# 
   715  0892                     	;# 
   716  0892                     	;# 
   717  0892                     	;# 
   718  0893                     	;# 
   719  0893                     	;# 
   720  0893                     	;# 
   721  0893                     	;# 
   722  0893                     	;# 
   723  0893                     	;# 
   724  0894                     	;# 
   725  0894                     	;# 
   726  0894                     	;# 
   727  0895                     	;# 
   728  0895                     	;# 
   729  0895                     	;# 
   730  0896                     	;# 
   731  0896                     	;# 
   732  0896                     	;# 
   733  089B                     	;# 
   734  0911                     	;# 
   735  0912                     	;# 
   736  0913                     	;# 
   737  0914                     	;# 
   738  0915                     	;# 
   739  0916                     	;# 
   740  0918                     	;# 
   741  0919                     	;# 
   742  091A                     	;# 
   743  091B                     	;# 
   744  091C                     	;# 
   745  091D                     	;# 
   746  091E                     	;# 
   747  091F                     	;# 
   748  0E0F                     	;# 
   749  0E10                     	;# 
   750  0E11                     	;# 
   751  0E12                     	;# 
   752  0E13                     	;# 
   753  0E14                     	;# 
   754  0E15                     	;# 
   755  0E16                     	;# 
   756  0E17                     	;# 
   757  0E18                     	;# 
   758  0E19                     	;# 
   759  0E1A                     	;# 
   760  0E1B                     	;# 
   761  0E1C                     	;# 
   762  0E1D                     	;# 
   763  0E1E                     	;# 
   764  0E1F                     	;# 
   765  0E20                     	;# 
   766  0E21                     	;# 
   767  0E22                     	;# 
   768  0E24                     	;# 
   769  0E25                     	;# 
   770  0E28                     	;# 
   771  0E29                     	;# 
   772  0E2A                     	;# 
   773  0E2B                     	;# 
   774  0E2C                     	;# 
   775  0E2D                     	;# 
   776  0E2E                     	;# 
   777  0E2F                     	;# 
   778  0E90                     	;# 
   779  0E91                     	;# 
   780  0E92                     	;# 
   781  0E94                     	;# 
   782  0E95                     	;# 
   783  0E9C                     	;# 
   784  0E9D                     	;# 
   785  0E9E                     	;# 
   786  0E9F                     	;# 
   787  0EA0                     	;# 
   788  0EA1                     	;# 
   789  0EA2                     	;# 
   790  0EA3                     	;# 
   791  0EA4                     	;# 
   792  0EA5                     	;# 
   793  0EA6                     	;# 
   794  0EA7                     	;# 
   795  0F0F                     	;# 
   796  0F10                     	;# 
   797  0F11                     	;# 
   798  0F12                     	;# 
   799  0F13                     	;# 
   800  0F14                     	;# 
   801  0F15                     	;# 
   802  0F16                     	;# 
   803  0F17                     	;# 
   804  0F18                     	;# 
   805  0F19                     	;# 
   806  0F1A                     	;# 
   807  0F1B                     	;# 
   808  0F1C                     	;# 
   809  0F1D                     	;# 
   810  0F1E                     	;# 
   811  0F1F                     	;# 
   812  0F20                     	;# 
   813  0F21                     	;# 
   814  0F22                     	;# 
   815  0F23                     	;# 
   816  0F24                     	;# 
   817  0F25                     	;# 
   818  0F26                     	;# 
   819  0F27                     	;# 
   820  0F28                     	;# 
   821  0F29                     	;# 
   822  0F2A                     	;# 
   823  0F2B                     	;# 
   824  0F2C                     	;# 
   825  0F2D                     	;# 
   826  0F2E                     	;# 
   827  0F2F                     	;# 
   828  0F30                     	;# 
   829  0F31                     	;# 
   830  0F32                     	;# 
   831  0F33                     	;# 
   832  0F34                     	;# 
   833  0F35                     	;# 
   834  0F36                     	;# 
   835  0F37                     	;# 
   836  0FE4                     	;# 
   837  0FE5                     	;# 
   838  0FE6                     	;# 
   839  0FE7                     	;# 
   840  0FE8                     	;# 
   841  0FE9                     	;# 
   842  0FEA                     	;# 
   843  0FEB                     	;# 
   844  0FED                     	;# 
   845  0FEE                     	;# 
   846  0FEF                     	;# 
   847  0000                     	;# 
   848  0001                     	;# 
   849  0002                     	;# 
   850  0003                     	;# 
   851  0004                     	;# 
   852  0005                     	;# 
   853  0006                     	;# 
   854  0007                     	;# 
   855  0008                     	;# 
   856  0009                     	;# 
   857  000A                     	;# 
   858  000B                     	;# 
   859  000C                     	;# 
   860  000D                     	;# 
   861  000E                     	;# 
   862  0010                     	;# 
   863  0011                     	;# 
   864  0012                     	;# 
   865  0013                     	;# 
   866  0014                     	;# 
   867  0015                     	;# 
   868  0015                     	;# 
   869  0016                     	;# 
   870  0016                     	;# 
   871  0017                     	;# 
   872  0018                     	;# 
   873  0019                     	;# 
   874  0019                     	;# 
   875  001A                     	;# 
   876  001B                     	;# 
   877  001C                     	;# 
   878  001D                     	;# 
   879  001E                     	;# 
   880  001F                     	;# 
   881  008C                     	;# 
   882  008D                     	;# 
   883  008E                     	;# 
   884  0090                     	;# 
   885  0091                     	;# 
   886  0092                     	;# 
   887  0093                     	;# 
   888  0094                     	;# 
   889  0097                     	;# 
   890  009B                     	;# 
   891  009B                     	;# 
   892  009C                     	;# 
   893  009D                     	;# 
   894  009E                     	;# 
   895  009F                     	;# 
   896  010C                     	;# 
   897  010D                     	;# 
   898  010E                     	;# 
   899  0111                     	;# 
   900  0112                     	;# 
   901  0113                     	;# 
   902  0114                     	;# 
   903  0115                     	;# 
   904  0116                     	;# 
   905  0117                     	;# 
   906  0118                     	;# 
   907  0119                     	;# 
   908  018C                     	;# 
   909  018D                     	;# 
   910  018E                     	;# 
   911  0197                     	;# 
   912  0199                     	;# 
   913  0199                     	;# 
   914  0199                     	;# 
   915  019A                     	;# 
   916  019A                     	;# 
   917  019A                     	;# 
   918  019B                     	;# 
   919  019B                     	;# 
   920  019B                     	;# 
   921  019B                     	;# 
   922  019B                     	;# 
   923  019C                     	;# 
   924  019C                     	;# 
   925  019C                     	;# 
   926  019D                     	;# 
   927  019D                     	;# 
   928  019D                     	;# 
   929  019E                     	;# 
   930  019E                     	;# 
   931  019E                     	;# 
   932  019F                     	;# 
   933  019F                     	;# 
   934  019F                     	;# 
   935  019F                     	;# 
   936  019F                     	;# 
   937  020C                     	;# 
   938  020D                     	;# 
   939  020E                     	;# 
   940  0211                     	;# 
   941  0211                     	;# 
   942  0212                     	;# 
   943  0212                     	;# 
   944  0213                     	;# 
   945  0213                     	;# 
   946  0214                     	;# 
   947  0214                     	;# 
   948  0215                     	;# 
   949  0215                     	;# 
   950  0215                     	;# 
   951  0215                     	;# 
   952  0216                     	;# 
   953  0216                     	;# 
   954  0217                     	;# 
   955  0217                     	;# 
   956  0219                     	;# 
   957  021A                     	;# 
   958  021B                     	;# 
   959  021C                     	;# 
   960  021D                     	;# 
   961  021D                     	;# 
   962  021E                     	;# 
   963  021F                     	;# 
   964  028C                     	;# 
   965  028D                     	;# 
   966  028E                     	;# 
   967  0291                     	;# 
   968  0291                     	;# 
   969  0292                     	;# 
   970  0293                     	;# 
   971  0294                     	;# 
   972  0295                     	;# 
   973  0295                     	;# 
   974  0296                     	;# 
   975  0297                     	;# 
   976  0298                     	;# 
   977  029F                     	;# 
   978  030C                     	;# 
   979  030D                     	;# 
   980  030E                     	;# 
   981  0311                     	;# 
   982  0311                     	;# 
   983  0312                     	;# 
   984  0313                     	;# 
   985  0314                     	;# 
   986  0315                     	;# 
   987  0315                     	;# 
   988  0316                     	;# 
   989  0317                     	;# 
   990  0318                     	;# 
   991  038C                     	;# 
   992  038D                     	;# 
   993  038E                     	;# 
   994  0391                     	;# 
   995  0392                     	;# 
   996  0393                     	;# 
   997  0394                     	;# 
   998  0395                     	;# 
   999  0396                     	;# 
  1000  0397                     	;# 
  1001  0398                     	;# 
  1002  0399                     	;# 
  1003  039A                     	;# 
  1004  039C                     	;# 
  1005  039D                     	;# 
  1006  039E                     	;# 
  1007  039F                     	;# 
  1008  0411                     	;# 
  1009  0411                     	;# 
  1010  0412                     	;# 
  1011  0413                     	;# 
  1012  0414                     	;# 
  1013  0415                     	;# 
  1014  0416                     	;# 
  1015  0417                     	;# 
  1016  0418                     	;# 
  1017  0418                     	;# 
  1018  0419                     	;# 
  1019  041A                     	;# 
  1020  041B                     	;# 
  1021  041C                     	;# 
  1022  041D                     	;# 
  1023  041E                     	;# 
  1024  041F                     	;# 
  1025  0498                     	;# 
  1026  0498                     	;# 
  1027  0499                     	;# 
  1028  049A                     	;# 
  1029  049B                     	;# 
  1030  049B                     	;# 
  1031  049C                     	;# 
  1032  049D                     	;# 
  1033  049E                     	;# 
  1034  049F                     	;# 
  1035  0617                     	;# 
  1036  0618                     	;# 
  1037  0619                     	;# 
  1038  0619                     	;# 
  1039  061A                     	;# 
  1040  061B                     	;# 
  1041  061C                     	;# 
  1042  061C                     	;# 
  1043  061F                     	;# 
  1044  0691                     	;# 
  1045  0692                     	;# 
  1046  0693                     	;# 
  1047  0694                     	;# 
  1048  0695                     	;# 
  1049  0696                     	;# 
  1050  0697                     	;# 
  1051  0698                     	;# 
  1052  0699                     	;# 
  1053  0711                     	;# 
  1054  0712                     	;# 
  1055  0713                     	;# 
  1056  0714                     	;# 
  1057  0715                     	;# 
  1058  0716                     	;# 
  1059  0717                     	;# 
  1060  0718                     	;# 
  1061  0719                     	;# 
  1062  0891                     	;# 
  1063  0891                     	;# 
  1064  0891                     	;# 
  1065  0891                     	;# 
  1066  0891                     	;# 
  1067  0891                     	;# 
  1068  0892                     	;# 
  1069  0892                     	;# 
  1070  0892                     	;# 
  1071  0893                     	;# 
  1072  0893                     	;# 
  1073  0893                     	;# 
  1074  0893                     	;# 
  1075  0893                     	;# 
  1076  0893                     	;# 
  1077  0894                     	;# 
  1078  0894                     	;# 
  1079  0894                     	;# 
  1080  0895                     	;# 
  1081  0895                     	;# 
  1082  0895                     	;# 
  1083  0896                     	;# 
  1084  0896                     	;# 
  1085  0896                     	;# 
  1086  089B                     	;# 
  1087  0911                     	;# 
  1088  0912                     	;# 
  1089  0913                     	;# 
  1090  0914                     	;# 
  1091  0915                     	;# 
  1092  0916                     	;# 
  1093  0918                     	;# 
  1094  0919                     	;# 
  1095  091A                     	;# 
  1096  091B                     	;# 
  1097  091C                     	;# 
  1098  091D                     	;# 
  1099  091E                     	;# 
  1100  091F                     	;# 
  1101  0E0F                     	;# 
  1102  0E10                     	;# 
  1103  0E11                     	;# 
  1104  0E12                     	;# 
  1105  0E13                     	;# 
  1106  0E14                     	;# 
  1107  0E15                     	;# 
  1108  0E16                     	;# 
  1109  0E17                     	;# 
  1110  0E18                     	;# 
  1111  0E19                     	;# 
  1112  0E1A                     	;# 
  1113  0E1B                     	;# 
  1114  0E1C                     	;# 
  1115  0E1D                     	;# 
  1116  0E1E                     	;# 
  1117  0E1F                     	;# 
  1118  0E20                     	;# 
  1119  0E21                     	;# 
  1120  0E22                     	;# 
  1121  0E24                     	;# 
  1122  0E25                     	;# 
  1123  0E28                     	;# 
  1124  0E29                     	;# 
  1125  0E2A                     	;# 
  1126  0E2B                     	;# 
  1127  0E2C                     	;# 
  1128  0E2D                     	;# 
  1129  0E2E                     	;# 
  1130  0E2F                     	;# 
  1131  0E90                     	;# 
  1132  0E91                     	;# 
  1133  0E92                     	;# 
  1134  0E94                     	;# 
  1135  0E95                     	;# 
  1136  0E9C                     	;# 
  1137  0E9D                     	;# 
  1138  0E9E                     	;# 
  1139  0E9F                     	;# 
  1140  0EA0                     	;# 
  1141  0EA1                     	;# 
  1142  0EA2                     	;# 
  1143  0EA3                     	;# 
  1144  0EA4                     	;# 
  1145  0EA5                     	;# 
  1146  0EA6                     	;# 
  1147  0EA7                     	;# 
  1148  0F0F                     	;# 
  1149  0F10                     	;# 
  1150  0F11                     	;# 
  1151  0F12                     	;# 
  1152  0F13                     	;# 
  1153  0F14                     	;# 
  1154  0F15                     	;# 
  1155  0F16                     	;# 
  1156  0F17                     	;# 
  1157  0F18                     	;# 
  1158  0F19                     	;# 
  1159  0F1A                     	;# 
  1160  0F1B                     	;# 
  1161  0F1C                     	;# 
  1162  0F1D                     	;# 
  1163  0F1E                     	;# 
  1164  0F1F                     	;# 
  1165  0F20                     	;# 
  1166  0F21                     	;# 
  1167  0F22                     	;# 
  1168  0F23                     	;# 
  1169  0F24                     	;# 
  1170  0F25                     	;# 
  1171  0F26                     	;# 
  1172  0F27                     	;# 
  1173  0F28                     	;# 
  1174  0F29                     	;# 
  1175  0F2A                     	;# 
  1176  0F2B                     	;# 
  1177  0F2C                     	;# 
  1178  0F2D                     	;# 
  1179  0F2E                     	;# 
  1180  0F2F                     	;# 
  1181  0F30                     	;# 
  1182  0F31                     	;# 
  1183  0F32                     	;# 
  1184  0F33                     	;# 
  1185  0F34                     	;# 
  1186  0F35                     	;# 
  1187  0F36                     	;# 
  1188  0F37                     	;# 
  1189  0FE4                     	;# 
  1190  0FE5                     	;# 
  1191  0FE6                     	;# 
  1192  0FE7                     	;# 
  1193  0FE8                     	;# 
  1194  0FE9                     	;# 
  1195  0FEA                     	;# 
  1196  0FEB                     	;# 
  1197  0FED                     	;# 
  1198  0FEE                     	;# 
  1199  0FEF                     	;# 
  1200  0000                     	;# 
  1201  0001                     	;# 
  1202  0002                     	;# 
  1203  0003                     	;# 
  1204  0004                     	;# 
  1205  0005                     	;# 
  1206  0006                     	;# 
  1207  0007                     	;# 
  1208  0008                     	;# 
  1209  0009                     	;# 
  1210  000A                     	;# 
  1211  000B                     	;# 
  1212  000C                     	;# 
  1213  000D                     	;# 
  1214  000E                     	;# 
  1215  0010                     	;# 
  1216  0011                     	;# 
  1217  0012                     	;# 
  1218  0013                     	;# 
  1219  0014                     	;# 
  1220  0015                     	;# 
  1221  0015                     	;# 
  1222  0016                     	;# 
  1223  0016                     	;# 
  1224  0017                     	;# 
  1225  0018                     	;# 
  1226  0019                     	;# 
  1227  0019                     	;# 
  1228  001A                     	;# 
  1229  001B                     	;# 
  1230  001C                     	;# 
  1231  001D                     	;# 
  1232  001E                     	;# 
  1233  001F                     	;# 
  1234  008C                     	;# 
  1235  008D                     	;# 
  1236  008E                     	;# 
  1237  0090                     	;# 
  1238  0091                     	;# 
  1239  0092                     	;# 
  1240  0093                     	;# 
  1241  0094                     	;# 
  1242  0097                     	;# 
  1243  009B                     	;# 
  1244  009B                     	;# 
  1245  009C                     	;# 
  1246  009D                     	;# 
  1247  009E                     	;# 
  1248  009F                     	;# 
  1249  010C                     	;# 
  1250  010D                     	;# 
  1251  010E                     	;# 
  1252  0111                     	;# 
  1253  0112                     	;# 
  1254  0113                     	;# 
  1255  0114                     	;# 
  1256  0115                     	;# 
  1257  0116                     	;# 
  1258  0117                     	;# 
  1259  0118                     	;# 
  1260  0119                     	;# 
  1261  018C                     	;# 
  1262  018D                     	;# 
  1263  018E                     	;# 
  1264  0197                     	;# 
  1265  0199                     	;# 
  1266  0199                     	;# 
  1267  0199                     	;# 
  1268  019A                     	;# 
  1269  019A                     	;# 
  1270  019A                     	;# 
  1271  019B                     	;# 
  1272  019B                     	;# 
  1273  019B                     	;# 
  1274  019B                     	;# 
  1275  019B                     	;# 
  1276  019C                     	;# 
  1277  019C                     	;# 
  1278  019C                     	;# 
  1279  019D                     	;# 
  1280  019D                     	;# 
  1281  019D                     	;# 
  1282  019E                     	;# 
  1283  019E                     	;# 
  1284  019E                     	;# 
  1285  019F                     	;# 
  1286  019F                     	;# 
  1287  019F                     	;# 
  1288  019F                     	;# 
  1289  019F                     	;# 
  1290  020C                     	;# 
  1291  020D                     	;# 
  1292  020E                     	;# 
  1293  0211                     	;# 
  1294  0211                     	;# 
  1295  0212                     	;# 
  1296  0212                     	;# 
  1297  0213                     	;# 
  1298  0213                     	;# 
  1299  0214                     	;# 
  1300  0214                     	;# 
  1301  0215                     	;# 
  1302  0215                     	;# 
  1303  0215                     	;# 
  1304  0215                     	;# 
  1305  0216                     	;# 
  1306  0216                     	;# 
  1307  0217                     	;# 
  1308  0217                     	;# 
  1309  0219                     	;# 
  1310  021A                     	;# 
  1311  021B                     	;# 
  1312  021C                     	;# 
  1313  021D                     	;# 
  1314  021D                     	;# 
  1315  021E                     	;# 
  1316  021F                     	;# 
  1317  028C                     	;# 
  1318  028D                     	;# 
  1319  028E                     	;# 
  1320  0291                     	;# 
  1321  0291                     	;# 
  1322  0292                     	;# 
  1323  0293                     	;# 
  1324  0294                     	;# 
  1325  0295                     	;# 
  1326  0295                     	;# 
  1327  0296                     	;# 
  1328  0297                     	;# 
  1329  0298                     	;# 
  1330  029F                     	;# 
  1331  030C                     	;# 
  1332  030D                     	;# 
  1333  030E                     	;# 
  1334  0311                     	;# 
  1335  0311                     	;# 
  1336  0312                     	;# 
  1337  0313                     	;# 
  1338  0314                     	;# 
  1339  0315                     	;# 
  1340  0315                     	;# 
  1341  0316                     	;# 
  1342  0317                     	;# 
  1343  0318                     	;# 
  1344  038C                     	;# 
  1345  038D                     	;# 
  1346  038E                     	;# 
  1347  0391                     	;# 
  1348  0392                     	;# 
  1349  0393                     	;# 
  1350  0394                     	;# 
  1351  0395                     	;# 
  1352  0396                     	;# 
  1353  0397                     	;# 
  1354  0398                     	;# 
  1355  0399                     	;# 
  1356  039A                     	;# 
  1357  039C                     	;# 
  1358  039D                     	;# 
  1359  039E                     	;# 
  1360  039F                     	;# 
  1361  0411                     	;# 
  1362  0411                     	;# 
  1363  0412                     	;# 
  1364  0413                     	;# 
  1365  0414                     	;# 
  1366  0415                     	;# 
  1367  0416                     	;# 
  1368  0417                     	;# 
  1369  0418                     	;# 
  1370  0418                     	;# 
  1371  0419                     	;# 
  1372  041A                     	;# 
  1373  041B                     	;# 
  1374  041C                     	;# 
  1375  041D                     	;# 
  1376  041E                     	;# 
  1377  041F                     	;# 
  1378  0498                     	;# 
  1379  0498                     	;# 
  1380  0499                     	;# 
  1381  049A                     	;# 
  1382  049B                     	;# 
  1383  049B                     	;# 
  1384  049C                     	;# 
  1385  049D                     	;# 
  1386  049E                     	;# 
  1387  049F                     	;# 
  1388  0617                     	;# 
  1389  0618                     	;# 
  1390  0619                     	;# 
  1391  0619                     	;# 
  1392  061A                     	;# 
  1393  061B                     	;# 
  1394  061C                     	;# 
  1395  061C                     	;# 
  1396  061F                     	;# 
  1397  0691                     	;# 
  1398  0692                     	;# 
  1399  0693                     	;# 
  1400  0694                     	;# 
  1401  0695                     	;# 
  1402  0696                     	;# 
  1403  0697                     	;# 
  1404  0698                     	;# 
  1405  0699                     	;# 
  1406  0711                     	;# 
  1407  0712                     	;# 
  1408  0713                     	;# 
  1409  0714                     	;# 
  1410  0715                     	;# 
  1411  0716                     	;# 
  1412  0717                     	;# 
  1413  0718                     	;# 
  1414  0719                     	;# 
  1415  0891                     	;# 
  1416  0891                     	;# 
  1417  0891                     	;# 
  1418  0891                     	;# 
  1419  0891                     	;# 
  1420  0891                     	;# 
  1421  0892                     	;# 
  1422  0892                     	;# 
  1423  0892                     	;# 
  1424  0893                     	;# 
  1425  0893                     	;# 
  1426  0893                     	;# 
  1427  0893                     	;# 
  1428  0893                     	;# 
  1429  0893                     	;# 
  1430  0894                     	;# 
  1431  0894                     	;# 
  1432  0894                     	;# 
  1433  0895                     	;# 
  1434  0895                     	;# 
  1435  0895                     	;# 
  1436  0896                     	;# 
  1437  0896                     	;# 
  1438  0896                     	;# 
  1439  089B                     	;# 
  1440  0911                     	;# 
  1441  0912                     	;# 
  1442  0913                     	;# 
  1443  0914                     	;# 
  1444  0915                     	;# 
  1445  0916                     	;# 
  1446  0918                     	;# 
  1447  0919                     	;# 
  1448  091A                     	;# 
  1449  091B                     	;# 
  1450  091C                     	;# 
  1451  091D                     	;# 
  1452  091E                     	;# 
  1453  091F                     	;# 
  1454  0E0F                     	;# 
  1455  0E10                     	;# 
  1456  0E11                     	;# 
  1457  0E12                     	;# 
  1458  0E13                     	;# 
  1459  0E14                     	;# 
  1460  0E15                     	;# 
  1461  0E16                     	;# 
  1462  0E17                     	;# 
  1463  0E18                     	;# 
  1464  0E19                     	;# 
  1465  0E1A                     	;# 
  1466  0E1B                     	;# 
  1467  0E1C                     	;# 
  1468  0E1D                     	;# 
  1469  0E1E                     	;# 
  1470  0E1F                     	;# 
  1471  0E20                     	;# 
  1472  0E21                     	;# 
  1473  0E22                     	;# 
  1474  0E24                     	;# 
  1475  0E25                     	;# 
  1476  0E28                     	;# 
  1477  0E29                     	;# 
  1478  0E2A                     	;# 
  1479  0E2B                     	;# 
  1480  0E2C                     	;# 
  1481  0E2D                     	;# 
  1482  0E2E                     	;# 
  1483  0E2F                     	;# 
  1484  0E90                     	;# 
  1485  0E91                     	;# 
  1486  0E92                     	;# 
  1487  0E94                     	;# 
  1488  0E95                     	;# 
  1489  0E9C                     	;# 
  1490  0E9D                     	;# 
  1491  0E9E                     	;# 
  1492  0E9F                     	;# 
  1493  0EA0                     	;# 
  1494  0EA1                     	;# 
  1495  0EA2                     	;# 
  1496  0EA3                     	;# 
  1497  0EA4                     	;# 
  1498  0EA5                     	;# 
  1499  0EA6                     	;# 
  1500  0EA7                     	;# 
  1501  0F0F                     	;# 
  1502  0F10                     	;# 
  1503  0F11                     	;# 
  1504  0F12                     	;# 
  1505  0F13                     	;# 
  1506  0F14                     	;# 
  1507  0F15                     	;# 
  1508  0F16                     	;# 
  1509  0F17                     	;# 
  1510  0F18                     	;# 
  1511  0F19                     	;# 
  1512  0F1A                     	;# 
  1513  0F1B                     	;# 
  1514  0F1C                     	;# 
  1515  0F1D                     	;# 
  1516  0F1E                     	;# 
  1517  0F1F                     	;# 
  1518  0F20                     	;# 
  1519  0F21                     	;# 
  1520  0F22                     	;# 
  1521  0F23                     	;# 
  1522  0F24                     	;# 
  1523  0F25                     	;# 
  1524  0F26                     	;# 
  1525  0F27                     	;# 
  1526  0F28                     	;# 
  1527  0F29                     	;# 
  1528  0F2A                     	;# 
  1529  0F2B                     	;# 
  1530  0F2C                     	;# 
  1531  0F2D                     	;# 
  1532  0F2E                     	;# 
  1533  0F2F                     	;# 
  1534  0F30                     	;# 
  1535  0F31                     	;# 
  1536  0F32                     	;# 
  1537  0F33                     	;# 
  1538  0F34                     	;# 
  1539  0F35                     	;# 
  1540  0F36                     	;# 
  1541  0F37                     	;# 
  1542  0FE4                     	;# 
  1543  0FE5                     	;# 
  1544  0FE6                     	;# 
  1545  0FE7                     	;# 
  1546  0FE8                     	;# 
  1547  0FE9                     	;# 
  1548  0FEA                     	;# 
  1549  0FEB                     	;# 
  1550  0FED                     	;# 
  1551  0FEE                     	;# 
  1552  0FEF                     	;# 
  1553  0000                     	;# 
  1554  0001                     	;# 
  1555  0002                     	;# 
  1556  0003                     	;# 
  1557  0004                     	;# 
  1558  0005                     	;# 
  1559  0006                     	;# 
  1560  0007                     	;# 
  1561  0008                     	;# 
  1562  0009                     	;# 
  1563  000A                     	;# 
  1564  000B                     	;# 
  1565  000C                     	;# 
  1566  000D                     	;# 
  1567  000E                     	;# 
  1568  0010                     	;# 
  1569  0011                     	;# 
  1570  0012                     	;# 
  1571  0013                     	;# 
  1572  0014                     	;# 
  1573  0015                     	;# 
  1574  0015                     	;# 
  1575  0016                     	;# 
  1576  0016                     	;# 
  1577  0017                     	;# 
  1578  0018                     	;# 
  1579  0019                     	;# 
  1580  0019                     	;# 
  1581  001A                     	;# 
  1582  001B                     	;# 
  1583  001C                     	;# 
  1584  001D                     	;# 
  1585  001E                     	;# 
  1586  001F                     	;# 
  1587  008C                     	;# 
  1588  008D                     	;# 
  1589  008E                     	;# 
  1590  0090                     	;# 
  1591  0091                     	;# 
  1592  0092                     	;# 
  1593  0093                     	;# 
  1594  0094                     	;# 
  1595  0097                     	;# 
  1596  009B                     	;# 
  1597  009B                     	;# 
  1598  009C                     	;# 
  1599  009D                     	;# 
  1600  009E                     	;# 
  1601  009F                     	;# 
  1602  010C                     	;# 
  1603  010D                     	;# 
  1604  010E                     	;# 
  1605  0111                     	;# 
  1606  0112                     	;# 
  1607  0113                     	;# 
  1608  0114                     	;# 
  1609  0115                     	;# 
  1610  0116                     	;# 
  1611  0117                     	;# 
  1612  0118                     	;# 
  1613  0119                     	;# 
  1614  018C                     	;# 
  1615  018D                     	;# 
  1616  018E                     	;# 
  1617  0197                     	;# 
  1618  0199                     	;# 
  1619  0199                     	;# 
  1620  0199                     	;# 
  1621  019A                     	;# 
  1622  019A                     	;# 
  1623  019A                     	;# 
  1624  019B                     	;# 
  1625  019B                     	;# 
  1626  019B                     	;# 
  1627  019B                     	;# 
  1628  019B                     	;# 
  1629  019C                     	;# 
  1630  019C                     	;# 
  1631  019C                     	;# 
  1632  019D                     	;# 
  1633  019D                     	;# 
  1634  019D                     	;# 
  1635  019E                     	;# 
  1636  019E                     	;# 
  1637  019E                     	;# 
  1638  019F                     	;# 
  1639  019F                     	;# 
  1640  019F                     	;# 
  1641  019F                     	;# 
  1642  019F                     	;# 
  1643  020C                     	;# 
  1644  020D                     	;# 
  1645  020E                     	;# 
  1646  0211                     	;# 
  1647  0211                     	;# 
  1648  0212                     	;# 
  1649  0212                     	;# 
  1650  0213                     	;# 
  1651  0213                     	;# 
  1652  0214                     	;# 
  1653  0214                     	;# 
  1654  0215                     	;# 
  1655  0215                     	;# 
  1656  0215                     	;# 
  1657  0215                     	;# 
  1658  0216                     	;# 
  1659  0216                     	;# 
  1660  0217                     	;# 
  1661  0217                     	;# 
  1662  0219                     	;# 
  1663  021A                     	;# 
  1664  021B                     	;# 
  1665  021C                     	;# 
  1666  021D                     	;# 
  1667  021D                     	;# 
  1668  021E                     	;# 
  1669  021F                     	;# 
  1670  028C                     	;# 
  1671  028D                     	;# 
  1672  028E                     	;# 
  1673  0291                     	;# 
  1674  0291                     	;# 
  1675  0292                     	;# 
  1676  0293                     	;# 
  1677  0294                     	;# 
  1678  0295                     	;# 
  1679  0295                     	;# 
  1680  0296                     	;# 
  1681  0297                     	;# 
  1682  0298                     	;# 
  1683  029F                     	;# 
  1684  030C                     	;# 
  1685  030D                     	;# 
  1686  030E                     	;# 
  1687  0311                     	;# 
  1688  0311                     	;# 
  1689  0312                     	;# 
  1690  0313                     	;# 
  1691  0314                     	;# 
  1692  0315                     	;# 
  1693  0315                     	;# 
  1694  0316                     	;# 
  1695  0317                     	;# 
  1696  0318                     	;# 
  1697  038C                     	;# 
  1698  038D                     	;# 
  1699  038E                     	;# 
  1700  0391                     	;# 
  1701  0392                     	;# 
  1702  0393                     	;# 
  1703  0394                     	;# 
  1704  0395                     	;# 
  1705  0396                     	;# 
  1706  0397                     	;# 
  1707  0398                     	;# 
  1708  0399                     	;# 
  1709  039A                     	;# 
  1710  039C                     	;# 
  1711  039D                     	;# 
  1712  039E                     	;# 
  1713  039F                     	;# 
  1714  0411                     	;# 
  1715  0411                     	;# 
  1716  0412                     	;# 
  1717  0413                     	;# 
  1718  0414                     	;# 
  1719  0415                     	;# 
  1720  0416                     	;# 
  1721  0417                     	;# 
  1722  0418                     	;# 
  1723  0418                     	;# 
  1724  0419                     	;# 
  1725  041A                     	;# 
  1726  041B                     	;# 
  1727  041C                     	;# 
  1728  041D                     	;# 
  1729  041E                     	;# 
  1730  041F                     	;# 
  1731  0498                     	;# 
  1732  0498                     	;# 
  1733  0499                     	;# 
  1734  049A                     	;# 
  1735  049B                     	;# 
  1736  049B                     	;# 
  1737  049C                     	;# 
  1738  049D                     	;# 
  1739  049E                     	;# 
  1740  049F                     	;# 
  1741  0617                     	;# 
  1742  0618                     	;# 
  1743  0619                     	;# 
  1744  0619                     	;# 
  1745  061A                     	;# 
  1746  061B                     	;# 
  1747  061C                     	;# 
  1748  061C                     	;# 
  1749  061F                     	;# 
  1750  0691                     	;# 
  1751  0692                     	;# 
  1752  0693                     	;# 
  1753  0694                     	;# 
  1754  0695                     	;# 
  1755  0696                     	;# 
  1756  0697                     	;# 
  1757  0698                     	;# 
  1758  0699                     	;# 
  1759  0711                     	;# 
  1760  0712                     	;# 
  1761  0713                     	;# 
  1762  0714                     	;# 
  1763  0715                     	;# 
  1764  0716                     	;# 
  1765  0717                     	;# 
  1766  0718                     	;# 
  1767  0719                     	;# 
  1768  0891                     	;# 
  1769  0891                     	;# 
  1770  0891                     	;# 
  1771  0891                     	;# 
  1772  0891                     	;# 
  1773  0891                     	;# 
  1774  0892                     	;# 
  1775  0892                     	;# 
  1776  0892                     	;# 
  1777  0893                     	;# 
  1778  0893                     	;# 
  1779  0893                     	;# 
  1780  0893                     	;# 
  1781  0893                     	;# 
  1782  0893                     	;# 
  1783  0894                     	;# 
  1784  0894                     	;# 
  1785  0894                     	;# 
  1786  0895                     	;# 
  1787  0895                     	;# 
  1788  0895                     	;# 
  1789  0896                     	;# 
  1790  0896                     	;# 
  1791  0896                     	;# 
  1792  089B                     	;# 
  1793  0911                     	;# 
  1794  0912                     	;# 
  1795  0913                     	;# 
  1796  0914                     	;# 
  1797  0915                     	;# 
  1798  0916                     	;# 
  1799  0918                     	;# 
  1800  0919                     	;# 
  1801  091A                     	;# 
  1802  091B                     	;# 
  1803  091C                     	;# 
  1804  091D                     	;# 
  1805  091E                     	;# 
  1806  091F                     	;# 
  1807  0E0F                     	;# 
  1808  0E10                     	;# 
  1809  0E11                     	;# 
  1810  0E12                     	;# 
  1811  0E13                     	;# 
  1812  0E14                     	;# 
  1813  0E15                     	;# 
  1814  0E16                     	;# 
  1815  0E17                     	;# 
  1816  0E18                     	;# 
  1817  0E19                     	;# 
  1818  0E1A                     	;# 
  1819  0E1B                     	;# 
  1820  0E1C                     	;# 
  1821  0E1D                     	;# 
  1822  0E1E                     	;# 
  1823  0E1F                     	;# 
  1824  0E20                     	;# 
  1825  0E21                     	;# 
  1826  0E22                     	;# 
  1827  0E24                     	;# 
  1828  0E25                     	;# 
  1829  0E28                     	;# 
  1830  0E29                     	;# 
  1831  0E2A                     	;# 
  1832  0E2B                     	;# 
  1833  0E2C                     	;# 
  1834  0E2D                     	;# 
  1835  0E2E                     	;# 
  1836  0E2F                     	;# 
  1837  0E90                     	;# 
  1838  0E91                     	;# 
  1839  0E92                     	;# 
  1840  0E94                     	;# 
  1841  0E95                     	;# 
  1842  0E9C                     	;# 
  1843  0E9D                     	;# 
  1844  0E9E                     	;# 
  1845  0E9F                     	;# 
  1846  0EA0                     	;# 
  1847  0EA1                     	;# 
  1848  0EA2                     	;# 
  1849  0EA3                     	;# 
  1850  0EA4                     	;# 
  1851  0EA5                     	;# 
  1852  0EA6                     	;# 
  1853  0EA7                     	;# 
  1854  0F0F                     	;# 
  1855  0F10                     	;# 
  1856  0F11                     	;# 
  1857  0F12                     	;# 
  1858  0F13                     	;# 
  1859  0F14                     	;# 
  1860  0F15                     	;# 
  1861  0F16                     	;# 
  1862  0F17                     	;# 
  1863  0F18                     	;# 
  1864  0F19                     	;# 
  1865  0F1A                     	;# 
  1866  0F1B                     	;# 
  1867  0F1C                     	;# 
  1868  0F1D                     	;# 
  1869  0F1E                     	;# 
  1870  0F1F                     	;# 
  1871  0F20                     	;# 
  1872  0F21                     	;# 
  1873  0F22                     	;# 
  1874  0F23                     	;# 
  1875  0F24                     	;# 
  1876  0F25                     	;# 
  1877  0F26                     	;# 
  1878  0F27                     	;# 
  1879  0F28                     	;# 
  1880  0F29                     	;# 
  1881  0F2A                     	;# 
  1882  0F2B                     	;# 
  1883  0F2C                     	;# 
  1884  0F2D                     	;# 
  1885  0F2E                     	;# 
  1886  0F2F                     	;# 
  1887  0F30                     	;# 
  1888  0F31                     	;# 
  1889  0F32                     	;# 
  1890  0F33                     	;# 
  1891  0F34                     	;# 
  1892  0F35                     	;# 
  1893  0F36                     	;# 
  1894  0F37                     	;# 
  1895  0FE4                     	;# 
  1896  0FE5                     	;# 
  1897  0FE6                     	;# 
  1898  0FE7                     	;# 
  1899  0FE8                     	;# 
  1900  0FE9                     	;# 
  1901  0FEA                     	;# 
  1902  0FEB                     	;# 
  1903  0FED                     	;# 
  1904  0FEE                     	;# 
  1905  0FEF                     	;# 
  1906  0000                     	;# 
  1907  0001                     	;# 
  1908  0002                     	;# 
  1909  0003                     	;# 
  1910  0004                     	;# 
  1911  0005                     	;# 
  1912  0006                     	;# 
  1913  0007                     	;# 
  1914  0008                     	;# 
  1915  0009                     	;# 
  1916  000A                     	;# 
  1917  000B                     	;# 
  1918  000C                     	;# 
  1919  000D                     	;# 
  1920  000E                     	;# 
  1921  0010                     	;# 
  1922  0011                     	;# 
  1923  0012                     	;# 
  1924  0013                     	;# 
  1925  0014                     	;# 
  1926  0015                     	;# 
  1927  0015                     	;# 
  1928  0016                     	;# 
  1929  0016                     	;# 
  1930  0017                     	;# 
  1931  0018                     	;# 
  1932  0019                     	;# 
  1933  0019                     	;# 
  1934  001A                     	;# 
  1935  001B                     	;# 
  1936  001C                     	;# 
  1937  001D                     	;# 
  1938  001E                     	;# 
  1939  001F                     	;# 
  1940  008C                     	;# 
  1941  008D                     	;# 
  1942  008E                     	;# 
  1943  0090                     	;# 
  1944  0091                     	;# 
  1945  0092                     	;# 
  1946  0093                     	;# 
  1947  0094                     	;# 
  1948  0097                     	;# 
  1949  009B                     	;# 
  1950  009B                     	;# 
  1951  009C                     	;# 
  1952  009D                     	;# 
  1953  009E                     	;# 
  1954  009F                     	;# 
  1955  010C                     	;# 
  1956  010D                     	;# 
  1957  010E                     	;# 
  1958  0111                     	;# 
  1959  0112                     	;# 
  1960  0113                     	;# 
  1961  0114                     	;# 
  1962  0115                     	;# 
  1963  0116                     	;# 
  1964  0117                     	;# 
  1965  0118                     	;# 
  1966  0119                     	;# 
  1967  018C                     	;# 
  1968  018D                     	;# 
  1969  018E                     	;# 
  1970  0197                     	;# 
  1971  0199                     	;# 
  1972  0199                     	;# 
  1973  0199                     	;# 
  1974  019A                     	;# 
  1975  019A                     	;# 
  1976  019A                     	;# 
  1977  019B                     	;# 
  1978  019B                     	;# 
  1979  019B                     	;# 
  1980  019B                     	;# 
  1981  019B                     	;# 
  1982  019C                     	;# 
  1983  019C                     	;# 
  1984  019C                     	;# 
  1985  019D                     	;# 
  1986  019D                     	;# 
  1987  019D                     	;# 
  1988  019E                     	;# 
  1989  019E                     	;# 
  1990  019E                     	;# 
  1991  019F                     	;# 
  1992  019F                     	;# 
  1993  019F                     	;# 
  1994  019F                     	;# 
  1995  019F                     	;# 
  1996  020C                     	;# 
  1997  020D                     	;# 
  1998  020E                     	;# 
  1999  0211                     	;# 
  2000  0211                     	;# 
  2001  0212                     	;# 
  2002  0212                     	;# 
  2003  0213                     	;# 
  2004  0213                     	;# 
  2005  0214                     	;# 
  2006  0214                     	;# 
  2007  0215                     	;# 
  2008  0215                     	;# 
  2009  0215                     	;# 
  2010  0215                     	;# 
  2011  0216                     	;# 
  2012  0216                     	;# 
  2013  0217                     	;# 
  2014  0217                     	;# 
  2015  0219                     	;# 
  2016  021A                     	;# 
  2017  021B                     	;# 
  2018  021C                     	;# 
  2019  021D                     	;# 
  2020  021D                     	;# 
  2021  021E                     	;# 
  2022  021F                     	;# 
  2023  028C                     	;# 
  2024  028D                     	;# 
  2025  028E                     	;# 
  2026  0291                     	;# 
  2027  0291                     	;# 
  2028  0292                     	;# 
  2029  0293                     	;# 
  2030  0294                     	;# 
  2031  0295                     	;# 
  2032  0295                     	;# 
  2033  0296                     	;# 
  2034  0297                     	;# 
  2035  0298                     	;# 
  2036  029F                     	;# 
  2037  030C                     	;# 
  2038  030D                     	;# 
  2039  030E                     	;# 
  2040  0311                     	;# 
  2041  0311                     	;# 
  2042  0312                     	;# 
  2043  0313                     	;# 
  2044  0314                     	;# 
  2045  0315                     	;# 
  2046  0315                     	;# 
  2047  0316                     	;# 
  2048  0317                     	;# 
  2049  0318                     	;# 
  2050  038C                     	;# 
  2051  038D                     	;# 
  2052  038E                     	;# 
  2053  0391                     	;# 
  2054  0392                     	;# 
  2055  0393                     	;# 
  2056  0394                     	;# 
  2057  0395                     	;# 
  2058  0396                     	;# 
  2059  0397                     	;# 
  2060  0398                     	;# 
  2061  0399                     	;# 
  2062  039A                     	;# 
  2063  039C                     	;# 
  2064  039D                     	;# 
  2065  039E                     	;# 
  2066  039F                     	;# 
  2067  0411                     	;# 
  2068  0411                     	;# 
  2069  0412                     	;# 
  2070  0413                     	;# 
  2071  0414                     	;# 
  2072  0415                     	;# 
  2073  0416                     	;# 
  2074  0417                     	;# 
  2075  0418                     	;# 
  2076  0418                     	;# 
  2077  0419                     	;# 
  2078  041A                     	;# 
  2079  041B                     	;# 
  2080  041C                     	;# 
  2081  041D                     	;# 
  2082  041E                     	;# 
  2083  041F                     	;# 
  2084  0498                     	;# 
  2085  0498                     	;# 
  2086  0499                     	;# 
  2087  049A                     	;# 
  2088  049B                     	;# 
  2089  049B                     	;# 
  2090  049C                     	;# 
  2091  049D                     	;# 
  2092  049E                     	;# 
  2093  049F                     	;# 
  2094  0617                     	;# 
  2095  0618                     	;# 
  2096  0619                     	;# 
  2097  0619                     	;# 
  2098  061A                     	;# 
  2099  061B                     	;# 
  2100  061C                     	;# 
  2101  061C                     	;# 
  2102  061F                     	;# 
  2103  0691                     	;# 
  2104  0692                     	;# 
  2105  0693                     	;# 
  2106  0694                     	;# 
  2107  0695                     	;# 
  2108  0696                     	;# 
  2109  0697                     	;# 
  2110  0698                     	;# 
  2111  0699                     	;# 
  2112  0711                     	;# 
  2113  0712                     	;# 
  2114  0713                     	;# 
  2115  0714                     	;# 
  2116  0715                     	;# 
  2117  0716                     	;# 
  2118  0717                     	;# 
  2119  0718                     	;# 
  2120  0719                     	;# 
  2121  0891                     	;# 
  2122  0891                     	;# 
  2123  0891                     	;# 
  2124  0891                     	;# 
  2125  0891                     	;# 
  2126  0891                     	;# 
  2127  0892                     	;# 
  2128  0892                     	;# 
  2129  0892                     	;# 
  2130  0893                     	;# 
  2131  0893                     	;# 
  2132  0893                     	;# 
  2133  0893                     	;# 
  2134  0893                     	;# 
  2135  0893                     	;# 
  2136  0894                     	;# 
  2137  0894                     	;# 
  2138  0894                     	;# 
  2139  0895                     	;# 
  2140  0895                     	;# 
  2141  0895                     	;# 
  2142  0896                     	;# 
  2143  0896                     	;# 
  2144  0896                     	;# 
  2145  089B                     	;# 
  2146  0911                     	;# 
  2147  0912                     	;# 
  2148  0913                     	;# 
  2149  0914                     	;# 
  2150  0915                     	;# 
  2151  0916                     	;# 
  2152  0918                     	;# 
  2153  0919                     	;# 
  2154  091A                     	;# 
  2155  091B                     	;# 
  2156  091C                     	;# 
  2157  091D                     	;# 
  2158  091E                     	;# 
  2159  091F                     	;# 
  2160  0E0F                     	;# 
  2161  0E10                     	;# 
  2162  0E11                     	;# 
  2163  0E12                     	;# 
  2164  0E13                     	;# 
  2165  0E14                     	;# 
  2166  0E15                     	;# 
  2167  0E16                     	;# 
  2168  0E17                     	;# 
  2169  0E18                     	;# 
  2170  0E19                     	;# 
  2171  0E1A                     	;# 
  2172  0E1B                     	;# 
  2173  0E1C                     	;# 
  2174  0E1D                     	;# 
  2175  0E1E                     	;# 
  2176  0E1F                     	;# 
  2177  0E20                     	;# 
  2178  0E21                     	;# 
  2179  0E22                     	;# 
  2180  0E24                     	;# 
  2181  0E25                     	;# 
  2182  0E28                     	;# 
  2183  0E29                     	;# 
  2184  0E2A                     	;# 
  2185  0E2B                     	;# 
  2186  0E2C                     	;# 
  2187  0E2D                     	;# 
  2188  0E2E                     	;# 
  2189  0E2F                     	;# 
  2190  0E90                     	;# 
  2191  0E91                     	;# 
  2192  0E92                     	;# 
  2193  0E94                     	;# 
  2194  0E95                     	;# 
  2195  0E9C                     	;# 
  2196  0E9D                     	;# 
  2197  0E9E                     	;# 
  2198  0E9F                     	;# 
  2199  0EA0                     	;# 
  2200  0EA1                     	;# 
  2201  0EA2                     	;# 
  2202  0EA3                     	;# 
  2203  0EA4                     	;# 
  2204  0EA5                     	;# 
  2205  0EA6                     	;# 
  2206  0EA7                     	;# 
  2207  0F0F                     	;# 
  2208  0F10                     	;# 
  2209  0F11                     	;# 
  2210  0F12                     	;# 
  2211  0F13                     	;# 
  2212  0F14                     	;# 
  2213  0F15                     	;# 
  2214  0F16                     	;# 
  2215  0F17                     	;# 
  2216  0F18                     	;# 
  2217  0F19                     	;# 
  2218  0F1A                     	;# 
  2219  0F1B                     	;# 
  2220  0F1C                     	;# 
  2221  0F1D                     	;# 
  2222  0F1E                     	;# 
  2223  0F1F                     	;# 
  2224  0F20                     	;# 
  2225  0F21                     	;# 
  2226  0F22                     	;# 
  2227  0F23                     	;# 
  2228  0F24                     	;# 
  2229  0F25                     	;# 
  2230  0F26                     	;# 
  2231  0F27                     	;# 
  2232  0F28                     	;# 
  2233  0F29                     	;# 
  2234  0F2A                     	;# 
  2235  0F2B                     	;# 
  2236  0F2C                     	;# 
  2237  0F2D                     	;# 
  2238  0F2E                     	;# 
  2239  0F2F                     	;# 
  2240  0F30                     	;# 
  2241  0F31                     	;# 
  2242  0F32                     	;# 
  2243  0F33                     	;# 
  2244  0F34                     	;# 
  2245  0F35                     	;# 
  2246  0F36                     	;# 
  2247  0F37                     	;# 
  2248  0FE4                     	;# 
  2249  0FE5                     	;# 
  2250  0FE6                     	;# 
  2251  0FE7                     	;# 
  2252  0FE8                     	;# 
  2253  0FE9                     	;# 
  2254  0FEA                     	;# 
  2255  0FEB                     	;# 
  2256  0FED                     	;# 
  2257  0FEE                     	;# 
  2258  0FEF                     	;# 
  2259  0000                     	;# 
  2260  0001                     	;# 
  2261  0002                     	;# 
  2262  0003                     	;# 
  2263  0004                     	;# 
  2264  0005                     	;# 
  2265  0006                     	;# 
  2266  0007                     	;# 
  2267  0008                     	;# 
  2268  0009                     	;# 
  2269  000A                     	;# 
  2270  000B                     	;# 
  2271  000C                     	;# 
  2272  000D                     	;# 
  2273  000E                     	;# 
  2274  0010                     	;# 
  2275  0011                     	;# 
  2276  0012                     	;# 
  2277  0013                     	;# 
  2278  0014                     	;# 
  2279  0015                     	;# 
  2280  0015                     	;# 
  2281  0016                     	;# 
  2282  0016                     	;# 
  2283  0017                     	;# 
  2284  0018                     	;# 
  2285  0019                     	;# 
  2286  0019                     	;# 
  2287  001A                     	;# 
  2288  001B                     	;# 
  2289  001C                     	;# 
  2290  001D                     	;# 
  2291  001E                     	;# 
  2292  001F                     	;# 
  2293  008C                     	;# 
  2294  008D                     	;# 
  2295  008E                     	;# 
  2296  0090                     	;# 
  2297  0091                     	;# 
  2298  0092                     	;# 
  2299  0093                     	;# 
  2300  0094                     	;# 
  2301  0097                     	;# 
  2302  009B                     	;# 
  2303  009B                     	;# 
  2304  009C                     	;# 
  2305  009D                     	;# 
  2306  009E                     	;# 
  2307  009F                     	;# 
  2308  010C                     	;# 
  2309  010D                     	;# 
  2310  010E                     	;# 
  2311  0111                     	;# 
  2312  0112                     	;# 
  2313  0113                     	;# 
  2314  0114                     	;# 
  2315  0115                     	;# 
  2316  0116                     	;# 
  2317  0117                     	;# 
  2318  0118                     	;# 
  2319  0119                     	;# 
  2320  018C                     	;# 
  2321  018D                     	;# 
  2322  018E                     	;# 
  2323  0197                     	;# 
  2324  0199                     	;# 
  2325  0199                     	;# 
  2326  0199                     	;# 
  2327  019A                     	;# 
  2328  019A                     	;# 
  2329  019A                     	;# 
  2330  019B                     	;# 
  2331  019B                     	;# 
  2332  019B                     	;# 
  2333  019B                     	;# 
  2334  019B                     	;# 
  2335  019C                     	;# 
  2336  019C                     	;# 
  2337  019C                     	;# 
  2338  019D                     	;# 
  2339  019D                     	;# 
  2340  019D                     	;# 
  2341  019E                     	;# 
  2342  019E                     	;# 
  2343  019E                     	;# 
  2344  019F                     	;# 
  2345  019F                     	;# 
  2346  019F                     	;# 
  2347  019F                     	;# 
  2348  019F                     	;# 
  2349  020C                     	;# 
  2350  020D                     	;# 
  2351  020E                     	;# 
  2352  0211                     	;# 
  2353  0211                     	;# 
  2354  0212                     	;# 
  2355  0212                     	;# 
  2356  0213                     	;# 
  2357  0213                     	;# 
  2358  0214                     	;# 
  2359  0214                     	;# 
  2360  0215                     	;# 
  2361  0215                     	;# 
  2362  0215                     	;# 
  2363  0215                     	;# 
  2364  0216                     	;# 
  2365  0216                     	;# 
  2366  0217                     	;# 
  2367  0217                     	;# 
  2368  0219                     	;# 
  2369  021A                     	;# 
  2370  021B                     	;# 
  2371  021C                     	;# 
  2372  021D                     	;# 
  2373  021D                     	;# 
  2374  021E                     	;# 
  2375  021F                     	;# 
  2376  028C                     	;# 
  2377  028D                     	;# 
  2378  028E                     	;# 
  2379  0291                     	;# 
  2380  0291                     	;# 
  2381  0292                     	;# 
  2382  0293                     	;# 
  2383  0294                     	;# 
  2384  0295                     	;# 
  2385  0295                     	;# 
  2386  0296                     	;# 
  2387  0297                     	;# 
  2388  0298                     	;# 
  2389  029F                     	;# 
  2390  030C                     	;# 
  2391  030D                     	;# 
  2392  030E                     	;# 
  2393  0311                     	;# 
  2394  0311                     	;# 
  2395  0312                     	;# 
  2396  0313                     	;# 
  2397  0314                     	;# 
  2398  0315                     	;# 
  2399  0315                     	;# 
  2400  0316                     	;# 
  2401  0317                     	;# 
  2402  0318                     	;# 
  2403  038C                     	;# 
  2404  038D                     	;# 
  2405  038E                     	;# 
  2406  0391                     	;# 
  2407  0392                     	;# 
  2408  0393                     	;# 
  2409  0394                     	;# 
  2410  0395                     	;# 
  2411  0396                     	;# 
  2412  0397                     	;# 
  2413  0398                     	;# 
  2414  0399                     	;# 
  2415  039A                     	;# 
  2416  039C                     	;# 
  2417  039D                     	;# 
  2418  039E                     	;# 
  2419  039F                     	;# 
  2420  0411                     	;# 
  2421  0411                     	;# 
  2422  0412                     	;# 
  2423  0413                     	;# 
  2424  0414                     	;# 
  2425  0415                     	;# 
  2426  0416                     	;# 
  2427  0417                     	;# 
  2428  0418                     	;# 
  2429  0418                     	;# 
  2430  0419                     	;# 
  2431  041A                     	;# 
  2432  041B                     	;# 
  2433  041C                     	;# 
  2434  041D                     	;# 
  2435  041E                     	;# 
  2436  041F                     	;# 
  2437  0498                     	;# 
  2438  0498                     	;# 
  2439  0499                     	;# 
  2440  049A                     	;# 
  2441  049B                     	;# 
  2442  049B                     	;# 
  2443  049C                     	;# 
  2444  049D                     	;# 
  2445  049E                     	;# 
  2446  049F                     	;# 
  2447  0617                     	;# 
  2448  0618                     	;# 
  2449  0619                     	;# 
  2450  0619                     	;# 
  2451  061A                     	;# 
  2452  061B                     	;# 
  2453  061C                     	;# 
  2454  061C                     	;# 
  2455  061F                     	;# 
  2456  0691                     	;# 
  2457  0692                     	;# 
  2458  0693                     	;# 
  2459  0694                     	;# 
  2460  0695                     	;# 
  2461  0696                     	;# 
  2462  0697                     	;# 
  2463  0698                     	;# 
  2464  0699                     	;# 
  2465  0711                     	;# 
  2466  0712                     	;# 
  2467  0713                     	;# 
  2468  0714                     	;# 
  2469  0715                     	;# 
  2470  0716                     	;# 
  2471  0717                     	;# 
  2472  0718                     	;# 
  2473  0719                     	;# 
  2474  0891                     	;# 
  2475  0891                     	;# 
  2476  0891                     	;# 
  2477  0891                     	;# 
  2478  0891                     	;# 
  2479  0891                     	;# 
  2480  0892                     	;# 
  2481  0892                     	;# 
  2482  0892                     	;# 
  2483  0893                     	;# 
  2484  0893                     	;# 
  2485  0893                     	;# 
  2486  0893                     	;# 
  2487  0893                     	;# 
  2488  0893                     	;# 
  2489  0894                     	;# 
  2490  0894                     	;# 
  2491  0894                     	;# 
  2492  0895                     	;# 
  2493  0895                     	;# 
  2494  0895                     	;# 
  2495  0896                     	;# 
  2496  0896                     	;# 
  2497  0896                     	;# 
  2498  089B                     	;# 
  2499  0911                     	;# 
  2500  0912                     	;# 
  2501  0913                     	;# 
  2502  0914                     	;# 
  2503  0915                     	;# 
  2504  0916                     	;# 
  2505  0918                     	;# 
  2506  0919                     	;# 
  2507  091A                     	;# 
  2508  091B                     	;# 
  2509  091C                     	;# 
  2510  091D                     	;# 
  2511  091E                     	;# 
  2512  091F                     	;# 
  2513  0E0F                     	;# 
  2514  0E10                     	;# 
  2515  0E11                     	;# 
  2516  0E12                     	;# 
  2517  0E13                     	;# 
  2518  0E14                     	;# 
  2519  0E15                     	;# 
  2520  0E16                     	;# 
  2521  0E17                     	;# 
  2522  0E18                     	;# 
  2523  0E19                     	;# 
  2524  0E1A                     	;# 
  2525  0E1B                     	;# 
  2526  0E1C                     	;# 
  2527  0E1D                     	;# 
  2528  0E1E                     	;# 
  2529  0E1F                     	;# 
  2530  0E20                     	;# 
  2531  0E21                     	;# 
  2532  0E22                     	;# 
  2533  0E24                     	;# 
  2534  0E25                     	;# 
  2535  0E28                     	;# 
  2536  0E29                     	;# 
  2537  0E2A                     	;# 
  2538  0E2B                     	;# 
  2539  0E2C                     	;# 
  2540  0E2D                     	;# 
  2541  0E2E                     	;# 
  2542  0E2F                     	;# 
  2543  0E90                     	;# 
  2544  0E91                     	;# 
  2545  0E92                     	;# 
  2546  0E94                     	;# 
  2547  0E95                     	;# 
  2548  0E9C                     	;# 
  2549  0E9D                     	;# 
  2550  0E9E                     	;# 
  2551  0E9F                     	;# 
  2552  0EA0                     	;# 
  2553  0EA1                     	;# 
  2554  0EA2                     	;# 
  2555  0EA3                     	;# 
  2556  0EA4                     	;# 
  2557  0EA5                     	;# 
  2558  0EA6                     	;# 
  2559  0EA7                     	;# 
  2560  0F0F                     	;# 
  2561  0F10                     	;# 
  2562  0F11                     	;# 
  2563  0F12                     	;# 
  2564  0F13                     	;# 
  2565  0F14                     	;# 
  2566  0F15                     	;# 
  2567  0F16                     	;# 
  2568  0F17                     	;# 
  2569  0F18                     	;# 
  2570  0F19                     	;# 
  2571  0F1A                     	;# 
  2572  0F1B                     	;# 
  2573  0F1C                     	;# 
  2574  0F1D                     	;# 
  2575  0F1E                     	;# 
  2576  0F1F                     	;# 
  2577  0F20                     	;# 
  2578  0F21                     	;# 
  2579  0F22                     	;# 
  2580  0F23                     	;# 
  2581  0F24                     	;# 
  2582  0F25                     	;# 
  2583  0F26                     	;# 
  2584  0F27                     	;# 
  2585  0F28                     	;# 
  2586  0F29                     	;# 
  2587  0F2A                     	;# 
  2588  0F2B                     	;# 
  2589  0F2C                     	;# 
  2590  0F2D                     	;# 
  2591  0F2E                     	;# 
  2592  0F2F                     	;# 
  2593  0F30                     	;# 
  2594  0F31                     	;# 
  2595  0F32                     	;# 
  2596  0F33                     	;# 
  2597  0F34                     	;# 
  2598  0F35                     	;# 
  2599  0F36                     	;# 
  2600  0F37                     	;# 
  2601  0FE4                     	;# 
  2602  0FE5                     	;# 
  2603  0FE6                     	;# 
  2604  0FE7                     	;# 
  2605  0FE8                     	;# 
  2606  0FE9                     	;# 
  2607  0FEA                     	;# 
  2608  0FEB                     	;# 
  2609  0FED                     	;# 
  2610  0FEE                     	;# 
  2611  0FEF                     	;# 
  2612  0000                     	;# 
  2613  0001                     	;# 
  2614  0002                     	;# 
  2615  0003                     	;# 
  2616  0004                     	;# 
  2617  0005                     	;# 
  2618  0006                     	;# 
  2619  0007                     	;# 
  2620  0008                     	;# 
  2621  0009                     	;# 
  2622  000A                     	;# 
  2623  000B                     	;# 
  2624  000C                     	;# 
  2625  000D                     	;# 
  2626  000E                     	;# 
  2627  0010                     	;# 
  2628  0011                     	;# 
  2629  0012                     	;# 
  2630  0013                     	;# 
  2631  0014                     	;# 
  2632  0015                     	;# 
  2633  0015                     	;# 
  2634  0016                     	;# 
  2635  0016                     	;# 
  2636  0017                     	;# 
  2637  0018                     	;# 
  2638  0019                     	;# 
  2639  0019                     	;# 
  2640  001A                     	;# 
  2641  001B                     	;# 
  2642  001C                     	;# 
  2643  001D                     	;# 
  2644  001E                     	;# 
  2645  001F                     	;# 
  2646  008C                     	;# 
  2647  008D                     	;# 
  2648  008E                     	;# 
  2649  0090                     	;# 
  2650  0091                     	;# 
  2651  0092                     	;# 
  2652  0093                     	;# 
  2653  0094                     	;# 
  2654  0097                     	;# 
  2655  009B                     	;# 
  2656  009B                     	;# 
  2657  009C                     	;# 
  2658  009D                     	;# 
  2659  009E                     	;# 
  2660  009F                     	;# 
  2661  010C                     	;# 
  2662  010D                     	;# 
  2663  010E                     	;# 
  2664  0111                     	;# 
  2665  0112                     	;# 
  2666  0113                     	;# 
  2667  0114                     	;# 
  2668  0115                     	;# 
  2669  0116                     	;# 
  2670  0117                     	;# 
  2671  0118                     	;# 
  2672  0119                     	;# 
  2673  018C                     	;# 
  2674  018D                     	;# 
  2675  018E                     	;# 
  2676  0197                     	;# 
  2677  0199                     	;# 
  2678  0199                     	;# 
  2679  0199                     	;# 
  2680  019A                     	;# 
  2681  019A                     	;# 
  2682  019A                     	;# 
  2683  019B                     	;# 
  2684  019B                     	;# 
  2685  019B                     	;# 
  2686  019B                     	;# 
  2687  019B                     	;# 
  2688  019C                     	;# 
  2689  019C                     	;# 
  2690  019C                     	;# 
  2691  019D                     	;# 
  2692  019D                     	;# 
  2693  019D                     	;# 
  2694  019E                     	;# 
  2695  019E                     	;# 
  2696  019E                     	;# 
  2697  019F                     	;# 
  2698  019F                     	;# 
  2699  019F                     	;# 
  2700  019F                     	;# 
  2701  019F                     	;# 
  2702  020C                     	;# 
  2703  020D                     	;# 
  2704  020E                     	;# 
  2705  0211                     	;# 
  2706  0211                     	;# 
  2707  0212                     	;# 
  2708  0212                     	;# 
  2709  0213                     	;# 
  2710  0213                     	;# 
  2711  0214                     	;# 
  2712  0214                     	;# 
  2713  0215                     	;# 
  2714  0215                     	;# 
  2715  0215                     	;# 
  2716  0215                     	;# 
  2717  0216                     	;# 
  2718  0216                     	;# 
  2719  0217                     	;# 
  2720  0217                     	;# 
  2721  0219                     	;# 
  2722  021A                     	;# 
  2723  021B                     	;# 
  2724  021C                     	;# 
  2725  021D                     	;# 
  2726  021D                     	;# 
  2727  021E                     	;# 
  2728  021F                     	;# 
  2729  028C                     	;# 
  2730  028D                     	;# 
  2731  028E                     	;# 
  2732  0291                     	;# 
  2733  0291                     	;# 
  2734  0292                     	;# 
  2735  0293                     	;# 
  2736  0294                     	;# 
  2737  0295                     	;# 
  2738  0295                     	;# 
  2739  0296                     	;# 
  2740  0297                     	;# 
  2741  0298                     	;# 
  2742  029F                     	;# 
  2743  030C                     	;# 
  2744  030D                     	;# 
  2745  030E                     	;# 
  2746  0311                     	;# 
  2747  0311                     	;# 
  2748  0312                     	;# 
  2749  0313                     	;# 
  2750  0314                     	;# 
  2751  0315                     	;# 
  2752  0315                     	;# 
  2753  0316                     	;# 
  2754  0317                     	;# 
  2755  0318                     	;# 
  2756  038C                     	;# 
  2757  038D                     	;# 
  2758  038E                     	;# 
  2759  0391                     	;# 
  2760  0392                     	;# 
  2761  0393                     	;# 
  2762  0394                     	;# 
  2763  0395                     	;# 
  2764  0396                     	;# 
  2765  0397                     	;# 
  2766  0398                     	;# 
  2767  0399                     	;# 
  2768  039A                     	;# 
  2769  039C                     	;# 
  2770  039D                     	;# 
  2771  039E                     	;# 
  2772  039F                     	;# 
  2773  0411                     	;# 
  2774  0411                     	;# 
  2775  0412                     	;# 
  2776  0413                     	;# 
  2777  0414                     	;# 
  2778  0415                     	;# 
  2779  0416                     	;# 
  2780  0417                     	;# 
  2781  0418                     	;# 
  2782  0418                     	;# 
  2783  0419                     	;# 
  2784  041A                     	;# 
  2785  041B                     	;# 
  2786  041C                     	;# 
  2787  041D                     	;# 
  2788  041E                     	;# 
  2789  041F                     	;# 
  2790  0498                     	;# 
  2791  0498                     	;# 
  2792  0499                     	;# 
  2793  049A                     	;# 
  2794  049B                     	;# 
  2795  049B                     	;# 
  2796  049C                     	;# 
  2797  049D                     	;# 
  2798  049E                     	;# 
  2799  049F                     	;# 
  2800  0617                     	;# 
  2801  0618                     	;# 
  2802  0619                     	;# 
  2803  0619                     	;# 
  2804  061A                     	;# 
  2805  061B                     	;# 
  2806  061C                     	;# 
  2807  061C                     	;# 
  2808  061F                     	;# 
  2809  0691                     	;# 
  2810  0692                     	;# 
  2811  0693                     	;# 
  2812  0694                     	;# 
  2813  0695                     	;# 
  2814  0696                     	;# 
  2815  0697                     	;# 
  2816  0698                     	;# 
  2817  0699                     	;# 
  2818  0711                     	;# 
  2819  0712                     	;# 
  2820  0713                     	;# 
  2821  0714                     	;# 
  2822  0715                     	;# 
  2823  0716                     	;# 
  2824  0717                     	;# 
  2825  0718                     	;# 
  2826  0719                     	;# 
  2827  0891                     	;# 
  2828  0891                     	;# 
  2829  0891                     	;# 
  2830  0891                     	;# 
  2831  0891                     	;# 
  2832  0891                     	;# 
  2833  0892                     	;# 
  2834  0892                     	;# 
  2835  0892                     	;# 
  2836  0893                     	;# 
  2837  0893                     	;# 
  2838  0893                     	;# 
  2839  0893                     	;# 
  2840  0893                     	;# 
  2841  0893                     	;# 
  2842  0894                     	;# 
  2843  0894                     	;# 
  2844  0894                     	;# 
  2845  0895                     	;# 
  2846  0895                     	;# 
  2847  0895                     	;# 
  2848  0896                     	;# 
  2849  0896                     	;# 
  2850  0896                     	;# 
  2851  089B                     	;# 
  2852  0911                     	;# 
  2853  0912                     	;# 
  2854  0913                     	;# 
  2855  0914                     	;# 
  2856  0915                     	;# 
  2857  0916                     	;# 
  2858  0918                     	;# 
  2859  0919                     	;# 
  2860  091A                     	;# 
  2861  091B                     	;# 
  2862  091C                     	;# 
  2863  091D                     	;# 
  2864  091E                     	;# 
  2865  091F                     	;# 
  2866  0E0F                     	;# 
  2867  0E10                     	;# 
  2868  0E11                     	;# 
  2869  0E12                     	;# 
  2870  0E13                     	;# 
  2871  0E14                     	;# 
  2872  0E15                     	;# 
  2873  0E16                     	;# 
  2874  0E17                     	;# 
  2875  0E18                     	;# 
  2876  0E19                     	;# 
  2877  0E1A                     	;# 
  2878  0E1B                     	;# 
  2879  0E1C                     	;# 
  2880  0E1D                     	;# 
  2881  0E1E                     	;# 
  2882  0E1F                     	;# 
  2883  0E20                     	;# 
  2884  0E21                     	;# 
  2885  0E22                     	;# 
  2886  0E24                     	;# 
  2887  0E25                     	;# 
  2888  0E28                     	;# 
  2889  0E29                     	;# 
  2890  0E2A                     	;# 
  2891  0E2B                     	;# 
  2892  0E2C                     	;# 
  2893  0E2D                     	;# 
  2894  0E2E                     	;# 
  2895  0E2F                     	;# 
  2896  0E90                     	;# 
  2897  0E91                     	;# 
  2898  0E92                     	;# 
  2899  0E94                     	;# 
  2900  0E95                     	;# 
  2901  0E9C                     	;# 
  2902  0E9D                     	;# 
  2903  0E9E                     	;# 
  2904  0E9F                     	;# 
  2905  0EA0                     	;# 
  2906  0EA1                     	;# 
  2907  0EA2                     	;# 
  2908  0EA3                     	;# 
  2909  0EA4                     	;# 
  2910  0EA5                     	;# 
  2911  0EA6                     	;# 
  2912  0EA7                     	;# 
  2913  0F0F                     	;# 
  2914  0F10                     	;# 
  2915  0F11                     	;# 
  2916  0F12                     	;# 
  2917  0F13                     	;# 
  2918  0F14                     	;# 
  2919  0F15                     	;# 
  2920  0F16                     	;# 
  2921  0F17                     	;# 
  2922  0F18                     	;# 
  2923  0F19                     	;# 
  2924  0F1A                     	;# 
  2925  0F1B                     	;# 
  2926  0F1C                     	;# 
  2927  0F1D                     	;# 
  2928  0F1E                     	;# 
  2929  0F1F                     	;# 
  2930  0F20                     	;# 
  2931  0F21                     	;# 
  2932  0F22                     	;# 
  2933  0F23                     	;# 
  2934  0F24                     	;# 
  2935  0F25                     	;# 
  2936  0F26                     	;# 
  2937  0F27                     	;# 
  2938  0F28                     	;# 
  2939  0F29                     	;# 
  2940  0F2A                     	;# 
  2941  0F2B                     	;# 
  2942  0F2C                     	;# 
  2943  0F2D                     	;# 
  2944  0F2E                     	;# 
  2945  0F2F                     	;# 
  2946  0F30                     	;# 
  2947  0F31                     	;# 
  2948  0F32                     	;# 
  2949  0F33                     	;# 
  2950  0F34                     	;# 
  2951  0F35                     	;# 
  2952  0F36                     	;# 
  2953  0F37                     	;# 
  2954  0FE4                     	;# 
  2955  0FE5                     	;# 
  2956  0FE6                     	;# 
  2957  0FE7                     	;# 
  2958  0FE8                     	;# 
  2959  0FE9                     	;# 
  2960  0FEA                     	;# 
  2961  0FEB                     	;# 
  2962  0FED                     	;# 
  2963  0FEE                     	;# 
  2964  0FEF                     	;# 
  2965  0000                     	;# 
  2966  0001                     	;# 
  2967  0002                     	;# 
  2968  0003                     	;# 
  2969  0004                     	;# 
  2970  0005                     	;# 
  2971  0006                     	;# 
  2972  0007                     	;# 
  2973  0008                     	;# 
  2974  0009                     	;# 
  2975  000A                     	;# 
  2976  000B                     	;# 
  2977  000C                     	;# 
  2978  000D                     	;# 
  2979  000E                     	;# 
  2980  0010                     	;# 
  2981  0011                     	;# 
  2982  0012                     	;# 
  2983  0013                     	;# 
  2984  0014                     	;# 
  2985  0015                     	;# 
  2986  0015                     	;# 
  2987  0016                     	;# 
  2988  0016                     	;# 
  2989  0017                     	;# 
  2990  0018                     	;# 
  2991  0019                     	;# 
  2992  0019                     	;# 
  2993  001A                     	;# 
  2994  001B                     	;# 
  2995  001C                     	;# 
  2996  001D                     	;# 
  2997  001E                     	;# 
  2998  001F                     	;# 
  2999  008C                     	;# 
  3000  008D                     	;# 
  3001  008E                     	;# 
  3002  0090                     	;# 
  3003  0091                     	;# 
  3004  0092                     	;# 
  3005  0093                     	;# 
  3006  0094                     	;# 
  3007  0097                     	;# 
  3008  009B                     	;# 
  3009  009B                     	;# 
  3010  009C                     	;# 
  3011  009D                     	;# 
  3012  009E                     	;# 
  3013  009F                     	;# 
  3014  010C                     	;# 
  3015  010D                     	;# 
  3016  010E                     	;# 
  3017  0111                     	;# 
  3018  0112                     	;# 
  3019  0113                     	;# 
  3020  0114                     	;# 
  3021  0115                     	;# 
  3022  0116                     	;# 
  3023  0117                     	;# 
  3024  0118                     	;# 
  3025  0119                     	;# 
  3026  018C                     	;# 
  3027  018D                     	;# 
  3028  018E                     	;# 
  3029  0197                     	;# 
  3030  0199                     	;# 
  3031  0199                     	;# 
  3032  0199                     	;# 
  3033  019A                     	;# 
  3034  019A                     	;# 
  3035  019A                     	;# 
  3036  019B                     	;# 
  3037  019B                     	;# 
  3038  019B                     	;# 
  3039  019B                     	;# 
  3040  019B                     	;# 
  3041  019C                     	;# 
  3042  019C                     	;# 
  3043  019C                     	;# 
  3044  019D                     	;# 
  3045  019D                     	;# 
  3046  019D                     	;# 
  3047  019E                     	;# 
  3048  019E                     	;# 
  3049  019E                     	;# 
  3050  019F                     	;# 
  3051  019F                     	;# 
  3052  019F                     	;# 
  3053  019F                     	;# 
  3054  019F                     	;# 
  3055  020C                     	;# 
  3056  020D                     	;# 
  3057  020E                     	;# 
  3058  0211                     	;# 
  3059  0211                     	;# 
  3060  0212                     	;# 
  3061  0212                     	;# 
  3062  0213                     	;# 
  3063  0213                     	;# 
  3064  0214                     	;# 
  3065  0214                     	;# 
  3066  0215                     	;# 
  3067  0215                     	;# 
  3068  0215                     	;# 
  3069  0215                     	;# 
  3070  0216                     	;# 
  3071  0216                     	;# 
  3072  0217                     	;# 
  3073  0217                     	;# 
  3074  0219                     	;# 
  3075  021A                     	;# 
  3076  021B                     	;# 
  3077  021C                     	;# 
  3078  021D                     	;# 
  3079  021D                     	;# 
  3080  021E                     	;# 
  3081  021F                     	;# 
  3082  028C                     	;# 
  3083  028D                     	;# 
  3084  028E                     	;# 
  3085  0291                     	;# 
  3086  0291                     	;# 
  3087  0292                     	;# 
  3088  0293                     	;# 
  3089  0294                     	;# 
  3090  0295                     	;# 
  3091  0295                     	;# 
  3092  0296                     	;# 
  3093  0297                     	;# 
  3094  0298                     	;# 
  3095  029F                     	;# 
  3096  030C                     	;# 
  3097  030D                     	;# 
  3098  030E                     	;# 
  3099  0311                     	;# 
  3100  0311                     	;# 
  3101  0312                     	;# 
  3102  0313                     	;# 
  3103  0314                     	;# 
  3104  0315                     	;# 
  3105  0315                     	;# 
  3106  0316                     	;# 
  3107  0317                     	;# 
  3108  0318                     	;# 
  3109  038C                     	;# 
  3110  038D                     	;# 
  3111  038E                     	;# 
  3112  0391                     	;# 
  3113  0392                     	;# 
  3114  0393                     	;# 
  3115  0394                     	;# 
  3116  0395                     	;# 
  3117  0396                     	;# 
  3118  0397                     	;# 
  3119  0398                     	;# 
  3120  0399                     	;# 
  3121  039A                     	;# 
  3122  039C                     	;# 
  3123  039D                     	;# 
  3124  039E                     	;# 
  3125  039F                     	;# 
  3126  0411                     	;# 
  3127  0411                     	;# 
  3128  0412                     	;# 
  3129  0413                     	;# 
  3130  0414                     	;# 
  3131  0415                     	;# 
  3132  0416                     	;# 
  3133  0417                     	;# 
  3134  0418                     	;# 
  3135  0418                     	;# 
  3136  0419                     	;# 
  3137  041A                     	;# 
  3138  041B                     	;# 
  3139  041C                     	;# 
  3140  041D                     	;# 
  3141  041E                     	;# 
  3142  041F                     	;# 
  3143  0498                     	;# 
  3144  0498                     	;# 
  3145  0499                     	;# 
  3146  049A                     	;# 
  3147  049B                     	;# 
  3148  049B                     	;# 
  3149  049C                     	;# 
  3150  049D                     	;# 
  3151  049E                     	;# 
  3152  049F                     	;# 
  3153  0617                     	;# 
  3154  0618                     	;# 
  3155  0619                     	;# 
  3156  0619                     	;# 
  3157  061A                     	;# 
  3158  061B                     	;# 
  3159  061C                     	;# 
  3160  061C                     	;# 
  3161  061F                     	;# 
  3162  0691                     	;# 
  3163  0692                     	;# 
  3164  0693                     	;# 
  3165  0694                     	;# 
  3166  0695                     	;# 
  3167  0696                     	;# 
  3168  0697                     	;# 
  3169  0698                     	;# 
  3170  0699                     	;# 
  3171  0711                     	;# 
  3172  0712                     	;# 
  3173  0713                     	;# 
  3174  0714                     	;# 
  3175  0715                     	;# 
  3176  0716                     	;# 
  3177  0717                     	;# 
  3178  0718                     	;# 
  3179  0719                     	;# 
  3180  0891                     	;# 
  3181  0891                     	;# 
  3182  0891                     	;# 
  3183  0891                     	;# 
  3184  0891                     	;# 
  3185  0891                     	;# 
  3186  0892                     	;# 
  3187  0892                     	;# 
  3188  0892                     	;# 
  3189  0893                     	;# 
  3190  0893                     	;# 
  3191  0893                     	;# 
  3192  0893                     	;# 
  3193  0893                     	;# 
  3194  0893                     	;# 
  3195  0894                     	;# 
  3196  0894                     	;# 
  3197  0894                     	;# 
  3198  0895                     	;# 
  3199  0895                     	;# 
  3200  0895                     	;# 
  3201  0896                     	;# 
  3202  0896                     	;# 
  3203  0896                     	;# 
  3204  089B                     	;# 
  3205  0911                     	;# 
  3206  0912                     	;# 
  3207  0913                     	;# 
  3208  0914                     	;# 
  3209  0915                     	;# 
  3210  0916                     	;# 
  3211  0918                     	;# 
  3212  0919                     	;# 
  3213  091A                     	;# 
  3214  091B                     	;# 
  3215  091C                     	;# 
  3216  091D                     	;# 
  3217  091E                     	;# 
  3218  091F                     	;# 
  3219  0E0F                     	;# 
  3220  0E10                     	;# 
  3221  0E11                     	;# 
  3222  0E12                     	;# 
  3223  0E13                     	;# 
  3224  0E14                     	;# 
  3225  0E15                     	;# 
  3226  0E16                     	;# 
  3227  0E17                     	;# 
  3228  0E18                     	;# 
  3229  0E19                     	;# 
  3230  0E1A                     	;# 
  3231  0E1B                     	;# 
  3232  0E1C                     	;# 
  3233  0E1D                     	;# 
  3234  0E1E                     	;# 
  3235  0E1F                     	;# 
  3236  0E20                     	;# 
  3237  0E21                     	;# 
  3238  0E22                     	;# 
  3239  0E24                     	;# 
  3240  0E25                     	;# 
  3241  0E28                     	;# 
  3242  0E29                     	;# 
  3243  0E2A                     	;# 
  3244  0E2B                     	;# 
  3245  0E2C                     	;# 
  3246  0E2D                     	;# 
  3247  0E2E                     	;# 
  3248  0E2F                     	;# 
  3249  0E90                     	;# 
  3250  0E91                     	;# 
  3251  0E92                     	;# 
  3252  0E94                     	;# 
  3253  0E95                     	;# 
  3254  0E9C                     	;# 
  3255  0E9D                     	;# 
  3256  0E9E                     	;# 
  3257  0E9F                     	;# 
  3258  0EA0                     	;# 
  3259  0EA1                     	;# 
  3260  0EA2                     	;# 
  3261  0EA3                     	;# 
  3262  0EA4                     	;# 
  3263  0EA5                     	;# 
  3264  0EA6                     	;# 
  3265  0EA7                     	;# 
  3266  0F0F                     	;# 
  3267  0F10                     	;# 
  3268  0F11                     	;# 
  3269  0F12                     	;# 
  3270  0F13                     	;# 
  3271  0F14                     	;# 
  3272  0F15                     	;# 
  3273  0F16                     	;# 
  3274  0F17                     	;# 
  3275  0F18                     	;# 
  3276  0F19                     	;# 
  3277  0F1A                     	;# 
  3278  0F1B                     	;# 
  3279  0F1C                     	;# 
  3280  0F1D                     	;# 
  3281  0F1E                     	;# 
  3282  0F1F                     	;# 
  3283  0F20                     	;# 
  3284  0F21                     	;# 
  3285  0F22                     	;# 
  3286  0F23                     	;# 
  3287  0F24                     	;# 
  3288  0F25                     	;# 
  3289  0F26                     	;# 
  3290  0F27                     	;# 
  3291  0F28                     	;# 
  3292  0F29                     	;# 
  3293  0F2A                     	;# 
  3294  0F2B                     	;# 
  3295  0F2C                     	;# 
  3296  0F2D                     	;# 
  3297  0F2E                     	;# 
  3298  0F2F                     	;# 
  3299  0F30                     	;# 
  3300  0F31                     	;# 
  3301  0F32                     	;# 
  3302  0F33                     	;# 
  3303  0F34                     	;# 
  3304  0F35                     	;# 
  3305  0F36                     	;# 
  3306  0F37                     	;# 
  3307  0FE4                     	;# 
  3308  0FE5                     	;# 
  3309  0FE6                     	;# 
  3310  0FE7                     	;# 
  3311  0FE8                     	;# 
  3312  0FE9                     	;# 
  3313  0FEA                     	;# 
  3314  0FEB                     	;# 
  3315  0FED                     	;# 
  3316  0FEE                     	;# 
  3317  0FEF                     	;# 
  3318  0000                     	;# 
  3319  0001                     	;# 
  3320  0002                     	;# 
  3321  0003                     	;# 
  3322  0004                     	;# 
  3323  0005                     	;# 
  3324  0006                     	;# 
  3325  0007                     	;# 
  3326  0008                     	;# 
  3327  0009                     	;# 
  3328  000A                     	;# 
  3329  000B                     	;# 
  3330  000C                     	;# 
  3331  000D                     	;# 
  3332  000E                     	;# 
  3333  0010                     	;# 
  3334  0011                     	;# 
  3335  0012                     	;# 
  3336  0013                     	;# 
  3337  0014                     	;# 
  3338  0015                     	;# 
  3339  0015                     	;# 
  3340  0016                     	;# 
  3341  0016                     	;# 
  3342  0017                     	;# 
  3343  0018                     	;# 
  3344  0019                     	;# 
  3345  0019                     	;# 
  3346  001A                     	;# 
  3347  001B                     	;# 
  3348  001C                     	;# 
  3349  001D                     	;# 
  3350  001E                     	;# 
  3351  001F                     	;# 
  3352  008C                     	;# 
  3353  008D                     	;# 
  3354  008E                     	;# 
  3355  0090                     	;# 
  3356  0091                     	;# 
  3357  0092                     	;# 
  3358  0093                     	;# 
  3359  0094                     	;# 
  3360  0097                     	;# 
  3361  009B                     	;# 
  3362  009B                     	;# 
  3363  009C                     	;# 
  3364  009D                     	;# 
  3365  009E                     	;# 
  3366  009F                     	;# 
  3367  010C                     	;# 
  3368  010D                     	;# 
  3369  010E                     	;# 
  3370  0111                     	;# 
  3371  0112                     	;# 
  3372  0113                     	;# 
  3373  0114                     	;# 
  3374  0115                     	;# 
  3375  0116                     	;# 
  3376  0117                     	;# 
  3377  0118                     	;# 
  3378  0119                     	;# 
  3379  018C                     	;# 
  3380  018D                     	;# 
  3381  018E                     	;# 
  3382  0197                     	;# 
  3383  0199                     	;# 
  3384  0199                     	;# 
  3385  0199                     	;# 
  3386  019A                     	;# 
  3387  019A                     	;# 
  3388  019A                     	;# 
  3389  019B                     	;# 
  3390  019B                     	;# 
  3391  019B                     	;# 
  3392  019B                     	;# 
  3393  019B                     	;# 
  3394  019C                     	;# 
  3395  019C                     	;# 
  3396  019C                     	;# 
  3397  019D                     	;# 
  3398  019D                     	;# 
  3399  019D                     	;# 
  3400  019E                     	;# 
  3401  019E                     	;# 
  3402  019E                     	;# 
  3403  019F                     	;# 
  3404  019F                     	;# 
  3405  019F                     	;# 
  3406  019F                     	;# 
  3407  019F                     	;# 
  3408  020C                     	;# 
  3409  020D                     	;# 
  3410  020E                     	;# 
  3411  0211                     	;# 
  3412  0211                     	;# 
  3413  0212                     	;# 
  3414  0212                     	;# 
  3415  0213                     	;# 
  3416  0213                     	;# 
  3417  0214                     	;# 
  3418  0214                     	;# 
  3419  0215                     	;# 
  3420  0215                     	;# 
  3421  0215                     	;# 
  3422  0215                     	;# 
  3423  0216                     	;# 
  3424  0216                     	;# 
  3425  0217                     	;# 
  3426  0217                     	;# 
  3427  0219                     	;# 
  3428  021A                     	;# 
  3429  021B                     	;# 
  3430  021C                     	;# 
  3431  021D                     	;# 
  3432  021D                     	;# 
  3433  021E                     	;# 
  3434  021F                     	;# 
  3435  028C                     	;# 
  3436  028D                     	;# 
  3437  028E                     	;# 
  3438  0291                     	;# 
  3439  0291                     	;# 
  3440  0292                     	;# 
  3441  0293                     	;# 
  3442  0294                     	;# 
  3443  0295                     	;# 
  3444  0295                     	;# 
  3445  0296                     	;# 
  3446  0297                     	;# 
  3447  0298                     	;# 
  3448  029F                     	;# 
  3449  030C                     	;# 
  3450  030D                     	;# 
  3451  030E                     	;# 
  3452  0311                     	;# 
  3453  0311                     	;# 
  3454  0312                     	;# 
  3455  0313                     	;# 
  3456  0314                     	;# 
  3457  0315                     	;# 
  3458  0315                     	;# 
  3459  0316                     	;# 
  3460  0317                     	;# 
  3461  0318                     	;# 
  3462  038C                     	;# 
  3463  038D                     	;# 
  3464  038E                     	;# 
  3465  0391                     	;# 
  3466  0392                     	;# 
  3467  0393                     	;# 
  3468  0394                     	;# 
  3469  0395                     	;# 
  3470  0396                     	;# 
  3471  0397                     	;# 
  3472  0398                     	;# 
  3473  0399                     	;# 
  3474  039A                     	;# 
  3475  039C                     	;# 
  3476  039D                     	;# 
  3477  039E                     	;# 
  3478  039F                     	;# 
  3479  0411                     	;# 
  3480  0411                     	;# 
  3481  0412                     	;# 
  3482  0413                     	;# 
  3483  0414                     	;# 
  3484  0415                     	;# 
  3485  0416                     	;# 
  3486  0417                     	;# 
  3487  0418                     	;# 
  3488  0418                     	;# 
  3489  0419                     	;# 
  3490  041A                     	;# 
  3491  041B                     	;# 
  3492  041C                     	;# 
  3493  041D                     	;# 
  3494  041E                     	;# 
  3495  041F                     	;# 
  3496  0498                     	;# 
  3497  0498                     	;# 
  3498  0499                     	;# 
  3499  049A                     	;# 
  3500  049B                     	;# 
  3501  049B                     	;# 
  3502  049C                     	;# 
  3503  049D                     	;# 
  3504  049E                     	;# 
  3505  049F                     	;# 
  3506  0617                     	;# 
  3507  0618                     	;# 
  3508  0619                     	;# 
  3509  0619                     	;# 
  3510  061A                     	;# 
  3511  061B                     	;# 
  3512  061C                     	;# 
  3513  061C                     	;# 
  3514  061F                     	;# 
  3515  0691                     	;# 
  3516  0692                     	;# 
  3517  0693                     	;# 
  3518  0694                     	;# 
  3519  0695                     	;# 
  3520  0696                     	;# 
  3521  0697                     	;# 
  3522  0698                     	;# 
  3523  0699                     	;# 
  3524  0711                     	;# 
  3525  0712                     	;# 
  3526  0713                     	;# 
  3527  0714                     	;# 
  3528  0715                     	;# 
  3529  0716                     	;# 
  3530  0717                     	;# 
  3531  0718                     	;# 
  3532  0719                     	;# 
  3533  0891                     	;# 
  3534  0891                     	;# 
  3535  0891                     	;# 
  3536  0891                     	;# 
  3537  0891                     	;# 
  3538  0891                     	;# 
  3539  0892                     	;# 
  3540  0892                     	;# 
  3541  0892                     	;# 
  3542  0893                     	;# 
  3543  0893                     	;# 
  3544  0893                     	;# 
  3545  0893                     	;# 
  3546  0893                     	;# 
  3547  0893                     	;# 
  3548  0894                     	;# 
  3549  0894                     	;# 
  3550  0894                     	;# 
  3551  0895                     	;# 
  3552  0895                     	;# 
  3553  0895                     	;# 
  3554  0896                     	;# 
  3555  0896                     	;# 
  3556  0896                     	;# 
  3557  089B                     	;# 
  3558  0911                     	;# 
  3559  0912                     	;# 
  3560  0913                     	;# 
  3561  0914                     	;# 
  3562  0915                     	;# 
  3563  0916                     	;# 
  3564  0918                     	;# 
  3565  0919                     	;# 
  3566  091A                     	;# 
  3567  091B                     	;# 
  3568  091C                     	;# 
  3569  091D                     	;# 
  3570  091E                     	;# 
  3571  091F                     	;# 
  3572  0E0F                     	;# 
  3573  0E10                     	;# 
  3574  0E11                     	;# 
  3575  0E12                     	;# 
  3576  0E13                     	;# 
  3577  0E14                     	;# 
  3578  0E15                     	;# 
  3579  0E16                     	;# 
  3580  0E17                     	;# 
  3581  0E18                     	;# 
  3582  0E19                     	;# 
  3583  0E1A                     	;# 
  3584  0E1B                     	;# 
  3585  0E1C                     	;# 
  3586  0E1D                     	;# 
  3587  0E1E                     	;# 
  3588  0E1F                     	;# 
  3589  0E20                     	;# 
  3590  0E21                     	;# 
  3591  0E22                     	;# 
  3592  0E24                     	;# 
  3593  0E25                     	;# 
  3594  0E28                     	;# 
  3595  0E29                     	;# 
  3596  0E2A                     	;# 
  3597  0E2B                     	;# 
  3598  0E2C                     	;# 
  3599  0E2D                     	;# 
  3600  0E2E                     	;# 
  3601  0E2F                     	;# 
  3602  0E90                     	;# 
  3603  0E91                     	;# 
  3604  0E92                     	;# 
  3605  0E94                     	;# 
  3606  0E95                     	;# 
  3607  0E9C                     	;# 
  3608  0E9D                     	;# 
  3609  0E9E                     	;# 
  3610  0E9F                     	;# 
  3611  0EA0                     	;# 
  3612  0EA1                     	;# 
  3613  0EA2                     	;# 
  3614  0EA3                     	;# 
  3615  0EA4                     	;# 
  3616  0EA5                     	;# 
  3617  0EA6                     	;# 
  3618  0EA7                     	;# 
  3619  0F0F                     	;# 
  3620  0F10                     	;# 
  3621  0F11                     	;# 
  3622  0F12                     	;# 
  3623  0F13                     	;# 
  3624  0F14                     	;# 
  3625  0F15                     	;# 
  3626  0F16                     	;# 
  3627  0F17                     	;# 
  3628  0F18                     	;# 
  3629  0F19                     	;# 
  3630  0F1A                     	;# 
  3631  0F1B                     	;# 
  3632  0F1C                     	;# 
  3633  0F1D                     	;# 
  3634  0F1E                     	;# 
  3635  0F1F                     	;# 
  3636  0F20                     	;# 
  3637  0F21                     	;# 
  3638  0F22                     	;# 
  3639  0F23                     	;# 
  3640  0F24                     	;# 
  3641  0F25                     	;# 
  3642  0F26                     	;# 
  3643  0F27                     	;# 
  3644  0F28                     	;# 
  3645  0F29                     	;# 
  3646  0F2A                     	;# 
  3647  0F2B                     	;# 
  3648  0F2C                     	;# 
  3649  0F2D                     	;# 
  3650  0F2E                     	;# 
  3651  0F2F                     	;# 
  3652  0F30                     	;# 
  3653  0F31                     	;# 
  3654  0F32                     	;# 
  3655  0F33                     	;# 
  3656  0F34                     	;# 
  3657  0F35                     	;# 
  3658  0F36                     	;# 
  3659  0F37                     	;# 
  3660  0FE4                     	;# 
  3661  0FE5                     	;# 
  3662  0FE6                     	;# 
  3663  0FE7                     	;# 
  3664  0FE8                     	;# 
  3665  0FE9                     	;# 
  3666  0FEA                     	;# 
  3667  0FEB                     	;# 
  3668  0FED                     	;# 
  3669  0FEE                     	;# 
  3670  0FEF                     	;# 
  3671  0000                     	;# 
  3672  0001                     	;# 
  3673  0002                     	;# 
  3674  0003                     	;# 
  3675  0004                     	;# 
  3676  0005                     	;# 
  3677  0006                     	;# 
  3678  0007                     	;# 
  3679  0008                     	;# 
  3680  0009                     	;# 
  3681  000A                     	;# 
  3682  000B                     	;# 
  3683  000C                     	;# 
  3684  000D                     	;# 
  3685  000E                     	;# 
  3686  0010                     	;# 
  3687  0011                     	;# 
  3688  0012                     	;# 
  3689  0013                     	;# 
  3690  0014                     	;# 
  3691  0015                     	;# 
  3692  0015                     	;# 
  3693  0016                     	;# 
  3694  0016                     	;# 
  3695  0017                     	;# 
  3696  0018                     	;# 
  3697  0019                     	;# 
  3698  0019                     	;# 
  3699  001A                     	;# 
  3700  001B                     	;# 
  3701  001C                     	;# 
  3702  001D                     	;# 
  3703  001E                     	;# 
  3704  001F                     	;# 
  3705  008C                     	;# 
  3706  008D                     	;# 
  3707  008E                     	;# 
  3708  0090                     	;# 
  3709  0091                     	;# 
  3710  0092                     	;# 
  3711  0093                     	;# 
  3712  0094                     	;# 
  3713  0097                     	;# 
  3714  009B                     	;# 
  3715  009B                     	;# 
  3716  009C                     	;# 
  3717  009D                     	;# 
  3718  009E                     	;# 
  3719  009F                     	;# 
  3720  010C                     	;# 
  3721  010D                     	;# 
  3722  010E                     	;# 
  3723  0111                     	;# 
  3724  0112                     	;# 
  3725  0113                     	;# 
  3726  0114                     	;# 
  3727  0115                     	;# 
  3728  0116                     	;# 
  3729  0117                     	;# 
  3730  0118                     	;# 
  3731  0119                     	;# 
  3732  018C                     	;# 
  3733  018D                     	;# 
  3734  018E                     	;# 
  3735  0197                     	;# 
  3736  0199                     	;# 
  3737  0199                     	;# 
  3738  0199                     	;# 
  3739  019A                     	;# 
  3740  019A                     	;# 
  3741  019A                     	;# 
  3742  019B                     	;# 
  3743  019B                     	;# 
  3744  019B                     	;# 
  3745  019B                     	;# 
  3746  019B                     	;# 
  3747  019C                     	;# 
  3748  019C                     	;# 
  3749  019C                     	;# 
  3750  019D                     	;# 
  3751  019D                     	;# 
  3752  019D                     	;# 
  3753  019E                     	;# 
  3754  019E                     	;# 
  3755  019E                     	;# 
  3756  019F                     	;# 
  3757  019F                     	;# 
  3758  019F                     	;# 
  3759  019F                     	;# 
  3760  019F                     	;# 
  3761  020C                     	;# 
  3762  020D                     	;# 
  3763  020E                     	;# 
  3764  0211                     	;# 
  3765  0211                     	;# 
  3766  0212                     	;# 
  3767  0212                     	;# 
  3768  0213                     	;# 
  3769  0213                     	;# 
  3770  0214                     	;# 
  3771  0214                     	;# 
  3772  0215                     	;# 
  3773  0215                     	;# 
  3774  0215                     	;# 
  3775  0215                     	;# 
  3776  0216                     	;# 
  3777  0216                     	;# 
  3778  0217                     	;# 
  3779  0217                     	;# 
  3780  0219                     	;# 
  3781  021A                     	;# 
  3782  021B                     	;# 
  3783  021C                     	;# 
  3784  021D                     	;# 
  3785  021D                     	;# 
  3786  021E                     	;# 
  3787  021F                     	;# 
  3788  028C                     	;# 
  3789  028D                     	;# 
  3790  028E                     	;# 
  3791  0291                     	;# 
  3792  0291                     	;# 
  3793  0292                     	;# 
  3794  0293                     	;# 
  3795  0294                     	;# 
  3796  0295                     	;# 
  3797  0295                     	;# 
  3798  0296                     	;# 
  3799  0297                     	;# 
  3800  0298                     	;# 
  3801  029F                     	;# 
  3802  030C                     	;# 
  3803  030D                     	;# 
  3804  030E                     	;# 
  3805  0311                     	;# 
  3806  0311                     	;# 
  3807  0312                     	;# 
  3808  0313                     	;# 
  3809  0314                     	;# 
  3810  0315                     	;# 
  3811  0315                     	;# 
  3812  0316                     	;# 
  3813  0317                     	;# 
  3814  0318                     	;# 
  3815  038C                     	;# 
  3816  038D                     	;# 
  3817  038E                     	;# 
  3818  0391                     	;# 
  3819  0392                     	;# 
  3820  0393                     	;# 
  3821  0394                     	;# 
  3822  0395                     	;# 
  3823  0396                     	;# 
  3824  0397                     	;# 
  3825  0398                     	;# 
  3826  0399                     	;# 
  3827  039A                     	;# 
  3828  039C                     	;# 
  3829  039D                     	;# 
  3830  039E                     	;# 
  3831  039F                     	;# 
  3832  0411                     	;# 
  3833  0411                     	;# 
  3834  0412                     	;# 
  3835  0413                     	;# 
  3836  0414                     	;# 
  3837  0415                     	;# 
  3838  0416                     	;# 
  3839  0417                     	;# 
  3840  0418                     	;# 
  3841  0418                     	;# 
  3842  0419                     	;# 
  3843  041A                     	;# 
  3844  041B                     	;# 
  3845  041C                     	;# 
  3846  041D                     	;# 
  3847  041E                     	;# 
  3848  041F                     	;# 
  3849  0498                     	;# 
  3850  0498                     	;# 
  3851  0499                     	;# 
  3852  049A                     	;# 
  3853  049B                     	;# 
  3854  049B                     	;# 
  3855  049C                     	;# 
  3856  049D                     	;# 
  3857  049E                     	;# 
  3858  049F                     	;# 
  3859  0617                     	;# 
  3860  0618                     	;# 
  3861  0619                     	;# 
  3862  0619                     	;# 
  3863  061A                     	;# 
  3864  061B                     	;# 
  3865  061C                     	;# 
  3866  061C                     	;# 
  3867  061F                     	;# 
  3868  0691                     	;# 
  3869  0692                     	;# 
  3870  0693                     	;# 
  3871  0694                     	;# 
  3872  0695                     	;# 
  3873  0696                     	;# 
  3874  0697                     	;# 
  3875  0698                     	;# 
  3876  0699                     	;# 
  3877  0711                     	;# 
  3878  0712                     	;# 
  3879  0713                     	;# 
  3880  0714                     	;# 
  3881  0715                     	;# 
  3882  0716                     	;# 
  3883  0717                     	;# 
  3884  0718                     	;# 
  3885  0719                     	;# 
  3886  0891                     	;# 
  3887  0891                     	;# 
  3888  0891                     	;# 
  3889  0891                     	;# 
  3890  0891                     	;# 
  3891  0891                     	;# 
  3892  0892                     	;# 
  3893  0892                     	;# 
  3894  0892                     	;# 
  3895  0893                     	;# 
  3896  0893                     	;# 
  3897  0893                     	;# 
  3898  0893                     	;# 
  3899  0893                     	;# 
  3900  0893                     	;# 
  3901  0894                     	;# 
  3902  0894                     	;# 
  3903  0894                     	;# 
  3904  0895                     	;# 
  3905  0895                     	;# 
  3906  0895                     	;# 
  3907  0896                     	;# 
  3908  0896                     	;# 
  3909  0896                     	;# 
  3910  089B                     	;# 
  3911  0911                     	;# 
  3912  0912                     	;# 
  3913  0913                     	;# 
  3914  0914                     	;# 
  3915  0915                     	;# 
  3916  0916                     	;# 
  3917  0918                     	;# 
  3918  0919                     	;# 
  3919  091A                     	;# 
  3920  091B                     	;# 
  3921  091C                     	;# 
  3922  091D                     	;# 
  3923  091E                     	;# 
  3924  091F                     	;# 
  3925  0E0F                     	;# 
  3926  0E10                     	;# 
  3927  0E11                     	;# 
  3928  0E12                     	;# 
  3929  0E13                     	;# 
  3930  0E14                     	;# 
  3931  0E15                     	;# 
  3932  0E16                     	;# 
  3933  0E17                     	;# 
  3934  0E18                     	;# 
  3935  0E19                     	;# 
  3936  0E1A                     	;# 
  3937  0E1B                     	;# 
  3938  0E1C                     	;# 
  3939  0E1D                     	;# 
  3940  0E1E                     	;# 
  3941  0E1F                     	;# 
  3942  0E20                     	;# 
  3943  0E21                     	;# 
  3944  0E22                     	;# 
  3945  0E24                     	;# 
  3946  0E25                     	;# 
  3947  0E28                     	;# 
  3948  0E29                     	;# 
  3949  0E2A                     	;# 
  3950  0E2B                     	;# 
  3951  0E2C                     	;# 
  3952  0E2D                     	;# 
  3953  0E2E                     	;# 
  3954  0E2F                     	;# 
  3955  0E90                     	;# 
  3956  0E91                     	;# 
  3957  0E92                     	;# 
  3958  0E94                     	;# 
  3959  0E95                     	;# 
  3960  0E9C                     	;# 
  3961  0E9D                     	;# 
  3962  0E9E                     	;# 
  3963  0E9F                     	;# 
  3964  0EA0                     	;# 
  3965  0EA1                     	;# 
  3966  0EA2                     	;# 
  3967  0EA3                     	;# 
  3968  0EA4                     	;# 
  3969  0EA5                     	;# 
  3970  0EA6                     	;# 
  3971  0EA7                     	;# 
  3972  0F0F                     	;# 
  3973  0F10                     	;# 
  3974  0F11                     	;# 
  3975  0F12                     	;# 
  3976  0F13                     	;# 
  3977  0F14                     	;# 
  3978  0F15                     	;# 
  3979  0F16                     	;# 
  3980  0F17                     	;# 
  3981  0F18                     	;# 
  3982  0F19                     	;# 
  3983  0F1A                     	;# 
  3984  0F1B                     	;# 
  3985  0F1C                     	;# 
  3986  0F1D                     	;# 
  3987  0F1E                     	;# 
  3988  0F1F                     	;# 
  3989  0F20                     	;# 
  3990  0F21                     	;# 
  3991  0F22                     	;# 
  3992  0F23                     	;# 
  3993  0F24                     	;# 
  3994  0F25                     	;# 
  3995  0F26                     	;# 
  3996  0F27                     	;# 
  3997  0F28                     	;# 
  3998  0F29                     	;# 
  3999  0F2A                     	;# 
  4000  0F2B                     	;# 
  4001  0F2C                     	;# 
  4002  0F2D                     	;# 
  4003  0F2E                     	;# 
  4004  0F2F                     	;# 
  4005  0F30                     	;# 
  4006  0F31                     	;# 
  4007  0F32                     	;# 
  4008  0F33                     	;# 
  4009  0F34                     	;# 
  4010  0F35                     	;# 
  4011  0F36                     	;# 
  4012  0F37                     	;# 
  4013  0FE4                     	;# 
  4014  0FE5                     	;# 
  4015  0FE6                     	;# 
  4016  0FE7                     	;# 
  4017  0FE8                     	;# 
  4018  0FE9                     	;# 
  4019  0FEA                     	;# 
  4020  0FEB                     	;# 
  4021  0FED                     	;# 
  4022  0FEE                     	;# 
  4023  0FEF                     	;# 
  4024  0000                     	;# 
  4025  0001                     	;# 
  4026  0002                     	;# 
  4027  0003                     	;# 
  4028  0004                     	;# 
  4029  0005                     	;# 
  4030  0006                     	;# 
  4031  0007                     	;# 
  4032  0008                     	;# 
  4033  0009                     	;# 
  4034  000A                     	;# 
  4035  000B                     	;# 
  4036  000C                     	;# 
  4037  000D                     	;# 
  4038  000E                     	;# 
  4039  0010                     	;# 
  4040  0011                     	;# 
  4041  0012                     	;# 
  4042  0013                     	;# 
  4043  0014                     	;# 
  4044  0015                     	;# 
  4045  0015                     	;# 
  4046  0016                     	;# 
  4047  0016                     	;# 
  4048  0017                     	;# 
  4049  0018                     	;# 
  4050  0019                     	;# 
  4051  0019                     	;# 
  4052  001A                     	;# 
  4053  001B                     	;# 
  4054  001C                     	;# 
  4055  001D                     	;# 
  4056  001E                     	;# 
  4057  001F                     	;# 
  4058  008C                     	;# 
  4059  008D                     	;# 
  4060  008E                     	;# 
  4061  0090                     	;# 
  4062  0091                     	;# 
  4063  0092                     	;# 
  4064  0093                     	;# 
  4065  0094                     	;# 
  4066  0097                     	;# 
  4067  009B                     	;# 
  4068  009B                     	;# 
  4069  009C                     	;# 
  4070  009D                     	;# 
  4071  009E                     	;# 
  4072  009F                     	;# 
  4073  010C                     	;# 
  4074  010D                     	;# 
  4075  010E                     	;# 
  4076  0111                     	;# 
  4077  0112                     	;# 
  4078  0113                     	;# 
  4079  0114                     	;# 
  4080  0115                     	;# 
  4081  0116                     	;# 
  4082  0117                     	;# 
  4083  0118                     	;# 
  4084  0119                     	;# 
  4085  018C                     	;# 
  4086  018D                     	;# 
  4087  018E                     	;# 
  4088  0197                     	;# 
  4089  0199                     	;# 
  4090  0199                     	;# 
  4091  0199                     	;# 
  4092  019A                     	;# 
  4093  019A                     	;# 
  4094  019A                     	;# 
  4095  019B                     	;# 
  4096  019B                     	;# 
  4097  019B                     	;# 
  4098  019B                     	;# 
  4099  019B                     	;# 
  4100  019C                     	;# 
  4101  019C                     	;# 
  4102  019C                     	;# 
  4103  019D                     	;# 
  4104  019D                     	;# 
  4105  019D                     	;# 
  4106  019E                     	;# 
  4107  019E                     	;# 
  4108  019E                     	;# 
  4109  019F                     	;# 
  4110  019F                     	;# 
  4111  019F                     	;# 
  4112  019F                     	;# 
  4113  019F                     	;# 
  4114  020C                     	;# 
  4115  020D                     	;# 
  4116  020E                     	;# 
  4117  0211                     	;# 
  4118  0211                     	;# 
  4119  0212                     	;# 
  4120  0212                     	;# 
  4121  0213                     	;# 
  4122  0213                     	;# 
  4123  0214                     	;# 
  4124  0214                     	;# 
  4125  0215                     	;# 
  4126  0215                     	;# 
  4127  0215                     	;# 
  4128  0215                     	;# 
  4129  0216                     	;# 
  4130  0216                     	;# 
  4131  0217                     	;# 
  4132  0217                     	;# 
  4133  0219                     	;# 
  4134  021A                     	;# 
  4135  021B                     	;# 
  4136  021C                     	;# 
  4137  021D                     	;# 
  4138  021D                     	;# 
  4139  021E                     	;# 
  4140  021F                     	;# 
  4141  028C                     	;# 
  4142  028D                     	;# 
  4143  028E                     	;# 
  4144  0291                     	;# 
  4145  0291                     	;# 
  4146  0292                     	;# 
  4147  0293                     	;# 
  4148  0294                     	;# 
  4149  0295                     	;# 
  4150  0295                     	;# 
  4151  0296                     	;# 
  4152  0297                     	;# 
  4153  0298                     	;# 
  4154  029F                     	;# 
  4155  030C                     	;# 
  4156  030D                     	;# 
  4157  030E                     	;# 
  4158  0311                     	;# 
  4159  0311                     	;# 
  4160  0312                     	;# 
  4161  0313                     	;# 
  4162  0314                     	;# 
  4163  0315                     	;# 
  4164  0315                     	;# 
  4165  0316                     	;# 
  4166  0317                     	;# 
  4167  0318                     	;# 
  4168  038C                     	;# 
  4169  038D                     	;# 
  4170  038E                     	;# 
  4171  0391                     	;# 
  4172  0392                     	;# 
  4173  0393                     	;# 
  4174  0394                     	;# 
  4175  0395                     	;# 
  4176  0396                     	;# 
  4177  0397                     	;# 
  4178  0398                     	;# 
  4179  0399                     	;# 
  4180  039A                     	;# 
  4181  039C                     	;# 
  4182  039D                     	;# 
  4183  039E                     	;# 
  4184  039F                     	;# 
  4185  0411                     	;# 
  4186  0411                     	;# 
  4187  0412                     	;# 
  4188  0413                     	;# 
  4189  0414                     	;# 
  4190  0415                     	;# 
  4191  0416                     	;# 
  4192  0417                     	;# 
  4193  0418                     	;# 
  4194  0418                     	;# 
  4195  0419                     	;# 
  4196  041A                     	;# 
  4197  041B                     	;# 
  4198  041C                     	;# 
  4199  041D                     	;# 
  4200  041E                     	;# 
  4201  041F                     	;# 
  4202  0498                     	;# 
  4203  0498                     	;# 
  4204  0499                     	;# 
  4205  049A                     	;# 
  4206  049B                     	;# 
  4207  049B                     	;# 
  4208  049C                     	;# 
  4209  049D                     	;# 
  4210  049E                     	;# 
  4211  049F                     	;# 
  4212  0617                     	;# 
  4213  0618                     	;# 
  4214  0619                     	;# 
  4215  0619                     	;# 
  4216  061A                     	;# 
  4217  061B                     	;# 
  4218  061C                     	;# 
  4219  061C                     	;# 
  4220  061F                     	;# 
  4221  0691                     	;# 
  4222  0692                     	;# 
  4223  0693                     	;# 
  4224  0694                     	;# 
  4225  0695                     	;# 
  4226  0696                     	;# 
  4227  0697                     	;# 
  4228  0698                     	;# 
  4229  0699                     	;# 
  4230  0711                     	;# 
  4231  0712                     	;# 
  4232  0713                     	;# 
  4233  0714                     	;# 
  4234  0715                     	;# 
  4235  0716                     	;# 
  4236  0717                     	;# 
  4237  0718                     	;# 
  4238  0719                     	;# 
  4239  0891                     	;# 
  4240  0891                     	;# 
  4241  0891                     	;# 
  4242  0891                     	;# 
  4243  0891                     	;# 
  4244  0891                     	;# 
  4245  0892                     	;# 
  4246  0892                     	;# 
  4247  0892                     	;# 
  4248  0893                     	;# 
  4249  0893                     	;# 
  4250  0893                     	;# 
  4251  0893                     	;# 
  4252  0893                     	;# 
  4253  0893                     	;# 
  4254  0894                     	;# 
  4255  0894                     	;# 
  4256  0894                     	;# 
  4257  0895                     	;# 
  4258  0895                     	;# 
  4259  0895                     	;# 
  4260  0896                     	;# 
  4261  0896                     	;# 
  4262  0896                     	;# 
  4263  089B                     	;# 
  4264  0911                     	;# 
  4265  0912                     	;# 
  4266  0913                     	;# 
  4267  0914                     	;# 
  4268  0915                     	;# 
  4269  0916                     	;# 
  4270  0918                     	;# 
  4271  0919                     	;# 
  4272  091A                     	;# 
  4273  091B                     	;# 
  4274  091C                     	;# 
  4275  091D                     	;# 
  4276  091E                     	;# 
  4277  091F                     	;# 
  4278  0E0F                     	;# 
  4279  0E10                     	;# 
  4280  0E11                     	;# 
  4281  0E12                     	;# 
  4282  0E13                     	;# 
  4283  0E14                     	;# 
  4284  0E15                     	;# 
  4285  0E16                     	;# 
  4286  0E17                     	;# 
  4287  0E18                     	;# 
  4288  0E19                     	;# 
  4289  0E1A                     	;# 
  4290  0E1B                     	;# 
  4291  0E1C                     	;# 
  4292  0E1D                     	;# 
  4293  0E1E                     	;# 
  4294  0E1F                     	;# 
  4295  0E20                     	;# 
  4296  0E21                     	;# 
  4297  0E22                     	;# 
  4298  0E24                     	;# 
  4299  0E25                     	;# 
  4300  0E28                     	;# 
  4301  0E29                     	;# 
  4302  0E2A                     	;# 
  4303  0E2B                     	;# 
  4304  0E2C                     	;# 
  4305  0E2D                     	;# 
  4306  0E2E                     	;# 
  4307  0E2F                     	;# 
  4308  0E90                     	;# 
  4309  0E91                     	;# 
  4310  0E92                     	;# 
  4311  0E94                     	;# 
  4312  0E95                     	;# 
  4313  0E9C                     	;# 
  4314  0E9D                     	;# 
  4315  0E9E                     	;# 
  4316  0E9F                     	;# 
  4317  0EA0                     	;# 
  4318  0EA1                     	;# 
  4319  0EA2                     	;# 
  4320  0EA3                     	;# 
  4321  0EA4                     	;# 
  4322  0EA5                     	;# 
  4323  0EA6                     	;# 
  4324  0EA7                     	;# 
  4325  0F0F                     	;# 
  4326  0F10                     	;# 
  4327  0F11                     	;# 
  4328  0F12                     	;# 
  4329  0F13                     	;# 
  4330  0F14                     	;# 
  4331  0F15                     	;# 
  4332  0F16                     	;# 
  4333  0F17                     	;# 
  4334  0F18                     	;# 
  4335  0F19                     	;# 
  4336  0F1A                     	;# 
  4337  0F1B                     	;# 
  4338  0F1C                     	;# 
  4339  0F1D                     	;# 
  4340  0F1E                     	;# 
  4341  0F1F                     	;# 
  4342  0F20                     	;# 
  4343  0F21                     	;# 
  4344  0F22                     	;# 
  4345  0F23                     	;# 
  4346  0F24                     	;# 
  4347  0F25                     	;# 
  4348  0F26                     	;# 
  4349  0F27                     	;# 
  4350  0F28                     	;# 
  4351  0F29                     	;# 
  4352  0F2A                     	;# 
  4353  0F2B                     	;# 
  4354  0F2C                     	;# 
  4355  0F2D                     	;# 
  4356  0F2E                     	;# 
  4357  0F2F                     	;# 
  4358  0F30                     	;# 
  4359  0F31                     	;# 
  4360  0F32                     	;# 
  4361  0F33                     	;# 
  4362  0F34                     	;# 
  4363  0F35                     	;# 
  4364  0F36                     	;# 
  4365  0F37                     	;# 
  4366  0FE4                     	;# 
  4367  0FE5                     	;# 
  4368  0FE6                     	;# 
  4369  0FE7                     	;# 
  4370  0FE8                     	;# 
  4371  0FE9                     	;# 
  4372  0FEA                     	;# 
  4373  0FEB                     	;# 
  4374  0FED                     	;# 
  4375  0FEE                     	;# 
  4376  0FEF                     	;# 
  4377  0000                     	;# 
  4378  0001                     	;# 
  4379  0002                     	;# 
  4380  0003                     	;# 
  4381  0004                     	;# 
  4382  0005                     	;# 
  4383  0006                     	;# 
  4384  0007                     	;# 
  4385  0008                     	;# 
  4386  0009                     	;# 
  4387  000A                     	;# 
  4388  000B                     	;# 
  4389  000C                     	;# 
  4390  000D                     	;# 
  4391  000E                     	;# 
  4392  0010                     	;# 
  4393  0011                     	;# 
  4394  0012                     	;# 
  4395  0013                     	;# 
  4396  0014                     	;# 
  4397  0015                     	;# 
  4398  0015                     	;# 
  4399  0016                     	;# 
  4400  0016                     	;# 
  4401  0017                     	;# 
  4402  0018                     	;# 
  4403  0019                     	;# 
  4404  0019                     	;# 
  4405  001A                     	;# 
  4406  001B                     	;# 
  4407  001C                     	;# 
  4408  001D                     	;# 
  4409  001E                     	;# 
  4410  001F                     	;# 
  4411  008C                     	;# 
  4412  008D                     	;# 
  4413  008E                     	;# 
  4414  0090                     	;# 
  4415  0091                     	;# 
  4416  0092                     	;# 
  4417  0093                     	;# 
  4418  0094                     	;# 
  4419  0097                     	;# 
  4420  009B                     	;# 
  4421  009B                     	;# 
  4422  009C                     	;# 
  4423  009D                     	;# 
  4424  009E                     	;# 
  4425  009F                     	;# 
  4426  010C                     	;# 
  4427  010D                     	;# 
  4428  010E                     	;# 
  4429  0111                     	;# 
  4430  0112                     	;# 
  4431  0113                     	;# 
  4432  0114                     	;# 
  4433  0115                     	;# 
  4434  0116                     	;# 
  4435  0117                     	;# 
  4436  0118                     	;# 
  4437  0119                     	;# 
  4438  018C                     	;# 
  4439  018D                     	;# 
  4440  018E                     	;# 
  4441  0197                     	;# 
  4442  0199                     	;# 
  4443  0199                     	;# 
  4444  0199                     	;# 
  4445  019A                     	;# 
  4446  019A                     	;# 
  4447  019A                     	;# 
  4448  019B                     	;# 
  4449  019B                     	;# 
  4450  019B                     	;# 
  4451  019B                     	;# 
  4452  019B                     	;# 
  4453  019C                     	;# 
  4454  019C                     	;# 
  4455  019C                     	;# 
  4456  019D                     	;# 
  4457  019D                     	;# 
  4458  019D                     	;# 
  4459  019E                     	;# 
  4460  019E                     	;# 
  4461  019E                     	;# 
  4462  019F                     	;# 
  4463  019F                     	;# 
  4464  019F                     	;# 
  4465  019F                     	;# 
  4466  019F                     	;# 
  4467  020C                     	;# 
  4468  020D                     	;# 
  4469  020E                     	;# 
  4470  0211                     	;# 
  4471  0211                     	;# 
  4472  0212                     	;# 
  4473  0212                     	;# 
  4474  0213                     	;# 
  4475  0213                     	;# 
  4476  0214                     	;# 
  4477  0214                     	;# 
  4478  0215                     	;# 
  4479  0215                     	;# 
  4480  0215                     	;# 
  4481  0215                     	;# 
  4482  0216                     	;# 
  4483  0216                     	;# 
  4484  0217                     	;# 
  4485  0217                     	;# 
  4486  0219                     	;# 
  4487  021A                     	;# 
  4488  021B                     	;# 
  4489  021C                     	;# 
  4490  021D                     	;# 
  4491  021D                     	;# 
  4492  021E                     	;# 
  4493  021F                     	;# 
  4494  028C                     	;# 
  4495  028D                     	;# 
  4496  028E                     	;# 
  4497  0291                     	;# 
  4498  0291                     	;# 
  4499  0292                     	;# 
  4500  0293                     	;# 
  4501  0294                     	;# 
  4502  0295                     	;# 
  4503  0295                     	;# 
  4504  0296                     	;# 
  4505  0297                     	;# 
  4506  0298                     	;# 
  4507  029F                     	;# 
  4508  030C                     	;# 
  4509  030D                     	;# 
  4510  030E                     	;# 
  4511  0311                     	;# 
  4512  0311                     	;# 
  4513  0312                     	;# 
  4514  0313                     	;# 
  4515  0314                     	;# 
  4516  0315                     	;# 
  4517  0315                     	;# 
  4518  0316                     	;# 
  4519  0317                     	;# 
  4520  0318                     	;# 
  4521  038C                     	;# 
  4522  038D                     	;# 
  4523  038E                     	;# 
  4524  0391                     	;# 
  4525  0392                     	;# 
  4526  0393                     	;# 
  4527  0394                     	;# 
  4528  0395                     	;# 
  4529  0396                     	;# 
  4530  0397                     	;# 
  4531  0398                     	;# 
  4532  0399                     	;# 
  4533  039A                     	;# 
  4534  039C                     	;# 
  4535  039D                     	;# 
  4536  039E                     	;# 
  4537  039F                     	;# 
  4538  0411                     	;# 
  4539  0411                     	;# 
  4540  0412                     	;# 
  4541  0413                     	;# 
  4542  0414                     	;# 
  4543  0415                     	;# 
  4544  0416                     	;# 
  4545  0417                     	;# 
  4546  0418                     	;# 
  4547  0418                     	;# 
  4548  0419                     	;# 
  4549  041A                     	;# 
  4550  041B                     	;# 
  4551  041C                     	;# 
  4552  041D                     	;# 
  4553  041E                     	;# 
  4554  041F                     	;# 
  4555  0498                     	;# 
  4556  0498                     	;# 
  4557  0499                     	;# 
  4558  049A                     	;# 
  4559  049B                     	;# 
  4560  049B                     	;# 
  4561  049C                     	;# 
  4562  049D                     	;# 
  4563  049E                     	;# 
  4564  049F                     	;# 
  4565  0617                     	;# 
  4566  0618                     	;# 
  4567  0619                     	;# 
  4568  0619                     	;# 
  4569  061A                     	;# 
  4570  061B                     	;# 
  4571  061C                     	;# 
  4572  061C                     	;# 
  4573  061F                     	;# 
  4574  0691                     	;# 
  4575  0692                     	;# 
  4576  0693                     	;# 
  4577  0694                     	;# 
  4578  0695                     	;# 
  4579  0696                     	;# 
  4580  0697                     	;# 
  4581  0698                     	;# 
  4582  0699                     	;# 
  4583  0711                     	;# 
  4584  0712                     	;# 
  4585  0713                     	;# 
  4586  0714                     	;# 
  4587  0715                     	;# 
  4588  0716                     	;# 
  4589  0717                     	;# 
  4590  0718                     	;# 
  4591  0719                     	;# 
  4592  0891                     	;# 
  4593  0891                     	;# 
  4594  0891                     	;# 
  4595  0891                     	;# 
  4596  0891                     	;# 
  4597  0891                     	;# 
  4598  0892                     	;# 
  4599  0892                     	;# 
  4600  0892                     	;# 
  4601  0893                     	;# 
  4602  0893                     	;# 
  4603  0893                     	;# 
  4604  0893                     	;# 
  4605  0893                     	;# 
  4606  0893                     	;# 
  4607  0894                     	;# 
  4608  0894                     	;# 
  4609  0894                     	;# 
  4610  0895                     	;# 
  4611  0895                     	;# 
  4612  0895                     	;# 
  4613  0896                     	;# 
  4614  0896                     	;# 
  4615  0896                     	;# 
  4616  089B                     	;# 
  4617  0911                     	;# 
  4618  0912                     	;# 
  4619  0913                     	;# 
  4620  0914                     	;# 
  4621  0915                     	;# 
  4622  0916                     	;# 
  4623  0918                     	;# 
  4624  0919                     	;# 
  4625  091A                     	;# 
  4626  091B                     	;# 
  4627  091C                     	;# 
  4628  091D                     	;# 
  4629  091E                     	;# 
  4630  091F                     	;# 
  4631  0E0F                     	;# 
  4632  0E10                     	;# 
  4633  0E11                     	;# 
  4634  0E12                     	;# 
  4635  0E13                     	;# 
  4636  0E14                     	;# 
  4637  0E15                     	;# 
  4638  0E16                     	;# 
  4639  0E17                     	;# 
  4640  0E18                     	;# 
  4641  0E19                     	;# 
  4642  0E1A                     	;# 
  4643  0E1B                     	;# 
  4644  0E1C                     	;# 
  4645  0E1D                     	;# 
  4646  0E1E                     	;# 
  4647  0E1F                     	;# 
  4648  0E20                     	;# 
  4649  0E21                     	;# 
  4650  0E22                     	;# 
  4651  0E24                     	;# 
  4652  0E25                     	;# 
  4653  0E28                     	;# 
  4654  0E29                     	;# 
  4655  0E2A                     	;# 
  4656  0E2B                     	;# 
  4657  0E2C                     	;# 
  4658  0E2D                     	;# 
  4659  0E2E                     	;# 
  4660  0E2F                     	;# 
  4661  0E90                     	;# 
  4662  0E91                     	;# 
  4663  0E92                     	;# 
  4664  0E94                     	;# 
  4665  0E95                     	;# 
  4666  0E9C                     	;# 
  4667  0E9D                     	;# 
  4668  0E9E                     	;# 
  4669  0E9F                     	;# 
  4670  0EA0                     	;# 
  4671  0EA1                     	;# 
  4672  0EA2                     	;# 
  4673  0EA3                     	;# 
  4674  0EA4                     	;# 
  4675  0EA5                     	;# 
  4676  0EA6                     	;# 
  4677  0EA7                     	;# 
  4678  0F0F                     	;# 
  4679  0F10                     	;# 
  4680  0F11                     	;# 
  4681  0F12                     	;# 
  4682  0F13                     	;# 
  4683  0F14                     	;# 
  4684  0F15                     	;# 
  4685  0F16                     	;# 
  4686  0F17                     	;# 
  4687  0F18                     	;# 
  4688  0F19                     	;# 
  4689  0F1A                     	;# 
  4690  0F1B                     	;# 
  4691  0F1C                     	;# 
  4692  0F1D                     	;# 
  4693  0F1E                     	;# 
  4694  0F1F                     	;# 
  4695  0F20                     	;# 
  4696  0F21                     	;# 
  4697  0F22                     	;# 
  4698  0F23                     	;# 
  4699  0F24                     	;# 
  4700  0F25                     	;# 
  4701  0F26                     	;# 
  4702  0F27                     	;# 
  4703  0F28                     	;# 
  4704  0F29                     	;# 
  4705  0F2A                     	;# 
  4706  0F2B                     	;# 
  4707  0F2C                     	;# 
  4708  0F2D                     	;# 
  4709  0F2E                     	;# 
  4710  0F2F                     	;# 
  4711  0F30                     	;# 
  4712  0F31                     	;# 
  4713  0F32                     	;# 
  4714  0F33                     	;# 
  4715  0F34                     	;# 
  4716  0F35                     	;# 
  4717  0F36                     	;# 
  4718  0F37                     	;# 
  4719  0FE4                     	;# 
  4720  0FE5                     	;# 
  4721  0FE6                     	;# 
  4722  0FE7                     	;# 
  4723  0FE8                     	;# 
  4724  0FE9                     	;# 
  4725  0FEA                     	;# 
  4726  0FEB                     	;# 
  4727  0FED                     	;# 
  4728  0FEE                     	;# 
  4729  0FEF                     	;# 
  4730  0000                     	;# 
  4731  0001                     	;# 
  4732  0002                     	;# 
  4733  0003                     	;# 
  4734  0004                     	;# 
  4735  0005                     	;# 
  4736  0006                     	;# 
  4737  0007                     	;# 
  4738  0008                     	;# 
  4739  0009                     	;# 
  4740  000A                     	;# 
  4741  000B                     	;# 
  4742  000C                     	;# 
  4743  000D                     	;# 
  4744  000E                     	;# 
  4745  0010                     	;# 
  4746  0011                     	;# 
  4747  0012                     	;# 
  4748  0013                     	;# 
  4749  0014                     	;# 
  4750  0015                     	;# 
  4751  0015                     	;# 
  4752  0016                     	;# 
  4753  0016                     	;# 
  4754  0017                     	;# 
  4755  0018                     	;# 
  4756  0019                     	;# 
  4757  0019                     	;# 
  4758  001A                     	;# 
  4759  001B                     	;# 
  4760  001C                     	;# 
  4761  001D                     	;# 
  4762  001E                     	;# 
  4763  001F                     	;# 
  4764  008C                     	;# 
  4765  008D                     	;# 
  4766  008E                     	;# 
  4767  0090                     	;# 
  4768  0091                     	;# 
  4769  0092                     	;# 
  4770  0093                     	;# 
  4771  0094                     	;# 
  4772  0097                     	;# 
  4773  009B                     	;# 
  4774  009B                     	;# 
  4775  009C                     	;# 
  4776  009D                     	;# 
  4777  009E                     	;# 
  4778  009F                     	;# 
  4779  010C                     	;# 
  4780  010D                     	;# 
  4781  010E                     	;# 
  4782  0111                     	;# 
  4783  0112                     	;# 
  4784  0113                     	;# 
  4785  0114                     	;# 
  4786  0115                     	;# 
  4787  0116                     	;# 
  4788  0117                     	;# 
  4789  0118                     	;# 
  4790  0119                     	;# 
  4791  018C                     	;# 
  4792  018D                     	;# 
  4793  018E                     	;# 
  4794  0197                     	;# 
  4795  0199                     	;# 
  4796  0199                     	;# 
  4797  0199                     	;# 
  4798  019A                     	;# 
  4799  019A                     	;# 
  4800  019A                     	;# 
  4801  019B                     	;# 
  4802  019B                     	;# 
  4803  019B                     	;# 
  4804  019B                     	;# 
  4805  019B                     	;# 
  4806  019C                     	;# 
  4807  019C                     	;# 
  4808  019C                     	;# 
  4809  019D                     	;# 
  4810  019D                     	;# 
  4811  019D                     	;# 
  4812  019E                     	;# 
  4813  019E                     	;# 
  4814  019E                     	;# 
  4815  019F                     	;# 
  4816  019F                     	;# 
  4817  019F                     	;# 
  4818  019F                     	;# 
  4819  019F                     	;# 
  4820  020C                     	;# 
  4821  020D                     	;# 
  4822  020E                     	;# 
  4823  0211                     	;# 
  4824  0211                     	;# 
  4825  0212                     	;# 
  4826  0212                     	;# 
  4827  0213                     	;# 
  4828  0213                     	;# 
  4829  0214                     	;# 
  4830  0214                     	;# 
  4831  0215                     	;# 
  4832  0215                     	;# 
  4833  0215                     	;# 
  4834  0215                     	;# 
  4835  0216                     	;# 
  4836  0216                     	;# 
  4837  0217                     	;# 
  4838  0217                     	;# 
  4839  0219                     	;# 
  4840  021A                     	;# 
  4841  021B                     	;# 
  4842  021C                     	;# 
  4843  021D                     	;# 
  4844  021D                     	;# 
  4845  021E                     	;# 
  4846  021F                     	;# 
  4847  028C                     	;# 
  4848  028D                     	;# 
  4849  028E                     	;# 
  4850  0291                     	;# 
  4851  0291                     	;# 
  4852  0292                     	;# 
  4853  0293                     	;# 
  4854  0294                     	;# 
  4855  0295                     	;# 
  4856  0295                     	;# 
  4857  0296                     	;# 
  4858  0297                     	;# 
  4859  0298                     	;# 
  4860  029F                     	;# 
  4861  030C                     	;# 
  4862  030D                     	;# 
  4863  030E                     	;# 
  4864  0311                     	;# 
  4865  0311                     	;# 
  4866  0312                     	;# 
  4867  0313                     	;# 
  4868  0314                     	;# 
  4869  0315                     	;# 
  4870  0315                     	;# 
  4871  0316                     	;# 
  4872  0317                     	;# 
  4873  0318                     	;# 
  4874  038C                     	;# 
  4875  038D                     	;# 
  4876  038E                     	;# 
  4877  0391                     	;# 
  4878  0392                     	;# 
  4879  0393                     	;# 
  4880  0394                     	;# 
  4881  0395                     	;# 
  4882  0396                     	;# 
  4883  0397                     	;# 
  4884  0398                     	;# 
  4885  0399                     	;# 
  4886  039A                     	;# 
  4887  039C                     	;# 
  4888  039D                     	;# 
  4889  039E                     	;# 
  4890  039F                     	;# 
  4891  0411                     	;# 
  4892  0411                     	;# 
  4893  0412                     	;# 
  4894  0413                     	;# 
  4895  0414                     	;# 
  4896  0415                     	;# 
  4897  0416                     	;# 
  4898  0417                     	;# 
  4899  0418                     	;# 
  4900  0418                     	;# 
  4901  0419                     	;# 
  4902  041A                     	;# 
  4903  041B                     	;# 
  4904  041C                     	;# 
  4905  041D                     	;# 
  4906  041E                     	;# 
  4907  041F                     	;# 
  4908  0498                     	;# 
  4909  0498                     	;# 
  4910  0499                     	;# 
  4911  049A                     	;# 
  4912  049B                     	;# 
  4913  049B                     	;# 
  4914  049C                     	;# 
  4915  049D                     	;# 
  4916  049E                     	;# 
  4917  049F                     	;# 
  4918  0617                     	;# 
  4919  0618                     	;# 
  4920  0619                     	;# 
  4921  0619                     	;# 
  4922  061A                     	;# 
  4923  061B                     	;# 
  4924  061C                     	;# 
  4925  061C                     	;# 
  4926  061F                     	;# 
  4927  0691                     	;# 
  4928  0692                     	;# 
  4929  0693                     	;# 
  4930  0694                     	;# 
  4931  0695                     	;# 
  4932  0696                     	;# 
  4933  0697                     	;# 
  4934  0698                     	;# 
  4935  0699                     	;# 
  4936  0711                     	;# 
  4937  0712                     	;# 
  4938  0713                     	;# 
  4939  0714                     	;# 
  4940  0715                     	;# 
  4941  0716                     	;# 
  4942  0717                     	;# 
  4943  0718                     	;# 
  4944  0719                     	;# 
  4945  0891                     	;# 
  4946  0891                     	;# 
  4947  0891                     	;# 
  4948  0891                     	;# 
  4949  0891                     	;# 
  4950  0891                     	;# 
  4951  0892                     	;# 
  4952  0892                     	;# 
  4953  0892                     	;# 
  4954  0893                     	;# 
  4955  0893                     	;# 
  4956  0893                     	;# 
  4957  0893                     	;# 
  4958  0893                     	;# 
  4959  0893                     	;# 
  4960  0894                     	;# 
  4961  0894                     	;# 
  4962  0894                     	;# 
  4963  0895                     	;# 
  4964  0895                     	;# 
  4965  0895                     	;# 
  4966  0896                     	;# 
  4967  0896                     	;# 
  4968  0896                     	;# 
  4969  089B                     	;# 
  4970  0911                     	;# 
  4971  0912                     	;# 
  4972  0913                     	;# 
  4973  0914                     	;# 
  4974  0915                     	;# 
  4975  0916                     	;# 
  4976  0918                     	;# 
  4977  0919                     	;# 
  4978  091A                     	;# 
  4979  091B                     	;# 
  4980  091C                     	;# 
  4981  091D                     	;# 
  4982  091E                     	;# 
  4983  091F                     	;# 
  4984  0E0F                     	;# 
  4985  0E10                     	;# 
  4986  0E11                     	;# 
  4987  0E12                     	;# 
  4988  0E13                     	;# 
  4989  0E14                     	;# 
  4990  0E15                     	;# 
  4991  0E16                     	;# 
  4992  0E17                     	;# 
  4993  0E18                     	;# 
  4994  0E19                     	;# 
  4995  0E1A                     	;# 
  4996  0E1B                     	;# 
  4997  0E1C                     	;# 
  4998  0E1D                     	;# 
  4999  0E1E                     	;# 
  5000  0E1F                     	;# 
  5001  0E20                     	;# 
  5002  0E21                     	;# 
  5003  0E22                     	;# 
  5004  0E24                     	;# 
  5005  0E25                     	;# 
  5006  0E28                     	;# 
  5007  0E29                     	;# 
  5008  0E2A                     	;# 
  5009  0E2B                     	;# 
  5010  0E2C                     	;# 
  5011  0E2D                     	;# 
  5012  0E2E                     	;# 
  5013  0E2F                     	;# 
  5014  0E90                     	;# 
  5015  0E91                     	;# 
  5016  0E92                     	;# 
  5017  0E94                     	;# 
  5018  0E95                     	;# 
  5019  0E9C                     	;# 
  5020  0E9D                     	;# 
  5021  0E9E                     	;# 
  5022  0E9F                     	;# 
  5023  0EA0                     	;# 
  5024  0EA1                     	;# 
  5025  0EA2                     	;# 
  5026  0EA3                     	;# 
  5027  0EA4                     	;# 
  5028  0EA5                     	;# 
  5029  0EA6                     	;# 
  5030  0EA7                     	;# 
  5031  0F0F                     	;# 
  5032  0F10                     	;# 
  5033  0F11                     	;# 
  5034  0F12                     	;# 
  5035  0F13                     	;# 
  5036  0F14                     	;# 
  5037  0F15                     	;# 
  5038  0F16                     	;# 
  5039  0F17                     	;# 
  5040  0F18                     	;# 
  5041  0F19                     	;# 
  5042  0F1A                     	;# 
  5043  0F1B                     	;# 
  5044  0F1C                     	;# 
  5045  0F1D                     	;# 
  5046  0F1E                     	;# 
  5047  0F1F                     	;# 
  5048  0F20                     	;# 
  5049  0F21                     	;# 
  5050  0F22                     	;# 
  5051  0F23                     	;# 
  5052  0F24                     	;# 
  5053  0F25                     	;# 
  5054  0F26                     	;# 
  5055  0F27                     	;# 
  5056  0F28                     	;# 
  5057  0F29                     	;# 
  5058  0F2A                     	;# 
  5059  0F2B                     	;# 
  5060  0F2C                     	;# 
  5061  0F2D                     	;# 
  5062  0F2E                     	;# 
  5063  0F2F                     	;# 
  5064  0F30                     	;# 
  5065  0F31                     	;# 
  5066  0F32                     	;# 
  5067  0F33                     	;# 
  5068  0F34                     	;# 
  5069  0F35                     	;# 
  5070  0F36                     	;# 
  5071  0F37                     	;# 
  5072  0FE4                     	;# 
  5073  0FE5                     	;# 
  5074  0FE6                     	;# 
  5075  0FE7                     	;# 
  5076  0FE8                     	;# 
  5077  0FE9                     	;# 
  5078  0FEA                     	;# 
  5079  0FEB                     	;# 
  5080  0FED                     	;# 
  5081  0FEE                     	;# 
  5082  0FEF                     	;# 
  5083  0000                     	;# 
  5084  0001                     	;# 
  5085  0002                     	;# 
  5086  0003                     	;# 
  5087  0004                     	;# 
  5088  0005                     	;# 
  5089  0006                     	;# 
  5090  0007                     	;# 
  5091  0008                     	;# 
  5092  0009                     	;# 
  5093  000A                     	;# 
  5094  000B                     	;# 
  5095  000C                     	;# 
  5096  000D                     	;# 
  5097  000E                     	;# 
  5098  0010                     	;# 
  5099  0011                     	;# 
  5100  0012                     	;# 
  5101  0013                     	;# 
  5102  0014                     	;# 
  5103  0015                     	;# 
  5104  0015                     	;# 
  5105  0016                     	;# 
  5106  0016                     	;# 
  5107  0017                     	;# 
  5108  0018                     	;# 
  5109  0019                     	;# 
  5110  0019                     	;# 
  5111  001A                     	;# 
  5112  001B                     	;# 
  5113  001C                     	;# 
  5114  001D                     	;# 
  5115  001E                     	;# 
  5116  001F                     	;# 
  5117  008C                     	;# 
  5118  008D                     	;# 
  5119  008E                     	;# 
  5120  0090                     	;# 
  5121  0091                     	;# 
  5122  0092                     	;# 
  5123  0093                     	;# 
  5124  0094                     	;# 
  5125  0097                     	;# 
  5126  009B                     	;# 
  5127  009B                     	;# 
  5128  009C                     	;# 
  5129  009D                     	;# 
  5130  009E                     	;# 
  5131  009F                     	;# 
  5132  010C                     	;# 
  5133  010D                     	;# 
  5134  010E                     	;# 
  5135  0111                     	;# 
  5136  0112                     	;# 
  5137  0113                     	;# 
  5138  0114                     	;# 
  5139  0115                     	;# 
  5140  0116                     	;# 
  5141  0117                     	;# 
  5142  0118                     	;# 
  5143  0119                     	;# 
  5144  018C                     	;# 
  5145  018D                     	;# 
  5146  018E                     	;# 
  5147  0197                     	;# 
  5148  0199                     	;# 
  5149  0199                     	;# 
  5150  0199                     	;# 
  5151  019A                     	;# 
  5152  019A                     	;# 
  5153  019A                     	;# 
  5154  019B                     	;# 
  5155  019B                     	;# 
  5156  019B                     	;# 
  5157  019B                     	;# 
  5158  019B                     	;# 
  5159  019C                     	;# 
  5160  019C                     	;# 
  5161  019C                     	;# 
  5162  019D                     	;# 
  5163  019D                     	;# 
  5164  019D                     	;# 
  5165  019E                     	;# 
  5166  019E                     	;# 
  5167  019E                     	;# 
  5168  019F                     	;# 
  5169  019F                     	;# 
  5170  019F                     	;# 
  5171  019F                     	;# 
  5172  019F                     	;# 
  5173  020C                     	;# 
  5174  020D                     	;# 
  5175  020E                     	;# 
  5176  0211                     	;# 
  5177  0211                     	;# 
  5178  0212                     	;# 
  5179  0212                     	;# 
  5180  0213                     	;# 
  5181  0213                     	;# 
  5182  0214                     	;# 
  5183  0214                     	;# 
  5184  0215                     	;# 
  5185  0215                     	;# 
  5186  0215                     	;# 
  5187  0215                     	;# 
  5188  0216                     	;# 
  5189  0216                     	;# 
  5190  0217                     	;# 
  5191  0217                     	;# 
  5192  0219                     	;# 
  5193  021A                     	;# 
  5194  021B                     	;# 
  5195  021C                     	;# 
  5196  021D                     	;# 
  5197  021D                     	;# 
  5198  021E                     	;# 
  5199  021F                     	;# 
  5200  028C                     	;# 
  5201  028D                     	;# 
  5202  028E                     	;# 
  5203  0291                     	;# 
  5204  0291                     	;# 
  5205  0292                     	;# 
  5206  0293                     	;# 
  5207  0294                     	;# 
  5208  0295                     	;# 
  5209  0295                     	;# 
  5210  0296                     	;# 
  5211  0297                     	;# 
  5212  0298                     	;# 
  5213  029F                     	;# 
  5214  030C                     	;# 
  5215  030D                     	;# 
  5216  030E                     	;# 
  5217  0311                     	;# 
  5218  0311                     	;# 
  5219  0312                     	;# 
  5220  0313                     	;# 
  5221  0314                     	;# 
  5222  0315                     	;# 
  5223  0315                     	;# 
  5224  0316                     	;# 
  5225  0317                     	;# 
  5226  0318                     	;# 
  5227  038C                     	;# 
  5228  038D                     	;# 
  5229  038E                     	;# 
  5230  0391                     	;# 
  5231  0392                     	;# 
  5232  0393                     	;# 
  5233  0394                     	;# 
  5234  0395                     	;# 
  5235  0396                     	;# 
  5236  0397                     	;# 
  5237  0398                     	;# 
  5238  0399                     	;# 
  5239  039A                     	;# 
  5240  039C                     	;# 
  5241  039D                     	;# 
  5242  039E                     	;# 
  5243  039F                     	;# 
  5244  0411                     	;# 
  5245  0411                     	;# 
  5246  0412                     	;# 
  5247  0413                     	;# 
  5248  0414                     	;# 
  5249  0415                     	;# 
  5250  0416                     	;# 
  5251  0417                     	;# 
  5252  0418                     	;# 
  5253  0418                     	;# 
  5254  0419                     	;# 
  5255  041A                     	;# 
  5256  041B                     	;# 
  5257  041C                     	;# 
  5258  041D                     	;# 
  5259  041E                     	;# 
  5260  041F                     	;# 
  5261  0498                     	;# 
  5262  0498                     	;# 
  5263  0499                     	;# 
  5264  049A                     	;# 
  5265  049B                     	;# 
  5266  049B                     	;# 
  5267  049C                     	;# 
  5268  049D                     	;# 
  5269  049E                     	;# 
  5270  049F                     	;# 
  5271  0617                     	;# 
  5272  0618                     	;# 
  5273  0619                     	;# 
  5274  0619                     	;# 
  5275  061A                     	;# 
  5276  061B                     	;# 
  5277  061C                     	;# 
  5278  061C                     	;# 
  5279  061F                     	;# 
  5280  0691                     	;# 
  5281  0692                     	;# 
  5282  0693                     	;# 
  5283  0694                     	;# 
  5284  0695                     	;# 
  5285  0696                     	;# 
  5286  0697                     	;# 
  5287  0698                     	;# 
  5288  0699                     	;# 
  5289  0711                     	;# 
  5290  0712                     	;# 
  5291  0713                     	;# 
  5292  0714                     	;# 
  5293  0715                     	;# 
  5294  0716                     	;# 
  5295  0717                     	;# 
  5296  0718                     	;# 
  5297  0719                     	;# 
  5298  0891                     	;# 
  5299  0891                     	;# 
  5300  0891                     	;# 
  5301  0891                     	;# 
  5302  0891                     	;# 
  5303  0891                     	;# 
  5304  0892                     	;# 
  5305  0892                     	;# 
  5306  0892                     	;# 
  5307  0893                     	;# 
  5308  0893                     	;# 
  5309  0893                     	;# 
  5310  0893                     	;# 
  5311  0893                     	;# 
  5312  0893                     	;# 
  5313  0894                     	;# 
  5314  0894                     	;# 
  5315  0894                     	;# 
  5316  0895                     	;# 
  5317  0895                     	;# 
  5318  0895                     	;# 
  5319  0896                     	;# 
  5320  0896                     	;# 
  5321  0896                     	;# 
  5322  089B                     	;# 
  5323  0911                     	;# 
  5324  0912                     	;# 
  5325  0913                     	;# 
  5326  0914                     	;# 
  5327  0915                     	;# 
  5328  0916                     	;# 
  5329  0918                     	;# 
  5330  0919                     	;# 
  5331  091A                     	;# 
  5332  091B                     	;# 
  5333  091C                     	;# 
  5334  091D                     	;# 
  5335  091E                     	;# 
  5336  091F                     	;# 
  5337  0E0F                     	;# 
  5338  0E10                     	;# 
  5339  0E11                     	;# 
  5340  0E12                     	;# 
  5341  0E13                     	;# 
  5342  0E14                     	;# 
  5343  0E15                     	;# 
  5344  0E16                     	;# 
  5345  0E17                     	;# 
  5346  0E18                     	;# 
  5347  0E19                     	;# 
  5348  0E1A                     	;# 
  5349  0E1B                     	;# 
  5350  0E1C                     	;# 
  5351  0E1D                     	;# 
  5352  0E1E                     	;# 
  5353  0E1F                     	;# 
  5354  0E20                     	;# 
  5355  0E21                     	;# 
  5356  0E22                     	;# 
  5357  0E24                     	;# 
  5358  0E25                     	;# 
  5359  0E28                     	;# 
  5360  0E29                     	;# 
  5361  0E2A                     	;# 
  5362  0E2B                     	;# 
  5363  0E2C                     	;# 
  5364  0E2D                     	;# 
  5365  0E2E                     	;# 
  5366  0E2F                     	;# 
  5367  0E90                     	;# 
  5368  0E91                     	;# 
  5369  0E92                     	;# 
  5370  0E94                     	;# 
  5371  0E95                     	;# 
  5372  0E9C                     	;# 
  5373  0E9D                     	;# 
  5374  0E9E                     	;# 
  5375  0E9F                     	;# 
  5376  0EA0                     	;# 
  5377  0EA1                     	;# 
  5378  0EA2                     	;# 
  5379  0EA3                     	;# 
  5380  0EA4                     	;# 
  5381  0EA5                     	;# 
  5382  0EA6                     	;# 
  5383  0EA7                     	;# 
  5384  0F0F                     	;# 
  5385  0F10                     	;# 
  5386  0F11                     	;# 
  5387  0F12                     	;# 
  5388  0F13                     	;# 
  5389  0F14                     	;# 
  5390  0F15                     	;# 
  5391  0F16                     	;# 
  5392  0F17                     	;# 
  5393  0F18                     	;# 
  5394  0F19                     	;# 
  5395  0F1A                     	;# 
  5396  0F1B                     	;# 
  5397  0F1C                     	;# 
  5398  0F1D                     	;# 
  5399  0F1E                     	;# 
  5400  0F1F                     	;# 
  5401  0F20                     	;# 
  5402  0F21                     	;# 
  5403  0F22                     	;# 
  5404  0F23                     	;# 
  5405  0F24                     	;# 
  5406  0F25                     	;# 
  5407  0F26                     	;# 
  5408  0F27                     	;# 
  5409  0F28                     	;# 
  5410  0F29                     	;# 
  5411  0F2A                     	;# 
  5412  0F2B                     	;# 
  5413  0F2C                     	;# 
  5414  0F2D                     	;# 
  5415  0F2E                     	;# 
  5416  0F2F                     	;# 
  5417  0F30                     	;# 
  5418  0F31                     	;# 
  5419  0F32                     	;# 
  5420  0F33                     	;# 
  5421  0F34                     	;# 
  5422  0F35                     	;# 
  5423  0F36                     	;# 
  5424  0F37                     	;# 
  5425  0FE4                     	;# 
  5426  0FE5                     	;# 
  5427  0FE6                     	;# 
  5428  0FE7                     	;# 
  5429  0FE8                     	;# 
  5430  0FE9                     	;# 
  5431  0FEA                     	;# 
  5432  0FEB                     	;# 
  5433  0FED                     	;# 
  5434  0FEE                     	;# 
  5435  0FEF                     	;# 
  5436  0000                     	;# 
  5437  0001                     	;# 
  5438  0002                     	;# 
  5439  0003                     	;# 
  5440  0004                     	;# 
  5441  0005                     	;# 
  5442  0006                     	;# 
  5443  0007                     	;# 
  5444  0008                     	;# 
  5445  0009                     	;# 
  5446  000A                     	;# 
  5447  000B                     	;# 
  5448  000C                     	;# 
  5449  000D                     	;# 
  5450  000E                     	;# 
  5451  0010                     	;# 
  5452  0011                     	;# 
  5453  0012                     	;# 
  5454  0013                     	;# 
  5455  0014                     	;# 
  5456  0015                     	;# 
  5457  0015                     	;# 
  5458  0016                     	;# 
  5459  0016                     	;# 
  5460  0017                     	;# 
  5461  0018                     	;# 
  5462  0019                     	;# 
  5463  0019                     	;# 
  5464  001A                     	;# 
  5465  001B                     	;# 
  5466  001C                     	;# 
  5467  001D                     	;# 
  5468  001E                     	;# 
  5469  001F                     	;# 
  5470  008C                     	;# 
  5471  008D                     	;# 
  5472  008E                     	;# 
  5473  0090                     	;# 
  5474  0091                     	;# 
  5475  0092                     	;# 
  5476  0093                     	;# 
  5477  0094                     	;# 
  5478  0097                     	;# 
  5479  009B                     	;# 
  5480  009B                     	;# 
  5481  009C                     	;# 
  5482  009D                     	;# 
  5483  009E                     	;# 
  5484  009F                     	;# 
  5485  010C                     	;# 
  5486  010D                     	;# 
  5487  010E                     	;# 
  5488  0111                     	;# 
  5489  0112                     	;# 
  5490  0113                     	;# 
  5491  0114                     	;# 
  5492  0115                     	;# 
  5493  0116                     	;# 
  5494  0117                     	;# 
  5495  0118                     	;# 
  5496  0119                     	;# 
  5497  018C                     	;# 
  5498  018D                     	;# 
  5499  018E                     	;# 
  5500  0197                     	;# 
  5501  0199                     	;# 
  5502  0199                     	;# 
  5503  0199                     	;# 
  5504  019A                     	;# 
  5505  019A                     	;# 
  5506  019A                     	;# 
  5507  019B                     	;# 
  5508  019B                     	;# 
  5509  019B                     	;# 
  5510  019B                     	;# 
  5511  019B                     	;# 
  5512  019C                     	;# 
  5513  019C                     	;# 
  5514  019C                     	;# 
  5515  019D                     	;# 
  5516  019D                     	;# 
  5517  019D                     	;# 
  5518  019E                     	;# 
  5519  019E                     	;# 
  5520  019E                     	;# 
  5521  019F                     	;# 
  5522  019F                     	;# 
  5523  019F                     	;# 
  5524  019F                     	;# 
  5525  019F                     	;# 
  5526  020C                     	;# 
  5527  020D                     	;# 
  5528  020E                     	;# 
  5529  0211                     	;# 
  5530  0211                     	;# 
  5531  0212                     	;# 
  5532  0212                     	;# 
  5533  0213                     	;# 
  5534  0213                     	;# 
  5535  0214                     	;# 
  5536  0214                     	;# 
  5537  0215                     	;# 
  5538  0215                     	;# 
  5539  0215                     	;# 
  5540  0215                     	;# 
  5541  0216                     	;# 
  5542  0216                     	;# 
  5543  0217                     	;# 
  5544  0217                     	;# 
  5545  0219                     	;# 
  5546  021A                     	;# 
  5547  021B                     	;# 
  5548  021C                     	;# 
  5549  021D                     	;# 
  5550  021D                     	;# 
  5551  021E                     	;# 
  5552  021F                     	;# 
  5553  028C                     	;# 
  5554  028D                     	;# 
  5555  028E                     	;# 
  5556  0291                     	;# 
  5557  0291                     	;# 
  5558  0292                     	;# 
  5559  0293                     	;# 
  5560  0294                     	;# 
  5561  0295                     	;# 
  5562  0295                     	;# 
  5563  0296                     	;# 
  5564  0297                     	;# 
  5565  0298                     	;# 
  5566  029F                     	;# 
  5567  030C                     	;# 
  5568  030D                     	;# 
  5569  030E                     	;# 
  5570  0311                     	;# 
  5571  0311                     	;# 
  5572  0312                     	;# 
  5573  0313                     	;# 
  5574  0314                     	;# 
  5575  0315                     	;# 
  5576  0315                     	;# 
  5577  0316                     	;# 
  5578  0317                     	;# 
  5579  0318                     	;# 
  5580  038C                     	;# 
  5581  038D                     	;# 
  5582  038E                     	;# 
  5583  0391                     	;# 
  5584  0392                     	;# 
  5585  0393                     	;# 
  5586  0394                     	;# 
  5587  0395                     	;# 
  5588  0396                     	;# 
  5589  0397                     	;# 
  5590  0398                     	;# 
  5591  0399                     	;# 
  5592  039A                     	;# 
  5593  039C                     	;# 
  5594  039D                     	;# 
  5595  039E                     	;# 
  5596  039F                     	;# 
  5597  0411                     	;# 
  5598  0411                     	;# 
  5599  0412                     	;# 
  5600  0413                     	;# 
  5601  0414                     	;# 
  5602  0415                     	;# 
  5603  0416                     	;# 
  5604  0417                     	;# 
  5605  0418                     	;# 
  5606  0418                     	;# 
  5607  0419                     	;# 
  5608  041A                     	;# 
  5609  041B                     	;# 
  5610  041C                     	;# 
  5611  041D                     	;# 
  5612  041E                     	;# 
  5613  041F                     	;# 
  5614  0498                     	;# 
  5615  0498                     	;# 
  5616  0499                     	;# 
  5617  049A                     	;# 
  5618  049B                     	;# 
  5619  049B                     	;# 
  5620  049C                     	;# 
  5621  049D                     	;# 
  5622  049E                     	;# 
  5623  049F                     	;# 
  5624  0617                     	;# 
  5625  0618                     	;# 
  5626  0619                     	;# 
  5627  0619                     	;# 
  5628  061A                     	;# 
  5629  061B                     	;# 
  5630  061C                     	;# 
  5631  061C                     	;# 
  5632  061F                     	;# 
  5633  0691                     	;# 
  5634  0692                     	;# 
  5635  0693                     	;# 
  5636  0694                     	;# 
  5637  0695                     	;# 
  5638  0696                     	;# 
  5639  0697                     	;# 
  5640  0698                     	;# 
  5641  0699                     	;# 
  5642  0711                     	;# 
  5643  0712                     	;# 
  5644  0713                     	;# 
  5645  0714                     	;# 
  5646  0715                     	;# 
  5647  0716                     	;# 
  5648  0717                     	;# 
  5649  0718                     	;# 
  5650  0719                     	;# 
  5651  0891                     	;# 
  5652  0891                     	;# 
  5653  0891                     	;# 
  5654  0891                     	;# 
  5655  0891                     	;# 
  5656  0891                     	;# 
  5657  0892                     	;# 
  5658  0892                     	;# 
  5659  0892                     	;# 
  5660  0893                     	;# 
  5661  0893                     	;# 
  5662  0893                     	;# 
  5663  0893                     	;# 
  5664  0893                     	;# 
  5665  0893                     	;# 
  5666  0894                     	;# 
  5667  0894                     	;# 
  5668  0894                     	;# 
  5669  0895                     	;# 
  5670  0895                     	;# 
  5671  0895                     	;# 
  5672  0896                     	;# 
  5673  0896                     	;# 
  5674  0896                     	;# 
  5675  089B                     	;# 
  5676  0911                     	;# 
  5677  0912                     	;# 
  5678  0913                     	;# 
  5679  0914                     	;# 
  5680  0915                     	;# 
  5681  0916                     	;# 
  5682  0918                     	;# 
  5683  0919                     	;# 
  5684  091A                     	;# 
  5685  091B                     	;# 
  5686  091C                     	;# 
  5687  091D                     	;# 
  5688  091E                     	;# 
  5689  091F                     	;# 
  5690  0E0F                     	;# 
  5691  0E10                     	;# 
  5692  0E11                     	;# 
  5693  0E12                     	;# 
  5694  0E13                     	;# 
  5695  0E14                     	;# 
  5696  0E15                     	;# 
  5697  0E16                     	;# 
  5698  0E17                     	;# 
  5699  0E18                     	;# 
  5700  0E19                     	;# 
  5701  0E1A                     	;# 
  5702  0E1B                     	;# 
  5703  0E1C                     	;# 
  5704  0E1D                     	;# 
  5705  0E1E                     	;# 
  5706  0E1F                     	;# 
  5707  0E20                     	;# 
  5708  0E21                     	;# 
  5709  0E22                     	;# 
  5710  0E24                     	;# 
  5711  0E25                     	;# 
  5712  0E28                     	;# 
  5713  0E29                     	;# 
  5714  0E2A                     	;# 
  5715  0E2B                     	;# 
  5716  0E2C                     	;# 
  5717  0E2D                     	;# 
  5718  0E2E                     	;# 
  5719  0E2F                     	;# 
  5720  0E90                     	;# 
  5721  0E91                     	;# 
  5722  0E92                     	;# 
  5723  0E94                     	;# 
  5724  0E95                     	;# 
  5725  0E9C                     	;# 
  5726  0E9D                     	;# 
  5727  0E9E                     	;# 
  5728  0E9F                     	;# 
  5729  0EA0                     	;# 
  5730  0EA1                     	;# 
  5731  0EA2                     	;# 
  5732  0EA3                     	;# 
  5733  0EA4                     	;# 
  5734  0EA5                     	;# 
  5735  0EA6                     	;# 
  5736  0EA7                     	;# 
  5737  0F0F                     	;# 
  5738  0F10                     	;# 
  5739  0F11                     	;# 
  5740  0F12                     	;# 
  5741  0F13                     	;# 
  5742  0F14                     	;# 
  5743  0F15                     	;# 
  5744  0F16                     	;# 
  5745  0F17                     	;# 
  5746  0F18                     	;# 
  5747  0F19                     	;# 
  5748  0F1A                     	;# 
  5749  0F1B                     	;# 
  5750  0F1C                     	;# 
  5751  0F1D                     	;# 
  5752  0F1E                     	;# 
  5753  0F1F                     	;# 
  5754  0F20                     	;# 
  5755  0F21                     	;# 
  5756  0F22                     	;# 
  5757  0F23                     	;# 
  5758  0F24                     	;# 
  5759  0F25                     	;# 
  5760  0F26                     	;# 
  5761  0F27                     	;# 
  5762  0F28                     	;# 
  5763  0F29                     	;# 
  5764  0F2A                     	;# 
  5765  0F2B                     	;# 
  5766  0F2C                     	;# 
  5767  0F2D                     	;# 
  5768  0F2E                     	;# 
  5769  0F2F                     	;# 
  5770  0F30                     	;# 
  5771  0F31                     	;# 
  5772  0F32                     	;# 
  5773  0F33                     	;# 
  5774  0F34                     	;# 
  5775  0F35                     	;# 
  5776  0F36                     	;# 
  5777  0F37                     	;# 
  5778  0FE4                     	;# 
  5779  0FE5                     	;# 
  5780  0FE6                     	;# 
  5781  0FE7                     	;# 
  5782  0FE8                     	;# 
  5783  0FE9                     	;# 
  5784  0FEA                     	;# 
  5785  0FEB                     	;# 
  5786  0FED                     	;# 
  5787  0FEE                     	;# 
  5788  0FEF                     	;# 
  5789  0000                     	;# 
  5790  0001                     	;# 
  5791  0002                     	;# 
  5792  0003                     	;# 
  5793  0004                     	;# 
  5794  0005                     	;# 
  5795  0006                     	;# 
  5796  0007                     	;# 
  5797  0008                     	;# 
  5798  0009                     	;# 
  5799  000A                     	;# 
  5800  000B                     	;# 
  5801  000C                     	;# 
  5802  000D                     	;# 
  5803  000E                     	;# 
  5804  0010                     	;# 
  5805  0011                     	;# 
  5806  0012                     	;# 
  5807  0013                     	;# 
  5808  0014                     	;# 
  5809  0015                     	;# 
  5810  0015                     	;# 
  5811  0016                     	;# 
  5812  0016                     	;# 
  5813  0017                     	;# 
  5814  0018                     	;# 
  5815  0019                     	;# 
  5816  0019                     	;# 
  5817  001A                     	;# 
  5818  001B                     	;# 
  5819  001C                     	;# 
  5820  001D                     	;# 
  5821  001E                     	;# 
  5822  001F                     	;# 
  5823  008C                     	;# 
  5824  008D                     	;# 
  5825  008E                     	;# 
  5826  0090                     	;# 
  5827  0091                     	;# 
  5828  0092                     	;# 
  5829  0093                     	;# 
  5830  0094                     	;# 
  5831  0097                     	;# 
  5832  009B                     	;# 
  5833  009B                     	;# 
  5834  009C                     	;# 
  5835  009D                     	;# 
  5836  009E                     	;# 
  5837  009F                     	;# 
  5838  010C                     	;# 
  5839  010D                     	;# 
  5840  010E                     	;# 
  5841  0111                     	;# 
  5842  0112                     	;# 
  5843  0113                     	;# 
  5844  0114                     	;# 
  5845  0115                     	;# 
  5846  0116                     	;# 
  5847  0117                     	;# 
  5848  0118                     	;# 
  5849  0119                     	;# 
  5850  018C                     	;# 
  5851  018D                     	;# 
  5852  018E                     	;# 
  5853  0197                     	;# 
  5854  0199                     	;# 
  5855  0199                     	;# 
  5856  0199                     	;# 
  5857  019A                     	;# 
  5858  019A                     	;# 
  5859  019A                     	;# 
  5860  019B                     	;# 
  5861  019B                     	;# 
  5862  019B                     	;# 
  5863  019B                     	;# 
  5864  019B                     	;# 
  5865  019C                     	;# 
  5866  019C                     	;# 
  5867  019C                     	;# 
  5868  019D                     	;# 
  5869  019D                     	;# 
  5870  019D                     	;# 
  5871  019E                     	;# 
  5872  019E                     	;# 
  5873  019E                     	;# 
  5874  019F                     	;# 
  5875  019F                     	;# 
  5876  019F                     	;# 
  5877  019F                     	;# 
  5878  019F                     	;# 
  5879  020C                     	;# 
  5880  020D                     	;# 
  5881  020E                     	;# 
  5882  0211                     	;# 
  5883  0211                     	;# 
  5884  0212                     	;# 
  5885  0212                     	;# 
  5886  0213                     	;# 
  5887  0213                     	;# 
  5888  0214                     	;# 
  5889  0214                     	;# 
  5890  0215                     	;# 
  5891  0215                     	;# 
  5892  0215                     	;# 
  5893  0215                     	;# 
  5894  0216                     	;# 
  5895  0216                     	;# 
  5896  0217                     	;# 
  5897  0217                     	;# 
  5898  0219                     	;# 
  5899  021A                     	;# 
  5900  021B                     	;# 
  5901  021C                     	;# 
  5902  021D                     	;# 
  5903  021D                     	;# 
  5904  021E                     	;# 
  5905  021F                     	;# 
  5906  028C                     	;# 
  5907  028D                     	;# 
  5908  028E                     	;# 
  5909  0291                     	;# 
  5910  0291                     	;# 
  5911  0292                     	;# 
  5912  0293                     	;# 
  5913  0294                     	;# 
  5914  0295                     	;# 
  5915  0295                     	;# 
  5916  0296                     	;# 
  5917  0297                     	;# 
  5918  0298                     	;# 
  5919  029F                     	;# 
  5920  030C                     	;# 
  5921  030D                     	;# 
  5922  030E                     	;# 
  5923  0311                     	;# 
  5924  0311                     	;# 
  5925  0312                     	;# 
  5926  0313                     	;# 
  5927  0314                     	;# 
  5928  0315                     	;# 
  5929  0315                     	;# 
  5930  0316                     	;# 
  5931  0317                     	;# 
  5932  0318                     	;# 
  5933  038C                     	;# 
  5934  038D                     	;# 
  5935  038E                     	;# 
  5936  0391                     	;# 
  5937  0392                     	;# 
  5938  0393                     	;# 
  5939  0394                     	;# 
  5940  0395                     	;# 
  5941  0396                     	;# 
  5942  0397                     	;# 
  5943  0398                     	;# 
  5944  0399                     	;# 
  5945  039A                     	;# 
  5946  039C                     	;# 
  5947  039D                     	;# 
  5948  039E                     	;# 
  5949  039F                     	;# 
  5950  0411                     	;# 
  5951  0411                     	;# 
  5952  0412                     	;# 
  5953  0413                     	;# 
  5954  0414                     	;# 
  5955  0415                     	;# 
  5956  0416                     	;# 
  5957  0417                     	;# 
  5958  0418                     	;# 
  5959  0418                     	;# 
  5960  0419                     	;# 
  5961  041A                     	;# 
  5962  041B                     	;# 
  5963  041C                     	;# 
  5964  041D                     	;# 
  5965  041E                     	;# 
  5966  041F                     	;# 
  5967  0498                     	;# 
  5968  0498                     	;# 
  5969  0499                     	;# 
  5970  049A                     	;# 
  5971  049B                     	;# 
  5972  049B                     	;# 
  5973  049C                     	;# 
  5974  049D                     	;# 
  5975  049E                     	;# 
  5976  049F                     	;# 
  5977  0617                     	;# 
  5978  0618                     	;# 
  5979  0619                     	;# 
  5980  0619                     	;# 
  5981  061A                     	;# 
  5982  061B                     	;# 
  5983  061C                     	;# 
  5984  061C                     	;# 
  5985  061F                     	;# 
  5986  0691                     	;# 
  5987  0692                     	;# 
  5988  0693                     	;# 
  5989  0694                     	;# 
  5990  0695                     	;# 
  5991  0696                     	;# 
  5992  0697                     	;# 
  5993  0698                     	;# 
  5994  0699                     	;# 
  5995  0711                     	;# 
  5996  0712                     	;# 
  5997  0713                     	;# 
  5998  0714                     	;# 
  5999  0715                     	;# 
  6000  0716                     	;# 
  6001  0717                     	;# 
  6002  0718                     	;# 
  6003  0719                     	;# 
  6004  0891                     	;# 
  6005  0891                     	;# 
  6006  0891                     	;# 
  6007  0891                     	;# 
  6008  0891                     	;# 
  6009  0891                     	;# 
  6010  0892                     	;# 
  6011  0892                     	;# 
  6012  0892                     	;# 
  6013  0893                     	;# 
  6014  0893                     	;# 
  6015  0893                     	;# 
  6016  0893                     	;# 
  6017  0893                     	;# 
  6018  0893                     	;# 
  6019  0894                     	;# 
  6020  0894                     	;# 
  6021  0894                     	;# 
  6022  0895                     	;# 
  6023  0895                     	;# 
  6024  0895                     	;# 
  6025  0896                     	;# 
  6026  0896                     	;# 
  6027  0896                     	;# 
  6028  089B                     	;# 
  6029  0911                     	;# 
  6030  0912                     	;# 
  6031  0913                     	;# 
  6032  0914                     	;# 
  6033  0915                     	;# 
  6034  0916                     	;# 
  6035  0918                     	;# 
  6036  0919                     	;# 
  6037  091A                     	;# 
  6038  091B                     	;# 
  6039  091C                     	;# 
  6040  091D                     	;# 
  6041  091E                     	;# 
  6042  091F                     	;# 
  6043  0E0F                     	;# 
  6044  0E10                     	;# 
  6045  0E11                     	;# 
  6046  0E12                     	;# 
  6047  0E13                     	;# 
  6048  0E14                     	;# 
  6049  0E15                     	;# 
  6050  0E16                     	;# 
  6051  0E17                     	;# 
  6052  0E18                     	;# 
  6053  0E19                     	;# 
  6054  0E1A                     	;# 
  6055  0E1B                     	;# 
  6056  0E1C                     	;# 
  6057  0E1D                     	;# 
  6058  0E1E                     	;# 
  6059  0E1F                     	;# 
  6060  0E20                     	;# 
  6061  0E21                     	;# 
  6062  0E22                     	;# 
  6063  0E24                     	;# 
  6064  0E25                     	;# 
  6065  0E28                     	;# 
  6066  0E29                     	;# 
  6067  0E2A                     	;# 
  6068  0E2B                     	;# 
  6069  0E2C                     	;# 
  6070  0E2D                     	;# 
  6071  0E2E                     	;# 
  6072  0E2F                     	;# 
  6073  0E90                     	;# 
  6074  0E91                     	;# 
  6075  0E92                     	;# 
  6076  0E94                     	;# 
  6077  0E95                     	;# 
  6078  0E9C                     	;# 
  6079  0E9D                     	;# 
  6080  0E9E                     	;# 
  6081  0E9F                     	;# 
  6082  0EA0                     	;# 
  6083  0EA1                     	;# 
  6084  0EA2                     	;# 
  6085  0EA3                     	;# 
  6086  0EA4                     	;# 
  6087  0EA5                     	;# 
  6088  0EA6                     	;# 
  6089  0EA7                     	;# 
  6090  0F0F                     	;# 
  6091  0F10                     	;# 
  6092  0F11                     	;# 
  6093  0F12                     	;# 
  6094  0F13                     	;# 
  6095  0F14                     	;# 
  6096  0F15                     	;# 
  6097  0F16                     	;# 
  6098  0F17                     	;# 
  6099  0F18                     	;# 
  6100  0F19                     	;# 
  6101  0F1A                     	;# 
  6102  0F1B                     	;# 
  6103  0F1C                     	;# 
  6104  0F1D                     	;# 
  6105  0F1E                     	;# 
  6106  0F1F                     	;# 
  6107  0F20                     	;# 
  6108  0F21                     	;# 
  6109  0F22                     	;# 
  6110  0F23                     	;# 
  6111  0F24                     	;# 
  6112  0F25                     	;# 
  6113  0F26                     	;# 
  6114  0F27                     	;# 
  6115  0F28                     	;# 
  6116  0F29                     	;# 
  6117  0F2A                     	;# 
  6118  0F2B                     	;# 
  6119  0F2C                     	;# 
  6120  0F2D                     	;# 
  6121  0F2E                     	;# 
  6122  0F2F                     	;# 
  6123  0F30                     	;# 
  6124  0F31                     	;# 
  6125  0F32                     	;# 
  6126  0F33                     	;# 
  6127  0F34                     	;# 
  6128  0F35                     	;# 
  6129  0F36                     	;# 
  6130  0F37                     	;# 
  6131  0FE4                     	;# 
  6132  0FE5                     	;# 
  6133  0FE6                     	;# 
  6134  0FE7                     	;# 
  6135  0FE8                     	;# 
  6136  0FE9                     	;# 
  6137  0FEA                     	;# 
  6138  0FEB                     	;# 
  6139  0FED                     	;# 
  6140  0FEE                     	;# 
  6141  0FEF                     	;# 
  6142  0000                     	;# 
  6143  0001                     	;# 
  6144  0002                     	;# 
  6145  0003                     	;# 
  6146  0004                     	;# 
  6147  0005                     	;# 
  6148  0006                     	;# 
  6149  0007                     	;# 
  6150  0008                     	;# 
  6151  0009                     	;# 
  6152  000A                     	;# 
  6153  000B                     	;# 
  6154  000C                     	;# 
  6155  000D                     	;# 
  6156  000E                     	;# 
  6157  0010                     	;# 
  6158  0011                     	;# 
  6159  0012                     	;# 
  6160  0013                     	;# 
  6161  0014                     	;# 
  6162  0015                     	;# 
  6163  0015                     	;# 
  6164  0016                     	;# 
  6165  0016                     	;# 
  6166  0017                     	;# 
  6167  0018                     	;# 
  6168  0019                     	;# 
  6169  0019                     	;# 
  6170  001A                     	;# 
  6171  001B                     	;# 
  6172  001C                     	;# 
  6173  001D                     	;# 
  6174  001E                     	;# 
  6175  001F                     	;# 
  6176  008C                     	;# 
  6177  008D                     	;# 
  6178  008E                     	;# 
  6179  0090                     	;# 
  6180  0091                     	;# 
  6181  0092                     	;# 
  6182  0093                     	;# 
  6183  0094                     	;# 
  6184  0097                     	;# 
  6185  009B                     	;# 
  6186  009B                     	;# 
  6187  009C                     	;# 
  6188  009D                     	;# 
  6189  009E                     	;# 
  6190  009F                     	;# 
  6191  010C                     	;# 
  6192  010D                     	;# 
  6193  010E                     	;# 
  6194  0111                     	;# 
  6195  0112                     	;# 
  6196  0113                     	;# 
  6197  0114                     	;# 
  6198  0115                     	;# 
  6199  0116                     	;# 
  6200  0117                     	;# 
  6201  0118                     	;# 
  6202  0119                     	;# 
  6203  018C                     	;# 
  6204  018D                     	;# 
  6205  018E                     	;# 
  6206  0197                     	;# 
  6207  0199                     	;# 
  6208  0199                     	;# 
  6209  0199                     	;# 
  6210  019A                     	;# 
  6211  019A                     	;# 
  6212  019A                     	;# 
  6213  019B                     	;# 
  6214  019B                     	;# 
  6215  019B                     	;# 
  6216  019B                     	;# 
  6217  019B                     	;# 
  6218  019C                     	;# 
  6219  019C                     	;# 
  6220  019C                     	;# 
  6221  019D                     	;# 
  6222  019D                     	;# 
  6223  019D                     	;# 
  6224  019E                     	;# 
  6225  019E                     	;# 
  6226  019E                     	;# 
  6227  019F                     	;# 
  6228  019F                     	;# 
  6229  019F                     	;# 
  6230  019F                     	;# 
  6231  019F                     	;# 
  6232  020C                     	;# 
  6233  020D                     	;# 
  6234  020E                     	;# 
  6235  0211                     	;# 
  6236  0211                     	;# 
  6237  0212                     	;# 
  6238  0212                     	;# 
  6239  0213                     	;# 
  6240  0213                     	;# 
  6241  0214                     	;# 
  6242  0214                     	;# 
  6243  0215                     	;# 
  6244  0215                     	;# 
  6245  0215                     	;# 
  6246  0215                     	;# 
  6247  0216                     	;# 
  6248  0216                     	;# 
  6249  0217                     	;# 
  6250  0217                     	;# 
  6251  0219                     	;# 
  6252  021A                     	;# 
  6253  021B                     	;# 
  6254  021C                     	;# 
  6255  021D                     	;# 
  6256  021D                     	;# 
  6257  021E                     	;# 
  6258  021F                     	;# 
  6259  028C                     	;# 
  6260  028D                     	;# 
  6261  028E                     	;# 
  6262  0291                     	;# 
  6263  0291                     	;# 
  6264  0292                     	;# 
  6265  0293                     	;# 
  6266  0294                     	;# 
  6267  0295                     	;# 
  6268  0295                     	;# 
  6269  0296                     	;# 
  6270  0297                     	;# 
  6271  0298                     	;# 
  6272  029F                     	;# 
  6273  030C                     	;# 
  6274  030D                     	;# 
  6275  030E                     	;# 
  6276  0311                     	;# 
  6277  0311                     	;# 
  6278  0312                     	;# 
  6279  0313                     	;# 
  6280  0314                     	;# 
  6281  0315                     	;# 
  6282  0315                     	;# 
  6283  0316                     	;# 
  6284  0317                     	;# 
  6285  0318                     	;# 
  6286  038C                     	;# 
  6287  038D                     	;# 
  6288  038E                     	;# 
  6289  0391                     	;# 
  6290  0392                     	;# 
  6291  0393                     	;# 
  6292  0394                     	;# 
  6293  0395                     	;# 
  6294  0396                     	;# 
  6295  0397                     	;# 
  6296  0398                     	;# 
  6297  0399                     	;# 
  6298  039A                     	;# 
  6299  039C                     	;# 
  6300  039D                     	;# 
  6301  039E                     	;# 
  6302  039F                     	;# 
  6303  0411                     	;# 
  6304  0411                     	;# 
  6305  0412                     	;# 
  6306  0413                     	;# 
  6307  0414                     	;# 
  6308  0415                     	;# 
  6309  0416                     	;# 
  6310  0417                     	;# 
  6311  0418                     	;# 
  6312  0418                     	;# 
  6313  0419                     	;# 
  6314  041A                     	;# 
  6315  041B                     	;# 
  6316  041C                     	;# 
  6317  041D                     	;# 
  6318  041E                     	;# 
  6319  041F                     	;# 
  6320  0498                     	;# 
  6321  0498                     	;# 
  6322  0499                     	;# 
  6323  049A                     	;# 
  6324  049B                     	;# 
  6325  049B                     	;# 
  6326  049C                     	;# 
  6327  049D                     	;# 
  6328  049E                     	;# 
  6329  049F                     	;# 
  6330  0617                     	;# 
  6331  0618                     	;# 
  6332  0619                     	;# 
  6333  0619                     	;# 
  6334  061A                     	;# 
  6335  061B                     	;# 
  6336  061C                     	;# 
  6337  061C                     	;# 
  6338  061F                     	;# 
  6339  0691                     	;# 
  6340  0692                     	;# 
  6341  0693                     	;# 
  6342  0694                     	;# 
  6343  0695                     	;# 
  6344  0696                     	;# 
  6345  0697                     	;# 
  6346  0698                     	;# 
  6347  0699                     	;# 
  6348  0711                     	;# 
  6349  0712                     	;# 
  6350  0713                     	;# 
  6351  0714                     	;# 
  6352  0715                     	;# 
  6353  0716                     	;# 
  6354  0717                     	;# 
  6355  0718                     	;# 
  6356  0719                     	;# 
  6357  0891                     	;# 
  6358  0891                     	;# 
  6359  0891                     	;# 
  6360  0891                     	;# 
  6361  0891                     	;# 
  6362  0891                     	;# 
  6363  0892                     	;# 
  6364  0892                     	;# 
  6365  0892                     	;# 
  6366  0893                     	;# 
  6367  0893                     	;# 
  6368  0893                     	;# 
  6369  0893                     	;# 
  6370  0893                     	;# 
  6371  0893                     	;# 
  6372  0894                     	;# 
  6373  0894                     	;# 
  6374  0894                     	;# 
  6375  0895                     	;# 
  6376  0895                     	;# 
  6377  0895                     	;# 
  6378  0896                     	;# 
  6379  0896                     	;# 
  6380  0896                     	;# 
  6381  089B                     	;# 
  6382  0911                     	;# 
  6383  0912                     	;# 
  6384  0913                     	;# 
  6385  0914                     	;# 
  6386  0915                     	;# 
  6387  0916                     	;# 
  6388  0918                     	;# 
  6389  0919                     	;# 
  6390  091A                     	;# 
  6391  091B                     	;# 
  6392  091C                     	;# 
  6393  091D                     	;# 
  6394  091E                     	;# 
  6395  091F                     	;# 
  6396  0E0F                     	;# 
  6397  0E10                     	;# 
  6398  0E11                     	;# 
  6399  0E12                     	;# 
  6400  0E13                     	;# 
  6401  0E14                     	;# 
  6402  0E15                     	;# 
  6403  0E16                     	;# 
  6404  0E17                     	;# 
  6405  0E18                     	;# 
  6406  0E19                     	;# 
  6407  0E1A                     	;# 
  6408  0E1B                     	;# 
  6409  0E1C                     	;# 
  6410  0E1D                     	;# 
  6411  0E1E                     	;# 
  6412  0E1F                     	;# 
  6413  0E20                     	;# 
  6414  0E21                     	;# 
  6415  0E22                     	;# 
  6416  0E24                     	;# 
  6417  0E25                     	;# 
  6418  0E28                     	;# 
  6419  0E29                     	;# 
  6420  0E2A                     	;# 
  6421  0E2B                     	;# 
  6422  0E2C                     	;# 
  6423  0E2D                     	;# 
  6424  0E2E                     	;# 
  6425  0E2F                     	;# 
  6426  0E90                     	;# 
  6427  0E91                     	;# 
  6428  0E92                     	;# 
  6429  0E94                     	;# 
  6430  0E95                     	;# 
  6431  0E9C                     	;# 
  6432  0E9D                     	;# 
  6433  0E9E                     	;# 
  6434  0E9F                     	;# 
  6435  0EA0                     	;# 
  6436  0EA1                     	;# 
  6437  0EA2                     	;# 
  6438  0EA3                     	;# 
  6439  0EA4                     	;# 
  6440  0EA5                     	;# 
  6441  0EA6                     	;# 
  6442  0EA7                     	;# 
  6443  0F0F                     	;# 
  6444  0F10                     	;# 
  6445  0F11                     	;# 
  6446  0F12                     	;# 
  6447  0F13                     	;# 
  6448  0F14                     	;# 
  6449  0F15                     	;# 
  6450  0F16                     	;# 
  6451  0F17                     	;# 
  6452  0F18                     	;# 
  6453  0F19                     	;# 
  6454  0F1A                     	;# 
  6455  0F1B                     	;# 
  6456  0F1C                     	;# 
  6457  0F1D                     	;# 
  6458  0F1E                     	;# 
  6459  0F1F                     	;# 
  6460  0F20                     	;# 
  6461  0F21                     	;# 
  6462  0F22                     	;# 
  6463  0F23                     	;# 
  6464  0F24                     	;# 
  6465  0F25                     	;# 
  6466  0F26                     	;# 
  6467  0F27                     	;# 
  6468  0F28                     	;# 
  6469  0F29                     	;# 
  6470  0F2A                     	;# 
  6471  0F2B                     	;# 
  6472  0F2C                     	;# 
  6473  0F2D                     	;# 
  6474  0F2E                     	;# 
  6475  0F2F                     	;# 
  6476  0F30                     	;# 
  6477  0F31                     	;# 
  6478  0F32                     	;# 
  6479  0F33                     	;# 
  6480  0F34                     	;# 
  6481  0F35                     	;# 
  6482  0F36                     	;# 
  6483  0F37                     	;# 
  6484  0FE4                     	;# 
  6485  0FE5                     	;# 
  6486  0FE6                     	;# 
  6487  0FE7                     	;# 
  6488  0FE8                     	;# 
  6489  0FE9                     	;# 
  6490  0FEA                     	;# 
  6491  0FEB                     	;# 
  6492  0FED                     	;# 
  6493  0FEE                     	;# 
  6494  0FEF                     	;# 
  6495  0000                     	;# 
  6496  0001                     	;# 
  6497  0002                     	;# 
  6498  0003                     	;# 
  6499  0004                     	;# 
  6500  0005                     	;# 
  6501  0006                     	;# 
  6502  0007                     	;# 
  6503  0008                     	;# 
  6504  0009                     	;# 
  6505  000A                     	;# 
  6506  000B                     	;# 
  6507  000C                     	;# 
  6508  000D                     	;# 
  6509  000E                     	;# 
  6510  0010                     	;# 
  6511  0011                     	;# 
  6512  0012                     	;# 
  6513  0013                     	;# 
  6514  0014                     	;# 
  6515  0015                     	;# 
  6516  0015                     	;# 
  6517  0016                     	;# 
  6518  0016                     	;# 
  6519  0017                     	;# 
  6520  0018                     	;# 
  6521  0019                     	;# 
  6522  0019                     	;# 
  6523  001A                     	;# 
  6524  001B                     	;# 
  6525  001C                     	;# 
  6526  001D                     	;# 
  6527  001E                     	;# 
  6528  001F                     	;# 
  6529  008C                     	;# 
  6530  008D                     	;# 
  6531  008E                     	;# 
  6532  0090                     	;# 
  6533  0091                     	;# 
  6534  0092                     	;# 
  6535  0093                     	;# 
  6536  0094                     	;# 
  6537  0097                     	;# 
  6538  009B                     	;# 
  6539  009B                     	;# 
  6540  009C                     	;# 
  6541  009D                     	;# 
  6542  009E                     	;# 
  6543  009F                     	;# 
  6544  010C                     	;# 
  6545  010D                     	;# 
  6546  010E                     	;# 
  6547  0111                     	;# 
  6548  0112                     	;# 
  6549  0113                     	;# 
  6550  0114                     	;# 
  6551  0115                     	;# 
  6552  0116                     	;# 
  6553  0117                     	;# 
  6554  0118                     	;# 
  6555  0119                     	;# 
  6556  018C                     	;# 
  6557  018D                     	;# 
  6558  018E                     	;# 
  6559  0197                     	;# 
  6560  0199                     	;# 
  6561  0199                     	;# 
  6562  0199                     	;# 
  6563  019A                     	;# 
  6564  019A                     	;# 
  6565  019A                     	;# 
  6566  019B                     	;# 
  6567  019B                     	;# 
  6568  019B                     	;# 
  6569  019B                     	;# 
  6570  019B                     	;# 
  6571  019C                     	;# 
  6572  019C                     	;# 
  6573  019C                     	;# 
  6574  019D                     	;# 
  6575  019D                     	;# 
  6576  019D                     	;# 
  6577  019E                     	;# 
  6578  019E                     	;# 
  6579  019E                     	;# 
  6580  019F                     	;# 
  6581  019F                     	;# 
  6582  019F                     	;# 
  6583  019F                     	;# 
  6584  019F                     	;# 
  6585  020C                     	;# 
  6586  020D                     	;# 
  6587  020E                     	;# 
  6588  0211                     	;# 
  6589  0211                     	;# 
  6590  0212                     	;# 
  6591  0212                     	;# 
  6592  0213                     	;# 
  6593  0213                     	;# 
  6594  0214                     	;# 
  6595  0214                     	;# 
  6596  0215                     	;# 
  6597  0215                     	;# 
  6598  0215                     	;# 
  6599  0215                     	;# 
  6600  0216                     	;# 
  6601  0216                     	;# 
  6602  0217                     	;# 
  6603  0217                     	;# 
  6604  0219                     	;# 
  6605  021A                     	;# 
  6606  021B                     	;# 
  6607  021C                     	;# 
  6608  021D                     	;# 
  6609  021D                     	;# 
  6610  021E                     	;# 
  6611  021F                     	;# 
  6612  028C                     	;# 
  6613  028D                     	;# 
  6614  028E                     	;# 
  6615  0291                     	;# 
  6616  0291                     	;# 
  6617  0292                     	;# 
  6618  0293                     	;# 
  6619  0294                     	;# 
  6620  0295                     	;# 
  6621  0295                     	;# 
  6622  0296                     	;# 
  6623  0297                     	;# 
  6624  0298                     	;# 
  6625  029F                     	;# 
  6626  030C                     	;# 
  6627  030D                     	;# 
  6628  030E                     	;# 
  6629  0311                     	;# 
  6630  0311                     	;# 
  6631  0312                     	;# 
  6632  0313                     	;# 
  6633  0314                     	;# 
  6634  0315                     	;# 
  6635  0315                     	;# 
  6636  0316                     	;# 
  6637  0317                     	;# 
  6638  0318                     	;# 
  6639  038C                     	;# 
  6640  038D                     	;# 
  6641  038E                     	;# 
  6642  0391                     	;# 
  6643  0392                     	;# 
  6644  0393                     	;# 
  6645  0394                     	;# 
  6646  0395                     	;# 
  6647  0396                     	;# 
  6648  0397                     	;# 
  6649  0398                     	;# 
  6650  0399                     	;# 
  6651  039A                     	;# 
  6652  039C                     	;# 
  6653  039D                     	;# 
  6654  039E                     	;# 
  6655  039F                     	;# 
  6656  0411                     	;# 
  6657  0411                     	;# 
  6658  0412                     	;# 
  6659  0413                     	;# 
  6660  0414                     	;# 
  6661  0415                     	;# 
  6662  0416                     	;# 
  6663  0417                     	;# 
  6664  0418                     	;# 
  6665  0418                     	;# 
  6666  0419                     	;# 
  6667  041A                     	;# 
  6668  041B                     	;# 
  6669  041C                     	;# 
  6670  041D                     	;# 
  6671  041E                     	;# 
  6672  041F                     	;# 
  6673  0498                     	;# 
  6674  0498                     	;# 
  6675  0499                     	;# 
  6676  049A                     	;# 
  6677  049B                     	;# 
  6678  049B                     	;# 
  6679  049C                     	;# 
  6680  049D                     	;# 
  6681  049E                     	;# 
  6682  049F                     	;# 
  6683  0617                     	;# 
  6684  0618                     	;# 
  6685  0619                     	;# 
  6686  0619                     	;# 
  6687  061A                     	;# 
  6688  061B                     	;# 
  6689  061C                     	;# 
  6690  061C                     	;# 
  6691  061F                     	;# 
  6692  0691                     	;# 
  6693  0692                     	;# 
  6694  0693                     	;# 
  6695  0694                     	;# 
  6696  0695                     	;# 
  6697  0696                     	;# 
  6698  0697                     	;# 
  6699  0698                     	;# 
  6700  0699                     	;# 
  6701  0711                     	;# 
  6702  0712                     	;# 
  6703  0713                     	;# 
  6704  0714                     	;# 
  6705  0715                     	;# 
  6706  0716                     	;# 
  6707  0717                     	;# 
  6708  0718                     	;# 
  6709  0719                     	;# 
  6710  0891                     	;# 
  6711  0891                     	;# 
  6712  0891                     	;# 
  6713  0891                     	;# 
  6714  0891                     	;# 
  6715  0891                     	;# 
  6716  0892                     	;# 
  6717  0892                     	;# 
  6718  0892                     	;# 
  6719  0893                     	;# 
  6720  0893                     	;# 
  6721  0893                     	;# 
  6722  0893                     	;# 
  6723  0893                     	;# 
  6724  0893                     	;# 
  6725  0894                     	;# 
  6726  0894                     	;# 
  6727  0894                     	;# 
  6728  0895                     	;# 
  6729  0895                     	;# 
  6730  0895                     	;# 
  6731  0896                     	;# 
  6732  0896                     	;# 
  6733  0896                     	;# 
  6734  089B                     	;# 
  6735  0911                     	;# 
  6736  0912                     	;# 
  6737  0913                     	;# 
  6738  0914                     	;# 
  6739  0915                     	;# 
  6740  0916                     	;# 
  6741  0918                     	;# 
  6742  0919                     	;# 
  6743  091A                     	;# 
  6744  091B                     	;# 
  6745  091C                     	;# 
  6746  091D                     	;# 
  6747  091E                     	;# 
  6748  091F                     	;# 
  6749  0E0F                     	;# 
  6750  0E10                     	;# 
  6751  0E11                     	;# 
  6752  0E12                     	;# 
  6753  0E13                     	;# 
  6754  0E14                     	;# 
  6755  0E15                     	;# 
  6756  0E16                     	;# 
  6757  0E17                     	;# 
  6758  0E18                     	;# 
  6759  0E19                     	;# 
  6760  0E1A                     	;# 
  6761  0E1B                     	;# 
  6762  0E1C                     	;# 
  6763  0E1D                     	;# 
  6764  0E1E                     	;# 
  6765  0E1F                     	;# 
  6766  0E20                     	;# 
  6767  0E21                     	;# 
  6768  0E22                     	;# 
  6769  0E24                     	;# 
  6770  0E25                     	;# 
  6771  0E28                     	;# 
  6772  0E29                     	;# 
  6773  0E2A                     	;# 
  6774  0E2B                     	;# 
  6775  0E2C                     	;# 
  6776  0E2D                     	;# 
  6777  0E2E                     	;# 
  6778  0E2F                     	;# 
  6779  0E90                     	;# 
  6780  0E91                     	;# 
  6781  0E92                     	;# 
  6782  0E94                     	;# 
  6783  0E95                     	;# 
  6784  0E9C                     	;# 
  6785  0E9D                     	;# 
  6786  0E9E                     	;# 
  6787  0E9F                     	;# 
  6788  0EA0                     	;# 
  6789  0EA1                     	;# 
  6790  0EA2                     	;# 
  6791  0EA3                     	;# 
  6792  0EA4                     	;# 
  6793  0EA5                     	;# 
  6794  0EA6                     	;# 
  6795  0EA7                     	;# 
  6796  0F0F                     	;# 
  6797  0F10                     	;# 
  6798  0F11                     	;# 
  6799  0F12                     	;# 
  6800  0F13                     	;# 
  6801  0F14                     	;# 
  6802  0F15                     	;# 
  6803  0F16                     	;# 
  6804  0F17                     	;# 
  6805  0F18                     	;# 
  6806  0F19                     	;# 
  6807  0F1A                     	;# 
  6808  0F1B                     	;# 
  6809  0F1C                     	;# 
  6810  0F1D                     	;# 
  6811  0F1E                     	;# 
  6812  0F1F                     	;# 
  6813  0F20                     	;# 
  6814  0F21                     	;# 
  6815  0F22                     	;# 
  6816  0F23                     	;# 
  6817  0F24                     	;# 
  6818  0F25                     	;# 
  6819  0F26                     	;# 
  6820  0F27                     	;# 
  6821  0F28                     	;# 
  6822  0F29                     	;# 
  6823  0F2A                     	;# 
  6824  0F2B                     	;# 
  6825  0F2C                     	;# 
  6826  0F2D                     	;# 
  6827  0F2E                     	;# 
  6828  0F2F                     	;# 
  6829  0F30                     	;# 
  6830  0F31                     	;# 
  6831  0F32                     	;# 
  6832  0F33                     	;# 
  6833  0F34                     	;# 
  6834  0F35                     	;# 
  6835  0F36                     	;# 
  6836  0F37                     	;# 
  6837  0FE4                     	;# 
  6838  0FE5                     	;# 
  6839  0FE6                     	;# 
  6840  0FE7                     	;# 
  6841  0FE8                     	;# 
  6842  0FE9                     	;# 
  6843  0FEA                     	;# 
  6844  0FEB                     	;# 
  6845  0FED                     	;# 
  6846  0FEE                     	;# 
  6847  0FEF                     	;# 
  6848  0000                     	;# 
  6849  0001                     	;# 
  6850  0002                     	;# 
  6851  0003                     	;# 
  6852  0004                     	;# 
  6853  0005                     	;# 
  6854  0006                     	;# 
  6855  0007                     	;# 
  6856  0008                     	;# 
  6857  0009                     	;# 
  6858  000A                     	;# 
  6859  000B                     	;# 
  6860  000C                     	;# 
  6861  000D                     	;# 
  6862  000E                     	;# 
  6863  0010                     	;# 
  6864  0011                     	;# 
  6865  0012                     	;# 
  6866  0013                     	;# 
  6867  0014                     	;# 
  6868  0015                     	;# 
  6869  0015                     	;# 
  6870  0016                     	;# 
  6871  0016                     	;# 
  6872  0017                     	;# 
  6873  0018                     	;# 
  6874  0019                     	;# 
  6875  0019                     	;# 
  6876  001A                     	;# 
  6877  001B                     	;# 
  6878  001C                     	;# 
  6879  001D                     	;# 
  6880  001E                     	;# 
  6881  001F                     	;# 
  6882  008C                     	;# 
  6883  008D                     	;# 
  6884  008E                     	;# 
  6885  0090                     	;# 
  6886  0091                     	;# 
  6887  0092                     	;# 
  6888  0093                     	;# 
  6889  0094                     	;# 
  6890  0097                     	;# 
  6891  009B                     	;# 
  6892  009B                     	;# 
  6893  009C                     	;# 
  6894  009D                     	;# 
  6895  009E                     	;# 
  6896  009F                     	;# 
  6897  010C                     	;# 
  6898  010D                     	;# 
  6899  010E                     	;# 
  6900  0111                     	;# 
  6901  0112                     	;# 
  6902  0113                     	;# 
  6903  0114                     	;# 
  6904  0115                     	;# 
  6905  0116                     	;# 
  6906  0117                     	;# 
  6907  0118                     	;# 
  6908  0119                     	;# 
  6909  018C                     	;# 
  6910  018D                     	;# 
  6911  018E                     	;# 
  6912  0197                     	;# 
  6913  0199                     	;# 
  6914  0199                     	;# 
  6915  0199                     	;# 
  6916  019A                     	;# 
  6917  019A                     	;# 
  6918  019A                     	;# 
  6919  019B                     	;# 
  6920  019B                     	;# 
  6921  019B                     	;# 
  6922  019B                     	;# 
  6923  019B                     	;# 
  6924  019C                     	;# 
  6925  019C                     	;# 
  6926  019C                     	;# 
  6927  019D                     	;# 
  6928  019D                     	;# 
  6929  019D                     	;# 
  6930  019E                     	;# 
  6931  019E                     	;# 
  6932  019E                     	;# 
  6933  019F                     	;# 
  6934  019F                     	;# 
  6935  019F                     	;# 
  6936  019F                     	;# 
  6937  019F                     	;# 
  6938  020C                     	;# 
  6939  020D                     	;# 
  6940  020E                     	;# 
  6941  0211                     	;# 
  6942  0211                     	;# 
  6943  0212                     	;# 
  6944  0212                     	;# 
  6945  0213                     	;# 
  6946  0213                     	;# 
  6947  0214                     	;# 
  6948  0214                     	;# 
  6949  0215                     	;# 
  6950  0215                     	;# 
  6951  0215                     	;# 
  6952  0215                     	;# 
  6953  0216                     	;# 
  6954  0216                     	;# 
  6955  0217                     	;# 
  6956  0217                     	;# 
  6957  0219                     	;# 
  6958  021A                     	;# 
  6959  021B                     	;# 
  6960  021C                     	;# 
  6961  021D                     	;# 
  6962  021D                     	;# 
  6963  021E                     	;# 
  6964  021F                     	;# 
  6965  028C                     	;# 
  6966  028D                     	;# 
  6967  028E                     	;# 
  6968  0291                     	;# 
  6969  0291                     	;# 
  6970  0292                     	;# 
  6971  0293                     	;# 
  6972  0294                     	;# 
  6973  0295                     	;# 
  6974  0295                     	;# 
  6975  0296                     	;# 
  6976  0297                     	;# 
  6977  0298                     	;# 
  6978  029F                     	;# 
  6979  030C                     	;# 
  6980  030D                     	;# 
  6981  030E                     	;# 
  6982  0311                     	;# 
  6983  0311                     	;# 
  6984  0312                     	;# 
  6985  0313                     	;# 
  6986  0314                     	;# 
  6987  0315                     	;# 
  6988  0315                     	;# 
  6989  0316                     	;# 
  6990  0317                     	;# 
  6991  0318                     	;# 
  6992  038C                     	;# 
  6993  038D                     	;# 
  6994  038E                     	;# 
  6995  0391                     	;# 
  6996  0392                     	;# 
  6997  0393                     	;# 
  6998  0394                     	;# 
  6999  0395                     	;# 
  7000  0396                     	;# 
  7001  0397                     	;# 
  7002  0398                     	;# 
  7003  0399                     	;# 
  7004  039A                     	;# 
  7005  039C                     	;# 
  7006  039D                     	;# 
  7007  039E                     	;# 
  7008  039F                     	;# 
  7009  0411                     	;# 
  7010  0411                     	;# 
  7011  0412                     	;# 
  7012  0413                     	;# 
  7013  0414                     	;# 
  7014  0415                     	;# 
  7015  0416                     	;# 
  7016  0417                     	;# 
  7017  0418                     	;# 
  7018  0418                     	;# 
  7019  0419                     	;# 
  7020  041A                     	;# 
  7021  041B                     	;# 
  7022  041C                     	;# 
  7023  041D                     	;# 
  7024  041E                     	;# 
  7025  041F                     	;# 
  7026  0498                     	;# 
  7027  0498                     	;# 
  7028  0499                     	;# 
  7029  049A                     	;# 
  7030  049B                     	;# 
  7031  049B                     	;# 
  7032  049C                     	;# 
  7033  049D                     	;# 
  7034  049E                     	;# 
  7035  049F                     	;# 
  7036  0617                     	;# 
  7037  0618                     	;# 
  7038  0619                     	;# 
  7039  0619                     	;# 
  7040  061A                     	;# 
  7041  061B                     	;# 
  7042  061C                     	;# 
  7043  061C                     	;# 
  7044  061F                     	;# 
  7045  0691                     	;# 
  7046  0692                     	;# 
  7047  0693                     	;# 
  7048  0694                     	;# 
  7049  0695                     	;# 
  7050  0696                     	;# 
  7051  0697                     	;# 
  7052  0698                     	;# 
  7053  0699                     	;# 
  7054  0711                     	;# 
  7055  0712                     	;# 
  7056  0713                     	;# 
  7057  0714                     	;# 
  7058  0715                     	;# 
  7059  0716                     	;# 
  7060  0717                     	;# 
  7061  0718                     	;# 
  7062  0719                     	;# 
  7063  0891                     	;# 
  7064  0891                     	;# 
  7065  0891                     	;# 
  7066  0891                     	;# 
  7067  0891                     	;# 
  7068  0891                     	;# 
  7069  0892                     	;# 
  7070  0892                     	;# 
  7071  0892                     	;# 
  7072  0893                     	;# 
  7073  0893                     	;# 
  7074  0893                     	;# 
  7075  0893                     	;# 
  7076  0893                     	;# 
  7077  0893                     	;# 
  7078  0894                     	;# 
  7079  0894                     	;# 
  7080  0894                     	;# 
  7081  0895                     	;# 
  7082  0895                     	;# 
  7083  0895                     	;# 
  7084  0896                     	;# 
  7085  0896                     	;# 
  7086  0896                     	;# 
  7087  089B                     	;# 
  7088  0911                     	;# 
  7089  0912                     	;# 
  7090  0913                     	;# 
  7091  0914                     	;# 
  7092  0915                     	;# 
  7093  0916                     	;# 
  7094  0918                     	;# 
  7095  0919                     	;# 
  7096  091A                     	;# 
  7097  091B                     	;# 
  7098  091C                     	;# 
  7099  091D                     	;# 
  7100  091E                     	;# 
  7101  091F                     	;# 
  7102  0E0F                     	;# 
  7103  0E10                     	;# 
  7104  0E11                     	;# 
  7105  0E12                     	;# 
  7106  0E13                     	;# 
  7107  0E14                     	;# 
  7108  0E15                     	;# 
  7109  0E16                     	;# 
  7110  0E17                     	;# 
  7111  0E18                     	;# 
  7112  0E19                     	;# 
  7113  0E1A                     	;# 
  7114  0E1B                     	;# 
  7115  0E1C                     	;# 
  7116  0E1D                     	;# 
  7117  0E1E                     	;# 
  7118  0E1F                     	;# 
  7119  0E20                     	;# 
  7120  0E21                     	;# 
  7121  0E22                     	;# 
  7122  0E24                     	;# 
  7123  0E25                     	;# 
  7124  0E28                     	;# 
  7125  0E29                     	;# 
  7126  0E2A                     	;# 
  7127  0E2B                     	;# 
  7128  0E2C                     	;# 
  7129  0E2D                     	;# 
  7130  0E2E                     	;# 
  7131  0E2F                     	;# 
  7132  0E90                     	;# 
  7133  0E91                     	;# 
  7134  0E92                     	;# 
  7135  0E94                     	;# 
  7136  0E95                     	;# 
  7137  0E9C                     	;# 
  7138  0E9D                     	;# 
  7139  0E9E                     	;# 
  7140  0E9F                     	;# 
  7141  0EA0                     	;# 
  7142  0EA1                     	;# 
  7143  0EA2                     	;# 
  7144  0EA3                     	;# 
  7145  0EA4                     	;# 
  7146  0EA5                     	;# 
  7147  0EA6                     	;# 
  7148  0EA7                     	;# 
  7149  0F0F                     	;# 
  7150  0F10                     	;# 
  7151  0F11                     	;# 
  7152  0F12                     	;# 
  7153  0F13                     	;# 
  7154  0F14                     	;# 
  7155  0F15                     	;# 
  7156  0F16                     	;# 
  7157  0F17                     	;# 
  7158  0F18                     	;# 
  7159  0F19                     	;# 
  7160  0F1A                     	;# 
  7161  0F1B                     	;# 
  7162  0F1C                     	;# 
  7163  0F1D                     	;# 
  7164  0F1E                     	;# 
  7165  0F1F                     	;# 
  7166  0F20                     	;# 
  7167  0F21                     	;# 
  7168  0F22                     	;# 
  7169  0F23                     	;# 
  7170  0F24                     	;# 
  7171  0F25                     	;# 
  7172  0F26                     	;# 
  7173  0F27                     	;# 
  7174  0F28                     	;# 
  7175  0F29                     	;# 
  7176  0F2A                     	;# 
  7177  0F2B                     	;# 
  7178  0F2C                     	;# 
  7179  0F2D                     	;# 
  7180  0F2E                     	;# 
  7181  0F2F                     	;# 
  7182  0F30                     	;# 
  7183  0F31                     	;# 
  7184  0F32                     	;# 
  7185  0F33                     	;# 
  7186  0F34                     	;# 
  7187  0F35                     	;# 
  7188  0F36                     	;# 
  7189  0F37                     	;# 
  7190  0FE4                     	;# 
  7191  0FE5                     	;# 
  7192  0FE6                     	;# 
  7193  0FE7                     	;# 
  7194  0FE8                     	;# 
  7195  0FE9                     	;# 
  7196  0FEA                     	;# 
  7197  0FEB                     	;# 
  7198  0FED                     	;# 
  7199  0FEE                     	;# 
  7200  0FEF                     	;# 
  7201                           
  7202 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
  7203  001F                     _T2CONbits	set	31
  7204  001F                     _T2CON	set	31
  7205  001D                     _TMR2	set	29
  7206  001E                     _PR2	set	30
  7207  0013                     _PIR3bits	set	19
  7208  001B                     _T1CONbits	set	27
  7209  001B                     _T1CON	set	27
  7210  0011                     _PIR1bits	set	17
  7211  0019                     _TMR1L	set	25
  7212  001A                     _TMR1H	set	26
  7213  001C                     _T1GCON	set	28
  7214  0014                     _PIR4bits	set	20
  7215  0017                     _T0CON0bits	set	23
  7216  0017                     _T0CON0	set	23
  7217  0010                     _PIR0bits	set	16
  7218  0015                     _TMR0L	set	21
  7219  0016                     _TMR0H	set	22
  7220  0018                     _T0CON1	set	24
  7221  000D                     _PORTBbits	set	13
  7222  000E                     _PORTCbits	set	14
  7223  000C                     _PORTAbits	set	12
  7224  000B                     _INTCONbits	set	11
  7225  0014                     _PIR4	set	20
  7226  0013                     _PIR3	set	19
  7227  0012                     _PIR2	set	18
  7228  0011                     _PIR1	set	17
  7229  0010                     _PIR0	set	16
  7230  008E                     _TRISC	set	142
  7231  008D                     _TRISB	set	141
  7232  008C                     _TRISA	set	140
  7233  0093                     _PIE3bits	set	147
  7234  0091                     _PIE1bits	set	145
  7235  0094                     _PIE4bits	set	148
  7236  0090                     _PIE0bits	set	144
  7237  0097                     _WDTCON	set	151
  7238  008D                     _TRISBbits	set	141
  7239  008E                     _TRISCbits	set	142
  7240  008C                     _TRISAbits	set	140
  7241  0094                     _PIE4	set	148
  7242  0093                     _PIE3	set	147
  7243  0092                     _PIE2	set	146
  7244  0091                     _PIE1	set	145
  7245  0090                     _PIE0	set	144
  7246  010E                     _LATC	set	270
  7247  010D                     _LATB	set	269
  7248  010C                     _LATA	set	268
  7249  010D                     _LATBbits	set	269
  7250  010E                     _LATCbits	set	270
  7251  010C                     _LATAbits	set	268
  7252  018C                     _ANSELA	set	396
  7253  018D                     _ANSELB	set	397
  7254  018E                     _ANSELC	set	398
  7255  0199                     _RC1REG	set	409
  7256  019D                     _RC1STAbits	set	413
  7257  019A                     _TX1REG	set	410
  7258  019E                     _TX1STAbits	set	414
  7259  019C                     _SP1BRGH	set	412
  7260  019B                     _SP1BRGL	set	411
  7261  019E                     _TX1STA	set	414
  7262  019D                     _RC1STA	set	413
  7263  019F                     _BAUD1CON	set	415
  7264  020E                     _WPUC	set	526
  7265  020C                     _WPUA	set	524
  7266  020D                     _WPUB	set	525
  7267  028E                     _ODCONC	set	654
  7268  028D                     _ODCONB	set	653
  7269  028C                     _ODCONA	set	652
  7270  0295                     _CCPR2L	set	661
  7271  0296                     _CCPR2H	set	662
  7272  0298                     _CCP2CAP	set	664
  7273  0297                     _CCP2CON	set	663
  7274  029F                     _CCPTMRSbits	set	671
  7275  0291                     _CCPR1L	set	657
  7276  0292                     _CCPR1H	set	658
  7277  0294                     _CCP1CAP	set	660
  7278  0293                     _CCP1CON	set	659
  7279  0317                     _CCP4CONbits	set	791
  7280  0315                     _CCPR4L	set	789
  7281  0316                     _CCPR4H	set	790
  7282  0317                     _CCP4CON	set	791
  7283  030E                     _SLRCONC	set	782
  7284  030D                     _SLRCONB	set	781
  7285  030C                     _SLRCONA	set	780
  7286  0311                     _CCPR3L	set	785
  7287  0312                     _CCPR3H	set	786
  7288  0314                     _CCP3CAP	set	788
  7289  0313                     _CCP3CON	set	787
  7290  038E                     _INLVLC	set	910
  7291  038D                     _INLVLB	set	909
  7292  038C                     _INLVLA	set	908
  7293  0414                     _T3GCONbits	set	1044
  7294  0413                     _T3CONbits	set	1043
  7295  0413                     _T3CON	set	1043
  7296  0411                     _TMR3L	set	1041
  7297  0412                     _TMR3H	set	1042
  7298  0414                     _T3GCON	set	1044
  7299  061F                     _PWMTMRSbits	set	1567
  7300  0617                     _PWM5DCL	set	1559
  7301  0618                     _PWM5DCH	set	1560
  7302  0619                     _PWM5CON	set	1561
  7303  0916                     _PMD5	set	2326
  7304  0915                     _PMD4	set	2325
  7305  0914                     _PMD3	set	2324
  7306  0913                     _PMD2	set	2323
  7307  0912                     _PMD1	set	2322
  7308  0911                     _PMD0	set	2321
  7309  091E                     _OSCTUNE	set	2334
  7310  091F                     _OSCFRQ	set	2335
  7311  091D                     _OSCEN	set	2333
  7312  091B                     _OSCCON3	set	2331
  7313  0919                     _OSCCON1	set	2329
  7314  48E0                     _PLLR	set	18656
  7315  0E16                     _CCP3PPS	set	3606
  7316  0E15                     _CCP2PPS	set	3605
  7317  0E14                     _CCP1PPS	set	3604
  7318  0E24                     _RXPPS	set	3620
  7319  0E9E                     _RB6PPS	set	3742
  7320  0EA1                     _RC1PPS	set	3745
  7321  0EA4                     _RC4PPS	set	3748
  7322                           
  7323                           	psect	stringtext1
  7324  1000                     __pstringtext1:
  7325  1000                     STR_2:
  7326  1000  3445               	retlw	69	;'E'
  7327  1001  3452               	retlw	82	;'R'
  7328  1002  3452               	retlw	82	;'R'
  7329  1003  344F               	retlw	79	;'O'
  7330  1004  3452               	retlw	82	;'R'
  7331  1005  343A               	retlw	58	;':'
  7332  1006  3420               	retlw	32	;' '
  7333  1007  3449               	retlw	73	;'I'
  7334  1008  346E               	retlw	110	;'n'
  7335  1009  3476               	retlw	118	;'v'
  7336  100A  3461               	retlw	97	;'a'
  7337  100B  346C               	retlw	108	;'l'
  7338  100C  3469               	retlw	105	;'i'
  7339  100D  3464               	retlw	100	;'d'
  7340  100E  3420               	retlw	32	;' '
  7341  100F  3474               	retlw	116	;'t'
  7342  1010  3472               	retlw	114	;'r'
  7343  1011  3469               	retlw	105	;'i'
  7344  1012  3467               	retlw	103	;'g'
  7345  1013  3450               	retlw	80	;'P'
  7346  1014  3469               	retlw	105	;'i'
  7347  1015  346E               	retlw	110	;'n'
  7348  1016  3420               	retlw	32	;' '
  7349  1017  3428               	retlw	40	;'('
  7350  1018  346D               	retlw	109	;'m'
  7351  1019  3475               	retlw	117	;'u'
  7352  101A  3473               	retlw	115	;'s'
  7353  101B  3474               	retlw	116	;'t'
  7354  101C  3420               	retlw	32	;' '
  7355  101D  344E               	retlw	78	;'N'
  7356  101E  344F               	retlw	79	;'O'
  7357  101F  3454               	retlw	84	;'T'
  7358  1020  3420               	retlw	32	;' '
  7359  1021  3462               	retlw	98	;'b'
  7360  1022  3465               	retlw	101	;'e'
  7361  1023  3420               	retlw	32	;' '
  7362  1024  345B               	retlw	91	;'['
  7363  1025  3441               	retlw	65	;'A'
  7364  1026  3432               	retlw	50	;'2'
  7365  1027  342C               	retlw	44	;','
  7366  1028  3420               	retlw	32	;' '
  7367  1029  3441               	retlw	65	;'A'
  7368  102A  3433               	retlw	51	;'3'
  7369  102B  342C               	retlw	44	;','
  7370  102C  3420               	retlw	32	;' '
  7371  102D  3441               	retlw	65	;'A'
  7372  102E  3434               	retlw	52	;'4'
  7373  102F  342C               	retlw	44	;','
  7374  1030  3420               	retlw	32	;' '
  7375  1031  3443               	retlw	67	;'C'
  7376  1032  3433               	retlw	51	;'3'
  7377  1033  342C               	retlw	44	;','
  7378  1034  3420               	retlw	32	;' '
  7379  1035  3443               	retlw	67	;'C'
  7380  1036  3435               	retlw	53	;'5'
  7381  1037  345D               	retlw	93	;']'
  7382  1038  3429               	retlw	41	;')'
  7383  1039  3400               	retlw	0
  7384                           
  7385                           	psect	stringtext2
  7386  103A                     __pstringtext2:
  7387  103A                     STR_1:
  7388  103A  3445               	retlw	69	;'E'
  7389  103B  3452               	retlw	82	;'R'
  7390  103C  3452               	retlw	82	;'R'
  7391  103D  344F               	retlw	79	;'O'
  7392  103E  3452               	retlw	82	;'R'
  7393  103F  343A               	retlw	58	;':'
  7394  1040  3420               	retlw	32	;' '
  7395  1041  3449               	retlw	73	;'I'
  7396  1042  346E               	retlw	110	;'n'
  7397  1043  3476               	retlw	118	;'v'
  7398  1044  3461               	retlw	97	;'a'
  7399  1045  346C               	retlw	108	;'l'
  7400  1046  3469               	retlw	105	;'i'
  7401  1047  3464               	retlw	100	;'d'
  7402  1048  3420               	retlw	32	;' '
  7403  1049  3465               	retlw	101	;'e'
  7404  104A  3463               	retlw	99	;'c'
  7405  104B  3468               	retlw	104	;'h'
  7406  104C  346F               	retlw	111	;'o'
  7407  104D  3450               	retlw	80	;'P'
  7408  104E  3469               	retlw	105	;'i'
  7409  104F  346E               	retlw	110	;'n'
  7410  1050  3420               	retlw	32	;' '
  7411  1051  3428               	retlw	40	;'('
  7412  1052  346D               	retlw	109	;'m'
  7413  1053  3475               	retlw	117	;'u'
  7414  1054  3473               	retlw	115	;'s'
  7415  1055  3474               	retlw	116	;'t'
  7416  1056  3420               	retlw	32	;' '
  7417  1057  3462               	retlw	98	;'b'
  7418  1058  3465               	retlw	101	;'e'
  7419  1059  3420               	retlw	32	;' '
  7420  105A  345B               	retlw	91	;'['
  7421  105B  3441               	retlw	65	;'A'
  7422  105C  3432               	retlw	50	;'2'
  7423  105D  342C               	retlw	44	;','
  7424  105E  3420               	retlw	32	;' '
  7425  105F  3441               	retlw	65	;'A'
  7426  1060  3434               	retlw	52	;'4'
  7427  1061  342C               	retlw	44	;','
  7428  1062  3420               	retlw	32	;' '
  7429  1063  3443               	retlw	67	;'C'
  7430  1064  3433               	retlw	51	;'3'
  7431  1065  342C               	retlw	44	;','
  7432  1066  3420               	retlw	32	;' '
  7433  1067  3443               	retlw	67	;'C'
  7434  1068  3435               	retlw	53	;'5'
  7435  1069  345D               	retlw	93	;']'
  7436  106A  3429               	retlw	41	;')'
  7437  106B  3400               	retlw	0
  7438                           
  7439                           	psect	stringtext3
  7440  106C                     __pstringtext3:
  7441  106C                     STR_3:
  7442  106C  3425               	retlw	37	;'%'
  7443  106D  3475               	retlw	117	;'u'
  7444  106E  3400               	retlw	0
  7445                           
  7446                           	psect	stringtext4
  7447  0000                     __pstringtext4:
  7448                           
  7449                           	psect	cinit
  7450  0092                     start_initialization:	
  7451                           ; #config settings
  7452                           
  7453  0092                     __initialization:
  7454                           
  7455                           ; Clear objects allocated to COMMON
  7456  0092  01FA               	clrf	__pbssCOMMON& (0+127)
  7457  0093  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  7458  0094  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  7459  0095  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  7460                           
  7461                           ; Clear objects allocated to BANK1
  7462  0096  30A0               	movlw	low __pbssBANK1
  7463  0097  0084               	movwf	4
  7464  0098  3000               	movlw	high __pbssBANK1
  7465  0099  0085               	movwf	5
  7466  009A  303B               	movlw	59
  7467  009B  318A  2252  3180   	fcall	clear_ram0
  7468                           
  7469                           ; Clear objects allocated to BANK2
  7470  009E  3020               	movlw	low __pbssBANK2
  7471  009F  0084               	movwf	4
  7472  00A0  3001               	movlw	high __pbssBANK2
  7473  00A1  0085               	movwf	5
  7474  00A2  3038               	movlw	56
  7475  00A3  318A  2252  3180   	fcall	clear_ram0
  7476                           
  7477                           ; Clear objects allocated to BANK3
  7478  00A6  30A0               	movlw	low __pbssBANK3
  7479  00A7  0084               	movwf	4
  7480  00A8  3001               	movlw	high __pbssBANK3
  7481  00A9  0085               	movwf	5
  7482  00AA  3020               	movlw	32
  7483  00AB  318A  2252  3180   	fcall	clear_ram0
  7484  00AE                     end_of_initialization:	
  7485                           ;End of C runtime variable initialization code
  7486                           
  7487  00AE                     __end_of__initialization:
  7488  00AE  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7489  00AF  0020               	movlb	0
  7490  00B0  3185  2D0D         	ljmp	_main	;jump to C main() function
  7491                           
  7492                           	psect	bssCOMMON
  7493  007A                     __pbssCOMMON:
  7494  007A                     _eusartRxTail:
  7495  007A                     	ds	1
  7496  007B                     _eusartRxHead:
  7497  007B                     	ds	1
  7498  007C                     _eusartTxHead:
  7499  007C                     	ds	1
  7500  007D                     _CountCallBack:
  7501  007D                     	ds	1
  7502                           
  7503                           	psect	bssBANK1
  7504  00A0                     __pbssBANK1:
  7505  00A0                     _nout:
  7506  00A0                     	ds	2
  7507  00A2                     _width:
  7508  00A2                     	ds	2
  7509  00A4                     _prec:
  7510  00A4                     	ds	2
  7511  00A6                     _flags:
  7512  00A6                     	ds	2
  7513  00A8                     _timer3ReloadVal:
  7514  00A8                     	ds	2
  7515  00AA                     _dutyCycle10bit:
  7516  00AA                     	ds	2
  7517  00AC                     _ocCount:
  7518  00AC                     	ds	2
  7519  00AE                     _currFreq:
  7520  00AE                     	ds	2
  7521  00B0                     _EUSART_ErrorHandler:
  7522  00B0                     	ds	2
  7523  00B2                     _EUSART_OverrunErrorHandler:
  7524  00B2                     	ds	2
  7525  00B4                     _EUSART_FramingErrorHandler:
  7526  00B4                     	ds	2
  7527  00B6                     _EUSART_RxDefaultInterruptHandler:
  7528  00B6                     	ds	2
  7529  00B8                     _EUSART_TxDefaultInterruptHandler:
  7530  00B8                     	ds	2
  7531  00BA                     _timer1ReloadVal:
  7532  00BA                     	ds	2
  7533  00BC                     _ticksDown@ccp3$F977:
  7534  00BC                     	ds	2
  7535  00BE                     _ticksUp@ccp3$F976:
  7536  00BE                     	ds	2
  7537  00C0                     _CCP3_CallBack:
  7538  00C0                     	ds	2
  7539  00C2                     _ticksDown@ccp2$F856:
  7540  00C2                     	ds	2
  7541  00C4                     _ticksUp@ccp2$F855:
  7542  00C4                     	ds	2
  7543  00C6                     _CCP2_CallBack:
  7544  00C6                     	ds	2
  7545  00C8                     _ticksDown:
  7546  00C8                     	ds	2
  7547  00CA                     _ticksUp:
  7548  00CA                     	ds	2
  7549  00CC                     _CCP1_CallBack:
  7550  00CC                     	ds	2
  7551  00CE                     _TMR0_InterruptHandler:
  7552  00CE                     	ds	2
  7553  00D0                     _eusartRxLastError:
  7554  00D0                     	ds	1
  7555  00D1                     _eusartRxCount:
  7556  00D1                     	ds	1
  7557  00D2                     _eusartTxBufferRemaining:
  7558  00D2                     	ds	1
  7559  00D3                     _eusartTxTail:
  7560  00D3                     	ds	1
  7561  00D4                     _lastTrig@ccp3$F979:
  7562  00D4                     	ds	1
  7563  00D5                     _sameSens@ccp3$F978:
  7564  00D5                     	ds	1
  7565  00D6                     _lastTrig@ccp2$F858:
  7566  00D6                     	ds	1
  7567  00D7                     _sameSens@ccp2$F857:
  7568  00D7                     	ds	1
  7569  00D8                     _lastTrig@ccp1$F716:
  7570  00D8                     	ds	1
  7571  00D9                     _sameSens:
  7572  00D9                     	ds	1
  7573  00DA                     _lastTrig:
  7574  00DA                     	ds	1
  7575                           
  7576                           	psect	bssBANK2
  7577  0120                     __pbssBANK2:
  7578  0120                     _eusartRxStatusBuffer:
  7579  0120                     	ds	8
  7580  0128                     _eusartRxBuffer:
  7581  0128                     	ds	8
  7582  0130                     _eusartTxBuffer:
  7583  0130                     	ds	8
  7584  0138                     _micros@FRT$F1518:
  7585  0138                     	ds	4
  7586  013C                     _millis:
  7587  013C                     	ds	4
  7588  0140                     _micros:
  7589  0140                     	ds	4
  7590  0144                     _dutyCyclePerMilli:
  7591  0144                     	ds	2
  7592  0146                     _Sens3:
  7593  0146                     	ds	6
  7594  014C                     _Sens2:
  7595  014C                     	ds	6
  7596  0152                     _Sens1:
  7597  0152                     	ds	6
  7598                           
  7599                           	psect	bssBANK3
  7600  01A0                     __pbssBANK3:
  7601  01A0                     _dbuf:
  7602  01A0                     	ds	32
  7603                           
  7604                           	psect	clrtext
  7605  0A52                     clear_ram0:	
  7606                           ;	Called with FSR0 containing the base address, and
  7607                           ;	WREG with the size to clear
  7608                           
  7609  0A52  0064               	clrwdt	;clear the watchdog before getting into this loop
  7610  0A53                     clrloop0:
  7611  0A53  0180               	clrf	0	;clear RAM location pointed to by FSR
  7612  0A54  3101               	addfsr 0,1
  7613  0A55  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7614  0A56  2A53               	goto	clrloop0	;have we reached the end yet?
  7615  0A57  3400               	retlw	0	;all done for this memory range, return
  7616                           
  7617                           	psect	cstackBANK1
  7618  00DB                     __pcstackBANK1:
  7619  00DB                     ??_printf:
  7620                           
  7621                           ; 1 bytes @ 0x0
  7622  00DB                     	ds	1
  7623  00DC                     printf@ap:
  7624                           
  7625                           ; 1 bytes @ 0x1
  7626  00DC                     	ds	1
  7627  00DD                     ?_JSN_Sensor_Init:
  7628  00DD                     JSN_Sensor_Init@trigPin:	
  7629                           ; 1 bytes @ 0x2
  7630                           
  7631                           
  7632                           ; 1 bytes @ 0x2
  7633  00DD                     	ds	1
  7634  00DE                     JSN_Sensor_Init@echoPin:
  7635                           
  7636                           ; 1 bytes @ 0x3
  7637  00DE                     	ds	1
  7638  00DF                     ??_JSN_Sensor_Init:
  7639                           
  7640                           ; 1 bytes @ 0x4
  7641  00DF                     	ds	2
  7642  00E1                     JSN_Sensor_Init@Sensor:
  7643                           
  7644                           ; 1 bytes @ 0x6
  7645  00E1                     	ds	1
  7646  00E2                     ??_main:
  7647                           
  7648                           ; 1 bytes @ 0x7
  7649  00E2                     	ds	4
  7650  00E6                     main@prevMilli:
  7651                           
  7652                           ; 4 bytes @ 0xB
  7653  00E6                     	ds	4
  7654  00EA                     main@distance:
  7655                           
  7656                           ; 2 bytes @ 0xF
  7657  00EA                     	ds	2
  7658  00EC                     main@currMilli:
  7659                           
  7660                           ; 4 bytes @ 0x11
  7661  00EC                     	ds	4
  7662                           
  7663                           	psect	cstackCOMMON
  7664  0070                     __pcstackCOMMON:
  7665  0070                     ?_JSN_GetLastTrig:
  7666  0070                     ??_JSN_GetLastTrig:	
  7667                           ; 1 bytes @ 0x0
  7668                           
  7669  0070                     ?_JSN_SensorGetPtr:	
  7670                           ; 1 bytes @ 0x0
  7671                           
  7672  0070                     ?_SYSTEM_Initialize:	
  7673                           ; 1 bytes @ 0x0
  7674                           
  7675  0070                     ?_PMD_Initialize:	
  7676                           ; 1 bytes @ 0x0
  7677                           
  7678  0070                     ?_PIN_MANAGER_Initialize:	
  7679                           ; 1 bytes @ 0x0
  7680                           
  7681  0070                     ?_OSCILLATOR_Initialize:	
  7682                           ; 1 bytes @ 0x0
  7683                           
  7684  0070                     ?_WDT_Initialize:	
  7685                           ; 1 bytes @ 0x0
  7686                           
  7687  0070                     ?_CCP3_Initialize:	
  7688                           ; 1 bytes @ 0x0
  7689                           
  7690  0070                     ?_CCP1_Initialize:	
  7691                           ; 1 bytes @ 0x0
  7692                           
  7693  0070                     ?_TMR2_Initialize:	
  7694                           ; 1 bytes @ 0x0
  7695                           
  7696  0070                     ?_TMR0_Initialize:	
  7697                           ; 1 bytes @ 0x0
  7698                           
  7699  0070                     ?_CCP2_Initialize:	
  7700                           ; 1 bytes @ 0x0
  7701                           
  7702  0070                     ?_CCP4_Initialize:	
  7703                           ; 1 bytes @ 0x0
  7704                           
  7705  0070                     ?_TMR3_Initialize:	
  7706                           ; 1 bytes @ 0x0
  7707                           
  7708  0070                     ?_PWM5_Initialize:	
  7709                           ; 1 bytes @ 0x0
  7710                           
  7711  0070                     ?_TMR1_Initialize:	
  7712                           ; 1 bytes @ 0x0
  7713                           
  7714  0070                     ?_EUSART_Initialize:	
  7715                           ; 1 bytes @ 0x0
  7716                           
  7717  0070                     ?_TMR0_CallBack:	
  7718                           ; 1 bytes @ 0x0
  7719                           
  7720  0070                     ??_TMR0_CallBack:	
  7721                           ; 1 bytes @ 0x0
  7722                           
  7723  0070                     ?_FRT_IncMillis:	
  7724                           ; 1 bytes @ 0x0
  7725                           
  7726  0070                     ??_FRT_IncMillis:	
  7727                           ; 1 bytes @ 0x0
  7728                           
  7729  0070                     ?_FRT_IncMicros:	
  7730                           ; 1 bytes @ 0x0
  7731                           
  7732  0070                     ??_FRT_IncMicros:	
  7733                           ; 1 bytes @ 0x0
  7734                           
  7735  0070                     ?_EUSART_Receive_ISR:	
  7736                           ; 1 bytes @ 0x0
  7737                           
  7738  0070                     ?_EUSART_Transmit_ISR:	
  7739                           ; 1 bytes @ 0x0
  7740                           
  7741  0070                     ??_EUSART_Transmit_ISR:	
  7742                           ; 1 bytes @ 0x0
  7743                           
  7744  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  7745                           ; 1 bytes @ 0x0
  7746                           
  7747  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  7748                           ; 1 bytes @ 0x0
  7749                           
  7750  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  7751                           ; 1 bytes @ 0x0
  7752                           
  7753  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  7754                           ; 1 bytes @ 0x0
  7755                           
  7756  0070                     ?_EUSART_DefaultErrorHandler:	
  7757                           ; 1 bytes @ 0x0
  7758                           
  7759  0070                     ?_EUSART_RxDataHandler:	
  7760                           ; 1 bytes @ 0x0
  7761                           
  7762  0070                     ??_EUSART_RxDataHandler:	
  7763                           ; 1 bytes @ 0x0
  7764                           
  7765  0070                     ?_CCP4_CompareISR:	
  7766                           ; 1 bytes @ 0x0
  7767                           
  7768  0070                     ??_CCP4_CompareISR:	
  7769                           ; 1 bytes @ 0x0
  7770                           
  7771  0070                     ?_TMR3_ISR:	
  7772                           ; 1 bytes @ 0x0
  7773                           
  7774  0070                     ?_SpeakerTone_Off:	
  7775                           ; 1 bytes @ 0x0
  7776                           
  7777  0070                     ?_TMR3_StopTimer:	
  7778                           ; 1 bytes @ 0x0
  7779                           
  7780  0070                     ?_TMR3_Reload:	
  7781                           ; 1 bytes @ 0x0
  7782                           
  7783  0070                     ?_MotorControl_Off:	
  7784                           ; 1 bytes @ 0x0
  7785                           
  7786  0070                     ?_TMR2_StopTimer:	
  7787                           ; 1 bytes @ 0x0
  7788                           
  7789  0070                     ?_TMR2_WriteTimer:	
  7790                           ; 1 bytes @ 0x0
  7791                           
  7792  0070                     ?_JSN_Sensor_Trig:	
  7793                           ; 1 bytes @ 0x0
  7794                           
  7795  0070                     ?_PIC16_Init:	
  7796                           ; 1 bytes @ 0x0
  7797                           
  7798  0070                     ?_ReadPin:	
  7799                           ; 1 bytes @ 0x0
  7800                           
  7801  0070                     ??_ReadPin:	
  7802                           ; 1 bytes @ 0x0
  7803                           
  7804  0070                     ?_TMR0_ReadTimer:	
  7805                           ; 1 bytes @ 0x0
  7806                           
  7807  0070                     ?_TMR0_ISR:	
  7808                           ; 1 bytes @ 0x0
  7809                           
  7810  0070                     ??_TMR0_ISR:	
  7811                           ; 1 bytes @ 0x0
  7812                           
  7813  0070                     ?_TMR0_GetCallBackNum:	
  7814                           ; 1 bytes @ 0x0
  7815                           
  7816  0070                     ?_CCP1_CaptureISR:	
  7817                           ; 1 bytes @ 0x0
  7818                           
  7819  0070                     ?_CCP2_CaptureISR:	
  7820                           ; 1 bytes @ 0x0
  7821                           
  7822  0070                     ?_CCP3_CaptureISR:	
  7823                           ; 1 bytes @ 0x0
  7824                           
  7825  0070                     ?_TMR1_WriteTimer:	
  7826                           ; 1 bytes @ 0x0
  7827                           
  7828  0070                     ?_TMR1_ISR:	
  7829                           ; 1 bytes @ 0x0
  7830                           
  7831  0070                     ?_EUSART_Write:	
  7832                           ; 1 bytes @ 0x0
  7833                           
  7834  0070                     ?_putch:	
  7835                           ; 1 bytes @ 0x0
  7836                           
  7837  0070                     ?_INTERRUPT_InterruptManager:	
  7838                           ; 1 bytes @ 0x0
  7839                           
  7840  0070                     ?_SpeakerTone_Init:	
  7841                           ; 1 bytes @ 0x0
  7842                           
  7843  0070                     ?_MotorControl_Init:	
  7844                           ; 1 bytes @ 0x0
  7845                           
  7846  0070                     ?i1_TMR3_WriteTimer:	
  7847                           ; 1 bytes @ 0x0
  7848                           
  7849  0070                     ?i1_TMR3_Reload:	
  7850                           ; 1 bytes @ 0x0
  7851                           
  7852  0070                     ?_main:	
  7853                           ; 1 bytes @ 0x0
  7854                           
  7855  0070                     TMR1_WriteTimer@timerVal:	
  7856                           ; 2 bytes @ 0x0
  7857                           
  7858  0070                     i1TMR3_WriteTimer@timerVal:	
  7859                           ; 2 bytes @ 0x0
  7860                           
  7861                           
  7862                           ; 2 bytes @ 0x0
  7863  0070                     	ds	1
  7864  0071                     ??_EUSART_Receive_ISR:
  7865  0071                     ??_EUSART_DefaultErrorHandler:	
  7866                           ; 1 bytes @ 0x1
  7867                           
  7868                           
  7869                           ; 1 bytes @ 0x1
  7870  0071                     	ds	1
  7871  0072                     ??_TMR3_ISR:
  7872  0072                     ??_TMR1_WriteTimer:	
  7873                           ; 1 bytes @ 0x2
  7874                           
  7875  0072                     ??_TMR1_ISR:	
  7876                           ; 1 bytes @ 0x2
  7877                           
  7878  0072                     ??i1_TMR3_WriteTimer:	
  7879                           ; 1 bytes @ 0x2
  7880                           
  7881  0072                     ??i1_TMR3_Reload:	
  7882                           ; 1 bytes @ 0x2
  7883                           
  7884  0072                     ReadPin@pin:	
  7885                           ; 1 bytes @ 0x2
  7886                           
  7887                           
  7888                           ; 1 bytes @ 0x2
  7889  0072                     	ds	1
  7890  0073                     ?_CCP1_DefaultCallBack:
  7891  0073                     ?_CCP2_DefaultCallBack:	
  7892                           ; 1 bytes @ 0x3
  7893                           
  7894  0073                     ?_CCP3_DefaultCallBack:	
  7895                           ; 1 bytes @ 0x3
  7896                           
  7897  0073                     CCP1_DefaultCallBack@capturedValue:	
  7898                           ; 1 bytes @ 0x3
  7899                           
  7900  0073                     CCP2_DefaultCallBack@capturedValue:	
  7901                           ; 2 bytes @ 0x3
  7902                           
  7903  0073                     CCP3_DefaultCallBack@capturedValue:	
  7904                           ; 2 bytes @ 0x3
  7905                           
  7906                           
  7907                           ; 2 bytes @ 0x3
  7908  0073                     	ds	2
  7909  0075                     ??_CCP1_DefaultCallBack:
  7910  0075                     ??_CCP2_DefaultCallBack:	
  7911                           ; 1 bytes @ 0x5
  7912                           
  7913  0075                     ??_CCP3_DefaultCallBack:	
  7914                           ; 1 bytes @ 0x5
  7915                           
  7916                           
  7917                           ; 1 bytes @ 0x5
  7918  0075                     	ds	2
  7919  0077                     ??_CCP1_CaptureISR:
  7920  0077                     ??_CCP2_CaptureISR:	
  7921                           ; 1 bytes @ 0x7
  7922                           
  7923  0077                     ??_CCP3_CaptureISR:	
  7924                           ; 1 bytes @ 0x7
  7925                           
  7926                           
  7927                           ; 1 bytes @ 0x7
  7928  0077                     	ds	1
  7929  0078                     CCP1_CaptureISR@module:
  7930  0078                     CCP2_CaptureISR@module:	
  7931                           ; 2 bytes @ 0x8
  7932                           
  7933  0078                     CCP3_CaptureISR@module:	
  7934                           ; 2 bytes @ 0x8
  7935                           
  7936                           
  7937                           ; 2 bytes @ 0x8
  7938  0078                     	ds	2
  7939  007A                     ??_INTERRUPT_InterruptManager:
  7940                           
  7941                           	psect	cstackBANK0
  7942  0020                     __pcstackBANK0:	
  7943                           ; 1 bytes @ 0xA
  7944                           
  7945  0020                     ?_SetPin:
  7946  0020                     ?_WritePin:	
  7947                           ; 1 bytes @ 0x0
  7948                           
  7949  0020                     ??_JSN_SensorGetPtr:	
  7950                           ; 1 bytes @ 0x0
  7951                           
  7952  0020                     ??_PMD_Initialize:	
  7953                           ; 1 bytes @ 0x0
  7954                           
  7955  0020                     ??_PIN_MANAGER_Initialize:	
  7956                           ; 1 bytes @ 0x0
  7957                           
  7958  0020                     ??_OSCILLATOR_Initialize:	
  7959                           ; 1 bytes @ 0x0
  7960                           
  7961  0020                     ??_WDT_Initialize:	
  7962                           ; 1 bytes @ 0x0
  7963                           
  7964  0020                     ??_TMR2_Initialize:	
  7965                           ; 1 bytes @ 0x0
  7966                           
  7967  0020                     ??_CCP4_Initialize:	
  7968                           ; 1 bytes @ 0x0
  7969                           
  7970  0020                     ??_TMR3_Initialize:	
  7971                           ; 1 bytes @ 0x0
  7972                           
  7973  0020                     ??_PWM5_Initialize:	
  7974                           ; 1 bytes @ 0x0
  7975                           
  7976  0020                     ??_TMR1_Initialize:	
  7977                           ; 1 bytes @ 0x0
  7978                           
  7979  0020                     ?_TMR0_SetInterruptHandler:	
  7980                           ; 1 bytes @ 0x0
  7981                           
  7982  0020                     ?_CCP1_SetCallBack:	
  7983                           ; 1 bytes @ 0x0
  7984                           
  7985  0020                     ?_CCP2_SetCallBack:	
  7986                           ; 1 bytes @ 0x0
  7987                           
  7988  0020                     ?_CCP3_SetCallBack:	
  7989                           ; 1 bytes @ 0x0
  7990                           
  7991  0020                     ?_EUSART_SetRxInterruptHandler:	
  7992                           ; 1 bytes @ 0x0
  7993                           
  7994  0020                     ?_EUSART_SetTxInterruptHandler:	
  7995                           ; 1 bytes @ 0x0
  7996                           
  7997  0020                     ?_EUSART_SetFramingErrorHandler:	
  7998                           ; 1 bytes @ 0x0
  7999                           
  8000  0020                     ?_EUSART_SetOverrunErrorHandler:	
  8001                           ; 1 bytes @ 0x0
  8002                           
  8003  0020                     ?_EUSART_SetErrorHandler:	
  8004                           ; 1 bytes @ 0x0
  8005                           
  8006  0020                     ??_TMR3_StopTimer:	
  8007                           ; 1 bytes @ 0x0
  8008                           
  8009  0020                     ??_TMR2_StopTimer:	
  8010                           ; 1 bytes @ 0x0
  8011                           
  8012  0020                     ??_TMR2_WriteTimer:	
  8013                           ; 1 bytes @ 0x0
  8014                           
  8015  0020                     ??_TMR0_ReadTimer:	
  8016                           ; 1 bytes @ 0x0
  8017                           
  8018  0020                     ??_TMR0_GetCallBackNum:	
  8019                           ; 1 bytes @ 0x0
  8020                           
  8021  0020                     ??_EUSART_Write:	
  8022                           ; 1 bytes @ 0x0
  8023                           
  8024  0020                     ?_TMR3_WriteTimer:	
  8025                           ; 1 bytes @ 0x0
  8026                           
  8027  0020                     ?_strlen:	
  8028                           ; 1 bytes @ 0x0
  8029                           
  8030  0020                     ?___wmul:	
  8031                           ; 2 bytes @ 0x0
  8032                           
  8033  0020                     ?_FRT_GetMillis:	
  8034                           ; 2 bytes @ 0x0
  8035                           
  8036  0020                     ?___lmul:	
  8037                           ; 4 bytes @ 0x0
  8038                           
  8039  0020                     ?___lodiv:	
  8040                           ; 4 bytes @ 0x0
  8041                           
  8042  0020                     ?___lomod:	
  8043                           ; 8 bytes @ 0x0
  8044                           
  8045  0020                     SetPin@io:	
  8046                           ; 8 bytes @ 0x0
  8047                           
  8048  0020                     WritePin@val:	
  8049                           ; 1 bytes @ 0x0
  8050                           
  8051  0020                     TMR2_WriteTimer@timerVal:	
  8052                           ; 1 bytes @ 0x0
  8053                           
  8054  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  8055                           ; 1 bytes @ 0x0
  8056                           
  8057  0020                     CCP1_SetCallBack@customCallBack:	
  8058                           ; 2 bytes @ 0x0
  8059                           
  8060  0020                     CCP2_SetCallBack@customCallBack:	
  8061                           ; 2 bytes @ 0x0
  8062                           
  8063  0020                     CCP3_SetCallBack@customCallBack:	
  8064                           ; 2 bytes @ 0x0
  8065                           
  8066  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  8067                           ; 2 bytes @ 0x0
  8068                           
  8069  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  8070                           ; 2 bytes @ 0x0
  8071                           
  8072  0020                     EUSART_SetErrorHandler@interruptHandler:	
  8073                           ; 2 bytes @ 0x0
  8074                           
  8075  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  8076                           ; 2 bytes @ 0x0
  8077                           
  8078  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  8079                           ; 2 bytes @ 0x0
  8080                           
  8081  0020                     TMR3_WriteTimer@timerVal:	
  8082                           ; 2 bytes @ 0x0
  8083                           
  8084  0020                     ___wmul@multiplier:	
  8085                           ; 2 bytes @ 0x0
  8086                           
  8087  0020                     ___lmul@multiplier:	
  8088                           ; 2 bytes @ 0x0
  8089                           
  8090  0020                     ___lodiv@divisor:	
  8091                           ; 4 bytes @ 0x0
  8092                           
  8093  0020                     ___lomod@divisor:	
  8094                           ; 8 bytes @ 0x0
  8095                           
  8096                           
  8097                           ; 8 bytes @ 0x0
  8098  0020                     	ds	1
  8099  0021                     ??_SetPin:
  8100  0021                     ??_WritePin:	
  8101                           ; 1 bytes @ 0x1
  8102                           
  8103  0021                     ??_MotorControl_Off:	
  8104                           ; 1 bytes @ 0x1
  8105                           
  8106  0021                     ??_MotorControl_Init:	
  8107                           ; 1 bytes @ 0x1
  8108                           
  8109  0021                     TMR0_ReadTimer@readVal:	
  8110                           ; 1 bytes @ 0x1
  8111                           
  8112  0021                     EUSART_Write@txData:	
  8113                           ; 1 bytes @ 0x1
  8114                           
  8115                           
  8116                           ; 1 bytes @ 0x1
  8117  0021                     	ds	1
  8118  0022                     ??_CCP3_Initialize:
  8119  0022                     ??_CCP1_Initialize:	
  8120                           ; 1 bytes @ 0x2
  8121                           
  8122  0022                     ??_TMR0_Initialize:	
  8123                           ; 1 bytes @ 0x2
  8124                           
  8125  0022                     ??_CCP2_Initialize:	
  8126                           ; 1 bytes @ 0x2
  8127                           
  8128  0022                     ??_EUSART_Initialize:	
  8129                           ; 1 bytes @ 0x2
  8130                           
  8131  0022                     ??_TMR0_SetInterruptHandler:	
  8132                           ; 1 bytes @ 0x2
  8133                           
  8134  0022                     ??_CCP1_SetCallBack:	
  8135                           ; 1 bytes @ 0x2
  8136                           
  8137  0022                     ??_CCP2_SetCallBack:	
  8138                           ; 1 bytes @ 0x2
  8139                           
  8140  0022                     ??_CCP3_SetCallBack:	
  8141                           ; 1 bytes @ 0x2
  8142                           
  8143  0022                     ??_EUSART_SetRxInterruptHandler:	
  8144                           ; 1 bytes @ 0x2
  8145                           
  8146  0022                     ??_EUSART_SetTxInterruptHandler:	
  8147                           ; 1 bytes @ 0x2
  8148                           
  8149  0022                     ??_EUSART_SetFramingErrorHandler:	
  8150                           ; 1 bytes @ 0x2
  8151                           
  8152  0022                     ??_EUSART_SetOverrunErrorHandler:	
  8153                           ; 1 bytes @ 0x2
  8154                           
  8155  0022                     ??_EUSART_SetErrorHandler:	
  8156                           ; 1 bytes @ 0x2
  8157                           
  8158  0022                     ??_SpeakerTone_Off:	
  8159                           ; 1 bytes @ 0x2
  8160                           
  8161  0022                     ??_TMR3_Reload:	
  8162                           ; 1 bytes @ 0x2
  8163                           
  8164  0022                     ??_strlen:	
  8165                           ; 1 bytes @ 0x2
  8166                           
  8167  0022                     ??_putch:	
  8168                           ; 1 bytes @ 0x2
  8169                           
  8170  0022                     ??_TMR3_WriteTimer:	
  8171                           ; 1 bytes @ 0x2
  8172                           
  8173  0022                     JSN_SensorGetPtr@sensNum:	
  8174                           ; 1 bytes @ 0x2
  8175                           
  8176  0022                     putch@txData:	
  8177                           ; 1 bytes @ 0x2
  8178                           
  8179  0022                     ___wmul@multiplicand:	
  8180                           ; 1 bytes @ 0x2
  8181                           
  8182                           
  8183                           ; 2 bytes @ 0x2
  8184  0022                     	ds	1
  8185  0023                     ??_SYSTEM_Initialize:
  8186  0023                     ??_PIC16_Init:	
  8187                           ; 1 bytes @ 0x3
  8188                           
  8189  0023                     ?_fputc:	
  8190                           ; 1 bytes @ 0x3
  8191                           
  8192  0023                     SetPin@pin:	
  8193                           ; 2 bytes @ 0x3
  8194                           
  8195  0023                     WritePin@pin:	
  8196                           ; 1 bytes @ 0x3
  8197                           
  8198  0023                     strlen@a:	
  8199                           ; 1 bytes @ 0x3
  8200                           
  8201  0023                     fputc@c:	
  8202                           ; 1 bytes @ 0x3
  8203                           
  8204                           
  8205                           ; 2 bytes @ 0x3
  8206  0023                     	ds	1
  8207  0024                     ??_FRT_GetMillis:
  8208  0024                     ??_SpeakerTone_Init:	
  8209                           ; 1 bytes @ 0x4
  8210                           
  8211  0024                     ??___wmul:	
  8212                           ; 1 bytes @ 0x4
  8213                           
  8214  0024                     strlen@s:	
  8215                           ; 1 bytes @ 0x4
  8216                           
  8217  0024                     ___wmul@product:	
  8218                           ; 1 bytes @ 0x4
  8219                           
  8220  0024                     ___lmul@multiplicand:	
  8221                           ; 2 bytes @ 0x4
  8222                           
  8223                           
  8224                           ; 4 bytes @ 0x4
  8225  0024                     	ds	1
  8226  0025                     fputc@fp:
  8227                           
  8228                           ; 1 bytes @ 0x5
  8229  0025                     	ds	1
  8230  0026                     ??_fputc:
  8231  0026                     ?_FRT_GetMicros:	
  8232                           ; 1 bytes @ 0x6
  8233                           
  8234                           
  8235                           ; 4 bytes @ 0x6
  8236  0026                     	ds	2
  8237  0028                     ??___lmul:
  8238  0028                     ___lmul@product:	
  8239                           ; 1 bytes @ 0x8
  8240                           
  8241  0028                     ___lodiv@dividend:	
  8242                           ; 4 bytes @ 0x8
  8243                           
  8244  0028                     ___lomod@dividend:	
  8245                           ; 8 bytes @ 0x8
  8246                           
  8247                           
  8248                           ; 8 bytes @ 0x8
  8249  0028                     	ds	2
  8250  002A                     ??_FRT_GetMicros:
  8251                           
  8252                           ; 1 bytes @ 0xA
  8253  002A                     	ds	1
  8254  002B                     ?_fputs:
  8255  002B                     fputs@fp:	
  8256                           ; 2 bytes @ 0xB
  8257                           
  8258                           
  8259                           ; 1 bytes @ 0xB
  8260  002B                     	ds	1
  8261  002C                     ??_fputs:
  8262  002C                     ?___lldiv:	
  8263                           ; 1 bytes @ 0xC
  8264                           
  8265  002C                     ___lldiv@divisor:	
  8266                           ; 4 bytes @ 0xC
  8267                           
  8268                           
  8269                           ; 4 bytes @ 0xC
  8270  002C                     	ds	3
  8271  002F                     fputs@c:
  8272                           
  8273                           ; 1 bytes @ 0xF
  8274  002F                     	ds	1
  8275  0030                     ??___lodiv:
  8276  0030                     ??___lomod:	
  8277                           ; 1 bytes @ 0x10
  8278                           
  8279  0030                     fputs@i:	
  8280                           ; 1 bytes @ 0x10
  8281                           
  8282  0030                     ___lldiv@dividend:	
  8283                           ; 2 bytes @ 0x10
  8284                           
  8285                           
  8286                           ; 4 bytes @ 0x10
  8287  0030                     	ds	1
  8288  0031                     ___lomod@counter:
  8289  0031                     ___lodiv@quotient:	
  8290                           ; 1 bytes @ 0x11
  8291                           
  8292                           
  8293                           ; 8 bytes @ 0x11
  8294  0031                     	ds	1
  8295  0032                     fputs@s:
  8296                           
  8297                           ; 1 bytes @ 0x12
  8298  0032                     	ds	1
  8299  0033                     ?_pad:
  8300  0033                     pad@buf:	
  8301                           ; 2 bytes @ 0x13
  8302                           
  8303                           
  8304                           ; 1 bytes @ 0x13
  8305  0033                     	ds	1
  8306  0034                     ??___lldiv:
  8307  0034                     pad@p:	
  8308                           ; 1 bytes @ 0x14
  8309                           
  8310                           
  8311                           ; 2 bytes @ 0x14
  8312  0034                     	ds	1
  8313  0035                     ___lldiv@quotient:
  8314                           
  8315                           ; 4 bytes @ 0x15
  8316  0035                     	ds	1
  8317  0036                     ??_pad:
  8318                           
  8319                           ; 1 bytes @ 0x16
  8320  0036                     	ds	1
  8321  0037                     pad@i:
  8322                           
  8323                           ; 2 bytes @ 0x17
  8324  0037                     	ds	1
  8325  0038                     ??_JSN_Sensor_Trig:
  8326                           
  8327                           ; 1 bytes @ 0x18
  8328  0038                     	ds	1
  8329  0039                     ___lldiv@counter:
  8330  0039                     ___lodiv@counter:	
  8331                           ; 1 bytes @ 0x19
  8332                           
  8333  0039                     pad@w:	
  8334                           ; 1 bytes @ 0x19
  8335                           
  8336                           
  8337                           ; 2 bytes @ 0x19
  8338  0039                     	ds	1
  8339  003A                     ?_JSN_Sensor_GetDistance:
  8340                           
  8341                           ; 2 bytes @ 0x1A
  8342  003A                     	ds	1
  8343  003B                     pad@fp:
  8344                           
  8345                           ; 1 bytes @ 0x1B
  8346  003B                     	ds	1
  8347  003C                     ??_JSN_Sensor_GetDistance:
  8348  003C                     ?_utoa:	
  8349                           ; 1 bytes @ 0x1C
  8350                           
  8351  003C                     JSN_Sensor_Trig@Sensor:	
  8352                           ; 2 bytes @ 0x1C
  8353                           
  8354  003C                     utoa@d:	
  8355                           ; 1 bytes @ 0x1C
  8356                           
  8357                           
  8358                           ; 8 bytes @ 0x1C
  8359  003C                     	ds	2
  8360  003E                     JSN_Sensor_GetDistance@Sensor:
  8361                           
  8362                           ; 1 bytes @ 0x1E
  8363  003E                     	ds	6
  8364  0044                     ??_utoa:
  8365                           
  8366                           ; 1 bytes @ 0x24
  8367  0044                     	ds	1
  8368  0045                     utoa@p:
  8369                           
  8370                           ; 2 bytes @ 0x25
  8371  0045                     	ds	2
  8372  0047                     utoa@fp:
  8373                           
  8374                           ; 1 bytes @ 0x27
  8375  0047                     	ds	1
  8376  0048                     utoa@w:
  8377                           
  8378                           ; 2 bytes @ 0x28
  8379  0048                     	ds	2
  8380  004A                     utoa@n:
  8381                           
  8382                           ; 8 bytes @ 0x2A
  8383  004A                     	ds	8
  8384  0052                     utoa@i:
  8385                           
  8386                           ; 2 bytes @ 0x32
  8387  0052                     	ds	2
  8388  0054                     ?_vfpfcnvrt:
  8389  0054                     vfpfcnvrt@fmt:	
  8390                           ; 2 bytes @ 0x34
  8391                           
  8392                           
  8393                           ; 1 bytes @ 0x34
  8394  0054                     	ds	1
  8395  0055                     vfpfcnvrt@ap:
  8396                           
  8397                           ; 1 bytes @ 0x35
  8398  0055                     	ds	1
  8399  0056                     ??_vfpfcnvrt:
  8400                           
  8401                           ; 1 bytes @ 0x36
  8402  0056                     	ds	5
  8403  005B                     vfpfcnvrt@llu:
  8404                           
  8405                           ; 8 bytes @ 0x3B
  8406  005B                     	ds	8
  8407  0063                     vfpfcnvrt@fp:
  8408                           
  8409                           ; 1 bytes @ 0x43
  8410  0063                     	ds	1
  8411  0064                     ?_vfprintf:
  8412  0064                     vfprintf@fmt:	
  8413                           ; 2 bytes @ 0x44
  8414                           
  8415                           
  8416                           ; 2 bytes @ 0x44
  8417  0064                     	ds	2
  8418  0066                     vfprintf@ap:
  8419                           
  8420                           ; 1 bytes @ 0x46
  8421  0066                     	ds	1
  8422  0067                     ??_vfprintf:
  8423                           
  8424                           ; 1 bytes @ 0x47
  8425  0067                     	ds	2
  8426  0069                     vfprintf@fp:
  8427                           
  8428                           ; 1 bytes @ 0x49
  8429  0069                     	ds	1
  8430  006A                     vfprintf@cfmt:
  8431                           
  8432                           ; 2 bytes @ 0x4A
  8433  006A                     	ds	2
  8434  006C                     ?_printf:
  8435  006C                     printf@fmt:	
  8436                           ; 2 bytes @ 0x4C
  8437                           
  8438                           
  8439                           ; 2 bytes @ 0x4C
  8440  006C                     	ds	4
  8441                           
  8442                           	psect	maintext
  8443  050D                     __pmaintext:	
  8444 ;;
  8445 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  8446 ;;
  8447 ;; *************** function _main *****************
  8448 ;; Defined at:
  8449 ;;		line 40 in file "WCSA_MainApp.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;		None
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;  currMilli       4   17[BANK1 ] unsigned long 
  8454 ;;  prevMilli       4   11[BANK1 ] unsigned long 
  8455 ;;  distance        2   15[BANK1 ] unsigned int 
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  2  993[None  ] int 
  8458 ;; Registers used:
  8459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8460 ;; Tracked objects:
  8461 ;;		On entry : B1F/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8466 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  8467 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8468 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8469 ;;Total ram usage:       14 bytes
  8470 ;; Hardware stack levels required when called: 14
  8471 ;; This function calls:
  8472 ;;		_FRT_GetMillis
  8473 ;;		_JSN_SensorGetPtr
  8474 ;;		_JSN_Sensor_GetDistance
  8475 ;;		_JSN_Sensor_Init
  8476 ;;		_JSN_Sensor_Trig
  8477 ;;		_MotorControl_Init
  8478 ;;		_PIC16_Init
  8479 ;;		_SpeakerTone_Init
  8480 ;;		_printf
  8481 ;; This function is called by:
  8482 ;;		Startup code after reset
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486  050D                     _main:	
  8487                           ;psect for function _main
  8488                           
  8489  050D                     l4334:	
  8490                           ;incstack = 0
  8491                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8492                           
  8493                           
  8494                           ;WCSA_MainApp.c: 42:     PIC16_Init();
  8495  050D  318B  23AE  3185   	fcall	_PIC16_Init
  8496  0510                     l4336:
  8497                           
  8498                           ;WCSA_MainApp.c: 43:     JSN_Sensor_Init(JSN_SensorGetPtr(1), C6, C5);
  8499  0510  3006               	movlw	6
  8500  0511  0021               	movlb	1	; select bank1
  8501  0512  00E2               	movwf	??_main^(0+128)
  8502  0513  0862               	movf	??_main^(0+128),w
  8503  0514  00DD               	movwf	JSN_Sensor_Init@trigPin^(0+128)
  8504  0515  3003               	movlw	3
  8505  0516  00E3               	movwf	(??_main+1)^(0+128)
  8506  0517  0863               	movf	(??_main+1)^(0+128),w
  8507  0518  00DE               	movwf	JSN_Sensor_Init@echoPin^(0+128)
  8508  0519  3001               	movlw	1
  8509  051A  318C  24C4  3185   	fcall	_JSN_SensorGetPtr
  8510  051D  3183  23DA  3185   	fcall	_JSN_Sensor_Init
  8511  0520                     l4338:
  8512                           
  8513                           ;WCSA_MainApp.c: 44:     SpeakerTone_Init();
  8514  0520  3187  27E7  3185   	fcall	_SpeakerTone_Init
  8515  0523                     l4340:
  8516                           
  8517                           ;WCSA_MainApp.c: 45:     MotorControl_Init();
  8518  0523  318B  232C  3185   	fcall	_MotorControl_Init
  8519  0526                     l4342:
  8520  0526                     l4344:
  8521  0526                     l4346:
  8522  0526                     l4348:
  8523                           
  8524                           ;WCSA_MainApp.c: 58:     JSN_Sensor_Trig(JSN_SensorGetPtr(1));
  8525  0526  3001               	movlw	1
  8526  0527  318C  24C4  3185   	fcall	_JSN_SensorGetPtr
  8527  052A  3186  26E9  3185   	fcall	_JSN_Sensor_Trig
  8528  052D                     l4350:
  8529                           
  8530                           ;WCSA_MainApp.c: 59:     currMilli = FRT_GetMillis();
  8531  052D  318B  237B  3185   	fcall	_FRT_GetMillis
  8532  0530  0020               	movlb	0	; select bank0
  8533  0531  0823               	movf	?_FRT_GetMillis+3,w
  8534  0532  0021               	movlb	1	; select bank1
  8535  0533  00EF               	movwf	(main@currMilli+3)^(0+128)
  8536  0534  0020               	movlb	0	; select bank0
  8537  0535  0822               	movf	?_FRT_GetMillis+2,w
  8538  0536  0021               	movlb	1	; select bank1
  8539  0537  00EE               	movwf	(main@currMilli+2)^(0+128)
  8540  0538  0020               	movlb	0	; select bank0
  8541  0539  0821               	movf	?_FRT_GetMillis+1,w
  8542  053A  0021               	movlb	1	; select bank1
  8543  053B  00ED               	movwf	(main@currMilli+1)^(0+128)
  8544  053C  0020               	movlb	0	; select bank0
  8545  053D  0820               	movf	?_FRT_GetMillis,w
  8546  053E  0021               	movlb	1	; select bank1
  8547  053F  00EC               	movwf	main@currMilli^(0+128)
  8548  0540                     l4352:
  8549                           
  8550                           ;WCSA_MainApp.c: 60:     prevMilli = currMilli;
  8551  0540  0021               	movlb	1	; select bank1
  8552  0541  086F               	movf	(main@currMilli+3)^(0+128),w
  8553  0542  00E9               	movwf	(main@prevMilli+3)^(0+128)
  8554  0543  086E               	movf	(main@currMilli+2)^(0+128),w
  8555  0544  00E8               	movwf	(main@prevMilli+2)^(0+128)
  8556  0545  086D               	movf	(main@currMilli+1)^(0+128),w
  8557  0546  00E7               	movwf	(main@prevMilli+1)^(0+128)
  8558  0547  086C               	movf	main@currMilli^(0+128),w
  8559  0548  00E6               	movwf	main@prevMilli^(0+128)
  8560  0549                     l4354:
  8561                           
  8562                           ;WCSA_MainApp.c: 64:         currMilli = FRT_GetMillis();
  8563  0549  318B  237B  3185   	fcall	_FRT_GetMillis
  8564  054C  0020               	movlb	0	; select bank0
  8565  054D  0823               	movf	?_FRT_GetMillis+3,w
  8566  054E  0021               	movlb	1	; select bank1
  8567  054F  00EF               	movwf	(main@currMilli+3)^(0+128)
  8568  0550  0020               	movlb	0	; select bank0
  8569  0551  0822               	movf	?_FRT_GetMillis+2,w
  8570  0552  0021               	movlb	1	; select bank1
  8571  0553  00EE               	movwf	(main@currMilli+2)^(0+128)
  8572  0554  0020               	movlb	0	; select bank0
  8573  0555  0821               	movf	?_FRT_GetMillis+1,w
  8574  0556  0021               	movlb	1	; select bank1
  8575  0557  00ED               	movwf	(main@currMilli+1)^(0+128)
  8576  0558  0020               	movlb	0	; select bank0
  8577  0559  0820               	movf	?_FRT_GetMillis,w
  8578  055A  0021               	movlb	1	; select bank1
  8579  055B  00EC               	movwf	main@currMilli^(0+128)
  8580  055C                     l4356:
  8581                           
  8582                           ;WCSA_MainApp.c: 67:         if ((currMilli - prevMilli) >= 50) {
  8583  055C  0866               	movf	main@prevMilli^(0+128),w
  8584  055D  026C               	subwf	main@currMilli^(0+128),w
  8585  055E  00E2               	movwf	??_main^(0+128)
  8586  055F  0867               	movf	(main@prevMilli+1)^(0+128),w
  8587  0560  3B6D               	subwfb	(main@currMilli+1)^(0+128),w
  8588  0561  00E3               	movwf	(??_main^(0+128)+1)
  8589  0562  0868               	movf	(main@prevMilli+2)^(0+128),w
  8590  0563  3B6E               	subwfb	(main@currMilli+2)^(0+128),w
  8591  0564  00E4               	movwf	(??_main^(0+128)+2)
  8592  0565  0869               	movf	(main@prevMilli+3)^(0+128),w
  8593  0566  3B6F               	subwfb	(main@currMilli+3)^(0+128),w
  8594  0567  00E5               	movwf	(??_main^(0+128)+3)
  8595  0568  0865               	movf	(??_main^(0+128)+3),w
  8596  0569  1D03               	btfss	3,2
  8597  056A  2D77               	goto	u1730
  8598  056B  0864               	movf	(??_main^(0+128)+2),w
  8599  056C  1D03               	btfss	3,2
  8600  056D  2D77               	goto	u1730
  8601  056E  0863               	movf	(??_main^(0+128)+1),w
  8602  056F  1D03               	btfss	3,2
  8603  0570  2D77               	goto	u1730
  8604  0571  3032               	movlw	50
  8605  0572  0262               	subwf	??_main^(0+128),w
  8606  0573  1C03               	btfss	3,0
  8607  0574  2D76               	goto	u1731
  8608  0575  2D77               	goto	u1730
  8609  0576                     u1731:
  8610  0576  2D49               	goto	l4354
  8611  0577                     u1730:
  8612  0577                     l4358:
  8613                           
  8614                           ;WCSA_MainApp.c: 68:             distance = JSN_Sensor_GetDistance(JSN_SensorGetPtr(1));
  8615  0577  3001               	movlw	1
  8616  0578  318C  24C4  3185   	fcall	_JSN_SensorGetPtr
  8617  057B  318F  2734  3185   	fcall	_JSN_Sensor_GetDistance
  8618  057E  0020               	movlb	0	; select bank0
  8619  057F  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  8620  0580  0021               	movlb	1	; select bank1
  8621  0581  00EB               	movwf	(main@distance+1)^(0+128)
  8622  0582  0020               	movlb	0	; select bank0
  8623  0583  083A               	movf	?_JSN_Sensor_GetDistance,w
  8624  0584  0021               	movlb	1	; select bank1
  8625  0585  00EA               	movwf	main@distance^(0+128)
  8626                           
  8627                           ;WCSA_MainApp.c: 69:             printf("%u", distance);
  8628  0586  306C               	movlw	low (STR_3| (0+32768))
  8629  0587  0020               	movlb	0	; select bank0
  8630  0588  00EC               	movwf	printf@fmt
  8631  0589  3090               	movlw	high (STR_3| (0+32768))
  8632  058A  00ED               	movwf	printf@fmt+1
  8633  058B  0021               	movlb	1	; select bank1
  8634  058C  086B               	movf	(main@distance+1)^(0+128),w
  8635  058D  0020               	movlb	0	; select bank0
  8636  058E  00EF               	movwf	?_printf+3
  8637  058F  0021               	movlb	1	; select bank1
  8638  0590  086A               	movf	main@distance^(0+128),w
  8639  0591  0020               	movlb	0	; select bank0
  8640  0592  00EE               	movwf	?_printf+2
  8641  0593  318B  23C0  3185   	fcall	_printf
  8642  0596  2D40               	goto	l4352
  8643  0597  3180  2890         	ljmp	start
  8644  0599                     __end_of_main:
  8645                           
  8646                           	psect	text1
  8647  07E7                     __ptext1:	
  8648 ;; *************** function _SpeakerTone_Init *****************
  8649 ;; Defined at:
  8650 ;;		line 35 in file "SpeakerTone.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;		None
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;		None
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  1    wreg      void 
  8657 ;; Registers used:
  8658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8659 ;; Tracked objects:
  8660 ;;		On entry : 0/0
  8661 ;;		On exit  : 0/0
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8668 ;;Total ram usage:        0 bytes
  8669 ;; Hardware stack levels used: 1
  8670 ;; Hardware stack levels required when called: 7
  8671 ;; This function calls:
  8672 ;;		_SetPin
  8673 ;;		_SpeakerTone_Off
  8674 ;;		_WritePin
  8675 ;; This function is called by:
  8676 ;;		_main
  8677 ;; This function uses a non-reentrant model
  8678 ;;
  8679                           
  8680  07E7                     _SpeakerTone_Init:	
  8681                           ;psect for function _SpeakerTone_Init
  8682                           
  8683  07E7                     l4234:	
  8684                           ;incstack = 0
  8685                           ; Regs used in _SpeakerTone_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8686                           
  8687                           
  8688                           ;SpeakerTone.c: 37:     SetPin(C1, 0);
  8689  07E7  0020               	movlb	0	; select bank0
  8690  07E8  01A0               	clrf	SetPin@io
  8691  07E9  300D               	movlw	13
  8692  07EA  3183  231F  3187   	fcall	_SetPin
  8693                           
  8694                           ;SpeakerTone.c: 38:     WritePin(C1, 0);
  8695  07ED  0020               	movlb	0	; select bank0
  8696  07EE  01A0               	clrf	WritePin@val
  8697  07EF  300D               	movlw	13
  8698  07F0  3182  2264  3187   	fcall	_WritePin
  8699  07F3                     l4236:
  8700                           
  8701                           ;SpeakerTone.c: 41:     currFreq = 440;
  8702  07F3  30B8               	movlw	184
  8703  07F4  0021               	movlb	1	; select bank1
  8704  07F5  00AE               	movwf	_currFreq^(0+128)
  8705  07F6  3001               	movlw	1
  8706  07F7  00AF               	movwf	(_currFreq^(0+128)+1)
  8707  07F8                     l4238:
  8708                           
  8709                           ;SpeakerTone.c: 42:     ocCount = 0x11C1;
  8710  07F8  30C1               	movlw	193
  8711  07F9  00AC               	movwf	_ocCount^(0+128)
  8712  07FA  3011               	movlw	17
  8713  07FB  00AD               	movwf	(_ocCount^(0+128)+1)
  8714  07FC                     l4240:
  8715                           
  8716                           ;SpeakerTone.c: 45:     SpeakerTone_Off();
  8717  07FC  318A  226D  3187   	fcall	_SpeakerTone_Off
  8718  07FF                     l804:
  8719  07FF  0008               	return
  8720  0800                     __end_of_SpeakerTone_Init:
  8721                           
  8722                           	psect	text2
  8723  0A6D                     __ptext2:	
  8724 ;; *************** function _SpeakerTone_Off *****************
  8725 ;; Defined at:
  8726 ;;		line 78 in file "SpeakerTone.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;		None
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;		None
  8731 ;; Return value:  Size  Location     Type
  8732 ;;                  1    wreg      void 
  8733 ;; Registers used:
  8734 ;;		wreg, status,2, status,0, pclath, cstack
  8735 ;; Tracked objects:
  8736 ;;		On entry : 0/0
  8737 ;;		On exit  : 0/0
  8738 ;;		Unchanged: 0/0
  8739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8744 ;;Total ram usage:        0 bytes
  8745 ;; Hardware stack levels used: 1
  8746 ;; Hardware stack levels required when called: 6
  8747 ;; This function calls:
  8748 ;;		_TMR3_Reload
  8749 ;;		_TMR3_StopTimer
  8750 ;; This function is called by:
  8751 ;;		_SpeakerTone_Init
  8752 ;;		_SpeakerTone_SetFrequency
  8753 ;; This function uses a non-reentrant model
  8754 ;;
  8755                           
  8756  0A6D                     _SpeakerTone_Off:	
  8757                           ;psect for function _SpeakerTone_Off
  8758                           
  8759  0A6D                     l3988:	
  8760                           ;incstack = 0
  8761                           ; Regs used in _SpeakerTone_Off: [wreg+status,2+status,0+pclath+cstack]
  8762                           
  8763                           
  8764                           ;SpeakerTone.c: 79:     TMR3_StopTimer();
  8765  0A6D  318A  2238  318A   	fcall	_TMR3_StopTimer
  8766  0A70                     l3990:
  8767                           
  8768                           ;SpeakerTone.c: 80:     TMR3_Reload();
  8769  0A70  318B  2313  318A   	fcall	_TMR3_Reload
  8770  0A73                     l817:
  8771  0A73  0008               	return
  8772  0A74                     __end_of_SpeakerTone_Off:
  8773                           
  8774                           	psect	text3
  8775  0A38                     __ptext3:	
  8776 ;; *************** function _TMR3_StopTimer *****************
  8777 ;; Defined at:
  8778 ;;		line 59 in file "tmr3.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;		None
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;		None
  8783 ;; Return value:  Size  Location     Type
  8784 ;;                  1    wreg      void 
  8785 ;; Registers used:
  8786 ;;		None
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/0
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8796 ;;Total ram usage:        0 bytes
  8797 ;; Hardware stack levels used: 1
  8798 ;; Hardware stack levels required when called: 4
  8799 ;; This function calls:
  8800 ;;		Nothing
  8801 ;; This function is called by:
  8802 ;;		_SpeakerTone_Off
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806  0A38                     _TMR3_StopTimer:	
  8807                           ;psect for function _TMR3_StopTimer
  8808                           
  8809  0A38                     l3692:	
  8810                           ;incstack = 0
  8811                           ; Regs used in _TMR3_StopTimer: []
  8812                           
  8813                           
  8814                           ;tmr3.c: 62:     T3CONbits.TMR3ON = 0;
  8815  0A38  0028               	movlb	8	; select bank8
  8816  0A39  1013               	bcf	19,0	;volatile
  8817  0A3A                     l951:
  8818  0A3A  0008               	return
  8819  0A3B                     __end_of_TMR3_StopTimer:
  8820                           
  8821                           	psect	text4
  8822  0B13                     __ptext4:	
  8823 ;; *************** function _TMR3_Reload *****************
  8824 ;; Defined at:
  8825 ;;		line 108 in file "tmr3.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;		None
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;		None
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1    wreg      void 
  8832 ;; Registers used:
  8833 ;;		wreg, status,2, status,0, pclath, cstack
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;Total ram usage:        0 bytes
  8844 ;; Hardware stack levels used: 1
  8845 ;; Hardware stack levels required when called: 5
  8846 ;; This function calls:
  8847 ;;		_TMR3_WriteTimer
  8848 ;; This function is called by:
  8849 ;;		_SpeakerTone_Off
  8850 ;; This function uses a non-reentrant model
  8851 ;;
  8852                           
  8853  0B13                     _TMR3_Reload:	
  8854                           ;psect for function _TMR3_Reload
  8855                           
  8856  0B13                     l3694:	
  8857                           ;incstack = 0
  8858                           ; Regs used in _TMR3_Reload: [wreg+status,2+status,0+pclath+cstack]
  8859                           
  8860                           
  8861                           ;tmr3.c: 110:     TMR3_WriteTimer(timer3ReloadVal);
  8862  0B13  0021               	movlb	1	; select bank1
  8863  0B14  0829               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
  8864  0B15  0020               	movlb	0	; select bank0
  8865  0B16  00A1               	movwf	TMR3_WriteTimer@timerVal+1
  8866  0B17  0021               	movlb	1	; select bank1
  8867  0B18  0828               	movf	_timer3ReloadVal^(0+128),w	;volatile
  8868  0B19  0020               	movlb	0	; select bank0
  8869  0B1A  00A0               	movwf	TMR3_WriteTimer@timerVal
  8870  0B1B  318C  2475  318B   	fcall	_TMR3_WriteTimer
  8871  0B1E                     l962:
  8872  0B1E  0008               	return
  8873  0B1F                     __end_of_TMR3_Reload:
  8874                           
  8875                           	psect	text5
  8876  0C75                     __ptext5:	
  8877 ;; *************** function _TMR3_WriteTimer *****************
  8878 ;; Defined at:
  8879 ;;		line 84 in file "tmr3.c"
  8880 ;; Parameters:    Size  Location     Type
  8881 ;;  timerVal        2    0[BANK0 ] unsigned short 
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;		None
  8884 ;; Return value:  Size  Location     Type
  8885 ;;                  1    wreg      void 
  8886 ;; Registers used:
  8887 ;;		wreg, status,2
  8888 ;; Tracked objects:
  8889 ;;		On entry : 0/0
  8890 ;;		On exit  : 0/0
  8891 ;;		Unchanged: 0/0
  8892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8896 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8897 ;;Total ram usage:        2 bytes
  8898 ;; Hardware stack levels used: 1
  8899 ;; Hardware stack levels required when called: 4
  8900 ;; This function calls:
  8901 ;;		Nothing
  8902 ;; This function is called by:
  8903 ;;		_TMR3_Reload
  8904 ;; This function uses a non-reentrant model
  8905 ;;
  8906                           
  8907  0C75                     _TMR3_WriteTimer:	
  8908                           ;psect for function _TMR3_WriteTimer
  8909                           
  8910  0C75                     l3324:	
  8911                           ;incstack = 0
  8912                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
  8913                           
  8914                           
  8915                           ;tmr3.c: 84: void TMR3_WriteTimer(uint16_t timerVal);tmr3.c: 85: {;tmr3.c: 86:     if (T
      +                          3CONbits.T3SYNC == 1)
  8916  0C75  0028               	movlb	8	; select bank8
  8917  0C76  1D13               	btfss	19,2	;volatile
  8918  0C77  2C79               	goto	u1171
  8919  0C78  2C7A               	goto	u1170
  8920  0C79                     u1171:
  8921  0C79  2C85               	goto	l3334
  8922  0C7A                     u1170:
  8923  0C7A                     l3326:
  8924                           
  8925                           ;tmr3.c: 87:     {;tmr3.c: 89:         T3CONbits.TMR3ON = 0;
  8926  0C7A  1013               	bcf	19,0	;volatile
  8927  0C7B                     l3328:
  8928                           
  8929                           ;tmr3.c: 92:         TMR3H = (uint8_t)(timerVal >> 8);
  8930  0C7B  0020               	movlb	0	; select bank0
  8931  0C7C  0821               	movf	TMR3_WriteTimer@timerVal+1,w
  8932  0C7D  0028               	movlb	8	; select bank8
  8933  0C7E  0092               	movwf	18	;volatile
  8934  0C7F                     l3330:
  8935                           
  8936                           ;tmr3.c: 93:         TMR3L = (uint8_t)timerVal;
  8937  0C7F  0020               	movlb	0	; select bank0
  8938  0C80  0820               	movf	TMR3_WriteTimer@timerVal,w
  8939  0C81  0028               	movlb	8	; select bank8
  8940  0C82  0091               	movwf	17	;volatile
  8941  0C83                     l3332:
  8942                           
  8943                           ;tmr3.c: 96:         T3CONbits.TMR3ON =1;
  8944  0C83  1413               	bsf	19,0	;volatile
  8945                           
  8946                           ;tmr3.c: 97:     }
  8947  0C84  2C8D               	goto	l959
  8948  0C85                     l3334:
  8949                           
  8950                           ;tmr3.c: 99:     {;tmr3.c: 101:         TMR3H = (uint8_t)(timerVal >> 8);
  8951  0C85  0020               	movlb	0	; select bank0
  8952  0C86  0821               	movf	TMR3_WriteTimer@timerVal+1,w
  8953  0C87  0028               	movlb	8	; select bank8
  8954  0C88  0092               	movwf	18	;volatile
  8955  0C89                     l3336:
  8956                           
  8957                           ;tmr3.c: 102:         TMR3L = (uint8_t)timerVal;
  8958  0C89  0020               	movlb	0	; select bank0
  8959  0C8A  0820               	movf	TMR3_WriteTimer@timerVal,w
  8960  0C8B  0028               	movlb	8	; select bank8
  8961  0C8C  0091               	movwf	17	;volatile
  8962  0C8D                     l959:
  8963  0C8D  0008               	return
  8964  0C8E                     __end_of_TMR3_WriteTimer:
  8965                           
  8966                           	psect	text6
  8967  0BAE                     __ptext6:	
  8968 ;; *************** function _PIC16_Init *****************
  8969 ;; Defined at:
  8970 ;;		line 16 in file "PIC16Xpress_DevBoard.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;		None
  8973 ;; Auto vars:     Size  Location     Type
  8974 ;;		None
  8975 ;; Return value:  Size  Location     Type
  8976 ;;                  1    wreg      void 
  8977 ;; Registers used:
  8978 ;;		wreg, status,2, status,0, pclath, cstack
  8979 ;; Tracked objects:
  8980 ;;		On entry : 0/0
  8981 ;;		On exit  : 0/0
  8982 ;;		Unchanged: 0/0
  8983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8988 ;;Total ram usage:        0 bytes
  8989 ;; Hardware stack levels used: 1
  8990 ;; Hardware stack levels required when called: 7
  8991 ;; This function calls:
  8992 ;;		_SYSTEM_Initialize
  8993 ;; This function is called by:
  8994 ;;		_main
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998  0BAE                     _PIC16_Init:	
  8999                           ;psect for function _PIC16_Init
  9000                           
  9001  0BAE                     l4132:	
  9002                           ;incstack = 0
  9003                           ; Regs used in _PIC16_Init: [wreg+status,2+status,0+pclath+cstack]
  9004                           
  9005                           
  9006                           ;PIC16Xpress_DevBoard.c: 18:     PIE0 = 0x00;
  9007  0BAE  0021               	movlb	1	; select bank1
  9008  0BAF  0190               	clrf	16	;volatile
  9009                           
  9010                           ;PIC16Xpress_DevBoard.c: 19:     PIE1 = 0x00;
  9011  0BB0  0191               	clrf	17	;volatile
  9012                           
  9013                           ;PIC16Xpress_DevBoard.c: 20:     PIE2 = 0x00;
  9014  0BB1  0192               	clrf	18	;volatile
  9015                           
  9016                           ;PIC16Xpress_DevBoard.c: 21:     PIE3 = 0x00;
  9017  0BB2  0193               	clrf	19	;volatile
  9018                           
  9019                           ;PIC16Xpress_DevBoard.c: 22:     PIE4 = 0x00;
  9020  0BB3  0194               	clrf	20	;volatile
  9021                           
  9022                           ;PIC16Xpress_DevBoard.c: 25:     PIR0 = 0x00;
  9023  0BB4  0020               	movlb	0	; select bank0
  9024  0BB5  0190               	clrf	16	;volatile
  9025                           
  9026                           ;PIC16Xpress_DevBoard.c: 26:     PIR1 = 0x00;
  9027  0BB6  0191               	clrf	17	;volatile
  9028                           
  9029                           ;PIC16Xpress_DevBoard.c: 27:     PIR2 = 0x00;
  9030  0BB7  0192               	clrf	18	;volatile
  9031                           
  9032                           ;PIC16Xpress_DevBoard.c: 28:     PIR3 = 0x00;
  9033  0BB8  0193               	clrf	19	;volatile
  9034                           
  9035                           ;PIC16Xpress_DevBoard.c: 29:     PIR4 = 0x00;
  9036  0BB9  0194               	clrf	20	;volatile
  9037  0BBA                     l4134:
  9038                           
  9039                           ;PIC16Xpress_DevBoard.c: 32:     SYSTEM_Initialize();
  9040  0BBA  318D  254E  318B   	fcall	_SYSTEM_Initialize
  9041  0BBD                     l4136:
  9042                           
  9043                           ;PIC16Xpress_DevBoard.c: 35:     (INTCONbits.PEIE = 1);
  9044  0BBD  170B               	bsf	11,6	;volatile
  9045  0BBE                     l4138:
  9046                           
  9047                           ;PIC16Xpress_DevBoard.c: 36:     (INTCONbits.GIE = 1);
  9048  0BBE  178B               	bsf	11,7	;volatile
  9049  0BBF                     l110:
  9050  0BBF  0008               	return
  9051  0BC0                     __end_of_PIC16_Init:
  9052                           
  9053                           	psect	text7
  9054  0D4E                     __ptext7:	
  9055 ;; *************** function _SYSTEM_Initialize *****************
  9056 ;; Defined at:
  9057 ;;		line 15 in file "mcc.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;		None
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;		None
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  1    wreg      void 
  9064 ;; Registers used:
  9065 ;;		wreg, status,2, status,0, pclath, cstack
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;Total ram usage:        0 bytes
  9076 ;; Hardware stack levels used: 1
  9077 ;; Hardware stack levels required when called: 6
  9078 ;; This function calls:
  9079 ;;		_CCP1_Initialize
  9080 ;;		_CCP2_Initialize
  9081 ;;		_CCP3_Initialize
  9082 ;;		_CCP4_Initialize
  9083 ;;		_EUSART_Initialize
  9084 ;;		_OSCILLATOR_Initialize
  9085 ;;		_PIN_MANAGER_Initialize
  9086 ;;		_PMD_Initialize
  9087 ;;		_PWM5_Initialize
  9088 ;;		_TMR0_Initialize
  9089 ;;		_TMR1_Initialize
  9090 ;;		_TMR2_Initialize
  9091 ;;		_TMR3_Initialize
  9092 ;;		_WDT_Initialize
  9093 ;; This function is called by:
  9094 ;;		_PIC16_Init
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097                           
  9098  0D4E                     _SYSTEM_Initialize:	
  9099                           ;psect for function _SYSTEM_Initialize
  9100                           
  9101  0D4E                     l3910:	
  9102                           ;incstack = 0
  9103                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9104                           
  9105                           
  9106                           ;mcc.c: 16:     PMD_Initialize();
  9107  0D4E  318A  22F2  318D   	fcall	_PMD_Initialize
  9108                           
  9109                           ;mcc.c: 17:     PIN_MANAGER_Initialize();
  9110  0D51  318E  26BC  318D   	fcall	_PIN_MANAGER_Initialize
  9111                           
  9112                           ;mcc.c: 18:     OSCILLATOR_Initialize();
  9113  0D54  318B  2307  318D   	fcall	_OSCILLATOR_Initialize
  9114                           
  9115                           ;mcc.c: 19:     WDT_Initialize();
  9116  0D57  318A  2243  318D   	fcall	_WDT_Initialize
  9117                           
  9118                           ;mcc.c: 20:     CCP3_Initialize();
  9119  0D5A  318C  245D  318D   	fcall	_CCP3_Initialize
  9120                           
  9121                           ;mcc.c: 21:     CCP1_Initialize();
  9122  0D5D  318C  242D  318D   	fcall	_CCP1_Initialize
  9123                           
  9124                           ;mcc.c: 22:     TMR2_Initialize();
  9125  0D60  318A  227C  318D   	fcall	_TMR2_Initialize
  9126                           
  9127                           ;mcc.c: 23:     TMR0_Initialize();
  9128  0D63  318C  2417  318D   	fcall	_TMR0_Initialize
  9129                           
  9130                           ;mcc.c: 24:     CCP2_Initialize();
  9131  0D66  318C  2445  318D   	fcall	_CCP2_Initialize
  9132                           
  9133                           ;mcc.c: 25:     CCP4_Initialize();
  9134  0D69  318B  238C  318D   	fcall	_CCP4_Initialize
  9135  0D6C                     l3912:
  9136                           
  9137                           ;mcc.c: 26:     TMR3_Initialize();
  9138  0D6C  318B  231F  318D   	fcall	_TMR3_Initialize
  9139  0D6F                     l3914:
  9140                           
  9141                           ;mcc.c: 27:     PWM5_Initialize();
  9142  0D6F  318B  233A  318D   	fcall	_PWM5_Initialize
  9143  0D72                     l3916:
  9144                           
  9145                           ;mcc.c: 28:     TMR1_Initialize();
  9146  0D72  318B  239D  318D   	fcall	_TMR1_Initialize
  9147  0D75                     l3918:
  9148                           
  9149                           ;mcc.c: 29:     EUSART_Initialize();
  9150  0D75  318F  27BA  318D   	fcall	_EUSART_Initialize
  9151  0D78                     l239:
  9152  0D78  0008               	return
  9153  0D79                     __end_of_SYSTEM_Initialize:
  9154                           
  9155                           	psect	text8
  9156  0A43                     __ptext8:	
  9157 ;; *************** function _WDT_Initialize *****************
  9158 ;; Defined at:
  9159 ;;		line 52 in file "mcc.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;		None
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;		None
  9164 ;; Return value:  Size  Location     Type
  9165 ;;                  1    wreg      void 
  9166 ;; Registers used:
  9167 ;;		wreg
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9177 ;;Total ram usage:        0 bytes
  9178 ;; Hardware stack levels used: 1
  9179 ;; Hardware stack levels required when called: 4
  9180 ;; This function calls:
  9181 ;;		Nothing
  9182 ;; This function is called by:
  9183 ;;		_SYSTEM_Initialize
  9184 ;; This function uses a non-reentrant model
  9185 ;;
  9186                           
  9187  0A43                     _WDT_Initialize:	
  9188                           ;psect for function _WDT_Initialize
  9189                           
  9190  0A43                     l3526:	
  9191                           ;incstack = 0
  9192                           ; Regs used in _WDT_Initialize: [wreg]
  9193                           
  9194                           
  9195                           ;mcc.c: 54:     WDTCON = 0x16;
  9196  0A43  3016               	movlw	22
  9197  0A44  0021               	movlb	1	; select bank1
  9198  0A45  0097               	movwf	23	;volatile
  9199  0A46                     l248:
  9200  0A46  0008               	return
  9201  0A47                     __end_of_WDT_Initialize:
  9202                           
  9203                           	psect	text9
  9204  0B1F                     __ptext9:	
  9205 ;; *************** function _TMR3_Initialize *****************
  9206 ;; Defined at:
  9207 ;;		line 25 in file "tmr3.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;		None
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;		None
  9212 ;; Return value:  Size  Location     Type
  9213 ;;                  1    wreg      void 
  9214 ;; Registers used:
  9215 ;;		status,2
  9216 ;; Tracked objects:
  9217 ;;		On entry : 0/0
  9218 ;;		On exit  : 0/0
  9219 ;;		Unchanged: 0/0
  9220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9225 ;;Total ram usage:        0 bytes
  9226 ;; Hardware stack levels used: 1
  9227 ;; Hardware stack levels required when called: 4
  9228 ;; This function calls:
  9229 ;;		Nothing
  9230 ;; This function is called by:
  9231 ;;		_SYSTEM_Initialize
  9232 ;; This function uses a non-reentrant model
  9233 ;;
  9234                           
  9235  0B1F                     _TMR3_Initialize:	
  9236                           ;psect for function _TMR3_Initialize
  9237                           
  9238  0B1F                     l3606:	
  9239                           ;incstack = 0
  9240                           ; Regs used in _TMR3_Initialize: [status,2]
  9241                           
  9242                           
  9243                           ;tmr3.c: 28:     T3GCON = 0x00;
  9244  0B1F  0028               	movlb	8	; select bank8
  9245  0B20  0194               	clrf	20	;volatile
  9246                           
  9247                           ;tmr3.c: 31:     TMR3H = 0x00;
  9248  0B21  0192               	clrf	18	;volatile
  9249                           
  9250                           ;tmr3.c: 34:     TMR3L = 0x00;
  9251  0B22  0191               	clrf	17	;volatile
  9252  0B23                     l3608:
  9253                           
  9254                           ;tmr3.c: 37:     PIR3bits.TMR3IF = 0;
  9255  0B23  0020               	movlb	0	; select bank0
  9256  0B24  1213               	bcf	19,4	;volatile
  9257                           
  9258                           ;tmr3.c: 40:     timer3ReloadVal = 0x0000;
  9259  0B25  0021               	movlb	1	; select bank1
  9260  0B26  01A8               	clrf	_timer3ReloadVal^(0+128)	;volatile
  9261  0B27  01A9               	clrf	(_timer3ReloadVal+1)^(0+128)	;volatile
  9262  0B28                     l3610:
  9263                           
  9264                           ;tmr3.c: 43:     PIE3bits.TMR3IE = 1;
  9265  0B28  1613               	bsf	19,4	;volatile
  9266                           
  9267                           ;tmr3.c: 46:     T3CON = 0x00;
  9268  0B29  0028               	movlb	8	; select bank8
  9269  0B2A  0193               	clrf	19	;volatile
  9270  0B2B                     l945:
  9271  0B2B  0008               	return
  9272  0B2C                     __end_of_TMR3_Initialize:
  9273                           
  9274                           	psect	text10
  9275  0A7C                     __ptext10:	
  9276 ;; *************** function _TMR2_Initialize *****************
  9277 ;; Defined at:
  9278 ;;		line 17 in file "tmr2.c"
  9279 ;; Parameters:    Size  Location     Type
  9280 ;;		None
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;		None
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  1    wreg      void 
  9285 ;; Registers used:
  9286 ;;		wreg, status,2
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9296 ;;Total ram usage:        0 bytes
  9297 ;; Hardware stack levels used: 1
  9298 ;; Hardware stack levels required when called: 4
  9299 ;; This function calls:
  9300 ;;		Nothing
  9301 ;; This function is called by:
  9302 ;;		_SYSTEM_Initialize
  9303 ;; This function uses a non-reentrant model
  9304 ;;
  9305                           
  9306  0A7C                     _TMR2_Initialize:	
  9307                           ;psect for function _TMR2_Initialize
  9308                           
  9309  0A7C                     l3560:	
  9310                           ;incstack = 0
  9311                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9312                           
  9313                           
  9314                           ;tmr2.c: 20:     PR2 = 0xF9;
  9315  0A7C  30F9               	movlw	249
  9316  0A7D  0020               	movlb	0	; select bank0
  9317  0A7E  009E               	movwf	30	;volatile
  9318  0A7F                     l3562:
  9319                           
  9320                           ;tmr2.c: 23:     TMR2 = 0x00;
  9321  0A7F  019D               	clrf	29	;volatile
  9322  0A80                     l3564:
  9323                           
  9324                           ;tmr2.c: 26:     PIR1bits.TMR2IF = 0;
  9325  0A80  1091               	bcf	17,1	;volatile
  9326  0A81                     l3566:
  9327                           
  9328                           ;tmr2.c: 29:     T2CON = 0x04;
  9329  0A81  3004               	movlw	4
  9330  0A82  009F               	movwf	31	;volatile
  9331  0A83                     l905:
  9332  0A83  0008               	return
  9333  0A84                     __end_of_TMR2_Initialize:
  9334                           
  9335                           	psect	text11
  9336  0B9D                     __ptext11:	
  9337 ;; *************** function _TMR1_Initialize *****************
  9338 ;; Defined at:
  9339 ;;		line 19 in file "tmr1.c"
  9340 ;; Parameters:    Size  Location     Type
  9341 ;;		None
  9342 ;; Auto vars:     Size  Location     Type
  9343 ;;		None
  9344 ;; Return value:  Size  Location     Type
  9345 ;;                  1    wreg      void 
  9346 ;; Registers used:
  9347 ;;		wreg, status,2
  9348 ;; Tracked objects:
  9349 ;;		On entry : 0/0
  9350 ;;		On exit  : 0/0
  9351 ;;		Unchanged: 0/0
  9352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9357 ;;Total ram usage:        0 bytes
  9358 ;; Hardware stack levels used: 1
  9359 ;; Hardware stack levels required when called: 4
  9360 ;; This function calls:
  9361 ;;		Nothing
  9362 ;; This function is called by:
  9363 ;;		_SYSTEM_Initialize
  9364 ;; This function uses a non-reentrant model
  9365 ;;
  9366                           
  9367  0B9D                     _TMR1_Initialize:	
  9368                           ;psect for function _TMR1_Initialize
  9369                           
  9370  0B9D                     l3624:	
  9371                           ;incstack = 0
  9372                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  9373                           
  9374                           
  9375                           ;tmr1.c: 24:     T1GCON = 0x00;
  9376  0B9D  0020               	movlb	0	; select bank0
  9377  0B9E  019C               	clrf	28	;volatile
  9378                           
  9379                           ;tmr1.c: 27:     TMR1H = 0x00;
  9380  0B9F  019A               	clrf	26	;volatile
  9381                           
  9382                           ;tmr1.c: 30:     TMR1L = 0x00;
  9383  0BA0  0199               	clrf	25	;volatile
  9384  0BA1                     l3626:
  9385                           
  9386                           ;tmr1.c: 33:     PIR1bits.TMR1IF = 0;
  9387  0BA1  1011               	bcf	17,0	;volatile
  9388  0BA2                     l3628:
  9389                           
  9390                           ;tmr1.c: 36:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  9391  0BA2  081A               	movf	26,w	;volatile
  9392  0BA3  0021               	movlb	1	; select bank1
  9393  0BA4  00BB               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  9394  0BA5  0020               	movlb	0	; select bank0
  9395  0BA6  0819               	movf	25,w	;volatile
  9396  0BA7  0021               	movlb	1	; select bank1
  9397  0BA8  00BA               	movwf	_timer1ReloadVal^(0+128)	;volatile
  9398  0BA9                     l3630:
  9399                           
  9400                           ;tmr1.c: 39:     PIE1bits.TMR1IE = 1;
  9401  0BA9  1411               	bsf	17,0	;volatile
  9402  0BAA                     l3632:
  9403                           
  9404                           ;tmr1.c: 42:     T1CON = 0b00100001;
  9405  0BAA  3021               	movlw	33
  9406  0BAB  0020               	movlb	0	; select bank0
  9407  0BAC  009B               	movwf	27	;volatile
  9408  0BAD                     l470:
  9409  0BAD  0008               	return
  9410  0BAE                     __end_of_TMR1_Initialize:
  9411                           
  9412                           	psect	text12
  9413  0C17                     __ptext12:	
  9414 ;; *************** function _TMR0_Initialize *****************
  9415 ;; Defined at:
  9416 ;;		line 19 in file "tmr0.c"
  9417 ;; Parameters:    Size  Location     Type
  9418 ;;		None
  9419 ;; Auto vars:     Size  Location     Type
  9420 ;;		None
  9421 ;; Return value:  Size  Location     Type
  9422 ;;                  1    wreg      void 
  9423 ;; Registers used:
  9424 ;;		wreg, status,2, status,0, pclath, cstack
  9425 ;; Tracked objects:
  9426 ;;		On entry : 0/0
  9427 ;;		On exit  : 0/0
  9428 ;;		Unchanged: 0/0
  9429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9434 ;;Total ram usage:        0 bytes
  9435 ;; Hardware stack levels used: 1
  9436 ;; Hardware stack levels required when called: 5
  9437 ;; This function calls:
  9438 ;;		_TMR0_SetInterruptHandler
  9439 ;; This function is called by:
  9440 ;;		_SYSTEM_Initialize
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444  0C17                     _TMR0_Initialize:	
  9445                           ;psect for function _TMR0_Initialize
  9446                           
  9447  0C17                     l3568:	
  9448                           ;incstack = 0
  9449                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9450                           
  9451                           
  9452                           ;tmr0.c: 22:     T0CON1 = 0x42;
  9453  0C17  3042               	movlw	66
  9454  0C18  0020               	movlb	0	; select bank0
  9455  0C19  0098               	movwf	24	;volatile
  9456                           
  9457                           ;tmr0.c: 25:     TMR0H = 0xF9;
  9458  0C1A  30F9               	movlw	249
  9459  0C1B  0096               	movwf	22	;volatile
  9460  0C1C                     l3570:
  9461                           
  9462                           ;tmr0.c: 28:     TMR0L = 0x00;
  9463  0C1C  0195               	clrf	21	;volatile
  9464  0C1D                     l3572:
  9465                           
  9466                           ;tmr0.c: 31:     PIR0bits.TMR0IF = 0;
  9467  0C1D  1290               	bcf	16,5	;volatile
  9468  0C1E                     l3574:
  9469                           
  9470                           ;tmr0.c: 34:     PIE0bits.TMR0IE = 1;
  9471  0C1E  0021               	movlb	1	; select bank1
  9472  0C1F  1690               	bsf	16,5	;volatile
  9473  0C20                     l3576:
  9474                           
  9475                           ;tmr0.c: 37:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  9476  0C20  3000               	movlw	0
  9477  0C21  0020               	movlb	0	; select bank0
  9478  0C22  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  9479  0C23  3000               	movlw	0
  9480  0C24  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9481  0C25  318A  22D5  318C   	fcall	_TMR0_SetInterruptHandler
  9482  0C28                     l3578:
  9483                           
  9484                           ;tmr0.c: 40:     T0CON0 = 0x80;
  9485  0C28  3080               	movlw	128
  9486  0C29  0020               	movlb	0	; select bank0
  9487  0C2A  0097               	movwf	23	;volatile
  9488  0C2B                     l3580:
  9489                           
  9490                           ;tmr0.c: 41:     CountCallBack = 0;
  9491  0C2B  01FD               	clrf	_CountCallBack	;volatile
  9492  0C2C                     l282:
  9493  0C2C  0008               	return
  9494  0C2D                     __end_of_TMR0_Initialize:
  9495                           
  9496                           	psect	text13
  9497  0AD5                     __ptext13:	
  9498 ;; *************** function _TMR0_SetInterruptHandler *****************
  9499 ;; Defined at:
  9500 ;;		line 117 in file "tmr0.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9503 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		wreg
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9515 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9518 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9519 ;;Total ram usage:        2 bytes
  9520 ;; Hardware stack levels used: 1
  9521 ;; Hardware stack levels required when called: 4
  9522 ;; This function calls:
  9523 ;;		Nothing
  9524 ;; This function is called by:
  9525 ;;		_TMR0_Initialize
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529  0AD5                     _TMR0_SetInterruptHandler:	
  9530                           ;psect for function _TMR0_SetInterruptHandler
  9531                           
  9532  0AD5                     l3306:	
  9533                           ;incstack = 0
  9534                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  9535                           
  9536                           
  9537                           ;tmr0.c: 118:     TMR0_InterruptHandler = InterruptHandler;
  9538  0AD5  0020               	movlb	0	; select bank0
  9539  0AD6  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  9540  0AD7  0021               	movlb	1	; select bank1
  9541  0AD8  00CF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  9542  0AD9  0020               	movlb	0	; select bank0
  9543  0ADA  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  9544  0ADB  0021               	movlb	1	; select bank1
  9545  0ADC  00CE               	movwf	_TMR0_InterruptHandler^(0+128)
  9546  0ADD                     l307:
  9547  0ADD  0008               	return
  9548  0ADE                     __end_of_TMR0_SetInterruptHandler:
  9549                           
  9550                           	psect	text14
  9551  0B3A                     __ptext14:	
  9552 ;; *************** function _PWM5_Initialize *****************
  9553 ;; Defined at:
  9554 ;;		line 16 in file "pwm5.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;		None
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;		None
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      void 
  9561 ;; Registers used:
  9562 ;;		wreg, status,2, status,0
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9572 ;;Total ram usage:        0 bytes
  9573 ;; Hardware stack levels used: 1
  9574 ;; Hardware stack levels required when called: 4
  9575 ;; This function calls:
  9576 ;;		Nothing
  9577 ;; This function is called by:
  9578 ;;		_SYSTEM_Initialize
  9579 ;; This function uses a non-reentrant model
  9580 ;;
  9581                           
  9582  0B3A                     _PWM5_Initialize:	
  9583                           ;psect for function _PWM5_Initialize
  9584                           
  9585  0B3A                     l3612:	
  9586                           ;incstack = 0
  9587                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
  9588                           
  9589                           
  9590                           ;pwm5.c: 18:     PWM5CON = 0x80;
  9591  0B3A  3080               	movlw	128
  9592  0B3B  002C               	movlb	12	; select bank12
  9593  0B3C  0099               	movwf	25	;volatile
  9594  0B3D                     l3614:
  9595                           
  9596                           ;pwm5.c: 21:     PWM5DCH = 0x00;
  9597  0B3D  0198               	clrf	24	;volatile
  9598  0B3E                     l3616:
  9599                           
  9600                           ;pwm5.c: 24:     PWM5DCL = 0x00;
  9601  0B3E  0197               	clrf	23	;volatile
  9602  0B3F                     l3618:
  9603                           
  9604                           ;pwm5.c: 27:     PWMTMRSbits.P5TSEL = 1;
  9605  0B3F  081F               	movf	31,w	;volatile
  9606  0B40  39FC               	andlw	-4
  9607  0B41  3801               	iorlw	1
  9608  0B42  009F               	movwf	31	;volatile
  9609  0B43                     l3620:
  9610                           
  9611                           ;pwm5.c: 30:     TRISBbits.TRISB6 = 0;
  9612  0B43  0021               	movlb	1	; select bank1
  9613  0B44  130D               	bcf	13,6	;volatile
  9614  0B45                     l3622:
  9615                           
  9616                           ;pwm5.c: 31:     LATBbits.LATB6 = 0;
  9617  0B45  0022               	movlb	2	; select bank2
  9618  0B46  130D               	bcf	13,6	;volatile
  9619  0B47                     l889:
  9620  0B47  0008               	return
  9621  0B48                     __end_of_PWM5_Initialize:
  9622                           
  9623                           	psect	text15
  9624  0AF2                     __ptext15:	
  9625 ;; *************** function _PMD_Initialize *****************
  9626 ;; Defined at:
  9627 ;;		line 59 in file "mcc.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;		None
  9630 ;; Auto vars:     Size  Location     Type
  9631 ;;		None
  9632 ;; Return value:  Size  Location     Type
  9633 ;;                  1    wreg      void 
  9634 ;; Registers used:
  9635 ;;		wreg, status,2
  9636 ;; Tracked objects:
  9637 ;;		On entry : 0/0
  9638 ;;		On exit  : 0/0
  9639 ;;		Unchanged: 0/0
  9640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9645 ;;Total ram usage:        0 bytes
  9646 ;; Hardware stack levels used: 1
  9647 ;; Hardware stack levels required when called: 4
  9648 ;; This function calls:
  9649 ;;		Nothing
  9650 ;; This function is called by:
  9651 ;;		_SYSTEM_Initialize
  9652 ;; This function uses a non-reentrant model
  9653 ;;
  9654                           
  9655  0AF2                     _PMD_Initialize:	
  9656                           ;psect for function _PMD_Initialize
  9657                           
  9658  0AF2                     l3470:	
  9659                           ;incstack = 0
  9660                           ; Regs used in _PMD_Initialize: [wreg+status,2]
  9661                           
  9662                           
  9663                           ;mcc.c: 62:     PMD0 = 0x00;
  9664  0AF2  0032               	movlb	18	; select bank18
  9665  0AF3  0191               	clrf	17	;volatile
  9666                           
  9667                           ;mcc.c: 63:     PMD1 = 0x00;
  9668  0AF4  0192               	clrf	18	;volatile
  9669  0AF5                     l3472:
  9670                           
  9671                           ;mcc.c: 66:     PMD2 = 0x66;
  9672  0AF5  3066               	movlw	102
  9673  0AF6  0093               	movwf	19	;volatile
  9674  0AF7                     l3474:
  9675                           
  9676                           ;mcc.c: 67:     PMD3 = 0x00;
  9677  0AF7  0194               	clrf	20	;volatile
  9678  0AF8                     l3476:
  9679                           
  9680                           ;mcc.c: 68:     PMD4 = 0x00;
  9681  0AF8  0195               	clrf	21	;volatile
  9682  0AF9                     l3478:
  9683                           
  9684                           ;mcc.c: 71:     PMD5 = 0x1F;
  9685  0AF9  301F               	movlw	31
  9686  0AFA  0096               	movwf	22	;volatile
  9687  0AFB                     l251:
  9688  0AFB  0008               	return
  9689  0AFC                     __end_of_PMD_Initialize:
  9690                           
  9691                           	psect	text16
  9692  0EBC                     __ptext16:	
  9693 ;; *************** function _PIN_MANAGER_Initialize *****************
  9694 ;; Defined at:
  9695 ;;		line 14 in file "pin_manager.c"
  9696 ;; Parameters:    Size  Location     Type
  9697 ;;		None
  9698 ;; Auto vars:     Size  Location     Type
  9699 ;;		None
  9700 ;; Return value:  Size  Location     Type
  9701 ;;                  1    wreg      void 
  9702 ;; Registers used:
  9703 ;;		wreg, status,2
  9704 ;; Tracked objects:
  9705 ;;		On entry : 0/0
  9706 ;;		On exit  : 0/0
  9707 ;;		Unchanged: 0/0
  9708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9713 ;;Total ram usage:        0 bytes
  9714 ;; Hardware stack levels used: 1
  9715 ;; Hardware stack levels required when called: 4
  9716 ;; This function calls:
  9717 ;;		Nothing
  9718 ;; This function is called by:
  9719 ;;		_SYSTEM_Initialize
  9720 ;; This function uses a non-reentrant model
  9721 ;;
  9722                           
  9723  0EBC                     _PIN_MANAGER_Initialize:	
  9724                           ;psect for function _PIN_MANAGER_Initialize
  9725                           
  9726  0EBC                     l3480:	
  9727                           ;incstack = 0
  9728                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9729                           
  9730                           
  9731                           ;pin_manager.c: 19:     LATA = 0x00;
  9732  0EBC  0022               	movlb	2	; select bank2
  9733  0EBD  018C               	clrf	12	;volatile
  9734                           
  9735                           ;pin_manager.c: 20:     LATB = 0x00;
  9736  0EBE  018D               	clrf	13	;volatile
  9737                           
  9738                           ;pin_manager.c: 21:     LATC = 0x00;
  9739  0EBF  018E               	clrf	14	;volatile
  9740  0EC0                     l3482:
  9741                           
  9742                           ;pin_manager.c: 26:     TRISA = 0x37;
  9743  0EC0  3037               	movlw	55
  9744  0EC1  0021               	movlb	1	; select bank1
  9745  0EC2  008C               	movwf	12	;volatile
  9746  0EC3                     l3484:
  9747                           
  9748                           ;pin_manager.c: 27:     TRISB = 0xF0;
  9749  0EC3  30F0               	movlw	240
  9750  0EC4  008D               	movwf	13	;volatile
  9751  0EC5                     l3486:
  9752                           
  9753                           ;pin_manager.c: 28:     TRISC = 0xEF;
  9754  0EC5  30EF               	movlw	239
  9755  0EC6  008E               	movwf	14	;volatile
  9756  0EC7                     l3488:
  9757                           
  9758                           ;pin_manager.c: 33:     ANSELC = 0xD7;
  9759  0EC7  30D7               	movlw	215
  9760  0EC8  0023               	movlb	3	; select bank3
  9761  0EC9  008E               	movwf	14	;volatile
  9762  0ECA                     l3490:
  9763                           
  9764                           ;pin_manager.c: 34:     ANSELB = 0xD0;
  9765  0ECA  30D0               	movlw	208
  9766  0ECB  008D               	movwf	13	;volatile
  9767  0ECC                     l3492:
  9768                           
  9769                           ;pin_manager.c: 35:     ANSELA = 0x33;
  9770  0ECC  3033               	movlw	51
  9771  0ECD  008C               	movwf	12	;volatile
  9772                           
  9773                           ;pin_manager.c: 40:     WPUB = 0x00;
  9774  0ECE  0024               	movlb	4	; select bank4
  9775  0ECF  018D               	clrf	13	;volatile
  9776                           
  9777                           ;pin_manager.c: 41:     WPUA = 0x00;
  9778  0ED0  018C               	clrf	12	;volatile
  9779                           
  9780                           ;pin_manager.c: 42:     WPUC = 0x00;
  9781  0ED1  018E               	clrf	14	;volatile
  9782                           
  9783                           ;pin_manager.c: 47:     ODCONA = 0x00;
  9784  0ED2  0025               	movlb	5	; select bank5
  9785  0ED3  018C               	clrf	12	;volatile
  9786                           
  9787                           ;pin_manager.c: 48:     ODCONB = 0x00;
  9788  0ED4  018D               	clrf	13	;volatile
  9789                           
  9790                           ;pin_manager.c: 49:     ODCONC = 0x00;
  9791  0ED5  018E               	clrf	14	;volatile
  9792  0ED6                     l3494:
  9793                           
  9794                           ;pin_manager.c: 54:     SLRCONA = 0x37;
  9795  0ED6  3037               	movlw	55
  9796  0ED7  0026               	movlb	6	; select bank6
  9797  0ED8  008C               	movwf	12	;volatile
  9798  0ED9                     l3496:
  9799                           
  9800                           ;pin_manager.c: 55:     SLRCONB = 0xF0;
  9801  0ED9  30F0               	movlw	240
  9802  0EDA  008D               	movwf	13	;volatile
  9803  0EDB                     l3498:
  9804                           
  9805                           ;pin_manager.c: 56:     SLRCONC = 0xFF;
  9806  0EDB  30FF               	movlw	255
  9807  0EDC  008E               	movwf	14	;volatile
  9808  0EDD                     l3500:
  9809                           
  9810                           ;pin_manager.c: 61:     INLVLA = 0x3F;
  9811  0EDD  303F               	movlw	63
  9812  0EDE  0027               	movlb	7	; select bank7
  9813  0EDF  008C               	movwf	12	;volatile
  9814  0EE0                     l3502:
  9815                           
  9816                           ;pin_manager.c: 62:     INLVLB = 0xF0;
  9817  0EE0  30F0               	movlw	240
  9818  0EE1  008D               	movwf	13	;volatile
  9819  0EE2                     l3504:
  9820                           
  9821                           ;pin_manager.c: 63:     INLVLC = 0xFF;
  9822  0EE2  30FF               	movlw	255
  9823  0EE3  008E               	movwf	14	;volatile
  9824  0EE4                     l3506:
  9825                           
  9826                           ;pin_manager.c: 66:     RXPPS = 0x0D;
  9827  0EE4  300D               	movlw	13
  9828  0EE5  003C               	movlb	28	; select bank28
  9829  0EE6  00A4               	movwf	36	;volatile
  9830  0EE7                     l3508:
  9831                           
  9832                           ;pin_manager.c: 67:     RC4PPS = 0x14;
  9833  0EE7  3014               	movlw	20
  9834  0EE8  003D               	movlb	29	; select bank29
  9835  0EE9  00A4               	movwf	36	;volatile
  9836  0EEA                     l3510:
  9837                           
  9838                           ;pin_manager.c: 69:     CCP1PPS = 0x15;
  9839  0EEA  3015               	movlw	21
  9840  0EEB  003C               	movlb	28	; select bank28
  9841  0EEC  0094               	movwf	20	;volatile
  9842  0EED                     l3512:
  9843                           
  9844                           ;pin_manager.c: 70:     CCP2PPS = 0x13;
  9845  0EED  3013               	movlw	19
  9846  0EEE  0095               	movwf	21	;volatile
  9847  0EEF                     l3514:
  9848                           
  9849                           ;pin_manager.c: 71:     CCP3PPS = 0x02;
  9850  0EEF  3002               	movlw	2
  9851  0EF0  0096               	movwf	22	;volatile
  9852  0EF1                     l3516:
  9853                           
  9854                           ;pin_manager.c: 73:     RC1PPS = 0x0F;
  9855  0EF1  300F               	movlw	15
  9856  0EF2  003D               	movlb	29	; select bank29
  9857  0EF3  00A1               	movwf	33	;volatile
  9858  0EF4                     l3518:
  9859                           
  9860                           ;pin_manager.c: 74:     RB6PPS = 0x02;
  9861  0EF4  3002               	movlw	2
  9862  0EF5  009E               	movwf	30	;volatile
  9863  0EF6                     l758:
  9864  0EF6  0008               	return
  9865  0EF7                     __end_of_PIN_MANAGER_Initialize:
  9866                           
  9867                           	psect	text17
  9868  0B07                     __ptext17:	
  9869 ;; *************** function _OSCILLATOR_Initialize *****************
  9870 ;; Defined at:
  9871 ;;		line 34 in file "mcc.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;		None
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;		None
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  1    wreg      void 
  9878 ;; Registers used:
  9879 ;;		wreg, status,2
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9889 ;;Total ram usage:        0 bytes
  9890 ;; Hardware stack levels used: 1
  9891 ;; Hardware stack levels required when called: 4
  9892 ;; This function calls:
  9893 ;;		Nothing
  9894 ;; This function is called by:
  9895 ;;		_SYSTEM_Initialize
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899  0B07                     _OSCILLATOR_Initialize:	
  9900                           ;psect for function _OSCILLATOR_Initialize
  9901                           
  9902  0B07                     l3520:	
  9903                           ;incstack = 0
  9904                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9905                           
  9906                           
  9907                           ;mcc.c: 36:     OSCCON1 = 0x00;
  9908  0B07  0032               	movlb	18	; select bank18
  9909  0B08  0199               	clrf	25	;volatile
  9910                           
  9911                           ;mcc.c: 38:     OSCCON3 = 0x00;
  9912  0B09  019B               	clrf	27	;volatile
  9913                           
  9914                           ;mcc.c: 40:     OSCEN = 0x00;
  9915  0B0A  019D               	clrf	29	;volatile
  9916  0B0B                     l3522:
  9917                           
  9918                           ;mcc.c: 42:     OSCFRQ = 0x04;
  9919  0B0B  3004               	movlw	4
  9920  0B0C  009F               	movwf	31	;volatile
  9921  0B0D                     l3524:
  9922                           
  9923                           ;mcc.c: 44:     OSCTUNE = 0x00;
  9924  0B0D  019E               	clrf	30	;volatile
  9925  0B0E                     l242:	
  9926                           ;mcc.c: 47:     }
  9927                           
  9928                           
  9929                           ;mcc.c: 46:     while (PLLR == 0) {
  9930  0B0E  1C1C               	btfss	28,0	;volatile
  9931  0B0F  2B11               	goto	u1211
  9932  0B10  2B12               	goto	u1210
  9933  0B11                     u1211:
  9934  0B11  2B0E               	goto	l242
  9935  0B12                     u1210:
  9936  0B12                     l245:
  9937  0B12  0008               	return
  9938  0B13                     __end_of_OSCILLATOR_Initialize:
  9939                           
  9940                           	psect	text18
  9941  0FBA                     __ptext18:	
  9942 ;; *************** function _EUSART_Initialize *****************
  9943 ;; Defined at:
  9944 ;;		line 45 in file "eusart.c"
  9945 ;; Parameters:    Size  Location     Type
  9946 ;;		None
  9947 ;; Auto vars:     Size  Location     Type
  9948 ;;		None
  9949 ;; Return value:  Size  Location     Type
  9950 ;;                  1    wreg      void 
  9951 ;; Registers used:
  9952 ;;		wreg, status,2, status,0, pclath, cstack
  9953 ;; Tracked objects:
  9954 ;;		On entry : 0/0
  9955 ;;		On exit  : 0/0
  9956 ;;		Unchanged: 0/0
  9957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9960 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9961 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9962 ;;Total ram usage:        1 bytes
  9963 ;; Hardware stack levels used: 1
  9964 ;; Hardware stack levels required when called: 5
  9965 ;; This function calls:
  9966 ;;		_EUSART_SetErrorHandler
  9967 ;;		_EUSART_SetFramingErrorHandler
  9968 ;;		_EUSART_SetOverrunErrorHandler
  9969 ;;		_EUSART_SetRxInterruptHandler
  9970 ;;		_EUSART_SetTxInterruptHandler
  9971 ;; This function is called by:
  9972 ;;		_SYSTEM_Initialize
  9973 ;; This function uses a non-reentrant model
  9974 ;;
  9975                           
  9976  0FBA                     _EUSART_Initialize:	
  9977                           ;psect for function _EUSART_Initialize
  9978                           
  9979  0FBA                     l3634:	
  9980                           ;incstack = 0
  9981                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9982                           
  9983                           
  9984                           ;eusart.c: 48:     PIE1bits.RCIE = 0;
  9985  0FBA  0021               	movlb	1	; select bank1
  9986  0FBB  1291               	bcf	17,5	;volatile
  9987  0FBC                     l3636:
  9988                           
  9989                           ;eusart.c: 49:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  9990  0FBC  30F7               	movlw	low _EUSART_Receive_ISR
  9991  0FBD  0020               	movlb	0	; select bank0
  9992  0FBE  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  9993  0FBF  300E               	movlw	high _EUSART_Receive_ISR
  9994  0FC0  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  9995  0FC1  318A  22C3  318F   	fcall	_EUSART_SetRxInterruptHandler
  9996  0FC4                     l3638:
  9997                           
  9998                           ;eusart.c: 50:     PIE1bits.TXIE = 0;
  9999  0FC4  0021               	movlb	1	; select bank1
 10000  0FC5  1211               	bcf	17,4	;volatile
 10001                           
 10002                           ;eusart.c: 51:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
 10003  0FC6  3003               	movlw	low _EUSART_Transmit_ISR
 10004  0FC7  0020               	movlb	0	; select bank0
 10005  0FC8  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 10006  0FC9  300D               	movlw	high _EUSART_Transmit_ISR
 10007  0FCA  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 10008  0FCB  318A  22CC  318F   	fcall	_EUSART_SetTxInterruptHandler
 10009  0FCE                     l3640:
 10010                           
 10011                           ;eusart.c: 55:     BAUD1CON = 0x08;
 10012  0FCE  3008               	movlw	8
 10013  0FCF  0023               	movlb	3	; select bank3
 10014  0FD0  009F               	movwf	31	;volatile
 10015  0FD1                     l3642:
 10016                           
 10017                           ;eusart.c: 58:     RC1STA = 0x90;
 10018  0FD1  3090               	movlw	144
 10019  0FD2  009D               	movwf	29	;volatile
 10020  0FD3                     l3644:
 10021                           
 10022                           ;eusart.c: 61:     TX1STA = 0x24;
 10023  0FD3  3024               	movlw	36
 10024  0FD4  009E               	movwf	30	;volatile
 10025  0FD5                     l3646:
 10026                           
 10027                           ;eusart.c: 64:     SP1BRGL = 0xA0;
 10028  0FD5  30A0               	movlw	160
 10029  0FD6  009B               	movwf	27	;volatile
 10030  0FD7                     l3648:
 10031                           
 10032                           ;eusart.c: 67:     SP1BRGH = 0x01;
 10033  0FD7  3001               	movlw	1
 10034  0FD8  009C               	movwf	28	;volatile
 10035  0FD9                     l3650:
 10036                           
 10037                           ;eusart.c: 70:     EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
 10038  0FD9  302E               	movlw	low _EUSART_DefaultFramingErrorHandler
 10039  0FDA  0020               	movlb	0	; select bank0
 10040  0FDB  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 10041  0FDC  300A               	movlw	high _EUSART_DefaultFramingErrorHandler
 10042  0FDD  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 10043  0FDE  318A  22B1  318F   	fcall	_EUSART_SetFramingErrorHandler
 10044  0FE1                     l3652:
 10045                           
 10046                           ;eusart.c: 71:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
 10047  0FE1  303F               	movlw	low _EUSART_DefaultOverrunErrorHandler
 10048  0FE2  0020               	movlb	0	; select bank0
 10049  0FE3  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 10050  0FE4  300A               	movlw	high _EUSART_DefaultOverrunErrorHandler
 10051  0FE5  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 10052  0FE6  318A  22BA  318F   	fcall	_EUSART_SetOverrunErrorHandler
 10053  0FE9                     l3654:
 10054                           
 10055                           ;eusart.c: 72:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
 10056  0FE9  303B               	movlw	low _EUSART_DefaultErrorHandler
 10057  0FEA  0020               	movlb	0	; select bank0
 10058  0FEB  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
 10059  0FEC  300A               	movlw	high _EUSART_DefaultErrorHandler
 10060  0FED  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 10061  0FEE  318A  22A8  318F   	fcall	_EUSART_SetErrorHandler
 10062  0FF1                     l3656:
 10063                           
 10064                           ;eusart.c: 74:     eusartRxLastError.status = 0;
 10065  0FF1  0021               	movlb	1	; select bank1
 10066  0FF2  01D0               	clrf	_eusartRxLastError^(0+128)	;volatile
 10067  0FF3                     l3658:
 10068                           
 10069                           ;eusart.c: 77:     eusartTxHead = 0;
 10070  0FF3  01FC               	clrf	_eusartTxHead	;volatile
 10071  0FF4                     l3660:
 10072                           
 10073                           ;eusart.c: 78:     eusartTxTail = 0;
 10074  0FF4  01D3               	clrf	_eusartTxTail^(0+128)	;volatile
 10075  0FF5                     l3662:
 10076                           
 10077                           ;eusart.c: 79:     eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 10078  0FF5  3008               	movlw	8
 10079  0FF6  0020               	movlb	0	; select bank0
 10080  0FF7  00A2               	movwf	??_EUSART_Initialize
 10081  0FF8  0822               	movf	??_EUSART_Initialize,w
 10082  0FF9  0021               	movlb	1	; select bank1
 10083  0FFA  00D2               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
 10084                           
 10085                           ;eusart.c: 81:     eusartRxHead = 0;
 10086  0FFB  01FB               	clrf	_eusartRxHead	;volatile
 10087                           
 10088                           ;eusart.c: 82:     eusartRxTail = 0;
 10089  0FFC  01FA               	clrf	_eusartRxTail	;volatile
 10090                           
 10091                           ;eusart.c: 83:     eusartRxCount = 0;
 10092  0FFD  01D1               	clrf	_eusartRxCount^(0+128)	;volatile
 10093  0FFE                     l3664:
 10094                           
 10095                           ;eusart.c: 86:     PIE1bits.RCIE = 1;
 10096  0FFE  1691               	bsf	17,5	;volatile
 10097  0FFF                     l565:
 10098  0FFF  0008               	return
 10099  1000                     __end_of_EUSART_Initialize:
 10100                           
 10101                           	psect	text19
 10102  0ACC                     __ptext19:	
 10103 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 10104 ;; Defined at:
 10105 ;;		line 278 in file "eusart.c"
 10106 ;; Parameters:    Size  Location     Type
 10107 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10108 ;;		 -> EUSART_Transmit_ISR(1), 
 10109 ;; Auto vars:     Size  Location     Type
 10110 ;;		None
 10111 ;; Return value:  Size  Location     Type
 10112 ;;                  1    wreg      void 
 10113 ;; Registers used:
 10114 ;;		wreg
 10115 ;; Tracked objects:
 10116 ;;		On entry : 0/0
 10117 ;;		On exit  : 0/0
 10118 ;;		Unchanged: 0/0
 10119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10123 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10124 ;;Total ram usage:        2 bytes
 10125 ;; Hardware stack levels used: 1
 10126 ;; Hardware stack levels required when called: 4
 10127 ;; This function calls:
 10128 ;;		Nothing
 10129 ;; This function is called by:
 10130 ;;		_EUSART_Initialize
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134  0ACC                     _EUSART_SetTxInterruptHandler:	
 10135                           ;psect for function _EUSART_SetTxInterruptHandler
 10136                           
 10137  0ACC                     l3316:	
 10138                           ;incstack = 0
 10139                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 10140                           
 10141                           
 10142                           ;eusart.c: 279:     EUSART_TxDefaultInterruptHandler = interruptHandler;
 10143  0ACC  0020               	movlb	0	; select bank0
 10144  0ACD  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 10145  0ACE  0021               	movlb	1	; select bank1
 10146  0ACF  00B9               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
 10147  0AD0  0020               	movlb	0	; select bank0
 10148  0AD1  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 10149  0AD2  0021               	movlb	1	; select bank1
 10150  0AD3  00B8               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
 10151  0AD4                     l637:
 10152  0AD4  0008               	return
 10153  0AD5                     __end_of_EUSART_SetTxInterruptHandler:
 10154                           
 10155                           	psect	text20
 10156  0AC3                     __ptext20:	
 10157 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 10158 ;; Defined at:
 10159 ;;		line 284 in file "eusart.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10162 ;;		 -> EUSART_Receive_ISR(1), 
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;		None
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  1    wreg      void 
 10167 ;; Registers used:
 10168 ;;		wreg
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10174 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10177 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10178 ;;Total ram usage:        2 bytes
 10179 ;; Hardware stack levels used: 1
 10180 ;; Hardware stack levels required when called: 4
 10181 ;; This function calls:
 10182 ;;		Nothing
 10183 ;; This function is called by:
 10184 ;;		_EUSART_Initialize
 10185 ;; This function uses a non-reentrant model
 10186 ;;
 10187                           
 10188  0AC3                     _EUSART_SetRxInterruptHandler:	
 10189                           ;psect for function _EUSART_SetRxInterruptHandler
 10190                           
 10191  0AC3                     l3314:	
 10192                           ;incstack = 0
 10193                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 10194                           
 10195                           
 10196                           ;eusart.c: 285:     EUSART_RxDefaultInterruptHandler = interruptHandler;
 10197  0AC3  0020               	movlb	0	; select bank0
 10198  0AC4  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 10199  0AC5  0021               	movlb	1	; select bank1
 10200  0AC6  00B7               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
 10201  0AC7  0020               	movlb	0	; select bank0
 10202  0AC8  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 10203  0AC9  0021               	movlb	1	; select bank1
 10204  0ACA  00B6               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
 10205  0ACB                     l640:
 10206  0ACB  0008               	return
 10207  0ACC                     __end_of_EUSART_SetRxInterruptHandler:
 10208                           
 10209                           	psect	text21
 10210  0ABA                     __ptext21:	
 10211 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 10212 ;; Defined at:
 10213 ;;		line 266 in file "eusart.c"
 10214 ;; Parameters:    Size  Location     Type
 10215 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10216 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 10217 ;; Auto vars:     Size  Location     Type
 10218 ;;		None
 10219 ;; Return value:  Size  Location     Type
 10220 ;;                  1    wreg      void 
 10221 ;; Registers used:
 10222 ;;		wreg
 10223 ;; Tracked objects:
 10224 ;;		On entry : 0/0
 10225 ;;		On exit  : 0/0
 10226 ;;		Unchanged: 0/0
 10227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10231 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10232 ;;Total ram usage:        2 bytes
 10233 ;; Hardware stack levels used: 1
 10234 ;; Hardware stack levels required when called: 4
 10235 ;; This function calls:
 10236 ;;		Nothing
 10237 ;; This function is called by:
 10238 ;;		_EUSART_Initialize
 10239 ;; This function uses a non-reentrant model
 10240 ;;
 10241                           
 10242  0ABA                     _EUSART_SetOverrunErrorHandler:	
 10243                           ;psect for function _EUSART_SetOverrunErrorHandler
 10244                           
 10245  0ABA                     l3320:	
 10246                           ;incstack = 0
 10247                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 10248                           
 10249                           
 10250                           ;eusart.c: 267:     EUSART_OverrunErrorHandler = interruptHandler;
 10251  0ABA  0020               	movlb	0	; select bank0
 10252  0ABB  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 10253  0ABC  0021               	movlb	1	; select bank1
 10254  0ABD  00B3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
 10255  0ABE  0020               	movlb	0	; select bank0
 10256  0ABF  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 10257  0AC0  0021               	movlb	1	; select bank1
 10258  0AC1  00B2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
 10259  0AC2                     l631:
 10260  0AC2  0008               	return
 10261  0AC3                     __end_of_EUSART_SetOverrunErrorHandler:
 10262                           
 10263                           	psect	text22
 10264  0AB1                     __ptext22:	
 10265 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 10266 ;; Defined at:
 10267 ;;		line 260 in file "eusart.c"
 10268 ;; Parameters:    Size  Location     Type
 10269 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10270 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 10271 ;; Auto vars:     Size  Location     Type
 10272 ;;		None
 10273 ;; Return value:  Size  Location     Type
 10274 ;;                  1    wreg      void 
 10275 ;; Registers used:
 10276 ;;		wreg
 10277 ;; Tracked objects:
 10278 ;;		On entry : 0/0
 10279 ;;		On exit  : 0/0
 10280 ;;		Unchanged: 0/0
 10281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10282 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10285 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10286 ;;Total ram usage:        2 bytes
 10287 ;; Hardware stack levels used: 1
 10288 ;; Hardware stack levels required when called: 4
 10289 ;; This function calls:
 10290 ;;		Nothing
 10291 ;; This function is called by:
 10292 ;;		_EUSART_Initialize
 10293 ;; This function uses a non-reentrant model
 10294 ;;
 10295                           
 10296  0AB1                     _EUSART_SetFramingErrorHandler:	
 10297                           ;psect for function _EUSART_SetFramingErrorHandler
 10298                           
 10299  0AB1                     l3318:	
 10300                           ;incstack = 0
 10301                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 10302                           
 10303                           
 10304                           ;eusart.c: 261:     EUSART_FramingErrorHandler = interruptHandler;
 10305  0AB1  0020               	movlb	0	; select bank0
 10306  0AB2  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 10307  0AB3  0021               	movlb	1	; select bank1
 10308  0AB4  00B5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
 10309  0AB5  0020               	movlb	0	; select bank0
 10310  0AB6  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 10311  0AB7  0021               	movlb	1	; select bank1
 10312  0AB8  00B4               	movwf	_EUSART_FramingErrorHandler^(0+128)
 10313  0AB9                     l628:
 10314  0AB9  0008               	return
 10315  0ABA                     __end_of_EUSART_SetFramingErrorHandler:
 10316                           
 10317                           	psect	text23
 10318  0AA8                     __ptext23:	
 10319 ;; *************** function _EUSART_SetErrorHandler *****************
 10320 ;; Defined at:
 10321 ;;		line 272 in file "eusart.c"
 10322 ;; Parameters:    Size  Location     Type
 10323 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10324 ;;		 -> EUSART_DefaultErrorHandler(1), 
 10325 ;; Auto vars:     Size  Location     Type
 10326 ;;		None
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  1    wreg      void 
 10329 ;; Registers used:
 10330 ;;		wreg
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10336 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10339 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10340 ;;Total ram usage:        2 bytes
 10341 ;; Hardware stack levels used: 1
 10342 ;; Hardware stack levels required when called: 4
 10343 ;; This function calls:
 10344 ;;		Nothing
 10345 ;; This function is called by:
 10346 ;;		_EUSART_Initialize
 10347 ;; This function uses a non-reentrant model
 10348 ;;
 10349                           
 10350  0AA8                     _EUSART_SetErrorHandler:	
 10351                           ;psect for function _EUSART_SetErrorHandler
 10352                           
 10353  0AA8                     l3322:	
 10354                           ;incstack = 0
 10355                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 10356                           
 10357                           
 10358                           ;eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
 10359  0AA8  0020               	movlb	0	; select bank0
 10360  0AA9  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 10361  0AAA  0021               	movlb	1	; select bank1
 10362  0AAB  00B1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
 10363  0AAC  0020               	movlb	0	; select bank0
 10364  0AAD  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
 10365  0AAE  0021               	movlb	1	; select bank1
 10366  0AAF  00B0               	movwf	_EUSART_ErrorHandler^(0+128)
 10367  0AB0                     l634:
 10368  0AB0  0008               	return
 10369  0AB1                     __end_of_EUSART_SetErrorHandler:
 10370                           
 10371                           	psect	text24
 10372  0B8C                     __ptext24:	
 10373 ;; *************** function _CCP4_Initialize *****************
 10374 ;; Defined at:
 10375 ;;		line 18 in file "ccp4.c"
 10376 ;; Parameters:    Size  Location     Type
 10377 ;;		None
 10378 ;; Auto vars:     Size  Location     Type
 10379 ;;		None
 10380 ;; Return value:  Size  Location     Type
 10381 ;;                  1    wreg      void 
 10382 ;; Registers used:
 10383 ;;		wreg, status,2, status,0
 10384 ;; Tracked objects:
 10385 ;;		On entry : 0/0
 10386 ;;		On exit  : 0/0
 10387 ;;		Unchanged: 0/0
 10388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10393 ;;Total ram usage:        0 bytes
 10394 ;; Hardware stack levels used: 1
 10395 ;; Hardware stack levels required when called: 4
 10396 ;; This function calls:
 10397 ;;		Nothing
 10398 ;; This function is called by:
 10399 ;;		_SYSTEM_Initialize
 10400 ;; This function uses a non-reentrant model
 10401 ;;
 10402                           
 10403  0B8C                     _CCP4_Initialize:	
 10404                           ;psect for function _CCP4_Initialize
 10405                           
 10406  0B8C                     l3598:	
 10407                           ;incstack = 0
 10408                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0]
 10409                           
 10410                           
 10411                           ;ccp4.c: 21:  CCP4CON = 0x81;
 10412  0B8C  3081               	movlw	129
 10413  0B8D  0026               	movlb	6	; select bank6
 10414  0B8E  0097               	movwf	23	;volatile
 10415                           
 10416                           ;ccp4.c: 24:  CCPR4H = 0x11;
 10417  0B8F  3011               	movlw	17
 10418  0B90  0096               	movwf	22	;volatile
 10419                           
 10420                           ;ccp4.c: 25:  CCPR4L = 0xC1;
 10421  0B91  30C1               	movlw	193
 10422  0B92  0095               	movwf	21	;volatile
 10423  0B93                     l3600:
 10424                           
 10425                           ;ccp4.c: 28:  CCPTMRSbits.C4TSEL = 0x2;
 10426  0B93  0025               	movlb	5	; select bank5
 10427  0B94  081F               	movf	31,w	;volatile
 10428  0B95  393F               	andlw	-193
 10429  0B96  3880               	iorlw	128
 10430  0B97  009F               	movwf	31	;volatile
 10431  0B98                     l3602:
 10432                           
 10433                           ;ccp4.c: 31:     PIR4bits.CCP4IF = 0;
 10434  0B98  0020               	movlb	0	; select bank0
 10435  0B99  1194               	bcf	20,3	;volatile
 10436  0B9A                     l3604:
 10437                           
 10438                           ;ccp4.c: 34:     PIE4bits.CCP4IE = 1;
 10439  0B9A  0021               	movlb	1	; select bank1
 10440  0B9B  1594               	bsf	20,3	;volatile
 10441  0B9C                     l865:
 10442  0B9C  0008               	return
 10443  0B9D                     __end_of_CCP4_Initialize:
 10444                           
 10445                           	psect	text25
 10446  0C5D                     __ptext25:	
 10447 ;; *************** function _CCP3_Initialize *****************
 10448 ;; Defined at:
 10449 ;;		line 49 in file "ccp3.c"
 10450 ;; Parameters:    Size  Location     Type
 10451 ;;		None
 10452 ;; Auto vars:     Size  Location     Type
 10453 ;;		None
 10454 ;; Return value:  Size  Location     Type
 10455 ;;                  1    wreg      void 
 10456 ;; Registers used:
 10457 ;;		wreg, status,2, status,0, pclath, cstack
 10458 ;; Tracked objects:
 10459 ;;		On entry : 0/0
 10460 ;;		On exit  : 0/0
 10461 ;;		Unchanged: 0/0
 10462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10467 ;;Total ram usage:        0 bytes
 10468 ;; Hardware stack levels used: 1
 10469 ;; Hardware stack levels required when called: 5
 10470 ;; This function calls:
 10471 ;;		_CCP3_SetCallBack
 10472 ;; This function is called by:
 10473 ;;		_SYSTEM_Initialize
 10474 ;; This function uses a non-reentrant model
 10475 ;;
 10476                           
 10477  0C5D                     _CCP3_Initialize:	
 10478                           ;psect for function _CCP3_Initialize
 10479                           
 10480  0C5D                     l3528:	
 10481                           ;incstack = 0
 10482                           ; Regs used in _CCP3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10483                           
 10484                           
 10485                           ;ccp3.c: 52:  CCP3CON = 0x83;
 10486  0C5D  3083               	movlw	131
 10487  0C5E  0026               	movlb	6	; select bank6
 10488  0C5F  0093               	movwf	19	;volatile
 10489  0C60                     l3530:
 10490                           
 10491                           ;ccp3.c: 55:  CCP3CAP = 0x00;
 10492  0C60  0194               	clrf	20	;volatile
 10493  0C61                     l3532:
 10494                           
 10495                           ;ccp3.c: 58:  CCPR3H = 0x00;
 10496  0C61  0192               	clrf	18	;volatile
 10497  0C62                     l3534:
 10498                           
 10499                           ;ccp3.c: 61:  CCPR3L = 0x00;
 10500  0C62  0191               	clrf	17	;volatile
 10501  0C63                     l3536:
 10502                           
 10503                           ;ccp3.c: 64:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 10504  0C63  3081               	movlw	low _CCP3_DefaultCallBack
 10505  0C64  0020               	movlb	0	; select bank0
 10506  0C65  00A0               	movwf	CCP3_SetCallBack@customCallBack
 10507  0C66  300E               	movlw	high _CCP3_DefaultCallBack
 10508  0C67  00A1               	movwf	CCP3_SetCallBack@customCallBack+1
 10509  0C68  318A  229F  318C   	fcall	_CCP3_SetCallBack
 10510  0C6B                     l3538:
 10511                           
 10512                           ;ccp3.c: 67:  CCPTMRSbits.C3TSEL = 0x1;
 10513  0C6B  0025               	movlb	5	; select bank5
 10514  0C6C  081F               	movf	31,w	;volatile
 10515  0C6D  39CF               	andlw	-49
 10516  0C6E  3810               	iorlw	16
 10517  0C6F  009F               	movwf	31	;volatile
 10518  0C70                     l3540:
 10519                           
 10520                           ;ccp3.c: 70:     PIR4bits.CCP3IF = 0;
 10521  0C70  0020               	movlb	0	; select bank0
 10522  0C71  1114               	bcf	20,2	;volatile
 10523  0C72                     l3542:
 10524                           
 10525                           ;ccp3.c: 73:     PIE4bits.CCP3IE = 1;
 10526  0C72  0021               	movlb	1	; select bank1
 10527  0C73  1514               	bsf	20,2	;volatile
 10528  0C74                     l445:
 10529  0C74  0008               	return
 10530  0C75                     __end_of_CCP3_Initialize:
 10531                           
 10532                           	psect	text26
 10533  0A9F                     __ptext26:	
 10534 ;; *************** function _CCP3_SetCallBack *****************
 10535 ;; Defined at:
 10536 ;;		line 95 in file "ccp3.c"
 10537 ;; Parameters:    Size  Location     Type
 10538 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10539 ;;		 -> CCP3_DefaultCallBack(1), 
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;		None
 10542 ;; Return value:  Size  Location     Type
 10543 ;;                  1    wreg      void 
 10544 ;; Registers used:
 10545 ;;		wreg
 10546 ;; Tracked objects:
 10547 ;;		On entry : 0/0
 10548 ;;		On exit  : 0/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10554 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10555 ;;Total ram usage:        2 bytes
 10556 ;; Hardware stack levels used: 1
 10557 ;; Hardware stack levels required when called: 4
 10558 ;; This function calls:
 10559 ;;		Nothing
 10560 ;; This function is called by:
 10561 ;;		_CCP3_Initialize
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565  0A9F                     _CCP3_SetCallBack:	
 10566                           ;psect for function _CCP3_SetCallBack
 10567                           
 10568  0A9F                     l3312:	
 10569                           ;incstack = 0
 10570                           ; Regs used in _CCP3_SetCallBack: [wreg]
 10571                           
 10572                           
 10573                           ;ccp3.c: 96:     CCP3_CallBack = customCallBack;
 10574  0A9F  0020               	movlb	0	; select bank0
 10575  0AA0  0821               	movf	CCP3_SetCallBack@customCallBack+1,w
 10576  0AA1  0021               	movlb	1	; select bank1
 10577  0AA2  00C1               	movwf	(_CCP3_CallBack+1)^(0+128)
 10578  0AA3  0020               	movlb	0	; select bank0
 10579  0AA4  0820               	movf	CCP3_SetCallBack@customCallBack,w
 10580  0AA5  0021               	movlb	1	; select bank1
 10581  0AA6  00C0               	movwf	_CCP3_CallBack^(0+128)
 10582  0AA7                     l451:
 10583  0AA7  0008               	return
 10584  0AA8                     __end_of_CCP3_SetCallBack:
 10585                           
 10586                           	psect	text27
 10587  0C45                     __ptext27:	
 10588 ;; *************** function _CCP2_Initialize *****************
 10589 ;; Defined at:
 10590 ;;		line 49 in file "ccp2.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;		None
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;		None
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  1    wreg      void 
 10597 ;; Registers used:
 10598 ;;		wreg, status,2, status,0, pclath, cstack
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10608 ;;Total ram usage:        0 bytes
 10609 ;; Hardware stack levels used: 1
 10610 ;; Hardware stack levels required when called: 5
 10611 ;; This function calls:
 10612 ;;		_CCP2_SetCallBack
 10613 ;; This function is called by:
 10614 ;;		_SYSTEM_Initialize
 10615 ;; This function uses a non-reentrant model
 10616 ;;
 10617                           
 10618  0C45                     _CCP2_Initialize:	
 10619                           ;psect for function _CCP2_Initialize
 10620                           
 10621  0C45                     l3582:	
 10622                           ;incstack = 0
 10623                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10624                           
 10625                           
 10626                           ;ccp2.c: 52:  CCP2CON = 0x83;
 10627  0C45  3083               	movlw	131
 10628  0C46  0025               	movlb	5	; select bank5
 10629  0C47  0097               	movwf	23	;volatile
 10630  0C48                     l3584:
 10631                           
 10632                           ;ccp2.c: 55:  CCP2CAP = 0x00;
 10633  0C48  0198               	clrf	24	;volatile
 10634  0C49                     l3586:
 10635                           
 10636                           ;ccp2.c: 58:  CCPR2H = 0x00;
 10637  0C49  0196               	clrf	22	;volatile
 10638  0C4A                     l3588:
 10639                           
 10640                           ;ccp2.c: 61:  CCPR2L = 0x00;
 10641  0C4A  0195               	clrf	21	;volatile
 10642  0C4B                     l3590:
 10643                           
 10644                           ;ccp2.c: 64:     CCP2_SetCallBack(CCP2_DefaultCallBack);
 10645  0C4B  3046               	movlw	low _CCP2_DefaultCallBack
 10646  0C4C  0020               	movlb	0	; select bank0
 10647  0C4D  00A0               	movwf	CCP2_SetCallBack@customCallBack
 10648  0C4E  300E               	movlw	high _CCP2_DefaultCallBack
 10649  0C4F  00A1               	movwf	CCP2_SetCallBack@customCallBack+1
 10650  0C50  318A  2296  318C   	fcall	_CCP2_SetCallBack
 10651  0C53                     l3592:
 10652                           
 10653                           ;ccp2.c: 67:  CCPTMRSbits.C2TSEL = 0x1;
 10654  0C53  0025               	movlb	5	; select bank5
 10655  0C54  081F               	movf	31,w	;volatile
 10656  0C55  39F3               	andlw	-13
 10657  0C56  3804               	iorlw	4
 10658  0C57  009F               	movwf	31	;volatile
 10659  0C58                     l3594:
 10660                           
 10661                           ;ccp2.c: 70:     PIR4bits.CCP2IF = 0;
 10662  0C58  0020               	movlb	0	; select bank0
 10663  0C59  1094               	bcf	20,1	;volatile
 10664  0C5A                     l3596:
 10665                           
 10666                           ;ccp2.c: 73:     PIE4bits.CCP2IE = 1;
 10667  0C5A  0021               	movlb	1	; select bank1
 10668  0C5B  1494               	bsf	20,1	;volatile
 10669  0C5C                     l399:
 10670  0C5C  0008               	return
 10671  0C5D                     __end_of_CCP2_Initialize:
 10672                           
 10673                           	psect	text28
 10674  0A96                     __ptext28:	
 10675 ;; *************** function _CCP2_SetCallBack *****************
 10676 ;; Defined at:
 10677 ;;		line 95 in file "ccp2.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10680 ;;		 -> CCP2_DefaultCallBack(1), 
 10681 ;; Auto vars:     Size  Location     Type
 10682 ;;		None
 10683 ;; Return value:  Size  Location     Type
 10684 ;;                  1    wreg      void 
 10685 ;; Registers used:
 10686 ;;		wreg
 10687 ;; Tracked objects:
 10688 ;;		On entry : 0/0
 10689 ;;		On exit  : 0/0
 10690 ;;		Unchanged: 0/0
 10691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10692 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10695 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;Total ram usage:        2 bytes
 10697 ;; Hardware stack levels used: 1
 10698 ;; Hardware stack levels required when called: 4
 10699 ;; This function calls:
 10700 ;;		Nothing
 10701 ;; This function is called by:
 10702 ;;		_CCP2_Initialize
 10703 ;; This function uses a non-reentrant model
 10704 ;;
 10705                           
 10706  0A96                     _CCP2_SetCallBack:	
 10707                           ;psect for function _CCP2_SetCallBack
 10708                           
 10709  0A96                     l3310:	
 10710                           ;incstack = 0
 10711                           ; Regs used in _CCP2_SetCallBack: [wreg]
 10712                           
 10713                           
 10714                           ;ccp2.c: 96:     CCP2_CallBack = customCallBack;
 10715  0A96  0020               	movlb	0	; select bank0
 10716  0A97  0821               	movf	CCP2_SetCallBack@customCallBack+1,w
 10717  0A98  0021               	movlb	1	; select bank1
 10718  0A99  00C7               	movwf	(_CCP2_CallBack+1)^(0+128)
 10719  0A9A  0020               	movlb	0	; select bank0
 10720  0A9B  0820               	movf	CCP2_SetCallBack@customCallBack,w
 10721  0A9C  0021               	movlb	1	; select bank1
 10722  0A9D  00C6               	movwf	_CCP2_CallBack^(0+128)
 10723  0A9E                     l405:
 10724  0A9E  0008               	return
 10725  0A9F                     __end_of_CCP2_SetCallBack:
 10726                           
 10727                           	psect	text29
 10728  0C2D                     __ptext29:	
 10729 ;; *************** function _CCP1_Initialize *****************
 10730 ;; Defined at:
 10731 ;;		line 49 in file "ccp1.c"
 10732 ;; Parameters:    Size  Location     Type
 10733 ;;		None
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;		None
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  1    wreg      void 
 10738 ;; Registers used:
 10739 ;;		wreg, status,2, status,0, pclath, cstack
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10749 ;;Total ram usage:        0 bytes
 10750 ;; Hardware stack levels used: 1
 10751 ;; Hardware stack levels required when called: 5
 10752 ;; This function calls:
 10753 ;;		_CCP1_SetCallBack
 10754 ;; This function is called by:
 10755 ;;		_SYSTEM_Initialize
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759  0C2D                     _CCP1_Initialize:	
 10760                           ;psect for function _CCP1_Initialize
 10761                           
 10762  0C2D                     l3544:	
 10763                           ;incstack = 0
 10764                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10765                           
 10766                           
 10767                           ;ccp1.c: 52:  CCP1CON = 0x83;
 10768  0C2D  3083               	movlw	131
 10769  0C2E  0025               	movlb	5	; select bank5
 10770  0C2F  0093               	movwf	19	;volatile
 10771  0C30                     l3546:
 10772                           
 10773                           ;ccp1.c: 55:  CCP1CAP = 0x00;
 10774  0C30  0194               	clrf	20	;volatile
 10775  0C31                     l3548:
 10776                           
 10777                           ;ccp1.c: 58:  CCPR1H = 0x00;
 10778  0C31  0192               	clrf	18	;volatile
 10779  0C32                     l3550:
 10780                           
 10781                           ;ccp1.c: 61:  CCPR1L = 0x00;
 10782  0C32  0191               	clrf	17	;volatile
 10783  0C33                     l3552:
 10784                           
 10785                           ;ccp1.c: 64:     CCP1_SetCallBack(CCP1_DefaultCallBack);
 10786  0C33  300B               	movlw	low _CCP1_DefaultCallBack
 10787  0C34  0020               	movlb	0	; select bank0
 10788  0C35  00A0               	movwf	CCP1_SetCallBack@customCallBack
 10789  0C36  300E               	movlw	high _CCP1_DefaultCallBack
 10790  0C37  00A1               	movwf	CCP1_SetCallBack@customCallBack+1
 10791  0C38  318A  228D  318C   	fcall	_CCP1_SetCallBack
 10792  0C3B                     l3554:
 10793                           
 10794                           ;ccp1.c: 67:  CCPTMRSbits.C1TSEL = 0x1;
 10795  0C3B  0025               	movlb	5	; select bank5
 10796  0C3C  081F               	movf	31,w	;volatile
 10797  0C3D  39FC               	andlw	-4
 10798  0C3E  3801               	iorlw	1
 10799  0C3F  009F               	movwf	31	;volatile
 10800  0C40                     l3556:
 10801                           
 10802                           ;ccp1.c: 70:     PIR4bits.CCP1IF = 0;
 10803  0C40  0020               	movlb	0	; select bank0
 10804  0C41  1014               	bcf	20,0	;volatile
 10805  0C42                     l3558:
 10806                           
 10807                           ;ccp1.c: 73:     PIE4bits.CCP1IE = 1;
 10808  0C42  0021               	movlb	1	; select bank1
 10809  0C43  1414               	bsf	20,0	;volatile
 10810  0C44                     l353:
 10811  0C44  0008               	return
 10812  0C45                     __end_of_CCP1_Initialize:
 10813                           
 10814                           	psect	text30
 10815  0A8D                     __ptext30:	
 10816 ;; *************** function _CCP1_SetCallBack *****************
 10817 ;; Defined at:
 10818 ;;		line 95 in file "ccp1.c"
 10819 ;; Parameters:    Size  Location     Type
 10820 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10821 ;;		 -> CCP1_DefaultCallBack(1), 
 10822 ;; Auto vars:     Size  Location     Type
 10823 ;;		None
 10824 ;; Return value:  Size  Location     Type
 10825 ;;                  1    wreg      void 
 10826 ;; Registers used:
 10827 ;;		wreg
 10828 ;; Tracked objects:
 10829 ;;		On entry : 0/0
 10830 ;;		On exit  : 0/0
 10831 ;;		Unchanged: 0/0
 10832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10833 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10836 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10837 ;;Total ram usage:        2 bytes
 10838 ;; Hardware stack levels used: 1
 10839 ;; Hardware stack levels required when called: 4
 10840 ;; This function calls:
 10841 ;;		Nothing
 10842 ;; This function is called by:
 10843 ;;		_CCP1_Initialize
 10844 ;; This function uses a non-reentrant model
 10845 ;;
 10846                           
 10847  0A8D                     _CCP1_SetCallBack:	
 10848                           ;psect for function _CCP1_SetCallBack
 10849                           
 10850  0A8D                     l3308:	
 10851                           ;incstack = 0
 10852                           ; Regs used in _CCP1_SetCallBack: [wreg]
 10853                           
 10854                           
 10855                           ;ccp1.c: 96:     CCP1_CallBack = customCallBack;
 10856  0A8D  0020               	movlb	0	; select bank0
 10857  0A8E  0821               	movf	CCP1_SetCallBack@customCallBack+1,w
 10858  0A8F  0021               	movlb	1	; select bank1
 10859  0A90  00CD               	movwf	(_CCP1_CallBack+1)^(0+128)
 10860  0A91  0020               	movlb	0	; select bank0
 10861  0A92  0820               	movf	CCP1_SetCallBack@customCallBack,w
 10862  0A93  0021               	movlb	1	; select bank1
 10863  0A94  00CC               	movwf	_CCP1_CallBack^(0+128)
 10864  0A95                     l359:
 10865  0A95  0008               	return
 10866  0A96                     __end_of_CCP1_SetCallBack:
 10867                           
 10868                           	psect	text31
 10869  0B2C                     __ptext31:	
 10870 ;; *************** function _MotorControl_Init *****************
 10871 ;; Defined at:
 10872 ;;		line 37 in file "MotorControl.c"
 10873 ;; Parameters:    Size  Location     Type
 10874 ;;		None
 10875 ;; Auto vars:     Size  Location     Type
 10876 ;;		None
 10877 ;; Return value:  Size  Location     Type
 10878 ;;                  1    wreg      void 
 10879 ;; Registers used:
 10880 ;;		wreg, status,2, status,0, pclath, cstack
 10881 ;; Tracked objects:
 10882 ;;		On entry : 0/0
 10883 ;;		On exit  : 0/0
 10884 ;;		Unchanged: 0/0
 10885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10890 ;;Total ram usage:        0 bytes
 10891 ;; Hardware stack levels used: 1
 10892 ;; Hardware stack levels required when called: 6
 10893 ;; This function calls:
 10894 ;;		_MotorControl_Off
 10895 ;; This function is called by:
 10896 ;;		_main
 10897 ;; This function uses a non-reentrant model
 10898 ;;
 10899                           
 10900  0B2C                     _MotorControl_Init:	
 10901                           ;psect for function _MotorControl_Init
 10902                           
 10903  0B2C                     l4242:	
 10904                           ;incstack = 0
 10905                           ; Regs used in _MotorControl_Init: [wreg+status,2+status,0+pclath+cstack]
 10906                           
 10907                           
 10908                           ;MotorControl.c: 39:     dutyCyclePerMilli = 500;
 10909  0B2C  30F4               	movlw	244
 10910  0B2D  0022               	movlb	2	; select bank2
 10911  0B2E  00C4               	movwf	_dutyCyclePerMilli^(0+256)
 10912  0B2F  3001               	movlw	1
 10913  0B30  00C5               	movwf	(_dutyCyclePerMilli^(0+256)+1)
 10914                           
 10915                           ;MotorControl.c: 40:     dutyCycle10bit = 512;
 10916  0B31  3000               	movlw	0
 10917  0B32  0021               	movlb	1	; select bank1
 10918  0B33  00AA               	movwf	_dutyCycle10bit^(0+128)
 10919  0B34  3002               	movlw	2
 10920  0B35  00AB               	movwf	(_dutyCycle10bit^(0+128)+1)
 10921  0B36                     l4244:
 10922                           
 10923                           ;MotorControl.c: 41:     MotorControl_Off();
 10924  0B36  318A  2274  318B   	fcall	_MotorControl_Off
 10925  0B39                     l837:
 10926  0B39  0008               	return
 10927  0B3A                     __end_of_MotorControl_Init:
 10928                           
 10929                           	psect	text32
 10930  0A74                     __ptext32:	
 10931 ;; *************** function _MotorControl_Off *****************
 10932 ;; Defined at:
 10933 ;;		line 76 in file "MotorControl.c"
 10934 ;; Parameters:    Size  Location     Type
 10935 ;;		None
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;		None
 10938 ;; Return value:  Size  Location     Type
 10939 ;;                  1    wreg      void 
 10940 ;; Registers used:
 10941 ;;		wreg, status,2, status,0, pclath, cstack
 10942 ;; Tracked objects:
 10943 ;;		On entry : 0/0
 10944 ;;		On exit  : 0/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10951 ;;Total ram usage:        0 bytes
 10952 ;; Hardware stack levels used: 1
 10953 ;; Hardware stack levels required when called: 5
 10954 ;; This function calls:
 10955 ;;		_TMR2_StopTimer
 10956 ;;		_TMR2_WriteTimer
 10957 ;; This function is called by:
 10958 ;;		_MotorControl_Init
 10959 ;; This function uses a non-reentrant model
 10960 ;;
 10961                           
 10962  0A74                     _MotorControl_Off:	
 10963                           ;psect for function _MotorControl_Off
 10964                           
 10965  0A74                     l3994:	
 10966                           ;incstack = 0
 10967                           ; Regs used in _MotorControl_Off: [wreg+status,2+status,0+pclath+cstack]
 10968                           
 10969                           
 10970                           ;MotorControl.c: 78:     TMR2_StopTimer();
 10971  0A74  318A  2235  318A   	fcall	_TMR2_StopTimer
 10972  0A77                     l3996:
 10973                           
 10974                           ;MotorControl.c: 79:     TMR2_WriteTimer(0x00);
 10975  0A77  3000               	movlw	0
 10976  0A78  318A  2247  318A   	fcall	_TMR2_WriteTimer
 10977  0A7B                     l848:
 10978  0A7B  0008               	return
 10979  0A7C                     __end_of_MotorControl_Off:
 10980                           
 10981                           	psect	text33
 10982  0A47                     __ptext33:	
 10983 ;; *************** function _TMR2_WriteTimer *****************
 10984 ;; Defined at:
 10985 ;;		line 61 in file "tmr2.c"
 10986 ;; Parameters:    Size  Location     Type
 10987 ;;  timerVal        1    wreg     unsigned char 
 10988 ;; Auto vars:     Size  Location     Type
 10989 ;;  timerVal        1    0[BANK0 ] unsigned char 
 10990 ;; Return value:  Size  Location     Type
 10991 ;;                  1    wreg      void 
 10992 ;; Registers used:
 10993 ;;		wreg
 10994 ;; Tracked objects:
 10995 ;;		On entry : 0/0
 10996 ;;		On exit  : 0/0
 10997 ;;		Unchanged: 0/0
 10998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11002 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11003 ;;Total ram usage:        1 bytes
 11004 ;; Hardware stack levels used: 1
 11005 ;; Hardware stack levels required when called: 4
 11006 ;; This function calls:
 11007 ;;		Nothing
 11008 ;; This function is called by:
 11009 ;;		_MotorControl_Off
 11010 ;; This function uses a non-reentrant model
 11011 ;;
 11012                           
 11013  0A47                     _TMR2_WriteTimer:	
 11014                           ;psect for function _TMR2_WriteTimer
 11015                           
 11016                           
 11017                           ;incstack = 0
 11018                           ; Regs used in _TMR2_WriteTimer: [wreg]
 11019                           ;TMR2_WriteTimer@timerVal stored from wreg
 11020  0A47  0020               	movlb	0	; select bank0
 11021  0A48  00A0               	movwf	TMR2_WriteTimer@timerVal
 11022  0A49                     l3698:
 11023                           
 11024                           ;tmr2.c: 61: void TMR2_WriteTimer(uint8_t timerVal);tmr2.c: 62: {;tmr2.c: 64:     TMR2 =
      +                           timerVal;
 11025  0A49  0820               	movf	TMR2_WriteTimer@timerVal,w
 11026  0A4A  009D               	movwf	29	;volatile
 11027  0A4B                     l917:
 11028  0A4B  0008               	return
 11029  0A4C                     __end_of_TMR2_WriteTimer:
 11030                           
 11031                           	psect	text34
 11032  0A35                     __ptext34:	
 11033 ;; *************** function _TMR2_StopTimer *****************
 11034 ;; Defined at:
 11035 ;;		line 42 in file "tmr2.c"
 11036 ;; Parameters:    Size  Location     Type
 11037 ;;		None
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;		None
 11040 ;; Return value:  Size  Location     Type
 11041 ;;                  1    wreg      void 
 11042 ;; Registers used:
 11043 ;;		None
 11044 ;; Tracked objects:
 11045 ;;		On entry : 0/0
 11046 ;;		On exit  : 0/0
 11047 ;;		Unchanged: 0/0
 11048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11053 ;;Total ram usage:        0 bytes
 11054 ;; Hardware stack levels used: 1
 11055 ;; Hardware stack levels required when called: 4
 11056 ;; This function calls:
 11057 ;;		Nothing
 11058 ;; This function is called by:
 11059 ;;		_MotorControl_Off
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063  0A35                     _TMR2_StopTimer:	
 11064                           ;psect for function _TMR2_StopTimer
 11065                           
 11066  0A35                     l3696:	
 11067                           ;incstack = 0
 11068                           ; Regs used in _TMR2_StopTimer: []
 11069                           
 11070                           
 11071                           ;tmr2.c: 45:     T2CONbits.TMR2ON = 0;
 11072  0A35  0020               	movlb	0	; select bank0
 11073  0A36  111F               	bcf	31,2	;volatile
 11074  0A37                     l911:
 11075  0A37  0008               	return
 11076  0A38                     __end_of_TMR2_StopTimer:
 11077                           
 11078                           	psect	text35
 11079  06E9                     __ptext35:	
 11080 ;; *************** function _JSN_Sensor_Trig *****************
 11081 ;; Defined at:
 11082 ;;		line 87 in file "JSN_Sensor.c"
 11083 ;; Parameters:    Size  Location     Type
 11084 ;;  Sensor          1    wreg     PTR struct .
 11085 ;;		 -> NULL(0), Sens3(6), Sens2(6), Sens1(6), 
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;  Sensor          1   28[BANK0 ] PTR struct .
 11088 ;;		 -> NULL(0), Sens3(6), Sens2(6), Sens1(6), 
 11089 ;; Return value:  Size  Location     Type
 11090 ;;                  1    wreg      void 
 11091 ;; Registers used:
 11092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11093 ;; Tracked objects:
 11094 ;;		On entry : 0/0
 11095 ;;		On exit  : 0/0
 11096 ;;		Unchanged: 0/0
 11097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11099 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11100 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11101 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11102 ;;Total ram usage:        5 bytes
 11103 ;; Hardware stack levels used: 1
 11104 ;; Hardware stack levels required when called: 6
 11105 ;; This function calls:
 11106 ;;		_FRT_GetMicros
 11107 ;;		_WritePin
 11108 ;; This function is called by:
 11109 ;;		_main
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           
 11113  06E9                     _JSN_Sensor_Trig:	
 11114                           ;psect for function _JSN_Sensor_Trig
 11115                           
 11116                           
 11117                           ;incstack = 0
 11118                           ; Regs used in _JSN_Sensor_Trig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11119                           ;JSN_Sensor_Trig@Sensor stored from wreg
 11120  06E9  0020               	movlb	0	; select bank0
 11121  06EA  00BC               	movwf	JSN_Sensor_Trig@Sensor
 11122  06EB                     l4086:
 11123                           
 11124                           ;JSN_Sensor.c: 88:     micros = FRT_GetMicros();
 11125  06EB  3187  279B  3186   	fcall	_FRT_GetMicros
 11126  06EE  0020               	movlb	0	; select bank0
 11127  06EF  0829               	movf	?_FRT_GetMicros+3,w
 11128  06F0  0022               	movlb	2	; select bank2
 11129  06F1  00C3               	movwf	(_micros+3)^(0+256)
 11130  06F2  0020               	movlb	0	; select bank0
 11131  06F3  0828               	movf	?_FRT_GetMicros+2,w
 11132  06F4  0022               	movlb	2	; select bank2
 11133  06F5  00C2               	movwf	(_micros+2)^(0+256)
 11134  06F6  0020               	movlb	0	; select bank0
 11135  06F7  0827               	movf	?_FRT_GetMicros+1,w
 11136  06F8  0022               	movlb	2	; select bank2
 11137  06F9  00C1               	movwf	(_micros+1)^(0+256)
 11138  06FA  0020               	movlb	0	; select bank0
 11139  06FB  0826               	movf	?_FRT_GetMicros,w
 11140  06FC  0022               	movlb	2	; select bank2
 11141  06FD  00C0               	movwf	_micros^(0+256)
 11142  06FE                     l4088:
 11143                           
 11144                           ;JSN_Sensor.c: 91:     WritePin(Sensor->trigPin, 1);
 11145  06FE  0020               	movlb	0	; select bank0
 11146  06FF  01A0               	clrf	WritePin@val
 11147  0700  0AA0               	incf	WritePin@val,f
 11148  0701  083C               	movf	JSN_Sensor_Trig@Sensor,w
 11149  0702  3E04               	addlw	4
 11150  0703  0086               	movwf	6
 11151  0704  3001               	movlw	1	; select bank2/3
 11152  0705  0087               	movwf	7
 11153  0706  0801               	movf	1,w
 11154  0707  3182  2264  3186   	fcall	_WritePin
 11155  070A                     l4090:	
 11156                           ;JSN_Sensor.c: 94:     while ((FRT_GetMicros() - micros) < 11);
 11157                           
 11158  070A  3187  279B  3186   	fcall	_FRT_GetMicros
 11159  070D  0022               	movlb	2	; select bank2
 11160  070E  0840               	movf	_micros^(0+256),w
 11161  070F  0020               	movlb	0	; select bank0
 11162  0710  0226               	subwf	?_FRT_GetMicros,w
 11163  0711  00B8               	movwf	??_JSN_Sensor_Trig
 11164  0712  0022               	movlb	2	; select bank2
 11165  0713  0841               	movf	(_micros+1)^(0+256),w
 11166  0714  0020               	movlb	0	; select bank0
 11167  0715  3B27               	subwfb	?_FRT_GetMicros+1,w
 11168  0716  00B9               	movwf	??_JSN_Sensor_Trig+1
 11169  0717  0022               	movlb	2	; select bank2
 11170  0718  0842               	movf	(_micros+2)^(0+256),w
 11171  0719  0020               	movlb	0	; select bank0
 11172  071A  3B28               	subwfb	?_FRT_GetMicros+2,w
 11173  071B  00BA               	movwf	??_JSN_Sensor_Trig+2
 11174  071C  0022               	movlb	2	; select bank2
 11175  071D  0843               	movf	(_micros+3)^(0+256),w
 11176  071E  0020               	movlb	0	; select bank0
 11177  071F  3B29               	subwfb	?_FRT_GetMicros+3,w
 11178  0720  00BB               	movwf	??_JSN_Sensor_Trig+3
 11179  0721  083B               	movf	??_JSN_Sensor_Trig+3,w
 11180  0722  1D03               	btfss	3,2
 11181  0723  2F30               	goto	u1410
 11182  0724  083A               	movf	??_JSN_Sensor_Trig+2,w
 11183  0725  1D03               	btfss	3,2
 11184  0726  2F30               	goto	u1410
 11185  0727  0839               	movf	??_JSN_Sensor_Trig+1,w
 11186  0728  1D03               	btfss	3,2
 11187  0729  2F30               	goto	u1410
 11188  072A  300B               	movlw	11
 11189  072B  0238               	subwf	??_JSN_Sensor_Trig,w
 11190  072C  1C03               	btfss	3,0
 11191  072D  2F2F               	goto	u1411
 11192  072E  2F30               	goto	u1410
 11193  072F                     u1411:
 11194  072F  2F0A               	goto	l4090
 11195  0730                     u1410:
 11196  0730                     l4092:
 11197                           
 11198                           ;JSN_Sensor.c: 97:     WritePin(Sensor->trigPin, 0);
 11199  0730  0020               	movlb	0	; select bank0
 11200  0731  01A0               	clrf	WritePin@val
 11201  0732  083C               	movf	JSN_Sensor_Trig@Sensor,w
 11202  0733  3E04               	addlw	4
 11203  0734  0086               	movwf	6
 11204  0735  3001               	movlw	1	; select bank2/3
 11205  0736  0087               	movwf	7
 11206  0737  0801               	movf	1,w
 11207  0738  3182  2264  3186   	fcall	_WritePin
 11208  073B                     l4094:
 11209                           
 11210                           ;JSN_Sensor.c: 100:     lastTrig = Sensor;
 11211  073B  0020               	movlb	0	; select bank0
 11212  073C  083C               	movf	JSN_Sensor_Trig@Sensor,w
 11213  073D  00B8               	movwf	??_JSN_Sensor_Trig
 11214  073E  0838               	movf	??_JSN_Sensor_Trig,w
 11215  073F  0021               	movlb	1	; select bank1
 11216  0740  00DA               	movwf	_lastTrig^(0+128)
 11217  0741                     l50:
 11218  0741  0008               	return
 11219  0742                     __end_of_JSN_Sensor_Trig:
 11220                           
 11221                           	psect	text36
 11222  079B                     __ptext36:	
 11223 ;; *************** function _FRT_GetMicros *****************
 11224 ;; Defined at:
 11225 ;;		line 32 in file "FRT.c"
 11226 ;; Parameters:    Size  Location     Type
 11227 ;;		None
 11228 ;; Auto vars:     Size  Location     Type
 11229 ;;		None
 11230 ;; Return value:  Size  Location     Type
 11231 ;;                  4    6[BANK0 ] unsigned long 
 11232 ;; Registers used:
 11233 ;;		wreg, status,2, status,0, pclath, cstack
 11234 ;; Tracked objects:
 11235 ;;		On entry : 0/0
 11236 ;;		On exit  : 0/0
 11237 ;;		Unchanged: 0/0
 11238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11239 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11241 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11242 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11243 ;;Total ram usage:       18 bytes
 11244 ;; Hardware stack levels used: 1
 11245 ;; Hardware stack levels required when called: 5
 11246 ;; This function calls:
 11247 ;;		_TMR0_GetCallBackNum
 11248 ;;		_TMR0_ReadTimer
 11249 ;;		___wmul
 11250 ;; This function is called by:
 11251 ;;		_JSN_Sensor_Trig
 11252 ;; This function uses a non-reentrant model
 11253 ;;
 11254                           
 11255  079B                     _FRT_GetMicros:	
 11256                           ;psect for function _FRT_GetMicros
 11257                           
 11258  079B                     l3906:	
 11259                           ;incstack = 0
 11260                           ; Regs used in _FRT_GetMicros: [wreg+status,2+status,0+pclath+cstack]
 11261                           
 11262                           
 11263                           ;FRT.c: 33:     return (micros + (250*TMR0_GetCallBackNum()) + TMR0_ReadTimer());
 11264  079B  0022               	movlb	2	; select bank2
 11265  079C  0838               	movf	_micros@FRT$F1518^(0+256),w
 11266  079D  0020               	movlb	0	; select bank0
 11267  079E  00AA               	movwf	??_FRT_GetMicros
 11268  079F  0022               	movlb	2	; select bank2
 11269  07A0  0839               	movf	(_micros@FRT$F1518+1)^(0+256),w
 11270  07A1  0020               	movlb	0	; select bank0
 11271  07A2  00AB               	movwf	??_FRT_GetMicros+1
 11272  07A3  0022               	movlb	2	; select bank2
 11273  07A4  083A               	movf	(_micros@FRT$F1518+2)^(0+256),w
 11274  07A5  0020               	movlb	0	; select bank0
 11275  07A6  00AC               	movwf	??_FRT_GetMicros+2
 11276  07A7  0022               	movlb	2	; select bank2
 11277  07A8  083B               	movf	(_micros@FRT$F1518+3)^(0+256),w
 11278  07A9  0020               	movlb	0	; select bank0
 11279  07AA  00AD               	movwf	??_FRT_GetMicros+3
 11280  07AB  318A  2266  3187   	fcall	_TMR0_ReadTimer
 11281  07AE  0020               	movlb	0	; select bank0
 11282  07AF  00AE               	movwf	??_FRT_GetMicros+4
 11283  07B0  01AF               	clrf	??_FRT_GetMicros+5
 11284  07B1  01B0               	clrf	??_FRT_GetMicros+6
 11285  07B2  01B1               	clrf	??_FRT_GetMicros+7
 11286  07B3  3180  2002  3187   	fcall	_TMR0_GetCallBackNum
 11287  07B6  0020               	movlb	0	; select bank0
 11288  07B7  00B2               	movwf	??_FRT_GetMicros+8
 11289  07B8  01B3               	clrf	??_FRT_GetMicros+9
 11290  07B9  0832               	movf	??_FRT_GetMicros+8,w
 11291  07BA  00A0               	movwf	___wmul@multiplier
 11292  07BB  0833               	movf	??_FRT_GetMicros+9,w
 11293  07BC  00A1               	movwf	___wmul@multiplier+1
 11294  07BD  30FA               	movlw	250
 11295  07BE  00A2               	movwf	___wmul@multiplicand
 11296  07BF  3000               	movlw	0
 11297  07C0  00A3               	movwf	___wmul@multiplicand+1
 11298  07C1  318C  24E3  3187   	fcall	___wmul
 11299  07C4  0020               	movlb	0	; select bank0
 11300  07C5  0820               	movf	?___wmul,w
 11301  07C6  00B4               	movwf	??_FRT_GetMicros+10
 11302  07C7  0821               	movf	?___wmul+1,w
 11303  07C8  00B5               	movwf	??_FRT_GetMicros+11
 11304  07C9  3000               	movlw	0
 11305  07CA  1BB5               	btfsc	??_FRT_GetMicros+11,7
 11306  07CB  30FF               	movlw	255
 11307  07CC  00B6               	movwf	??_FRT_GetMicros+12
 11308  07CD  00B7               	movwf	??_FRT_GetMicros+13
 11309  07CE  0834               	movf	??_FRT_GetMicros+10,w
 11310  07CF  07AE               	addwf	??_FRT_GetMicros+4,f
 11311  07D0  0835               	movf	??_FRT_GetMicros+11,w
 11312  07D1  3DAF               	addwfc	??_FRT_GetMicros+5,f
 11313  07D2  0836               	movf	??_FRT_GetMicros+12,w
 11314  07D3  3DB0               	addwfc	??_FRT_GetMicros+6,f
 11315  07D4  0837               	movf	??_FRT_GetMicros+13,w
 11316  07D5  3DB1               	addwfc	??_FRT_GetMicros+7,f
 11317  07D6  082E               	movf	??_FRT_GetMicros+4,w
 11318  07D7  07AA               	addwf	??_FRT_GetMicros,f
 11319  07D8  082F               	movf	??_FRT_GetMicros+5,w
 11320  07D9  3DAB               	addwfc	??_FRT_GetMicros+1,f
 11321  07DA  0830               	movf	??_FRT_GetMicros+6,w
 11322  07DB  3DAC               	addwfc	??_FRT_GetMicros+2,f
 11323  07DC  0831               	movf	??_FRT_GetMicros+7,w
 11324  07DD  3DAD               	addwfc	??_FRT_GetMicros+3,f
 11325  07DE  082D               	movf	??_FRT_GetMicros+3,w
 11326  07DF  00A9               	movwf	?_FRT_GetMicros+3
 11327  07E0  082C               	movf	??_FRT_GetMicros+2,w
 11328  07E1  00A8               	movwf	?_FRT_GetMicros+2
 11329  07E2  082B               	movf	??_FRT_GetMicros+1,w
 11330  07E3  00A7               	movwf	?_FRT_GetMicros+1
 11331  07E4  082A               	movf	??_FRT_GetMicros,w
 11332  07E5  00A6               	movwf	?_FRT_GetMicros
 11333  07E6                     l775:
 11334  07E6  0008               	return
 11335  07E7                     __end_of_FRT_GetMicros:
 11336                           
 11337                           	psect	text37
 11338  0CE3                     __ptext37:	
 11339 ;; *************** function ___wmul *****************
 11340 ;; Defined at:
 11341 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11344 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11345 ;; Auto vars:     Size  Location     Type
 11346 ;;  product         2    4[BANK0 ] unsigned int 
 11347 ;; Return value:  Size  Location     Type
 11348 ;;                  2    0[BANK0 ] unsigned int 
 11349 ;; Registers used:
 11350 ;;		wreg, status,2, status,0
 11351 ;; Tracked objects:
 11352 ;;		On entry : 0/0
 11353 ;;		On exit  : 0/0
 11354 ;;		Unchanged: 0/0
 11355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11356 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11357 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11359 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11360 ;;Total ram usage:        6 bytes
 11361 ;; Hardware stack levels used: 1
 11362 ;; Hardware stack levels required when called: 4
 11363 ;; This function calls:
 11364 ;;		Nothing
 11365 ;; This function is called by:
 11366 ;;		_FRT_GetMicros
 11367 ;; This function uses a non-reentrant model
 11368 ;;
 11369                           
 11370  0CE3                     ___wmul:	
 11371                           ;psect for function ___wmul
 11372                           
 11373  0CE3                     l3700:	
 11374                           ;incstack = 0
 11375                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11376                           
 11377  0CE3  0020               	movlb	0	; select bank0
 11378  0CE4  01A4               	clrf	___wmul@product
 11379  0CE5  01A5               	clrf	___wmul@product+1
 11380  0CE6                     l3702:
 11381  0CE6  1C20               	btfss	___wmul@multiplier,0
 11382  0CE7  2CE9               	goto	u1231
 11383  0CE8  2CEA               	goto	u1230
 11384  0CE9                     u1231:
 11385  0CE9  2CEE               	goto	l1152
 11386  0CEA                     u1230:
 11387  0CEA                     l3704:
 11388  0CEA  0822               	movf	___wmul@multiplicand,w
 11389  0CEB  07A4               	addwf	___wmul@product,f
 11390  0CEC  0823               	movf	___wmul@multiplicand+1,w
 11391  0CED  3DA5               	addwfc	___wmul@product+1,f
 11392  0CEE                     l1152:
 11393  0CEE  3001               	movlw	1
 11394  0CEF                     u1245:
 11395  0CEF  35A2               	lslf	___wmul@multiplicand,f
 11396  0CF0  0DA3               	rlf	___wmul@multiplicand+1,f
 11397  0CF1  0B89               	decfsz	9,f
 11398  0CF2  2CEF               	goto	u1245
 11399  0CF3                     l3706:
 11400  0CF3  3001               	movlw	1
 11401  0CF4                     u1255:
 11402  0CF4  36A1               	lsrf	___wmul@multiplier+1,f
 11403  0CF5  0CA0               	rrf	___wmul@multiplier,f
 11404  0CF6  0B89               	decfsz	9,f
 11405  0CF7  2CF4               	goto	u1255
 11406  0CF8                     l3708:
 11407  0CF8  0820               	movf	___wmul@multiplier,w
 11408  0CF9  0421               	iorwf	___wmul@multiplier+1,w
 11409  0CFA  1D03               	btfss	3,2
 11410  0CFB  2CFD               	goto	u1261
 11411  0CFC  2CFE               	goto	u1260
 11412  0CFD                     u1261:
 11413  0CFD  2CE6               	goto	l3702
 11414  0CFE                     u1260:
 11415  0CFE                     l3710:
 11416  0CFE  0825               	movf	___wmul@product+1,w
 11417  0CFF  00A1               	movwf	?___wmul+1
 11418  0D00  0824               	movf	___wmul@product,w
 11419  0D01  00A0               	movwf	?___wmul
 11420  0D02                     l1154:
 11421  0D02  0008               	return
 11422  0D03                     __end_of___wmul:
 11423                           
 11424                           	psect	text38
 11425  0A66                     __ptext38:	
 11426 ;; *************** function _TMR0_ReadTimer *****************
 11427 ;; Defined at:
 11428 ;;		line 62 in file "tmr0.c"
 11429 ;; Parameters:    Size  Location     Type
 11430 ;;		None
 11431 ;; Auto vars:     Size  Location     Type
 11432 ;;  readVal         1    1[BANK0 ] unsigned char 
 11433 ;; Return value:  Size  Location     Type
 11434 ;;                  1    wreg      unsigned char 
 11435 ;; Registers used:
 11436 ;;		wreg
 11437 ;; Tracked objects:
 11438 ;;		On entry : 0/0
 11439 ;;		On exit  : 0/0
 11440 ;;		Unchanged: 0/0
 11441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11443 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11444 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11445 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11446 ;;Total ram usage:        2 bytes
 11447 ;; Hardware stack levels used: 1
 11448 ;; Hardware stack levels required when called: 4
 11449 ;; This function calls:
 11450 ;;		Nothing
 11451 ;; This function is called by:
 11452 ;;		_FRT_GetMicros
 11453 ;; This function uses a non-reentrant model
 11454 ;;
 11455                           
 11456  0A66                     _TMR0_ReadTimer:	
 11457                           ;psect for function _TMR0_ReadTimer
 11458                           
 11459  0A66                     l3666:	
 11460                           ;incstack = 0
 11461                           ; Regs used in _TMR0_ReadTimer: [wreg]
 11462                           
 11463                           
 11464                           ;tmr0.c: 64:     uint8_t readVal;;tmr0.c: 67:     readVal = TMR0L;
 11465  0A66  0020               	movlb	0	; select bank0
 11466  0A67  0815               	movf	21,w	;volatile
 11467  0A68  00A0               	movwf	??_TMR0_ReadTimer
 11468  0A69  0820               	movf	??_TMR0_ReadTimer,w
 11469  0A6A  00A1               	movwf	TMR0_ReadTimer@readVal
 11470                           
 11471                           ;tmr0.c: 69:     return readVal;
 11472  0A6B  0821               	movf	TMR0_ReadTimer@readVal,w
 11473  0A6C                     l291:
 11474  0A6C  0008               	return
 11475  0A6D                     __end_of_TMR0_ReadTimer:
 11476                           
 11477                           	psect	text39
 11478  0002                     __ptext39:	
 11479 ;; *************** function _TMR0_GetCallBackNum *****************
 11480 ;; Defined at:
 11481 ;;		line 130 in file "tmr0.c"
 11482 ;; Parameters:    Size  Location     Type
 11483 ;;		None
 11484 ;; Auto vars:     Size  Location     Type
 11485 ;;		None
 11486 ;; Return value:  Size  Location     Type
 11487 ;;                  1    wreg      unsigned char 
 11488 ;; Registers used:
 11489 ;;		wreg
 11490 ;; Tracked objects:
 11491 ;;		On entry : 0/0
 11492 ;;		On exit  : 0/0
 11493 ;;		Unchanged: 0/0
 11494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11499 ;;Total ram usage:        0 bytes
 11500 ;; Hardware stack levels used: 1
 11501 ;; Hardware stack levels required when called: 4
 11502 ;; This function calls:
 11503 ;;		Nothing
 11504 ;; This function is called by:
 11505 ;;		_FRT_GetMicros
 11506 ;; This function uses a non-reentrant model
 11507 ;;
 11508                           
 11509  0002                     _TMR0_GetCallBackNum:	
 11510                           ;psect for function _TMR0_GetCallBackNum
 11511                           
 11512  0002                     l3678:	
 11513                           ;incstack = 0
 11514                           ; Regs used in _TMR0_GetCallBackNum: [wreg]
 11515                           
 11516                           
 11517                           ;tmr0.c: 131:     return CountCallBack;
 11518  0002  087D               	movf	_CountCallBack,w	;volatile
 11519  0003                     l313:
 11520  0003  0008               	return
 11521  0004                     __end_of_TMR0_GetCallBackNum:
 11522                           
 11523                           	psect	text40
 11524  03DA                     __ptext40:	
 11525 ;; *************** function _JSN_Sensor_Init *****************
 11526 ;; Defined at:
 11527 ;;		line 32 in file "JSN_Sensor.c"
 11528 ;; Parameters:    Size  Location     Type
 11529 ;;  Sensor          1    wreg     PTR struct .
 11530 ;;		 -> NULL(0), Sens3(6), Sens2(6), Sens1(6), 
 11531 ;;  trigPin         1    2[BANK1 ] enum E7144
 11532 ;;  echoPin         1    3[BANK1 ] enum E7144
 11533 ;; Auto vars:     Size  Location     Type
 11534 ;;  Sensor          1    6[BANK1 ] PTR struct .
 11535 ;;		 -> NULL(0), Sens3(6), Sens2(6), Sens1(6), 
 11536 ;; Return value:  Size  Location     Type
 11537 ;;                  1    wreg      unsigned char 
 11538 ;; Registers used:
 11539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11540 ;; Tracked objects:
 11541 ;;		On entry : 0/0
 11542 ;;		On exit  : 0/0
 11543 ;;		Unchanged: 0/0
 11544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11545 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11546 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11547 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11548 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11549 ;;Total ram usage:        5 bytes
 11550 ;; Hardware stack levels used: 1
 11551 ;; Hardware stack levels required when called: 13
 11552 ;; This function calls:
 11553 ;;		_SetPin
 11554 ;;		_WritePin
 11555 ;;		_printf
 11556 ;; This function is called by:
 11557 ;;		_main
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561  03DA                     _JSN_Sensor_Init:	
 11562                           ;psect for function _JSN_Sensor_Init
 11563                           
 11564                           
 11565                           ;incstack = 0
 11566                           ; Regs used in _JSN_Sensor_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11567                           ;JSN_Sensor_Init@Sensor stored from wreg
 11568  03DA  0021               	movlb	1	; select bank1
 11569  03DB  00E1               	movwf	JSN_Sensor_Init@Sensor^(0+128)
 11570  03DC                     l4040:
 11571                           
 11572                           ;JSN_Sensor.c: 39:     switch (echoPin) {
 11573  03DC  2BEF               	goto	l4050
 11574  03DD                     l24:	
 11575                           ;JSN_Sensor.c: 42:         case C3:
 11576                           
 11577  03DD                     l4042:
 11578                           
 11579                           ;JSN_Sensor.c: 44:             SetPin(echoPin, 1);
 11580  03DD  0020               	movlb	0	; select bank0
 11581  03DE  01A0               	clrf	SetPin@io
 11582  03DF  0AA0               	incf	SetPin@io,f
 11583  03E0  0021               	movlb	1	; select bank1
 11584  03E1  085E               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 11585  03E2  3183  231F  3183   	fcall	_SetPin
 11586                           
 11587                           ;JSN_Sensor.c: 45:             break;
 11588  03E5  2C1D               	goto	l4060
 11589  03E6                     l4044:
 11590                           
 11591                           ;JSN_Sensor.c: 47:             printf("ERROR: Invalid echoPin (must be [A2, A4, C3, C5])
      +                          ");
 11592  03E6  303A               	movlw	low (STR_1| (0+32768))
 11593  03E7  0020               	movlb	0	; select bank0
 11594  03E8  00EC               	movwf	printf@fmt
 11595  03E9  3090               	movlw	high (STR_1| (0+32768))
 11596  03EA  00ED               	movwf	printf@fmt+1
 11597  03EB  318B  23C0  3183   	fcall	_printf
 11598  03EE  2C75               	goto	l28
 11599  03EF                     l4050:
 11600  03EF  085E               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 11601  03F0  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11602  03F1  01E0               	clrf	(??_JSN_Sensor_Init^(0+128)+1)
 11603                           
 11604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11605                           ; Switch size 1, requested type "simple"
 11606                           ; Number of cases is 1, Range of values is 0 to 0
 11607                           ; switch strategies available:
 11608                           ; Name         Instructions Cycles
 11609                           ; simple_byte            4     3 (average)
 11610                           ; direct_byte            8     6 (fixed)
 11611                           ; jumptable            260     6 (fixed)
 11612                           ;	Chosen strategy is simple_byte
 11613  03F2  0860               	movf	(??_JSN_Sensor_Init+1)^(0+128),w
 11614  03F3  3A00               	xorlw	0	; case 0
 11615  03F4  1903               	skipnz
 11616  03F5  2BF7               	goto	l4596
 11617  03F6  2BE6               	goto	l4044
 11618  03F7                     l4596:
 11619                           
 11620                           ; Switch size 1, requested type "simple"
 11621                           ; Number of cases is 4, Range of values is 1 to 11
 11622                           ; switch strategies available:
 11623                           ; Name         Instructions Cycles
 11624                           ; simple_byte           13     7 (average)
 11625                           ; direct_byte           31     9 (fixed)
 11626                           ; jumptable            263     9 (fixed)
 11627                           ;	Chosen strategy is simple_byte
 11628  03F7  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11629  03F8  3A01               	xorlw	1	; case 1
 11630  03F9  1903               	skipnz
 11631  03FA  2BDD               	goto	l4042
 11632  03FB  3A02               	xorlw	2	; case 3
 11633  03FC  1903               	skipnz
 11634  03FD  2BDD               	goto	l4042
 11635  03FE  3A06               	xorlw	6	; case 5
 11636  03FF  1903               	skipnz
 11637  0400  2BDD               	goto	l4042
 11638  0401  3A0E               	xorlw	14	; case 11
 11639  0402  1903               	skipnz
 11640  0403  2BDD               	goto	l24
 11641  0404  2BE6               	goto	l4044
 11642  0405                     l33:	
 11643                           ;JSN_Sensor.c: 56:         case C7:
 11644                           
 11645  0405                     l4052:
 11646                           
 11647                           ;JSN_Sensor.c: 66:             SetPin(trigPin, 0);
 11648  0405  0020               	movlb	0	; select bank0
 11649  0406  01A0               	clrf	SetPin@io
 11650  0407  0021               	movlb	1	; select bank1
 11651  0408  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 11652  0409  3183  231F  3183   	fcall	_SetPin
 11653                           
 11654                           ;JSN_Sensor.c: 67:             WritePin(trigPin, 0);
 11655  040C  0020               	movlb	0	; select bank0
 11656  040D  01A0               	clrf	WritePin@val
 11657  040E  0021               	movlb	1	; select bank1
 11658  040F  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 11659  0410  3182  2264  3183   	fcall	_WritePin
 11660                           
 11661                           ;JSN_Sensor.c: 68:             break;
 11662  0413  2C4F               	goto	l4062
 11663  0414                     l4054:
 11664                           
 11665                           ;JSN_Sensor.c: 70:             printf("ERROR: Invalid trigPin (must NOT be [A2, A3, A4, 
      +                          C3, C5])");
 11666  0414  3000               	movlw	low (STR_2| (0+32768))
 11667  0415  0020               	movlb	0	; select bank0
 11668  0416  00EC               	movwf	printf@fmt
 11669  0417  3090               	movlw	high (STR_2| (0+32768))
 11670  0418  00ED               	movwf	printf@fmt+1
 11671  0419  318B  23C0  3183   	fcall	_printf
 11672  041C  2C75               	goto	l28
 11673  041D                     l4060:
 11674  041D  0021               	movlb	1	; select bank1
 11675  041E  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 11676  041F  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11677  0420  01E0               	clrf	(??_JSN_Sensor_Init^(0+128)+1)
 11678                           
 11679                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11680                           ; Switch size 1, requested type "simple"
 11681                           ; Number of cases is 1, Range of values is 0 to 0
 11682                           ; switch strategies available:
 11683                           ; Name         Instructions Cycles
 11684                           ; simple_byte            4     3 (average)
 11685                           ; direct_byte            8     6 (fixed)
 11686                           ; jumptable            260     6 (fixed)
 11687                           ;	Chosen strategy is simple_byte
 11688  0421  0860               	movf	(??_JSN_Sensor_Init+1)^(0+128),w
 11689  0422  3A00               	xorlw	0	; case 0
 11690  0423  1903               	skipnz
 11691  0424  2C26               	goto	l4598
 11692  0425  2C14               	goto	l4054
 11693  0426                     l4598:
 11694                           
 11695                           ; Switch size 1, requested type "simple"
 11696                           ; Number of cases is 13, Range of values is 0 to 17
 11697                           ; switch strategies available:
 11698                           ; Name         Instructions Cycles
 11699                           ; simple_byte           40    21 (average)
 11700                           ; direct_byte           42     6 (fixed)
 11701                           ; jumptable            260     6 (fixed)
 11702                           ;	Chosen strategy is simple_byte
 11703  0426  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11704  0427  3A00               	xorlw	0	; case 0
 11705  0428  1903               	skipnz
 11706  0429  2C05               	goto	l33
 11707  042A  3A04               	xorlw	4	; case 4
 11708  042B  1903               	skipnz
 11709  042C  2C05               	goto	l33
 11710  042D  3A02               	xorlw	2	; case 6
 11711  042E  1903               	skipnz
 11712  042F  2C05               	goto	l33
 11713  0430  3A01               	xorlw	1	; case 7
 11714  0431  1903               	skipnz
 11715  0432  2C05               	goto	l4052
 11716  0433  3A0F               	xorlw	15	; case 8
 11717  0434  1903               	skipnz
 11718  0435  2C05               	goto	l4052
 11719  0436  3A01               	xorlw	1	; case 9
 11720  0437  1903               	skipnz
 11721  0438  2C05               	goto	l4052
 11722  0439  3A03               	xorlw	3	; case 10
 11723  043A  1903               	skipnz
 11724  043B  2C05               	goto	l4052
 11725  043C  3A06               	xorlw	6	; case 12
 11726  043D  1903               	skipnz
 11727  043E  2C05               	goto	l4052
 11728  043F  3A01               	xorlw	1	; case 13
 11729  0440  1903               	skipnz
 11730  0441  2C05               	goto	l4052
 11731  0442  3A03               	xorlw	3	; case 14
 11732  0443  1903               	skipnz
 11733  0444  2C05               	goto	l4052
 11734  0445  3A01               	xorlw	1	; case 15
 11735  0446  1903               	skipnz
 11736  0447  2C05               	goto	l4052
 11737  0448  3A1F               	xorlw	31	; case 16
 11738  0449  1903               	skipnz
 11739  044A  2C05               	goto	l4052
 11740  044B  3A01               	xorlw	1	; case 17
 11741  044C  1903               	skipnz
 11742  044D  2C05               	goto	l4052
 11743  044E  2C14               	goto	l4054
 11744  044F                     l4062:
 11745                           
 11746                           ;JSN_Sensor.c: 75:     Sensor->distance = 0;
 11747  044F  0021               	movlb	1	; select bank1
 11748  0450  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11749  0451  3E02               	addlw	2
 11750  0452  0086               	movwf	6
 11751  0453  3001               	movlw	1	; select bank2/3
 11752  0454  0087               	movwf	7
 11753  0455  3000               	movlw	0
 11754  0456  3FC0               	movwi [0]fsr1
 11755  0457  3FC1               	movwi [1]fsr1
 11756  0458                     l4064:
 11757                           
 11758                           ;JSN_Sensor.c: 76:     Sensor->echoHighTime = 0;
 11759  0458  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11760  0459  0086               	movwf	6
 11761  045A  3001               	movlw	1	; select bank2/3
 11762  045B  0087               	movwf	7
 11763  045C  3000               	movlw	0
 11764  045D  3FC0               	movwi [0]fsr1
 11765  045E  3FC1               	movwi [1]fsr1
 11766  045F                     l4066:
 11767                           
 11768                           ;JSN_Sensor.c: 77:     Sensor->echoPin = echoPin;
 11769  045F  085E               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 11770  0460  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11771  0461  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11772  0462  3E05               	addlw	5
 11773  0463  0086               	movwf	6
 11774  0464  3001               	movlw	1	; select bank2/3
 11775  0465  0087               	movwf	7
 11776  0466  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11777  0467  0081               	movwf	1
 11778  0468                     l4068:
 11779                           
 11780                           ;JSN_Sensor.c: 78:     Sensor->trigPin = trigPin;
 11781  0468  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 11782  0469  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11783  046A  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11784  046B  3E04               	addlw	4
 11785  046C  0086               	movwf	6
 11786  046D  3001               	movlw	1	; select bank2/3
 11787  046E  0087               	movwf	7
 11788  046F  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11789  0470  0081               	movwf	1
 11790  0471                     l4070:
 11791                           
 11792                           ;JSN_Sensor.c: 80:     lastTrig = Sensor;
 11793  0471  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11794  0472  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11795  0473  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11796  0474  00DA               	movwf	_lastTrig^(0+128)
 11797  0475                     l28:
 11798  0475  0008               	return
 11799  0476                     __end_of_JSN_Sensor_Init:
 11800                           
 11801                           	psect	text41
 11802  0BC0                     __ptext41:	
 11803 ;; *************** function _printf *****************
 11804 ;; Defined at:
 11805 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\printf.c"
 11806 ;; Parameters:    Size  Location     Type
 11807 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
 11808 ;;		 -> STR_3(3), STR_2(58), STR_1(50), 
 11809 ;; Auto vars:     Size  Location     Type
 11810 ;;  ret             2    0        int 
 11811 ;;  ap              1    1[BANK1 ] PTR void [1]
 11812 ;;		 -> ?_printf(2), 
 11813 ;; Return value:  Size  Location     Type
 11814 ;;                  2   76[BANK0 ] int 
 11815 ;; Registers used:
 11816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11817 ;; Tracked objects:
 11818 ;;		On entry : 0/0
 11819 ;;		On exit  : 0/0
 11820 ;;		Unchanged: 0/0
 11821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11822 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11823 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11824 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11825 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11826 ;;Total ram usage:        6 bytes
 11827 ;; Hardware stack levels used: 1
 11828 ;; Hardware stack levels required when called: 12
 11829 ;; This function calls:
 11830 ;;		_vfprintf
 11831 ;; This function is called by:
 11832 ;;		_JSN_Sensor_Init
 11833 ;;		_main
 11834 ;; This function uses a non-reentrant model
 11835 ;;
 11836                           
 11837  0BC0                     _printf:	
 11838                           ;psect for function _printf
 11839                           
 11840  0BC0                     l3820:	
 11841                           ;incstack = 0
 11842                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11843                           
 11844  0BC0  306E               	movlw	(low ((?_printf| 0+2)))& (0+255)
 11845  0BC1  0021               	movlb	1	; select bank1
 11846  0BC2  00DB               	movwf	??_printf^(0+128)
 11847  0BC3  085B               	movf	??_printf^(0+128),w
 11848  0BC4  00DC               	movwf	printf@ap^(0+128)
 11849  0BC5                     l3822:
 11850  0BC5  0020               	movlb	0	; select bank0
 11851  0BC6  086D               	movf	printf@fmt+1,w
 11852  0BC7  00E5               	movwf	vfprintf@fmt+1
 11853  0BC8  086C               	movf	printf@fmt,w
 11854  0BC9  00E4               	movwf	vfprintf@fmt
 11855  0BCA  30DC               	movlw	(low (printf@ap| 0))& (0+255)
 11856  0BCB  0021               	movlb	1	; select bank1
 11857  0BCC  00DB               	movwf	??_printf^(0+128)
 11858  0BCD  085B               	movf	??_printf^(0+128),w
 11859  0BCE  0020               	movlb	0	; select bank0
 11860  0BCF  00E6               	movwf	vfprintf@ap
 11861  0BD0  3000               	movlw	0
 11862  0BD1  318D  25A6  318B   	fcall	_vfprintf
 11863  0BD4                     l1615:
 11864  0BD4  0008               	return
 11865  0BD5                     __end_of_printf:
 11866                           
 11867                           	psect	text42
 11868  0DA6                     __ptext42:	
 11869 ;; *************** function _vfprintf *****************
 11870 ;; Defined at:
 11871 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11872 ;; Parameters:    Size  Location     Type
 11873 ;;  fp              1    wreg     PTR struct _IO_FILE
 11874 ;;		 -> NULL(0), 
 11875 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
 11876 ;;		 -> STR_3(3), STR_2(58), STR_1(50), 
 11877 ;;  ap              1   70[BANK0 ] PTR PTR void 
 11878 ;;		 -> printf@ap(1), 
 11879 ;; Auto vars:     Size  Location     Type
 11880 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
 11881 ;;		 -> NULL(0), 
 11882 ;;  cfmt            2   74[BANK0 ] PTR unsigned char 
 11883 ;;		 -> STR_3(3), STR_2(58), STR_1(50), 
 11884 ;; Return value:  Size  Location     Type
 11885 ;;                  2   68[BANK0 ] int 
 11886 ;; Registers used:
 11887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11888 ;; Tracked objects:
 11889 ;;		On entry : 0/0
 11890 ;;		On exit  : 0/0
 11891 ;;		Unchanged: 0/0
 11892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11893 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11894 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11895 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11896 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11897 ;;Total ram usage:        8 bytes
 11898 ;; Hardware stack levels used: 1
 11899 ;; Hardware stack levels required when called: 11
 11900 ;; This function calls:
 11901 ;;		_vfpfcnvrt
 11902 ;; This function is called by:
 11903 ;;		_printf
 11904 ;; This function uses a non-reentrant model
 11905 ;;
 11906                           
 11907  0DA6                     _vfprintf:	
 11908                           ;psect for function _vfprintf
 11909                           
 11910                           
 11911                           ;incstack = 0
 11912                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11913                           ;vfprintf@fp stored from wreg
 11914  0DA6  0020               	movlb	0	; select bank0
 11915  0DA7  00E9               	movwf	vfprintf@fp
 11916  0DA8                     l3714:
 11917                           
 11918                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 11919  0DA8  0865               	movf	vfprintf@fmt+1,w
 11920  0DA9  00EB               	movwf	vfprintf@cfmt+1
 11921  0DAA  0864               	movf	vfprintf@fmt,w
 11922  0DAB  00EA               	movwf	vfprintf@cfmt
 11923  0DAC                     l3716:
 11924                           
 11925                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 11926  0DAC  0021               	movlb	1	; select bank1
 11927  0DAD  01A0               	clrf	_nout^(0+128)
 11928  0DAE  01A1               	clrf	(_nout+1)^(0+128)
 11929                           
 11930                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11931  0DAF  2DC4               	goto	l3720
 11932  0DB0                     l3718:
 11933                           
 11934                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 11935  0DB0  306A               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 11936  0DB1  00E7               	movwf	??_vfprintf
 11937  0DB2  0867               	movf	??_vfprintf,w
 11938  0DB3  00D4               	movwf	vfpfcnvrt@fmt
 11939  0DB4  0866               	movf	vfprintf@ap,w
 11940  0DB5  00E8               	movwf	??_vfprintf+1
 11941  0DB6  0868               	movf	??_vfprintf+1,w
 11942  0DB7  00D5               	movwf	vfpfcnvrt@ap
 11943  0DB8  0869               	movf	vfprintf@fp,w
 11944  0DB9  3181  21A1  318D   	fcall	_vfpfcnvrt
 11945  0DBC  0020               	movlb	0	; select bank0
 11946  0DBD  0854               	movf	?_vfpfcnvrt,w
 11947  0DBE  0021               	movlb	1	; select bank1
 11948  0DBF  07A0               	addwf	_nout^(0+128),f
 11949  0DC0  0020               	movlb	0	; select bank0
 11950  0DC1  0855               	movf	?_vfpfcnvrt+1,w
 11951  0DC2  0021               	movlb	1	; select bank1
 11952  0DC3  3DA1               	addwfc	(_nout+1)^(0+128),f
 11953  0DC4                     l3720:
 11954                           
 11955                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11956  0DC4  0020               	movlb	0	; select bank0
 11957  0DC5  086A               	movf	vfprintf@cfmt,w
 11958  0DC6  0084               	movwf	4
 11959  0DC7  086B               	movf	vfprintf@cfmt+1,w
 11960  0DC8  0085               	movwf	5
 11961  0DC9  0012               	moviw fsr0++
 11962  0DCA  1D03               	btfss	3,2
 11963  0DCB  2DCD               	goto	u1271
 11964  0DCC  2DCE               	goto	u1270
 11965  0DCD                     u1271:
 11966  0DCD  2DB0               	goto	l3718
 11967  0DCE                     u1270:
 11968  0DCE                     l3722:
 11969                           
 11970                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 11971  0DCE  0021               	movlb	1	; select bank1
 11972  0DCF  0821               	movf	(_nout+1)^(0+128),w
 11973  0DD0  0020               	movlb	0	; select bank0
 11974  0DD1  00E5               	movwf	?_vfprintf+1
 11975  0DD2  0021               	movlb	1	; select bank1
 11976  0DD3  0820               	movf	_nout^(0+128),w
 11977  0DD4  0020               	movlb	0	; select bank0
 11978  0DD5  00E4               	movwf	?_vfprintf
 11979  0DD6                     l1672:
 11980  0DD6  0008               	return
 11981  0DD7                     __end_of_vfprintf:
 11982                           
 11983                           	psect	text43
 11984  01A1                     __ptext43:	
 11985 ;; *************** function _vfpfcnvrt *****************
 11986 ;; Defined at:
 11987 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11988 ;; Parameters:    Size  Location     Type
 11989 ;;  fp              1    wreg     PTR struct _IO_FILE
 11990 ;;		 -> NULL(0), 
 11991 ;;  fmt             1   52[BANK0 ] PTR PTR unsigned char 
 11992 ;;		 -> vfprintf@cfmt(2), 
 11993 ;;  ap              1   53[BANK0 ] PTR PTR void 
 11994 ;;		 -> printf@ap(1), 
 11995 ;; Auto vars:     Size  Location     Type
 11996 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
 11997 ;;		 -> NULL(0), 
 11998 ;;  llu             8   59[BANK0 ] unsigned long long 
 11999 ;;  ll              8    0        long long 
 12000 ;;  f               4    0        long long 
 12001 ;;  ct              3    0        unsigned char [3]
 12002 ;;  vp              2    0        PTR void 
 12003 ;;  i               2    0        int 
 12004 ;;  done            2    0        int 
 12005 ;;  cp              2    0        PTR unsigned char 
 12006 ;;  c               1    0        unsigned char 
 12007 ;; Return value:  Size  Location     Type
 12008 ;;                  2   52[BANK0 ] int 
 12009 ;; Registers used:
 12010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12011 ;; Tracked objects:
 12012 ;;		On entry : 0/0
 12013 ;;		On exit  : 0/0
 12014 ;;		Unchanged: 0/0
 12015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12016 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12017 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12018 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12019 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12020 ;;Total ram usage:       16 bytes
 12021 ;; Hardware stack levels used: 1
 12022 ;; Hardware stack levels required when called: 10
 12023 ;; This function calls:
 12024 ;;		_fputc
 12025 ;;		_utoa
 12026 ;; This function is called by:
 12027 ;;		_vfprintf
 12028 ;; This function uses a non-reentrant model
 12029 ;;
 12030                           
 12031  01A1                     _vfpfcnvrt:	
 12032                           ;psect for function _vfpfcnvrt
 12033                           
 12034                           
 12035                           ;incstack = 0
 12036                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12037                           ;vfpfcnvrt@fp stored from wreg
 12038  01A1  0020               	movlb	0	; select bank0
 12039  01A2  00E3               	movwf	vfpfcnvrt@fp
 12040  01A3                     l3338:
 12041                           
 12042                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 12043  01A3  0854               	movf	vfpfcnvrt@fmt,w
 12044  01A4  0086               	movwf	6
 12045  01A5  0187               	clrf	7
 12046  01A6  3F40               	moviw [0]fsr1
 12047  01A7  00D6               	movwf	??_vfpfcnvrt
 12048  01A8  3F41               	moviw [1]fsr1
 12049  01A9  00D7               	movwf	??_vfpfcnvrt+1
 12050  01AA  0856               	movf	??_vfpfcnvrt,w
 12051  01AB  0084               	movwf	4
 12052  01AC  0857               	movf	??_vfpfcnvrt+1,w
 12053  01AD  0085               	movwf	5
 12054  01AE  0012               	moviw fsr0++
 12055  01AF  3A25               	xorlw	37
 12056  01B0  1D03               	btfss	3,2
 12057  01B1  29B3               	goto	u1181
 12058  01B2  29B4               	goto	u1180
 12059  01B3                     u1181:
 12060  01B3  2A40               	goto	l3372
 12061  01B4                     u1180:
 12062  01B4                     l3340:
 12063                           
 12064                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 12065  01B4  0854               	movf	vfpfcnvrt@fmt,w
 12066  01B5  0086               	movwf	6
 12067  01B6  0187               	clrf	7
 12068  01B7  3001               	movlw	1
 12069  01B8  0781               	addwf	1,f
 12070  01B9  3141               	addfsr 1,1
 12071  01BA  1803               	skipnc
 12072  01BB  0A81               	incf	1,f
 12073  01BC                     l3342:
 12074                           
 12075                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 12076  01BC  0021               	movlb	1	; select bank1
 12077  01BD  01A2               	clrf	_width^(0+128)
 12078  01BE  01A3               	clrf	(_width+1)^(0+128)
 12079  01BF  01A6               	clrf	_flags^(0+128)
 12080  01C0  01A7               	clrf	(_flags+1)^(0+128)
 12081  01C1                     l3344:
 12082                           
 12083                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 12084  01C1  30FF               	movlw	255
 12085  01C2  00A4               	movwf	_prec^(0+128)
 12086  01C3  30FF               	movlw	255
 12087  01C4  00A5               	movwf	(_prec^(0+128)+1)
 12088  01C5                     l3346:
 12089                           
 12090                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
 12091  01C5  0020               	movlb	0	; select bank0
 12092  01C6  0854               	movf	vfpfcnvrt@fmt,w
 12093  01C7  0086               	movwf	6
 12094  01C8  0187               	clrf	7
 12095  01C9  3F40               	moviw [0]fsr1
 12096  01CA  00D6               	movwf	??_vfpfcnvrt
 12097  01CB  3F41               	moviw [1]fsr1
 12098  01CC  00D7               	movwf	??_vfpfcnvrt+1
 12099  01CD  0856               	movf	??_vfpfcnvrt,w
 12100  01CE  0084               	movwf	4
 12101  01CF  0857               	movf	??_vfpfcnvrt+1,w
 12102  01D0  0085               	movwf	5
 12103  01D1  0012               	moviw fsr0++
 12104  01D2  3A75               	xorlw	117
 12105  01D3  1D03               	btfss	3,2
 12106  01D4  29D6               	goto	u1191
 12107  01D5  29D7               	goto	u1190
 12108  01D6                     u1191:
 12109  01D6  2A0B               	goto	l3356
 12110  01D7                     u1190:
 12111  01D7                     l3348:
 12112                           
 12113                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
 12114  01D7  0854               	movf	vfpfcnvrt@fmt,w
 12115  01D8  0086               	movwf	6
 12116  01D9  0187               	clrf	7
 12117  01DA  3001               	movlw	1
 12118  01DB  0781               	addwf	1,f
 12119  01DC  3141               	addfsr 1,1
 12120  01DD  1803               	skipnc
 12121  01DE  0A81               	incf	1,f
 12122  01DF                     l3350:
 12123                           
 12124                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 12125  01DF  0855               	movf	vfpfcnvrt@ap,w
 12126  01E0  0086               	movwf	6
 12127  01E1  0187               	clrf	7
 12128  01E2  0801               	movf	1,w
 12129  01E3  0084               	movwf	4
 12130  01E4  0185               	clrf	5
 12131  01E5  3002               	movlw	2
 12132  01E6  0781               	addwf	1,f
 12133  01E7  3F00               	moviw [0]fsr0
 12134  01E8  00DB               	movwf	vfpfcnvrt@llu
 12135  01E9  3F01               	moviw [1]fsr0
 12136  01EA  00DC               	movwf	vfpfcnvrt@llu+1
 12137  01EB  01DD               	clrf	vfpfcnvrt@llu+2
 12138  01EC  01DE               	clrf	vfpfcnvrt@llu+3
 12139  01ED  01DF               	clrf	vfpfcnvrt@llu+4
 12140  01EE  01E0               	clrf	vfpfcnvrt@llu+5
 12141  01EF  01E1               	clrf	vfpfcnvrt@llu+6
 12142  01F0  01E2               	clrf	vfpfcnvrt@llu+7
 12143  01F1                     l3352:
 12144                           
 12145                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
 12146  01F1  085B               	movf	vfpfcnvrt@llu,w
 12147  01F2  00BC               	movwf	utoa@d
 12148  01F3  085C               	movf	vfpfcnvrt@llu+1,w
 12149  01F4  00BD               	movwf	utoa@d+1
 12150  01F5  085D               	movf	vfpfcnvrt@llu+2,w
 12151  01F6  00BE               	movwf	utoa@d+2
 12152  01F7  085E               	movf	vfpfcnvrt@llu+3,w
 12153  01F8  00BF               	movwf	utoa@d+3
 12154  01F9  085F               	movf	vfpfcnvrt@llu+4,w
 12155  01FA  00C0               	movwf	utoa@d+4
 12156  01FB  0860               	movf	vfpfcnvrt@llu+5,w
 12157  01FC  00C1               	movwf	utoa@d+5
 12158  01FD  0861               	movf	vfpfcnvrt@llu+6,w
 12159  01FE  00C2               	movwf	utoa@d+6
 12160  01FF  0862               	movf	vfpfcnvrt@llu+7,w
 12161  0200  00C3               	movwf	utoa@d+7
 12162  0201  0863               	movf	vfpfcnvrt@fp,w
 12163  0202  3180  20B2  3181   	fcall	_utoa
 12164  0205  0020               	movlb	0	; select bank0
 12165  0206  083D               	movf	?_utoa+1,w
 12166  0207  00D5               	movwf	?_vfpfcnvrt+1
 12167  0208  083C               	movf	?_utoa,w
 12168  0209  00D4               	movwf	?_vfpfcnvrt
 12169  020A  2A63               	goto	l1665
 12170  020B                     l3356:
 12171                           
 12172                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 12173  020B  0854               	movf	vfpfcnvrt@fmt,w
 12174  020C  0086               	movwf	6
 12175  020D  0187               	clrf	7
 12176  020E  3F40               	moviw [0]fsr1
 12177  020F  00D6               	movwf	??_vfpfcnvrt
 12178  0210  3F41               	moviw [1]fsr1
 12179  0211  00D7               	movwf	??_vfpfcnvrt+1
 12180  0212  0856               	movf	??_vfpfcnvrt,w
 12181  0213  0084               	movwf	4
 12182  0214  0857               	movf	??_vfpfcnvrt+1,w
 12183  0215  0085               	movwf	5
 12184  0216  0012               	moviw fsr0++
 12185  0217  3A25               	xorlw	37
 12186  0218  1D03               	btfss	3,2
 12187  0219  2A1B               	goto	u1201
 12188  021A  2A1C               	goto	u1200
 12189  021B                     u1201:
 12190  021B  2A35               	goto	l3366
 12191  021C                     u1200:
 12192  021C                     l3358:
 12193                           
 12194                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 12195  021C  0854               	movf	vfpfcnvrt@fmt,w
 12196  021D  0086               	movwf	6
 12197  021E  0187               	clrf	7
 12198  021F  3001               	movlw	1
 12199  0220  0781               	addwf	1,f
 12200  0221  3141               	addfsr 1,1
 12201  0222  1803               	skipnc
 12202  0223  0A81               	incf	1,f
 12203  0224                     l3360:
 12204                           
 12205                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 12206  0224  3025               	movlw	37
 12207  0225  00A3               	movwf	fputc@c
 12208  0226  3000               	movlw	0
 12209  0227  00A4               	movwf	fputc@c+1
 12210  0228  0863               	movf	vfpfcnvrt@fp,w
 12211  0229  00D6               	movwf	??_vfpfcnvrt
 12212  022A  0856               	movf	??_vfpfcnvrt,w
 12213  022B  00A5               	movwf	fputc@fp
 12214  022C  318F  2777  3181   	fcall	_fputc
 12215  022F                     l3362:
 12216                           
 12217                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 12218  022F  3001               	movlw	1
 12219  0230  0020               	movlb	0	; select bank0
 12220  0231  00D4               	movwf	?_vfpfcnvrt
 12221  0232  3000               	movlw	0
 12222  0233  00D5               	movwf	?_vfpfcnvrt+1
 12223  0234  2A63               	goto	l1665
 12224  0235                     l3366:
 12225                           
 12226                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 12227  0235  0854               	movf	vfpfcnvrt@fmt,w
 12228  0236  0086               	movwf	6
 12229  0237  0187               	clrf	7
 12230  0238  3001               	movlw	1
 12231  0239  0781               	addwf	1,f
 12232  023A  3141               	addfsr 1,1
 12233  023B  1803               	skipnc
 12234  023C  0A81               	incf	1,f
 12235  023D                     l3368:
 12236                           
 12237                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 12238  023D  01D4               	clrf	?_vfpfcnvrt
 12239  023E  01D5               	clrf	?_vfpfcnvrt+1
 12240  023F  2A63               	goto	l1665
 12241  0240                     l3372:
 12242                           
 12243                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 12244  0240  0854               	movf	vfpfcnvrt@fmt,w
 12245  0241  0086               	movwf	6
 12246  0242  0187               	clrf	7
 12247  0243  3F40               	moviw [0]fsr1
 12248  0244  00D6               	movwf	??_vfpfcnvrt
 12249  0245  3F41               	moviw [1]fsr1
 12250  0246  00D7               	movwf	??_vfpfcnvrt+1
 12251  0247  0856               	movf	??_vfpfcnvrt,w
 12252  0248  0084               	movwf	4
 12253  0249  0857               	movf	??_vfpfcnvrt+1,w
 12254  024A  0085               	movwf	5
 12255  024B  0800               	movf	0,w	;code access
 12256  024C  00D8               	movwf	??_vfpfcnvrt+2
 12257  024D  01D9               	clrf	??_vfpfcnvrt+3
 12258  024E  0858               	movf	??_vfpfcnvrt+2,w
 12259  024F  00A3               	movwf	fputc@c
 12260  0250  0859               	movf	??_vfpfcnvrt+3,w
 12261  0251  00A4               	movwf	fputc@c+1
 12262  0252  0863               	movf	vfpfcnvrt@fp,w
 12263  0253  00DA               	movwf	??_vfpfcnvrt+4
 12264  0254  085A               	movf	??_vfpfcnvrt+4,w
 12265  0255  00A5               	movwf	fputc@fp
 12266  0256  318F  2777  3181   	fcall	_fputc
 12267  0259                     l3374:
 12268                           
 12269                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 12270  0259  0020               	movlb	0	; select bank0
 12271  025A  0854               	movf	vfpfcnvrt@fmt,w
 12272  025B  0086               	movwf	6
 12273  025C  0187               	clrf	7
 12274  025D  3001               	movlw	1
 12275  025E  0781               	addwf	1,f
 12276  025F  3141               	addfsr 1,1
 12277  0260  1803               	skipnc
 12278  0261  0A81               	incf	1,f
 12279  0262  2A2F               	goto	l3362
 12280  0263                     l1665:
 12281  0263  0008               	return
 12282  0264                     __end_of_vfpfcnvrt:
 12283                           
 12284                           	psect	text44
 12285  00B2                     __ptext44:	
 12286 ;; *************** function _utoa *****************
 12287 ;; Defined at:
 12288 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12289 ;; Parameters:    Size  Location     Type
 12290 ;;  fp              1    wreg     PTR struct _IO_FILE
 12291 ;;		 -> NULL(0), 
 12292 ;;  d               8   28[BANK0 ] unsigned long long 
 12293 ;; Auto vars:     Size  Location     Type
 12294 ;;  fp              1   39[BANK0 ] PTR struct _IO_FILE
 12295 ;;		 -> NULL(0), 
 12296 ;;  n               8   42[BANK0 ] unsigned long long 
 12297 ;;  i               2   50[BANK0 ] int 
 12298 ;;  w               2   40[BANK0 ] int 
 12299 ;;  p               2   37[BANK0 ] int 
 12300 ;; Return value:  Size  Location     Type
 12301 ;;                  2   28[BANK0 ] int 
 12302 ;; Registers used:
 12303 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12304 ;; Tracked objects:
 12305 ;;		On entry : 0/0
 12306 ;;		On exit  : 0/0
 12307 ;;		Unchanged: 0/0
 12308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12309 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12310 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12311 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12312 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12313 ;;Total ram usage:       24 bytes
 12314 ;; Hardware stack levels used: 1
 12315 ;; Hardware stack levels required when called: 9
 12316 ;; This function calls:
 12317 ;;		___lodiv
 12318 ;;		___lomod
 12319 ;;		_pad
 12320 ;; This function is called by:
 12321 ;;		_vfpfcnvrt
 12322 ;; This function uses a non-reentrant model
 12323 ;;
 12324                           
 12325  00B2                     _utoa:	
 12326                           ;psect for function _utoa
 12327                           
 12328                           
 12329                           ;incstack = 0
 12330                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12331                           ;utoa@fp stored from wreg
 12332  00B2  0020               	movlb	0	; select bank0
 12333  00B3  00C7               	movwf	utoa@fp
 12334  00B4                     l3270:
 12335                           
 12336                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
 12337  00B4  0021               	movlb	1	; select bank1
 12338  00B5  1BA5               	btfsc	(_prec+1)^(0+128),7
 12339  00B6  28B8               	goto	u1101
 12340  00B7  28B9               	goto	u1100
 12341  00B8                     u1101:
 12342  00B8  28BD               	goto	l1648
 12343  00B9                     u1100:
 12344  00B9                     l3272:
 12345                           
 12346                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
 12347  00B9  30FD               	movlw	253
 12348  00BA  05A6               	andwf	_flags^(0+128),f
 12349  00BB  30FF               	movlw	255
 12350  00BC  05A7               	andwf	(_flags+1)^(0+128),f
 12351  00BD                     l1648:	
 12352                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 623:     }
 12353                           
 12354                           
 12355                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
 12356  00BD  0825               	movf	(_prec+1)^(0+128),w
 12357  00BE  3A80               	xorlw	128
 12358  00BF  0020               	movlb	0	; select bank0
 12359  00C0  00C4               	movwf	??_utoa
 12360  00C1  3080               	movlw	128
 12361  00C2  0244               	subwf	??_utoa,w
 12362  00C3  1D03               	skipz
 12363  00C4  28C8               	goto	u1115
 12364  00C5  3001               	movlw	1
 12365  00C6  0021               	movlb	1	; select bank1
 12366  00C7  0224               	subwf	_prec^(0+128),w
 12367  00C8                     u1115:
 12368  00C8  1803               	skipnc
 12369  00C9  28CB               	goto	u1111
 12370  00CA  28CC               	goto	u1110
 12371  00CB                     u1111:
 12372  00CB  28D2               	goto	l3276
 12373  00CC                     u1110:
 12374  00CC                     l3274:
 12375  00CC  3001               	movlw	1
 12376  00CD  0020               	movlb	0	; select bank0
 12377  00CE  00C5               	movwf	utoa@p
 12378  00CF  3000               	movlw	0
 12379  00D0  00C6               	movwf	utoa@p+1
 12380  00D1  28DA               	goto	l1652
 12381  00D2                     l3276:
 12382  00D2  0021               	movlb	1	; select bank1
 12383  00D3  0825               	movf	(_prec+1)^(0+128),w
 12384  00D4  0020               	movlb	0	; select bank0
 12385  00D5  00C6               	movwf	utoa@p+1
 12386  00D6  0021               	movlb	1	; select bank1
 12387  00D7  0824               	movf	_prec^(0+128),w
 12388  00D8  0020               	movlb	0	; select bank0
 12389  00D9  00C5               	movwf	utoa@p
 12390  00DA                     l1652:
 12391                           
 12392                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
 12393  00DA  0021               	movlb	1	; select bank1
 12394  00DB  0823               	movf	(_width+1)^(0+128),w
 12395  00DC  0020               	movlb	0	; select bank0
 12396  00DD  00C9               	movwf	utoa@w+1
 12397  00DE  0021               	movlb	1	; select bank1
 12398  00DF  0822               	movf	_width^(0+128),w
 12399  00E0  0020               	movlb	0	; select bank0
 12400  00E1  00C8               	movwf	utoa@w
 12401  00E2                     l3278:
 12402                           
 12403                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 628:     n = d;
 12404  00E2  083C               	movf	utoa@d,w
 12405  00E3  00CA               	movwf	utoa@n
 12406  00E4  083D               	movf	utoa@d+1,w
 12407  00E5  00CB               	movwf	utoa@n+1
 12408  00E6  083E               	movf	utoa@d+2,w
 12409  00E7  00CC               	movwf	utoa@n+2
 12410  00E8  083F               	movf	utoa@d+3,w
 12411  00E9  00CD               	movwf	utoa@n+3
 12412  00EA  0840               	movf	utoa@d+4,w
 12413  00EB  00CE               	movwf	utoa@n+4
 12414  00EC  0841               	movf	utoa@d+5,w
 12415  00ED  00CF               	movwf	utoa@n+5
 12416  00EE  0842               	movf	utoa@d+6,w
 12417  00EF  00D0               	movwf	utoa@n+6
 12418  00F0  0843               	movf	utoa@d+7,w
 12419  00F1  00D1               	movwf	utoa@n+7
 12420                           
 12421                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
 12422  00F2  301F               	movlw	31
 12423  00F3  00D2               	movwf	utoa@i
 12424  00F4  3000               	movlw	0
 12425  00F5  00D3               	movwf	utoa@i+1
 12426  00F6                     l3280:
 12427                           
 12428                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
 12429  00F6  0023               	movlb	3	; select bank3
 12430  00F7  01BF               	clrf	(_dbuf^(0+384)+31)
 12431                           
 12432                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12433  00F8  295A               	goto	l3292
 12434  00F9                     l3282:
 12435                           
 12436                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 632:         --i;
 12437  00F9  30FF               	movlw	255
 12438  00FA  0020               	movlb	0	; select bank0
 12439  00FB  07D2               	addwf	utoa@i,f
 12440  00FC  30FF               	movlw	255
 12441  00FD  3DD3               	addwfc	utoa@i+1,f
 12442  00FE                     l3284:
 12443                           
 12444                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
 12445  00FE  300A               	movlw	10
 12446  00FF  00A0               	movwf	___lomod@divisor
 12447  0100  01A1               	clrf	___lomod@divisor+1
 12448  0101  01A2               	clrf	___lomod@divisor+2
 12449  0102  01A3               	clrf	___lomod@divisor+3
 12450  0103  01A4               	clrf	___lomod@divisor+4
 12451  0104  01A5               	clrf	___lomod@divisor+5
 12452  0105  01A6               	clrf	___lomod@divisor+6
 12453  0106  01A7               	clrf	___lomod@divisor+7
 12454  0107  084A               	movf	utoa@n,w
 12455  0108  00A8               	movwf	___lomod@dividend
 12456  0109  084B               	movf	utoa@n+1,w
 12457  010A  00A9               	movwf	___lomod@dividend+1
 12458  010B  084C               	movf	utoa@n+2,w
 12459  010C  00AA               	movwf	___lomod@dividend+2
 12460  010D  084D               	movf	utoa@n+3,w
 12461  010E  00AB               	movwf	___lomod@dividend+3
 12462  010F  084E               	movf	utoa@n+4,w
 12463  0110  00AC               	movwf	___lomod@dividend+4
 12464  0111  084F               	movf	utoa@n+5,w
 12465  0112  00AD               	movwf	___lomod@dividend+5
 12466  0113  0850               	movf	utoa@n+6,w
 12467  0114  00AE               	movwf	___lomod@dividend+6
 12468  0115  0851               	movf	utoa@n+7,w
 12469  0116  00AF               	movwf	___lomod@dividend+7
 12470  0117  3186  261D  3180   	fcall	___lomod
 12471  011A  0020               	movlb	0	; select bank0
 12472  011B  0820               	movf	?___lomod,w
 12473  011C  3E30               	addlw	48
 12474  011D  00C4               	movwf	??_utoa
 12475  011E  0852               	movf	utoa@i,w
 12476  011F  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12477  0120  0086               	movwf	6
 12478  0121  3001               	movlw	1	; select bank3/4
 12479  0122  0087               	movwf	7
 12480  0123  0844               	movf	??_utoa,w
 12481  0124  0081               	movwf	1
 12482  0125                     l3286:
 12483                           
 12484                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 634:         --p;
 12485  0125  30FF               	movlw	255
 12486  0126  07C5               	addwf	utoa@p,f
 12487  0127  30FF               	movlw	255
 12488  0128  3DC6               	addwfc	utoa@p+1,f
 12489  0129                     l3288:
 12490                           
 12491                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 635:         --w;
 12492  0129  30FF               	movlw	255
 12493  012A  07C8               	addwf	utoa@w,f
 12494  012B  30FF               	movlw	255
 12495  012C  3DC9               	addwfc	utoa@w+1,f
 12496  012D                     l3290:
 12497                           
 12498                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
 12499  012D  300A               	movlw	10
 12500  012E  00A0               	movwf	___lodiv@divisor
 12501  012F  01A1               	clrf	___lodiv@divisor+1
 12502  0130  01A2               	clrf	___lodiv@divisor+2
 12503  0131  01A3               	clrf	___lodiv@divisor+3
 12504  0132  01A4               	clrf	___lodiv@divisor+4
 12505  0133  01A5               	clrf	___lodiv@divisor+5
 12506  0134  01A6               	clrf	___lodiv@divisor+6
 12507  0135  01A7               	clrf	___lodiv@divisor+7
 12508  0136  084A               	movf	utoa@n,w
 12509  0137  00A8               	movwf	___lodiv@dividend
 12510  0138  084B               	movf	utoa@n+1,w
 12511  0139  00A9               	movwf	___lodiv@dividend+1
 12512  013A  084C               	movf	utoa@n+2,w
 12513  013B  00AA               	movwf	___lodiv@dividend+2
 12514  013C  084D               	movf	utoa@n+3,w
 12515  013D  00AB               	movwf	___lodiv@dividend+3
 12516  013E  084E               	movf	utoa@n+4,w
 12517  013F  00AC               	movwf	___lodiv@dividend+4
 12518  0140  084F               	movf	utoa@n+5,w
 12519  0141  00AD               	movwf	___lodiv@dividend+5
 12520  0142  0850               	movf	utoa@n+6,w
 12521  0143  00AE               	movwf	___lodiv@dividend+6
 12522  0144  0851               	movf	utoa@n+7,w
 12523  0145  00AF               	movwf	___lodiv@dividend+7
 12524  0146  3185  2599  3180   	fcall	___lodiv
 12525  0149  0020               	movlb	0	; select bank0
 12526  014A  0820               	movf	?___lodiv,w
 12527  014B  00CA               	movwf	utoa@n
 12528  014C  0821               	movf	?___lodiv+1,w
 12529  014D  00CB               	movwf	utoa@n+1
 12530  014E  0822               	movf	?___lodiv+2,w
 12531  014F  00CC               	movwf	utoa@n+2
 12532  0150  0823               	movf	?___lodiv+3,w
 12533  0151  00CD               	movwf	utoa@n+3
 12534  0152  0824               	movf	?___lodiv+4,w
 12535  0153  00CE               	movwf	utoa@n+4
 12536  0154  0825               	movf	?___lodiv+5,w
 12537  0155  00CF               	movwf	utoa@n+5
 12538  0156  0826               	movf	?___lodiv+6,w
 12539  0157  00D0               	movwf	utoa@n+6
 12540  0158  0827               	movf	?___lodiv+7,w
 12541  0159  00D1               	movwf	utoa@n+7
 12542  015A                     l3292:
 12543                           
 12544                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12545  015A  0020               	movlb	0	; select bank0
 12546  015B  0852               	movf	utoa@i,w
 12547  015C  0453               	iorwf	utoa@i+1,w
 12548  015D  1903               	btfsc	3,2
 12549  015E  2960               	goto	u1121
 12550  015F  2961               	goto	u1120
 12551  0160                     u1121:
 12552  0160  298D               	goto	l3302
 12553  0161                     u1120:
 12554  0161                     l3294:
 12555  0161  084A               	movf	utoa@n,w
 12556  0162  044B               	iorwf	utoa@n+1,w
 12557  0163  044C               	iorwf	utoa@n+2,w
 12558  0164  044D               	iorwf	utoa@n+3,w
 12559  0165  044E               	iorwf	utoa@n+4,w
 12560  0166  044F               	iorwf	utoa@n+5,w
 12561  0167  0450               	iorwf	utoa@n+6,w
 12562  0168  0451               	iorwf	utoa@n+7,w
 12563  0169  1D03               	skipz
 12564  016A  296C               	goto	u1131
 12565  016B  296D               	goto	u1130
 12566  016C                     u1131:
 12567  016C  28F9               	goto	l3282
 12568  016D                     u1130:
 12569  016D                     l3296:
 12570  016D  0846               	movf	utoa@p+1,w
 12571  016E  3A80               	xorlw	128
 12572  016F  00C4               	movwf	??_utoa
 12573  0170  3080               	movlw	128
 12574  0171  0244               	subwf	??_utoa,w
 12575  0172  1D03               	skipz
 12576  0173  2976               	goto	u1145
 12577  0174  3001               	movlw	1
 12578  0175  0245               	subwf	utoa@p,w
 12579  0176                     u1145:
 12580  0176  1803               	skipnc
 12581  0177  2979               	goto	u1141
 12582  0178  297A               	goto	u1140
 12583  0179                     u1141:
 12584  0179  28F9               	goto	l3282
 12585  017A                     u1140:
 12586  017A                     l3298:
 12587  017A  0020               	movlb	0	; select bank0
 12588  017B  0849               	movf	utoa@w+1,w
 12589  017C  3A80               	xorlw	128
 12590  017D  00C4               	movwf	??_utoa
 12591  017E  3080               	movlw	128
 12592  017F  0244               	subwf	??_utoa,w
 12593  0180  1D03               	skipz
 12594  0181  2984               	goto	u1155
 12595  0182  3001               	movlw	1
 12596  0183  0248               	subwf	utoa@w,w
 12597  0184                     u1155:
 12598  0184  1C03               	skipc
 12599  0185  2987               	goto	u1151
 12600  0186  2988               	goto	u1150
 12601  0187                     u1151:
 12602  0187  298D               	goto	l3302
 12603  0188                     u1150:
 12604  0188                     l3300:
 12605  0188  0021               	movlb	1	; select bank1
 12606  0189  18A6               	btfsc	_flags^(0+128),1
 12607  018A  298C               	goto	u1161
 12608  018B  298D               	goto	u1160
 12609  018C                     u1161:
 12610  018C  28F9               	goto	l3282
 12611  018D                     u1160:
 12612  018D                     l3302:
 12613                           
 12614                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
 12615  018D  0020               	movlb	0	; select bank0
 12616  018E  0852               	movf	utoa@i,w
 12617  018F  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12618  0190  00C4               	movwf	??_utoa
 12619  0191  0844               	movf	??_utoa,w
 12620  0192  00B3               	movwf	pad@buf
 12621  0193  0849               	movf	utoa@w+1,w
 12622  0194  00B5               	movwf	pad@p+1
 12623  0195  0848               	movf	utoa@w,w
 12624  0196  00B4               	movwf	pad@p
 12625  0197  0847               	movf	utoa@fp,w
 12626  0198  3187  2742  3180   	fcall	_pad
 12627  019B  0020               	movlb	0	; select bank0
 12628  019C  0834               	movf	?_pad+1,w
 12629  019D  00BD               	movwf	?_utoa+1
 12630  019E  0833               	movf	?_pad,w
 12631  019F  00BC               	movwf	?_utoa
 12632  01A0                     l1660:
 12633  01A0  0008               	return
 12634  01A1                     __end_of_utoa:
 12635                           
 12636                           	psect	text45
 12637  0742                     __ptext45:	
 12638 ;; *************** function _pad *****************
 12639 ;; Defined at:
 12640 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12641 ;; Parameters:    Size  Location     Type
 12642 ;;  fp              1    wreg     PTR struct _IO_FILE
 12643 ;;		 -> NULL(0), 
 12644 ;;  buf             1   19[BANK0 ] PTR unsigned char 
 12645 ;;		 -> dbuf(32), 
 12646 ;;  p               2   20[BANK0 ] int 
 12647 ;; Auto vars:     Size  Location     Type
 12648 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 12649 ;;		 -> NULL(0), 
 12650 ;;  w               2   25[BANK0 ] int 
 12651 ;;  i               2   23[BANK0 ] int 
 12652 ;; Return value:  Size  Location     Type
 12653 ;;                  2   19[BANK0 ] int 
 12654 ;; Registers used:
 12655 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12656 ;; Tracked objects:
 12657 ;;		On entry : 0/0
 12658 ;;		On exit  : 0/0
 12659 ;;		Unchanged: 0/0
 12660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12661 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12662 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12663 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12664 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12665 ;;Total ram usage:        9 bytes
 12666 ;; Hardware stack levels used: 1
 12667 ;; Hardware stack levels required when called: 8
 12668 ;; This function calls:
 12669 ;;		_fputc
 12670 ;;		_fputs
 12671 ;;		_strlen
 12672 ;; This function is called by:
 12673 ;;		_utoa
 12674 ;; This function uses a non-reentrant model
 12675 ;;
 12676                           
 12677  0742                     _pad:	
 12678                           ;psect for function _pad
 12679                           
 12680                           
 12681                           ;incstack = 0
 12682                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12683                           ;pad@fp stored from wreg
 12684  0742  0020               	movlb	0	; select bank0
 12685  0743  00BB               	movwf	pad@fp
 12686  0744                     l3250:
 12687                           
 12688                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12689  0744  0021               	movlb	1	; select bank1
 12690  0745  1C26               	btfss	_flags^(0+128),0
 12691  0746  2F48               	goto	u1061
 12692  0747  2F49               	goto	u1060
 12693  0748                     u1061:
 12694  0748  2F52               	goto	l3254
 12695  0749                     u1060:
 12696  0749                     l3252:
 12697                           
 12698                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12699  0749  0020               	movlb	0	; select bank0
 12700  074A  083B               	movf	pad@fp,w
 12701  074B  00B6               	movwf	??_pad
 12702  074C  0836               	movf	??_pad,w
 12703  074D  00AB               	movwf	fputs@fp
 12704  074E  0833               	movf	pad@buf,w
 12705  074F  318D  2525  3187   	fcall	_fputs
 12706  0752                     l3254:
 12707                           
 12708                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12709  0752  0020               	movlb	0	; select bank0
 12710  0753  1BB5               	btfsc	pad@p+1,7
 12711  0754  2F56               	goto	u1071
 12712  0755  2F57               	goto	u1070
 12713  0756                     u1071:
 12714  0756  2F5C               	goto	l3258
 12715  0757                     u1070:
 12716  0757                     l3256:
 12717  0757  0835               	movf	pad@p+1,w
 12718  0758  00BA               	movwf	pad@w+1
 12719  0759  0834               	movf	pad@p,w
 12720  075A  00B9               	movwf	pad@w
 12721  075B  2F5E               	goto	l1640
 12722  075C                     l3258:
 12723  075C  01B9               	clrf	pad@w
 12724  075D  01BA               	clrf	pad@w+1
 12725  075E                     l1640:
 12726                           
 12727                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12728  075E  01B7               	clrf	pad@i
 12729  075F  01B8               	clrf	pad@i+1
 12730                           
 12731                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12732  0760  2F72               	goto	l3264
 12733  0761                     l3260:
 12734                           
 12735                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12736  0761  3020               	movlw	32
 12737  0762  0020               	movlb	0	; select bank0
 12738  0763  00A3               	movwf	fputc@c
 12739  0764  3000               	movlw	0
 12740  0765  00A4               	movwf	fputc@c+1
 12741  0766  083B               	movf	pad@fp,w
 12742  0767  00B6               	movwf	??_pad
 12743  0768  0836               	movf	??_pad,w
 12744  0769  00A5               	movwf	fputc@fp
 12745  076A  318F  2777  3187   	fcall	_fputc
 12746  076D                     l3262:
 12747                           
 12748                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12749  076D  3001               	movlw	1
 12750  076E  0020               	movlb	0	; select bank0
 12751  076F  07B7               	addwf	pad@i,f
 12752  0770  3000               	movlw	0
 12753  0771  3DB8               	addwfc	pad@i+1,f
 12754  0772                     l3264:
 12755                           
 12756                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12757  0772  0838               	movf	pad@i+1,w
 12758  0773  3A80               	xorlw	128
 12759  0774  00B6               	movwf	??_pad
 12760  0775  083A               	movf	pad@w+1,w
 12761  0776  3A80               	xorlw	128
 12762  0777  0236               	subwf	??_pad,w
 12763  0778  1D03               	skipz
 12764  0779  2F7C               	goto	u1085
 12765  077A  0839               	movf	pad@w,w
 12766  077B  0237               	subwf	pad@i,w
 12767  077C                     u1085:
 12768  077C  1C03               	skipc
 12769  077D  2F7F               	goto	u1081
 12770  077E  2F80               	goto	u1080
 12771  077F                     u1081:
 12772  077F  2F61               	goto	l3260
 12773  0780                     u1080:
 12774  0780                     l1643:
 12775                           
 12776                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12777  0780  0021               	movlb	1	; select bank1
 12778  0781  1826               	btfsc	_flags^(0+128),0
 12779  0782  2F84               	goto	u1091
 12780  0783  2F85               	goto	u1090
 12781  0784                     u1091:
 12782  0784  2F8E               	goto	l1644
 12783  0785                     u1090:
 12784  0785                     l3266:
 12785                           
 12786                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12787  0785  0020               	movlb	0	; select bank0
 12788  0786  083B               	movf	pad@fp,w
 12789  0787  00B6               	movwf	??_pad
 12790  0788  0836               	movf	??_pad,w
 12791  0789  00AB               	movwf	fputs@fp
 12792  078A  0833               	movf	pad@buf,w
 12793  078B  318D  2525  3187   	fcall	_fputs
 12794  078E                     l1644:	
 12795                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 92:     }
 12796                           
 12797                           
 12798                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12799  078E  0020               	movlb	0	; select bank0
 12800  078F  0833               	movf	pad@buf,w
 12801  0790  318C  24A9  3187   	fcall	_strlen
 12802  0793  0020               	movlb	0	; select bank0
 12803  0794  0839               	movf	pad@w,w
 12804  0795  0720               	addwf	?_strlen,w
 12805  0796  00B3               	movwf	?_pad
 12806  0797  083A               	movf	pad@w+1,w
 12807  0798  3D21               	addwfc	?_strlen+1,w
 12808  0799  00B4               	movwf	?_pad+1
 12809  079A                     l1645:
 12810  079A  0008               	return
 12811  079B                     __end_of_pad:
 12812                           
 12813                           	psect	text46
 12814  0CA9                     __ptext46:	
 12815 ;; *************** function _strlen *****************
 12816 ;; Defined at:
 12817 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
 12818 ;; Parameters:    Size  Location     Type
 12819 ;;  s               1    wreg     PTR const unsigned char 
 12820 ;;		 -> dbuf(32), 
 12821 ;; Auto vars:     Size  Location     Type
 12822 ;;  s               1    4[BANK0 ] PTR const unsigned char 
 12823 ;;		 -> dbuf(32), 
 12824 ;;  a               1    3[BANK0 ] PTR const unsigned char 
 12825 ;;		 -> dbuf(32), 
 12826 ;; Return value:  Size  Location     Type
 12827 ;;                  2    0[BANK0 ] unsigned int 
 12828 ;; Registers used:
 12829 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12830 ;; Tracked objects:
 12831 ;;		On entry : 0/0
 12832 ;;		On exit  : 0/0
 12833 ;;		Unchanged: 0/0
 12834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12835 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12836 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12837 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12838 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12839 ;;Total ram usage:        5 bytes
 12840 ;; Hardware stack levels used: 1
 12841 ;; Hardware stack levels required when called: 4
 12842 ;; This function calls:
 12843 ;;		Nothing
 12844 ;; This function is called by:
 12845 ;;		_pad
 12846 ;; This function uses a non-reentrant model
 12847 ;;
 12848                           
 12849  0CA9                     _strlen:	
 12850                           ;psect for function _strlen
 12851                           
 12852                           
 12853                           ;incstack = 0
 12854                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 12855                           ;strlen@s stored from wreg
 12856  0CA9  0020               	movlb	0	; select bank0
 12857  0CAA  00A4               	movwf	strlen@s
 12858  0CAB                     l3202:
 12859  0CAB  0824               	movf	strlen@s,w
 12860  0CAC  00A2               	movwf	??_strlen
 12861  0CAD  0822               	movf	??_strlen,w
 12862  0CAE  00A3               	movwf	strlen@a
 12863  0CAF  2CB4               	goto	l3206
 12864  0CB0                     l3204:
 12865  0CB0  3001               	movlw	1
 12866  0CB1  00A2               	movwf	??_strlen
 12867  0CB2  0822               	movf	??_strlen,w
 12868  0CB3  07A4               	addwf	strlen@s,f
 12869  0CB4                     l3206:
 12870  0CB4  0824               	movf	strlen@s,w
 12871  0CB5  0086               	movwf	6
 12872  0CB6  3001               	movlw	1	; select bank2/3
 12873  0CB7  0087               	movwf	7
 12874  0CB8  0801               	movf	1,w
 12875  0CB9  1D03               	btfss	3,2
 12876  0CBA  2CBC               	goto	u961
 12877  0CBB  2CBD               	goto	u960
 12878  0CBC                     u961:
 12879  0CBC  2CB0               	goto	l3204
 12880  0CBD                     u960:
 12881  0CBD                     l3208:
 12882  0CBD  0823               	movf	strlen@a,w
 12883  0CBE  0224               	subwf	strlen@s,w
 12884  0CBF  00A0               	movwf	?_strlen
 12885  0CC0  01A1               	clrf	?_strlen+1
 12886  0CC1  1BA0               	btfsc	?_strlen,7
 12887  0CC2  03A1               	decf	?_strlen+1,f
 12888  0CC3                     l1698:
 12889  0CC3  0008               	return
 12890  0CC4                     __end_of_strlen:
 12891                           
 12892                           	psect	text47
 12893  0D25                     __ptext47:	
 12894 ;; *************** function _fputs *****************
 12895 ;; Defined at:
 12896 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
 12897 ;; Parameters:    Size  Location     Type
 12898 ;;  s               1    wreg     PTR const unsigned char 
 12899 ;;		 -> dbuf(32), 
 12900 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
 12901 ;;		 -> NULL(0), 
 12902 ;; Auto vars:     Size  Location     Type
 12903 ;;  s               1   18[BANK0 ] PTR const unsigned char 
 12904 ;;		 -> dbuf(32), 
 12905 ;;  i               2   16[BANK0 ] int 
 12906 ;;  c               1   15[BANK0 ] unsigned char 
 12907 ;; Return value:  Size  Location     Type
 12908 ;;                  2   11[BANK0 ] int 
 12909 ;; Registers used:
 12910 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12911 ;; Tracked objects:
 12912 ;;		On entry : 0/0
 12913 ;;		On exit  : 0/0
 12914 ;;		Unchanged: 0/0
 12915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12916 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12917 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12918 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12919 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12920 ;;Total ram usage:        8 bytes
 12921 ;; Hardware stack levels used: 1
 12922 ;; Hardware stack levels required when called: 7
 12923 ;; This function calls:
 12924 ;;		_fputc
 12925 ;; This function is called by:
 12926 ;;		_pad
 12927 ;; This function uses a non-reentrant model
 12928 ;;
 12929                           
 12930  0D25                     _fputs:	
 12931                           ;psect for function _fputs
 12932                           
 12933                           
 12934                           ;incstack = 0
 12935                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12936                           ;fputs@s stored from wreg
 12937  0D25  0020               	movlb	0	; select bank0
 12938  0D26  00B2               	movwf	fputs@s
 12939  0D27                     l3194:
 12940  0D27  01B0               	clrf	fputs@i
 12941  0D28  01B1               	clrf	fputs@i+1
 12942  0D29  2D3D               	goto	l3200
 12943  0D2A                     l3196:
 12944  0D2A  082F               	movf	fputs@c,w
 12945  0D2B  00AC               	movwf	??_fputs
 12946  0D2C  01AD               	clrf	??_fputs+1
 12947  0D2D  082C               	movf	??_fputs,w
 12948  0D2E  00A3               	movwf	fputc@c
 12949  0D2F  082D               	movf	??_fputs+1,w
 12950  0D30  00A4               	movwf	fputc@c+1
 12951  0D31  082B               	movf	fputs@fp,w
 12952  0D32  00AE               	movwf	??_fputs+2
 12953  0D33  082E               	movf	??_fputs+2,w
 12954  0D34  00A5               	movwf	fputc@fp
 12955  0D35  318F  2777  318D   	fcall	_fputc
 12956  0D38                     l3198:
 12957  0D38  3001               	movlw	1
 12958  0D39  0020               	movlb	0	; select bank0
 12959  0D3A  07B0               	addwf	fputs@i,f
 12960  0D3B  3000               	movlw	0
 12961  0D3C  3DB1               	addwfc	fputs@i+1,f
 12962  0D3D                     l3200:
 12963  0D3D  0830               	movf	fputs@i,w
 12964  0D3E  0732               	addwf	fputs@s,w
 12965  0D3F  00AC               	movwf	??_fputs
 12966  0D40  082C               	movf	??_fputs,w
 12967  0D41  0086               	movwf	6
 12968  0D42  3001               	movlw	1	; select bank2/3
 12969  0D43  0087               	movwf	7
 12970  0D44  0801               	movf	1,w
 12971  0D45  00AD               	movwf	??_fputs+1
 12972  0D46  082D               	movf	??_fputs+1,w
 12973  0D47  00AF               	movwf	fputs@c
 12974  0D48  082F               	movf	fputs@c,w
 12975  0D49  1D03               	btfss	3,2
 12976  0D4A  2D4C               	goto	u951
 12977  0D4B  2D4D               	goto	u950
 12978  0D4C                     u951:
 12979  0D4C  2D2A               	goto	l3196
 12980  0D4D                     u950:
 12981  0D4D                     l1692:
 12982  0D4D  0008               	return
 12983  0D4E                     __end_of_fputs:
 12984                           
 12985                           	psect	text48
 12986  0F77                     __ptext48:	
 12987 ;; *************** function _fputc *****************
 12988 ;; Defined at:
 12989 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
 12990 ;; Parameters:    Size  Location     Type
 12991 ;;  c               2    3[BANK0 ] int 
 12992 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
 12993 ;;		 -> NULL(0), 
 12994 ;; Auto vars:     Size  Location     Type
 12995 ;;		None
 12996 ;; Return value:  Size  Location     Type
 12997 ;;                  2    3[BANK0 ] int 
 12998 ;; Registers used:
 12999 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13000 ;; Tracked objects:
 13001 ;;		On entry : 0/0
 13002 ;;		On exit  : 0/0
 13003 ;;		Unchanged: 0/0
 13004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13005 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13007 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13008 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13009 ;;Total ram usage:        8 bytes
 13010 ;; Hardware stack levels used: 1
 13011 ;; Hardware stack levels required when called: 6
 13012 ;; This function calls:
 13013 ;;		_putch
 13014 ;; This function is called by:
 13015 ;;		_pad
 13016 ;;		_vfpfcnvrt
 13017 ;;		_fputs
 13018 ;; This function uses a non-reentrant model
 13019 ;;
 13020                           
 13021  0F77                     _fputc:	
 13022                           ;psect for function _fputc
 13023                           
 13024  0F77                     l3180:	
 13025                           ;incstack = 0
 13026                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13027                           
 13028  0F77  0020               	movlb	0	; select bank0
 13029  0F78  0825               	movf	fputc@fp,w
 13030  0F79  1903               	btfsc	3,2
 13031  0F7A  2F7C               	goto	u911
 13032  0F7B  2F7D               	goto	u910
 13033  0F7C                     u911:
 13034  0F7C  2F82               	goto	l3184
 13035  0F7D                     u910:
 13036  0F7D                     l3182:
 13037  0F7D  0825               	movf	fputc@fp,w
 13038  0F7E  1D03               	btfss	3,2
 13039  0F7F  2F81               	goto	u921
 13040  0F80  2F82               	goto	u920
 13041  0F81                     u921:
 13042  0F81  2F87               	goto	l3186
 13043  0F82                     u920:
 13044  0F82                     l3184:
 13045  0F82  0823               	movf	fputc@c,w
 13046  0F83  318A  225F  318F   	fcall	_putch
 13047  0F86  2FB9               	goto	l1684
 13048  0F87                     l3186:
 13049  0F87  0825               	movf	fputc@fp,w
 13050  0F88  3E08               	addlw	8
 13051  0F89  0086               	movwf	6
 13052  0F8A  0187               	clrf	7
 13053  0F8B  0016               	moviw fsr1++
 13054  0F8C  0401               	iorwf	1,w
 13055  0F8D  1903               	btfsc	3,2
 13056  0F8E  2F90               	goto	u931
 13057  0F8F  2F91               	goto	u930
 13058  0F90                     u931:
 13059  0F90  2FAF               	goto	l3190
 13060  0F91                     u930:
 13061  0F91                     l3188:
 13062  0F91  0825               	movf	fputc@fp,w
 13063  0F92  3E08               	addlw	8
 13064  0F93  0086               	movwf	6
 13065  0F94  0187               	clrf	7
 13066  0F95  3F40               	moviw [0]fsr1
 13067  0F96  00A6               	movwf	??_fputc
 13068  0F97  3F41               	moviw [1]fsr1
 13069  0F98  00A7               	movwf	??_fputc+1
 13070  0F99  0825               	movf	fputc@fp,w
 13071  0F9A  3E02               	addlw	2
 13072  0F9B  0086               	movwf	6
 13073  0F9C  0187               	clrf	7
 13074  0F9D  3F40               	moviw [0]fsr1
 13075  0F9E  00A8               	movwf	??_fputc+2
 13076  0F9F  3F41               	moviw [1]fsr1
 13077  0FA0  00A9               	movwf	??_fputc+3
 13078  0FA1  0829               	movf	??_fputc+3,w
 13079  0FA2  3A80               	xorlw	128
 13080  0FA3  00AA               	movwf	??_fputc+4
 13081  0FA4  0827               	movf	??_fputc+1,w
 13082  0FA5  3A80               	xorlw	128
 13083  0FA6  022A               	subwf	??_fputc+4,w
 13084  0FA7  1D03               	skipz
 13085  0FA8  2FAB               	goto	u945
 13086  0FA9  0826               	movf	??_fputc,w
 13087  0FAA  0228               	subwf	??_fputc+2,w
 13088  0FAB                     u945:
 13089  0FAB  1803               	skipnc
 13090  0FAC  2FAE               	goto	u941
 13091  0FAD  2FAF               	goto	u940
 13092  0FAE                     u941:
 13093  0FAE  2FB9               	goto	l1684
 13094  0FAF                     u940:
 13095  0FAF                     l3190:
 13096  0FAF  0020               	movlb	0	; select bank0
 13097  0FB0  0825               	movf	fputc@fp,w
 13098  0FB1  3E02               	addlw	2
 13099  0FB2  0086               	movwf	6
 13100  0FB3  0187               	clrf	7
 13101  0FB4  3001               	movlw	1
 13102  0FB5  0781               	addwf	1,f
 13103  0FB6  3141               	addfsr 1,1
 13104  0FB7  1803               	skipnc
 13105  0FB8  0A81               	incf	1,f
 13106  0FB9                     l1684:
 13107  0FB9  0008               	return
 13108  0FBA                     __end_of_fputc:
 13109                           
 13110                           	psect	text49
 13111  0A5F                     __ptext49:	
 13112 ;; *************** function _putch *****************
 13113 ;; Defined at:
 13114 ;;		line 174 in file "eusart.c"
 13115 ;; Parameters:    Size  Location     Type
 13116 ;;  txData          1    wreg     unsigned char 
 13117 ;; Auto vars:     Size  Location     Type
 13118 ;;  txData          1    2[BANK0 ] unsigned char 
 13119 ;; Return value:  Size  Location     Type
 13120 ;;                  1    wreg      void 
 13121 ;; Registers used:
 13122 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13123 ;; Tracked objects:
 13124 ;;		On entry : 0/0
 13125 ;;		On exit  : 0/0
 13126 ;;		Unchanged: 0/0
 13127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13129 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13131 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13132 ;;Total ram usage:        1 bytes
 13133 ;; Hardware stack levels used: 1
 13134 ;; Hardware stack levels required when called: 5
 13135 ;; This function calls:
 13136 ;;		_EUSART_Write
 13137 ;; This function is called by:
 13138 ;;		_fputc
 13139 ;; This function uses a non-reentrant model
 13140 ;;
 13141                           
 13142  0A5F                     _putch:	
 13143                           ;psect for function _putch
 13144                           
 13145                           
 13146                           ;incstack = 0
 13147                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13148                           ;putch@txData stored from wreg
 13149  0A5F  0020               	movlb	0	; select bank0
 13150  0A60  00A2               	movwf	putch@txData
 13151  0A61                     l3178:
 13152                           
 13153                           ;eusart.c: 174: void putch(char txData);eusart.c: 175: {;eusart.c: 176:     EUSART_Write
      +                          (txData);
 13154  0A61  0822               	movf	putch@txData,w
 13155  0A62  318D  2579  318A   	fcall	_EUSART_Write
 13156  0A65                     l599:
 13157  0A65  0008               	return
 13158  0A66                     __end_of_putch:
 13159                           
 13160                           	psect	text50
 13161  0D79                     __ptext50:	
 13162 ;; *************** function _EUSART_Write *****************
 13163 ;; Defined at:
 13164 ;;		line 142 in file "eusart.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;  txData          1    wreg     unsigned char 
 13167 ;; Auto vars:     Size  Location     Type
 13168 ;;  txData          1    1[BANK0 ] unsigned char 
 13169 ;; Return value:  Size  Location     Type
 13170 ;;                  1    wreg      void 
 13171 ;; Registers used:
 13172 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13173 ;; Tracked objects:
 13174 ;;		On entry : 0/0
 13175 ;;		On exit  : 0/0
 13176 ;;		Unchanged: 0/0
 13177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13179 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13180 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13181 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13182 ;;Total ram usage:        2 bytes
 13183 ;; Hardware stack levels used: 1
 13184 ;; Hardware stack levels required when called: 4
 13185 ;; This function calls:
 13186 ;;		Nothing
 13187 ;; This function is called by:
 13188 ;;		_putch
 13189 ;; This function uses a non-reentrant model
 13190 ;;
 13191                           
 13192  0D79                     _EUSART_Write:	
 13193                           ;psect for function _EUSART_Write
 13194                           
 13195                           
 13196                           ;incstack = 0
 13197                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 13198                           ;EUSART_Write@txData stored from wreg
 13199  0D79  0020               	movlb	0	; select bank0
 13200  0D7A  00A1               	movwf	EUSART_Write@txData
 13201  0D7B                     l3160:
 13202  0D7B                     l3162:	
 13203                           ;eusart.c: 142: void EUSART_Write(uint8_t txData);eusart.c: 143: {;eusart.c: 144:     wh
      +                          ile(0 == eusartTxBufferRemaining)
 13204                           
 13205                           
 13206                           ;eusart.c: 144:     while(0 == eusartTxBufferRemaining)
 13207  0D7B  0021               	movlb	1	; select bank1
 13208  0D7C  0852               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 13209  0D7D  1903               	btfsc	3,2
 13210  0D7E  2D80               	goto	u881
 13211  0D7F  2D81               	goto	u880
 13212  0D80                     u881:
 13213  0D80  2D7B               	goto	l3162
 13214  0D81                     u880:
 13215  0D81                     l589:
 13216                           
 13217                           ;eusart.c: 148:     if(0 == PIE1bits.TXIE)
 13218  0D81  1A11               	btfsc	17,4	;volatile
 13219  0D82  2D84               	goto	u891
 13220  0D83  2D85               	goto	u890
 13221  0D84                     u891:
 13222  0D84  2D8A               	goto	l590
 13223  0D85                     u890:
 13224  0D85                     l3164:
 13225                           
 13226                           ;eusart.c: 149:     {;eusart.c: 150:         TX1REG = txData;
 13227  0D85  0020               	movlb	0	; select bank0
 13228  0D86  0821               	movf	EUSART_Write@txData,w
 13229  0D87  0023               	movlb	3	; select bank3
 13230  0D88  009A               	movwf	26	;volatile
 13231                           
 13232                           ;eusart.c: 151:     }
 13233  0D89  2DA3               	goto	l3176
 13234  0D8A                     l590:	
 13235                           ;eusart.c: 152:     else
 13236                           
 13237                           
 13238                           ;eusart.c: 153:     {;eusart.c: 154:         PIE1bits.TXIE = 0;
 13239  0D8A  1211               	bcf	17,4	;volatile
 13240  0D8B                     l3166:
 13241                           
 13242                           ;eusart.c: 155:         eusartTxBuffer[eusartTxHead++] = txData;
 13243  0D8B  0020               	movlb	0	; select bank0
 13244  0D8C  0821               	movf	EUSART_Write@txData,w
 13245  0D8D  00A0               	movwf	??_EUSART_Write
 13246  0D8E  087C               	movf	_eusartTxHead,w
 13247  0D8F  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 13248  0D90  0086               	movwf	6
 13249  0D91  3001               	movlw	1	; select bank2/3
 13250  0D92  0087               	movwf	7
 13251  0D93  0820               	movf	??_EUSART_Write,w
 13252  0D94  0081               	movwf	1
 13253  0D95                     l3168:
 13254  0D95  3001               	movlw	1
 13255  0D96  00A0               	movwf	??_EUSART_Write
 13256  0D97  0820               	movf	??_EUSART_Write,w
 13257  0D98  07FC               	addwf	_eusartTxHead,f	;volatile
 13258  0D99                     l3170:
 13259                           
 13260                           ;eusart.c: 156:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 13261  0D99  3008               	movlw	8
 13262  0D9A  027C               	subwf	_eusartTxHead,w	;volatile
 13263  0D9B  1C03               	skipc
 13264  0D9C  2D9E               	goto	u901
 13265  0D9D  2D9F               	goto	u900
 13266  0D9E                     u901:
 13267  0D9E  2DA0               	goto	l3174
 13268  0D9F                     u900:
 13269  0D9F                     l3172:
 13270                           
 13271                           ;eusart.c: 157:         {;eusart.c: 158:             eusartTxHead = 0;
 13272  0D9F  01FC               	clrf	_eusartTxHead	;volatile
 13273  0DA0                     l3174:
 13274                           
 13275                           ;eusart.c: 160:         eusartTxBufferRemaining--;
 13276  0DA0  3001               	movlw	1
 13277  0DA1  0021               	movlb	1	; select bank1
 13278  0DA2  02D2               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 13279  0DA3                     l3176:
 13280                           
 13281                           ;eusart.c: 162:     PIE1bits.TXIE = 1;
 13282  0DA3  0021               	movlb	1	; select bank1
 13283  0DA4  1611               	bsf	17,4	;volatile
 13284  0DA5                     l593:
 13285  0DA5  0008               	return
 13286  0DA6                     __end_of_EUSART_Write:
 13287                           
 13288                           	psect	text51
 13289  061D                     __ptext51:	
 13290 ;; *************** function ___lomod *****************
 13291 ;; Defined at:
 13292 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lomod.c"
 13293 ;; Parameters:    Size  Location     Type
 13294 ;;  divisor         8    0[BANK0 ] unsigned long long 
 13295 ;;  dividend        8    8[BANK0 ] unsigned long long 
 13296 ;; Auto vars:     Size  Location     Type
 13297 ;;  counter         1   17[BANK0 ] unsigned char 
 13298 ;; Return value:  Size  Location     Type
 13299 ;;                  8    0[BANK0 ] unsigned long long 
 13300 ;; Registers used:
 13301 ;;		wreg, status,2, status,0
 13302 ;; Tracked objects:
 13303 ;;		On entry : 0/0
 13304 ;;		On exit  : 0/0
 13305 ;;		Unchanged: 0/0
 13306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13307 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13309 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13310 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13311 ;;Total ram usage:       18 bytes
 13312 ;; Hardware stack levels used: 1
 13313 ;; Hardware stack levels required when called: 4
 13314 ;; This function calls:
 13315 ;;		Nothing
 13316 ;; This function is called by:
 13317 ;;		_utoa
 13318 ;; This function uses a non-reentrant model
 13319 ;;
 13320                           
 13321  061D                     ___lomod:	
 13322                           ;psect for function ___lomod
 13323                           
 13324  061D                     l3234:	
 13325                           ;incstack = 0
 13326                           ; Regs used in ___lomod: [wreg+status,2+status,0]
 13327                           
 13328  061D  0020               	movlb	0	; select bank0
 13329  061E  0820               	movf	___lomod@divisor,w
 13330  061F  0421               	iorwf	___lomod@divisor+1,w
 13331  0620  0422               	iorwf	___lomod@divisor+2,w
 13332  0621  0423               	iorwf	___lomod@divisor+3,w
 13333  0622  0424               	iorwf	___lomod@divisor+4,w
 13334  0623  0425               	iorwf	___lomod@divisor+5,w
 13335  0624  0426               	iorwf	___lomod@divisor+6,w
 13336  0625  0427               	iorwf	___lomod@divisor+7,w
 13337  0626  1903               	skipnz
 13338  0627  2E29               	goto	u1021
 13339  0628  2E2A               	goto	u1020
 13340  0629                     u1021:
 13341  0629  2E7D               	goto	l1395
 13342  062A                     u1020:
 13343  062A                     l3236:
 13344  062A  01B1               	clrf	___lomod@counter
 13345  062B  0AB1               	incf	___lomod@counter,f
 13346  062C  2E39               	goto	l3242
 13347  062D                     l3238:
 13348  062D  35A0               	lslf	___lomod@divisor,f
 13349  062E  0DA1               	rlf	___lomod@divisor+1,f
 13350  062F  0DA2               	rlf	___lomod@divisor+2,f
 13351  0630  0DA3               	rlf	___lomod@divisor+3,f
 13352  0631  0DA4               	rlf	___lomod@divisor+4,f
 13353  0632  0DA5               	rlf	___lomod@divisor+5,f
 13354  0633  0DA6               	rlf	___lomod@divisor+6,f
 13355  0634  0DA7               	rlf	___lomod@divisor+7,f
 13356  0635                     l3240:
 13357  0635  3001               	movlw	1
 13358  0636  00B0               	movwf	??___lomod
 13359  0637  0830               	movf	??___lomod,w
 13360  0638  07B1               	addwf	___lomod@counter,f
 13361  0639                     l3242:
 13362  0639  1FA7               	btfss	___lomod@divisor+7,7
 13363  063A  2E3C               	goto	u1031
 13364  063B  2E3D               	goto	u1030
 13365  063C                     u1031:
 13366  063C  2E2D               	goto	l3238
 13367  063D                     u1030:
 13368  063D                     l3244:
 13369  063D  0827               	movf	___lomod@divisor+7,w
 13370  063E  022F               	subwf	___lomod@dividend+7,w
 13371  063F  1D03               	skipz
 13372  0640  2E5B               	goto	u1045
 13373  0641  0826               	movf	___lomod@divisor+6,w
 13374  0642  022E               	subwf	___lomod@dividend+6,w
 13375  0643  1D03               	skipz
 13376  0644  2E5B               	goto	u1045
 13377  0645  0825               	movf	___lomod@divisor+5,w
 13378  0646  022D               	subwf	___lomod@dividend+5,w
 13379  0647  1D03               	skipz
 13380  0648  2E5B               	goto	u1045
 13381  0649  0824               	movf	___lomod@divisor+4,w
 13382  064A  022C               	subwf	___lomod@dividend+4,w
 13383  064B  1D03               	skipz
 13384  064C  2E5B               	goto	u1045
 13385  064D  0823               	movf	___lomod@divisor+3,w
 13386  064E  022B               	subwf	___lomod@dividend+3,w
 13387  064F  1D03               	skipz
 13388  0650  2E5B               	goto	u1045
 13389  0651  0822               	movf	___lomod@divisor+2,w
 13390  0652  022A               	subwf	___lomod@dividend+2,w
 13391  0653  1D03               	skipz
 13392  0654  2E5B               	goto	u1045
 13393  0655  0821               	movf	___lomod@divisor+1,w
 13394  0656  0229               	subwf	___lomod@dividend+1,w
 13395  0657  1D03               	skipz
 13396  0658  2E5B               	goto	u1045
 13397  0659  0820               	movf	___lomod@divisor,w
 13398  065A  0228               	subwf	___lomod@dividend,w
 13399  065B                     u1045:
 13400  065B  1C03               	skipc
 13401  065C  2E5E               	goto	u1041
 13402  065D  2E5F               	goto	u1040
 13403  065E                     u1041:
 13404  065E  2E6F               	goto	l3248
 13405  065F                     u1040:
 13406  065F                     l3246:
 13407  065F  0820               	movf	___lomod@divisor,w
 13408  0660  02A8               	subwf	___lomod@dividend,f
 13409  0661  0821               	movf	___lomod@divisor+1,w
 13410  0662  3BA9               	subwfb	___lomod@dividend+1,f
 13411  0663  0822               	movf	___lomod@divisor+2,w
 13412  0664  3BAA               	subwfb	___lomod@dividend+2,f
 13413  0665  0823               	movf	___lomod@divisor+3,w
 13414  0666  3BAB               	subwfb	___lomod@dividend+3,f
 13415  0667  0824               	movf	___lomod@divisor+4,w
 13416  0668  3BAC               	subwfb	___lomod@dividend+4,f
 13417  0669  0825               	movf	___lomod@divisor+5,w
 13418  066A  3BAD               	subwfb	___lomod@dividend+5,f
 13419  066B  0826               	movf	___lomod@divisor+6,w
 13420  066C  3BAE               	subwfb	___lomod@dividend+6,f
 13421  066D  0827               	movf	___lomod@divisor+7,w
 13422  066E  3BAF               	subwfb	___lomod@dividend+7,f
 13423  066F                     l3248:
 13424  066F  36A7               	lsrf	___lomod@divisor+7,f
 13425  0670  0CA6               	rrf	___lomod@divisor+6,f
 13426  0671  0CA5               	rrf	___lomod@divisor+5,f
 13427  0672  0CA4               	rrf	___lomod@divisor+4,f
 13428  0673  0CA3               	rrf	___lomod@divisor+3,f
 13429  0674  0CA2               	rrf	___lomod@divisor+2,f
 13430  0675  0CA1               	rrf	___lomod@divisor+1,f
 13431  0676  0CA0               	rrf	___lomod@divisor,f
 13432  0677  3001               	movlw	1
 13433  0678  02B1               	subwf	___lomod@counter,f
 13434  0679  1D03               	btfss	3,2
 13435  067A  2E7C               	goto	u1051
 13436  067B  2E7D               	goto	u1050
 13437  067C                     u1051:
 13438  067C  2E3D               	goto	l3244
 13439  067D                     u1050:
 13440  067D                     l1395:
 13441  067D  0828               	movf	___lomod@dividend,w
 13442  067E  00A0               	movwf	?___lomod
 13443  067F  0829               	movf	___lomod@dividend+1,w
 13444  0680  00A1               	movwf	?___lomod+1
 13445  0681  082A               	movf	___lomod@dividend+2,w
 13446  0682  00A2               	movwf	?___lomod+2
 13447  0683  082B               	movf	___lomod@dividend+3,w
 13448  0684  00A3               	movwf	?___lomod+3
 13449  0685  082C               	movf	___lomod@dividend+4,w
 13450  0686  00A4               	movwf	?___lomod+4
 13451  0687  082D               	movf	___lomod@dividend+5,w
 13452  0688  00A5               	movwf	?___lomod+5
 13453  0689  082E               	movf	___lomod@dividend+6,w
 13454  068A  00A6               	movwf	?___lomod+6
 13455  068B  082F               	movf	___lomod@dividend+7,w
 13456  068C  00A7               	movwf	?___lomod+7
 13457  068D                     l1402:
 13458  068D  0008               	return
 13459  068E                     __end_of___lomod:
 13460                           
 13461                           	psect	text52
 13462  0599                     __ptext52:	
 13463 ;; *************** function ___lodiv *****************
 13464 ;; Defined at:
 13465 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lodiv.c"
 13466 ;; Parameters:    Size  Location     Type
 13467 ;;  divisor         8    0[BANK0 ] unsigned long long 
 13468 ;;  dividend        8    8[BANK0 ] unsigned long long 
 13469 ;; Auto vars:     Size  Location     Type
 13470 ;;  quotient        8   17[BANK0 ] unsigned long long 
 13471 ;;  counter         1   25[BANK0 ] unsigned char 
 13472 ;; Return value:  Size  Location     Type
 13473 ;;                  8    0[BANK0 ] unsigned long long 
 13474 ;; Registers used:
 13475 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13476 ;; Tracked objects:
 13477 ;;		On entry : 0/0
 13478 ;;		On exit  : 0/0
 13479 ;;		Unchanged: 0/0
 13480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13481 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13482 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13483 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13484 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13485 ;;Total ram usage:       26 bytes
 13486 ;; Hardware stack levels used: 1
 13487 ;; Hardware stack levels required when called: 4
 13488 ;; This function calls:
 13489 ;;		Nothing
 13490 ;; This function is called by:
 13491 ;;		_utoa
 13492 ;; This function uses a non-reentrant model
 13493 ;;
 13494                           
 13495  0599                     ___lodiv:	
 13496                           ;psect for function ___lodiv
 13497                           
 13498  0599                     l3212:	
 13499                           ;incstack = 0
 13500                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 13501                           
 13502  0599  3031               	movlw	low ___lodiv@quotient
 13503  059A  0086               	movwf	6
 13504  059B  3000               	movlw	high ___lodiv@quotient
 13505  059C  0087               	movwf	7
 13506  059D  3008               	movlw	8
 13507  059E  0020               	movlb	0	; select bank0
 13508  059F  00B0               	movwf	??___lodiv
 13509  05A0  3000               	movlw	0
 13510  05A1                     u970:
 13511  05A1  001E               	movwi fsr1++
 13512  05A2  0BB0               	decfsz	??___lodiv,f
 13513  05A3  2DA1               	goto	u970
 13514  05A4                     l3214:
 13515  05A4  0820               	movf	___lodiv@divisor,w
 13516  05A5  0421               	iorwf	___lodiv@divisor+1,w
 13517  05A6  0422               	iorwf	___lodiv@divisor+2,w
 13518  05A7  0423               	iorwf	___lodiv@divisor+3,w
 13519  05A8  0424               	iorwf	___lodiv@divisor+4,w
 13520  05A9  0425               	iorwf	___lodiv@divisor+5,w
 13521  05AA  0426               	iorwf	___lodiv@divisor+6,w
 13522  05AB  0427               	iorwf	___lodiv@divisor+7,w
 13523  05AC  1903               	skipnz
 13524  05AD  2DAF               	goto	u981
 13525  05AE  2DB0               	goto	u980
 13526  05AF                     u981:
 13527  05AF  2E0C               	goto	l1385
 13528  05B0                     u980:
 13529  05B0                     l3216:
 13530  05B0  01B9               	clrf	___lodiv@counter
 13531  05B1  0AB9               	incf	___lodiv@counter,f
 13532  05B2  2DBF               	goto	l3222
 13533  05B3                     l3218:
 13534  05B3  35A0               	lslf	___lodiv@divisor,f
 13535  05B4  0DA1               	rlf	___lodiv@divisor+1,f
 13536  05B5  0DA2               	rlf	___lodiv@divisor+2,f
 13537  05B6  0DA3               	rlf	___lodiv@divisor+3,f
 13538  05B7  0DA4               	rlf	___lodiv@divisor+4,f
 13539  05B8  0DA5               	rlf	___lodiv@divisor+5,f
 13540  05B9  0DA6               	rlf	___lodiv@divisor+6,f
 13541  05BA  0DA7               	rlf	___lodiv@divisor+7,f
 13542  05BB                     l3220:
 13543  05BB  3001               	movlw	1
 13544  05BC  00B0               	movwf	??___lodiv
 13545  05BD  0830               	movf	??___lodiv,w
 13546  05BE  07B9               	addwf	___lodiv@counter,f
 13547  05BF                     l3222:
 13548  05BF  1FA7               	btfss	___lodiv@divisor+7,7
 13549  05C0  2DC2               	goto	u991
 13550  05C1  2DC3               	goto	u990
 13551  05C2                     u991:
 13552  05C2  2DB3               	goto	l3218
 13553  05C3                     u990:
 13554  05C3                     l3224:
 13555  05C3  35B1               	lslf	___lodiv@quotient,f
 13556  05C4  0DB2               	rlf	___lodiv@quotient+1,f
 13557  05C5  0DB3               	rlf	___lodiv@quotient+2,f
 13558  05C6  0DB4               	rlf	___lodiv@quotient+3,f
 13559  05C7  0DB5               	rlf	___lodiv@quotient+4,f
 13560  05C8  0DB6               	rlf	___lodiv@quotient+5,f
 13561  05C9  0DB7               	rlf	___lodiv@quotient+6,f
 13562  05CA  0DB8               	rlf	___lodiv@quotient+7,f
 13563  05CB                     l3226:
 13564  05CB  0827               	movf	___lodiv@divisor+7,w
 13565  05CC  022F               	subwf	___lodiv@dividend+7,w
 13566  05CD  1D03               	skipz
 13567  05CE  2DE9               	goto	u1005
 13568  05CF  0826               	movf	___lodiv@divisor+6,w
 13569  05D0  022E               	subwf	___lodiv@dividend+6,w
 13570  05D1  1D03               	skipz
 13571  05D2  2DE9               	goto	u1005
 13572  05D3  0825               	movf	___lodiv@divisor+5,w
 13573  05D4  022D               	subwf	___lodiv@dividend+5,w
 13574  05D5  1D03               	skipz
 13575  05D6  2DE9               	goto	u1005
 13576  05D7  0824               	movf	___lodiv@divisor+4,w
 13577  05D8  022C               	subwf	___lodiv@dividend+4,w
 13578  05D9  1D03               	skipz
 13579  05DA  2DE9               	goto	u1005
 13580  05DB  0823               	movf	___lodiv@divisor+3,w
 13581  05DC  022B               	subwf	___lodiv@dividend+3,w
 13582  05DD  1D03               	skipz
 13583  05DE  2DE9               	goto	u1005
 13584  05DF  0822               	movf	___lodiv@divisor+2,w
 13585  05E0  022A               	subwf	___lodiv@dividend+2,w
 13586  05E1  1D03               	skipz
 13587  05E2  2DE9               	goto	u1005
 13588  05E3  0821               	movf	___lodiv@divisor+1,w
 13589  05E4  0229               	subwf	___lodiv@dividend+1,w
 13590  05E5  1D03               	skipz
 13591  05E6  2DE9               	goto	u1005
 13592  05E7  0820               	movf	___lodiv@divisor,w
 13593  05E8  0228               	subwf	___lodiv@dividend,w
 13594  05E9                     u1005:
 13595  05E9  1C03               	skipc
 13596  05EA  2DEC               	goto	u1001
 13597  05EB  2DED               	goto	u1000
 13598  05EC                     u1001:
 13599  05EC  2DFE               	goto	l3232
 13600  05ED                     u1000:
 13601  05ED                     l3228:
 13602  05ED  0820               	movf	___lodiv@divisor,w
 13603  05EE  02A8               	subwf	___lodiv@dividend,f
 13604  05EF  0821               	movf	___lodiv@divisor+1,w
 13605  05F0  3BA9               	subwfb	___lodiv@dividend+1,f
 13606  05F1  0822               	movf	___lodiv@divisor+2,w
 13607  05F2  3BAA               	subwfb	___lodiv@dividend+2,f
 13608  05F3  0823               	movf	___lodiv@divisor+3,w
 13609  05F4  3BAB               	subwfb	___lodiv@dividend+3,f
 13610  05F5  0824               	movf	___lodiv@divisor+4,w
 13611  05F6  3BAC               	subwfb	___lodiv@dividend+4,f
 13612  05F7  0825               	movf	___lodiv@divisor+5,w
 13613  05F8  3BAD               	subwfb	___lodiv@dividend+5,f
 13614  05F9  0826               	movf	___lodiv@divisor+6,w
 13615  05FA  3BAE               	subwfb	___lodiv@dividend+6,f
 13616  05FB  0827               	movf	___lodiv@divisor+7,w
 13617  05FC  3BAF               	subwfb	___lodiv@dividend+7,f
 13618  05FD                     l3230:
 13619  05FD  1431               	bsf	___lodiv@quotient,0
 13620  05FE                     l3232:
 13621  05FE  36A7               	lsrf	___lodiv@divisor+7,f
 13622  05FF  0CA6               	rrf	___lodiv@divisor+6,f
 13623  0600  0CA5               	rrf	___lodiv@divisor+5,f
 13624  0601  0CA4               	rrf	___lodiv@divisor+4,f
 13625  0602  0CA3               	rrf	___lodiv@divisor+3,f
 13626  0603  0CA2               	rrf	___lodiv@divisor+2,f
 13627  0604  0CA1               	rrf	___lodiv@divisor+1,f
 13628  0605  0CA0               	rrf	___lodiv@divisor,f
 13629  0606  3001               	movlw	1
 13630  0607  02B9               	subwf	___lodiv@counter,f
 13631  0608  1D03               	btfss	3,2
 13632  0609  2E0B               	goto	u1011
 13633  060A  2E0C               	goto	u1010
 13634  060B                     u1011:
 13635  060B  2DC3               	goto	l3224
 13636  060C                     u1010:
 13637  060C                     l1385:
 13638  060C  0831               	movf	___lodiv@quotient,w
 13639  060D  00A0               	movwf	?___lodiv
 13640  060E  0832               	movf	___lodiv@quotient+1,w
 13641  060F  00A1               	movwf	?___lodiv+1
 13642  0610  0833               	movf	___lodiv@quotient+2,w
 13643  0611  00A2               	movwf	?___lodiv+2
 13644  0612  0834               	movf	___lodiv@quotient+3,w
 13645  0613  00A3               	movwf	?___lodiv+3
 13646  0614  0835               	movf	___lodiv@quotient+4,w
 13647  0615  00A4               	movwf	?___lodiv+4
 13648  0616  0836               	movf	___lodiv@quotient+5,w
 13649  0617  00A5               	movwf	?___lodiv+5
 13650  0618  0837               	movf	___lodiv@quotient+6,w
 13651  0619  00A6               	movwf	?___lodiv+6
 13652  061A  0838               	movf	___lodiv@quotient+7,w
 13653  061B  00A7               	movwf	?___lodiv+7
 13654  061C                     l1392:
 13655  061C  0008               	return
 13656  061D                     __end_of___lodiv:
 13657                           
 13658                           	psect	text53
 13659  0264                     __ptext53:	
 13660 ;; *************** function _WritePin *****************
 13661 ;; Defined at:
 13662 ;;		line 148 in file "PIC16Xpress_DevBoard.c"
 13663 ;; Parameters:    Size  Location     Type
 13664 ;;  pin             1    wreg     enum E7144
 13665 ;;  val             1    0[BANK0 ] unsigned char 
 13666 ;; Auto vars:     Size  Location     Type
 13667 ;;  pin             1    3[BANK0 ] enum E7144
 13668 ;; Return value:  Size  Location     Type
 13669 ;;                  1    wreg      unsigned char 
 13670 ;; Registers used:
 13671 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13672 ;; Tracked objects:
 13673 ;;		On entry : 0/0
 13674 ;;		On exit  : 0/0
 13675 ;;		Unchanged: 0/0
 13676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13677 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13678 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13679 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13680 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13681 ;;Total ram usage:        4 bytes
 13682 ;; Hardware stack levels used: 1
 13683 ;; Hardware stack levels required when called: 4
 13684 ;; This function calls:
 13685 ;;		Nothing
 13686 ;; This function is called by:
 13687 ;;		_JSN_Sensor_Init
 13688 ;;		_JSN_Sensor_Trig
 13689 ;;		_SpeakerTone_Init
 13690 ;; This function uses a non-reentrant model
 13691 ;;
 13692                           
 13693  0264                     _WritePin:	
 13694                           ;psect for function _WritePin
 13695                           
 13696                           
 13697                           ;incstack = 0
 13698                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
 13699                           ;WritePin@pin stored from wreg
 13700  0264  0020               	movlb	0	; select bank0
 13701  0265  00A3               	movwf	WritePin@pin
 13702  0266                     l3826:
 13703                           
 13704                           ;PIC16Xpress_DevBoard.c: 149:     switch(pin) {
 13705  0266  2ADE               	goto	l3898
 13706  0267                     l3828:
 13707                           
 13708                           ;PIC16Xpress_DevBoard.c: 151:             LATAbits.LATA5 = val;
 13709  0267  0C20               	rrf	WritePin@val,w
 13710  0268  0022               	movlb	2	; select bank2
 13711  0269  1C03               	skipc
 13712  026A  128C               	bcf	12,5	;volatile
 13713  026B  1803               	skipnc
 13714  026C  168C               	bsf	12,5	;volatile
 13715  026D  2B1E               	goto	l163
 13716  026E                     l3832:
 13717                           
 13718                           ;PIC16Xpress_DevBoard.c: 154:             LATAbits.LATA4 = val;
 13719  026E  0C20               	rrf	WritePin@val,w
 13720  026F  0022               	movlb	2	; select bank2
 13721  0270  1C03               	skipc
 13722  0271  120C               	bcf	12,4	;volatile
 13723  0272  1803               	skipnc
 13724  0273  160C               	bsf	12,4	;volatile
 13725  0274  2B1E               	goto	l163
 13726  0275                     l3836:
 13727                           
 13728                           ;PIC16Xpress_DevBoard.c: 159:             LATCbits.LATC5 = val;
 13729  0275  0C20               	rrf	WritePin@val,w
 13730  0276  0022               	movlb	2	; select bank2
 13731  0277  1C03               	skipc
 13732  0278  128E               	bcf	14,5	;volatile
 13733  0279  1803               	skipnc
 13734  027A  168E               	bsf	14,5	;volatile
 13735  027B  2B1E               	goto	l163
 13736  027C                     l3840:
 13737                           
 13738                           ;PIC16Xpress_DevBoard.c: 162:             LATCbits.LATC4 = val;
 13739  027C  0C20               	rrf	WritePin@val,w
 13740  027D  0022               	movlb	2	; select bank2
 13741  027E  1C03               	skipc
 13742  027F  120E               	bcf	14,4	;volatile
 13743  0280  1803               	skipnc
 13744  0281  160E               	bsf	14,4	;volatile
 13745  0282  2B1E               	goto	l163
 13746  0283                     l3844:
 13747                           
 13748                           ;PIC16Xpress_DevBoard.c: 165:             LATCbits.LATC3 = val;
 13749  0283  0C20               	rrf	WritePin@val,w
 13750  0284  0022               	movlb	2	; select bank2
 13751  0285  1C03               	skipc
 13752  0286  118E               	bcf	14,3	;volatile
 13753  0287  1803               	skipnc
 13754  0288  158E               	bsf	14,3	;volatile
 13755  0289  2B1E               	goto	l163
 13756  028A                     l3848:
 13757                           
 13758                           ;PIC16Xpress_DevBoard.c: 168:             LATCbits.LATC6 = val;
 13759  028A  0C20               	rrf	WritePin@val,w
 13760  028B  0022               	movlb	2	; select bank2
 13761  028C  1C03               	skipc
 13762  028D  130E               	bcf	14,6	;volatile
 13763  028E  1803               	skipnc
 13764  028F  170E               	bsf	14,6	;volatile
 13765  0290  2B1E               	goto	l163
 13766  0291                     l3852:
 13767                           
 13768                           ;PIC16Xpress_DevBoard.c: 171:             LATCbits.LATC7 = val;
 13769  0291  0C20               	rrf	WritePin@val,w
 13770  0292  0022               	movlb	2	; select bank2
 13771  0293  1C03               	skipc
 13772  0294  138E               	bcf	14,7	;volatile
 13773  0295  1803               	skipnc
 13774  0296  178E               	bsf	14,7	;volatile
 13775  0297  2B1E               	goto	l163
 13776  0298                     l3856:
 13777                           
 13778                           ;PIC16Xpress_DevBoard.c: 174:             LATBbits.LATB7 = val;
 13779  0298  0C20               	rrf	WritePin@val,w
 13780  0299  0022               	movlb	2	; select bank2
 13781  029A  1C03               	skipc
 13782  029B  138D               	bcf	13,7	;volatile
 13783  029C  1803               	skipnc
 13784  029D  178D               	bsf	13,7	;volatile
 13785  029E  2B1E               	goto	l163
 13786  029F                     l3860:
 13787                           
 13788                           ;PIC16Xpress_DevBoard.c: 177:             LATAbits.LATA0 = val;
 13789  029F  0C20               	rrf	WritePin@val,w
 13790  02A0  0022               	movlb	2	; select bank2
 13791  02A1  1C03               	skipc
 13792  02A2  100C               	bcf	12,0	;volatile
 13793  02A3  1803               	skipnc
 13794  02A4  140C               	bsf	12,0	;volatile
 13795  02A5  2B1E               	goto	l163
 13796  02A6                     l3864:
 13797                           
 13798                           ;PIC16Xpress_DevBoard.c: 180:             LATAbits.LATA1 = val;
 13799  02A6  0C20               	rrf	WritePin@val,w
 13800  02A7  0022               	movlb	2	; select bank2
 13801  02A8  1C03               	skipc
 13802  02A9  108C               	bcf	12,1	;volatile
 13803  02AA  1803               	skipnc
 13804  02AB  148C               	bsf	12,1	;volatile
 13805  02AC  2B1E               	goto	l163
 13806  02AD                     l3868:
 13807                           
 13808                           ;PIC16Xpress_DevBoard.c: 183:             LATAbits.LATA2 = val;
 13809  02AD  0C20               	rrf	WritePin@val,w
 13810  02AE  0022               	movlb	2	; select bank2
 13811  02AF  1C03               	skipc
 13812  02B0  110C               	bcf	12,2	;volatile
 13813  02B1  1803               	skipnc
 13814  02B2  150C               	bsf	12,2	;volatile
 13815  02B3  2B1E               	goto	l163
 13816  02B4                     l3872:
 13817                           
 13818                           ;PIC16Xpress_DevBoard.c: 186:             LATCbits.LATC0 = val;
 13819  02B4  0C20               	rrf	WritePin@val,w
 13820  02B5  0022               	movlb	2	; select bank2
 13821  02B6  1C03               	skipc
 13822  02B7  100E               	bcf	14,0	;volatile
 13823  02B8  1803               	skipnc
 13824  02B9  140E               	bsf	14,0	;volatile
 13825  02BA  2B1E               	goto	l163
 13826  02BB                     l3876:
 13827                           
 13828                           ;PIC16Xpress_DevBoard.c: 189:             LATCbits.LATC1 = val;
 13829  02BB  0C20               	rrf	WritePin@val,w
 13830  02BC  0022               	movlb	2	; select bank2
 13831  02BD  1C03               	skipc
 13832  02BE  108E               	bcf	14,1	;volatile
 13833  02BF  1803               	skipnc
 13834  02C0  148E               	bsf	14,1	;volatile
 13835  02C1  2B1E               	goto	l163
 13836  02C2                     l3880:
 13837                           
 13838                           ;PIC16Xpress_DevBoard.c: 192:             LATCbits.LATC2 = val;
 13839  02C2  0C20               	rrf	WritePin@val,w
 13840  02C3  0022               	movlb	2	; select bank2
 13841  02C4  1C03               	skipc
 13842  02C5  110E               	bcf	14,2	;volatile
 13843  02C6  1803               	skipnc
 13844  02C7  150E               	bsf	14,2	;volatile
 13845  02C8  2B1E               	goto	l163
 13846  02C9                     l3884:
 13847                           
 13848                           ;PIC16Xpress_DevBoard.c: 195:             LATBbits.LATB4 = val;
 13849  02C9  0C20               	rrf	WritePin@val,w
 13850  02CA  0022               	movlb	2	; select bank2
 13851  02CB  1C03               	skipc
 13852  02CC  120D               	bcf	13,4	;volatile
 13853  02CD  1803               	skipnc
 13854  02CE  160D               	bsf	13,4	;volatile
 13855  02CF  2B1E               	goto	l163
 13856  02D0                     l3888:
 13857                           
 13858                           ;PIC16Xpress_DevBoard.c: 198:             LATBbits.LATB5 = val;
 13859  02D0  0C20               	rrf	WritePin@val,w
 13860  02D1  0022               	movlb	2	; select bank2
 13861  02D2  1C03               	skipc
 13862  02D3  128D               	bcf	13,5	;volatile
 13863  02D4  1803               	skipnc
 13864  02D5  168D               	bsf	13,5	;volatile
 13865  02D6  2B1E               	goto	l163
 13866  02D7                     l3892:
 13867                           
 13868                           ;PIC16Xpress_DevBoard.c: 201:             LATBbits.LATB6 = val;
 13869  02D7  0C20               	rrf	WritePin@val,w
 13870  02D8  0022               	movlb	2	; select bank2
 13871  02D9  1C03               	skipc
 13872  02DA  130D               	bcf	13,6	;volatile
 13873  02DB  1803               	skipnc
 13874  02DC  170D               	bsf	13,6	;volatile
 13875  02DD  2B1E               	goto	l163
 13876  02DE                     l3898:
 13877  02DE  0823               	movf	WritePin@pin,w
 13878  02DF  00A1               	movwf	??_WritePin
 13879  02E0  01A2               	clrf	??_WritePin+1
 13880                           
 13881                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13882                           ; Switch size 1, requested type "simple"
 13883                           ; Number of cases is 1, Range of values is 0 to 0
 13884                           ; switch strategies available:
 13885                           ; Name         Instructions Cycles
 13886                           ; simple_byte            4     3 (average)
 13887                           ; direct_byte            8     6 (fixed)
 13888                           ; jumptable            260     6 (fixed)
 13889                           ;	Chosen strategy is simple_byte
 13890  02E1  0822               	movf	??_WritePin+1,w
 13891  02E2  3A00               	xorlw	0	; case 0
 13892  02E3  1903               	skipnz
 13893  02E4  2AE6               	goto	l4600
 13894  02E5  2B1E               	goto	l163
 13895  02E6                     l4600:
 13896                           
 13897                           ; Switch size 1, requested type "simple"
 13898                           ; Number of cases is 18, Range of values is 0 to 17
 13899                           ; switch strategies available:
 13900                           ; Name         Instructions Cycles
 13901                           ; direct_byte           42     6 (fixed)
 13902                           ; simple_byte           55    28 (average)
 13903                           ; jumptable            260     6 (fixed)
 13904                           ;	Chosen strategy is simple_byte
 13905  02E6  0821               	movf	??_WritePin,w
 13906  02E7  3A00               	xorlw	0	; case 0
 13907  02E8  1903               	skipnz
 13908  02E9  2A67               	goto	l3828
 13909  02EA  3A01               	xorlw	1	; case 1
 13910  02EB  1903               	skipnz
 13911  02EC  2A6E               	goto	l3832
 13912  02ED  3A03               	xorlw	3	; case 2
 13913  02EE  1903               	skipnz
 13914  02EF  2B1E               	goto	l163
 13915  02F0  3A01               	xorlw	1	; case 3
 13916  02F1  1903               	skipnz
 13917  02F2  2A75               	goto	l3836
 13918  02F3  3A07               	xorlw	7	; case 4
 13919  02F4  1903               	skipnz
 13920  02F5  2A7C               	goto	l3840
 13921  02F6  3A01               	xorlw	1	; case 5
 13922  02F7  1903               	skipnz
 13923  02F8  2A83               	goto	l3844
 13924  02F9  3A03               	xorlw	3	; case 6
 13925  02FA  1903               	skipnz
 13926  02FB  2A8A               	goto	l3848
 13927  02FC  3A01               	xorlw	1	; case 7
 13928  02FD  1903               	skipnz
 13929  02FE  2A91               	goto	l3852
 13930  02FF  3A0F               	xorlw	15	; case 8
 13931  0300  1903               	skipnz
 13932  0301  2A98               	goto	l3856
 13933  0302  3A01               	xorlw	1	; case 9
 13934  0303  1903               	skipnz
 13935  0304  2A9F               	goto	l3860
 13936  0305  3A03               	xorlw	3	; case 10
 13937  0306  1903               	skipnz
 13938  0307  2AA6               	goto	l3864
 13939  0308  3A01               	xorlw	1	; case 11
 13940  0309  1903               	skipnz
 13941  030A  2AAD               	goto	l3868
 13942  030B  3A07               	xorlw	7	; case 12
 13943  030C  1903               	skipnz
 13944  030D  2AB4               	goto	l3872
 13945  030E  3A01               	xorlw	1	; case 13
 13946  030F  1903               	skipnz
 13947  0310  2ABB               	goto	l3876
 13948  0311  3A03               	xorlw	3	; case 14
 13949  0312  1903               	skipnz
 13950  0313  2AC2               	goto	l3880
 13951  0314  3A01               	xorlw	1	; case 15
 13952  0315  1903               	skipnz
 13953  0316  2AC9               	goto	l3884
 13954  0317  3A1F               	xorlw	31	; case 16
 13955  0318  1903               	skipnz
 13956  0319  2AD0               	goto	l3888
 13957  031A  3A01               	xorlw	1	; case 17
 13958  031B  1903               	skipnz
 13959  031C  2AD7               	goto	l3892
 13960  031D  2B1E               	goto	l163
 13961  031E                     l163:
 13962  031E  0008               	return
 13963  031F                     __end_of_WritePin:
 13964                           
 13965                           	psect	text54
 13966  031F                     __ptext54:	
 13967 ;; *************** function _SetPin *****************
 13968 ;; Defined at:
 13969 ;;		line 41 in file "PIC16Xpress_DevBoard.c"
 13970 ;; Parameters:    Size  Location     Type
 13971 ;;  pin             1    wreg     enum E7144
 13972 ;;  io              1    0[BANK0 ] unsigned char 
 13973 ;; Auto vars:     Size  Location     Type
 13974 ;;  pin             1    3[BANK0 ] enum E7144
 13975 ;; Return value:  Size  Location     Type
 13976 ;;                  1    wreg      unsigned char 
 13977 ;; Registers used:
 13978 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13979 ;; Tracked objects:
 13980 ;;		On entry : 0/0
 13981 ;;		On exit  : 0/0
 13982 ;;		Unchanged: 0/0
 13983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13984 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13985 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13986 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13987 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13988 ;;Total ram usage:        4 bytes
 13989 ;; Hardware stack levels used: 1
 13990 ;; Hardware stack levels required when called: 4
 13991 ;; This function calls:
 13992 ;;		Nothing
 13993 ;; This function is called by:
 13994 ;;		_JSN_Sensor_Init
 13995 ;;		_SpeakerTone_Init
 13996 ;; This function uses a non-reentrant model
 13997 ;;
 13998                           
 13999  031F                     _SetPin:	
 14000                           ;psect for function _SetPin
 14001                           
 14002                           
 14003                           ;incstack = 0
 14004                           ; Regs used in _SetPin: [wreg-fsr0h+status,2+status,0]
 14005                           ;SetPin@pin stored from wreg
 14006  031F  0020               	movlb	0	; select bank0
 14007  0320  00A3               	movwf	SetPin@pin
 14008  0321                     l3740:
 14009                           
 14010                           ;PIC16Xpress_DevBoard.c: 42:     switch(pin) {
 14011  0321  2B99               	goto	l3812
 14012  0322                     l3742:
 14013                           
 14014                           ;PIC16Xpress_DevBoard.c: 44:             TRISAbits.TRISA5 = io;
 14015  0322  0C20               	rrf	SetPin@io,w
 14016  0323  0021               	movlb	1	; select bank1
 14017  0324  1C03               	skipc
 14018  0325  128C               	bcf	12,5	;volatile
 14019  0326  1803               	skipnc
 14020  0327  168C               	bsf	12,5	;volatile
 14021  0328  2BD9               	goto	l115
 14022  0329                     l3746:
 14023                           
 14024                           ;PIC16Xpress_DevBoard.c: 47:             TRISAbits.TRISA4 = io;
 14025  0329  0C20               	rrf	SetPin@io,w
 14026  032A  0021               	movlb	1	; select bank1
 14027  032B  1C03               	skipc
 14028  032C  120C               	bcf	12,4	;volatile
 14029  032D  1803               	skipnc
 14030  032E  160C               	bsf	12,4	;volatile
 14031  032F  2BD9               	goto	l115
 14032  0330                     l3750:
 14033                           
 14034                           ;PIC16Xpress_DevBoard.c: 52:             TRISCbits.TRISC5 = io;
 14035  0330  0C20               	rrf	SetPin@io,w
 14036  0331  0021               	movlb	1	; select bank1
 14037  0332  1C03               	skipc
 14038  0333  128E               	bcf	14,5	;volatile
 14039  0334  1803               	skipnc
 14040  0335  168E               	bsf	14,5	;volatile
 14041  0336  2BD9               	goto	l115
 14042  0337                     l3754:
 14043                           
 14044                           ;PIC16Xpress_DevBoard.c: 55:             TRISCbits.TRISC4 = io;
 14045  0337  0C20               	rrf	SetPin@io,w
 14046  0338  0021               	movlb	1	; select bank1
 14047  0339  1C03               	skipc
 14048  033A  120E               	bcf	14,4	;volatile
 14049  033B  1803               	skipnc
 14050  033C  160E               	bsf	14,4	;volatile
 14051  033D  2BD9               	goto	l115
 14052  033E                     l3758:
 14053                           
 14054                           ;PIC16Xpress_DevBoard.c: 58:             TRISCbits.TRISC3 = io;
 14055  033E  0C20               	rrf	SetPin@io,w
 14056  033F  0021               	movlb	1	; select bank1
 14057  0340  1C03               	skipc
 14058  0341  118E               	bcf	14,3	;volatile
 14059  0342  1803               	skipnc
 14060  0343  158E               	bsf	14,3	;volatile
 14061  0344  2BD9               	goto	l115
 14062  0345                     l3762:
 14063                           
 14064                           ;PIC16Xpress_DevBoard.c: 61:             TRISCbits.TRISC6 = io;
 14065  0345  0C20               	rrf	SetPin@io,w
 14066  0346  0021               	movlb	1	; select bank1
 14067  0347  1C03               	skipc
 14068  0348  130E               	bcf	14,6	;volatile
 14069  0349  1803               	skipnc
 14070  034A  170E               	bsf	14,6	;volatile
 14071  034B  2BD9               	goto	l115
 14072  034C                     l3766:
 14073                           
 14074                           ;PIC16Xpress_DevBoard.c: 64:             TRISCbits.TRISC7 = io;
 14075  034C  0C20               	rrf	SetPin@io,w
 14076  034D  0021               	movlb	1	; select bank1
 14077  034E  1C03               	skipc
 14078  034F  138E               	bcf	14,7	;volatile
 14079  0350  1803               	skipnc
 14080  0351  178E               	bsf	14,7	;volatile
 14081  0352  2BD9               	goto	l115
 14082  0353                     l3770:
 14083                           
 14084                           ;PIC16Xpress_DevBoard.c: 67:             TRISBbits.TRISB7 = io;
 14085  0353  0C20               	rrf	SetPin@io,w
 14086  0354  0021               	movlb	1	; select bank1
 14087  0355  1C03               	skipc
 14088  0356  138D               	bcf	13,7	;volatile
 14089  0357  1803               	skipnc
 14090  0358  178D               	bsf	13,7	;volatile
 14091  0359  2BD9               	goto	l115
 14092  035A                     l3774:
 14093                           
 14094                           ;PIC16Xpress_DevBoard.c: 70:             TRISAbits.TRISA0 = io;
 14095  035A  0C20               	rrf	SetPin@io,w
 14096  035B  0021               	movlb	1	; select bank1
 14097  035C  1C03               	skipc
 14098  035D  100C               	bcf	12,0	;volatile
 14099  035E  1803               	skipnc
 14100  035F  140C               	bsf	12,0	;volatile
 14101  0360  2BD9               	goto	l115
 14102  0361                     l3778:
 14103                           
 14104                           ;PIC16Xpress_DevBoard.c: 73:             TRISAbits.TRISA1 = io;
 14105  0361  0C20               	rrf	SetPin@io,w
 14106  0362  0021               	movlb	1	; select bank1
 14107  0363  1C03               	skipc
 14108  0364  108C               	bcf	12,1	;volatile
 14109  0365  1803               	skipnc
 14110  0366  148C               	bsf	12,1	;volatile
 14111  0367  2BD9               	goto	l115
 14112  0368                     l3782:
 14113                           
 14114                           ;PIC16Xpress_DevBoard.c: 76:             TRISAbits.TRISA2 = io;
 14115  0368  0C20               	rrf	SetPin@io,w
 14116  0369  0021               	movlb	1	; select bank1
 14117  036A  1C03               	skipc
 14118  036B  110C               	bcf	12,2	;volatile
 14119  036C  1803               	skipnc
 14120  036D  150C               	bsf	12,2	;volatile
 14121  036E  2BD9               	goto	l115
 14122  036F                     l3786:
 14123                           
 14124                           ;PIC16Xpress_DevBoard.c: 79:             TRISCbits.TRISC0 = io;
 14125  036F  0C20               	rrf	SetPin@io,w
 14126  0370  0021               	movlb	1	; select bank1
 14127  0371  1C03               	skipc
 14128  0372  100E               	bcf	14,0	;volatile
 14129  0373  1803               	skipnc
 14130  0374  140E               	bsf	14,0	;volatile
 14131  0375  2BD9               	goto	l115
 14132  0376                     l3790:
 14133                           
 14134                           ;PIC16Xpress_DevBoard.c: 82:             TRISCbits.TRISC1 = io;
 14135  0376  0C20               	rrf	SetPin@io,w
 14136  0377  0021               	movlb	1	; select bank1
 14137  0378  1C03               	skipc
 14138  0379  108E               	bcf	14,1	;volatile
 14139  037A  1803               	skipnc
 14140  037B  148E               	bsf	14,1	;volatile
 14141  037C  2BD9               	goto	l115
 14142  037D                     l3794:
 14143                           
 14144                           ;PIC16Xpress_DevBoard.c: 85:             TRISCbits.TRISC2 = io;
 14145  037D  0C20               	rrf	SetPin@io,w
 14146  037E  0021               	movlb	1	; select bank1
 14147  037F  1C03               	skipc
 14148  0380  110E               	bcf	14,2	;volatile
 14149  0381  1803               	skipnc
 14150  0382  150E               	bsf	14,2	;volatile
 14151  0383  2BD9               	goto	l115
 14152  0384                     l3798:
 14153                           
 14154                           ;PIC16Xpress_DevBoard.c: 88:             TRISBbits.TRISB4 = io;
 14155  0384  0C20               	rrf	SetPin@io,w
 14156  0385  0021               	movlb	1	; select bank1
 14157  0386  1C03               	skipc
 14158  0387  120D               	bcf	13,4	;volatile
 14159  0388  1803               	skipnc
 14160  0389  160D               	bsf	13,4	;volatile
 14161  038A  2BD9               	goto	l115
 14162  038B                     l3802:
 14163                           
 14164                           ;PIC16Xpress_DevBoard.c: 91:             TRISBbits.TRISB5 = io;
 14165  038B  0C20               	rrf	SetPin@io,w
 14166  038C  0021               	movlb	1	; select bank1
 14167  038D  1C03               	skipc
 14168  038E  128D               	bcf	13,5	;volatile
 14169  038F  1803               	skipnc
 14170  0390  168D               	bsf	13,5	;volatile
 14171  0391  2BD9               	goto	l115
 14172  0392                     l3806:
 14173                           
 14174                           ;PIC16Xpress_DevBoard.c: 94:             TRISBbits.TRISB6 = io;
 14175  0392  0C20               	rrf	SetPin@io,w
 14176  0393  0021               	movlb	1	; select bank1
 14177  0394  1C03               	skipc
 14178  0395  130D               	bcf	13,6	;volatile
 14179  0396  1803               	skipnc
 14180  0397  170D               	bsf	13,6	;volatile
 14181  0398  2BD9               	goto	l115
 14182  0399                     l3812:
 14183  0399  0823               	movf	SetPin@pin,w
 14184  039A  00A1               	movwf	??_SetPin
 14185  039B  01A2               	clrf	??_SetPin+1
 14186                           
 14187                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14188                           ; Switch size 1, requested type "simple"
 14189                           ; Number of cases is 1, Range of values is 0 to 0
 14190                           ; switch strategies available:
 14191                           ; Name         Instructions Cycles
 14192                           ; simple_byte            4     3 (average)
 14193                           ; direct_byte            8     6 (fixed)
 14194                           ; jumptable            260     6 (fixed)
 14195                           ;	Chosen strategy is simple_byte
 14196  039C  0822               	movf	??_SetPin+1,w
 14197  039D  3A00               	xorlw	0	; case 0
 14198  039E  1903               	skipnz
 14199  039F  2BA1               	goto	l4602
 14200  03A0  2BD9               	goto	l115
 14201  03A1                     l4602:
 14202                           
 14203                           ; Switch size 1, requested type "simple"
 14204                           ; Number of cases is 18, Range of values is 0 to 17
 14205                           ; switch strategies available:
 14206                           ; Name         Instructions Cycles
 14207                           ; direct_byte           42     6 (fixed)
 14208                           ; simple_byte           55    28 (average)
 14209                           ; jumptable            260     6 (fixed)
 14210                           ;	Chosen strategy is simple_byte
 14211  03A1  0821               	movf	??_SetPin,w
 14212  03A2  3A00               	xorlw	0	; case 0
 14213  03A3  1903               	skipnz
 14214  03A4  2B22               	goto	l3742
 14215  03A5  3A01               	xorlw	1	; case 1
 14216  03A6  1903               	skipnz
 14217  03A7  2B29               	goto	l3746
 14218  03A8  3A03               	xorlw	3	; case 2
 14219  03A9  1903               	skipnz
 14220  03AA  2BD9               	goto	l115
 14221  03AB  3A01               	xorlw	1	; case 3
 14222  03AC  1903               	skipnz
 14223  03AD  2B30               	goto	l3750
 14224  03AE  3A07               	xorlw	7	; case 4
 14225  03AF  1903               	skipnz
 14226  03B0  2B37               	goto	l3754
 14227  03B1  3A01               	xorlw	1	; case 5
 14228  03B2  1903               	skipnz
 14229  03B3  2B3E               	goto	l3758
 14230  03B4  3A03               	xorlw	3	; case 6
 14231  03B5  1903               	skipnz
 14232  03B6  2B45               	goto	l3762
 14233  03B7  3A01               	xorlw	1	; case 7
 14234  03B8  1903               	skipnz
 14235  03B9  2B4C               	goto	l3766
 14236  03BA  3A0F               	xorlw	15	; case 8
 14237  03BB  1903               	skipnz
 14238  03BC  2B53               	goto	l3770
 14239  03BD  3A01               	xorlw	1	; case 9
 14240  03BE  1903               	skipnz
 14241  03BF  2B5A               	goto	l3774
 14242  03C0  3A03               	xorlw	3	; case 10
 14243  03C1  1903               	skipnz
 14244  03C2  2B61               	goto	l3778
 14245  03C3  3A01               	xorlw	1	; case 11
 14246  03C4  1903               	skipnz
 14247  03C5  2B68               	goto	l3782
 14248  03C6  3A07               	xorlw	7	; case 12
 14249  03C7  1903               	skipnz
 14250  03C8  2B6F               	goto	l3786
 14251  03C9  3A01               	xorlw	1	; case 13
 14252  03CA  1903               	skipnz
 14253  03CB  2B76               	goto	l3790
 14254  03CC  3A03               	xorlw	3	; case 14
 14255  03CD  1903               	skipnz
 14256  03CE  2B7D               	goto	l3794
 14257  03CF  3A01               	xorlw	1	; case 15
 14258  03D0  1903               	skipnz
 14259  03D1  2B84               	goto	l3798
 14260  03D2  3A1F               	xorlw	31	; case 16
 14261  03D3  1903               	skipnz
 14262  03D4  2B8B               	goto	l3802
 14263  03D5  3A01               	xorlw	1	; case 17
 14264  03D6  1903               	skipnz
 14265  03D7  2B92               	goto	l3806
 14266  03D8  2BD9               	goto	l115
 14267  03D9                     l115:
 14268  03D9  0008               	return
 14269  03DA                     __end_of_SetPin:
 14270                           
 14271                           	psect	text55
 14272  0F34                     __ptext55:	
 14273 ;; *************** function _JSN_Sensor_GetDistance *****************
 14274 ;; Defined at:
 14275 ;;		line 106 in file "JSN_Sensor.c"
 14276 ;; Parameters:    Size  Location     Type
 14277 ;;  Sensor          1    wreg     PTR struct .
 14278 ;;		 -> NULL(0), Sens3(6), Sens2(6), Sens1(6), 
 14279 ;; Auto vars:     Size  Location     Type
 14280 ;;  Sensor          1   30[BANK0 ] PTR struct .
 14281 ;;		 -> NULL(0), Sens3(6), Sens2(6), Sens1(6), 
 14282 ;; Return value:  Size  Location     Type
 14283 ;;                  2   26[BANK0 ] unsigned int 
 14284 ;; Registers used:
 14285 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14286 ;; Tracked objects:
 14287 ;;		On entry : 0/0
 14288 ;;		On exit  : 0/0
 14289 ;;		Unchanged: 0/0
 14290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14291 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14292 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14293 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14294 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14295 ;;Total ram usage:        5 bytes
 14296 ;; Hardware stack levels used: 1
 14297 ;; Hardware stack levels required when called: 5
 14298 ;; This function calls:
 14299 ;;		___lldiv
 14300 ;;		___lmul
 14301 ;; This function is called by:
 14302 ;;		_main
 14303 ;; This function uses a non-reentrant model
 14304 ;;
 14305                           
 14306  0F34                     _JSN_Sensor_GetDistance:	
 14307                           ;psect for function _JSN_Sensor_GetDistance
 14308                           
 14309                           
 14310                           ;incstack = 0
 14311                           ; Regs used in _JSN_Sensor_GetDistance: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 14312                           ;JSN_Sensor_GetDistance@Sensor stored from wreg
 14313  0F34  0020               	movlb	0	; select bank0
 14314  0F35  00BE               	movwf	JSN_Sensor_GetDistance@Sensor
 14315  0F36                     l4098:
 14316                           
 14317                           ;JSN_Sensor.c: 111:     Sensor->distance = (unsigned int) (((uint32_t) Sensor->echoHighT
      +                          ime *
 14318  0F36  3000               	movlw	0
 14319  0F37  00AF               	movwf	___lldiv@divisor+3
 14320  0F38  3000               	movlw	0
 14321  0F39  00AE               	movwf	___lldiv@divisor+2
 14322  0F3A  3007               	movlw	7
 14323  0F3B  00AD               	movwf	___lldiv@divisor+1
 14324  0F3C  30D0               	movlw	208
 14325  0F3D  00AC               	movwf	___lldiv@divisor
 14326  0F3E  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 14327  0F3F  0086               	movwf	6
 14328  0F40  3001               	movlw	1	; select bank2/3
 14329  0F41  0087               	movwf	7
 14330  0F42  3F40               	moviw [0]fsr1
 14331  0F43  00BC               	movwf	??_JSN_Sensor_GetDistance
 14332  0F44  3F41               	moviw [1]fsr1
 14333  0F45  00BD               	movwf	??_JSN_Sensor_GetDistance+1
 14334  0F46  083C               	movf	??_JSN_Sensor_GetDistance,w
 14335  0F47  00A0               	movwf	___lmul@multiplier
 14336  0F48  083D               	movf	??_JSN_Sensor_GetDistance+1,w
 14337  0F49  00A1               	movwf	___lmul@multiplier+1
 14338  0F4A  01A2               	clrf	___lmul@multiplier+2
 14339  0F4B  01A3               	clrf	___lmul@multiplier+3
 14340  0F4C  3000               	movlw	0
 14341  0F4D  00A7               	movwf	___lmul@multiplicand+3
 14342  0F4E  3000               	movlw	0
 14343  0F4F  00A6               	movwf	___lmul@multiplicand+2
 14344  0F50  3001               	movlw	1
 14345  0F51  00A5               	movwf	___lmul@multiplicand+1
 14346  0F52  3057               	movlw	87
 14347  0F53  00A4               	movwf	___lmul@multiplicand
 14348  0F54  318D  25D7  318F   	fcall	___lmul
 14349  0F57  0020               	movlb	0	; select bank0
 14350  0F58  0823               	movf	?___lmul+3,w
 14351  0F59  00B3               	movwf	___lldiv@dividend+3
 14352  0F5A  0822               	movf	?___lmul+2,w
 14353  0F5B  00B2               	movwf	___lldiv@dividend+2
 14354  0F5C  0821               	movf	?___lmul+1,w
 14355  0F5D  00B1               	movwf	___lldiv@dividend+1
 14356  0F5E  0820               	movf	?___lmul,w
 14357  0F5F  00B0               	movwf	___lldiv@dividend
 14358  0F60  3186  268E  318F   	fcall	___lldiv
 14359  0F63  0020               	movlb	0	; select bank0
 14360  0F64  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 14361  0F65  3E02               	addlw	2
 14362  0F66  0086               	movwf	6
 14363  0F67  3001               	movlw	1	; select bank2/3
 14364  0F68  0087               	movwf	7
 14365  0F69  082C               	movf	?___lldiv,w
 14366  0F6A  3FC0               	movwi [0]fsr1
 14367  0F6B  082D               	movf	?___lldiv+1,w
 14368  0F6C  3FC1               	movwi [1]fsr1
 14369  0F6D                     l4100:
 14370                           
 14371                           ;JSN_Sensor.c: 113:     return Sensor->distance;
 14372  0F6D  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 14373  0F6E  3E02               	addlw	2
 14374  0F6F  0086               	movwf	6
 14375  0F70  3001               	movlw	1	; select bank2/3
 14376  0F71  0087               	movwf	7
 14377  0F72  3F40               	moviw [0]fsr1
 14378  0F73  00BA               	movwf	?_JSN_Sensor_GetDistance
 14379  0F74  3F41               	moviw [1]fsr1
 14380  0F75  00BB               	movwf	?_JSN_Sensor_GetDistance+1
 14381  0F76                     l53:
 14382  0F76  0008               	return
 14383  0F77                     __end_of_JSN_Sensor_GetDistance:
 14384                           
 14385                           	psect	text56
 14386  0DD7                     __ptext56:	
 14387 ;; *************** function ___lmul *****************
 14388 ;; Defined at:
 14389 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul32.c"
 14390 ;; Parameters:    Size  Location     Type
 14391 ;;  multiplier      4    0[BANK0 ] unsigned long 
 14392 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 14393 ;; Auto vars:     Size  Location     Type
 14394 ;;  product         4    8[BANK0 ] unsigned long 
 14395 ;; Return value:  Size  Location     Type
 14396 ;;                  4    0[BANK0 ] unsigned long 
 14397 ;; Registers used:
 14398 ;;		wreg, status,2, status,0
 14399 ;; Tracked objects:
 14400 ;;		On entry : 0/0
 14401 ;;		On exit  : 0/0
 14402 ;;		Unchanged: 0/0
 14403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14404 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14405 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14407 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14408 ;;Total ram usage:       12 bytes
 14409 ;; Hardware stack levels used: 1
 14410 ;; Hardware stack levels required when called: 4
 14411 ;; This function calls:
 14412 ;;		Nothing
 14413 ;; This function is called by:
 14414 ;;		_JSN_Sensor_GetDistance
 14415 ;;		_MotorControl_SetIntensity
 14416 ;; This function uses a non-reentrant model
 14417 ;;
 14418                           
 14419  0DD7                     ___lmul:	
 14420                           ;psect for function ___lmul
 14421                           
 14422  0DD7                     l4000:	
 14423                           ;incstack = 0
 14424                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 14425                           
 14426  0DD7  3000               	movlw	0
 14427  0DD8  0020               	movlb	0	; select bank0
 14428  0DD9  00AB               	movwf	___lmul@product+3
 14429  0DDA  3000               	movlw	0
 14430  0DDB  00AA               	movwf	___lmul@product+2
 14431  0DDC  3000               	movlw	0
 14432  0DDD  00A9               	movwf	___lmul@product+1
 14433  0DDE  3000               	movlw	0
 14434  0DDF  00A8               	movwf	___lmul@product
 14435  0DE0                     l4002:
 14436  0DE0  1C20               	btfss	___lmul@multiplier,0
 14437  0DE1  2DE3               	goto	u1301
 14438  0DE2  2DE4               	goto	u1300
 14439  0DE3                     u1301:
 14440  0DE3  2DEC               	goto	l4006
 14441  0DE4                     u1300:
 14442  0DE4                     l4004:
 14443  0DE4  0824               	movf	___lmul@multiplicand,w
 14444  0DE5  07A8               	addwf	___lmul@product,f
 14445  0DE6  0825               	movf	___lmul@multiplicand+1,w
 14446  0DE7  3DA9               	addwfc	___lmul@product+1,f
 14447  0DE8  0826               	movf	___lmul@multiplicand+2,w
 14448  0DE9  3DAA               	addwfc	___lmul@product+2,f
 14449  0DEA  0827               	movf	___lmul@multiplicand+3,w
 14450  0DEB  3DAB               	addwfc	___lmul@product+3,f
 14451  0DEC                     l4006:
 14452  0DEC  3001               	movlw	1
 14453  0DED                     u1315:
 14454  0DED  35A4               	lslf	___lmul@multiplicand,f
 14455  0DEE  0DA5               	rlf	___lmul@multiplicand+1,f
 14456  0DEF  0DA6               	rlf	___lmul@multiplicand+2,f
 14457  0DF0  0DA7               	rlf	___lmul@multiplicand+3,f
 14458  0DF1  0B89               	decfsz	9,f
 14459  0DF2  2DED               	goto	u1315
 14460  0DF3                     l4008:
 14461  0DF3  3001               	movlw	1
 14462  0DF4                     u1325:
 14463  0DF4  36A3               	lsrf	___lmul@multiplier+3,f
 14464  0DF5  0CA2               	rrf	___lmul@multiplier+2,f
 14465  0DF6  0CA1               	rrf	___lmul@multiplier+1,f
 14466  0DF7  0CA0               	rrf	___lmul@multiplier,f
 14467  0DF8  0B89               	decfsz	9,f
 14468  0DF9  2DF4               	goto	u1325
 14469  0DFA  0823               	movf	___lmul@multiplier+3,w
 14470  0DFB  0422               	iorwf	___lmul@multiplier+2,w
 14471  0DFC  0421               	iorwf	___lmul@multiplier+1,w
 14472  0DFD  0420               	iorwf	___lmul@multiplier,w
 14473  0DFE  1D03               	skipz
 14474  0DFF  2E01               	goto	u1331
 14475  0E00  2E02               	goto	u1330
 14476  0E01                     u1331:
 14477  0E01  2DE0               	goto	l4002
 14478  0E02                     u1330:
 14479  0E02                     l4010:
 14480  0E02  082B               	movf	___lmul@product+3,w
 14481  0E03  00A3               	movwf	?___lmul+3
 14482  0E04  082A               	movf	___lmul@product+2,w
 14483  0E05  00A2               	movwf	?___lmul+2
 14484  0E06  0829               	movf	___lmul@product+1,w
 14485  0E07  00A1               	movwf	?___lmul+1
 14486  0E08  0828               	movf	___lmul@product,w
 14487  0E09  00A0               	movwf	?___lmul
 14488  0E0A                     l1166:
 14489  0E0A  0008               	return
 14490  0E0B                     __end_of___lmul:
 14491                           
 14492                           	psect	text57
 14493  068E                     __ptext57:	
 14494 ;; *************** function ___lldiv *****************
 14495 ;; Defined at:
 14496 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\__lldiv.c"
 14497 ;; Parameters:    Size  Location     Type
 14498 ;;  divisor         4   12[BANK0 ] unsigned long 
 14499 ;;  dividend        4   16[BANK0 ] unsigned long 
 14500 ;; Auto vars:     Size  Location     Type
 14501 ;;  quotient        4   21[BANK0 ] unsigned long 
 14502 ;;  counter         1   25[BANK0 ] unsigned char 
 14503 ;; Return value:  Size  Location     Type
 14504 ;;                  4   12[BANK0 ] unsigned long 
 14505 ;; Registers used:
 14506 ;;		wreg, status,2, status,0
 14507 ;; Tracked objects:
 14508 ;;		On entry : 0/0
 14509 ;;		On exit  : 0/0
 14510 ;;		Unchanged: 0/0
 14511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14512 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14513 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14514 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14515 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14516 ;;Total ram usage:       14 bytes
 14517 ;; Hardware stack levels used: 1
 14518 ;; Hardware stack levels required when called: 4
 14519 ;; This function calls:
 14520 ;;		Nothing
 14521 ;; This function is called by:
 14522 ;;		_JSN_Sensor_GetDistance
 14523 ;;		_SpeakerTone_SetFrequency
 14524 ;;		_MotorControl_SetIntensity
 14525 ;; This function uses a non-reentrant model
 14526 ;;
 14527                           
 14528  068E                     ___lldiv:	
 14529                           ;psect for function ___lldiv
 14530                           
 14531  068E                     l4014:	
 14532                           ;incstack = 0
 14533                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 14534                           
 14535  068E  3000               	movlw	0
 14536  068F  0020               	movlb	0	; select bank0
 14537  0690  00B8               	movwf	___lldiv@quotient+3
 14538  0691  3000               	movlw	0
 14539  0692  00B7               	movwf	___lldiv@quotient+2
 14540  0693  3000               	movlw	0
 14541  0694  00B6               	movwf	___lldiv@quotient+1
 14542  0695  3000               	movlw	0
 14543  0696  00B5               	movwf	___lldiv@quotient
 14544  0697  082F               	movf	___lldiv@divisor+3,w
 14545  0698  042E               	iorwf	___lldiv@divisor+2,w
 14546  0699  042D               	iorwf	___lldiv@divisor+1,w
 14547  069A  042C               	iorwf	___lldiv@divisor,w
 14548  069B  1903               	skipnz
 14549  069C  2E9E               	goto	u1341
 14550  069D  2E9F               	goto	u1340
 14551  069E                     u1341:
 14552  069E  2EE0               	goto	l4034
 14553  069F                     u1340:
 14554  069F                     l4016:
 14555  069F  01B9               	clrf	___lldiv@counter
 14556  06A0  0AB9               	incf	___lldiv@counter,f
 14557  06A1  2EAD               	goto	l4020
 14558  06A2                     l4018:
 14559  06A2  3001               	movlw	1
 14560  06A3                     u1355:
 14561  06A3  35AC               	lslf	___lldiv@divisor,f
 14562  06A4  0DAD               	rlf	___lldiv@divisor+1,f
 14563  06A5  0DAE               	rlf	___lldiv@divisor+2,f
 14564  06A6  0DAF               	rlf	___lldiv@divisor+3,f
 14565  06A7  0B89               	decfsz	9,f
 14566  06A8  2EA3               	goto	u1355
 14567  06A9  3001               	movlw	1
 14568  06AA  00B4               	movwf	??___lldiv
 14569  06AB  0834               	movf	??___lldiv,w
 14570  06AC  07B9               	addwf	___lldiv@counter,f
 14571  06AD                     l4020:
 14572  06AD  1FAF               	btfss	___lldiv@divisor+3,7
 14573  06AE  2EB0               	goto	u1361
 14574  06AF  2EB1               	goto	u1360
 14575  06B0                     u1361:
 14576  06B0  2EA2               	goto	l4018
 14577  06B1                     u1360:
 14578  06B1                     l4022:
 14579  06B1  3001               	movlw	1
 14580  06B2                     u1375:
 14581  06B2  35B5               	lslf	___lldiv@quotient,f
 14582  06B3  0DB6               	rlf	___lldiv@quotient+1,f
 14583  06B4  0DB7               	rlf	___lldiv@quotient+2,f
 14584  06B5  0DB8               	rlf	___lldiv@quotient+3,f
 14585  06B6  0B89               	decfsz	9,f
 14586  06B7  2EB2               	goto	u1375
 14587  06B8                     l4024:
 14588  06B8  082F               	movf	___lldiv@divisor+3,w
 14589  06B9  0233               	subwf	___lldiv@dividend+3,w
 14590  06BA  1D03               	skipz
 14591  06BB  2EC6               	goto	u1385
 14592  06BC  082E               	movf	___lldiv@divisor+2,w
 14593  06BD  0232               	subwf	___lldiv@dividend+2,w
 14594  06BE  1D03               	skipz
 14595  06BF  2EC6               	goto	u1385
 14596  06C0  082D               	movf	___lldiv@divisor+1,w
 14597  06C1  0231               	subwf	___lldiv@dividend+1,w
 14598  06C2  1D03               	skipz
 14599  06C3  2EC6               	goto	u1385
 14600  06C4  082C               	movf	___lldiv@divisor,w
 14601  06C5  0230               	subwf	___lldiv@dividend,w
 14602  06C6                     u1385:
 14603  06C6  1C03               	skipc
 14604  06C7  2EC9               	goto	u1381
 14605  06C8  2ECA               	goto	u1380
 14606  06C9                     u1381:
 14607  06C9  2ED3               	goto	l4030
 14608  06CA                     u1380:
 14609  06CA                     l4026:
 14610  06CA  082C               	movf	___lldiv@divisor,w
 14611  06CB  02B0               	subwf	___lldiv@dividend,f
 14612  06CC  082D               	movf	___lldiv@divisor+1,w
 14613  06CD  3BB1               	subwfb	___lldiv@dividend+1,f
 14614  06CE  082E               	movf	___lldiv@divisor+2,w
 14615  06CF  3BB2               	subwfb	___lldiv@dividend+2,f
 14616  06D0  082F               	movf	___lldiv@divisor+3,w
 14617  06D1  3BB3               	subwfb	___lldiv@dividend+3,f
 14618  06D2                     l4028:
 14619  06D2  1435               	bsf	___lldiv@quotient,0
 14620  06D3                     l4030:
 14621  06D3  3001               	movlw	1
 14622  06D4                     u1395:
 14623  06D4  36AF               	lsrf	___lldiv@divisor+3,f
 14624  06D5  0CAE               	rrf	___lldiv@divisor+2,f
 14625  06D6  0CAD               	rrf	___lldiv@divisor+1,f
 14626  06D7  0CAC               	rrf	___lldiv@divisor,f
 14627  06D8  0B89               	decfsz	9,f
 14628  06D9  2ED4               	goto	u1395
 14629  06DA                     l4032:
 14630  06DA  3001               	movlw	1
 14631  06DB  02B9               	subwf	___lldiv@counter,f
 14632  06DC  1D03               	btfss	3,2
 14633  06DD  2EDF               	goto	u1401
 14634  06DE  2EE0               	goto	u1400
 14635  06DF                     u1401:
 14636  06DF  2EB1               	goto	l4022
 14637  06E0                     u1400:
 14638  06E0                     l4034:
 14639  06E0  0838               	movf	___lldiv@quotient+3,w
 14640  06E1  00AF               	movwf	?___lldiv+3
 14641  06E2  0837               	movf	___lldiv@quotient+2,w
 14642  06E3  00AE               	movwf	?___lldiv+2
 14643  06E4  0836               	movf	___lldiv@quotient+1,w
 14644  06E5  00AD               	movwf	?___lldiv+1
 14645  06E6  0835               	movf	___lldiv@quotient,w
 14646  06E7  00AC               	movwf	?___lldiv
 14647  06E8                     l1188:
 14648  06E8  0008               	return
 14649  06E9                     __end_of___lldiv:
 14650                           
 14651                           	psect	text58
 14652  0CC4                     __ptext58:	
 14653 ;; *************** function _JSN_SensorGetPtr *****************
 14654 ;; Defined at:
 14655 ;;		line 124 in file "JSN_Sensor.c"
 14656 ;; Parameters:    Size  Location     Type
 14657 ;;  sensNum         1    wreg     unsigned char 
 14658 ;; Auto vars:     Size  Location     Type
 14659 ;;  sensNum         1    2[BANK0 ] unsigned char 
 14660 ;; Return value:  Size  Location     Type
 14661 ;;                  1    wreg      PTR struct .
 14662 ;; Registers used:
 14663 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14664 ;; Tracked objects:
 14665 ;;		On entry : 0/0
 14666 ;;		On exit  : 0/0
 14667 ;;		Unchanged: 0/0
 14668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14671 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14672 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14673 ;;Total ram usage:        3 bytes
 14674 ;; Hardware stack levels used: 1
 14675 ;; Hardware stack levels required when called: 4
 14676 ;; This function calls:
 14677 ;;		Nothing
 14678 ;; This function is called by:
 14679 ;;		_main
 14680 ;; This function uses a non-reentrant model
 14681 ;;
 14682                           
 14683  0CC4                     _JSN_SensorGetPtr:	
 14684                           ;psect for function _JSN_SensorGetPtr
 14685                           
 14686                           
 14687                           ;incstack = 0
 14688                           ; Regs used in _JSN_SensorGetPtr: [wreg-fsr0h+status,2+status,0]
 14689                           ;JSN_SensorGetPtr@sensNum stored from wreg
 14690  0CC4  0020               	movlb	0	; select bank0
 14691  0CC5  00A2               	movwf	JSN_SensorGetPtr@sensNum
 14692  0CC6                     l4104:
 14693                           
 14694                           ;JSN_Sensor.c: 125:     switch(sensNum) {
 14695  0CC6  2CCF               	goto	l4124
 14696  0CC7                     l4106:
 14697                           
 14698                           ;JSN_Sensor.c: 127:             return &Sens1;
 14699  0CC7  3052               	movlw	(low (_Sens1| (0+256)))& (0+255)
 14700  0CC8  2CE2               	goto	l61
 14701  0CC9                     l4110:
 14702                           
 14703                           ;JSN_Sensor.c: 129:             return &Sens2;
 14704  0CC9  304C               	movlw	(low (_Sens2| (0+256)))& (0+255)
 14705  0CCA  2CE2               	goto	l61
 14706  0CCB                     l4114:
 14707                           
 14708                           ;JSN_Sensor.c: 131:             return &Sens3;
 14709  0CCB  3046               	movlw	(low (_Sens3| (0+256)))& (0+255)
 14710  0CCC  2CE2               	goto	l61
 14711  0CCD                     l4118:
 14712                           
 14713                           ;JSN_Sensor.c: 133:             return 0x0000;
 14714  0CCD  3000               	movlw	0
 14715  0CCE  2CE2               	goto	l61
 14716  0CCF                     l4124:
 14717  0CCF  0822               	movf	JSN_SensorGetPtr@sensNum,w
 14718  0CD0  00A0               	movwf	??_JSN_SensorGetPtr
 14719  0CD1  01A1               	clrf	??_JSN_SensorGetPtr+1
 14720                           
 14721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14722                           ; Switch size 1, requested type "simple"
 14723                           ; Number of cases is 1, Range of values is 0 to 0
 14724                           ; switch strategies available:
 14725                           ; Name         Instructions Cycles
 14726                           ; simple_byte            4     3 (average)
 14727                           ; direct_byte            8     6 (fixed)
 14728                           ; jumptable            260     6 (fixed)
 14729                           ;	Chosen strategy is simple_byte
 14730  0CD2  0821               	movf	??_JSN_SensorGetPtr+1,w
 14731  0CD3  3A00               	xorlw	0	; case 0
 14732  0CD4  1903               	skipnz
 14733  0CD5  2CD7               	goto	l4604
 14734  0CD6  2CCD               	goto	l4118
 14735  0CD7                     l4604:
 14736                           
 14737                           ; Switch size 1, requested type "simple"
 14738                           ; Number of cases is 3, Range of values is 1 to 3
 14739                           ; switch strategies available:
 14740                           ; Name         Instructions Cycles
 14741                           ; simple_byte           10     6 (average)
 14742                           ; direct_byte           15     9 (fixed)
 14743                           ; jumptable            263     9 (fixed)
 14744                           ;	Chosen strategy is simple_byte
 14745  0CD7  0820               	movf	??_JSN_SensorGetPtr,w
 14746  0CD8  3A01               	xorlw	1	; case 1
 14747  0CD9  1903               	skipnz
 14748  0CDA  2CC7               	goto	l4106
 14749  0CDB  3A03               	xorlw	3	; case 2
 14750  0CDC  1903               	skipnz
 14751  0CDD  2CC9               	goto	l4110
 14752  0CDE  3A01               	xorlw	1	; case 3
 14753  0CDF  1903               	skipnz
 14754  0CE0  2CCB               	goto	l4114
 14755  0CE1  2CCD               	goto	l4118
 14756  0CE2                     l61:
 14757  0CE2  0008               	return
 14758  0CE3                     __end_of_JSN_SensorGetPtr:
 14759                           
 14760                           	psect	text59
 14761  0B7B                     __ptext59:	
 14762 ;; *************** function _FRT_GetMillis *****************
 14763 ;; Defined at:
 14764 ;;		line 26 in file "FRT.c"
 14765 ;; Parameters:    Size  Location     Type
 14766 ;;		None
 14767 ;; Auto vars:     Size  Location     Type
 14768 ;;		None
 14769 ;; Return value:  Size  Location     Type
 14770 ;;                  4    0[BANK0 ] unsigned long 
 14771 ;; Registers used:
 14772 ;;		wreg
 14773 ;; Tracked objects:
 14774 ;;		On entry : 0/0
 14775 ;;		On exit  : 0/0
 14776 ;;		Unchanged: 0/0
 14777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14778 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14781 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14782 ;;Total ram usage:        4 bytes
 14783 ;; Hardware stack levels used: 1
 14784 ;; Hardware stack levels required when called: 4
 14785 ;; This function calls:
 14786 ;;		Nothing
 14787 ;; This function is called by:
 14788 ;;		_main
 14789 ;; This function uses a non-reentrant model
 14790 ;;
 14791                           
 14792  0B7B                     _FRT_GetMillis:	
 14793                           ;psect for function _FRT_GetMillis
 14794                           
 14795  0B7B                     l4230:	
 14796                           ;incstack = 0
 14797                           ; Regs used in _FRT_GetMillis: [wreg]
 14798                           
 14799                           
 14800                           ;FRT.c: 27:     return millis;
 14801  0B7B  0022               	movlb	2	; select bank2
 14802  0B7C  083F               	movf	(_millis+3)^(0+256),w
 14803  0B7D  0020               	movlb	0	; select bank0
 14804  0B7E  00A3               	movwf	?_FRT_GetMillis+3
 14805  0B7F  0022               	movlb	2	; select bank2
 14806  0B80  083E               	movf	(_millis+2)^(0+256),w
 14807  0B81  0020               	movlb	0	; select bank0
 14808  0B82  00A2               	movwf	?_FRT_GetMillis+2
 14809  0B83  0022               	movlb	2	; select bank2
 14810  0B84  083D               	movf	(_millis+1)^(0+256),w
 14811  0B85  0020               	movlb	0	; select bank0
 14812  0B86  00A1               	movwf	?_FRT_GetMillis+1
 14813  0B87  0022               	movlb	2	; select bank2
 14814  0B88  083C               	movf	_millis^(0+256),w
 14815  0B89  0020               	movlb	0	; select bank0
 14816  0B8A  00A0               	movwf	?_FRT_GetMillis
 14817  0B8B                     l772:
 14818  0B8B  0008               	return
 14819  0B8C                     __end_of_FRT_GetMillis:
 14820                           
 14821                           	psect	intentry
 14822  0004                     __pintentry:	
 14823 ;; *************** function _INTERRUPT_InterruptManager *****************
 14824 ;; Defined at:
 14825 ;;		line 16 in file "interrupt_manager.c"
 14826 ;; Parameters:    Size  Location     Type
 14827 ;;		None
 14828 ;; Auto vars:     Size  Location     Type
 14829 ;;		None
 14830 ;; Return value:  Size  Location     Type
 14831 ;;                  1    wreg      void 
 14832 ;; Registers used:
 14833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14834 ;; Tracked objects:
 14835 ;;		On entry : 0/0
 14836 ;;		On exit  : 0/0
 14837 ;;		Unchanged: 0/0
 14838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14843 ;;Total ram usage:        0 bytes
 14844 ;; Hardware stack levels used: 1
 14845 ;; Hardware stack levels required when called: 3
 14846 ;; This function calls:
 14847 ;;		Absolute function
 14848 ;;		_CCP1_CaptureISR
 14849 ;;		_CCP2_CaptureISR
 14850 ;;		_CCP3_CaptureISR
 14851 ;;		_CCP4_CompareISR
 14852 ;;		_EUSART_Receive_ISR
 14853 ;;		_EUSART_Transmit_ISR
 14854 ;;		_TMR0_ISR
 14855 ;;		_TMR1_ISR
 14856 ;;		_TMR3_ISR
 14857 ;; This function is called by:
 14858 ;;		Interrupt level 1
 14859 ;; This function uses a non-reentrant model
 14860 ;;
 14861                           
 14862  0004                     _INTERRUPT_InterruptManager:
 14863                           
 14864                           ;incstack = 0
 14865  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 14866                           
 14867                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14868  0005  3180               	pagesel	$
 14869  0006                     i1l4254:
 14870                           
 14871                           ;interrupt_manager.c: 19:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 14872  0006  0021               	movlb	1	; select bank1
 14873  0007  1E90               	btfss	16,5	;volatile
 14874  0008  280A               	goto	u150_21
 14875  0009  280B               	goto	u150_20
 14876  000A                     u150_21:
 14877  000A  2814               	goto	i1l681
 14878  000B                     u150_20:
 14879  000B                     i1l4256:
 14880  000B  0020               	movlb	0	; select bank0
 14881  000C  1E90               	btfss	16,5	;volatile
 14882  000D  280F               	goto	u151_21
 14883  000E  2810               	goto	u151_20
 14884  000F                     u151_21:
 14885  000F  2814               	goto	i1l681
 14886  0010                     u151_20:
 14887  0010                     i1l4258:
 14888                           
 14889                           ;interrupt_manager.c: 20:     {;interrupt_manager.c: 21:         TMR0_ISR();
 14890  0010  318B  2348  3180   	fcall	_TMR0_ISR
 14891                           
 14892                           ;interrupt_manager.c: 22:     }
 14893  0013  288E               	goto	i1l699
 14894  0014                     i1l681:	
 14895                           ;interrupt_manager.c: 23:     else if(INTCONbits.PEIE == 1)
 14896                           
 14897  0014  1F0B               	btfss	11,6	;volatile
 14898  0015  2817               	goto	u152_21
 14899  0016  2818               	goto	u152_20
 14900  0017                     u152_21:
 14901  0017  288E               	goto	i1l699
 14902  0018                     u152_20:
 14903  0018                     i1l4260:
 14904                           
 14905                           ;interrupt_manager.c: 24:     {;interrupt_manager.c: 25:         if(PIE4bits.CCP4IE == 1
      +                           && PIR4bits.CCP4IF == 1)
 14906  0018  0021               	movlb	1	; select bank1
 14907  0019  1D94               	btfss	20,3	;volatile
 14908  001A  281C               	goto	u153_21
 14909  001B  281D               	goto	u153_20
 14910  001C                     u153_21:
 14911  001C  2826               	goto	i1l684
 14912  001D                     u153_20:
 14913  001D                     i1l4262:
 14914  001D  0020               	movlb	0	; select bank0
 14915  001E  1D94               	btfss	20,3	;volatile
 14916  001F  2821               	goto	u154_21
 14917  0020  2822               	goto	u154_20
 14918  0021                     u154_21:
 14919  0021  2826               	goto	i1l684
 14920  0022                     u154_20:
 14921  0022                     i1l4264:
 14922                           
 14923                           ;interrupt_manager.c: 26:         {;interrupt_manager.c: 27:             CCP4_CompareISR
      +                          ();
 14924  0022  318A  2232  3180   	fcall	_CCP4_CompareISR
 14925                           
 14926                           ;interrupt_manager.c: 28:         }
 14927  0025  288E               	goto	i1l699
 14928  0026                     i1l684:	
 14929                           ;interrupt_manager.c: 29:         else if(PIE3bits.TMR3IE == 1 && PIR3bits.TMR3IF == 1)
 14930                           
 14931  0026  0021               	movlb	1	; select bank1
 14932  0027  1E13               	btfss	19,4	;volatile
 14933  0028  282A               	goto	u155_21
 14934  0029  282B               	goto	u155_20
 14935  002A                     u155_21:
 14936  002A  2834               	goto	i1l686
 14937  002B                     u155_20:
 14938  002B                     i1l4266:
 14939  002B  0020               	movlb	0	; select bank0
 14940  002C  1E13               	btfss	19,4	;volatile
 14941  002D  282F               	goto	u156_21
 14942  002E  2830               	goto	u156_20
 14943  002F                     u156_21:
 14944  002F  2834               	goto	i1l686
 14945  0030                     u156_20:
 14946  0030                     i1l4268:
 14947                           
 14948                           ;interrupt_manager.c: 30:         {;interrupt_manager.c: 31:             TMR3_ISR();
 14949  0030  318A  224C  3180   	fcall	_TMR3_ISR
 14950                           
 14951                           ;interrupt_manager.c: 32:         }
 14952  0033  288E               	goto	i1l699
 14953  0034                     i1l686:	
 14954                           ;interrupt_manager.c: 33:         else if(PIE4bits.CCP1IE == 1 && PIR4bits.CCP1IF == 1)
 14955                           
 14956  0034  0021               	movlb	1	; select bank1
 14957  0035  1C14               	btfss	20,0	;volatile
 14958  0036  2838               	goto	u157_21
 14959  0037  2839               	goto	u157_20
 14960  0038                     u157_21:
 14961  0038  2842               	goto	i1l688
 14962  0039                     u157_20:
 14963  0039                     i1l4270:
 14964  0039  0020               	movlb	0	; select bank0
 14965  003A  1C14               	btfss	20,0	;volatile
 14966  003B  283D               	goto	u158_21
 14967  003C  283E               	goto	u158_20
 14968  003D                     u158_21:
 14969  003D  2842               	goto	i1l688
 14970  003E                     u158_20:
 14971  003E                     i1l4272:
 14972                           
 14973                           ;interrupt_manager.c: 34:         {;interrupt_manager.c: 35:             CCP1_CaptureISR
      +                          ();
 14974  003E  318B  23D5  3180   	fcall	_CCP1_CaptureISR
 14975                           
 14976                           ;interrupt_manager.c: 36:         }
 14977  0041  288E               	goto	i1l699
 14978  0042                     i1l688:	
 14979                           ;interrupt_manager.c: 37:         else if(PIE4bits.CCP3IE == 1 && PIR4bits.CCP3IF == 1)
 14980                           
 14981  0042  0021               	movlb	1	; select bank1
 14982  0043  1D14               	btfss	20,2	;volatile
 14983  0044  2846               	goto	u159_21
 14984  0045  2847               	goto	u159_20
 14985  0046                     u159_21:
 14986  0046  2850               	goto	i1l690
 14987  0047                     u159_20:
 14988  0047                     i1l4274:
 14989  0047  0020               	movlb	0	; select bank0
 14990  0048  1D14               	btfss	20,2	;volatile
 14991  0049  284B               	goto	u160_21
 14992  004A  284C               	goto	u160_20
 14993  004B                     u160_21:
 14994  004B  2850               	goto	i1l690
 14995  004C                     u160_20:
 14996  004C                     i1l4276:
 14997                           
 14998                           ;interrupt_manager.c: 38:         {;interrupt_manager.c: 39:             CCP3_CaptureISR
      +                          ();
 14999  004C  318C  2401  3180   	fcall	_CCP3_CaptureISR
 15000                           
 15001                           ;interrupt_manager.c: 40:         }
 15002  004F  288E               	goto	i1l699
 15003  0050                     i1l690:	
 15004                           ;interrupt_manager.c: 41:         else if(PIE4bits.CCP2IE == 1 && PIR4bits.CCP2IF == 1)
 15005                           
 15006  0050  0021               	movlb	1	; select bank1
 15007  0051  1C94               	btfss	20,1	;volatile
 15008  0052  2854               	goto	u161_21
 15009  0053  2855               	goto	u161_20
 15010  0054                     u161_21:
 15011  0054  285E               	goto	i1l692
 15012  0055                     u161_20:
 15013  0055                     i1l4278:
 15014  0055  0020               	movlb	0	; select bank0
 15015  0056  1C94               	btfss	20,1	;volatile
 15016  0057  2859               	goto	u162_21
 15017  0058  285A               	goto	u162_20
 15018  0059                     u162_21:
 15019  0059  285E               	goto	i1l692
 15020  005A                     u162_20:
 15021  005A                     i1l4280:
 15022                           
 15023                           ;interrupt_manager.c: 42:         {;interrupt_manager.c: 43:             CCP2_CaptureISR
      +                          ();
 15024  005A  318B  23EB  3180   	fcall	_CCP2_CaptureISR
 15025                           
 15026                           ;interrupt_manager.c: 44:         }
 15027  005D  288E               	goto	i1l699
 15028  005E                     i1l692:	
 15029                           ;interrupt_manager.c: 45:         else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 15030                           
 15031  005E  0021               	movlb	1	; select bank1
 15032  005F  1C11               	btfss	17,0	;volatile
 15033  0060  2862               	goto	u163_21
 15034  0061  2863               	goto	u163_20
 15035  0062                     u163_21:
 15036  0062  286C               	goto	i1l694
 15037  0063                     u163_20:
 15038  0063                     i1l4282:
 15039  0063  0020               	movlb	0	; select bank0
 15040  0064  1C11               	btfss	17,0	;volatile
 15041  0065  2867               	goto	u164_21
 15042  0066  2868               	goto	u164_20
 15043  0067                     u164_21:
 15044  0067  286C               	goto	i1l694
 15045  0068                     u164_20:
 15046  0068                     i1l4284:
 15047                           
 15048                           ;interrupt_manager.c: 46:         {;interrupt_manager.c: 47:             TMR1_ISR();
 15049  0068  318A  22FC  3180   	fcall	_TMR1_ISR
 15050                           
 15051                           ;interrupt_manager.c: 48:         }
 15052  006B  288E               	goto	i1l699
 15053  006C                     i1l694:	
 15054                           ;interrupt_manager.c: 49:         else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 15055                           
 15056  006C  0021               	movlb	1	; select bank1
 15057  006D  1E91               	btfss	17,5	;volatile
 15058  006E  2870               	goto	u165_21
 15059  006F  2871               	goto	u165_20
 15060  0070                     u165_21:
 15061  0070  287D               	goto	i1l696
 15062  0071                     u165_20:
 15063  0071                     i1l4286:
 15064  0071  0020               	movlb	0	; select bank0
 15065  0072  1E91               	btfss	17,5	;volatile
 15066  0073  2875               	goto	u166_21
 15067  0074  2876               	goto	u166_20
 15068  0075                     u166_21:
 15069  0075  287D               	goto	i1l696
 15070  0076                     u166_20:
 15071  0076                     i1l4288:
 15072                           
 15073                           ;interrupt_manager.c: 50:         {;interrupt_manager.c: 51:             EUSART_RxDefaul
      +                          tInterruptHandler();
 15074  0076  0021               	movlb	1	; select bank1
 15075  0077  0837               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 15076  0078  008A               	movwf	10
 15077  0079  0836               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 15078  007A  000A               	callw
 15079  007B  3180               	pagesel	$
 15080                           
 15081                           ;interrupt_manager.c: 52:         }
 15082  007C  288E               	goto	i1l699
 15083  007D                     i1l696:	
 15084                           ;interrupt_manager.c: 53:         else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 15085                           
 15086  007D  0021               	movlb	1	; select bank1
 15087  007E  1E11               	btfss	17,4	;volatile
 15088  007F  2881               	goto	u167_21
 15089  0080  2882               	goto	u167_20
 15090  0081                     u167_21:
 15091  0081  288E               	goto	i1l693
 15092  0082                     u167_20:
 15093  0082                     i1l4290:
 15094  0082  0020               	movlb	0	; select bank0
 15095  0083  1E11               	btfss	17,4	;volatile
 15096  0084  2886               	goto	u168_21
 15097  0085  2887               	goto	u168_20
 15098  0086                     u168_21:
 15099  0086  288E               	goto	i1l693
 15100  0087                     u168_20:
 15101  0087                     i1l4292:
 15102                           
 15103                           ;interrupt_manager.c: 54:         {;interrupt_manager.c: 55:             EUSART_TxDefaul
      +                          tInterruptHandler();
 15104  0087  0021               	movlb	1	; select bank1
 15105  0088  0839               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 15106  0089  008A               	movwf	10
 15107  008A  0838               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 15108  008B  000A               	callw
 15109  008C  3180               	pagesel	$
 15110  008D  288E               	goto	i1l699
 15111  008E                     i1l693:
 15112  008E                     i1l699:
 15113  008E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 15114  008F  0009               	retfie
 15115  0090                     __end_of_INTERRUPT_InterruptManager:
 15116                           
 15117                           	psect	text61
 15118  0A4C                     __ptext61:	
 15119 ;; *************** function _TMR3_ISR *****************
 15120 ;; Defined at:
 15121 ;;		line 129 in file "tmr3.c"
 15122 ;; Parameters:    Size  Location     Type
 15123 ;;		None
 15124 ;; Auto vars:     Size  Location     Type
 15125 ;;		None
 15126 ;; Return value:  Size  Location     Type
 15127 ;;                  1    wreg      void 
 15128 ;; Registers used:
 15129 ;;		wreg, status,2, status,0, pclath, cstack
 15130 ;; Tracked objects:
 15131 ;;		On entry : 0/0
 15132 ;;		On exit  : 0/0
 15133 ;;		Unchanged: 0/0
 15134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15139 ;;Total ram usage:        0 bytes
 15140 ;; Hardware stack levels used: 1
 15141 ;; Hardware stack levels required when called: 2
 15142 ;; This function calls:
 15143 ;;		i1_TMR3_Reload
 15144 ;; This function is called by:
 15145 ;;		_INTERRUPT_InterruptManager
 15146 ;; This function uses a non-reentrant model
 15147 ;;
 15148                           
 15149  0A4C                     _TMR3_ISR:	
 15150                           ;psect for function _TMR3_ISR
 15151                           
 15152  0A4C                     i1l4226:	
 15153                           ;incstack = 0
 15154                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 15155                           
 15156                           
 15157                           ;tmr3.c: 132:     PIR3bits.TMR3IF = 0;
 15158  0A4C  0020               	movlb	0	; select bank0
 15159  0A4D  1213               	bcf	19,4	;volatile
 15160  0A4E                     i1l4228:
 15161                           
 15162                           ;tmr3.c: 133:     TMR3_Reload();
 15163  0A4E  318A  2284  318A   	fcall	i1_TMR3_Reload
 15164  0A51                     i1l971:
 15165  0A51  0008               	return
 15166  0A52                     __end_of_TMR3_ISR:
 15167                           
 15168                           	psect	text62
 15169  0A84                     __ptext62:	
 15170 ;; *************** function i1_TMR3_Reload *****************
 15171 ;; Defined at:
 15172 ;;		line 108 in file "tmr3.c"
 15173 ;; Parameters:    Size  Location     Type
 15174 ;;		None
 15175 ;; Auto vars:     Size  Location     Type
 15176 ;;		None
 15177 ;; Return value:  Size  Location     Type
 15178 ;;                  1    wreg      void 
 15179 ;; Registers used:
 15180 ;;		wreg, status,2, status,0, pclath, cstack
 15181 ;; Tracked objects:
 15182 ;;		On entry : 0/0
 15183 ;;		On exit  : 0/0
 15184 ;;		Unchanged: 0/0
 15185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15190 ;;Total ram usage:        0 bytes
 15191 ;; Hardware stack levels used: 1
 15192 ;; Hardware stack levels required when called: 1
 15193 ;; This function calls:
 15194 ;;		i1_TMR3_WriteTimer
 15195 ;; This function is called by:
 15196 ;;		_TMR3_ISR
 15197 ;; This function uses a non-reentrant model
 15198 ;;
 15199                           
 15200  0A84                     i1_TMR3_Reload:	
 15201                           ;psect for function i1_TMR3_Reload
 15202                           
 15203  0A84                     i1l4038:	
 15204                           ;incstack = 0
 15205                           ; Regs used in i1_TMR3_Reload: [wreg+status,2+status,0+pclath+cstack]
 15206                           
 15207                           
 15208                           ;tmr3.c: 110:     TMR3_WriteTimer(timer3ReloadVal);
 15209  0A84  0021               	movlb	1	; select bank1
 15210  0A85  0829               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
 15211  0A86  00F1               	movwf	i1TMR3_WriteTimer@timerVal+1
 15212  0A87  0828               	movf	_timer3ReloadVal^(0+128),w	;volatile
 15213  0A88  00F0               	movwf	i1TMR3_WriteTimer@timerVal
 15214  0A89  318B  236A  318A   	fcall	i1_TMR3_WriteTimer
 15215  0A8C                     i1l962:
 15216  0A8C  0008               	return
 15217  0A8D                     __end_ofi1_TMR3_Reload:
 15218                           
 15219                           	psect	text63
 15220  0B6A                     __ptext63:	
 15221 ;; *************** function i1_TMR3_WriteTimer *****************
 15222 ;; Defined at:
 15223 ;;		line 84 in file "tmr3.c"
 15224 ;; Parameters:    Size  Location     Type
 15225 ;;  timerVal        2    0[COMMON] unsigned short 
 15226 ;; Auto vars:     Size  Location     Type
 15227 ;;		None
 15228 ;; Return value:  Size  Location     Type
 15229 ;;                  1    wreg      void 
 15230 ;; Registers used:
 15231 ;;		wreg, status,2
 15232 ;; Tracked objects:
 15233 ;;		On entry : 0/0
 15234 ;;		On exit  : 0/0
 15235 ;;		Unchanged: 0/0
 15236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15240 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15241 ;;Total ram usage:        2 bytes
 15242 ;; Hardware stack levels used: 1
 15243 ;; This function calls:
 15244 ;;		Nothing
 15245 ;; This function is called by:
 15246 ;;		i1_TMR3_Reload
 15247 ;; This function uses a non-reentrant model
 15248 ;;
 15249                           
 15250  0B6A                     i1_TMR3_WriteTimer:	
 15251                           ;psect for function i1_TMR3_WriteTimer
 15252                           
 15253  0B6A                     i1l3726:	
 15254                           ;incstack = 0
 15255                           ; Regs used in i1_TMR3_WriteTimer: [wreg+status,2]
 15256                           
 15257                           
 15258                           ;tmr3.c: 84: void TMR3_WriteTimer(uint16_t timerVal);tmr3.c: 85: {;tmr3.c: 86:     if (T
      +                          3CONbits.T3SYNC == 1)
 15259  0B6A  0028               	movlb	8	; select bank8
 15260  0B6B  1D13               	btfss	19,2	;volatile
 15261  0B6C  2B6E               	goto	u128_21
 15262  0B6D  2B6F               	goto	u128_20
 15263  0B6E                     u128_21:
 15264  0B6E  2B76               	goto	i1l3736
 15265  0B6F                     u128_20:
 15266  0B6F                     i1l3728:
 15267                           
 15268                           ;tmr3.c: 87:     {;tmr3.c: 89:         T3CONbits.TMR3ON = 0;
 15269  0B6F  1013               	bcf	19,0	;volatile
 15270  0B70                     i1l3730:
 15271                           
 15272                           ;tmr3.c: 92:         TMR3H = (uint8_t)(timerVal >> 8);
 15273  0B70  0871               	movf	i1TMR3_WriteTimer@timerVal+1,w
 15274  0B71  0092               	movwf	18	;volatile
 15275  0B72                     i1l3732:
 15276                           
 15277                           ;tmr3.c: 93:         TMR3L = (uint8_t)timerVal;
 15278  0B72  0870               	movf	i1TMR3_WriteTimer@timerVal,w
 15279  0B73  0091               	movwf	17	;volatile
 15280  0B74                     i1l3734:
 15281                           
 15282                           ;tmr3.c: 96:         T3CONbits.TMR3ON =1;
 15283  0B74  1413               	bsf	19,0	;volatile
 15284                           
 15285                           ;tmr3.c: 97:     }
 15286  0B75  2B7A               	goto	i1l959
 15287  0B76                     i1l3736:
 15288                           
 15289                           ;tmr3.c: 99:     {;tmr3.c: 101:         TMR3H = (uint8_t)(timerVal >> 8);
 15290  0B76  0871               	movf	i1TMR3_WriteTimer@timerVal+1,w
 15291  0B77  0092               	movwf	18	;volatile
 15292  0B78                     i1l3738:
 15293                           
 15294                           ;tmr3.c: 102:         TMR3L = (uint8_t)timerVal;
 15295  0B78  0870               	movf	i1TMR3_WriteTimer@timerVal,w
 15296  0B79  0091               	movwf	17	;volatile
 15297  0B7A                     i1l959:
 15298  0B7A  0008               	return
 15299  0B7B                     __end_ofi1_TMR3_WriteTimer:
 15300                           
 15301                           	psect	text64
 15302  0AFC                     __ptext64:	
 15303 ;; *************** function _TMR1_ISR *****************
 15304 ;; Defined at:
 15305 ;;		line 111 in file "tmr1.c"
 15306 ;; Parameters:    Size  Location     Type
 15307 ;;		None
 15308 ;; Auto vars:     Size  Location     Type
 15309 ;;		None
 15310 ;; Return value:  Size  Location     Type
 15311 ;;                  1    wreg      void 
 15312 ;; Registers used:
 15313 ;;		wreg, status,2, status,0, pclath, cstack
 15314 ;; Tracked objects:
 15315 ;;		On entry : 0/0
 15316 ;;		On exit  : 0/0
 15317 ;;		Unchanged: 0/0
 15318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15323 ;;Total ram usage:        0 bytes
 15324 ;; Hardware stack levels used: 1
 15325 ;; Hardware stack levels required when called: 1
 15326 ;; This function calls:
 15327 ;;		_TMR1_WriteTimer
 15328 ;; This function is called by:
 15329 ;;		_INTERRUPT_InterruptManager
 15330 ;; This function uses a non-reentrant model
 15331 ;;
 15332                           
 15333  0AFC                     _TMR1_ISR:	
 15334                           ;psect for function _TMR1_ISR
 15335                           
 15336  0AFC                     i1l4166:	
 15337                           ;incstack = 0
 15338                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 15339                           
 15340                           
 15341                           ;tmr1.c: 114:     PIR1bits.TMR1IF = 0;
 15342  0AFC  0020               	movlb	0	; select bank0
 15343  0AFD  1011               	bcf	17,0	;volatile
 15344  0AFE                     i1l4168:
 15345                           
 15346                           ;tmr1.c: 115:     TMR1_WriteTimer(timer1ReloadVal);
 15347  0AFE  0021               	movlb	1	; select bank1
 15348  0AFF  083B               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 15349  0B00  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 15350  0B01  083A               	movf	_timer1ReloadVal^(0+128),w	;volatile
 15351  0B02  00F0               	movwf	TMR1_WriteTimer@timerVal
 15352  0B03  318B  2359  318A   	fcall	_TMR1_WriteTimer
 15353  0B06                     i1l490:
 15354  0B06  0008               	return
 15355  0B07                     __end_of_TMR1_ISR:
 15356                           
 15357                           	psect	text65
 15358  0B59                     __ptext65:	
 15359 ;; *************** function _TMR1_WriteTimer *****************
 15360 ;; Defined at:
 15361 ;;		line 80 in file "tmr1.c"
 15362 ;; Parameters:    Size  Location     Type
 15363 ;;  timerVal        2    0[COMMON] unsigned short 
 15364 ;; Auto vars:     Size  Location     Type
 15365 ;;		None
 15366 ;; Return value:  Size  Location     Type
 15367 ;;                  1    wreg      void 
 15368 ;; Registers used:
 15369 ;;		wreg, status,2
 15370 ;; Tracked objects:
 15371 ;;		On entry : 0/0
 15372 ;;		On exit  : 0/0
 15373 ;;		Unchanged: 0/0
 15374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15379 ;;Total ram usage:        2 bytes
 15380 ;; Hardware stack levels used: 1
 15381 ;; This function calls:
 15382 ;;		Nothing
 15383 ;; This function is called by:
 15384 ;;		_TMR1_ISR
 15385 ;;		_TMR1_Reload
 15386 ;; This function uses a non-reentrant model
 15387 ;;
 15388                           
 15389  0B59                     _TMR1_WriteTimer:	
 15390                           ;psect for function _TMR1_WriteTimer
 15391                           
 15392  0B59                     i1l3970:	
 15393                           ;incstack = 0
 15394                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 15395                           
 15396                           
 15397                           ;tmr1.c: 80: void TMR1_WriteTimer(uint16_t timerVal);tmr1.c: 81: {;tmr1.c: 82:     if (T
      +                          1CONbits.T1SYNC == 1)
 15398  0B59  0020               	movlb	0	; select bank0
 15399  0B5A  1D1B               	btfss	27,2	;volatile
 15400  0B5B  2B5D               	goto	u129_21
 15401  0B5C  2B5E               	goto	u129_20
 15402  0B5D                     u129_21:
 15403  0B5D  2B65               	goto	i1l3980
 15404  0B5E                     u129_20:
 15405  0B5E                     i1l3972:
 15406                           
 15407                           ;tmr1.c: 83:     {;tmr1.c: 85:         T1CONbits.TMR1ON = 0;
 15408  0B5E  101B               	bcf	27,0	;volatile
 15409  0B5F                     i1l3974:
 15410                           
 15411                           ;tmr1.c: 88:         TMR1H = (uint8_t)(timerVal >> 8);
 15412  0B5F  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15413  0B60  009A               	movwf	26	;volatile
 15414  0B61                     i1l3976:
 15415                           
 15416                           ;tmr1.c: 89:         TMR1L = (uint8_t)timerVal;
 15417  0B61  0870               	movf	TMR1_WriteTimer@timerVal,w
 15418  0B62  0099               	movwf	25	;volatile
 15419  0B63                     i1l3978:
 15420                           
 15421                           ;tmr1.c: 92:         T1CONbits.TMR1ON =1;
 15422  0B63  141B               	bsf	27,0	;volatile
 15423                           
 15424                           ;tmr1.c: 93:     }
 15425  0B64  2B69               	goto	i1l484
 15426  0B65                     i1l3980:
 15427                           
 15428                           ;tmr1.c: 95:     {;tmr1.c: 97:         TMR1H = (uint8_t)(timerVal >> 8);
 15429  0B65  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15430  0B66  009A               	movwf	26	;volatile
 15431  0B67                     i1l3982:
 15432                           
 15433                           ;tmr1.c: 98:         TMR1L = (uint8_t)timerVal;
 15434  0B67  0870               	movf	TMR1_WriteTimer@timerVal,w
 15435  0B68  0099               	movwf	25	;volatile
 15436  0B69                     i1l484:
 15437  0B69  0008               	return
 15438  0B6A                     __end_of_TMR1_WriteTimer:
 15439                           
 15440                           	psect	text66
 15441  0B48                     __ptext66:	
 15442 ;; *************** function _TMR0_ISR *****************
 15443 ;; Defined at:
 15444 ;;		line 90 in file "tmr0.c"
 15445 ;; Parameters:    Size  Location     Type
 15446 ;;		None
 15447 ;; Auto vars:     Size  Location     Type
 15448 ;;		None
 15449 ;; Return value:  Size  Location     Type
 15450 ;;                  1    wreg      void 
 15451 ;; Registers used:
 15452 ;;		wreg, status,2, status,0, pclath, cstack
 15453 ;; Tracked objects:
 15454 ;;		On entry : 0/0
 15455 ;;		On exit  : 0/0
 15456 ;;		Unchanged: 0/0
 15457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15460 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15461 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15462 ;;Total ram usage:        1 bytes
 15463 ;; Hardware stack levels used: 1
 15464 ;; Hardware stack levels required when called: 2
 15465 ;; This function calls:
 15466 ;;		_TMR0_CallBack
 15467 ;; This function is called by:
 15468 ;;		_INTERRUPT_InterruptManager
 15469 ;; This function uses a non-reentrant model
 15470 ;;
 15471                           
 15472  0B48                     _TMR0_ISR:	
 15473                           ;psect for function _TMR0_ISR
 15474                           
 15475  0B48                     i1l4140:	
 15476                           ;incstack = 0
 15477                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 15478                           
 15479                           
 15480                           ;tmr0.c: 93:     PIR0bits.TMR0IF = 0;
 15481  0B48  0020               	movlb	0	; select bank0
 15482  0B49  1290               	bcf	16,5	;volatile
 15483  0B4A                     i1l4142:
 15484                           
 15485                           ;tmr0.c: 95:     if (++CountCallBack >= 4)
 15486  0B4A  3001               	movlw	1
 15487  0B4B  00F0               	movwf	??_TMR0_ISR
 15488  0B4C  0870               	movf	??_TMR0_ISR,w
 15489  0B4D  07FD               	addwf	_CountCallBack,f	;volatile
 15490  0B4E  3004               	movlw	4
 15491  0B4F  027D               	subwf	_CountCallBack,w	;volatile
 15492  0B50  1C03               	skipc
 15493  0B51  2B53               	goto	u142_21
 15494  0B52  2B54               	goto	u142_20
 15495  0B53                     u142_21:
 15496  0B53  2B58               	goto	i1l301
 15497  0B54                     u142_20:
 15498  0B54                     i1l4144:
 15499                           
 15500                           ;tmr0.c: 96:     {;tmr0.c: 98:         TMR0_CallBack();
 15501  0B54  318A  2258  318B   	fcall	_TMR0_CallBack
 15502  0B57                     i1l4146:
 15503                           
 15504                           ;tmr0.c: 101:         CountCallBack = 0;
 15505  0B57  01FD               	clrf	_CountCallBack	;volatile
 15506  0B58                     i1l301:
 15507  0B58  0008               	return
 15508  0B59                     __end_of_TMR0_ISR:
 15509                           
 15510                           	psect	text67
 15511  0A58                     __ptext67:	
 15512 ;; *************** function _TMR0_CallBack *****************
 15513 ;; Defined at:
 15514 ;;		line 109 in file "tmr0.c"
 15515 ;; Parameters:    Size  Location     Type
 15516 ;;		None
 15517 ;; Auto vars:     Size  Location     Type
 15518 ;;		None
 15519 ;; Return value:  Size  Location     Type
 15520 ;;                  1    wreg      void 
 15521 ;; Registers used:
 15522 ;;		wreg, status,2, status,0, pclath, cstack
 15523 ;; Tracked objects:
 15524 ;;		On entry : 0/0
 15525 ;;		On exit  : 0/0
 15526 ;;		Unchanged: 0/0
 15527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15532 ;;Total ram usage:        0 bytes
 15533 ;; Hardware stack levels used: 1
 15534 ;; Hardware stack levels required when called: 1
 15535 ;; This function calls:
 15536 ;;		_FRT_IncMicros
 15537 ;;		_FRT_IncMillis
 15538 ;; This function is called by:
 15539 ;;		_TMR0_ISR
 15540 ;; This function uses a non-reentrant model
 15541 ;;
 15542                           
 15543  0A58                     _TMR0_CallBack:	
 15544                           ;psect for function _TMR0_CallBack
 15545                           
 15546  0A58                     i1l3920:	
 15547                           ;incstack = 0
 15548                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 15549                           
 15550                           
 15551                           ;tmr0.c: 111:     FRT_IncMillis();
 15552  0A58  318A  22E8  318A   	fcall	_FRT_IncMillis
 15553                           
 15554                           ;tmr0.c: 112:     FRT_IncMicros();
 15555  0A5B  318A  22DE  318A   	fcall	_FRT_IncMicros
 15556  0A5E                     i1l304:
 15557  0A5E  0008               	return
 15558  0A5F                     __end_of_TMR0_CallBack:
 15559                           
 15560                           	psect	text68
 15561  0AE8                     __ptext68:	
 15562 ;; *************** function _FRT_IncMillis *****************
 15563 ;; Defined at:
 15564 ;;		line 38 in file "FRT.c"
 15565 ;; Parameters:    Size  Location     Type
 15566 ;;		None
 15567 ;; Auto vars:     Size  Location     Type
 15568 ;;		None
 15569 ;; Return value:  Size  Location     Type
 15570 ;;                  1    wreg      void 
 15571 ;; Registers used:
 15572 ;;		wreg
 15573 ;; Tracked objects:
 15574 ;;		On entry : 0/0
 15575 ;;		On exit  : 0/0
 15576 ;;		Unchanged: 0/0
 15577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15582 ;;Total ram usage:        0 bytes
 15583 ;; Hardware stack levels used: 1
 15584 ;; This function calls:
 15585 ;;		Nothing
 15586 ;; This function is called by:
 15587 ;;		_TMR0_CallBack
 15588 ;; This function uses a non-reentrant model
 15589 ;;
 15590                           
 15591  0AE8                     _FRT_IncMillis:	
 15592                           ;psect for function _FRT_IncMillis
 15593                           
 15594  0AE8                     i1l3670:	
 15595                           ;incstack = 0
 15596                           ; Regs used in _FRT_IncMillis: [wreg]
 15597                           
 15598                           
 15599                           ;FRT.c: 39:     millis ++;
 15600  0AE8  3001               	movlw	1
 15601  0AE9  0022               	movlb	2	; select bank2
 15602  0AEA  07BC               	addwf	_millis^(0+256),f
 15603  0AEB  3000               	movlw	0
 15604  0AEC  3DBD               	addwfc	(_millis+1)^(0+256),f
 15605  0AED  3000               	movlw	0
 15606  0AEE  3DBE               	addwfc	(_millis+2)^(0+256),f
 15607  0AEF  3000               	movlw	0
 15608  0AF0  3DBF               	addwfc	(_millis+3)^(0+256),f
 15609  0AF1                     i1l778:
 15610  0AF1  0008               	return
 15611  0AF2                     __end_of_FRT_IncMillis:
 15612                           
 15613                           	psect	text69
 15614  0ADE                     __ptext69:	
 15615 ;; *************** function _FRT_IncMicros *****************
 15616 ;; Defined at:
 15617 ;;		line 45 in file "FRT.c"
 15618 ;; Parameters:    Size  Location     Type
 15619 ;;		None
 15620 ;; Auto vars:     Size  Location     Type
 15621 ;;		None
 15622 ;; Return value:  Size  Location     Type
 15623 ;;                  1    wreg      void 
 15624 ;; Registers used:
 15625 ;;		wreg
 15626 ;; Tracked objects:
 15627 ;;		On entry : 0/0
 15628 ;;		On exit  : 0/0
 15629 ;;		Unchanged: 0/0
 15630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15635 ;;Total ram usage:        0 bytes
 15636 ;; Hardware stack levels used: 1
 15637 ;; This function calls:
 15638 ;;		Nothing
 15639 ;; This function is called by:
 15640 ;;		_TMR0_CallBack
 15641 ;; This function uses a non-reentrant model
 15642 ;;
 15643                           
 15644  0ADE                     _FRT_IncMicros:	
 15645                           ;psect for function _FRT_IncMicros
 15646                           
 15647  0ADE                     i1l3674:	
 15648                           ;incstack = 0
 15649                           ; Regs used in _FRT_IncMicros: [wreg]
 15650                           
 15651                           
 15652                           ;FRT.c: 46:     micros += 1000;
 15653  0ADE  30E8               	movlw	232
 15654  0ADF  0022               	movlb	2	; select bank2
 15655  0AE0  07B8               	addwf	_micros@FRT$F1518^(0+256),f
 15656  0AE1  3003               	movlw	3
 15657  0AE2  3DB9               	addwfc	(_micros@FRT$F1518+1)^(0+256),f
 15658  0AE3  3000               	movlw	0
 15659  0AE4  3DBA               	addwfc	(_micros@FRT$F1518+2)^(0+256),f
 15660  0AE5  3000               	movlw	0
 15661  0AE6  3DBB               	addwfc	(_micros@FRT$F1518+3)^(0+256),f
 15662  0AE7                     i1l781:
 15663  0AE7  0008               	return
 15664  0AE8                     __end_of_FRT_IncMicros:
 15665                           
 15666                           	psect	text70
 15667  0D03                     __ptext70:	
 15668 ;; *************** function _EUSART_Transmit_ISR *****************
 15669 ;; Defined at:
 15670 ;;		line 181 in file "eusart.c"
 15671 ;; Parameters:    Size  Location     Type
 15672 ;;		None
 15673 ;; Auto vars:     Size  Location     Type
 15674 ;;		None
 15675 ;; Return value:  Size  Location     Type
 15676 ;;                  1    wreg      void 
 15677 ;; Registers used:
 15678 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15679 ;; Tracked objects:
 15680 ;;		On entry : 0/0
 15681 ;;		On exit  : 0/0
 15682 ;;		Unchanged: 0/0
 15683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15686 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15687 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15688 ;;Total ram usage:        1 bytes
 15689 ;; Hardware stack levels used: 1
 15690 ;; This function calls:
 15691 ;;		Nothing
 15692 ;; This function is called by:
 15693 ;;		_EUSART_Initialize
 15694 ;;		_INTERRUPT_InterruptManager
 15695 ;; This function uses a non-reentrant model
 15696 ;;
 15697                           
 15698  0D03                     _EUSART_Transmit_ISR:	
 15699                           ;psect for function _EUSART_Transmit_ISR
 15700                           
 15701  0D03                     i1l4192:	
 15702                           ;incstack = 0
 15703                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 15704                           
 15705                           
 15706                           ;eusart.c: 185:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 15707  0D03  3008               	movlw	8
 15708  0D04  0021               	movlb	1	; select bank1
 15709  0D05  0252               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 15710  0D06  1803               	skipnc
 15711  0D07  2D09               	goto	u145_21
 15712  0D08  2D0A               	goto	u145_20
 15713  0D09                     u145_21:
 15714  0D09  2D23               	goto	i1l602
 15715  0D0A                     u145_20:
 15716  0D0A                     i1l4194:
 15717                           
 15718                           ;eusart.c: 186:     {;eusart.c: 187:         TX1REG = eusartTxBuffer[eusartTxTail++];
 15719  0D0A  0853               	movf	_eusartTxTail^(0+128),w
 15720  0D0B  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 15721  0D0C  0086               	movwf	6
 15722  0D0D  3001               	movlw	1	; select bank2/3
 15723  0D0E  0087               	movwf	7
 15724  0D0F  0801               	movf	1,w
 15725  0D10  0023               	movlb	3	; select bank3
 15726  0D11  009A               	movwf	26	;volatile
 15727  0D12                     i1l4196:
 15728  0D12  3001               	movlw	1
 15729  0D13  00F0               	movwf	??_EUSART_Transmit_ISR
 15730  0D14  0870               	movf	??_EUSART_Transmit_ISR,w
 15731  0D15  0021               	movlb	1	; select bank1
 15732  0D16  07D3               	addwf	_eusartTxTail^(0+128),f	;volatile
 15733  0D17                     i1l4198:
 15734                           
 15735                           ;eusart.c: 188:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 15736  0D17  3008               	movlw	8
 15737  0D18  0253               	subwf	_eusartTxTail^(0+128),w	;volatile
 15738  0D19  1C03               	skipc
 15739  0D1A  2D1C               	goto	u146_21
 15740  0D1B  2D1D               	goto	u146_20
 15741  0D1C                     u146_21:
 15742  0D1C  2D1E               	goto	i1l4202
 15743  0D1D                     u146_20:
 15744  0D1D                     i1l4200:
 15745                           
 15746                           ;eusart.c: 189:         {;eusart.c: 190:             eusartTxTail = 0;
 15747  0D1D  01D3               	clrf	_eusartTxTail^(0+128)	;volatile
 15748  0D1E                     i1l4202:
 15749                           
 15750                           ;eusart.c: 192:         eusartTxBufferRemaining++;
 15751  0D1E  3001               	movlw	1
 15752  0D1F  00F0               	movwf	??_EUSART_Transmit_ISR
 15753  0D20  0870               	movf	??_EUSART_Transmit_ISR,w
 15754  0D21  07D2               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 15755                           
 15756                           ;eusart.c: 193:     }
 15757  0D22  2D24               	goto	i1l605
 15758  0D23                     i1l602:	
 15759                           ;eusart.c: 194:     else
 15760                           
 15761                           
 15762                           ;eusart.c: 195:     {;eusart.c: 196:         PIE1bits.TXIE = 0;
 15763  0D23  1211               	bcf	17,4	;volatile
 15764  0D24                     i1l605:
 15765  0D24  0008               	return
 15766  0D25                     __end_of_EUSART_Transmit_ISR:
 15767                           
 15768                           	psect	text71
 15769  0EF7                     __ptext71:	
 15770 ;; *************** function _EUSART_Receive_ISR *****************
 15771 ;; Defined at:
 15772 ;;		line 202 in file "eusart.c"
 15773 ;; Parameters:    Size  Location     Type
 15774 ;;		None
 15775 ;; Auto vars:     Size  Location     Type
 15776 ;;		None
 15777 ;; Return value:  Size  Location     Type
 15778 ;;                  1    wreg      void 
 15779 ;; Registers used:
 15780 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15781 ;; Tracked objects:
 15782 ;;		On entry : 0/0
 15783 ;;		On exit  : 0/0
 15784 ;;		Unchanged: 0/0
 15785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15790 ;;Total ram usage:        0 bytes
 15791 ;; Hardware stack levels used: 1
 15792 ;; Hardware stack levels required when called: 2
 15793 ;; This function calls:
 15794 ;;		Absolute function
 15795 ;;		_EUSART_DefaultErrorHandler
 15796 ;;		_EUSART_DefaultFramingErrorHandler
 15797 ;;		_EUSART_DefaultOverrunErrorHandler
 15798 ;;		_EUSART_RxDataHandler
 15799 ;; This function is called by:
 15800 ;;		_EUSART_Initialize
 15801 ;;		_INTERRUPT_InterruptManager
 15802 ;; This function uses a non-reentrant model
 15803 ;;
 15804                           
 15805  0EF7                     _EUSART_Receive_ISR:	
 15806                           ;psect for function _EUSART_Receive_ISR
 15807                           
 15808  0EF7                     i1l4204:	
 15809                           ;incstack = 0
 15810                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15811                           
 15812                           
 15813                           ;eusart.c: 205:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 15814  0EF7  087B               	movf	_eusartRxHead,w	;volatile
 15815  0EF8  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15816  0EF9  0086               	movwf	6
 15817  0EFA  3001               	movlw	1	; select bank2/3
 15818  0EFB  0087               	movwf	7
 15819  0EFC  0181               	clrf	1
 15820  0EFD                     i1l4206:
 15821                           
 15822                           ;eusart.c: 207:     if(RC1STAbits.FERR){
 15823  0EFD  0023               	movlb	3	; select bank3
 15824  0EFE  1D1D               	btfss	29,2	;volatile
 15825  0EFF  2F01               	goto	u147_21
 15826  0F00  2F02               	goto	u147_20
 15827  0F01                     u147_21:
 15828  0F01  2F0E               	goto	i1l4212
 15829  0F02                     u147_20:
 15830  0F02                     i1l4208:
 15831                           
 15832                           ;eusart.c: 208:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 15833  0F02  087B               	movf	_eusartRxHead,w	;volatile
 15834  0F03  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15835  0F04  0086               	movwf	6
 15836  0F05  3001               	movlw	1	; select bank2/3
 15837  0F06  0087               	movwf	7
 15838  0F07  1481               	bsf	1,1
 15839  0F08                     i1l4210:
 15840                           
 15841                           ;eusart.c: 209:         EUSART_FramingErrorHandler();
 15842  0F08  0021               	movlb	1	; select bank1
 15843  0F09  0835               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 15844  0F0A  008A               	movwf	10
 15845  0F0B  0834               	movf	_EUSART_FramingErrorHandler^(0+128),w
 15846  0F0C  000A               	callw
 15847  0F0D  318E               	pagesel	$
 15848  0F0E                     i1l4212:
 15849                           
 15850                           ;eusart.c: 212:     if(RC1STAbits.OERR){
 15851  0F0E  0023               	movlb	3	; select bank3
 15852  0F0F  1C9D               	btfss	29,1	;volatile
 15853  0F10  2F12               	goto	u148_21
 15854  0F11  2F13               	goto	u148_20
 15855  0F12                     u148_21:
 15856  0F12  2F1F               	goto	i1l4218
 15857  0F13                     u148_20:
 15858  0F13                     i1l4214:
 15859                           
 15860                           ;eusart.c: 213:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 15861  0F13  087B               	movf	_eusartRxHead,w	;volatile
 15862  0F14  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15863  0F15  0086               	movwf	6
 15864  0F16  3001               	movlw	1	; select bank2/3
 15865  0F17  0087               	movwf	7
 15866  0F18  1501               	bsf	1,2
 15867  0F19                     i1l4216:
 15868                           
 15869                           ;eusart.c: 214:         EUSART_OverrunErrorHandler();
 15870  0F19  0021               	movlb	1	; select bank1
 15871  0F1A  0833               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 15872  0F1B  008A               	movwf	10
 15873  0F1C  0832               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 15874  0F1D  000A               	callw
 15875  0F1E  318E               	pagesel	$
 15876  0F1F                     i1l4218:
 15877                           
 15878                           ;eusart.c: 217:     if(eusartRxStatusBuffer[eusartRxHead].status){
 15879  0F1F  087B               	movf	_eusartRxHead,w	;volatile
 15880  0F20  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15881  0F21  0086               	movwf	6
 15882  0F22  3001               	movlw	1	; select bank2/3
 15883  0F23  0087               	movwf	7
 15884  0F24  0801               	movf	1,w
 15885  0F25  1903               	btfsc	3,2
 15886  0F26  2F28               	goto	u149_21
 15887  0F27  2F29               	goto	u149_20
 15888  0F28                     u149_21:
 15889  0F28  2F30               	goto	i1l4222
 15890  0F29                     u149_20:
 15891  0F29                     i1l4220:
 15892                           
 15893                           ;eusart.c: 218:         EUSART_ErrorHandler();
 15894  0F29  0021               	movlb	1	; select bank1
 15895  0F2A  0831               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 15896  0F2B  008A               	movwf	10
 15897  0F2C  0830               	movf	_EUSART_ErrorHandler^(0+128),w
 15898  0F2D  000A               	callw
 15899  0F2E  318E               	pagesel	$
 15900                           
 15901                           ;eusart.c: 219:     } else {
 15902  0F2F  2F33               	goto	i1l612
 15903  0F30                     i1l4222:
 15904                           
 15905                           ;eusart.c: 220:         EUSART_RxDataHandler();
 15906  0F30  318C  248E  318E   	fcall	_EUSART_RxDataHandler
 15907  0F33                     i1l612:
 15908  0F33  0008               	return
 15909  0F34                     __end_of_EUSART_Receive_ISR:
 15910                           
 15911                           	psect	text72
 15912  0A3F                     __ptext72:	
 15913 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 15914 ;; Defined at:
 15915 ;;		line 244 in file "eusart.c"
 15916 ;; Parameters:    Size  Location     Type
 15917 ;;		None
 15918 ;; Auto vars:     Size  Location     Type
 15919 ;;		None
 15920 ;; Return value:  Size  Location     Type
 15921 ;;                  1    wreg      void 
 15922 ;; Registers used:
 15923 ;;		None
 15924 ;; Tracked objects:
 15925 ;;		On entry : 0/0
 15926 ;;		On exit  : 0/0
 15927 ;;		Unchanged: 0/0
 15928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15933 ;;Total ram usage:        0 bytes
 15934 ;; Hardware stack levels used: 1
 15935 ;; This function calls:
 15936 ;;		Nothing
 15937 ;; This function is called by:
 15938 ;;		_EUSART_Initialize
 15939 ;;		_EUSART_Receive_ISR
 15940 ;; This function uses a non-reentrant model
 15941 ;;
 15942                           
 15943  0A3F                     _EUSART_DefaultOverrunErrorHandler:	
 15944                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 15945                           
 15946  0A3F                     i1l3984:	
 15947                           ;incstack = 0
 15948                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 15949                           
 15950                           
 15951                           ;eusart.c: 247:     RC1STAbits.CREN = 0;
 15952  0A3F  0023               	movlb	3	; select bank3
 15953  0A40  121D               	bcf	29,4	;volatile
 15954                           
 15955                           ;eusart.c: 248:     RC1STAbits.CREN = 1;
 15956  0A41  161D               	bsf	29,4	;volatile
 15957  0A42                     i1l622:
 15958  0A42  0008               	return
 15959  0A43                     __end_of_EUSART_DefaultOverrunErrorHandler:
 15960                           
 15961                           	psect	text73
 15962  0A2E                     __ptext73:	
 15963 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 15964 ;; Defined at:
 15965 ;;		line 240 in file "eusart.c"
 15966 ;; Parameters:    Size  Location     Type
 15967 ;;		None
 15968 ;; Auto vars:     Size  Location     Type
 15969 ;;		None
 15970 ;; Return value:  Size  Location     Type
 15971 ;;                  1    wreg      void 
 15972 ;; Registers used:
 15973 ;;		None
 15974 ;; Tracked objects:
 15975 ;;		On entry : 0/0
 15976 ;;		On exit  : 0/0
 15977 ;;		Unchanged: 0/0
 15978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15983 ;;Total ram usage:        0 bytes
 15984 ;; Hardware stack levels used: 1
 15985 ;; This function calls:
 15986 ;;		Nothing
 15987 ;; This function is called by:
 15988 ;;		_EUSART_Initialize
 15989 ;;		_EUSART_Receive_ISR
 15990 ;; This function uses a non-reentrant model
 15991 ;;
 15992                           
 15993  0A2E                     _EUSART_DefaultFramingErrorHandler:	
 15994                           ;psect for function _EUSART_DefaultFramingErrorHandler
 15995                           
 15996  0A2E                     i1l619:	
 15997                           ;incstack = 0
 15998                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 15999                           
 16000  0A2E  0008               	return
 16001  0A2F                     __end_of_EUSART_DefaultFramingErrorHandler:
 16002                           
 16003                           	psect	text74
 16004  0A3B                     __ptext74:	
 16005 ;; *************** function _EUSART_DefaultErrorHandler *****************
 16006 ;; Defined at:
 16007 ;;		line 254 in file "eusart.c"
 16008 ;; Parameters:    Size  Location     Type
 16009 ;;		None
 16010 ;; Auto vars:     Size  Location     Type
 16011 ;;		None
 16012 ;; Return value:  Size  Location     Type
 16013 ;;                  1    wreg      void 
 16014 ;; Registers used:
 16015 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16016 ;; Tracked objects:
 16017 ;;		On entry : 0/0
 16018 ;;		On exit  : 0/0
 16019 ;;		Unchanged: 0/0
 16020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16025 ;;Total ram usage:        0 bytes
 16026 ;; Hardware stack levels used: 1
 16027 ;; Hardware stack levels required when called: 1
 16028 ;; This function calls:
 16029 ;;		_EUSART_RxDataHandler
 16030 ;; This function is called by:
 16031 ;;		_EUSART_Initialize
 16032 ;;		_EUSART_Receive_ISR
 16033 ;; This function uses a non-reentrant model
 16034 ;;
 16035                           
 16036  0A3B                     _EUSART_DefaultErrorHandler:	
 16037                           ;psect for function _EUSART_DefaultErrorHandler
 16038                           
 16039  0A3B                     i1l3986:	
 16040                           ;incstack = 0
 16041                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 16042                           
 16043                           
 16044                           ;eusart.c: 255:     EUSART_RxDataHandler();
 16045  0A3B  318C  248E  318A   	fcall	_EUSART_RxDataHandler
 16046  0A3E                     i1l625:
 16047  0A3E  0008               	return
 16048  0A3F                     __end_of_EUSART_DefaultErrorHandler:
 16049                           
 16050                           	psect	text75
 16051  0C8E                     __ptext75:	
 16052 ;; *************** function _EUSART_RxDataHandler *****************
 16053 ;; Defined at:
 16054 ;;		line 228 in file "eusart.c"
 16055 ;; Parameters:    Size  Location     Type
 16056 ;;		None
 16057 ;; Auto vars:     Size  Location     Type
 16058 ;;		None
 16059 ;; Return value:  Size  Location     Type
 16060 ;;                  1    wreg      void 
 16061 ;; Registers used:
 16062 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16063 ;; Tracked objects:
 16064 ;;		On entry : 0/0
 16065 ;;		On exit  : 0/0
 16066 ;;		Unchanged: 0/0
 16067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16072 ;;Total ram usage:        1 bytes
 16073 ;; Hardware stack levels used: 1
 16074 ;; This function calls:
 16075 ;;		Nothing
 16076 ;; This function is called by:
 16077 ;;		_EUSART_Receive_ISR
 16078 ;;		_EUSART_DefaultErrorHandler
 16079 ;; This function uses a non-reentrant model
 16080 ;;
 16081                           
 16082  0C8E                     _EUSART_RxDataHandler:	
 16083                           ;psect for function _EUSART_RxDataHandler
 16084                           
 16085  0C8E                     i1l3682:	
 16086                           ;incstack = 0
 16087                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 16088                           
 16089                           
 16090                           ;eusart.c: 230:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 16091  0C8E  0023               	movlb	3	; select bank3
 16092  0C8F  0819               	movf	25,w	;volatile
 16093  0C90  00F0               	movwf	??_EUSART_RxDataHandler
 16094  0C91  087B               	movf	_eusartRxHead,w
 16095  0C92  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 16096  0C93  0086               	movwf	6
 16097  0C94  3001               	movlw	1	; select bank2/3
 16098  0C95  0087               	movwf	7
 16099  0C96  0870               	movf	??_EUSART_RxDataHandler,w
 16100  0C97  0081               	movwf	1
 16101  0C98                     i1l3684:
 16102  0C98  3001               	movlw	1
 16103  0C99  00F0               	movwf	??_EUSART_RxDataHandler
 16104  0C9A  0870               	movf	??_EUSART_RxDataHandler,w
 16105  0C9B  07FB               	addwf	_eusartRxHead,f	;volatile
 16106  0C9C                     i1l3686:
 16107                           
 16108                           ;eusart.c: 231:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 16109  0C9C  3008               	movlw	8
 16110  0C9D  027B               	subwf	_eusartRxHead,w	;volatile
 16111  0C9E  1C03               	skipc
 16112  0C9F  2CA1               	goto	u122_21
 16113  0CA0  2CA2               	goto	u122_20
 16114  0CA1                     u122_21:
 16115  0CA1  2CA3               	goto	i1l3690
 16116  0CA2                     u122_20:
 16117  0CA2                     i1l3688:
 16118                           
 16119                           ;eusart.c: 232:     {;eusart.c: 233:         eusartRxHead = 0;
 16120  0CA2  01FB               	clrf	_eusartRxHead	;volatile
 16121  0CA3                     i1l3690:
 16122                           
 16123                           ;eusart.c: 235:     eusartRxCount++;
 16124  0CA3  3001               	movlw	1
 16125  0CA4  00F0               	movwf	??_EUSART_RxDataHandler
 16126  0CA5  0870               	movf	??_EUSART_RxDataHandler,w
 16127  0CA6  0021               	movlb	1	; select bank1
 16128  0CA7  07D1               	addwf	_eusartRxCount^(0+128),f	;volatile
 16129  0CA8                     i1l616:
 16130  0CA8  0008               	return
 16131  0CA9                     __end_of_EUSART_RxDataHandler:
 16132                           
 16133                           	psect	text76
 16134  0A32                     __ptext76:	
 16135 ;; *************** function _CCP4_CompareISR *****************
 16136 ;; Defined at:
 16137 ;;		line 60 in file "ccp4.c"
 16138 ;; Parameters:    Size  Location     Type
 16139 ;;		None
 16140 ;; Auto vars:     Size  Location     Type
 16141 ;;		None
 16142 ;; Return value:  Size  Location     Type
 16143 ;;                  1    wreg      void 
 16144 ;; Registers used:
 16145 ;;		None
 16146 ;; Tracked objects:
 16147 ;;		On entry : 0/0
 16148 ;;		On exit  : 0/0
 16149 ;;		Unchanged: 0/0
 16150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16155 ;;Total ram usage:        0 bytes
 16156 ;; Hardware stack levels used: 1
 16157 ;; This function calls:
 16158 ;;		Nothing
 16159 ;; This function is called by:
 16160 ;;		_INTERRUPT_InterruptManager
 16161 ;; This function uses a non-reentrant model
 16162 ;;
 16163                           
 16164  0A32                     _CCP4_CompareISR:	
 16165                           ;psect for function _CCP4_CompareISR
 16166                           
 16167  0A32                     i1l4224:	
 16168                           ;incstack = 0
 16169                           ; Regs used in _CCP4_CompareISR: []
 16170                           
 16171                           
 16172                           ;ccp4.c: 63:     PIR4bits.CCP4IF = 0;
 16173  0A32  0020               	movlb	0	; select bank0
 16174  0A33  1194               	bcf	20,3	;volatile
 16175  0A34                     i1l874:
 16176  0A34  0008               	return
 16177  0A35                     __end_of_CCP4_CompareISR:
 16178                           
 16179                           	psect	text77
 16180  0C01                     __ptext77:	
 16181 ;; *************** function _CCP3_CaptureISR *****************
 16182 ;; Defined at:
 16183 ;;		line 78 in file "ccp3.c"
 16184 ;; Parameters:    Size  Location     Type
 16185 ;;		None
 16186 ;; Auto vars:     Size  Location     Type
 16187 ;;  module          2    8[COMMON] struct CCPR3Reg_tag
 16188 ;; Return value:  Size  Location     Type
 16189 ;;                  1    wreg      void 
 16190 ;; Registers used:
 16191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16192 ;; Tracked objects:
 16193 ;;		On entry : 0/0
 16194 ;;		On exit  : 0/0
 16195 ;;		Unchanged: 0/0
 16196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16199 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16200 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16201 ;;Total ram usage:        3 bytes
 16202 ;; Hardware stack levels used: 1
 16203 ;; Hardware stack levels required when called: 2
 16204 ;; This function calls:
 16205 ;;		Absolute function
 16206 ;;		_CCP3_DefaultCallBack
 16207 ;; This function is called by:
 16208 ;;		_INTERRUPT_InterruptManager
 16209 ;; This function uses a non-reentrant model
 16210 ;;
 16211                           
 16212  0C01                     _CCP3_CaptureISR:	
 16213                           ;psect for function _CCP3_CaptureISR
 16214                           
 16215  0C01                     i1l4160:	
 16216                           ;incstack = 0
 16217                           ; Regs used in _CCP3_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16218                           
 16219                           
 16220                           ;ccp3.c: 80:     CCP3_PERIOD_REG_T module;;ccp3.c: 83:     PIR4bits.CCP3IF = 0;
 16221  0C01  0020               	movlb	0	; select bank0
 16222  0C02  1114               	bcf	20,2	;volatile
 16223  0C03                     i1l4162:
 16224                           
 16225                           ;ccp3.c: 86:     module.ccpr3l = CCPR3L;
 16226  0C03  0026               	movlb	6	; select bank6
 16227  0C04  0811               	movf	17,w	;volatile
 16228  0C05  00F7               	movwf	??_CCP3_CaptureISR
 16229  0C06  0877               	movf	??_CCP3_CaptureISR,w
 16230  0C07  00F8               	movwf	CCP3_CaptureISR@module
 16231                           
 16232                           ;ccp3.c: 87:     module.ccpr3h = CCPR3H;
 16233  0C08  0812               	movf	18,w	;volatile
 16234  0C09  00F7               	movwf	??_CCP3_CaptureISR
 16235  0C0A  0877               	movf	??_CCP3_CaptureISR,w
 16236  0C0B  00F9               	movwf	CCP3_CaptureISR@module+1
 16237  0C0C                     i1l4164:
 16238                           
 16239                           ;ccp3.c: 90:     CCP3_CallBack(module.ccpr3_16Bit);
 16240  0C0C  0879               	movf	CCP3_CaptureISR@module+1,w
 16241  0C0D  00F4               	movwf	CCP3_DefaultCallBack@capturedValue+1
 16242  0C0E  0878               	movf	CCP3_CaptureISR@module,w
 16243  0C0F  00F3               	movwf	CCP3_DefaultCallBack@capturedValue
 16244  0C10  0021               	movlb	1	; select bank1
 16245  0C11  0841               	movf	(_CCP3_CallBack+1)^(0+128),w
 16246  0C12  008A               	movwf	10
 16247  0C13  0840               	movf	_CCP3_CallBack^(0+128),w
 16248  0C14  000A               	callw
 16249  0C15  318C               	pagesel	$
 16250  0C16                     i1l448:
 16251  0C16  0008               	return
 16252  0C17                     __end_of_CCP3_CaptureISR:
 16253                           
 16254                           	psect	text78
 16255  0E81                     __ptext78:	
 16256 ;; *************** function _CCP3_DefaultCallBack *****************
 16257 ;; Defined at:
 16258 ;;		line 29 in file "ccp3.c"
 16259 ;; Parameters:    Size  Location     Type
 16260 ;;  capturedValu    2    3[COMMON] unsigned short 
 16261 ;; Auto vars:     Size  Location     Type
 16262 ;;		None
 16263 ;; Return value:  Size  Location     Type
 16264 ;;                  1    wreg      void 
 16265 ;; Registers used:
 16266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16267 ;; Tracked objects:
 16268 ;;		On entry : 0/0
 16269 ;;		On exit  : 0/0
 16270 ;;		Unchanged: 0/0
 16271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16275 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16276 ;;Total ram usage:        4 bytes
 16277 ;; Hardware stack levels used: 1
 16278 ;; Hardware stack levels required when called: 1
 16279 ;; This function calls:
 16280 ;;		_JSN_GetLastTrig
 16281 ;;		_ReadPin
 16282 ;; This function is called by:
 16283 ;;		_CCP3_Initialize
 16284 ;;		_CCP3_CaptureISR
 16285 ;; This function uses a non-reentrant model
 16286 ;;
 16287                           
 16288  0E81                     _CCP3_DefaultCallBack:	
 16289                           ;psect for function _CCP3_DefaultCallBack
 16290                           
 16291  0E81                     i1l3954:	
 16292                           ;incstack = 0
 16293                           ; Regs used in _CCP3_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16294                           
 16295                           
 16296                           ;ccp3.c: 29: static void CCP3_DefaultCallBack(uint16_t capturedValue);ccp3.c: 30: {;ccp3
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 16297  0E81  318A  222F  318E   	fcall	_JSN_GetLastTrig
 16298  0E84  00F5               	movwf	??_CCP3_DefaultCallBack
 16299  0E85  0875               	movf	??_CCP3_DefaultCallBack,w
 16300  0E86  0021               	movlb	1	; select bank1
 16301  0E87  00D4               	movwf	_lastTrig@ccp3$F979^(0+128)
 16302                           
 16303                           ;ccp3.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 16304  0E88  2EA3               	goto	i1l3964
 16305  0E89                     i1l3956:
 16306                           
 16307                           ;ccp3.c: 35:             ticksUp = capturedValue;
 16308  0E89  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 16309  0E8A  0021               	movlb	1	; select bank1
 16310  0E8B  00BF               	movwf	(_ticksUp@ccp3$F976+1)^(0+128)
 16311  0E8C  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 16312  0E8D  00BE               	movwf	_ticksUp@ccp3$F976^(0+128)
 16313                           
 16314                           ;ccp3.c: 36:             break;
 16315  0E8E  2EBB               	goto	i1l442
 16316  0E8F                     i1l3958:
 16317                           
 16318                           ;ccp3.c: 39:             ticksDown = capturedValue;
 16319  0E8F  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 16320  0E90  0021               	movlb	1	; select bank1
 16321  0E91  00BD               	movwf	(_ticksDown@ccp3$F977+1)^(0+128)
 16322  0E92  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 16323  0E93  00BC               	movwf	_ticksDown@ccp3$F977^(0+128)
 16324  0E94                     i1l3960:
 16325                           
 16326                           ;ccp3.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 16327  0E94  083E               	movf	_ticksUp@ccp3$F976^(0+128),w
 16328  0E95  023C               	subwf	_ticksDown@ccp3$F977^(0+128),w
 16329  0E96  00F5               	movwf	??_CCP3_DefaultCallBack
 16330  0E97  083F               	movf	(_ticksUp@ccp3$F976+1)^(0+128),w
 16331  0E98  3B3D               	subwfb	(_ticksDown@ccp3$F977+1)^(0+128),w
 16332  0E99  00F6               	movwf	??_CCP3_DefaultCallBack+1
 16333  0E9A  0854               	movf	_lastTrig@ccp3$F979^(0+128),w
 16334  0E9B  0086               	movwf	6
 16335  0E9C  3001               	movlw	1	; select bank2/3
 16336  0E9D  0087               	movwf	7
 16337  0E9E  0875               	movf	??_CCP3_DefaultCallBack,w
 16338  0E9F  3FC0               	movwi [0]fsr1
 16339  0EA0  0876               	movf	??_CCP3_DefaultCallBack+1,w
 16340  0EA1  3FC1               	movwi [1]fsr1
 16341                           
 16342                           ;ccp3.c: 43:             break;
 16343  0EA2  2EBB               	goto	i1l442
 16344  0EA3                     i1l3964:
 16345  0EA3  0854               	movf	_lastTrig@ccp3$F979^(0+128),w
 16346  0EA4  3E05               	addlw	5
 16347  0EA5  0086               	movwf	6
 16348  0EA6  3001               	movlw	1	; select bank2/3
 16349  0EA7  0087               	movwf	7
 16350  0EA8  0801               	movf	1,w
 16351  0EA9  3184  2476  318E   	fcall	_ReadPin
 16352  0EAC  00F5               	movwf	??_CCP3_DefaultCallBack
 16353  0EAD  01F6               	clrf	??_CCP3_DefaultCallBack+1
 16354                           
 16355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16356                           ; Switch size 1, requested type "simple"
 16357                           ; Number of cases is 1, Range of values is 0 to 0
 16358                           ; switch strategies available:
 16359                           ; Name         Instructions Cycles
 16360                           ; simple_byte            4     3 (average)
 16361                           ; direct_byte            8     6 (fixed)
 16362                           ; jumptable            260     6 (fixed)
 16363                           ;	Chosen strategy is simple_byte
 16364  0EAE  0876               	movf	??_CCP3_DefaultCallBack+1,w
 16365  0EAF  3A00               	xorlw	0	; case 0
 16366  0EB0  1903               	skipnz
 16367  0EB1  2EB3               	goto	i1l4606
 16368  0EB2  2EBB               	goto	i1l442
 16369  0EB3                     i1l4606:
 16370                           
 16371                           ; Switch size 1, requested type "simple"
 16372                           ; Number of cases is 2, Range of values is 0 to 1
 16373                           ; switch strategies available:
 16374                           ; Name         Instructions Cycles
 16375                           ; simple_byte            7     4 (average)
 16376                           ; direct_byte           10     6 (fixed)
 16377                           ; jumptable            260     6 (fixed)
 16378                           ;	Chosen strategy is simple_byte
 16379  0EB3  0875               	movf	??_CCP3_DefaultCallBack,w
 16380  0EB4  3A00               	xorlw	0	; case 0
 16381  0EB5  1903               	skipnz
 16382  0EB6  2E8F               	goto	i1l3958
 16383  0EB7  3A01               	xorlw	1	; case 1
 16384  0EB8  1903               	skipnz
 16385  0EB9  2E89               	goto	i1l3956
 16386  0EBA  2EBB               	goto	i1l442
 16387  0EBB                     i1l442:
 16388  0EBB  0008               	return
 16389  0EBC                     __end_of_CCP3_DefaultCallBack:
 16390                           
 16391                           	psect	text79
 16392  0BEB                     __ptext79:	
 16393 ;; *************** function _CCP2_CaptureISR *****************
 16394 ;; Defined at:
 16395 ;;		line 78 in file "ccp2.c"
 16396 ;; Parameters:    Size  Location     Type
 16397 ;;		None
 16398 ;; Auto vars:     Size  Location     Type
 16399 ;;  module          2    8[COMMON] struct CCPR2Reg_tag
 16400 ;; Return value:  Size  Location     Type
 16401 ;;                  1    wreg      void 
 16402 ;; Registers used:
 16403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16404 ;; Tracked objects:
 16405 ;;		On entry : 0/0
 16406 ;;		On exit  : 0/0
 16407 ;;		Unchanged: 0/0
 16408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16410 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16412 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16413 ;;Total ram usage:        3 bytes
 16414 ;; Hardware stack levels used: 1
 16415 ;; Hardware stack levels required when called: 2
 16416 ;; This function calls:
 16417 ;;		Absolute function
 16418 ;;		_CCP2_DefaultCallBack
 16419 ;; This function is called by:
 16420 ;;		_INTERRUPT_InterruptManager
 16421 ;; This function uses a non-reentrant model
 16422 ;;
 16423                           
 16424  0BEB                     _CCP2_CaptureISR:	
 16425                           ;psect for function _CCP2_CaptureISR
 16426                           
 16427  0BEB                     i1l4154:	
 16428                           ;incstack = 0
 16429                           ; Regs used in _CCP2_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16430                           
 16431                           
 16432                           ;ccp2.c: 80:     CCP2_PERIOD_REG_T module;;ccp2.c: 83:     PIR4bits.CCP2IF = 0;
 16433  0BEB  0020               	movlb	0	; select bank0
 16434  0BEC  1094               	bcf	20,1	;volatile
 16435  0BED                     i1l4156:
 16436                           
 16437                           ;ccp2.c: 86:     module.ccpr2l = CCPR2L;
 16438  0BED  0025               	movlb	5	; select bank5
 16439  0BEE  0815               	movf	21,w	;volatile
 16440  0BEF  00F7               	movwf	??_CCP2_CaptureISR
 16441  0BF0  0877               	movf	??_CCP2_CaptureISR,w
 16442  0BF1  00F8               	movwf	CCP2_CaptureISR@module
 16443                           
 16444                           ;ccp2.c: 87:     module.ccpr2h = CCPR2H;
 16445  0BF2  0816               	movf	22,w	;volatile
 16446  0BF3  00F7               	movwf	??_CCP2_CaptureISR
 16447  0BF4  0877               	movf	??_CCP2_CaptureISR,w
 16448  0BF5  00F9               	movwf	CCP2_CaptureISR@module+1
 16449  0BF6                     i1l4158:
 16450                           
 16451                           ;ccp2.c: 90:     CCP2_CallBack(module.ccpr2_16Bit);
 16452  0BF6  0879               	movf	CCP2_CaptureISR@module+1,w
 16453  0BF7  00F4               	movwf	CCP2_DefaultCallBack@capturedValue+1
 16454  0BF8  0878               	movf	CCP2_CaptureISR@module,w
 16455  0BF9  00F3               	movwf	CCP2_DefaultCallBack@capturedValue
 16456  0BFA  0021               	movlb	1	; select bank1
 16457  0BFB  0847               	movf	(_CCP2_CallBack+1)^(0+128),w
 16458  0BFC  008A               	movwf	10
 16459  0BFD  0846               	movf	_CCP2_CallBack^(0+128),w
 16460  0BFE  000A               	callw
 16461  0BFF  318B               	pagesel	$
 16462  0C00                     i1l402:
 16463  0C00  0008               	return
 16464  0C01                     __end_of_CCP2_CaptureISR:
 16465                           
 16466                           	psect	text80
 16467  0E46                     __ptext80:	
 16468 ;; *************** function _CCP2_DefaultCallBack *****************
 16469 ;; Defined at:
 16470 ;;		line 29 in file "ccp2.c"
 16471 ;; Parameters:    Size  Location     Type
 16472 ;;  capturedValu    2    3[COMMON] unsigned short 
 16473 ;; Auto vars:     Size  Location     Type
 16474 ;;		None
 16475 ;; Return value:  Size  Location     Type
 16476 ;;                  1    wreg      void 
 16477 ;; Registers used:
 16478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16479 ;; Tracked objects:
 16480 ;;		On entry : 0/0
 16481 ;;		On exit  : 0/0
 16482 ;;		Unchanged: 0/0
 16483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16487 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16488 ;;Total ram usage:        4 bytes
 16489 ;; Hardware stack levels used: 1
 16490 ;; Hardware stack levels required when called: 1
 16491 ;; This function calls:
 16492 ;;		_JSN_GetLastTrig
 16493 ;;		_ReadPin
 16494 ;; This function is called by:
 16495 ;;		_CCP2_Initialize
 16496 ;;		_CCP2_CaptureISR
 16497 ;; This function uses a non-reentrant model
 16498 ;;
 16499                           
 16500  0E46                     _CCP2_DefaultCallBack:	
 16501                           ;psect for function _CCP2_DefaultCallBack
 16502                           
 16503  0E46                     i1l3938:	
 16504                           ;incstack = 0
 16505                           ; Regs used in _CCP2_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16506                           
 16507                           
 16508                           ;ccp2.c: 29: static void CCP2_DefaultCallBack(uint16_t capturedValue);ccp2.c: 30: {;ccp2
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 16509  0E46  318A  222F  318E   	fcall	_JSN_GetLastTrig
 16510  0E49  00F5               	movwf	??_CCP2_DefaultCallBack
 16511  0E4A  0875               	movf	??_CCP2_DefaultCallBack,w
 16512  0E4B  0021               	movlb	1	; select bank1
 16513  0E4C  00D6               	movwf	_lastTrig@ccp2$F858^(0+128)
 16514                           
 16515                           ;ccp2.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 16516  0E4D  2E68               	goto	i1l3948
 16517  0E4E                     i1l3940:
 16518                           
 16519                           ;ccp2.c: 35:             ticksUp = capturedValue;
 16520  0E4E  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 16521  0E4F  0021               	movlb	1	; select bank1
 16522  0E50  00C5               	movwf	(_ticksUp@ccp2$F855+1)^(0+128)
 16523  0E51  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 16524  0E52  00C4               	movwf	_ticksUp@ccp2$F855^(0+128)
 16525                           
 16526                           ;ccp2.c: 36:             break;
 16527  0E53  2E80               	goto	i1l396
 16528  0E54                     i1l3942:
 16529                           
 16530                           ;ccp2.c: 39:             ticksDown = capturedValue;
 16531  0E54  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 16532  0E55  0021               	movlb	1	; select bank1
 16533  0E56  00C3               	movwf	(_ticksDown@ccp2$F856+1)^(0+128)
 16534  0E57  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 16535  0E58  00C2               	movwf	_ticksDown@ccp2$F856^(0+128)
 16536  0E59                     i1l3944:
 16537                           
 16538                           ;ccp2.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 16539  0E59  0844               	movf	_ticksUp@ccp2$F855^(0+128),w
 16540  0E5A  0242               	subwf	_ticksDown@ccp2$F856^(0+128),w
 16541  0E5B  00F5               	movwf	??_CCP2_DefaultCallBack
 16542  0E5C  0845               	movf	(_ticksUp@ccp2$F855+1)^(0+128),w
 16543  0E5D  3B43               	subwfb	(_ticksDown@ccp2$F856+1)^(0+128),w
 16544  0E5E  00F6               	movwf	??_CCP2_DefaultCallBack+1
 16545  0E5F  0856               	movf	_lastTrig@ccp2$F858^(0+128),w
 16546  0E60  0086               	movwf	6
 16547  0E61  3001               	movlw	1	; select bank2/3
 16548  0E62  0087               	movwf	7
 16549  0E63  0875               	movf	??_CCP2_DefaultCallBack,w
 16550  0E64  3FC0               	movwi [0]fsr1
 16551  0E65  0876               	movf	??_CCP2_DefaultCallBack+1,w
 16552  0E66  3FC1               	movwi [1]fsr1
 16553                           
 16554                           ;ccp2.c: 43:             break;
 16555  0E67  2E80               	goto	i1l396
 16556  0E68                     i1l3948:
 16557  0E68  0856               	movf	_lastTrig@ccp2$F858^(0+128),w
 16558  0E69  3E05               	addlw	5
 16559  0E6A  0086               	movwf	6
 16560  0E6B  3001               	movlw	1	; select bank2/3
 16561  0E6C  0087               	movwf	7
 16562  0E6D  0801               	movf	1,w
 16563  0E6E  3184  2476  318E   	fcall	_ReadPin
 16564  0E71  00F5               	movwf	??_CCP2_DefaultCallBack
 16565  0E72  01F6               	clrf	??_CCP2_DefaultCallBack+1
 16566                           
 16567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16568                           ; Switch size 1, requested type "simple"
 16569                           ; Number of cases is 1, Range of values is 0 to 0
 16570                           ; switch strategies available:
 16571                           ; Name         Instructions Cycles
 16572                           ; simple_byte            4     3 (average)
 16573                           ; direct_byte            8     6 (fixed)
 16574                           ; jumptable            260     6 (fixed)
 16575                           ;	Chosen strategy is simple_byte
 16576  0E73  0876               	movf	??_CCP2_DefaultCallBack+1,w
 16577  0E74  3A00               	xorlw	0	; case 0
 16578  0E75  1903               	skipnz
 16579  0E76  2E78               	goto	i1l4608
 16580  0E77  2E80               	goto	i1l396
 16581  0E78                     i1l4608:
 16582                           
 16583                           ; Switch size 1, requested type "simple"
 16584                           ; Number of cases is 2, Range of values is 0 to 1
 16585                           ; switch strategies available:
 16586                           ; Name         Instructions Cycles
 16587                           ; simple_byte            7     4 (average)
 16588                           ; direct_byte           10     6 (fixed)
 16589                           ; jumptable            260     6 (fixed)
 16590                           ;	Chosen strategy is simple_byte
 16591  0E78  0875               	movf	??_CCP2_DefaultCallBack,w
 16592  0E79  3A00               	xorlw	0	; case 0
 16593  0E7A  1903               	skipnz
 16594  0E7B  2E54               	goto	i1l3942
 16595  0E7C  3A01               	xorlw	1	; case 1
 16596  0E7D  1903               	skipnz
 16597  0E7E  2E4E               	goto	i1l3940
 16598  0E7F  2E80               	goto	i1l396
 16599  0E80                     i1l396:
 16600  0E80  0008               	return
 16601  0E81                     __end_of_CCP2_DefaultCallBack:
 16602                           
 16603                           	psect	text81
 16604  0BD5                     __ptext81:	
 16605 ;; *************** function _CCP1_CaptureISR *****************
 16606 ;; Defined at:
 16607 ;;		line 78 in file "ccp1.c"
 16608 ;; Parameters:    Size  Location     Type
 16609 ;;		None
 16610 ;; Auto vars:     Size  Location     Type
 16611 ;;  module          2    8[COMMON] struct CCPR1Reg_tag
 16612 ;; Return value:  Size  Location     Type
 16613 ;;                  1    wreg      void 
 16614 ;; Registers used:
 16615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16616 ;; Tracked objects:
 16617 ;;		On entry : 0/0
 16618 ;;		On exit  : 0/0
 16619 ;;		Unchanged: 0/0
 16620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16623 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16624 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16625 ;;Total ram usage:        3 bytes
 16626 ;; Hardware stack levels used: 1
 16627 ;; Hardware stack levels required when called: 2
 16628 ;; This function calls:
 16629 ;;		Absolute function
 16630 ;;		_CCP1_DefaultCallBack
 16631 ;; This function is called by:
 16632 ;;		_INTERRUPT_InterruptManager
 16633 ;; This function uses a non-reentrant model
 16634 ;;
 16635                           
 16636  0BD5                     _CCP1_CaptureISR:	
 16637                           ;psect for function _CCP1_CaptureISR
 16638                           
 16639  0BD5                     i1l4148:	
 16640                           ;incstack = 0
 16641                           ; Regs used in _CCP1_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16642                           
 16643                           
 16644                           ;ccp1.c: 80:     CCP1_PERIOD_REG_T module;;ccp1.c: 83:     PIR4bits.CCP1IF = 0;
 16645  0BD5  0020               	movlb	0	; select bank0
 16646  0BD6  1014               	bcf	20,0	;volatile
 16647  0BD7                     i1l4150:
 16648                           
 16649                           ;ccp1.c: 86:     module.ccpr1l = CCPR1L;
 16650  0BD7  0025               	movlb	5	; select bank5
 16651  0BD8  0811               	movf	17,w	;volatile
 16652  0BD9  00F7               	movwf	??_CCP1_CaptureISR
 16653  0BDA  0877               	movf	??_CCP1_CaptureISR,w
 16654  0BDB  00F8               	movwf	CCP1_CaptureISR@module
 16655                           
 16656                           ;ccp1.c: 87:     module.ccpr1h = CCPR1H;
 16657  0BDC  0812               	movf	18,w	;volatile
 16658  0BDD  00F7               	movwf	??_CCP1_CaptureISR
 16659  0BDE  0877               	movf	??_CCP1_CaptureISR,w
 16660  0BDF  00F9               	movwf	CCP1_CaptureISR@module+1
 16661  0BE0                     i1l4152:
 16662                           
 16663                           ;ccp1.c: 90:     CCP1_CallBack(module.ccpr1_16Bit);
 16664  0BE0  0879               	movf	CCP1_CaptureISR@module+1,w
 16665  0BE1  00F4               	movwf	CCP1_DefaultCallBack@capturedValue+1
 16666  0BE2  0878               	movf	CCP1_CaptureISR@module,w
 16667  0BE3  00F3               	movwf	CCP1_DefaultCallBack@capturedValue
 16668  0BE4  0021               	movlb	1	; select bank1
 16669  0BE5  084D               	movf	(_CCP1_CallBack+1)^(0+128),w
 16670  0BE6  008A               	movwf	10
 16671  0BE7  084C               	movf	_CCP1_CallBack^(0+128),w
 16672  0BE8  000A               	callw
 16673  0BE9  318B               	pagesel	$
 16674  0BEA                     i1l356:
 16675  0BEA  0008               	return
 16676  0BEB                     __end_of_CCP1_CaptureISR:
 16677                           
 16678                           	psect	text82
 16679  0E0B                     __ptext82:	
 16680 ;; *************** function _CCP1_DefaultCallBack *****************
 16681 ;; Defined at:
 16682 ;;		line 29 in file "ccp1.c"
 16683 ;; Parameters:    Size  Location     Type
 16684 ;;  capturedValu    2    3[COMMON] unsigned short 
 16685 ;; Auto vars:     Size  Location     Type
 16686 ;;		None
 16687 ;; Return value:  Size  Location     Type
 16688 ;;                  1    wreg      void 
 16689 ;; Registers used:
 16690 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16691 ;; Tracked objects:
 16692 ;;		On entry : 0/0
 16693 ;;		On exit  : 0/0
 16694 ;;		Unchanged: 0/0
 16695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16696 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16698 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16699 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16700 ;;Total ram usage:        4 bytes
 16701 ;; Hardware stack levels used: 1
 16702 ;; Hardware stack levels required when called: 1
 16703 ;; This function calls:
 16704 ;;		_JSN_GetLastTrig
 16705 ;;		_ReadPin
 16706 ;; This function is called by:
 16707 ;;		_CCP1_Initialize
 16708 ;;		_CCP1_CaptureISR
 16709 ;; This function uses a non-reentrant model
 16710 ;;
 16711                           
 16712  0E0B                     _CCP1_DefaultCallBack:	
 16713                           ;psect for function _CCP1_DefaultCallBack
 16714                           
 16715  0E0B                     i1l3922:	
 16716                           ;incstack = 0
 16717                           ; Regs used in _CCP1_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16718                           
 16719                           
 16720                           ;ccp1.c: 29: static void CCP1_DefaultCallBack(uint16_t capturedValue);ccp1.c: 30: {;ccp1
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 16721  0E0B  318A  222F  318E   	fcall	_JSN_GetLastTrig
 16722  0E0E  00F5               	movwf	??_CCP1_DefaultCallBack
 16723  0E0F  0875               	movf	??_CCP1_DefaultCallBack,w
 16724  0E10  0021               	movlb	1	; select bank1
 16725  0E11  00D8               	movwf	_lastTrig@ccp1$F716^(0+128)
 16726                           
 16727                           ;ccp1.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 16728  0E12  2E2D               	goto	i1l3932
 16729  0E13                     i1l3924:
 16730                           
 16731                           ;ccp1.c: 35:             ticksUp = capturedValue;
 16732  0E13  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 16733  0E14  0021               	movlb	1	; select bank1
 16734  0E15  00CB               	movwf	(_ticksUp+1)^(0+128)
 16735  0E16  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 16736  0E17  00CA               	movwf	_ticksUp^(0+128)
 16737                           
 16738                           ;ccp1.c: 36:             break;
 16739  0E18  2E45               	goto	i1l350
 16740  0E19                     i1l3926:
 16741                           
 16742                           ;ccp1.c: 39:             ticksDown = capturedValue;
 16743  0E19  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 16744  0E1A  0021               	movlb	1	; select bank1
 16745  0E1B  00C9               	movwf	(_ticksDown+1)^(0+128)
 16746  0E1C  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 16747  0E1D  00C8               	movwf	_ticksDown^(0+128)
 16748  0E1E                     i1l3928:
 16749                           
 16750                           ;ccp1.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 16751  0E1E  084A               	movf	_ticksUp^(0+128),w
 16752  0E1F  0248               	subwf	_ticksDown^(0+128),w
 16753  0E20  00F5               	movwf	??_CCP1_DefaultCallBack
 16754  0E21  084B               	movf	(_ticksUp+1)^(0+128),w
 16755  0E22  3B49               	subwfb	(_ticksDown+1)^(0+128),w
 16756  0E23  00F6               	movwf	??_CCP1_DefaultCallBack+1
 16757  0E24  0858               	movf	_lastTrig@ccp1$F716^(0+128),w
 16758  0E25  0086               	movwf	6
 16759  0E26  3001               	movlw	1	; select bank2/3
 16760  0E27  0087               	movwf	7
 16761  0E28  0875               	movf	??_CCP1_DefaultCallBack,w
 16762  0E29  3FC0               	movwi [0]fsr1
 16763  0E2A  0876               	movf	??_CCP1_DefaultCallBack+1,w
 16764  0E2B  3FC1               	movwi [1]fsr1
 16765                           
 16766                           ;ccp1.c: 43:             break;
 16767  0E2C  2E45               	goto	i1l350
 16768  0E2D                     i1l3932:
 16769  0E2D  0858               	movf	_lastTrig@ccp1$F716^(0+128),w
 16770  0E2E  3E05               	addlw	5
 16771  0E2F  0086               	movwf	6
 16772  0E30  3001               	movlw	1	; select bank2/3
 16773  0E31  0087               	movwf	7
 16774  0E32  0801               	movf	1,w
 16775  0E33  3184  2476  318E   	fcall	_ReadPin
 16776  0E36  00F5               	movwf	??_CCP1_DefaultCallBack
 16777  0E37  01F6               	clrf	??_CCP1_DefaultCallBack+1
 16778                           
 16779                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16780                           ; Switch size 1, requested type "simple"
 16781                           ; Number of cases is 1, Range of values is 0 to 0
 16782                           ; switch strategies available:
 16783                           ; Name         Instructions Cycles
 16784                           ; simple_byte            4     3 (average)
 16785                           ; direct_byte            8     6 (fixed)
 16786                           ; jumptable            260     6 (fixed)
 16787                           ;	Chosen strategy is simple_byte
 16788  0E38  0876               	movf	??_CCP1_DefaultCallBack+1,w
 16789  0E39  3A00               	xorlw	0	; case 0
 16790  0E3A  1903               	skipnz
 16791  0E3B  2E3D               	goto	i1l4610
 16792  0E3C  2E45               	goto	i1l350
 16793  0E3D                     i1l4610:
 16794                           
 16795                           ; Switch size 1, requested type "simple"
 16796                           ; Number of cases is 2, Range of values is 0 to 1
 16797                           ; switch strategies available:
 16798                           ; Name         Instructions Cycles
 16799                           ; simple_byte            7     4 (average)
 16800                           ; direct_byte           10     6 (fixed)
 16801                           ; jumptable            260     6 (fixed)
 16802                           ;	Chosen strategy is simple_byte
 16803  0E3D  0875               	movf	??_CCP1_DefaultCallBack,w
 16804  0E3E  3A00               	xorlw	0	; case 0
 16805  0E3F  1903               	skipnz
 16806  0E40  2E19               	goto	i1l3926
 16807  0E41  3A01               	xorlw	1	; case 1
 16808  0E42  1903               	skipnz
 16809  0E43  2E13               	goto	i1l3924
 16810  0E44  2E45               	goto	i1l350
 16811  0E45                     i1l350:
 16812  0E45  0008               	return
 16813  0E46                     __end_of_CCP1_DefaultCallBack:
 16814                           
 16815                           	psect	text83
 16816  0476                     __ptext83:	
 16817 ;; *************** function _ReadPin *****************
 16818 ;; Defined at:
 16819 ;;		line 103 in file "PIC16Xpress_DevBoard.c"
 16820 ;; Parameters:    Size  Location     Type
 16821 ;;  pin             1    wreg     enum E7144
 16822 ;; Auto vars:     Size  Location     Type
 16823 ;;  pin             1    2[COMMON] enum E7144
 16824 ;; Return value:  Size  Location     Type
 16825 ;;                  1    wreg      unsigned char 
 16826 ;; Registers used:
 16827 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 16828 ;; Tracked objects:
 16829 ;;		On entry : 0/0
 16830 ;;		On exit  : 0/0
 16831 ;;		Unchanged: 0/0
 16832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16835 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16836 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16837 ;;Total ram usage:        3 bytes
 16838 ;; Hardware stack levels used: 1
 16839 ;; This function calls:
 16840 ;;		Nothing
 16841 ;; This function is called by:
 16842 ;;		_CCP1_DefaultCallBack
 16843 ;;		_CCP2_DefaultCallBack
 16844 ;;		_CCP3_DefaultCallBack
 16845 ;; This function uses a non-reentrant model
 16846 ;;
 16847                           
 16848  0476                     _ReadPin:	
 16849                           ;psect for function _ReadPin
 16850                           
 16851                           
 16852                           ;incstack = 0
 16853                           ; Regs used in _ReadPin: [wreg-fsr0h+status,2+status,0]
 16854                           ;ReadPin@pin stored from wreg
 16855  0476  00F2               	movwf	ReadPin@pin
 16856  0477                     i1l3384:
 16857                           
 16858                           ;PIC16Xpress_DevBoard.c: 104:     switch(pin) {
 16859  0477  2CCC               	goto	i1l3464
 16860  0478                     i1l3386:
 16861                           
 16862                           ;PIC16Xpress_DevBoard.c: 106:             return PORTAbits.RA5;
 16863  0478  0020               	movlb	0	; select bank0
 16864  0479  0E0C               	swapf	12,w	;volatile
 16865  047A  0C89               	rrf	9,f
 16866  047B  3901               	andlw	1
 16867  047C  2D0C               	goto	i1l139
 16868  047D                     i1l3390:
 16869                           
 16870                           ;PIC16Xpress_DevBoard.c: 108:             return PORTAbits.RA4;
 16871  047D  0020               	movlb	0	; select bank0
 16872  047E  0E0C               	swapf	12,w	;volatile
 16873  047F  3901               	andlw	1
 16874  0480  2D0C               	goto	i1l139
 16875  0481                     i1l3394:
 16876                           
 16877                           ;PIC16Xpress_DevBoard.c: 110:             return 0xFF;
 16878  0481  30FF               	movlw	255
 16879  0482  2D0C               	goto	i1l139
 16880  0483                     i1l3398:
 16881                           
 16882                           ;PIC16Xpress_DevBoard.c: 112:             return PORTCbits.RC5;
 16883  0483  0020               	movlb	0	; select bank0
 16884  0484  0E0E               	swapf	14,w	;volatile
 16885  0485  0C89               	rrf	9,f
 16886  0486  3901               	andlw	1
 16887  0487  2D0C               	goto	i1l139
 16888  0488                     i1l3402:
 16889                           
 16890                           ;PIC16Xpress_DevBoard.c: 114:             return PORTCbits.RC4;
 16891  0488  0020               	movlb	0	; select bank0
 16892  0489  0E0E               	swapf	14,w	;volatile
 16893  048A  3901               	andlw	1
 16894  048B  2D0C               	goto	i1l139
 16895  048C                     i1l3406:
 16896                           
 16897                           ;PIC16Xpress_DevBoard.c: 116:             return PORTCbits.RC3;
 16898  048C  0020               	movlb	0	; select bank0
 16899  048D  0C0E               	rrf	14,w	;volatile
 16900  048E  00F0               	movwf	??_ReadPin
 16901  048F  0CF0               	rrf	??_ReadPin,f
 16902  0490  0C70               	rrf	??_ReadPin,w
 16903  0491  3901               	andlw	1
 16904  0492  2D0C               	goto	i1l139
 16905  0493                     i1l3410:
 16906                           
 16907                           ;PIC16Xpress_DevBoard.c: 118:             return PORTCbits.RC6;
 16908  0493  0020               	movlb	0	; select bank0
 16909  0494  0E0E               	swapf	14,w	;volatile
 16910  0495  0C89               	rrf	9,f
 16911  0496  0C89               	rrf	9,f
 16912  0497  3901               	andlw	1
 16913  0498  2D0C               	goto	i1l139
 16914  0499                     i1l3414:
 16915                           
 16916                           ;PIC16Xpress_DevBoard.c: 120:             return PORTCbits.RC7;
 16917  0499  0020               	movlb	0	; select bank0
 16918  049A  0D0E               	rlf	14,w	;volatile
 16919  049B  0D0E               	rlf	14,w	;volatile
 16920  049C  3901               	andlw	1
 16921  049D  2D0C               	goto	i1l139
 16922  049E                     i1l3418:
 16923                           
 16924                           ;PIC16Xpress_DevBoard.c: 122:             return PORTBbits.RB7;
 16925  049E  0020               	movlb	0	; select bank0
 16926  049F  0D0D               	rlf	13,w	;volatile
 16927  04A0  0D0D               	rlf	13,w	;volatile
 16928  04A1  3901               	andlw	1
 16929  04A2  2D0C               	goto	i1l139
 16930  04A3                     i1l3422:
 16931                           
 16932                           ;PIC16Xpress_DevBoard.c: 124:             return PORTAbits.RA0;
 16933  04A3  0020               	movlb	0	; select bank0
 16934  04A4  080C               	movf	12,w	;volatile
 16935  04A5  3901               	andlw	1
 16936  04A6  2D0C               	goto	i1l139
 16937  04A7                     i1l3426:
 16938                           
 16939                           ;PIC16Xpress_DevBoard.c: 126:             return PORTAbits.RA1;
 16940  04A7  0020               	movlb	0	; select bank0
 16941  04A8  0C0C               	rrf	12,w	;volatile
 16942  04A9  3901               	andlw	1
 16943  04AA  2D0C               	goto	i1l139
 16944  04AB                     i1l3430:
 16945                           
 16946                           ;PIC16Xpress_DevBoard.c: 128:             return PORTAbits.RA2;
 16947  04AB  0020               	movlb	0	; select bank0
 16948  04AC  0C0C               	rrf	12,w	;volatile
 16949  04AD  0C89               	rrf	9,f
 16950  04AE  3901               	andlw	1
 16951  04AF  2D0C               	goto	i1l139
 16952  04B0                     i1l3434:
 16953                           
 16954                           ;PIC16Xpress_DevBoard.c: 130:             return PORTCbits.RC0;
 16955  04B0  0020               	movlb	0	; select bank0
 16956  04B1  080E               	movf	14,w	;volatile
 16957  04B2  3901               	andlw	1
 16958  04B3  2D0C               	goto	i1l139
 16959  04B4                     i1l3438:
 16960                           
 16961                           ;PIC16Xpress_DevBoard.c: 132:             return PORTCbits.RC1;
 16962  04B4  0020               	movlb	0	; select bank0
 16963  04B5  0C0E               	rrf	14,w	;volatile
 16964  04B6  3901               	andlw	1
 16965  04B7  2D0C               	goto	i1l139
 16966  04B8                     i1l3442:
 16967                           
 16968                           ;PIC16Xpress_DevBoard.c: 134:             return PORTCbits.RC2;
 16969  04B8  0020               	movlb	0	; select bank0
 16970  04B9  0C0E               	rrf	14,w	;volatile
 16971  04BA  0C89               	rrf	9,f
 16972  04BB  3901               	andlw	1
 16973  04BC  2D0C               	goto	i1l139
 16974  04BD                     i1l3446:
 16975                           
 16976                           ;PIC16Xpress_DevBoard.c: 136:             return PORTBbits.RB4;
 16977  04BD  0020               	movlb	0	; select bank0
 16978  04BE  0E0D               	swapf	13,w	;volatile
 16979  04BF  3901               	andlw	1
 16980  04C0  2D0C               	goto	i1l139
 16981  04C1                     i1l3450:
 16982                           
 16983                           ;PIC16Xpress_DevBoard.c: 138:             return PORTBbits.RB5;
 16984  04C1  0020               	movlb	0	; select bank0
 16985  04C2  0E0D               	swapf	13,w	;volatile
 16986  04C3  0C89               	rrf	9,f
 16987  04C4  3901               	andlw	1
 16988  04C5  2D0C               	goto	i1l139
 16989  04C6                     i1l3454:
 16990                           
 16991                           ;PIC16Xpress_DevBoard.c: 140:             return PORTBbits.RB6;
 16992  04C6  0020               	movlb	0	; select bank0
 16993  04C7  0E0D               	swapf	13,w	;volatile
 16994  04C8  0C89               	rrf	9,f
 16995  04C9  0C89               	rrf	9,f
 16996  04CA  3901               	andlw	1
 16997  04CB  2D0C               	goto	i1l139
 16998  04CC                     i1l3464:
 16999  04CC  0872               	movf	ReadPin@pin,w
 17000  04CD  00F0               	movwf	??_ReadPin
 17001  04CE  01F1               	clrf	??_ReadPin+1
 17002                           
 17003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17004                           ; Switch size 1, requested type "simple"
 17005                           ; Number of cases is 1, Range of values is 0 to 0
 17006                           ; switch strategies available:
 17007                           ; Name         Instructions Cycles
 17008                           ; simple_byte            4     3 (average)
 17009                           ; direct_byte            8     6 (fixed)
 17010                           ; jumptable            260     6 (fixed)
 17011                           ;	Chosen strategy is simple_byte
 17012  04CF  0871               	movf	??_ReadPin+1,w
 17013  04D0  3A00               	xorlw	0	; case 0
 17014  04D1  1903               	skipnz
 17015  04D2  2CD4               	goto	i1l4612
 17016  04D3  2C81               	goto	i1l3394
 17017  04D4                     i1l4612:
 17018                           
 17019                           ; Switch size 1, requested type "simple"
 17020                           ; Number of cases is 18, Range of values is 0 to 17
 17021                           ; switch strategies available:
 17022                           ; Name         Instructions Cycles
 17023                           ; direct_byte           42     6 (fixed)
 17024                           ; simple_byte           55    28 (average)
 17025                           ; jumptable            260     6 (fixed)
 17026                           ;	Chosen strategy is simple_byte
 17027  04D4  0870               	movf	??_ReadPin,w
 17028  04D5  3A00               	xorlw	0	; case 0
 17029  04D6  1903               	skipnz
 17030  04D7  2C78               	goto	i1l3386
 17031  04D8  3A01               	xorlw	1	; case 1
 17032  04D9  1903               	skipnz
 17033  04DA  2C7D               	goto	i1l3390
 17034  04DB  3A03               	xorlw	3	; case 2
 17035  04DC  1903               	skipnz
 17036  04DD  2C81               	goto	i1l3394
 17037  04DE  3A01               	xorlw	1	; case 3
 17038  04DF  1903               	skipnz
 17039  04E0  2C83               	goto	i1l3398
 17040  04E1  3A07               	xorlw	7	; case 4
 17041  04E2  1903               	skipnz
 17042  04E3  2C88               	goto	i1l3402
 17043  04E4  3A01               	xorlw	1	; case 5
 17044  04E5  1903               	skipnz
 17045  04E6  2C8C               	goto	i1l3406
 17046  04E7  3A03               	xorlw	3	; case 6
 17047  04E8  1903               	skipnz
 17048  04E9  2C93               	goto	i1l3410
 17049  04EA  3A01               	xorlw	1	; case 7
 17050  04EB  1903               	skipnz
 17051  04EC  2C99               	goto	i1l3414
 17052  04ED  3A0F               	xorlw	15	; case 8
 17053  04EE  1903               	skipnz
 17054  04EF  2C9E               	goto	i1l3418
 17055  04F0  3A01               	xorlw	1	; case 9
 17056  04F1  1903               	skipnz
 17057  04F2  2CA3               	goto	i1l3422
 17058  04F3  3A03               	xorlw	3	; case 10
 17059  04F4  1903               	skipnz
 17060  04F5  2CA7               	goto	i1l3426
 17061  04F6  3A01               	xorlw	1	; case 11
 17062  04F7  1903               	skipnz
 17063  04F8  2CAB               	goto	i1l3430
 17064  04F9  3A07               	xorlw	7	; case 12
 17065  04FA  1903               	skipnz
 17066  04FB  2CB0               	goto	i1l3434
 17067  04FC  3A01               	xorlw	1	; case 13
 17068  04FD  1903               	skipnz
 17069  04FE  2CB4               	goto	i1l3438
 17070  04FF  3A03               	xorlw	3	; case 14
 17071  0500  1903               	skipnz
 17072  0501  2CB8               	goto	i1l3442
 17073  0502  3A01               	xorlw	1	; case 15
 17074  0503  1903               	skipnz
 17075  0504  2CBD               	goto	i1l3446
 17076  0505  3A1F               	xorlw	31	; case 16
 17077  0506  1903               	skipnz
 17078  0507  2CC1               	goto	i1l3450
 17079  0508  3A01               	xorlw	1	; case 17
 17080  0509  1903               	skipnz
 17081  050A  2CC6               	goto	i1l3454
 17082  050B  2C81               	goto	i1l3394
 17083  050C                     i1l139:
 17084  050C  0008               	return
 17085  050D                     __end_of_ReadPin:
 17086                           
 17087                           	psect	text84
 17088  0A2F                     __ptext84:	
 17089 ;; *************** function _JSN_GetLastTrig *****************
 17090 ;; Defined at:
 17091 ;;		line 118 in file "JSN_Sensor.c"
 17092 ;; Parameters:    Size  Location     Type
 17093 ;;		None
 17094 ;; Auto vars:     Size  Location     Type
 17095 ;;		None
 17096 ;; Return value:  Size  Location     Type
 17097 ;;                  1    wreg      PTR struct .
 17098 ;; Registers used:
 17099 ;;		wreg
 17100 ;; Tracked objects:
 17101 ;;		On entry : 0/0
 17102 ;;		On exit  : 0/0
 17103 ;;		Unchanged: 0/0
 17104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17109 ;;Total ram usage:        0 bytes
 17110 ;; Hardware stack levels used: 1
 17111 ;; This function calls:
 17112 ;;		Nothing
 17113 ;; This function is called by:
 17114 ;;		_CCP1_DefaultCallBack
 17115 ;;		_CCP2_DefaultCallBack
 17116 ;;		_CCP3_DefaultCallBack
 17117 ;; This function uses a non-reentrant model
 17118 ;;
 17119                           
 17120  0A2F                     _JSN_GetLastTrig:	
 17121                           ;psect for function _JSN_GetLastTrig
 17122                           
 17123  0A2F                     i1l3380:	
 17124                           ;incstack = 0
 17125                           ; Regs used in _JSN_GetLastTrig: [wreg]
 17126                           
 17127                           
 17128                           ;JSN_Sensor.c: 119:     return lastTrig;
 17129  0A2F  0021               	movlb	1	; select bank1
 17130  0A30  085A               	movf	_lastTrig^(0+128),w
 17131  0A31                     i1l56:
 17132  0A31  0008               	return
 17133  0A32                     __end_of_JSN_GetLastTrig:
 17134  007E                     btemp	set	126	;btemp
 17135  007E                     int$flags	set	126
 17136  007E                     wtemp0	set	126
 17137                           
 17138                           	psect	idloc
 17139                           
 17140                           ;Config register IDLOC0 @ 0x8000
 17141                           ;	unspecified, using default values
 17142  8000                     	org	32768
 17143  8000  3FFF               	dw	16383
 17144                           
 17145                           ;Config register IDLOC1 @ 0x8001
 17146                           ;	unspecified, using default values
 17147  8001                     	org	32769
 17148  8001  3FFF               	dw	16383
 17149                           
 17150                           ;Config register IDLOC2 @ 0x8002
 17151                           ;	unspecified, using default values
 17152  8002                     	org	32770
 17153  8002  3FFF               	dw	16383
 17154                           
 17155                           ;Config register IDLOC3 @ 0x8003
 17156                           ;	unspecified, using default values
 17157  8003                     	org	32771
 17158  8003  3FFF               	dw	16383
 17159                           
 17160                           	psect	config
 17161                           
 17162                           ;Config register CONFIG1 @ 0x8007
 17163                           ;	FEXTOSC External Oscillator mode Selection bits
 17164                           ;	FEXTOSC = OFF, Oscillator not enabled
 17165                           ;	Power-up default value for COSC bits
 17166                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 17167                           ;	Clock Out Enable bit
 17168                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 17169                           ;	Clock Switch Enable bit
 17170                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17171                           ;	Fail-Safe Clock Monitor Enable
 17172                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 17173  8007                     	org	32775
 17174  8007  3F8C               	dw	16268
 17175                           
 17176                           ;Config register CONFIG2 @ 0x8008
 17177                           ;	Master Clear Enable bit
 17178                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 17179                           ;	Power-up Timer Enable bit
 17180                           ;	PWRTE = OFF, PWRT disabled
 17181                           ;	Watchdog Timer Enable bits
 17182                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 17183                           ;	Low-power BOR enable bit
 17184                           ;	LPBOREN = OFF, ULPBOR disabled
 17185                           ;	Brown-out Reset Enable bits
 17186                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 17187                           ;	Brown-out Reset Voltage selection bit
 17188                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 17189                           ;	PPSLOCK bit One-Way Set Enable bit
 17190                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 17191                           ;	Stack Overflow/Underflow Reset Enable bit
 17192                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 17193                           ;	Debugger enable bit
 17194                           ;	DEBUG = OFF, Background debugger disabled
 17195  8008                     	org	32776
 17196  8008  3FF3               	dw	16371
 17197                           
 17198                           ;Config register CONFIG3 @ 0x8009
 17199                           ;	User NVM self-write protection bits
 17200                           ;	WRT = OFF, Write protection off
 17201                           ;	Low Voltage Programming Enable bit
 17202                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 17203  8009                     	org	32777
 17204  8009  3FFF               	dw	16383
 17205                           
 17206                           ;Config register CONFIG4 @ 0x800A
 17207                           ;	User NVM Program Memory Code Protection bit
 17208                           ;	CP = OFF, User NVM code protection disabled
 17209                           ;	Data NVM Memory Code Protection bit
 17210                           ;	CPD = OFF, Data NVM code protection disabled
 17211  800A                     	org	32778
 17212  800A  3FFF               	dw	16383

Data Sizes:
    Strings     111
    Constant    0
    Data        0
    BSS         151
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     80      80
    BANK1            80     21      80
    BANK2            80      0      56
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sameSens@ccp3$F978	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sameSens@ccp2$F857	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sameSens	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2413$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    S2413$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_3(CODE[3]), STR_2(CODE[58]), STR_1(CODE[50]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 58
		 -> STR_3(CODE[3]), STR_2(CODE[58]), STR_1(CODE[50]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_3(CODE[3]), STR_2(CODE[58]), STR_1(CODE[50]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP3_DefaultCallBack(), 

    lastTrig@ccp3$F979	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    CCP2_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP2_DefaultCallBack(), 

    CCP2_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP2_DefaultCallBack(), 

    lastTrig@ccp2$F858	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP1_DefaultCallBack(), 

    lastTrig@ccp1$F716	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    sp__JSN_SensorGetPtr	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    sp__JSN_GetLastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    JSN_Sensor_GetDistance@Sensor	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    JSN_Sensor_Trig@Sensor	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    lastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    JSN_Sensor_Init@Sensor	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _INTERRUPT_InterruptManager->_CCP2_CaptureISR
    _INTERRUPT_InterruptManager->_CCP3_CaptureISR
    i1_TMR3_Reload->i1_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _CCP3_CaptureISR->_CCP3_DefaultCallBack
    _CCP3_DefaultCallBack->_ReadPin
    _CCP2_CaptureISR->_CCP2_DefaultCallBack
    _CCP2_DefaultCallBack->_ReadPin
    _CCP1_CaptureISR->_CCP1_DefaultCallBack
    _CCP1_DefaultCallBack->_ReadPin

Critical Paths under _main in BANK0

    _main->_printf
    _SpeakerTone_Init->_SetPin
    _SpeakerTone_Init->_WritePin
    _TMR3_Reload->_TMR3_WriteTimer
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _CCP3_Initialize->_CCP3_SetCallBack
    _CCP2_Initialize->_CCP2_SetCallBack
    _CCP1_Initialize->_CCP1_SetCallBack
    _MotorControl_Off->_TMR2_WriteTimer
    _JSN_Sensor_Trig->_FRT_GetMicros
    _FRT_GetMicros->___wmul
    _JSN_Sensor_Init->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _JSN_Sensor_GetDistance->___lldiv
    ___lldiv->___lmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_JSN_Sensor_Init
    _JSN_Sensor_Init->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   17570
                                              7 BANK1     14    14      0
                      _FRT_GetMillis
                   _JSN_SensorGetPtr
             _JSN_Sensor_GetDistance
                    _JSN_Sensor_Init
                    _JSN_Sensor_Trig
                  _MotorControl_Init
                         _PIC16_Init
                   _SpeakerTone_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SpeakerTone_Init                                     0     0      0    1488
                             _SetPin
                    _SpeakerTone_Off
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _SpeakerTone_Off                                      0     0      0     164
                        _TMR3_Reload
                     _TMR3_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR3_Reload                                          0     0      0     164
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (4) _TMR3_WriteTimer                                      2     0      2     164
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _PIC16_Init                                           0     0      0     882
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     882
                    _CCP1_Initialize
                    _CCP2_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Initialize                                    1     1      0     490
                                              2 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP3_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP2_Initialize                                      0     0      0      98
                   _CCP2_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP2_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP1_Initialize                                      0     0      0      98
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP1_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _MotorControl_Init                                    0     0      0      22
                   _MotorControl_Off
 ---------------------------------------------------------------------------------
 (2) _MotorControl_Off                                     0     0      0      22
                     _TMR2_StopTimer
                    _TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_WriteTimer                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Trig                                      5     5      0    1066
                                             24 BANK0      5     5      0
                      _FRT_GetMicros
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _FRT_GetMicros                                       18    14      4     267
                                              6 BANK0     18    14      4
                _TMR0_GetCallBackNum
                     _TMR0_ReadTimer
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
                _TMR0_GetCallBackNum (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR0_ReadTimer                                       2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _TMR0_GetCallBackNum                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Init                                      5     3      2    7305
                                              2 BANK1      5     3      2
                   _JSN_SensorGetPtr (ARG)
                             _SetPin
                           _WritePin
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5532
                                             76 BANK0      4     0      4
                                              0 BANK1      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5250
                                             68 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    4923
                                             52 BANK0     16    14      2
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                24    16      8    3578
                                             28 BANK0     24    16      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2554
                                             19 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                             11 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     834
                                              3 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      66
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             18     2     16     311
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             26    10     16     314
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (2) _WritePin                                             4     3      1     700
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _SetPin                                               4     3      1     624
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_GetDistance                               5     3      2    1113
                                             26 BANK0      5     3      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     396
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _JSN_SensorGetPtr                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _FRT_GetMillis                                        4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0     852
                   Absolute function *
                    _CCP1_CaptureISR
                    _CCP2_CaptureISR
                    _CCP3_CaptureISR
                    _CCP4_CompareISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR3_ISR                                            0     0      0     114
                      i1_TMR3_Reload
 ---------------------------------------------------------------------------------
 (13) i1_TMR3_Reload                                       0     0      0     114
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (14) i1_TMR3_WriteTimer                                   2     0      2     114
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            1     1      0       0
                                              0 COMMON     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR0_CallBack                                       0     0      0       0
                      _FRT_IncMicros
                      _FRT_IncMillis
 ---------------------------------------------------------------------------------
 (14) _FRT_IncMillis                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _FRT_IncMicros                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _CCP4_CompareISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CCP3_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP3_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (12) _CCP2_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP2_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP2_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (12) _CCP1_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP1_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP1_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (14) _ReadPin                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (14) _JSN_GetLastTrig                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FRT_GetMillis
   _JSN_SensorGetPtr
   _JSN_Sensor_GetDistance
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _JSN_Sensor_Init
     _JSN_SensorGetPtr (ARG)
     _SetPin (ARG)
     _WritePin (ARG)
     _printf (ARG)
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
               _EUSART_Write
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
   _JSN_Sensor_Trig
     _FRT_GetMicros
       _TMR0_GetCallBackNum
       _TMR0_ReadTimer
       ___wmul
         _TMR0_GetCallBackNum (ARG)
     _WritePin
   _MotorControl_Init
     _MotorControl_Off
       _TMR2_StopTimer
       _TMR2_WriteTimer
   _PIC16_Init
     _SYSTEM_Initialize
       _CCP1_Initialize
         _CCP1_SetCallBack
       _CCP2_Initialize
         _CCP2_SetCallBack
       _CCP3_Initialize
         _CCP3_SetCallBack
       _CCP4_Initialize
       _EUSART_Initialize
         _EUSART_SetErrorHandler
         _EUSART_SetFramingErrorHandler
         _EUSART_SetOverrunErrorHandler
         _EUSART_SetRxInterruptHandler
         _EUSART_SetTxInterruptHandler
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _PWM5_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR1_Initialize
       _TMR2_Initialize
       _TMR3_Initialize
       _WDT_Initialize
   _SpeakerTone_Init
     _SetPin
     _SpeakerTone_Off
       _TMR3_Reload
         _TMR3_WriteTimer
       _TMR3_StopTimer
     _WritePin
   _printf

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _CCP1_CaptureISR *
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP2_CaptureISR *
     Absolute function(Fake) *
     _CCP2_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP3_CaptureISR *
     Absolute function(Fake) *
     _CCP3_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP4_CompareISR *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     _TMR0_CallBack
       _FRT_IncMicros
       _FRT_IncMillis
   _TMR1_ISR *
     _TMR1_WriteTimer
   _TMR3_ISR *
     i1_TMR3_Reload
       i1_TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     15      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      38       9       70.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     106      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     106      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun Feb 20 16:05:15 2022

                              _CCP4_Initialize 0B8C                  ?_EUSART_SetRxInterruptHandler 0020  
                       ??_CCP3_DefaultCallBack 0075                          __end_ofi1_TMR3_Reload 0A8D  
                                           l24 03DD                                             l33 0405  
                                           l50 0741                                             l28 0475  
                                           l61 0CE2                                             l53 0F76  
                          ___wmul@multiplicand 0022                        __end_of_CCP1_Initialize 0C45  
                                          l110 0BBF                                            l115 03D9  
                                          l313 0003                                            l242 0B0E  
                                          l163 031E                                            l251 0AFB  
                                          l307 0ADD                                            l405 0A9E  
                                          l245 0B12                                            l239 0D78  
                                          l248 0A46                                            l353 0C44  
                                          l282 0C2C                                            l291 0A6C  
                                          l451 0AA7                                            l445 0C74  
                                          l470 0BAD                                            l359 0A95  
                                          l631 0AC2                                            l640 0ACB  
                                          l634 0AB0                                            l628 0AB9  
                                          l804 07FF                                            l637 0AD4  
                                          l565 0FFF                                            l590 0D8A  
                                          l911 0A37                                            l399 0C5C  
                                          l593 0DA5                                            l905 0A83  
                                          l817 0A73                                            l772 0B8B  
                                          l589 0D81                                            l917 0A4B  
                                          l837 0B39                                            l758 0EF6  
                                          l599 0A65                                            l775 07E6  
                                          l951 0A3A                                            l848 0A7B  
                                          l865 0B9C                                            l945 0B2B  
                                          l962 0B1E                                            l959 0C8D  
                                          l889 0B47                                            _PR2 001E  
                                          u900 0D9F                                            u901 0D9E  
                                          u910 0F7D                                            u911 0F7C  
                                          u920 0F82                                            u921 0F81  
                                          u930 0F91                                            u931 0F90  
                                          u940 0FAF                                            u941 0FAE  
                                          u950 0D4D                                            u951 0D4C  
                                          u880 0D81                                            u960 0CBD  
                                          u881 0D80                                            u945 0FAB  
                                          u961 0CBC                                            u970 05A1  
                                          u890 0D85                                            u891 0D84  
                                          u980 05B0                                            u981 05AF  
                                          u990 05C3                                            u991 05C2  
                              _timer1ReloadVal 00BA                         ??_EUSART_RxDataHandler 0070  
                                          _pad 0742                 ?_EUSART_SetFramingErrorHandler 0020  
                     __end_of_MotorControl_Off 0A7C                                _TMR2_Initialize 0A7C  
                                          wreg 0009                               ?_SpeakerTone_Off 0070  
                                         l1152 0CEE                                           l1402 068D  
                                         l1154 0D02                                           l1166 0E0A  
                 JSN_Sensor_GetDistance@Sensor 003E                                           l4000 0DD7  
                                         l3200 0D3D                                           l4010 0E02  
                                         l4002 0DE0                                           l3202 0CAB  
                              _timer3ReloadVal 00A8                                           l1188 06E8  
                                         l4020 06AD                                           l4004 0DE4  
                                         l4100 0F6D                                           l3220 05BB  
                                         l3212 0599                                           l3204 0CB0  
                                         l3300 0188                                           l4110 0CC9  
                                         l4030 06D3                                           l4022 06B1  
                                         l4014 068E                                           l4006 0DEC  
                                         l3230 05FD                                           l3222 05BF  
                                         l3214 05A4                                           l3206 0CB4  
                                         l3302 018D                                           l3310 0A96  
                                         l1615 0BD4                                           l4104 0CC6  
                                         l4032 06DA                                           l4024 06B8  
                                         l4016 069F                                           l4008 0DF3  
                                         l1392 061C                                           l3232 05FE  
                                         l3224 05C3                                           l3216 05B0  
                                         l3240 0635                                           l3160 0D7B  
                                         l3208 0CBD                                           l1640 075E  
                                         l4040 03DC                                           l3312 0A9F  
                                         l3320 0ABA                                           l1385 060C  
                                         l4114 0CCB                                           l4106 0CC7  
                                         l4026 06CA                                           l4018 06A2  
                                         l4034 06E0                                           l3226 05CB  
                                         l3218 05B3                                           l3242 0639  
                                         l3234 061D                                           l3170 0D99  
                                         l3162 0D7B                                           l3250 0744  
                                         l4042 03DD                                           l4050 03EF  
                                         l3322 0AA8                                           l3314 0AC3  
                                         l3306 0AD5                                           l3330 0C7F  
                                         l1395 067D                                           l1643 0780  
                                         l4124 0CCF                                           l4028 06D2  
                                         l3228 05ED                                           l3244 063D  
                                         l3236 062A                                           l3172 0D9F  
                                         l3164 0D85                                           l3180 0F77  
                                         l1644 078E                                           l3260 0761  
                                         l3252 0749                                           l1660 01A0  
                                         l1652 00DA                                           l3340 01B4  
                                         l4052 0405                                           l4044 03E6  
                                         l4060 041D                                           l3308 0A8D  
                                         l3316 0ACC                                           l3500 0EDD  
                                         l4132 0BAE                                           l3332 0C83  
                                         l3324 0C75                                           l1645 079A  
                                         l4230 0B7B                                           l4118 0CCD  
                                         l3246 065F                                           l3238 062D  
                                         l3174 0DA0                                           l3166 0D8B  
                                         l3190 0FAF                                           l3182 0F7D  
                                         l3262 076D                                           l3254 0752  
                                         l3270 00B4                                           l3350 01DF  
                                         l3342 01BC                                           l4070 0471  
                                         l4054 0414                                           l4062 044F  
                                         l3318 0AB1                                           l3510 0EEA  
                                         l3502 0EE0                                           l4134 0BBA  
                                         l3326 0C7A                                           l3334 0C85  
                                         l3248 066F                                           l3168 0D95  
                                         l3176 0DA3                                           l3184 0F82  
                                         l3264 0772                                           l3256 0757  
                                         l3280 00F6                                           l3272 00B9  
                                         l1648 00BD                                           l3360 0224  
                                         l3352 01F1                                           l3344 01C1  
                                         l1672 0DD6                                           l4064 0458  
                                         l3600 0B93                                           l3520 0B07  
                                         l3512 0EED                                           l3504 0EE2  
                                         l4136 0BBD                                           l3336 0C89  
                                         l3328 0C7B                                           l4240 07FC  
                                         l1665 0263                                           l3178 0A61  
                                         l3186 0F87                                           l3194 0D27  
                                         l3266 0785                                           l3258 075C  
                                         l3290 012D                                           l3282 00F9  
                                         l3274 00CC                                           l3362 022F  
                                         l3346 01C5                                           l3338 01A3  
                                         l4066 045F                                           l4090 070A  
                                         l4242 0B2C                                           l3530 0C60  
                                         l3602 0B98                                           l3522 0B0B  
                                         l3514 0EEF                                           l3506 0EE4  
                                         l3610 0B28                                           l4138 0BBE  
                                         l4234 07E7                                           l3188 0F91  
                                         l1684 0FB9                                           l1692 0D4D  
                                         l3196 0D2A                                           l3284 00FE  
                                         l3292 015A                                           l3276 00D2  
                                         l3348 01D7                                           l3356 020B  
                                         l3372 0240                                           l4068 0468  
                                         l3700 0CE3                                           l4092 0730  
                                         l4244 0B36                                           l3540 0C70  
                                         l3532 0C61                                           l3604 0B9A  
                                         l3524 0B0D                                           l3516 0EF1  
                                         l3508 0EE7                                           l3620 0B43  
                                         l3612 0B3A                                           l4236 07F3  
                                         l4340 0523                                           l3198 0D38  
                                         l3294 0161                                           l3286 0125  
                                         l3278 00E2                                           l3374 0259  
                                         l3358 021C                                           l3366 0235  
                                         l3710 0CFE                                           l3702 0CE6  
                                         l4094 073B                                           l4086 06EB  
                                         l3550 0C32                                           l3542 0C72  
                                         l3534 0C62                                           l3518 0EF4  
                                         l3470 0AF2                                           l3622 0B45  
                                         l3614 0B3D                                           l3630 0BA9  
                                         l3606 0B1F                                           l3526 0A43  
                                         l4238 07F8                                           l4350 052D  
                                         l4342 0526                                           l4334 050D  
                                         l4600 02E6                                           l3296 016D  
                                         l3288 0129                                           l3368 023D  
                                         l3720 0DC4                                           l3704 0CEA  
                                         l4088 06FE                                           l3552 0C33  
                                         l3544 0C2D                                           l3536 0C63  
                                         l3528 0C5D                                           l3640 0FCE  
                                         l3480 0EBC                                           l3472 0AF5  
                                         l3616 0B3E                                           l3632 0BAA  
                                         l3624 0B9D                                           l3560 0A7C  
                                         l3608 0B23                                           l4352 0540  
                                         l4344 0526                                           l4336 0510  
                                         l4098 0F36                                           l4602 03A1  
                                         l3802 038B                                           l1698 0CC3  
                                         l3298 017A                                           l3722 0DCE  
                                         l3714 0DA8                                           l3706 0CF3  
                                         l3554 0C3B                                           l3546 0C30  
                                         l3538 0C6B                                           l3650 0FD9  
                                         l3642 0FD1                                           l3634 0FBA  
                                         l3490 0ECA                                           l3482 0EC0  
                                         l3474 0AF7                                           l3618 0B3F  
                                         l3570 0C1C                                           l3626 0BA1  
                                         l3562 0A7F                                           l4354 0549  
                                         l4346 0526                                           l4338 0520  
                                         l4604 0CD7                                           l3812 0399  
                                         l3740 0321                                           l3716 0DAC  
                                         l3820 0BC0                                           l3708 0CF8  
                                         l3556 0C40                                           l3548 0C31  
                                         l3660 0FF4                                           l3652 0FE1  
                                         l3644 0FD3                                           l3636 0FBC  
                                         l3492 0ECC                                           l3484 0EC3  
                                         l3476 0AF8                                           l3580 0C2B  
                                         l3572 0C1D                                           l3628 0BA2  
                                         l3564 0A80                                           l4356 055C  
                                         l4348 0526                                           l3806 0392  
                                         l3750 0330                                           l3742 0322  
                                         l3718 0DB0                                           l3822 0BC5  
                                         l3558 0C42                                           l3590 0C4B  
                                         l3582 0C45                                           l3662 0FF5  
                                         l3654 0FE9                                           l3646 0FD5  
                                         l3638 0FC4                                           l3494 0ED6  
                                         l3486 0EC5                                           l3478 0AF9  
                                         l3574 0C1E                                           l3566 0A81  
                                         l3910 0D4E                                           l4358 0577  
                                         ?_pad 0033                                           l3840 027C  
                                         l3832 026E                                           l3592 0C53  
                                         l3584 0C48                                           l3664 0FFE  
                                         l3656 0FF1                                           l3648 0FD7  
                                         l3496 0ED9                                           l3488 0EC7  
                                         l3576 0C20                                           l3568 0C17  
                                         l3912 0D6C                                           l3770 0353  
                                         l3762 0345                                           l3754 0337  
                                         l3746 0329                                           l3826 0266  
                                         l3666 0A66                                           l3906 079B  
                                         l3594 0C58                                           l3586 0C49  
                                         l3658 0FF3                                           l3498 0EDB  
                                         l3578 0C28                                           l3914 0D6F  
                                         l3860 029F                                           l3852 0291  
                                         l3844 0283                                           l3836 0275  
                                         l3828 0267                                           l3596 0C5A  
                                         l3588 0C4A                                           l3916 0D72  
                                         l3692 0A38                                           l3790 0376  
                                         l3782 0368                                           l3774 035A  
                                         l3766 034C                                           l3758 033E  
                                         l3678 0002                                           l3598 0B8C  
                                         l3918 0D75                                           l3694 0B13  
                                         l3880 02C2                                           l3872 02B4  
                                         l3864 02A6                                           l3856 0298  
                                         l3848 028A                                           l3696 0A35  
                                         l3794 037D                                           l3786 036F  
                                         l3778 0361                                           l3698 0A49  
                                         l3892 02D7                                           l3884 02C9  
                                         l3876 02BB                                           l3868 02AD  
                                         l4596 03F7                                           l3798 0384  
                                         l4598 0426                                           l3990 0A70  
                                         l3888 02D0                                           l3898 02DE  
                                         l3994 0A74                                           l3996 0A77  
                                         l3988 0A6D                                           STR_1 103A  
                                         STR_2 1000                                           STR_3 106C  
                                         u1000 05ED                                           u1001 05EC  
                                         u1010 060C                                           u1011 060B  
                                         u1020 062A                                           u1100 00B9  
                                         u1005 05E9                                           u1021 0629  
                                         u1101 00B8                                           u1030 063D  
                                         u1110 00CC                                           u1031 063C  
                                         u1111 00CB                                           u1040 065F  
                                         u1120 0161                                           u1200 021C  
                                         u1041 065E                                           u1121 0160  
                                         u1201 021B                                           u1050 067D  
                                         u1130 016D                                           u1210 0B12  
                                         u1051 067C                                           u1131 016C  
                                         u1115 00C8                                           u1211 0B11  
                                         u1300 0DE4                                           u1060 0749  
                                         u1140 017A                                           u1301 0DE3  
                                         u1045 065B                                           u1061 0748  
                                         u1141 0179                                           u1070 0757  
                                         u1150 0188                                           u1230 0CEA  
                                         u1071 0756                                           u1151 0187  
                                         u1231 0CE9                                           u1400 06E0  
                                         u1080 0780                                           u1160 018D  
                                         u1401 06DF                                           u1081 077F  
                                         u1161 018C                                           u1145 0176  
                                         u1330 0E02                                           u1090 0785  
                                         u1410 0730                                           u1170 0C7A  
                                         u1331 0E01                                           u1315 0DED  
                                         u1091 0784                                           u1155 0184  
                                         u1411 072F                                           u1171 0C79  
                                         u1340 069F                                           u1180 01B4  
                                         u1260 0CFE                                           u1341 069E  
                                         u1325 0DF4                                           u1085 077C  
                                         u1181 01B3                                           u1261 0CFD  
                                         u1245 0CEF                                           _LATA 010C  
                                         u1190 01D7                                           u1270 0DCE  
                                         _LATB 010D                                           u1191 01D6  
                                         u1271 0DCD                                           u1255 0CF4  
                                         _LATC 010E                                           u1360 06B1  
                                         u1361 06B0                                           u1355 06A3  
                                         u1380 06CA                                           u1381 06C9  
                                         u1375 06B2                                           u1385 06C6  
                                         u1730 0577                                           u1395 06D4  
                                         u1731 0576                                           _PIE0 0090  
                                         _PIE1 0091                                           _PIE2 0092  
                                         _PIE3 0093                                           _PIE4 0094  
                                         _PMD0 0911                                           _PMD1 0912  
                                         _PMD2 0913                                           _PMD3 0914  
                                         _PMD4 0915                                           _PMD5 0916  
                                         i1l56 0A31                                           _PIR0 0010  
                                         _PIR1 0011                                           _PIR2 0012  
                                         _PIR3 0013                                           _PIR4 0014  
                                         _PLLR 48E0                                           _TMR2 001D  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                           _dbuf 01A0  
                      __end_of_CCP2_Initialize 0C5D                                           _main 050D  
                                         _prec 00A4                                           _nout 00A0  
                                         pad@i 0037                                           pad@p 0034  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 0039                                           btemp 007E  
                                         _utoa 00B2                                     ReadPin@pin 0072  
                                         start 0090                                _TMR3_Initialize 0B1F  
                              _PWM5_Initialize 0B3A                       __end_of_CCP1_SetCallBack 0A96  
                        ??_TMR0_GetCallBackNum 0020                               ?_CCP1_CaptureISR 0070  
                            ?_SpeakerTone_Init 0070                                __end_of_ReadPin 050D  
                      __end_of_CCP4_CompareISR 0A35                                          ??_pad 0036  
                           ??_SpeakerTone_Init 0024                        __end_of_TMR0_Initialize 0C2D  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0B13  
                                 main@distance 00EA                        __end_of_CCP3_Initialize 0C75  
                                        ?_main 0070                                __end_of___lldiv 06E9  
                                        ?_utoa 003C                                __end_of___lodiv 061D  
                                        _T1CON 001B                                          _T2CON 001F  
                                        _T3CON 0413                                __end_of___lomod 068E  
                                        i1l301 0B58                                          i1l304 0A5E  
                                        i1l402 0C00                                          i1l139 050C  
                                        i1l350 0E45                                          i1l442 0EBB  
                                        i1l602 0D23                                          i1l356 0BEA  
                                        i1l612 0F33                                          i1l605 0D24  
                                        i1l622 0A42                                          i1l448 0C16  
                                        i1l616 0CA8                                          i1l625 0A3E  
                                        i1l490 0B06                                          i1l619 0A2E  
                                        i1l396 0E80                                          i1l484 0B69  
                                        i1l681 0014                                          i1l690 0050  
                                        i1l692 005E                                          i1l684 0026  
                                        i1l781 0AE7                                          i1l693 008E  
                                        i1l694 006C                                          i1l686 0034  
                                        i1l696 007D                                          i1l688 0042  
                                        i1l874 0A34                                          i1l778 0AF1  
                                        i1l962 0A8C                                          i1l971 0A51  
                                        i1l699 008E                                          i1l959 0B7A  
                                        _OSCEN 091D                                   vfpfcnvrt@fmt 0054  
                                        _TMR0H 0016                                   vfpfcnvrt@llu 005B  
                                        _TMR1H 001A                                          _TMR0L 0015  
                                        _TMR3H 0412                                          _TMR1L 0019  
                                        _TMR3L 0411                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _RXPPS 0E24                            ___lmul@multiplicand 0024  
                    ?_TMR0_SetInterruptHandler 0020                       __end_of_JSN_SensorGetPtr 0CE3  
                                        _Sens1 0152                                          _Sens2 014C  
                                        _Sens3 0146                               __end_of_TMR0_ISR 0B59  
                             __end_of_TMR1_ISR 0B07                               __end_of_TMR3_ISR 0A52  
                             ?_CCP2_CaptureISR 0070                                          _flags 00A6  
                               _WDT_Initialize 0A43                                          _fputc 0F77  
                                        _fputs 0D25                                          pad@fp 003B  
                                        _width 00A2                                          _putch 0A5F  
                      __end_of_TMR1_Initialize 0BAE                                          pclath 000A  
                                        utoa@d 003C                                          utoa@i 0052  
                                        utoa@n 004A                                          utoa@p 0045  
                                        utoa@w 0048                                          status 0003  
                      __end_of_CCP4_Initialize 0B9D                                          wtemp0 007E  
                             ___lodiv@dividend 0028                                _TMR1_WriteTimer 0B59  
                     __end_of_CCP2_SetCallBack 0A9F                                __initialization 0092  
                             ?_CCP3_CaptureISR 0070                                   __end_of_main 0599  
                                 __end_of_utoa 01A1                                 ??_EUSART_Write 0020  
                      __end_of_TMR2_Initialize 0A84                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0022                                         ??_main 00E2  
                             ?_CCP1_Initialize 0070                                         ??_utoa 0044  
                              _TMR2_WriteTimer 0A47                               ___lodiv@quotient 0031  
                       __end_of_WDT_Initialize 0A47                                _JSN_GetLastTrig 0A2F  
    __end_of_EUSART_DefaultFramingErrorHandler 0A2F            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 0A2E  
                   _EUSART_OverrunErrorHandler 00B2                                         ?_fputc 0023  
                                       ?_fputs 002B                                         _CCPR1H 0292  
                                       _CCPR2H 0296                                         _CCPR3H 0312  
                                       _CCPR1L 0291                                         _CCPR4H 0316  
                                       _CCPR2L 0295                                         _CCPR3L 0311  
                                       _CCPR4L 0315                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _T0CON0 0017  
                                       _T0CON1 0018                                         _T1GCON 001C  
                                       _T3GCON 0414                                         _RC1REG 0199  
                             __end_of_WritePin 031F                                         _RC1PPS 0EA1  
                                       _RC1STA 019D                        TMR1_WriteTimer@timerVal 0070  
                                       _RC4PPS 0EA4                                         _RB6PPS 0E9E  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         i1l4200 0D1D  
                                       i1l3410 0493                                         i1l3402 0488  
                                       i1l4210 0F08                                         i1l4202 0D1E  
                                       i1l4220 0F29                                         i1l4212 0F0E  
                                       i1l4204 0EF7                                         i1l4140 0B48  
                                       i1l3430 04AB                                         i1l3422 04A3  
                                       i1l3414 0499                                         i1l3406 048C  
                                       i1l4150 0BD7                                         i1l4222 0F30  
                                       i1l4214 0F13                                         i1l4206 0EFD  
                                       i1l4142 0B4A                                         i1l4038 0A84  
                                       i1l4152 0BE0                                         i1l4160 0C01  
                                       i1l4224 0A32                                         u122_20 0CA2  
                                       i1l4216 0F19                                         i1l4208 0F02  
                                       i1l4144 0B54                                         u122_21 0CA1  
                                       i1l3450 04C1                                         i1l3442 04B8  
                                       i1l3434 04B0                                         i1l3426 04A7  
                                       i1l3418 049E                                         i1l4154 0BEB  
                                       i1l4162 0C03                                         i1l4218 0F1F  
                                       i1l4146 0B57                                         i1l4226 0A4C  
                                       i1l3380 0A2F                                         i1l4148 0BD5  
                                       i1l4156 0BED                                         i1l4164 0C0C  
                                       i1l4228 0A4E                                         i1l4260 0018  
                      __end_of_PWM5_Initialize 0B48                        __end_of_TMR3_Initialize 0B2C  
                                       i1l3454 04C6                                         i1l3446 04BD  
                                       i1l3438 04B4                                         i1l3390 047D  
                                       i1l4158 0BF6                                         i1l4166 0AFC  
                                       i1l4270 0039                                         i1l4262 001D  
                                       i1l4254 0006                                         i1l3464 04CC  
                                       i1l3384 0477                                         i1l4192 0D03  
                                       i1l4168 0AFE                                         i1l4280 005A  
                                       i1l4272 003E                                         i1l4264 0022  
                                       i1l4256 000B                                         i1l3394 0481  
                                       i1l3386 0478                                         i1l4610 0E3D  
                                       i1l4194 0D0A                                         i1l3730 0B70  
                                       i1l4290 0082                                         i1l4282 0063  
                                       i1l4274 0047                                         i1l4266 002B  
                                       i1l4258 0010                                         i1l4612 04D4  
                                       i1l4196 0D12                                         i1l3732 0B72  
                                       i1l4292 0087                                         i1l4284 0068  
                                       i1l4276 004C                                         i1l4268 0030  
                                       i1l3398 0483                                         i1l4606 0EB3  
                                       i1l4198 0D17                                         i1l3670 0AE8  
                                       i1l3734 0B74                                         i1l3726 0B6A  
                                       i1l4286 0071                                         i1l4278 0055  
                                       i1l4608 0E78                                         i1l3920 0A58  
                                       i1l3728 0B6F                                         i1l3736 0B76  
                                       i1l4288 0076                                         i1l3922 0E0B  
                                       i1l3690 0CA3                                         i1l3682 0C8E  
                                       i1l3674 0ADE                                         i1l3738 0B78  
                                       i1l3924 0E13                                         i1l3932 0E2D  
                                       i1l3940 0E4E                                         i1l3684 0C98  
                                       i1l3926 0E19                                         i1l3942 0E54  
                                       i1l3686 0C9C                                         i1l3928 0E1E  
                                       i1l3944 0E59                                         i1l3960 0E94  
                                       i1l3688 0CA2                                         i1l3938 0E46  
                                       i1l3954 0E81                                         i1l3970 0B59  
                                       i1l3948 0E68                                         i1l3956 0E89  
                                       i1l3964 0EA3                                         i1l3972 0B5E  
                                       i1l3980 0B65                                         i1l3958 0E8F  
                                       i1l3982 0B67                                         i1l3974 0B5F  
                                       i1l3984 0A3F                                         u142_20 0B54  
                                       i1l3976 0B61                                         u150_20 000B  
                                       u142_21 0B53                                         u150_21 000A  
                                       i1l3986 0A3B                                         i1l3978 0B63  
                                       u151_20 0010                                         u151_21 000F  
                                       u128_20 0B6F                                         u160_20 004C  
                                       u152_20 0018                                         u128_21 0B6E  
                                       u160_21 004B                                         u152_21 0017  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         u145_20 0D0A  
                                       u129_20 0B5E                                         u161_20 0055  
                                       u153_20 001D                                         u145_21 0D09  
                                       u129_21 0B5D                                         u161_21 0054  
                                       u153_21 001C                                         u146_20 0D1D  
                                       u162_20 005A                                         u154_20 0022  
                                       u146_21 0D1C                                         u162_21 0059  
                                       u154_21 0021                                         u147_20 0F02  
                                       u163_20 0063                                         u155_20 002B  
                                       u147_21 0F01                                         u163_21 0062  
                                       u155_21 002A                                         u148_20 0F13  
                                       u164_20 0068                                         u156_20 0030  
                                       u148_21 0F12                                         u164_21 0067  
                                       u156_21 002F                                         u149_20 0F29  
                                       u165_20 0071                                         u157_20 0039  
                                       u149_21 0F28                                         u165_21 0070  
                                       u157_21 0038                                         u166_20 0076  
                                       u158_20 003E                                         u166_21 0075  
                                       u158_21 003D                                         u167_20 0082  
                                       u159_20 0047                                         u167_21 0081  
                                       u159_21 0046                                         u168_20 0087  
                                       u168_21 0086                                  main@currMilli 00EC  
                                       _OSCFRQ 091F                                         _TX1REG 019A  
                                       _WDTCON 0097                                         _TX1STA 019E  
                             ?_CCP2_Initialize 0070                              ??_JSN_Sensor_Init 00DF  
                                    ??_ReadPin 0070                                _TMR3_WriteTimer 0C75  
                            ??_JSN_Sensor_Trig 0038                                  _CCP1_CallBack 00CC  
                     __end_of_CCP3_SetCallBack 0AA8                                         _SetPin 031F  
                                _CCP2_CallBack 00C6                                   vfprintf@cfmt 006A  
                                       ___lmul 0DD7                                         ___wmul 0CE3  
                                    ??___lldiv 0034                               ?_CCP4_CompareISR 0070  
                                    ??___lodiv 0030                                      ??___lomod 0030  
                                 ?_TMR3_Reload 0070                                  _CCP3_CallBack 00C0  
                          _EUSART_Transmit_ISR 0D03                               ?_TMR0_Initialize 0070  
                                       _micros 0140                                         _millis 013C  
                           _lastTrig@ccp1$F716 00D8                             _lastTrig@ccp2$F858 00D6  
                           _lastTrig@ccp3$F979 00D4                                         _printf 0BC0  
                                       pad@buf 0033                                  main@prevMilli 00E6  
                             ?_CCP3_Initialize 0070                                         _strlen 0CA9  
                                       fputc@c 0023                                 _PMD_Initialize 0AF2  
                                       fputs@c 002F                                         fputs@i 0030  
                                       fputs@s 0032              CCP2_DefaultCallBack@capturedValue 0073  
                              ?_WDT_Initialize 0070                          __end_of_TMR0_CallBack 0A5F  
                             __end_of_vfprintf 0DD7                                         utoa@fp 0047  
     TMR0_SetInterruptHandler@InterruptHandler 0020                        __end_of_TMR1_WriteTimer 0B6A  
                         ?_EUSART_Transmit_ISR 0070                               ?_TMR1_Initialize 0070  
                            _SYSTEM_Initialize 0D4E                        __end_of__initialization 00AE  
                             ?_CCP4_Initialize 0070                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 0AD5                   _EUSART_SetTxInterruptHandler 0ACC  
                                 ??_PIC16_Init 0023                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0023                                      ?_TMR0_ISR 0070  
                                    ?_TMR1_ISR 0070                                      ?_TMR3_ISR 0070  
                      __end_of_TMR2_WriteTimer 0A4C                                  __end_of_fputc 0FBA  
                                __end_of_fputs 0D4E                                  __end_of_putch 0A66  
                             ?_TMR2_Initialize 0070                         __end_of_PMD_Initialize 0AFC  
                      __end_of_JSN_GetLastTrig 0A32                          CCP3_CaptureISR@module 0078  
                         _eusartRxStatusBuffer 0120                 CCP3_SetCallBack@customCallBack 0020  
                            ?_MotorControl_Off 0070                ??_EUSART_SetOverrunErrorHandler 0022  
                           ??_MotorControl_Off 0021                             __end_of_PIC16_Init 0BC0  
                                      ??_fputc 0026                      __end_of_SYSTEM_Initialize 0D79  
                                      ??_fputs 002C                          ??_EUSART_Transmit_ISR 0070  
                      __end_of_TMR3_WriteTimer 0C8E                                        ??_putch 0022  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                                   __pbssBANK3 01A0                           __end_of_EUSART_Write 0DA6  
                             ?_PWM5_Initialize 0070                               ?_TMR3_Initialize 0070  
                     ??_JSN_Sensor_GetDistance 003C                                        ?_SetPin 0020  
                            ?_CCP1_SetCallBack 0020                                     __pmaintext 050D  
                ?_EUSART_SetTxInterruptHandler 0020               _EUSART_TxDefaultInterruptHandler 00B8  
             __end_of_TMR0_SetInterruptHandler 0ADE                                        ?___lmul 0020  
                                      ?___wmul 0020                                  _FRT_GetMicros 079B  
                                   ??_TMR0_ISR 0070                                     ??_TMR1_ISR 0072  
                                _FRT_GetMillis 0B7B                                     ??_TMR3_ISR 0072  
                           ??_CCP1_SetCallBack 0022                                     __pintentry 0004  
                                      _CCP1CAP 0294                                        _CCP2CAP 0298  
                                      _CCP3CAP 0314                                        _CCP1CON 0293  
                                      _CCP2CON 0297                                        _CCP3CON 0313  
                                      _CCP4CON 0317                                        _CCP1PPS 0E14  
                                      _CCP2PPS 0E15                                        _CCP3PPS 0E16  
                               ___lmul@product 0028                                  _FRT_IncMicros 0ADE  
                 ??_EUSART_DefaultErrorHandler 0071                                  _FRT_IncMillis 0AE8  
                                      ?_printf 006C                                ?_PMD_Initialize 0070  
                                    ?_WritePin 0020                                        ?_strlen 0020  
                                _eusartRxCount 00D1                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                                        _OSCCON1 0919  
                                      _OSCCON3 091B                                        _OSCTUNE 091E  
                            ?_JSN_SensorGetPtr 0070                                        _PWM5DCH 0618  
                                      _PWM5DCL 0617                                        _PWM5CON 0619  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                       ??_EUSART_SetErrorHandler 0022  
                           ??_JSN_SensorGetPtr 0020                               ?_TMR1_WriteTimer 0070  
                             ___lomod@dividend 0028              CCP1_DefaultCallBack@capturedValue 0073  
                  __end_of_TMR0_GetCallBackNum 0004                               _micros@FRT$F1518 0138  
                            _dutyCyclePerMilli 0144                                        _ReadPin 0476  
                            ?_CCP2_SetCallBack 0020                                 ?_FRT_GetMicros 0026  
                               ?_FRT_GetMillis 0020                                        ___lldiv 068E  
                                      ___lodiv 0599                             ??_CCP2_SetCallBack 0022  
                                      ___lomod 061D                               ?_TMR2_WriteTimer 0070  
                                    ?_vfprintf 0064                                 ?_FRT_IncMicros 0070  
                               ?_FRT_IncMillis 0070                                        _ocCount 00AC  
                                   ??_WritePin 0021                                        __ptext1 07E7  
                                      __ptext2 0A6D                                        __ptext3 0A38  
                                      __ptext4 0B13                                        __ptext5 0C75  
                                      __ptext6 0BAE                                        __ptext7 0D4E  
                                      __ptext8 0A43                                        __ptext9 0B1F  
                             ?_JSN_GetLastTrig 0070                                      _T1CONbits 001B  
                        _OSCILLATOR_Initialize 0B07                                      _T2CONbits 001F  
                                    _T3CONbits 0413                             _sameSens@ccp2$F857 00D7  
                           _sameSens@ccp3$F978 00D5                       ??_PIN_MANAGER_Initialize 0020  
                                      _ticksUp 00CA                                _JSN_Sensor_Init 03DA  
                              _JSN_Sensor_Trig 06E9                                        clrloop0 0A53  
                         end_of_initialization 00AE                               ?_TMR3_WriteTimer 0020  
        __end_of_EUSART_SetOverrunErrorHandler 0AC3                  _EUSART_SetOverrunErrorHandler 0ABA  
                                      fputc@fp 0025                                        fputs@fp 002B  
                            _EUSART_Initialize 0FBA                                ___lldiv@divisor 002C  
                              ___lldiv@counter 0039                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 0264                              ?_CCP3_SetCallBack 0020  
                        TMR0_ReadTimer@readVal 0021                   __end_of_CCP1_DefaultCallBack 0E46  
                           ??_CCP3_SetCallBack 0022                                     ??_vfprintf 0067  
                               _TMR0_ReadTimer 0A66                                  i1_TMR3_Reload 0A84  
                                      strlen@a 0023                                        strlen@s 0024  
                          ??_EUSART_Initialize 0022                               ??_WDT_Initialize 0020  
               ??_EUSART_SetTxInterruptHandler 0022                       _TMR0_SetInterruptHandler 0AD5  
                                    _PORTAbits 000C                                      _PORTBbits 000D  
                                    _PORTCbits 000E                                      _TRISAbits 008C  
                                    _TRISBbits 008D                                      _TRISCbits 008E  
                      TMR2_WriteTimer@timerVal 0020                      __end_of_EUSART_Initialize 1000  
                                  _CCP4CONbits 0317                                ??_FRT_GetMicros 002A  
                              ??_FRT_GetMillis 0024                         __end_of_TMR0_ReadTimer 0A6D  
                            ??_SpeakerTone_Off 0022                                ??_FRT_IncMicros 0070  
                               __end_of_SetPin 03DA                                ??_FRT_IncMillis 0070  
                               ?i1_TMR3_Reload 0070                                 __end_of___lmul 0E0B  
           __end_of_EUSART_DefaultErrorHandler 0A3F                     _EUSART_DefaultErrorHandler 0A3B  
                                  vfpfcnvrt@ap 0055                                    vfpfcnvrt@fp 0063  
                               __end_of___wmul 0D03                                   _EUSART_Write 0D79  
                      __end_of_JSN_Sensor_Init 0476                         _JSN_Sensor_GetDistance 0F34  
                       ?_OSCILLATOR_Initialize 0070                        __end_of_JSN_Sensor_Trig 0742  
                 __end_of_CCP2_DefaultCallBack 0E81                                 __end_of_printf 0BD5  
                               __end_of_strlen 0CC4                            start_initialization 0092  
                              ___lodiv@divisor 0020                                ___lodiv@counter 0039  
                             _SpeakerTone_Init 07E7                 CCP2_SetCallBack@customCallBack 0020  
                                    SetPin@pin 0023                                    __end_of_pad 079B  
                               _TMR2_StopTimer 0A35                              ??_CCP1_CaptureISR 0077  
 EUSART_SetRxInterruptHandler@interruptHandler 0020   EUSART_SetTxInterruptHandler@interruptHandler 0020  
                                  putch@txData 0022                                 _TMR3_StopTimer 0A38  
                            _MotorControl_Init 0B2C                              _ticksUp@ccp2$F855 00C4  
                            _ticksUp@ccp3$F976 00BE                             ?_MotorControl_Init 0070  
               ?_EUSART_SetOverrunErrorHandler 0020                                       ??_SetPin 0021  
                                  vfprintf@fmt 0064                     _EUSART_FramingErrorHandler 00B4  
                             ??_PMD_Initialize 0020                                ?_TMR0_ReadTimer 0070  
                                     ??___lmul 0028                                       ??___wmul 0024  
                            ??_CCP2_CaptureISR 0077                         _EUSART_SetErrorHandler 0AA8  
                       JSN_Sensor_Init@echoPin 00DE                                    _CCPTMRSbits 029F  
                          ??_MotorControl_Init 0021                                       ??_printf 00DB  
                                     ??_strlen 0022                          CCP1_CaptureISR@module 0078  
                  __end_of_EUSART_Transmit_ISR 0D25                         __end_of_TMR2_StopTimer 0A38  
                                  __pbssCOMMON 007A                                      ___latbits 0002  
                       JSN_Sensor_Init@trigPin 00DD                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00DB                              ??_CCP3_CaptureISR 0077  
                 __end_of_CCP3_DefaultCallBack 0EBC                         __end_of_TMR3_StopTimer 0A3B  
                         _CCP1_DefaultCallBack 0E0B                      __end_of_MotorControl_Init 0B3A  
                   __end_of_EUSART_Receive_ISR 0F34               _EUSART_RxDefaultInterruptHandler 00B6  
                        _TMR0_InterruptHandler 00CE                              ??_CCP1_Initialize 0022  
                               _dutyCycle10bit 00AA                                       ?_ReadPin 0070  
                                  WritePin@pin 0023                                    WritePin@val 0020  
                 __end_of_EUSART_RxDataHandler 0CA9                         _PIN_MANAGER_Initialize 0EBC  
                              ??i1_TMR3_Reload 0072              CCP3_DefaultCallBack@capturedValue 0073  
                                     ?___lldiv 002C                                       ?___lodiv 0020  
                                     ?___lomod 0020                                   _eusartRxHead 007B  
                                 _eusartTxHead 007C                                   _eusartRxTail 007A  
                                 _eusartTxTail 00D3                   ??_INTERRUPT_InterruptManager 007A  
                             ?_JSN_Sensor_Init 00DD                               ?_JSN_Sensor_Trig 0070  
                      _eusartTxBufferRemaining 00D2                                ___lomod@divisor 0020  
                                     _BAUD1CON 019F                              ??_CCP2_Initialize 0022  
                              ___lomod@counter 0031                                ?_TMR2_StopTimer 0070  
                                _TMR0_CallBack 0A58                          ?_CCP1_DefaultCallBack 0073  
                              ?_TMR3_StopTimer 0070                              ??_CCP4_CompareISR 0070  
                               _eusartRxBuffer 0128                              ??_TMR0_Initialize 0022  
                               _eusartTxBuffer 0130                                 ___wmul@product 0024  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0020  
                                     _LATBbits 010D                                       _LATCbits 010E  
                                    clear_ram0 0A52                              ??_CCP3_Initialize 0022  
                                     _PIE0bits 0090                                       _PIE1bits 0091  
                                     _PIE3bits 0093                                       _PIE4bits 0094  
                            _eusartRxLastError 00D0                           _CCP2_DefaultCallBack 0E46  
                   ??_TMR0_SetInterruptHandler 0022                                       _PIR0bits 0010  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0022  
                                    _ticksDown 00C8                                       _PIR3bits 0013  
                                     _PIR4bits 0014                                       _TMR0_ISR 0B48  
    __end_of_EUSART_DefaultOverrunErrorHandler 0A43            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 0A3F  
                                     _TMR1_ISR 0AFC                                  ??_TMR3_Reload 0022  
                                     _TMR3_ISR 0A4C                                      _vfpfcnvrt 01A1  
                            ??_TMR1_Initialize 0020                              ___wmul@multiplier 0020  
                            ??_CCP4_Initialize 0020                                 ?_TMR0_CallBack 0070  
                            ___lmul@multiplier 0020                                _SpeakerTone_Off 0A6D  
                                     SetPin@io 0020                              i1_TMR3_WriteTimer 0B6A  
                            ??_TMR2_Initialize 0020                             ?i1_TMR3_WriteTimer 0070  
                      JSN_SensorGetPtr@sensNum 0022                          ?_CCP2_DefaultCallBack 0073  
                             _MotorControl_Off 0A74                          JSN_Sensor_Init@Sensor 00E1  
                     __end_of_SpeakerTone_Init 0800                                     vfprintf@ap 0066  
                                   vfprintf@fp 0069                            ??i1_TMR3_WriteTimer 0072  
                      ?_JSN_Sensor_GetDistance 003A                        ??_OSCILLATOR_Initialize 0020  
                          _EUSART_ErrorHandler 00B0                           _CCP3_DefaultCallBack 0E81  
                  ?_EUSART_DefaultErrorHandler 0070                                     ?_vfpfcnvrt 0054  
                              _CCP1_CaptureISR 0BD5                                       _WritePin 0264  
                            ??_PWM5_Initialize 0020                              ??_TMR3_Initialize 0020  
                          __end_of_TMR3_Reload 0B1F                                     _T0CON0bits 0017  
                             _CCP1_SetCallBack 0A8D                           _EUSART_RxDataHandler 0C8E  
               CCP1_SetCallBack@customCallBack 0020                                       __ptext10 0A7C  
                                     __ptext11 0B9D                                       __ptext20 0AC3  
                                     __ptext12 0C17                                       __ptext21 0ABA  
                                     __ptext13 0AD5                                       __ptext30 0A8D  
                                     __ptext22 0AB1                                       __ptext14 0B3A  
                                     __ptext31 0B2C                                       __ptext23 0AA8  
                                     __ptext15 0AF2                                       __ptext40 03DA  
                                     __ptext32 0A74                                       __ptext24 0B8C  
                                     __ptext16 0EBC                                       __ptext41 0BC0  
                                     __ptext33 0A47                                       __ptext25 0C5D  
                                     __ptext17 0B07                                       __ptext50 0D79  
                                     __ptext42 0DA6                                       __ptext34 0A35  
                                     __ptext26 0A9F                                       __ptext18 0FBA  
                                     __ptext51 061D                                       __ptext43 01A1  
                                     __ptext35 06E9                                       __ptext27 0C45  
                                     __ptext19 0ACC                                       __ptext52 0599  
                                     __ptext44 00B2                                       __ptext36 079B  
                                     __ptext28 0A96                                       __ptext61 0A4C  
                                     __ptext53 0264                                       __ptext45 0742  
                                     __ptext37 0CE3                                       __ptext29 0C2D  
                                     __ptext70 0D03                                       __ptext62 0A84  
                                     __ptext54 031F                                       __ptext46 0CA9  
                                     __ptext38 0A66                                       __ptext71 0EF7  
                                     __ptext63 0B6A                                       __ptext55 0F34  
                                     __ptext47 0D25                                       __ptext39 0002  
                                     __ptext80 0E46                                       __ptext72 0A3F  
                                     __ptext64 0AFC                                       __ptext56 0DD7  
                                     __ptext48 0F77                                       __ptext81 0BD5  
                                     __ptext73 0A2E                                       __ptext65 0B59  
                                     __ptext57 068E                                       __ptext49 0A5F  
                                     __ptext82 0E0B                                       __ptext74 0A3B  
                                     __ptext66 0B48                                       __ptext58 0CC4  
                                     __ptext83 0476                                       __ptext75 0C8E  
                                     __ptext67 0A58                                       __ptext59 0B7B  
                                     __ptext84 0A2F                                       __ptext76 0A32  
                                     __ptext68 0AE8                                       __ptext77 0C01  
                                     __ptext69 0ADE                                       __ptext78 0E81  
                                     __ptext79 0BEB                         ??_CCP1_DefaultCallBack 0075  
                    __end_ofi1_TMR3_WriteTimer 0B7B                                     _T3GCONbits 0414  
                      TMR3_WriteTimer@timerVal 0020                                       _currFreq 00AE  
                                     _lastTrig 00DA                                _CCP2_CaptureISR 0BEB  
                             ??_TMR0_ReadTimer 0020                                       _sameSens 00D9  
                 _TMR0_DefaultInterruptHandler 0000                        ?_EUSART_SetErrorHandler 0020  
                          _ticksDown@ccp2$F856 00C2                            _ticksDown@ccp3$F977 00BC  
                             _JSN_SensorGetPtr 0CC4                                     _PIC16_Init 0BAE  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
               __end_of_JSN_Sensor_GetDistance 0F77                          __end_of_FRT_GetMicros 07E7  
                        __end_of_FRT_GetMillis 0B8C                      i1TMR3_WriteTimer@timerVal 0070  
                                     int$flags 007E                          ?_CCP3_DefaultCallBack 0073  
                                     _vfprintf 0DA6             __end_of_INTERRUPT_InterruptManager 0090  
                   _INTERRUPT_InterruptManager 0004                          __end_of_FRT_IncMicros 0AE8  
                        __end_of_FRT_IncMillis 0AF2                                      printf@fmt 006C  
        __end_of_EUSART_SetFramingErrorHandler 0ABA                  _EUSART_SetFramingErrorHandler 0AB1  
                            ??_TMR1_WriteTimer 0072                                _CCP3_CaptureISR 0C01  
                                   _INTCONbits 000B                                ??_TMR0_CallBack 0070  
                             _CCP2_SetCallBack 0A96                          ?_EUSART_RxDataHandler 0070  
                      __end_of_SpeakerTone_Off 0A74                                _CCP1_Initialize 0C2D  
                                     intlevel1 0000                                  _CountCallBack 007D  
                            ??_TMR2_WriteTimer 0020                               ___lldiv@dividend 0030  
                      ?_PIN_MANAGER_Initialize 0070                         ??_CCP2_DefaultCallBack 0075  
               __end_of_EUSART_SetErrorHandler 0AB1                              ??_JSN_GetLastTrig 0070  
         __end_of_EUSART_SetRxInterruptHandler 0ACC                   _EUSART_SetRxInterruptHandler 0AC3  
                      __end_of_CCP1_CaptureISR 0BEB                                _CCP2_Initialize 0C45  
                                     printf@ap 00DC                             _EUSART_Receive_ISR 0EF7  
EUSART_SetFramingErrorHandler@interruptHandler 0020                                    _TMR3_Reload 0B13  
                                  ??_vfpfcnvrt 0056                               ??_TMR2_StopTimer 0020  
                            ??_TMR3_WriteTimer 0022                                  __pstringtext1 1000  
                                __pstringtext2 103A                                  __pstringtext3 106C  
                                __pstringtext4 0000                          CCP2_CaptureISR@module 0078  
                              _CCP4_CompareISR 0A32                            ?_EUSART_Receive_ISR 0070  
                             ___lldiv@quotient 0035                                _TMR0_Initialize 0C17  
                             ??_TMR3_StopTimer 0020                               _CCP3_SetCallBack 0A9F  
                      __end_of_CCP2_CaptureISR 0C01                            _TMR0_GetCallBackNum 0002  
                              _CCP3_Initialize 0C5D                                     _TX1STAbits 019E  
                           EUSART_Write@txData 0021                 __end_of_PIN_MANAGER_Initialize 0EF7  
                                  _PWMTMRSbits 061F                           ??_EUSART_Receive_ISR 0071  
                        JSN_Sensor_Trig@Sensor 003C                                _TMR1_Initialize 0B9D  
                                  ?_PIC16_Init 0070                           ?_TMR0_GetCallBackNum 0070  
                      __end_of_CCP3_CaptureISR 0C17  
