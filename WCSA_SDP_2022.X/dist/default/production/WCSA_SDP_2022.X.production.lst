

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Feb 17 13:03:53 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2,group=3
    50                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text37,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text38,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text39,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	intentry,global,class=CODE,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,delta=2
    90                           	psect	text73,local,class=CODE,merge=1,delta=2
    91                           	psect	text74,local,class=CODE,merge=1,delta=2
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    94                           	dabs	1,0x7E,2
    95  0000                     
    96                           ; Version 2.40
    97                           ; Generated 19/01/2022 GMT
    98                           ; 
    99                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   100                           ; All rights reserved.
   101                           ; 
   102                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   103                           ; 
   104                           ; Redistribution and use in source and binary forms, with or without modification, are
   105                           ; permitted provided that the following conditions are met:
   106                           ; 
   107                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   108                           ;        conditions and the following disclaimer.
   109                           ; 
   110                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   111                           ;        of conditions and the following disclaimer in the documentation and/or other
   112                           ;        materials provided with the distribution. Publication is not required when
   113                           ;        this file is used in an embedded application.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC16F18345 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0090                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0097                     	;# 
   174  009B                     	;# 
   175  009B                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  010C                     	;# 
   181  010D                     	;# 
   182  010E                     	;# 
   183  0111                     	;# 
   184  0112                     	;# 
   185  0113                     	;# 
   186  0114                     	;# 
   187  0115                     	;# 
   188  0116                     	;# 
   189  0117                     	;# 
   190  0118                     	;# 
   191  0119                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  018E                     	;# 
   195  0197                     	;# 
   196  0199                     	;# 
   197  0199                     	;# 
   198  0199                     	;# 
   199  019A                     	;# 
   200  019A                     	;# 
   201  019A                     	;# 
   202  019B                     	;# 
   203  019B                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019B                     	;# 
   207  019C                     	;# 
   208  019C                     	;# 
   209  019C                     	;# 
   210  019D                     	;# 
   211  019D                     	;# 
   212  019D                     	;# 
   213  019E                     	;# 
   214  019E                     	;# 
   215  019E                     	;# 
   216  019F                     	;# 
   217  019F                     	;# 
   218  019F                     	;# 
   219  019F                     	;# 
   220  019F                     	;# 
   221  020C                     	;# 
   222  020D                     	;# 
   223  020E                     	;# 
   224  0211                     	;# 
   225  0211                     	;# 
   226  0212                     	;# 
   227  0212                     	;# 
   228  0213                     	;# 
   229  0213                     	;# 
   230  0214                     	;# 
   231  0214                     	;# 
   232  0215                     	;# 
   233  0215                     	;# 
   234  0215                     	;# 
   235  0215                     	;# 
   236  0216                     	;# 
   237  0216                     	;# 
   238  0217                     	;# 
   239  0217                     	;# 
   240  0219                     	;# 
   241  021A                     	;# 
   242  021B                     	;# 
   243  021C                     	;# 
   244  021D                     	;# 
   245  021D                     	;# 
   246  021E                     	;# 
   247  021F                     	;# 
   248  028C                     	;# 
   249  028D                     	;# 
   250  028E                     	;# 
   251  0291                     	;# 
   252  0291                     	;# 
   253  0292                     	;# 
   254  0293                     	;# 
   255  0294                     	;# 
   256  0295                     	;# 
   257  0295                     	;# 
   258  0296                     	;# 
   259  0297                     	;# 
   260  0298                     	;# 
   261  029F                     	;# 
   262  030C                     	;# 
   263  030D                     	;# 
   264  030E                     	;# 
   265  0311                     	;# 
   266  0311                     	;# 
   267  0312                     	;# 
   268  0313                     	;# 
   269  0314                     	;# 
   270  0315                     	;# 
   271  0315                     	;# 
   272  0316                     	;# 
   273  0317                     	;# 
   274  0318                     	;# 
   275  038C                     	;# 
   276  038D                     	;# 
   277  038E                     	;# 
   278  0391                     	;# 
   279  0392                     	;# 
   280  0393                     	;# 
   281  0394                     	;# 
   282  0395                     	;# 
   283  0396                     	;# 
   284  0397                     	;# 
   285  0398                     	;# 
   286  0399                     	;# 
   287  039A                     	;# 
   288  039C                     	;# 
   289  039D                     	;# 
   290  039E                     	;# 
   291  039F                     	;# 
   292  0411                     	;# 
   293  0411                     	;# 
   294  0412                     	;# 
   295  0413                     	;# 
   296  0414                     	;# 
   297  0415                     	;# 
   298  0416                     	;# 
   299  0417                     	;# 
   300  0418                     	;# 
   301  0418                     	;# 
   302  0419                     	;# 
   303  041A                     	;# 
   304  041B                     	;# 
   305  041C                     	;# 
   306  041D                     	;# 
   307  041E                     	;# 
   308  041F                     	;# 
   309  0498                     	;# 
   310  0498                     	;# 
   311  0499                     	;# 
   312  049A                     	;# 
   313  049B                     	;# 
   314  049B                     	;# 
   315  049C                     	;# 
   316  049D                     	;# 
   317  049E                     	;# 
   318  049F                     	;# 
   319  0617                     	;# 
   320  0618                     	;# 
   321  0619                     	;# 
   322  0619                     	;# 
   323  061A                     	;# 
   324  061B                     	;# 
   325  061C                     	;# 
   326  061C                     	;# 
   327  061F                     	;# 
   328  0691                     	;# 
   329  0692                     	;# 
   330  0693                     	;# 
   331  0694                     	;# 
   332  0695                     	;# 
   333  0696                     	;# 
   334  0697                     	;# 
   335  0698                     	;# 
   336  0699                     	;# 
   337  0711                     	;# 
   338  0712                     	;# 
   339  0713                     	;# 
   340  0714                     	;# 
   341  0715                     	;# 
   342  0716                     	;# 
   343  0717                     	;# 
   344  0718                     	;# 
   345  0719                     	;# 
   346  0891                     	;# 
   347  0891                     	;# 
   348  0891                     	;# 
   349  0891                     	;# 
   350  0891                     	;# 
   351  0891                     	;# 
   352  0892                     	;# 
   353  0892                     	;# 
   354  0892                     	;# 
   355  0893                     	;# 
   356  0893                     	;# 
   357  0893                     	;# 
   358  0893                     	;# 
   359  0893                     	;# 
   360  0893                     	;# 
   361  0894                     	;# 
   362  0894                     	;# 
   363  0894                     	;# 
   364  0895                     	;# 
   365  0895                     	;# 
   366  0895                     	;# 
   367  0896                     	;# 
   368  0896                     	;# 
   369  0896                     	;# 
   370  089B                     	;# 
   371  0911                     	;# 
   372  0912                     	;# 
   373  0913                     	;# 
   374  0914                     	;# 
   375  0915                     	;# 
   376  0916                     	;# 
   377  0918                     	;# 
   378  0919                     	;# 
   379  091A                     	;# 
   380  091B                     	;# 
   381  091C                     	;# 
   382  091D                     	;# 
   383  091E                     	;# 
   384  091F                     	;# 
   385  0E0F                     	;# 
   386  0E10                     	;# 
   387  0E11                     	;# 
   388  0E12                     	;# 
   389  0E13                     	;# 
   390  0E14                     	;# 
   391  0E15                     	;# 
   392  0E16                     	;# 
   393  0E17                     	;# 
   394  0E18                     	;# 
   395  0E19                     	;# 
   396  0E1A                     	;# 
   397  0E1B                     	;# 
   398  0E1C                     	;# 
   399  0E1D                     	;# 
   400  0E1E                     	;# 
   401  0E1F                     	;# 
   402  0E20                     	;# 
   403  0E21                     	;# 
   404  0E22                     	;# 
   405  0E24                     	;# 
   406  0E25                     	;# 
   407  0E28                     	;# 
   408  0E29                     	;# 
   409  0E2A                     	;# 
   410  0E2B                     	;# 
   411  0E2C                     	;# 
   412  0E2D                     	;# 
   413  0E2E                     	;# 
   414  0E2F                     	;# 
   415  0E90                     	;# 
   416  0E91                     	;# 
   417  0E92                     	;# 
   418  0E94                     	;# 
   419  0E95                     	;# 
   420  0E9C                     	;# 
   421  0E9D                     	;# 
   422  0E9E                     	;# 
   423  0E9F                     	;# 
   424  0EA0                     	;# 
   425  0EA1                     	;# 
   426  0EA2                     	;# 
   427  0EA3                     	;# 
   428  0EA4                     	;# 
   429  0EA5                     	;# 
   430  0EA6                     	;# 
   431  0EA7                     	;# 
   432  0F0F                     	;# 
   433  0F10                     	;# 
   434  0F11                     	;# 
   435  0F12                     	;# 
   436  0F13                     	;# 
   437  0F14                     	;# 
   438  0F15                     	;# 
   439  0F16                     	;# 
   440  0F17                     	;# 
   441  0F18                     	;# 
   442  0F19                     	;# 
   443  0F1A                     	;# 
   444  0F1B                     	;# 
   445  0F1C                     	;# 
   446  0F1D                     	;# 
   447  0F1E                     	;# 
   448  0F1F                     	;# 
   449  0F20                     	;# 
   450  0F21                     	;# 
   451  0F22                     	;# 
   452  0F23                     	;# 
   453  0F24                     	;# 
   454  0F25                     	;# 
   455  0F26                     	;# 
   456  0F27                     	;# 
   457  0F28                     	;# 
   458  0F29                     	;# 
   459  0F2A                     	;# 
   460  0F2B                     	;# 
   461  0F2C                     	;# 
   462  0F2D                     	;# 
   463  0F2E                     	;# 
   464  0F2F                     	;# 
   465  0F30                     	;# 
   466  0F31                     	;# 
   467  0F32                     	;# 
   468  0F33                     	;# 
   469  0F34                     	;# 
   470  0F35                     	;# 
   471  0F36                     	;# 
   472  0F37                     	;# 
   473  0FE4                     	;# 
   474  0FE5                     	;# 
   475  0FE6                     	;# 
   476  0FE7                     	;# 
   477  0FE8                     	;# 
   478  0FE9                     	;# 
   479  0FEA                     	;# 
   480  0FEB                     	;# 
   481  0FED                     	;# 
   482  0FEE                     	;# 
   483  0FEF                     	;# 
   484  0000                     	;# 
   485  0001                     	;# 
   486  0002                     	;# 
   487  0003                     	;# 
   488  0004                     	;# 
   489  0005                     	;# 
   490  0006                     	;# 
   491  0007                     	;# 
   492  0008                     	;# 
   493  0009                     	;# 
   494  000A                     	;# 
   495  000B                     	;# 
   496  000C                     	;# 
   497  000D                     	;# 
   498  000E                     	;# 
   499  0010                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0013                     	;# 
   503  0014                     	;# 
   504  0015                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0016                     	;# 
   508  0017                     	;# 
   509  0018                     	;# 
   510  0019                     	;# 
   511  0019                     	;# 
   512  001A                     	;# 
   513  001B                     	;# 
   514  001C                     	;# 
   515  001D                     	;# 
   516  001E                     	;# 
   517  001F                     	;# 
   518  008C                     	;# 
   519  008D                     	;# 
   520  008E                     	;# 
   521  0090                     	;# 
   522  0091                     	;# 
   523  0092                     	;# 
   524  0093                     	;# 
   525  0094                     	;# 
   526  0097                     	;# 
   527  009B                     	;# 
   528  009B                     	;# 
   529  009C                     	;# 
   530  009D                     	;# 
   531  009E                     	;# 
   532  009F                     	;# 
   533  010C                     	;# 
   534  010D                     	;# 
   535  010E                     	;# 
   536  0111                     	;# 
   537  0112                     	;# 
   538  0113                     	;# 
   539  0114                     	;# 
   540  0115                     	;# 
   541  0116                     	;# 
   542  0117                     	;# 
   543  0118                     	;# 
   544  0119                     	;# 
   545  018C                     	;# 
   546  018D                     	;# 
   547  018E                     	;# 
   548  0197                     	;# 
   549  0199                     	;# 
   550  0199                     	;# 
   551  0199                     	;# 
   552  019A                     	;# 
   553  019A                     	;# 
   554  019A                     	;# 
   555  019B                     	;# 
   556  019B                     	;# 
   557  019B                     	;# 
   558  019B                     	;# 
   559  019B                     	;# 
   560  019C                     	;# 
   561  019C                     	;# 
   562  019C                     	;# 
   563  019D                     	;# 
   564  019D                     	;# 
   565  019D                     	;# 
   566  019E                     	;# 
   567  019E                     	;# 
   568  019E                     	;# 
   569  019F                     	;# 
   570  019F                     	;# 
   571  019F                     	;# 
   572  019F                     	;# 
   573  019F                     	;# 
   574  020C                     	;# 
   575  020D                     	;# 
   576  020E                     	;# 
   577  0211                     	;# 
   578  0211                     	;# 
   579  0212                     	;# 
   580  0212                     	;# 
   581  0213                     	;# 
   582  0213                     	;# 
   583  0214                     	;# 
   584  0214                     	;# 
   585  0215                     	;# 
   586  0215                     	;# 
   587  0215                     	;# 
   588  0215                     	;# 
   589  0216                     	;# 
   590  0216                     	;# 
   591  0217                     	;# 
   592  0217                     	;# 
   593  0219                     	;# 
   594  021A                     	;# 
   595  021B                     	;# 
   596  021C                     	;# 
   597  021D                     	;# 
   598  021D                     	;# 
   599  021E                     	;# 
   600  021F                     	;# 
   601  028C                     	;# 
   602  028D                     	;# 
   603  028E                     	;# 
   604  0291                     	;# 
   605  0291                     	;# 
   606  0292                     	;# 
   607  0293                     	;# 
   608  0294                     	;# 
   609  0295                     	;# 
   610  0295                     	;# 
   611  0296                     	;# 
   612  0297                     	;# 
   613  0298                     	;# 
   614  029F                     	;# 
   615  030C                     	;# 
   616  030D                     	;# 
   617  030E                     	;# 
   618  0311                     	;# 
   619  0311                     	;# 
   620  0312                     	;# 
   621  0313                     	;# 
   622  0314                     	;# 
   623  0315                     	;# 
   624  0315                     	;# 
   625  0316                     	;# 
   626  0317                     	;# 
   627  0318                     	;# 
   628  038C                     	;# 
   629  038D                     	;# 
   630  038E                     	;# 
   631  0391                     	;# 
   632  0392                     	;# 
   633  0393                     	;# 
   634  0394                     	;# 
   635  0395                     	;# 
   636  0396                     	;# 
   637  0397                     	;# 
   638  0398                     	;# 
   639  0399                     	;# 
   640  039A                     	;# 
   641  039C                     	;# 
   642  039D                     	;# 
   643  039E                     	;# 
   644  039F                     	;# 
   645  0411                     	;# 
   646  0411                     	;# 
   647  0412                     	;# 
   648  0413                     	;# 
   649  0414                     	;# 
   650  0415                     	;# 
   651  0416                     	;# 
   652  0417                     	;# 
   653  0418                     	;# 
   654  0418                     	;# 
   655  0419                     	;# 
   656  041A                     	;# 
   657  041B                     	;# 
   658  041C                     	;# 
   659  041D                     	;# 
   660  041E                     	;# 
   661  041F                     	;# 
   662  0498                     	;# 
   663  0498                     	;# 
   664  0499                     	;# 
   665  049A                     	;# 
   666  049B                     	;# 
   667  049B                     	;# 
   668  049C                     	;# 
   669  049D                     	;# 
   670  049E                     	;# 
   671  049F                     	;# 
   672  0617                     	;# 
   673  0618                     	;# 
   674  0619                     	;# 
   675  0619                     	;# 
   676  061A                     	;# 
   677  061B                     	;# 
   678  061C                     	;# 
   679  061C                     	;# 
   680  061F                     	;# 
   681  0691                     	;# 
   682  0692                     	;# 
   683  0693                     	;# 
   684  0694                     	;# 
   685  0695                     	;# 
   686  0696                     	;# 
   687  0697                     	;# 
   688  0698                     	;# 
   689  0699                     	;# 
   690  0711                     	;# 
   691  0712                     	;# 
   692  0713                     	;# 
   693  0714                     	;# 
   694  0715                     	;# 
   695  0716                     	;# 
   696  0717                     	;# 
   697  0718                     	;# 
   698  0719                     	;# 
   699  0891                     	;# 
   700  0891                     	;# 
   701  0891                     	;# 
   702  0891                     	;# 
   703  0891                     	;# 
   704  0891                     	;# 
   705  0892                     	;# 
   706  0892                     	;# 
   707  0892                     	;# 
   708  0893                     	;# 
   709  0893                     	;# 
   710  0893                     	;# 
   711  0893                     	;# 
   712  0893                     	;# 
   713  0893                     	;# 
   714  0894                     	;# 
   715  0894                     	;# 
   716  0894                     	;# 
   717  0895                     	;# 
   718  0895                     	;# 
   719  0895                     	;# 
   720  0896                     	;# 
   721  0896                     	;# 
   722  0896                     	;# 
   723  089B                     	;# 
   724  0911                     	;# 
   725  0912                     	;# 
   726  0913                     	;# 
   727  0914                     	;# 
   728  0915                     	;# 
   729  0916                     	;# 
   730  0918                     	;# 
   731  0919                     	;# 
   732  091A                     	;# 
   733  091B                     	;# 
   734  091C                     	;# 
   735  091D                     	;# 
   736  091E                     	;# 
   737  091F                     	;# 
   738  0E0F                     	;# 
   739  0E10                     	;# 
   740  0E11                     	;# 
   741  0E12                     	;# 
   742  0E13                     	;# 
   743  0E14                     	;# 
   744  0E15                     	;# 
   745  0E16                     	;# 
   746  0E17                     	;# 
   747  0E18                     	;# 
   748  0E19                     	;# 
   749  0E1A                     	;# 
   750  0E1B                     	;# 
   751  0E1C                     	;# 
   752  0E1D                     	;# 
   753  0E1E                     	;# 
   754  0E1F                     	;# 
   755  0E20                     	;# 
   756  0E21                     	;# 
   757  0E22                     	;# 
   758  0E24                     	;# 
   759  0E25                     	;# 
   760  0E28                     	;# 
   761  0E29                     	;# 
   762  0E2A                     	;# 
   763  0E2B                     	;# 
   764  0E2C                     	;# 
   765  0E2D                     	;# 
   766  0E2E                     	;# 
   767  0E2F                     	;# 
   768  0E90                     	;# 
   769  0E91                     	;# 
   770  0E92                     	;# 
   771  0E94                     	;# 
   772  0E95                     	;# 
   773  0E9C                     	;# 
   774  0E9D                     	;# 
   775  0E9E                     	;# 
   776  0E9F                     	;# 
   777  0EA0                     	;# 
   778  0EA1                     	;# 
   779  0EA2                     	;# 
   780  0EA3                     	;# 
   781  0EA4                     	;# 
   782  0EA5                     	;# 
   783  0EA6                     	;# 
   784  0EA7                     	;# 
   785  0F0F                     	;# 
   786  0F10                     	;# 
   787  0F11                     	;# 
   788  0F12                     	;# 
   789  0F13                     	;# 
   790  0F14                     	;# 
   791  0F15                     	;# 
   792  0F16                     	;# 
   793  0F17                     	;# 
   794  0F18                     	;# 
   795  0F19                     	;# 
   796  0F1A                     	;# 
   797  0F1B                     	;# 
   798  0F1C                     	;# 
   799  0F1D                     	;# 
   800  0F1E                     	;# 
   801  0F1F                     	;# 
   802  0F20                     	;# 
   803  0F21                     	;# 
   804  0F22                     	;# 
   805  0F23                     	;# 
   806  0F24                     	;# 
   807  0F25                     	;# 
   808  0F26                     	;# 
   809  0F27                     	;# 
   810  0F28                     	;# 
   811  0F29                     	;# 
   812  0F2A                     	;# 
   813  0F2B                     	;# 
   814  0F2C                     	;# 
   815  0F2D                     	;# 
   816  0F2E                     	;# 
   817  0F2F                     	;# 
   818  0F30                     	;# 
   819  0F31                     	;# 
   820  0F32                     	;# 
   821  0F33                     	;# 
   822  0F34                     	;# 
   823  0F35                     	;# 
   824  0F36                     	;# 
   825  0F37                     	;# 
   826  0FE4                     	;# 
   827  0FE5                     	;# 
   828  0FE6                     	;# 
   829  0FE7                     	;# 
   830  0FE8                     	;# 
   831  0FE9                     	;# 
   832  0FEA                     	;# 
   833  0FEB                     	;# 
   834  0FED                     	;# 
   835  0FEE                     	;# 
   836  0FEF                     	;# 
   837  0000                     	;# 
   838  0001                     	;# 
   839  0002                     	;# 
   840  0003                     	;# 
   841  0004                     	;# 
   842  0005                     	;# 
   843  0006                     	;# 
   844  0007                     	;# 
   845  0008                     	;# 
   846  0009                     	;# 
   847  000A                     	;# 
   848  000B                     	;# 
   849  000C                     	;# 
   850  000D                     	;# 
   851  000E                     	;# 
   852  0010                     	;# 
   853  0011                     	;# 
   854  0012                     	;# 
   855  0013                     	;# 
   856  0014                     	;# 
   857  0015                     	;# 
   858  0015                     	;# 
   859  0016                     	;# 
   860  0016                     	;# 
   861  0017                     	;# 
   862  0018                     	;# 
   863  0019                     	;# 
   864  0019                     	;# 
   865  001A                     	;# 
   866  001B                     	;# 
   867  001C                     	;# 
   868  001D                     	;# 
   869  001E                     	;# 
   870  001F                     	;# 
   871  008C                     	;# 
   872  008D                     	;# 
   873  008E                     	;# 
   874  0090                     	;# 
   875  0091                     	;# 
   876  0092                     	;# 
   877  0093                     	;# 
   878  0094                     	;# 
   879  0097                     	;# 
   880  009B                     	;# 
   881  009B                     	;# 
   882  009C                     	;# 
   883  009D                     	;# 
   884  009E                     	;# 
   885  009F                     	;# 
   886  010C                     	;# 
   887  010D                     	;# 
   888  010E                     	;# 
   889  0111                     	;# 
   890  0112                     	;# 
   891  0113                     	;# 
   892  0114                     	;# 
   893  0115                     	;# 
   894  0116                     	;# 
   895  0117                     	;# 
   896  0118                     	;# 
   897  0119                     	;# 
   898  018C                     	;# 
   899  018D                     	;# 
   900  018E                     	;# 
   901  0197                     	;# 
   902  0199                     	;# 
   903  0199                     	;# 
   904  0199                     	;# 
   905  019A                     	;# 
   906  019A                     	;# 
   907  019A                     	;# 
   908  019B                     	;# 
   909  019B                     	;# 
   910  019B                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019C                     	;# 
   914  019C                     	;# 
   915  019C                     	;# 
   916  019D                     	;# 
   917  019D                     	;# 
   918  019D                     	;# 
   919  019E                     	;# 
   920  019E                     	;# 
   921  019E                     	;# 
   922  019F                     	;# 
   923  019F                     	;# 
   924  019F                     	;# 
   925  019F                     	;# 
   926  019F                     	;# 
   927  020C                     	;# 
   928  020D                     	;# 
   929  020E                     	;# 
   930  0211                     	;# 
   931  0211                     	;# 
   932  0212                     	;# 
   933  0212                     	;# 
   934  0213                     	;# 
   935  0213                     	;# 
   936  0214                     	;# 
   937  0214                     	;# 
   938  0215                     	;# 
   939  0215                     	;# 
   940  0215                     	;# 
   941  0215                     	;# 
   942  0216                     	;# 
   943  0216                     	;# 
   944  0217                     	;# 
   945  0217                     	;# 
   946  0219                     	;# 
   947  021A                     	;# 
   948  021B                     	;# 
   949  021C                     	;# 
   950  021D                     	;# 
   951  021D                     	;# 
   952  021E                     	;# 
   953  021F                     	;# 
   954  028C                     	;# 
   955  028D                     	;# 
   956  028E                     	;# 
   957  0291                     	;# 
   958  0291                     	;# 
   959  0292                     	;# 
   960  0293                     	;# 
   961  0294                     	;# 
   962  0295                     	;# 
   963  0295                     	;# 
   964  0296                     	;# 
   965  0297                     	;# 
   966  0298                     	;# 
   967  029F                     	;# 
   968  030C                     	;# 
   969  030D                     	;# 
   970  030E                     	;# 
   971  0311                     	;# 
   972  0311                     	;# 
   973  0312                     	;# 
   974  0313                     	;# 
   975  0314                     	;# 
   976  0315                     	;# 
   977  0315                     	;# 
   978  0316                     	;# 
   979  0317                     	;# 
   980  0318                     	;# 
   981  038C                     	;# 
   982  038D                     	;# 
   983  038E                     	;# 
   984  0391                     	;# 
   985  0392                     	;# 
   986  0393                     	;# 
   987  0394                     	;# 
   988  0395                     	;# 
   989  0396                     	;# 
   990  0397                     	;# 
   991  0398                     	;# 
   992  0399                     	;# 
   993  039A                     	;# 
   994  039C                     	;# 
   995  039D                     	;# 
   996  039E                     	;# 
   997  039F                     	;# 
   998  0411                     	;# 
   999  0411                     	;# 
  1000  0412                     	;# 
  1001  0413                     	;# 
  1002  0414                     	;# 
  1003  0415                     	;# 
  1004  0416                     	;# 
  1005  0417                     	;# 
  1006  0418                     	;# 
  1007  0418                     	;# 
  1008  0419                     	;# 
  1009  041A                     	;# 
  1010  041B                     	;# 
  1011  041C                     	;# 
  1012  041D                     	;# 
  1013  041E                     	;# 
  1014  041F                     	;# 
  1015  0498                     	;# 
  1016  0498                     	;# 
  1017  0499                     	;# 
  1018  049A                     	;# 
  1019  049B                     	;# 
  1020  049B                     	;# 
  1021  049C                     	;# 
  1022  049D                     	;# 
  1023  049E                     	;# 
  1024  049F                     	;# 
  1025  0617                     	;# 
  1026  0618                     	;# 
  1027  0619                     	;# 
  1028  0619                     	;# 
  1029  061A                     	;# 
  1030  061B                     	;# 
  1031  061C                     	;# 
  1032  061C                     	;# 
  1033  061F                     	;# 
  1034  0691                     	;# 
  1035  0692                     	;# 
  1036  0693                     	;# 
  1037  0694                     	;# 
  1038  0695                     	;# 
  1039  0696                     	;# 
  1040  0697                     	;# 
  1041  0698                     	;# 
  1042  0699                     	;# 
  1043  0711                     	;# 
  1044  0712                     	;# 
  1045  0713                     	;# 
  1046  0714                     	;# 
  1047  0715                     	;# 
  1048  0716                     	;# 
  1049  0717                     	;# 
  1050  0718                     	;# 
  1051  0719                     	;# 
  1052  0891                     	;# 
  1053  0891                     	;# 
  1054  0891                     	;# 
  1055  0891                     	;# 
  1056  0891                     	;# 
  1057  0891                     	;# 
  1058  0892                     	;# 
  1059  0892                     	;# 
  1060  0892                     	;# 
  1061  0893                     	;# 
  1062  0893                     	;# 
  1063  0893                     	;# 
  1064  0893                     	;# 
  1065  0893                     	;# 
  1066  0893                     	;# 
  1067  0894                     	;# 
  1068  0894                     	;# 
  1069  0894                     	;# 
  1070  0895                     	;# 
  1071  0895                     	;# 
  1072  0895                     	;# 
  1073  0896                     	;# 
  1074  0896                     	;# 
  1075  0896                     	;# 
  1076  089B                     	;# 
  1077  0911                     	;# 
  1078  0912                     	;# 
  1079  0913                     	;# 
  1080  0914                     	;# 
  1081  0915                     	;# 
  1082  0916                     	;# 
  1083  0918                     	;# 
  1084  0919                     	;# 
  1085  091A                     	;# 
  1086  091B                     	;# 
  1087  091C                     	;# 
  1088  091D                     	;# 
  1089  091E                     	;# 
  1090  091F                     	;# 
  1091  0E0F                     	;# 
  1092  0E10                     	;# 
  1093  0E11                     	;# 
  1094  0E12                     	;# 
  1095  0E13                     	;# 
  1096  0E14                     	;# 
  1097  0E15                     	;# 
  1098  0E16                     	;# 
  1099  0E17                     	;# 
  1100  0E18                     	;# 
  1101  0E19                     	;# 
  1102  0E1A                     	;# 
  1103  0E1B                     	;# 
  1104  0E1C                     	;# 
  1105  0E1D                     	;# 
  1106  0E1E                     	;# 
  1107  0E1F                     	;# 
  1108  0E20                     	;# 
  1109  0E21                     	;# 
  1110  0E22                     	;# 
  1111  0E24                     	;# 
  1112  0E25                     	;# 
  1113  0E28                     	;# 
  1114  0E29                     	;# 
  1115  0E2A                     	;# 
  1116  0E2B                     	;# 
  1117  0E2C                     	;# 
  1118  0E2D                     	;# 
  1119  0E2E                     	;# 
  1120  0E2F                     	;# 
  1121  0E90                     	;# 
  1122  0E91                     	;# 
  1123  0E92                     	;# 
  1124  0E94                     	;# 
  1125  0E95                     	;# 
  1126  0E9C                     	;# 
  1127  0E9D                     	;# 
  1128  0E9E                     	;# 
  1129  0E9F                     	;# 
  1130  0EA0                     	;# 
  1131  0EA1                     	;# 
  1132  0EA2                     	;# 
  1133  0EA3                     	;# 
  1134  0EA4                     	;# 
  1135  0EA5                     	;# 
  1136  0EA6                     	;# 
  1137  0EA7                     	;# 
  1138  0F0F                     	;# 
  1139  0F10                     	;# 
  1140  0F11                     	;# 
  1141  0F12                     	;# 
  1142  0F13                     	;# 
  1143  0F14                     	;# 
  1144  0F15                     	;# 
  1145  0F16                     	;# 
  1146  0F17                     	;# 
  1147  0F18                     	;# 
  1148  0F19                     	;# 
  1149  0F1A                     	;# 
  1150  0F1B                     	;# 
  1151  0F1C                     	;# 
  1152  0F1D                     	;# 
  1153  0F1E                     	;# 
  1154  0F1F                     	;# 
  1155  0F20                     	;# 
  1156  0F21                     	;# 
  1157  0F22                     	;# 
  1158  0F23                     	;# 
  1159  0F24                     	;# 
  1160  0F25                     	;# 
  1161  0F26                     	;# 
  1162  0F27                     	;# 
  1163  0F28                     	;# 
  1164  0F29                     	;# 
  1165  0F2A                     	;# 
  1166  0F2B                     	;# 
  1167  0F2C                     	;# 
  1168  0F2D                     	;# 
  1169  0F2E                     	;# 
  1170  0F2F                     	;# 
  1171  0F30                     	;# 
  1172  0F31                     	;# 
  1173  0F32                     	;# 
  1174  0F33                     	;# 
  1175  0F34                     	;# 
  1176  0F35                     	;# 
  1177  0F36                     	;# 
  1178  0F37                     	;# 
  1179  0FE4                     	;# 
  1180  0FE5                     	;# 
  1181  0FE6                     	;# 
  1182  0FE7                     	;# 
  1183  0FE8                     	;# 
  1184  0FE9                     	;# 
  1185  0FEA                     	;# 
  1186  0FEB                     	;# 
  1187  0FED                     	;# 
  1188  0FEE                     	;# 
  1189  0FEF                     	;# 
  1190  0000                     	;# 
  1191  0001                     	;# 
  1192  0002                     	;# 
  1193  0003                     	;# 
  1194  0004                     	;# 
  1195  0005                     	;# 
  1196  0006                     	;# 
  1197  0007                     	;# 
  1198  0008                     	;# 
  1199  0009                     	;# 
  1200  000A                     	;# 
  1201  000B                     	;# 
  1202  000C                     	;# 
  1203  000D                     	;# 
  1204  000E                     	;# 
  1205  0010                     	;# 
  1206  0011                     	;# 
  1207  0012                     	;# 
  1208  0013                     	;# 
  1209  0014                     	;# 
  1210  0015                     	;# 
  1211  0015                     	;# 
  1212  0016                     	;# 
  1213  0016                     	;# 
  1214  0017                     	;# 
  1215  0018                     	;# 
  1216  0019                     	;# 
  1217  0019                     	;# 
  1218  001A                     	;# 
  1219  001B                     	;# 
  1220  001C                     	;# 
  1221  001D                     	;# 
  1222  001E                     	;# 
  1223  001F                     	;# 
  1224  008C                     	;# 
  1225  008D                     	;# 
  1226  008E                     	;# 
  1227  0090                     	;# 
  1228  0091                     	;# 
  1229  0092                     	;# 
  1230  0093                     	;# 
  1231  0094                     	;# 
  1232  0097                     	;# 
  1233  009B                     	;# 
  1234  009B                     	;# 
  1235  009C                     	;# 
  1236  009D                     	;# 
  1237  009E                     	;# 
  1238  009F                     	;# 
  1239  010C                     	;# 
  1240  010D                     	;# 
  1241  010E                     	;# 
  1242  0111                     	;# 
  1243  0112                     	;# 
  1244  0113                     	;# 
  1245  0114                     	;# 
  1246  0115                     	;# 
  1247  0116                     	;# 
  1248  0117                     	;# 
  1249  0118                     	;# 
  1250  0119                     	;# 
  1251  018C                     	;# 
  1252  018D                     	;# 
  1253  018E                     	;# 
  1254  0197                     	;# 
  1255  0199                     	;# 
  1256  0199                     	;# 
  1257  0199                     	;# 
  1258  019A                     	;# 
  1259  019A                     	;# 
  1260  019A                     	;# 
  1261  019B                     	;# 
  1262  019B                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019C                     	;# 
  1267  019C                     	;# 
  1268  019C                     	;# 
  1269  019D                     	;# 
  1270  019D                     	;# 
  1271  019D                     	;# 
  1272  019E                     	;# 
  1273  019E                     	;# 
  1274  019E                     	;# 
  1275  019F                     	;# 
  1276  019F                     	;# 
  1277  019F                     	;# 
  1278  019F                     	;# 
  1279  019F                     	;# 
  1280  020C                     	;# 
  1281  020D                     	;# 
  1282  020E                     	;# 
  1283  0211                     	;# 
  1284  0211                     	;# 
  1285  0212                     	;# 
  1286  0212                     	;# 
  1287  0213                     	;# 
  1288  0213                     	;# 
  1289  0214                     	;# 
  1290  0214                     	;# 
  1291  0215                     	;# 
  1292  0215                     	;# 
  1293  0215                     	;# 
  1294  0215                     	;# 
  1295  0216                     	;# 
  1296  0216                     	;# 
  1297  0217                     	;# 
  1298  0217                     	;# 
  1299  0219                     	;# 
  1300  021A                     	;# 
  1301  021B                     	;# 
  1302  021C                     	;# 
  1303  021D                     	;# 
  1304  021D                     	;# 
  1305  021E                     	;# 
  1306  021F                     	;# 
  1307  028C                     	;# 
  1308  028D                     	;# 
  1309  028E                     	;# 
  1310  0291                     	;# 
  1311  0291                     	;# 
  1312  0292                     	;# 
  1313  0293                     	;# 
  1314  0294                     	;# 
  1315  0295                     	;# 
  1316  0295                     	;# 
  1317  0296                     	;# 
  1318  0297                     	;# 
  1319  0298                     	;# 
  1320  029F                     	;# 
  1321  030C                     	;# 
  1322  030D                     	;# 
  1323  030E                     	;# 
  1324  0311                     	;# 
  1325  0311                     	;# 
  1326  0312                     	;# 
  1327  0313                     	;# 
  1328  0314                     	;# 
  1329  0315                     	;# 
  1330  0315                     	;# 
  1331  0316                     	;# 
  1332  0317                     	;# 
  1333  0318                     	;# 
  1334  038C                     	;# 
  1335  038D                     	;# 
  1336  038E                     	;# 
  1337  0391                     	;# 
  1338  0392                     	;# 
  1339  0393                     	;# 
  1340  0394                     	;# 
  1341  0395                     	;# 
  1342  0396                     	;# 
  1343  0397                     	;# 
  1344  0398                     	;# 
  1345  0399                     	;# 
  1346  039A                     	;# 
  1347  039C                     	;# 
  1348  039D                     	;# 
  1349  039E                     	;# 
  1350  039F                     	;# 
  1351  0411                     	;# 
  1352  0411                     	;# 
  1353  0412                     	;# 
  1354  0413                     	;# 
  1355  0414                     	;# 
  1356  0415                     	;# 
  1357  0416                     	;# 
  1358  0417                     	;# 
  1359  0418                     	;# 
  1360  0418                     	;# 
  1361  0419                     	;# 
  1362  041A                     	;# 
  1363  041B                     	;# 
  1364  041C                     	;# 
  1365  041D                     	;# 
  1366  041E                     	;# 
  1367  041F                     	;# 
  1368  0498                     	;# 
  1369  0498                     	;# 
  1370  0499                     	;# 
  1371  049A                     	;# 
  1372  049B                     	;# 
  1373  049B                     	;# 
  1374  049C                     	;# 
  1375  049D                     	;# 
  1376  049E                     	;# 
  1377  049F                     	;# 
  1378  0617                     	;# 
  1379  0618                     	;# 
  1380  0619                     	;# 
  1381  0619                     	;# 
  1382  061A                     	;# 
  1383  061B                     	;# 
  1384  061C                     	;# 
  1385  061C                     	;# 
  1386  061F                     	;# 
  1387  0691                     	;# 
  1388  0692                     	;# 
  1389  0693                     	;# 
  1390  0694                     	;# 
  1391  0695                     	;# 
  1392  0696                     	;# 
  1393  0697                     	;# 
  1394  0698                     	;# 
  1395  0699                     	;# 
  1396  0711                     	;# 
  1397  0712                     	;# 
  1398  0713                     	;# 
  1399  0714                     	;# 
  1400  0715                     	;# 
  1401  0716                     	;# 
  1402  0717                     	;# 
  1403  0718                     	;# 
  1404  0719                     	;# 
  1405  0891                     	;# 
  1406  0891                     	;# 
  1407  0891                     	;# 
  1408  0891                     	;# 
  1409  0891                     	;# 
  1410  0891                     	;# 
  1411  0892                     	;# 
  1412  0892                     	;# 
  1413  0892                     	;# 
  1414  0893                     	;# 
  1415  0893                     	;# 
  1416  0893                     	;# 
  1417  0893                     	;# 
  1418  0893                     	;# 
  1419  0893                     	;# 
  1420  0894                     	;# 
  1421  0894                     	;# 
  1422  0894                     	;# 
  1423  0895                     	;# 
  1424  0895                     	;# 
  1425  0895                     	;# 
  1426  0896                     	;# 
  1427  0896                     	;# 
  1428  0896                     	;# 
  1429  089B                     	;# 
  1430  0911                     	;# 
  1431  0912                     	;# 
  1432  0913                     	;# 
  1433  0914                     	;# 
  1434  0915                     	;# 
  1435  0916                     	;# 
  1436  0918                     	;# 
  1437  0919                     	;# 
  1438  091A                     	;# 
  1439  091B                     	;# 
  1440  091C                     	;# 
  1441  091D                     	;# 
  1442  091E                     	;# 
  1443  091F                     	;# 
  1444  0E0F                     	;# 
  1445  0E10                     	;# 
  1446  0E11                     	;# 
  1447  0E12                     	;# 
  1448  0E13                     	;# 
  1449  0E14                     	;# 
  1450  0E15                     	;# 
  1451  0E16                     	;# 
  1452  0E17                     	;# 
  1453  0E18                     	;# 
  1454  0E19                     	;# 
  1455  0E1A                     	;# 
  1456  0E1B                     	;# 
  1457  0E1C                     	;# 
  1458  0E1D                     	;# 
  1459  0E1E                     	;# 
  1460  0E1F                     	;# 
  1461  0E20                     	;# 
  1462  0E21                     	;# 
  1463  0E22                     	;# 
  1464  0E24                     	;# 
  1465  0E25                     	;# 
  1466  0E28                     	;# 
  1467  0E29                     	;# 
  1468  0E2A                     	;# 
  1469  0E2B                     	;# 
  1470  0E2C                     	;# 
  1471  0E2D                     	;# 
  1472  0E2E                     	;# 
  1473  0E2F                     	;# 
  1474  0E90                     	;# 
  1475  0E91                     	;# 
  1476  0E92                     	;# 
  1477  0E94                     	;# 
  1478  0E95                     	;# 
  1479  0E9C                     	;# 
  1480  0E9D                     	;# 
  1481  0E9E                     	;# 
  1482  0E9F                     	;# 
  1483  0EA0                     	;# 
  1484  0EA1                     	;# 
  1485  0EA2                     	;# 
  1486  0EA3                     	;# 
  1487  0EA4                     	;# 
  1488  0EA5                     	;# 
  1489  0EA6                     	;# 
  1490  0EA7                     	;# 
  1491  0F0F                     	;# 
  1492  0F10                     	;# 
  1493  0F11                     	;# 
  1494  0F12                     	;# 
  1495  0F13                     	;# 
  1496  0F14                     	;# 
  1497  0F15                     	;# 
  1498  0F16                     	;# 
  1499  0F17                     	;# 
  1500  0F18                     	;# 
  1501  0F19                     	;# 
  1502  0F1A                     	;# 
  1503  0F1B                     	;# 
  1504  0F1C                     	;# 
  1505  0F1D                     	;# 
  1506  0F1E                     	;# 
  1507  0F1F                     	;# 
  1508  0F20                     	;# 
  1509  0F21                     	;# 
  1510  0F22                     	;# 
  1511  0F23                     	;# 
  1512  0F24                     	;# 
  1513  0F25                     	;# 
  1514  0F26                     	;# 
  1515  0F27                     	;# 
  1516  0F28                     	;# 
  1517  0F29                     	;# 
  1518  0F2A                     	;# 
  1519  0F2B                     	;# 
  1520  0F2C                     	;# 
  1521  0F2D                     	;# 
  1522  0F2E                     	;# 
  1523  0F2F                     	;# 
  1524  0F30                     	;# 
  1525  0F31                     	;# 
  1526  0F32                     	;# 
  1527  0F33                     	;# 
  1528  0F34                     	;# 
  1529  0F35                     	;# 
  1530  0F36                     	;# 
  1531  0F37                     	;# 
  1532  0FE4                     	;# 
  1533  0FE5                     	;# 
  1534  0FE6                     	;# 
  1535  0FE7                     	;# 
  1536  0FE8                     	;# 
  1537  0FE9                     	;# 
  1538  0FEA                     	;# 
  1539  0FEB                     	;# 
  1540  0FED                     	;# 
  1541  0FEE                     	;# 
  1542  0FEF                     	;# 
  1543  0000                     	;# 
  1544  0001                     	;# 
  1545  0002                     	;# 
  1546  0003                     	;# 
  1547  0004                     	;# 
  1548  0005                     	;# 
  1549  0006                     	;# 
  1550  0007                     	;# 
  1551  0008                     	;# 
  1552  0009                     	;# 
  1553  000A                     	;# 
  1554  000B                     	;# 
  1555  000C                     	;# 
  1556  000D                     	;# 
  1557  000E                     	;# 
  1558  0010                     	;# 
  1559  0011                     	;# 
  1560  0012                     	;# 
  1561  0013                     	;# 
  1562  0014                     	;# 
  1563  0015                     	;# 
  1564  0015                     	;# 
  1565  0016                     	;# 
  1566  0016                     	;# 
  1567  0017                     	;# 
  1568  0018                     	;# 
  1569  0019                     	;# 
  1570  0019                     	;# 
  1571  001A                     	;# 
  1572  001B                     	;# 
  1573  001C                     	;# 
  1574  001D                     	;# 
  1575  001E                     	;# 
  1576  001F                     	;# 
  1577  008C                     	;# 
  1578  008D                     	;# 
  1579  008E                     	;# 
  1580  0090                     	;# 
  1581  0091                     	;# 
  1582  0092                     	;# 
  1583  0093                     	;# 
  1584  0094                     	;# 
  1585  0097                     	;# 
  1586  009B                     	;# 
  1587  009B                     	;# 
  1588  009C                     	;# 
  1589  009D                     	;# 
  1590  009E                     	;# 
  1591  009F                     	;# 
  1592  010C                     	;# 
  1593  010D                     	;# 
  1594  010E                     	;# 
  1595  0111                     	;# 
  1596  0112                     	;# 
  1597  0113                     	;# 
  1598  0114                     	;# 
  1599  0115                     	;# 
  1600  0116                     	;# 
  1601  0117                     	;# 
  1602  0118                     	;# 
  1603  0119                     	;# 
  1604  018C                     	;# 
  1605  018D                     	;# 
  1606  018E                     	;# 
  1607  0197                     	;# 
  1608  0199                     	;# 
  1609  0199                     	;# 
  1610  0199                     	;# 
  1611  019A                     	;# 
  1612  019A                     	;# 
  1613  019A                     	;# 
  1614  019B                     	;# 
  1615  019B                     	;# 
  1616  019B                     	;# 
  1617  019B                     	;# 
  1618  019B                     	;# 
  1619  019C                     	;# 
  1620  019C                     	;# 
  1621  019C                     	;# 
  1622  019D                     	;# 
  1623  019D                     	;# 
  1624  019D                     	;# 
  1625  019E                     	;# 
  1626  019E                     	;# 
  1627  019E                     	;# 
  1628  019F                     	;# 
  1629  019F                     	;# 
  1630  019F                     	;# 
  1631  019F                     	;# 
  1632  019F                     	;# 
  1633  020C                     	;# 
  1634  020D                     	;# 
  1635  020E                     	;# 
  1636  0211                     	;# 
  1637  0211                     	;# 
  1638  0212                     	;# 
  1639  0212                     	;# 
  1640  0213                     	;# 
  1641  0213                     	;# 
  1642  0214                     	;# 
  1643  0214                     	;# 
  1644  0215                     	;# 
  1645  0215                     	;# 
  1646  0215                     	;# 
  1647  0215                     	;# 
  1648  0216                     	;# 
  1649  0216                     	;# 
  1650  0217                     	;# 
  1651  0217                     	;# 
  1652  0219                     	;# 
  1653  021A                     	;# 
  1654  021B                     	;# 
  1655  021C                     	;# 
  1656  021D                     	;# 
  1657  021D                     	;# 
  1658  021E                     	;# 
  1659  021F                     	;# 
  1660  028C                     	;# 
  1661  028D                     	;# 
  1662  028E                     	;# 
  1663  0291                     	;# 
  1664  0291                     	;# 
  1665  0292                     	;# 
  1666  0293                     	;# 
  1667  0294                     	;# 
  1668  0295                     	;# 
  1669  0295                     	;# 
  1670  0296                     	;# 
  1671  0297                     	;# 
  1672  0298                     	;# 
  1673  029F                     	;# 
  1674  030C                     	;# 
  1675  030D                     	;# 
  1676  030E                     	;# 
  1677  0311                     	;# 
  1678  0311                     	;# 
  1679  0312                     	;# 
  1680  0313                     	;# 
  1681  0314                     	;# 
  1682  0315                     	;# 
  1683  0315                     	;# 
  1684  0316                     	;# 
  1685  0317                     	;# 
  1686  0318                     	;# 
  1687  038C                     	;# 
  1688  038D                     	;# 
  1689  038E                     	;# 
  1690  0391                     	;# 
  1691  0392                     	;# 
  1692  0393                     	;# 
  1693  0394                     	;# 
  1694  0395                     	;# 
  1695  0396                     	;# 
  1696  0397                     	;# 
  1697  0398                     	;# 
  1698  0399                     	;# 
  1699  039A                     	;# 
  1700  039C                     	;# 
  1701  039D                     	;# 
  1702  039E                     	;# 
  1703  039F                     	;# 
  1704  0411                     	;# 
  1705  0411                     	;# 
  1706  0412                     	;# 
  1707  0413                     	;# 
  1708  0414                     	;# 
  1709  0415                     	;# 
  1710  0416                     	;# 
  1711  0417                     	;# 
  1712  0418                     	;# 
  1713  0418                     	;# 
  1714  0419                     	;# 
  1715  041A                     	;# 
  1716  041B                     	;# 
  1717  041C                     	;# 
  1718  041D                     	;# 
  1719  041E                     	;# 
  1720  041F                     	;# 
  1721  0498                     	;# 
  1722  0498                     	;# 
  1723  0499                     	;# 
  1724  049A                     	;# 
  1725  049B                     	;# 
  1726  049B                     	;# 
  1727  049C                     	;# 
  1728  049D                     	;# 
  1729  049E                     	;# 
  1730  049F                     	;# 
  1731  0617                     	;# 
  1732  0618                     	;# 
  1733  0619                     	;# 
  1734  0619                     	;# 
  1735  061A                     	;# 
  1736  061B                     	;# 
  1737  061C                     	;# 
  1738  061C                     	;# 
  1739  061F                     	;# 
  1740  0691                     	;# 
  1741  0692                     	;# 
  1742  0693                     	;# 
  1743  0694                     	;# 
  1744  0695                     	;# 
  1745  0696                     	;# 
  1746  0697                     	;# 
  1747  0698                     	;# 
  1748  0699                     	;# 
  1749  0711                     	;# 
  1750  0712                     	;# 
  1751  0713                     	;# 
  1752  0714                     	;# 
  1753  0715                     	;# 
  1754  0716                     	;# 
  1755  0717                     	;# 
  1756  0718                     	;# 
  1757  0719                     	;# 
  1758  0891                     	;# 
  1759  0891                     	;# 
  1760  0891                     	;# 
  1761  0891                     	;# 
  1762  0891                     	;# 
  1763  0891                     	;# 
  1764  0892                     	;# 
  1765  0892                     	;# 
  1766  0892                     	;# 
  1767  0893                     	;# 
  1768  0893                     	;# 
  1769  0893                     	;# 
  1770  0893                     	;# 
  1771  0893                     	;# 
  1772  0893                     	;# 
  1773  0894                     	;# 
  1774  0894                     	;# 
  1775  0894                     	;# 
  1776  0895                     	;# 
  1777  0895                     	;# 
  1778  0895                     	;# 
  1779  0896                     	;# 
  1780  0896                     	;# 
  1781  0896                     	;# 
  1782  089B                     	;# 
  1783  0911                     	;# 
  1784  0912                     	;# 
  1785  0913                     	;# 
  1786  0914                     	;# 
  1787  0915                     	;# 
  1788  0916                     	;# 
  1789  0918                     	;# 
  1790  0919                     	;# 
  1791  091A                     	;# 
  1792  091B                     	;# 
  1793  091C                     	;# 
  1794  091D                     	;# 
  1795  091E                     	;# 
  1796  091F                     	;# 
  1797  0E0F                     	;# 
  1798  0E10                     	;# 
  1799  0E11                     	;# 
  1800  0E12                     	;# 
  1801  0E13                     	;# 
  1802  0E14                     	;# 
  1803  0E15                     	;# 
  1804  0E16                     	;# 
  1805  0E17                     	;# 
  1806  0E18                     	;# 
  1807  0E19                     	;# 
  1808  0E1A                     	;# 
  1809  0E1B                     	;# 
  1810  0E1C                     	;# 
  1811  0E1D                     	;# 
  1812  0E1E                     	;# 
  1813  0E1F                     	;# 
  1814  0E20                     	;# 
  1815  0E21                     	;# 
  1816  0E22                     	;# 
  1817  0E24                     	;# 
  1818  0E25                     	;# 
  1819  0E28                     	;# 
  1820  0E29                     	;# 
  1821  0E2A                     	;# 
  1822  0E2B                     	;# 
  1823  0E2C                     	;# 
  1824  0E2D                     	;# 
  1825  0E2E                     	;# 
  1826  0E2F                     	;# 
  1827  0E90                     	;# 
  1828  0E91                     	;# 
  1829  0E92                     	;# 
  1830  0E94                     	;# 
  1831  0E95                     	;# 
  1832  0E9C                     	;# 
  1833  0E9D                     	;# 
  1834  0E9E                     	;# 
  1835  0E9F                     	;# 
  1836  0EA0                     	;# 
  1837  0EA1                     	;# 
  1838  0EA2                     	;# 
  1839  0EA3                     	;# 
  1840  0EA4                     	;# 
  1841  0EA5                     	;# 
  1842  0EA6                     	;# 
  1843  0EA7                     	;# 
  1844  0F0F                     	;# 
  1845  0F10                     	;# 
  1846  0F11                     	;# 
  1847  0F12                     	;# 
  1848  0F13                     	;# 
  1849  0F14                     	;# 
  1850  0F15                     	;# 
  1851  0F16                     	;# 
  1852  0F17                     	;# 
  1853  0F18                     	;# 
  1854  0F19                     	;# 
  1855  0F1A                     	;# 
  1856  0F1B                     	;# 
  1857  0F1C                     	;# 
  1858  0F1D                     	;# 
  1859  0F1E                     	;# 
  1860  0F1F                     	;# 
  1861  0F20                     	;# 
  1862  0F21                     	;# 
  1863  0F22                     	;# 
  1864  0F23                     	;# 
  1865  0F24                     	;# 
  1866  0F25                     	;# 
  1867  0F26                     	;# 
  1868  0F27                     	;# 
  1869  0F28                     	;# 
  1870  0F29                     	;# 
  1871  0F2A                     	;# 
  1872  0F2B                     	;# 
  1873  0F2C                     	;# 
  1874  0F2D                     	;# 
  1875  0F2E                     	;# 
  1876  0F2F                     	;# 
  1877  0F30                     	;# 
  1878  0F31                     	;# 
  1879  0F32                     	;# 
  1880  0F33                     	;# 
  1881  0F34                     	;# 
  1882  0F35                     	;# 
  1883  0F36                     	;# 
  1884  0F37                     	;# 
  1885  0FE4                     	;# 
  1886  0FE5                     	;# 
  1887  0FE6                     	;# 
  1888  0FE7                     	;# 
  1889  0FE8                     	;# 
  1890  0FE9                     	;# 
  1891  0FEA                     	;# 
  1892  0FEB                     	;# 
  1893  0FED                     	;# 
  1894  0FEE                     	;# 
  1895  0FEF                     	;# 
  1896  0000                     	;# 
  1897  0001                     	;# 
  1898  0002                     	;# 
  1899  0003                     	;# 
  1900  0004                     	;# 
  1901  0005                     	;# 
  1902  0006                     	;# 
  1903  0007                     	;# 
  1904  0008                     	;# 
  1905  0009                     	;# 
  1906  000A                     	;# 
  1907  000B                     	;# 
  1908  000C                     	;# 
  1909  000D                     	;# 
  1910  000E                     	;# 
  1911  0010                     	;# 
  1912  0011                     	;# 
  1913  0012                     	;# 
  1914  0013                     	;# 
  1915  0014                     	;# 
  1916  0015                     	;# 
  1917  0015                     	;# 
  1918  0016                     	;# 
  1919  0016                     	;# 
  1920  0017                     	;# 
  1921  0018                     	;# 
  1922  0019                     	;# 
  1923  0019                     	;# 
  1924  001A                     	;# 
  1925  001B                     	;# 
  1926  001C                     	;# 
  1927  001D                     	;# 
  1928  001E                     	;# 
  1929  001F                     	;# 
  1930  008C                     	;# 
  1931  008D                     	;# 
  1932  008E                     	;# 
  1933  0090                     	;# 
  1934  0091                     	;# 
  1935  0092                     	;# 
  1936  0093                     	;# 
  1937  0094                     	;# 
  1938  0097                     	;# 
  1939  009B                     	;# 
  1940  009B                     	;# 
  1941  009C                     	;# 
  1942  009D                     	;# 
  1943  009E                     	;# 
  1944  009F                     	;# 
  1945  010C                     	;# 
  1946  010D                     	;# 
  1947  010E                     	;# 
  1948  0111                     	;# 
  1949  0112                     	;# 
  1950  0113                     	;# 
  1951  0114                     	;# 
  1952  0115                     	;# 
  1953  0116                     	;# 
  1954  0117                     	;# 
  1955  0118                     	;# 
  1956  0119                     	;# 
  1957  018C                     	;# 
  1958  018D                     	;# 
  1959  018E                     	;# 
  1960  0197                     	;# 
  1961  0199                     	;# 
  1962  0199                     	;# 
  1963  0199                     	;# 
  1964  019A                     	;# 
  1965  019A                     	;# 
  1966  019A                     	;# 
  1967  019B                     	;# 
  1968  019B                     	;# 
  1969  019B                     	;# 
  1970  019B                     	;# 
  1971  019B                     	;# 
  1972  019C                     	;# 
  1973  019C                     	;# 
  1974  019C                     	;# 
  1975  019D                     	;# 
  1976  019D                     	;# 
  1977  019D                     	;# 
  1978  019E                     	;# 
  1979  019E                     	;# 
  1980  019E                     	;# 
  1981  019F                     	;# 
  1982  019F                     	;# 
  1983  019F                     	;# 
  1984  019F                     	;# 
  1985  019F                     	;# 
  1986  020C                     	;# 
  1987  020D                     	;# 
  1988  020E                     	;# 
  1989  0211                     	;# 
  1990  0211                     	;# 
  1991  0212                     	;# 
  1992  0212                     	;# 
  1993  0213                     	;# 
  1994  0213                     	;# 
  1995  0214                     	;# 
  1996  0214                     	;# 
  1997  0215                     	;# 
  1998  0215                     	;# 
  1999  0215                     	;# 
  2000  0215                     	;# 
  2001  0216                     	;# 
  2002  0216                     	;# 
  2003  0217                     	;# 
  2004  0217                     	;# 
  2005  0219                     	;# 
  2006  021A                     	;# 
  2007  021B                     	;# 
  2008  021C                     	;# 
  2009  021D                     	;# 
  2010  021D                     	;# 
  2011  021E                     	;# 
  2012  021F                     	;# 
  2013  028C                     	;# 
  2014  028D                     	;# 
  2015  028E                     	;# 
  2016  0291                     	;# 
  2017  0291                     	;# 
  2018  0292                     	;# 
  2019  0293                     	;# 
  2020  0294                     	;# 
  2021  0295                     	;# 
  2022  0295                     	;# 
  2023  0296                     	;# 
  2024  0297                     	;# 
  2025  0298                     	;# 
  2026  029F                     	;# 
  2027  030C                     	;# 
  2028  030D                     	;# 
  2029  030E                     	;# 
  2030  0311                     	;# 
  2031  0311                     	;# 
  2032  0312                     	;# 
  2033  0313                     	;# 
  2034  0314                     	;# 
  2035  0315                     	;# 
  2036  0315                     	;# 
  2037  0316                     	;# 
  2038  0317                     	;# 
  2039  0318                     	;# 
  2040  038C                     	;# 
  2041  038D                     	;# 
  2042  038E                     	;# 
  2043  0391                     	;# 
  2044  0392                     	;# 
  2045  0393                     	;# 
  2046  0394                     	;# 
  2047  0395                     	;# 
  2048  0396                     	;# 
  2049  0397                     	;# 
  2050  0398                     	;# 
  2051  0399                     	;# 
  2052  039A                     	;# 
  2053  039C                     	;# 
  2054  039D                     	;# 
  2055  039E                     	;# 
  2056  039F                     	;# 
  2057  0411                     	;# 
  2058  0411                     	;# 
  2059  0412                     	;# 
  2060  0413                     	;# 
  2061  0414                     	;# 
  2062  0415                     	;# 
  2063  0416                     	;# 
  2064  0417                     	;# 
  2065  0418                     	;# 
  2066  0418                     	;# 
  2067  0419                     	;# 
  2068  041A                     	;# 
  2069  041B                     	;# 
  2070  041C                     	;# 
  2071  041D                     	;# 
  2072  041E                     	;# 
  2073  041F                     	;# 
  2074  0498                     	;# 
  2075  0498                     	;# 
  2076  0499                     	;# 
  2077  049A                     	;# 
  2078  049B                     	;# 
  2079  049B                     	;# 
  2080  049C                     	;# 
  2081  049D                     	;# 
  2082  049E                     	;# 
  2083  049F                     	;# 
  2084  0617                     	;# 
  2085  0618                     	;# 
  2086  0619                     	;# 
  2087  0619                     	;# 
  2088  061A                     	;# 
  2089  061B                     	;# 
  2090  061C                     	;# 
  2091  061C                     	;# 
  2092  061F                     	;# 
  2093  0691                     	;# 
  2094  0692                     	;# 
  2095  0693                     	;# 
  2096  0694                     	;# 
  2097  0695                     	;# 
  2098  0696                     	;# 
  2099  0697                     	;# 
  2100  0698                     	;# 
  2101  0699                     	;# 
  2102  0711                     	;# 
  2103  0712                     	;# 
  2104  0713                     	;# 
  2105  0714                     	;# 
  2106  0715                     	;# 
  2107  0716                     	;# 
  2108  0717                     	;# 
  2109  0718                     	;# 
  2110  0719                     	;# 
  2111  0891                     	;# 
  2112  0891                     	;# 
  2113  0891                     	;# 
  2114  0891                     	;# 
  2115  0891                     	;# 
  2116  0891                     	;# 
  2117  0892                     	;# 
  2118  0892                     	;# 
  2119  0892                     	;# 
  2120  0893                     	;# 
  2121  0893                     	;# 
  2122  0893                     	;# 
  2123  0893                     	;# 
  2124  0893                     	;# 
  2125  0893                     	;# 
  2126  0894                     	;# 
  2127  0894                     	;# 
  2128  0894                     	;# 
  2129  0895                     	;# 
  2130  0895                     	;# 
  2131  0895                     	;# 
  2132  0896                     	;# 
  2133  0896                     	;# 
  2134  0896                     	;# 
  2135  089B                     	;# 
  2136  0911                     	;# 
  2137  0912                     	;# 
  2138  0913                     	;# 
  2139  0914                     	;# 
  2140  0915                     	;# 
  2141  0916                     	;# 
  2142  0918                     	;# 
  2143  0919                     	;# 
  2144  091A                     	;# 
  2145  091B                     	;# 
  2146  091C                     	;# 
  2147  091D                     	;# 
  2148  091E                     	;# 
  2149  091F                     	;# 
  2150  0E0F                     	;# 
  2151  0E10                     	;# 
  2152  0E11                     	;# 
  2153  0E12                     	;# 
  2154  0E13                     	;# 
  2155  0E14                     	;# 
  2156  0E15                     	;# 
  2157  0E16                     	;# 
  2158  0E17                     	;# 
  2159  0E18                     	;# 
  2160  0E19                     	;# 
  2161  0E1A                     	;# 
  2162  0E1B                     	;# 
  2163  0E1C                     	;# 
  2164  0E1D                     	;# 
  2165  0E1E                     	;# 
  2166  0E1F                     	;# 
  2167  0E20                     	;# 
  2168  0E21                     	;# 
  2169  0E22                     	;# 
  2170  0E24                     	;# 
  2171  0E25                     	;# 
  2172  0E28                     	;# 
  2173  0E29                     	;# 
  2174  0E2A                     	;# 
  2175  0E2B                     	;# 
  2176  0E2C                     	;# 
  2177  0E2D                     	;# 
  2178  0E2E                     	;# 
  2179  0E2F                     	;# 
  2180  0E90                     	;# 
  2181  0E91                     	;# 
  2182  0E92                     	;# 
  2183  0E94                     	;# 
  2184  0E95                     	;# 
  2185  0E9C                     	;# 
  2186  0E9D                     	;# 
  2187  0E9E                     	;# 
  2188  0E9F                     	;# 
  2189  0EA0                     	;# 
  2190  0EA1                     	;# 
  2191  0EA2                     	;# 
  2192  0EA3                     	;# 
  2193  0EA4                     	;# 
  2194  0EA5                     	;# 
  2195  0EA6                     	;# 
  2196  0EA7                     	;# 
  2197  0F0F                     	;# 
  2198  0F10                     	;# 
  2199  0F11                     	;# 
  2200  0F12                     	;# 
  2201  0F13                     	;# 
  2202  0F14                     	;# 
  2203  0F15                     	;# 
  2204  0F16                     	;# 
  2205  0F17                     	;# 
  2206  0F18                     	;# 
  2207  0F19                     	;# 
  2208  0F1A                     	;# 
  2209  0F1B                     	;# 
  2210  0F1C                     	;# 
  2211  0F1D                     	;# 
  2212  0F1E                     	;# 
  2213  0F1F                     	;# 
  2214  0F20                     	;# 
  2215  0F21                     	;# 
  2216  0F22                     	;# 
  2217  0F23                     	;# 
  2218  0F24                     	;# 
  2219  0F25                     	;# 
  2220  0F26                     	;# 
  2221  0F27                     	;# 
  2222  0F28                     	;# 
  2223  0F29                     	;# 
  2224  0F2A                     	;# 
  2225  0F2B                     	;# 
  2226  0F2C                     	;# 
  2227  0F2D                     	;# 
  2228  0F2E                     	;# 
  2229  0F2F                     	;# 
  2230  0F30                     	;# 
  2231  0F31                     	;# 
  2232  0F32                     	;# 
  2233  0F33                     	;# 
  2234  0F34                     	;# 
  2235  0F35                     	;# 
  2236  0F36                     	;# 
  2237  0F37                     	;# 
  2238  0FE4                     	;# 
  2239  0FE5                     	;# 
  2240  0FE6                     	;# 
  2241  0FE7                     	;# 
  2242  0FE8                     	;# 
  2243  0FE9                     	;# 
  2244  0FEA                     	;# 
  2245  0FEB                     	;# 
  2246  0FED                     	;# 
  2247  0FEE                     	;# 
  2248  0FEF                     	;# 
  2249  0000                     	;# 
  2250  0001                     	;# 
  2251  0002                     	;# 
  2252  0003                     	;# 
  2253  0004                     	;# 
  2254  0005                     	;# 
  2255  0006                     	;# 
  2256  0007                     	;# 
  2257  0008                     	;# 
  2258  0009                     	;# 
  2259  000A                     	;# 
  2260  000B                     	;# 
  2261  000C                     	;# 
  2262  000D                     	;# 
  2263  000E                     	;# 
  2264  0010                     	;# 
  2265  0011                     	;# 
  2266  0012                     	;# 
  2267  0013                     	;# 
  2268  0014                     	;# 
  2269  0015                     	;# 
  2270  0015                     	;# 
  2271  0016                     	;# 
  2272  0016                     	;# 
  2273  0017                     	;# 
  2274  0018                     	;# 
  2275  0019                     	;# 
  2276  0019                     	;# 
  2277  001A                     	;# 
  2278  001B                     	;# 
  2279  001C                     	;# 
  2280  001D                     	;# 
  2281  001E                     	;# 
  2282  001F                     	;# 
  2283  008C                     	;# 
  2284  008D                     	;# 
  2285  008E                     	;# 
  2286  0090                     	;# 
  2287  0091                     	;# 
  2288  0092                     	;# 
  2289  0093                     	;# 
  2290  0094                     	;# 
  2291  0097                     	;# 
  2292  009B                     	;# 
  2293  009B                     	;# 
  2294  009C                     	;# 
  2295  009D                     	;# 
  2296  009E                     	;# 
  2297  009F                     	;# 
  2298  010C                     	;# 
  2299  010D                     	;# 
  2300  010E                     	;# 
  2301  0111                     	;# 
  2302  0112                     	;# 
  2303  0113                     	;# 
  2304  0114                     	;# 
  2305  0115                     	;# 
  2306  0116                     	;# 
  2307  0117                     	;# 
  2308  0118                     	;# 
  2309  0119                     	;# 
  2310  018C                     	;# 
  2311  018D                     	;# 
  2312  018E                     	;# 
  2313  0197                     	;# 
  2314  0199                     	;# 
  2315  0199                     	;# 
  2316  0199                     	;# 
  2317  019A                     	;# 
  2318  019A                     	;# 
  2319  019A                     	;# 
  2320  019B                     	;# 
  2321  019B                     	;# 
  2322  019B                     	;# 
  2323  019B                     	;# 
  2324  019B                     	;# 
  2325  019C                     	;# 
  2326  019C                     	;# 
  2327  019C                     	;# 
  2328  019D                     	;# 
  2329  019D                     	;# 
  2330  019D                     	;# 
  2331  019E                     	;# 
  2332  019E                     	;# 
  2333  019E                     	;# 
  2334  019F                     	;# 
  2335  019F                     	;# 
  2336  019F                     	;# 
  2337  019F                     	;# 
  2338  019F                     	;# 
  2339  020C                     	;# 
  2340  020D                     	;# 
  2341  020E                     	;# 
  2342  0211                     	;# 
  2343  0211                     	;# 
  2344  0212                     	;# 
  2345  0212                     	;# 
  2346  0213                     	;# 
  2347  0213                     	;# 
  2348  0214                     	;# 
  2349  0214                     	;# 
  2350  0215                     	;# 
  2351  0215                     	;# 
  2352  0215                     	;# 
  2353  0215                     	;# 
  2354  0216                     	;# 
  2355  0216                     	;# 
  2356  0217                     	;# 
  2357  0217                     	;# 
  2358  0219                     	;# 
  2359  021A                     	;# 
  2360  021B                     	;# 
  2361  021C                     	;# 
  2362  021D                     	;# 
  2363  021D                     	;# 
  2364  021E                     	;# 
  2365  021F                     	;# 
  2366  028C                     	;# 
  2367  028D                     	;# 
  2368  028E                     	;# 
  2369  0291                     	;# 
  2370  0291                     	;# 
  2371  0292                     	;# 
  2372  0293                     	;# 
  2373  0294                     	;# 
  2374  0295                     	;# 
  2375  0295                     	;# 
  2376  0296                     	;# 
  2377  0297                     	;# 
  2378  0298                     	;# 
  2379  029F                     	;# 
  2380  030C                     	;# 
  2381  030D                     	;# 
  2382  030E                     	;# 
  2383  0311                     	;# 
  2384  0311                     	;# 
  2385  0312                     	;# 
  2386  0313                     	;# 
  2387  0314                     	;# 
  2388  0315                     	;# 
  2389  0315                     	;# 
  2390  0316                     	;# 
  2391  0317                     	;# 
  2392  0318                     	;# 
  2393  038C                     	;# 
  2394  038D                     	;# 
  2395  038E                     	;# 
  2396  0391                     	;# 
  2397  0392                     	;# 
  2398  0393                     	;# 
  2399  0394                     	;# 
  2400  0395                     	;# 
  2401  0396                     	;# 
  2402  0397                     	;# 
  2403  0398                     	;# 
  2404  0399                     	;# 
  2405  039A                     	;# 
  2406  039C                     	;# 
  2407  039D                     	;# 
  2408  039E                     	;# 
  2409  039F                     	;# 
  2410  0411                     	;# 
  2411  0411                     	;# 
  2412  0412                     	;# 
  2413  0413                     	;# 
  2414  0414                     	;# 
  2415  0415                     	;# 
  2416  0416                     	;# 
  2417  0417                     	;# 
  2418  0418                     	;# 
  2419  0418                     	;# 
  2420  0419                     	;# 
  2421  041A                     	;# 
  2422  041B                     	;# 
  2423  041C                     	;# 
  2424  041D                     	;# 
  2425  041E                     	;# 
  2426  041F                     	;# 
  2427  0498                     	;# 
  2428  0498                     	;# 
  2429  0499                     	;# 
  2430  049A                     	;# 
  2431  049B                     	;# 
  2432  049B                     	;# 
  2433  049C                     	;# 
  2434  049D                     	;# 
  2435  049E                     	;# 
  2436  049F                     	;# 
  2437  0617                     	;# 
  2438  0618                     	;# 
  2439  0619                     	;# 
  2440  0619                     	;# 
  2441  061A                     	;# 
  2442  061B                     	;# 
  2443  061C                     	;# 
  2444  061C                     	;# 
  2445  061F                     	;# 
  2446  0691                     	;# 
  2447  0692                     	;# 
  2448  0693                     	;# 
  2449  0694                     	;# 
  2450  0695                     	;# 
  2451  0696                     	;# 
  2452  0697                     	;# 
  2453  0698                     	;# 
  2454  0699                     	;# 
  2455  0711                     	;# 
  2456  0712                     	;# 
  2457  0713                     	;# 
  2458  0714                     	;# 
  2459  0715                     	;# 
  2460  0716                     	;# 
  2461  0717                     	;# 
  2462  0718                     	;# 
  2463  0719                     	;# 
  2464  0891                     	;# 
  2465  0891                     	;# 
  2466  0891                     	;# 
  2467  0891                     	;# 
  2468  0891                     	;# 
  2469  0891                     	;# 
  2470  0892                     	;# 
  2471  0892                     	;# 
  2472  0892                     	;# 
  2473  0893                     	;# 
  2474  0893                     	;# 
  2475  0893                     	;# 
  2476  0893                     	;# 
  2477  0893                     	;# 
  2478  0893                     	;# 
  2479  0894                     	;# 
  2480  0894                     	;# 
  2481  0894                     	;# 
  2482  0895                     	;# 
  2483  0895                     	;# 
  2484  0895                     	;# 
  2485  0896                     	;# 
  2486  0896                     	;# 
  2487  0896                     	;# 
  2488  089B                     	;# 
  2489  0911                     	;# 
  2490  0912                     	;# 
  2491  0913                     	;# 
  2492  0914                     	;# 
  2493  0915                     	;# 
  2494  0916                     	;# 
  2495  0918                     	;# 
  2496  0919                     	;# 
  2497  091A                     	;# 
  2498  091B                     	;# 
  2499  091C                     	;# 
  2500  091D                     	;# 
  2501  091E                     	;# 
  2502  091F                     	;# 
  2503  0E0F                     	;# 
  2504  0E10                     	;# 
  2505  0E11                     	;# 
  2506  0E12                     	;# 
  2507  0E13                     	;# 
  2508  0E14                     	;# 
  2509  0E15                     	;# 
  2510  0E16                     	;# 
  2511  0E17                     	;# 
  2512  0E18                     	;# 
  2513  0E19                     	;# 
  2514  0E1A                     	;# 
  2515  0E1B                     	;# 
  2516  0E1C                     	;# 
  2517  0E1D                     	;# 
  2518  0E1E                     	;# 
  2519  0E1F                     	;# 
  2520  0E20                     	;# 
  2521  0E21                     	;# 
  2522  0E22                     	;# 
  2523  0E24                     	;# 
  2524  0E25                     	;# 
  2525  0E28                     	;# 
  2526  0E29                     	;# 
  2527  0E2A                     	;# 
  2528  0E2B                     	;# 
  2529  0E2C                     	;# 
  2530  0E2D                     	;# 
  2531  0E2E                     	;# 
  2532  0E2F                     	;# 
  2533  0E90                     	;# 
  2534  0E91                     	;# 
  2535  0E92                     	;# 
  2536  0E94                     	;# 
  2537  0E95                     	;# 
  2538  0E9C                     	;# 
  2539  0E9D                     	;# 
  2540  0E9E                     	;# 
  2541  0E9F                     	;# 
  2542  0EA0                     	;# 
  2543  0EA1                     	;# 
  2544  0EA2                     	;# 
  2545  0EA3                     	;# 
  2546  0EA4                     	;# 
  2547  0EA5                     	;# 
  2548  0EA6                     	;# 
  2549  0EA7                     	;# 
  2550  0F0F                     	;# 
  2551  0F10                     	;# 
  2552  0F11                     	;# 
  2553  0F12                     	;# 
  2554  0F13                     	;# 
  2555  0F14                     	;# 
  2556  0F15                     	;# 
  2557  0F16                     	;# 
  2558  0F17                     	;# 
  2559  0F18                     	;# 
  2560  0F19                     	;# 
  2561  0F1A                     	;# 
  2562  0F1B                     	;# 
  2563  0F1C                     	;# 
  2564  0F1D                     	;# 
  2565  0F1E                     	;# 
  2566  0F1F                     	;# 
  2567  0F20                     	;# 
  2568  0F21                     	;# 
  2569  0F22                     	;# 
  2570  0F23                     	;# 
  2571  0F24                     	;# 
  2572  0F25                     	;# 
  2573  0F26                     	;# 
  2574  0F27                     	;# 
  2575  0F28                     	;# 
  2576  0F29                     	;# 
  2577  0F2A                     	;# 
  2578  0F2B                     	;# 
  2579  0F2C                     	;# 
  2580  0F2D                     	;# 
  2581  0F2E                     	;# 
  2582  0F2F                     	;# 
  2583  0F30                     	;# 
  2584  0F31                     	;# 
  2585  0F32                     	;# 
  2586  0F33                     	;# 
  2587  0F34                     	;# 
  2588  0F35                     	;# 
  2589  0F36                     	;# 
  2590  0F37                     	;# 
  2591  0FE4                     	;# 
  2592  0FE5                     	;# 
  2593  0FE6                     	;# 
  2594  0FE7                     	;# 
  2595  0FE8                     	;# 
  2596  0FE9                     	;# 
  2597  0FEA                     	;# 
  2598  0FEB                     	;# 
  2599  0FED                     	;# 
  2600  0FEE                     	;# 
  2601  0FEF                     	;# 
  2602  0000                     	;# 
  2603  0001                     	;# 
  2604  0002                     	;# 
  2605  0003                     	;# 
  2606  0004                     	;# 
  2607  0005                     	;# 
  2608  0006                     	;# 
  2609  0007                     	;# 
  2610  0008                     	;# 
  2611  0009                     	;# 
  2612  000A                     	;# 
  2613  000B                     	;# 
  2614  000C                     	;# 
  2615  000D                     	;# 
  2616  000E                     	;# 
  2617  0010                     	;# 
  2618  0011                     	;# 
  2619  0012                     	;# 
  2620  0013                     	;# 
  2621  0014                     	;# 
  2622  0015                     	;# 
  2623  0015                     	;# 
  2624  0016                     	;# 
  2625  0016                     	;# 
  2626  0017                     	;# 
  2627  0018                     	;# 
  2628  0019                     	;# 
  2629  0019                     	;# 
  2630  001A                     	;# 
  2631  001B                     	;# 
  2632  001C                     	;# 
  2633  001D                     	;# 
  2634  001E                     	;# 
  2635  001F                     	;# 
  2636  008C                     	;# 
  2637  008D                     	;# 
  2638  008E                     	;# 
  2639  0090                     	;# 
  2640  0091                     	;# 
  2641  0092                     	;# 
  2642  0093                     	;# 
  2643  0094                     	;# 
  2644  0097                     	;# 
  2645  009B                     	;# 
  2646  009B                     	;# 
  2647  009C                     	;# 
  2648  009D                     	;# 
  2649  009E                     	;# 
  2650  009F                     	;# 
  2651  010C                     	;# 
  2652  010D                     	;# 
  2653  010E                     	;# 
  2654  0111                     	;# 
  2655  0112                     	;# 
  2656  0113                     	;# 
  2657  0114                     	;# 
  2658  0115                     	;# 
  2659  0116                     	;# 
  2660  0117                     	;# 
  2661  0118                     	;# 
  2662  0119                     	;# 
  2663  018C                     	;# 
  2664  018D                     	;# 
  2665  018E                     	;# 
  2666  0197                     	;# 
  2667  0199                     	;# 
  2668  0199                     	;# 
  2669  0199                     	;# 
  2670  019A                     	;# 
  2671  019A                     	;# 
  2672  019A                     	;# 
  2673  019B                     	;# 
  2674  019B                     	;# 
  2675  019B                     	;# 
  2676  019B                     	;# 
  2677  019B                     	;# 
  2678  019C                     	;# 
  2679  019C                     	;# 
  2680  019C                     	;# 
  2681  019D                     	;# 
  2682  019D                     	;# 
  2683  019D                     	;# 
  2684  019E                     	;# 
  2685  019E                     	;# 
  2686  019E                     	;# 
  2687  019F                     	;# 
  2688  019F                     	;# 
  2689  019F                     	;# 
  2690  019F                     	;# 
  2691  019F                     	;# 
  2692  020C                     	;# 
  2693  020D                     	;# 
  2694  020E                     	;# 
  2695  0211                     	;# 
  2696  0211                     	;# 
  2697  0212                     	;# 
  2698  0212                     	;# 
  2699  0213                     	;# 
  2700  0213                     	;# 
  2701  0214                     	;# 
  2702  0214                     	;# 
  2703  0215                     	;# 
  2704  0215                     	;# 
  2705  0215                     	;# 
  2706  0215                     	;# 
  2707  0216                     	;# 
  2708  0216                     	;# 
  2709  0217                     	;# 
  2710  0217                     	;# 
  2711  0219                     	;# 
  2712  021A                     	;# 
  2713  021B                     	;# 
  2714  021C                     	;# 
  2715  021D                     	;# 
  2716  021D                     	;# 
  2717  021E                     	;# 
  2718  021F                     	;# 
  2719  028C                     	;# 
  2720  028D                     	;# 
  2721  028E                     	;# 
  2722  0291                     	;# 
  2723  0291                     	;# 
  2724  0292                     	;# 
  2725  0293                     	;# 
  2726  0294                     	;# 
  2727  0295                     	;# 
  2728  0295                     	;# 
  2729  0296                     	;# 
  2730  0297                     	;# 
  2731  0298                     	;# 
  2732  029F                     	;# 
  2733  030C                     	;# 
  2734  030D                     	;# 
  2735  030E                     	;# 
  2736  0311                     	;# 
  2737  0311                     	;# 
  2738  0312                     	;# 
  2739  0313                     	;# 
  2740  0314                     	;# 
  2741  0315                     	;# 
  2742  0315                     	;# 
  2743  0316                     	;# 
  2744  0317                     	;# 
  2745  0318                     	;# 
  2746  038C                     	;# 
  2747  038D                     	;# 
  2748  038E                     	;# 
  2749  0391                     	;# 
  2750  0392                     	;# 
  2751  0393                     	;# 
  2752  0394                     	;# 
  2753  0395                     	;# 
  2754  0396                     	;# 
  2755  0397                     	;# 
  2756  0398                     	;# 
  2757  0399                     	;# 
  2758  039A                     	;# 
  2759  039C                     	;# 
  2760  039D                     	;# 
  2761  039E                     	;# 
  2762  039F                     	;# 
  2763  0411                     	;# 
  2764  0411                     	;# 
  2765  0412                     	;# 
  2766  0413                     	;# 
  2767  0414                     	;# 
  2768  0415                     	;# 
  2769  0416                     	;# 
  2770  0417                     	;# 
  2771  0418                     	;# 
  2772  0418                     	;# 
  2773  0419                     	;# 
  2774  041A                     	;# 
  2775  041B                     	;# 
  2776  041C                     	;# 
  2777  041D                     	;# 
  2778  041E                     	;# 
  2779  041F                     	;# 
  2780  0498                     	;# 
  2781  0498                     	;# 
  2782  0499                     	;# 
  2783  049A                     	;# 
  2784  049B                     	;# 
  2785  049B                     	;# 
  2786  049C                     	;# 
  2787  049D                     	;# 
  2788  049E                     	;# 
  2789  049F                     	;# 
  2790  0617                     	;# 
  2791  0618                     	;# 
  2792  0619                     	;# 
  2793  0619                     	;# 
  2794  061A                     	;# 
  2795  061B                     	;# 
  2796  061C                     	;# 
  2797  061C                     	;# 
  2798  061F                     	;# 
  2799  0691                     	;# 
  2800  0692                     	;# 
  2801  0693                     	;# 
  2802  0694                     	;# 
  2803  0695                     	;# 
  2804  0696                     	;# 
  2805  0697                     	;# 
  2806  0698                     	;# 
  2807  0699                     	;# 
  2808  0711                     	;# 
  2809  0712                     	;# 
  2810  0713                     	;# 
  2811  0714                     	;# 
  2812  0715                     	;# 
  2813  0716                     	;# 
  2814  0717                     	;# 
  2815  0718                     	;# 
  2816  0719                     	;# 
  2817  0891                     	;# 
  2818  0891                     	;# 
  2819  0891                     	;# 
  2820  0891                     	;# 
  2821  0891                     	;# 
  2822  0891                     	;# 
  2823  0892                     	;# 
  2824  0892                     	;# 
  2825  0892                     	;# 
  2826  0893                     	;# 
  2827  0893                     	;# 
  2828  0893                     	;# 
  2829  0893                     	;# 
  2830  0893                     	;# 
  2831  0893                     	;# 
  2832  0894                     	;# 
  2833  0894                     	;# 
  2834  0894                     	;# 
  2835  0895                     	;# 
  2836  0895                     	;# 
  2837  0895                     	;# 
  2838  0896                     	;# 
  2839  0896                     	;# 
  2840  0896                     	;# 
  2841  089B                     	;# 
  2842  0911                     	;# 
  2843  0912                     	;# 
  2844  0913                     	;# 
  2845  0914                     	;# 
  2846  0915                     	;# 
  2847  0916                     	;# 
  2848  0918                     	;# 
  2849  0919                     	;# 
  2850  091A                     	;# 
  2851  091B                     	;# 
  2852  091C                     	;# 
  2853  091D                     	;# 
  2854  091E                     	;# 
  2855  091F                     	;# 
  2856  0E0F                     	;# 
  2857  0E10                     	;# 
  2858  0E11                     	;# 
  2859  0E12                     	;# 
  2860  0E13                     	;# 
  2861  0E14                     	;# 
  2862  0E15                     	;# 
  2863  0E16                     	;# 
  2864  0E17                     	;# 
  2865  0E18                     	;# 
  2866  0E19                     	;# 
  2867  0E1A                     	;# 
  2868  0E1B                     	;# 
  2869  0E1C                     	;# 
  2870  0E1D                     	;# 
  2871  0E1E                     	;# 
  2872  0E1F                     	;# 
  2873  0E20                     	;# 
  2874  0E21                     	;# 
  2875  0E22                     	;# 
  2876  0E24                     	;# 
  2877  0E25                     	;# 
  2878  0E28                     	;# 
  2879  0E29                     	;# 
  2880  0E2A                     	;# 
  2881  0E2B                     	;# 
  2882  0E2C                     	;# 
  2883  0E2D                     	;# 
  2884  0E2E                     	;# 
  2885  0E2F                     	;# 
  2886  0E90                     	;# 
  2887  0E91                     	;# 
  2888  0E92                     	;# 
  2889  0E94                     	;# 
  2890  0E95                     	;# 
  2891  0E9C                     	;# 
  2892  0E9D                     	;# 
  2893  0E9E                     	;# 
  2894  0E9F                     	;# 
  2895  0EA0                     	;# 
  2896  0EA1                     	;# 
  2897  0EA2                     	;# 
  2898  0EA3                     	;# 
  2899  0EA4                     	;# 
  2900  0EA5                     	;# 
  2901  0EA6                     	;# 
  2902  0EA7                     	;# 
  2903  0F0F                     	;# 
  2904  0F10                     	;# 
  2905  0F11                     	;# 
  2906  0F12                     	;# 
  2907  0F13                     	;# 
  2908  0F14                     	;# 
  2909  0F15                     	;# 
  2910  0F16                     	;# 
  2911  0F17                     	;# 
  2912  0F18                     	;# 
  2913  0F19                     	;# 
  2914  0F1A                     	;# 
  2915  0F1B                     	;# 
  2916  0F1C                     	;# 
  2917  0F1D                     	;# 
  2918  0F1E                     	;# 
  2919  0F1F                     	;# 
  2920  0F20                     	;# 
  2921  0F21                     	;# 
  2922  0F22                     	;# 
  2923  0F23                     	;# 
  2924  0F24                     	;# 
  2925  0F25                     	;# 
  2926  0F26                     	;# 
  2927  0F27                     	;# 
  2928  0F28                     	;# 
  2929  0F29                     	;# 
  2930  0F2A                     	;# 
  2931  0F2B                     	;# 
  2932  0F2C                     	;# 
  2933  0F2D                     	;# 
  2934  0F2E                     	;# 
  2935  0F2F                     	;# 
  2936  0F30                     	;# 
  2937  0F31                     	;# 
  2938  0F32                     	;# 
  2939  0F33                     	;# 
  2940  0F34                     	;# 
  2941  0F35                     	;# 
  2942  0F36                     	;# 
  2943  0F37                     	;# 
  2944  0FE4                     	;# 
  2945  0FE5                     	;# 
  2946  0FE6                     	;# 
  2947  0FE7                     	;# 
  2948  0FE8                     	;# 
  2949  0FE9                     	;# 
  2950  0FEA                     	;# 
  2951  0FEB                     	;# 
  2952  0FED                     	;# 
  2953  0FEE                     	;# 
  2954  0FEF                     	;# 
  2955  0000                     	;# 
  2956  0001                     	;# 
  2957  0002                     	;# 
  2958  0003                     	;# 
  2959  0004                     	;# 
  2960  0005                     	;# 
  2961  0006                     	;# 
  2962  0007                     	;# 
  2963  0008                     	;# 
  2964  0009                     	;# 
  2965  000A                     	;# 
  2966  000B                     	;# 
  2967  000C                     	;# 
  2968  000D                     	;# 
  2969  000E                     	;# 
  2970  0010                     	;# 
  2971  0011                     	;# 
  2972  0012                     	;# 
  2973  0013                     	;# 
  2974  0014                     	;# 
  2975  0015                     	;# 
  2976  0015                     	;# 
  2977  0016                     	;# 
  2978  0016                     	;# 
  2979  0017                     	;# 
  2980  0018                     	;# 
  2981  0019                     	;# 
  2982  0019                     	;# 
  2983  001A                     	;# 
  2984  001B                     	;# 
  2985  001C                     	;# 
  2986  001D                     	;# 
  2987  001E                     	;# 
  2988  001F                     	;# 
  2989  008C                     	;# 
  2990  008D                     	;# 
  2991  008E                     	;# 
  2992  0090                     	;# 
  2993  0091                     	;# 
  2994  0092                     	;# 
  2995  0093                     	;# 
  2996  0094                     	;# 
  2997  0097                     	;# 
  2998  009B                     	;# 
  2999  009B                     	;# 
  3000  009C                     	;# 
  3001  009D                     	;# 
  3002  009E                     	;# 
  3003  009F                     	;# 
  3004  010C                     	;# 
  3005  010D                     	;# 
  3006  010E                     	;# 
  3007  0111                     	;# 
  3008  0112                     	;# 
  3009  0113                     	;# 
  3010  0114                     	;# 
  3011  0115                     	;# 
  3012  0116                     	;# 
  3013  0117                     	;# 
  3014  0118                     	;# 
  3015  0119                     	;# 
  3016  018C                     	;# 
  3017  018D                     	;# 
  3018  018E                     	;# 
  3019  0197                     	;# 
  3020  0199                     	;# 
  3021  0199                     	;# 
  3022  0199                     	;# 
  3023  019A                     	;# 
  3024  019A                     	;# 
  3025  019A                     	;# 
  3026  019B                     	;# 
  3027  019B                     	;# 
  3028  019B                     	;# 
  3029  019B                     	;# 
  3030  019B                     	;# 
  3031  019C                     	;# 
  3032  019C                     	;# 
  3033  019C                     	;# 
  3034  019D                     	;# 
  3035  019D                     	;# 
  3036  019D                     	;# 
  3037  019E                     	;# 
  3038  019E                     	;# 
  3039  019E                     	;# 
  3040  019F                     	;# 
  3041  019F                     	;# 
  3042  019F                     	;# 
  3043  019F                     	;# 
  3044  019F                     	;# 
  3045  020C                     	;# 
  3046  020D                     	;# 
  3047  020E                     	;# 
  3048  0211                     	;# 
  3049  0211                     	;# 
  3050  0212                     	;# 
  3051  0212                     	;# 
  3052  0213                     	;# 
  3053  0213                     	;# 
  3054  0214                     	;# 
  3055  0214                     	;# 
  3056  0215                     	;# 
  3057  0215                     	;# 
  3058  0215                     	;# 
  3059  0215                     	;# 
  3060  0216                     	;# 
  3061  0216                     	;# 
  3062  0217                     	;# 
  3063  0217                     	;# 
  3064  0219                     	;# 
  3065  021A                     	;# 
  3066  021B                     	;# 
  3067  021C                     	;# 
  3068  021D                     	;# 
  3069  021D                     	;# 
  3070  021E                     	;# 
  3071  021F                     	;# 
  3072  028C                     	;# 
  3073  028D                     	;# 
  3074  028E                     	;# 
  3075  0291                     	;# 
  3076  0291                     	;# 
  3077  0292                     	;# 
  3078  0293                     	;# 
  3079  0294                     	;# 
  3080  0295                     	;# 
  3081  0295                     	;# 
  3082  0296                     	;# 
  3083  0297                     	;# 
  3084  0298                     	;# 
  3085  029F                     	;# 
  3086  030C                     	;# 
  3087  030D                     	;# 
  3088  030E                     	;# 
  3089  0311                     	;# 
  3090  0311                     	;# 
  3091  0312                     	;# 
  3092  0313                     	;# 
  3093  0314                     	;# 
  3094  0315                     	;# 
  3095  0315                     	;# 
  3096  0316                     	;# 
  3097  0317                     	;# 
  3098  0318                     	;# 
  3099  038C                     	;# 
  3100  038D                     	;# 
  3101  038E                     	;# 
  3102  0391                     	;# 
  3103  0392                     	;# 
  3104  0393                     	;# 
  3105  0394                     	;# 
  3106  0395                     	;# 
  3107  0396                     	;# 
  3108  0397                     	;# 
  3109  0398                     	;# 
  3110  0399                     	;# 
  3111  039A                     	;# 
  3112  039C                     	;# 
  3113  039D                     	;# 
  3114  039E                     	;# 
  3115  039F                     	;# 
  3116  0411                     	;# 
  3117  0411                     	;# 
  3118  0412                     	;# 
  3119  0413                     	;# 
  3120  0414                     	;# 
  3121  0415                     	;# 
  3122  0416                     	;# 
  3123  0417                     	;# 
  3124  0418                     	;# 
  3125  0418                     	;# 
  3126  0419                     	;# 
  3127  041A                     	;# 
  3128  041B                     	;# 
  3129  041C                     	;# 
  3130  041D                     	;# 
  3131  041E                     	;# 
  3132  041F                     	;# 
  3133  0498                     	;# 
  3134  0498                     	;# 
  3135  0499                     	;# 
  3136  049A                     	;# 
  3137  049B                     	;# 
  3138  049B                     	;# 
  3139  049C                     	;# 
  3140  049D                     	;# 
  3141  049E                     	;# 
  3142  049F                     	;# 
  3143  0617                     	;# 
  3144  0618                     	;# 
  3145  0619                     	;# 
  3146  0619                     	;# 
  3147  061A                     	;# 
  3148  061B                     	;# 
  3149  061C                     	;# 
  3150  061C                     	;# 
  3151  061F                     	;# 
  3152  0691                     	;# 
  3153  0692                     	;# 
  3154  0693                     	;# 
  3155  0694                     	;# 
  3156  0695                     	;# 
  3157  0696                     	;# 
  3158  0697                     	;# 
  3159  0698                     	;# 
  3160  0699                     	;# 
  3161  0711                     	;# 
  3162  0712                     	;# 
  3163  0713                     	;# 
  3164  0714                     	;# 
  3165  0715                     	;# 
  3166  0716                     	;# 
  3167  0717                     	;# 
  3168  0718                     	;# 
  3169  0719                     	;# 
  3170  0891                     	;# 
  3171  0891                     	;# 
  3172  0891                     	;# 
  3173  0891                     	;# 
  3174  0891                     	;# 
  3175  0891                     	;# 
  3176  0892                     	;# 
  3177  0892                     	;# 
  3178  0892                     	;# 
  3179  0893                     	;# 
  3180  0893                     	;# 
  3181  0893                     	;# 
  3182  0893                     	;# 
  3183  0893                     	;# 
  3184  0893                     	;# 
  3185  0894                     	;# 
  3186  0894                     	;# 
  3187  0894                     	;# 
  3188  0895                     	;# 
  3189  0895                     	;# 
  3190  0895                     	;# 
  3191  0896                     	;# 
  3192  0896                     	;# 
  3193  0896                     	;# 
  3194  089B                     	;# 
  3195  0911                     	;# 
  3196  0912                     	;# 
  3197  0913                     	;# 
  3198  0914                     	;# 
  3199  0915                     	;# 
  3200  0916                     	;# 
  3201  0918                     	;# 
  3202  0919                     	;# 
  3203  091A                     	;# 
  3204  091B                     	;# 
  3205  091C                     	;# 
  3206  091D                     	;# 
  3207  091E                     	;# 
  3208  091F                     	;# 
  3209  0E0F                     	;# 
  3210  0E10                     	;# 
  3211  0E11                     	;# 
  3212  0E12                     	;# 
  3213  0E13                     	;# 
  3214  0E14                     	;# 
  3215  0E15                     	;# 
  3216  0E16                     	;# 
  3217  0E17                     	;# 
  3218  0E18                     	;# 
  3219  0E19                     	;# 
  3220  0E1A                     	;# 
  3221  0E1B                     	;# 
  3222  0E1C                     	;# 
  3223  0E1D                     	;# 
  3224  0E1E                     	;# 
  3225  0E1F                     	;# 
  3226  0E20                     	;# 
  3227  0E21                     	;# 
  3228  0E22                     	;# 
  3229  0E24                     	;# 
  3230  0E25                     	;# 
  3231  0E28                     	;# 
  3232  0E29                     	;# 
  3233  0E2A                     	;# 
  3234  0E2B                     	;# 
  3235  0E2C                     	;# 
  3236  0E2D                     	;# 
  3237  0E2E                     	;# 
  3238  0E2F                     	;# 
  3239  0E90                     	;# 
  3240  0E91                     	;# 
  3241  0E92                     	;# 
  3242  0E94                     	;# 
  3243  0E95                     	;# 
  3244  0E9C                     	;# 
  3245  0E9D                     	;# 
  3246  0E9E                     	;# 
  3247  0E9F                     	;# 
  3248  0EA0                     	;# 
  3249  0EA1                     	;# 
  3250  0EA2                     	;# 
  3251  0EA3                     	;# 
  3252  0EA4                     	;# 
  3253  0EA5                     	;# 
  3254  0EA6                     	;# 
  3255  0EA7                     	;# 
  3256  0F0F                     	;# 
  3257  0F10                     	;# 
  3258  0F11                     	;# 
  3259  0F12                     	;# 
  3260  0F13                     	;# 
  3261  0F14                     	;# 
  3262  0F15                     	;# 
  3263  0F16                     	;# 
  3264  0F17                     	;# 
  3265  0F18                     	;# 
  3266  0F19                     	;# 
  3267  0F1A                     	;# 
  3268  0F1B                     	;# 
  3269  0F1C                     	;# 
  3270  0F1D                     	;# 
  3271  0F1E                     	;# 
  3272  0F1F                     	;# 
  3273  0F20                     	;# 
  3274  0F21                     	;# 
  3275  0F22                     	;# 
  3276  0F23                     	;# 
  3277  0F24                     	;# 
  3278  0F25                     	;# 
  3279  0F26                     	;# 
  3280  0F27                     	;# 
  3281  0F28                     	;# 
  3282  0F29                     	;# 
  3283  0F2A                     	;# 
  3284  0F2B                     	;# 
  3285  0F2C                     	;# 
  3286  0F2D                     	;# 
  3287  0F2E                     	;# 
  3288  0F2F                     	;# 
  3289  0F30                     	;# 
  3290  0F31                     	;# 
  3291  0F32                     	;# 
  3292  0F33                     	;# 
  3293  0F34                     	;# 
  3294  0F35                     	;# 
  3295  0F36                     	;# 
  3296  0F37                     	;# 
  3297  0FE4                     	;# 
  3298  0FE5                     	;# 
  3299  0FE6                     	;# 
  3300  0FE7                     	;# 
  3301  0FE8                     	;# 
  3302  0FE9                     	;# 
  3303  0FEA                     	;# 
  3304  0FEB                     	;# 
  3305  0FED                     	;# 
  3306  0FEE                     	;# 
  3307  0FEF                     	;# 
  3308  0000                     	;# 
  3309  0001                     	;# 
  3310  0002                     	;# 
  3311  0003                     	;# 
  3312  0004                     	;# 
  3313  0005                     	;# 
  3314  0006                     	;# 
  3315  0007                     	;# 
  3316  0008                     	;# 
  3317  0009                     	;# 
  3318  000A                     	;# 
  3319  000B                     	;# 
  3320  000C                     	;# 
  3321  000D                     	;# 
  3322  000E                     	;# 
  3323  0010                     	;# 
  3324  0011                     	;# 
  3325  0012                     	;# 
  3326  0013                     	;# 
  3327  0014                     	;# 
  3328  0015                     	;# 
  3329  0015                     	;# 
  3330  0016                     	;# 
  3331  0016                     	;# 
  3332  0017                     	;# 
  3333  0018                     	;# 
  3334  0019                     	;# 
  3335  0019                     	;# 
  3336  001A                     	;# 
  3337  001B                     	;# 
  3338  001C                     	;# 
  3339  001D                     	;# 
  3340  001E                     	;# 
  3341  001F                     	;# 
  3342  008C                     	;# 
  3343  008D                     	;# 
  3344  008E                     	;# 
  3345  0090                     	;# 
  3346  0091                     	;# 
  3347  0092                     	;# 
  3348  0093                     	;# 
  3349  0094                     	;# 
  3350  0097                     	;# 
  3351  009B                     	;# 
  3352  009B                     	;# 
  3353  009C                     	;# 
  3354  009D                     	;# 
  3355  009E                     	;# 
  3356  009F                     	;# 
  3357  010C                     	;# 
  3358  010D                     	;# 
  3359  010E                     	;# 
  3360  0111                     	;# 
  3361  0112                     	;# 
  3362  0113                     	;# 
  3363  0114                     	;# 
  3364  0115                     	;# 
  3365  0116                     	;# 
  3366  0117                     	;# 
  3367  0118                     	;# 
  3368  0119                     	;# 
  3369  018C                     	;# 
  3370  018D                     	;# 
  3371  018E                     	;# 
  3372  0197                     	;# 
  3373  0199                     	;# 
  3374  0199                     	;# 
  3375  0199                     	;# 
  3376  019A                     	;# 
  3377  019A                     	;# 
  3378  019A                     	;# 
  3379  019B                     	;# 
  3380  019B                     	;# 
  3381  019B                     	;# 
  3382  019B                     	;# 
  3383  019B                     	;# 
  3384  019C                     	;# 
  3385  019C                     	;# 
  3386  019C                     	;# 
  3387  019D                     	;# 
  3388  019D                     	;# 
  3389  019D                     	;# 
  3390  019E                     	;# 
  3391  019E                     	;# 
  3392  019E                     	;# 
  3393  019F                     	;# 
  3394  019F                     	;# 
  3395  019F                     	;# 
  3396  019F                     	;# 
  3397  019F                     	;# 
  3398  020C                     	;# 
  3399  020D                     	;# 
  3400  020E                     	;# 
  3401  0211                     	;# 
  3402  0211                     	;# 
  3403  0212                     	;# 
  3404  0212                     	;# 
  3405  0213                     	;# 
  3406  0213                     	;# 
  3407  0214                     	;# 
  3408  0214                     	;# 
  3409  0215                     	;# 
  3410  0215                     	;# 
  3411  0215                     	;# 
  3412  0215                     	;# 
  3413  0216                     	;# 
  3414  0216                     	;# 
  3415  0217                     	;# 
  3416  0217                     	;# 
  3417  0219                     	;# 
  3418  021A                     	;# 
  3419  021B                     	;# 
  3420  021C                     	;# 
  3421  021D                     	;# 
  3422  021D                     	;# 
  3423  021E                     	;# 
  3424  021F                     	;# 
  3425  028C                     	;# 
  3426  028D                     	;# 
  3427  028E                     	;# 
  3428  0291                     	;# 
  3429  0291                     	;# 
  3430  0292                     	;# 
  3431  0293                     	;# 
  3432  0294                     	;# 
  3433  0295                     	;# 
  3434  0295                     	;# 
  3435  0296                     	;# 
  3436  0297                     	;# 
  3437  0298                     	;# 
  3438  029F                     	;# 
  3439  030C                     	;# 
  3440  030D                     	;# 
  3441  030E                     	;# 
  3442  0311                     	;# 
  3443  0311                     	;# 
  3444  0312                     	;# 
  3445  0313                     	;# 
  3446  0314                     	;# 
  3447  0315                     	;# 
  3448  0315                     	;# 
  3449  0316                     	;# 
  3450  0317                     	;# 
  3451  0318                     	;# 
  3452  038C                     	;# 
  3453  038D                     	;# 
  3454  038E                     	;# 
  3455  0391                     	;# 
  3456  0392                     	;# 
  3457  0393                     	;# 
  3458  0394                     	;# 
  3459  0395                     	;# 
  3460  0396                     	;# 
  3461  0397                     	;# 
  3462  0398                     	;# 
  3463  0399                     	;# 
  3464  039A                     	;# 
  3465  039C                     	;# 
  3466  039D                     	;# 
  3467  039E                     	;# 
  3468  039F                     	;# 
  3469  0411                     	;# 
  3470  0411                     	;# 
  3471  0412                     	;# 
  3472  0413                     	;# 
  3473  0414                     	;# 
  3474  0415                     	;# 
  3475  0416                     	;# 
  3476  0417                     	;# 
  3477  0418                     	;# 
  3478  0418                     	;# 
  3479  0419                     	;# 
  3480  041A                     	;# 
  3481  041B                     	;# 
  3482  041C                     	;# 
  3483  041D                     	;# 
  3484  041E                     	;# 
  3485  041F                     	;# 
  3486  0498                     	;# 
  3487  0498                     	;# 
  3488  0499                     	;# 
  3489  049A                     	;# 
  3490  049B                     	;# 
  3491  049B                     	;# 
  3492  049C                     	;# 
  3493  049D                     	;# 
  3494  049E                     	;# 
  3495  049F                     	;# 
  3496  0617                     	;# 
  3497  0618                     	;# 
  3498  0619                     	;# 
  3499  0619                     	;# 
  3500  061A                     	;# 
  3501  061B                     	;# 
  3502  061C                     	;# 
  3503  061C                     	;# 
  3504  061F                     	;# 
  3505  0691                     	;# 
  3506  0692                     	;# 
  3507  0693                     	;# 
  3508  0694                     	;# 
  3509  0695                     	;# 
  3510  0696                     	;# 
  3511  0697                     	;# 
  3512  0698                     	;# 
  3513  0699                     	;# 
  3514  0711                     	;# 
  3515  0712                     	;# 
  3516  0713                     	;# 
  3517  0714                     	;# 
  3518  0715                     	;# 
  3519  0716                     	;# 
  3520  0717                     	;# 
  3521  0718                     	;# 
  3522  0719                     	;# 
  3523  0891                     	;# 
  3524  0891                     	;# 
  3525  0891                     	;# 
  3526  0891                     	;# 
  3527  0891                     	;# 
  3528  0891                     	;# 
  3529  0892                     	;# 
  3530  0892                     	;# 
  3531  0892                     	;# 
  3532  0893                     	;# 
  3533  0893                     	;# 
  3534  0893                     	;# 
  3535  0893                     	;# 
  3536  0893                     	;# 
  3537  0893                     	;# 
  3538  0894                     	;# 
  3539  0894                     	;# 
  3540  0894                     	;# 
  3541  0895                     	;# 
  3542  0895                     	;# 
  3543  0895                     	;# 
  3544  0896                     	;# 
  3545  0896                     	;# 
  3546  0896                     	;# 
  3547  089B                     	;# 
  3548  0911                     	;# 
  3549  0912                     	;# 
  3550  0913                     	;# 
  3551  0914                     	;# 
  3552  0915                     	;# 
  3553  0916                     	;# 
  3554  0918                     	;# 
  3555  0919                     	;# 
  3556  091A                     	;# 
  3557  091B                     	;# 
  3558  091C                     	;# 
  3559  091D                     	;# 
  3560  091E                     	;# 
  3561  091F                     	;# 
  3562  0E0F                     	;# 
  3563  0E10                     	;# 
  3564  0E11                     	;# 
  3565  0E12                     	;# 
  3566  0E13                     	;# 
  3567  0E14                     	;# 
  3568  0E15                     	;# 
  3569  0E16                     	;# 
  3570  0E17                     	;# 
  3571  0E18                     	;# 
  3572  0E19                     	;# 
  3573  0E1A                     	;# 
  3574  0E1B                     	;# 
  3575  0E1C                     	;# 
  3576  0E1D                     	;# 
  3577  0E1E                     	;# 
  3578  0E1F                     	;# 
  3579  0E20                     	;# 
  3580  0E21                     	;# 
  3581  0E22                     	;# 
  3582  0E24                     	;# 
  3583  0E25                     	;# 
  3584  0E28                     	;# 
  3585  0E29                     	;# 
  3586  0E2A                     	;# 
  3587  0E2B                     	;# 
  3588  0E2C                     	;# 
  3589  0E2D                     	;# 
  3590  0E2E                     	;# 
  3591  0E2F                     	;# 
  3592  0E90                     	;# 
  3593  0E91                     	;# 
  3594  0E92                     	;# 
  3595  0E94                     	;# 
  3596  0E95                     	;# 
  3597  0E9C                     	;# 
  3598  0E9D                     	;# 
  3599  0E9E                     	;# 
  3600  0E9F                     	;# 
  3601  0EA0                     	;# 
  3602  0EA1                     	;# 
  3603  0EA2                     	;# 
  3604  0EA3                     	;# 
  3605  0EA4                     	;# 
  3606  0EA5                     	;# 
  3607  0EA6                     	;# 
  3608  0EA7                     	;# 
  3609  0F0F                     	;# 
  3610  0F10                     	;# 
  3611  0F11                     	;# 
  3612  0F12                     	;# 
  3613  0F13                     	;# 
  3614  0F14                     	;# 
  3615  0F15                     	;# 
  3616  0F16                     	;# 
  3617  0F17                     	;# 
  3618  0F18                     	;# 
  3619  0F19                     	;# 
  3620  0F1A                     	;# 
  3621  0F1B                     	;# 
  3622  0F1C                     	;# 
  3623  0F1D                     	;# 
  3624  0F1E                     	;# 
  3625  0F1F                     	;# 
  3626  0F20                     	;# 
  3627  0F21                     	;# 
  3628  0F22                     	;# 
  3629  0F23                     	;# 
  3630  0F24                     	;# 
  3631  0F25                     	;# 
  3632  0F26                     	;# 
  3633  0F27                     	;# 
  3634  0F28                     	;# 
  3635  0F29                     	;# 
  3636  0F2A                     	;# 
  3637  0F2B                     	;# 
  3638  0F2C                     	;# 
  3639  0F2D                     	;# 
  3640  0F2E                     	;# 
  3641  0F2F                     	;# 
  3642  0F30                     	;# 
  3643  0F31                     	;# 
  3644  0F32                     	;# 
  3645  0F33                     	;# 
  3646  0F34                     	;# 
  3647  0F35                     	;# 
  3648  0F36                     	;# 
  3649  0F37                     	;# 
  3650  0FE4                     	;# 
  3651  0FE5                     	;# 
  3652  0FE6                     	;# 
  3653  0FE7                     	;# 
  3654  0FE8                     	;# 
  3655  0FE9                     	;# 
  3656  0FEA                     	;# 
  3657  0FEB                     	;# 
  3658  0FED                     	;# 
  3659  0FEE                     	;# 
  3660  0FEF                     	;# 
  3661  0000                     	;# 
  3662  0001                     	;# 
  3663  0002                     	;# 
  3664  0003                     	;# 
  3665  0004                     	;# 
  3666  0005                     	;# 
  3667  0006                     	;# 
  3668  0007                     	;# 
  3669  0008                     	;# 
  3670  0009                     	;# 
  3671  000A                     	;# 
  3672  000B                     	;# 
  3673  000C                     	;# 
  3674  000D                     	;# 
  3675  000E                     	;# 
  3676  0010                     	;# 
  3677  0011                     	;# 
  3678  0012                     	;# 
  3679  0013                     	;# 
  3680  0014                     	;# 
  3681  0015                     	;# 
  3682  0015                     	;# 
  3683  0016                     	;# 
  3684  0016                     	;# 
  3685  0017                     	;# 
  3686  0018                     	;# 
  3687  0019                     	;# 
  3688  0019                     	;# 
  3689  001A                     	;# 
  3690  001B                     	;# 
  3691  001C                     	;# 
  3692  001D                     	;# 
  3693  001E                     	;# 
  3694  001F                     	;# 
  3695  008C                     	;# 
  3696  008D                     	;# 
  3697  008E                     	;# 
  3698  0090                     	;# 
  3699  0091                     	;# 
  3700  0092                     	;# 
  3701  0093                     	;# 
  3702  0094                     	;# 
  3703  0097                     	;# 
  3704  009B                     	;# 
  3705  009B                     	;# 
  3706  009C                     	;# 
  3707  009D                     	;# 
  3708  009E                     	;# 
  3709  009F                     	;# 
  3710  010C                     	;# 
  3711  010D                     	;# 
  3712  010E                     	;# 
  3713  0111                     	;# 
  3714  0112                     	;# 
  3715  0113                     	;# 
  3716  0114                     	;# 
  3717  0115                     	;# 
  3718  0116                     	;# 
  3719  0117                     	;# 
  3720  0118                     	;# 
  3721  0119                     	;# 
  3722  018C                     	;# 
  3723  018D                     	;# 
  3724  018E                     	;# 
  3725  0197                     	;# 
  3726  0199                     	;# 
  3727  0199                     	;# 
  3728  0199                     	;# 
  3729  019A                     	;# 
  3730  019A                     	;# 
  3731  019A                     	;# 
  3732  019B                     	;# 
  3733  019B                     	;# 
  3734  019B                     	;# 
  3735  019B                     	;# 
  3736  019B                     	;# 
  3737  019C                     	;# 
  3738  019C                     	;# 
  3739  019C                     	;# 
  3740  019D                     	;# 
  3741  019D                     	;# 
  3742  019D                     	;# 
  3743  019E                     	;# 
  3744  019E                     	;# 
  3745  019E                     	;# 
  3746  019F                     	;# 
  3747  019F                     	;# 
  3748  019F                     	;# 
  3749  019F                     	;# 
  3750  019F                     	;# 
  3751  020C                     	;# 
  3752  020D                     	;# 
  3753  020E                     	;# 
  3754  0211                     	;# 
  3755  0211                     	;# 
  3756  0212                     	;# 
  3757  0212                     	;# 
  3758  0213                     	;# 
  3759  0213                     	;# 
  3760  0214                     	;# 
  3761  0214                     	;# 
  3762  0215                     	;# 
  3763  0215                     	;# 
  3764  0215                     	;# 
  3765  0215                     	;# 
  3766  0216                     	;# 
  3767  0216                     	;# 
  3768  0217                     	;# 
  3769  0217                     	;# 
  3770  0219                     	;# 
  3771  021A                     	;# 
  3772  021B                     	;# 
  3773  021C                     	;# 
  3774  021D                     	;# 
  3775  021D                     	;# 
  3776  021E                     	;# 
  3777  021F                     	;# 
  3778  028C                     	;# 
  3779  028D                     	;# 
  3780  028E                     	;# 
  3781  0291                     	;# 
  3782  0291                     	;# 
  3783  0292                     	;# 
  3784  0293                     	;# 
  3785  0294                     	;# 
  3786  0295                     	;# 
  3787  0295                     	;# 
  3788  0296                     	;# 
  3789  0297                     	;# 
  3790  0298                     	;# 
  3791  029F                     	;# 
  3792  030C                     	;# 
  3793  030D                     	;# 
  3794  030E                     	;# 
  3795  0311                     	;# 
  3796  0311                     	;# 
  3797  0312                     	;# 
  3798  0313                     	;# 
  3799  0314                     	;# 
  3800  0315                     	;# 
  3801  0315                     	;# 
  3802  0316                     	;# 
  3803  0317                     	;# 
  3804  0318                     	;# 
  3805  038C                     	;# 
  3806  038D                     	;# 
  3807  038E                     	;# 
  3808  0391                     	;# 
  3809  0392                     	;# 
  3810  0393                     	;# 
  3811  0394                     	;# 
  3812  0395                     	;# 
  3813  0396                     	;# 
  3814  0397                     	;# 
  3815  0398                     	;# 
  3816  0399                     	;# 
  3817  039A                     	;# 
  3818  039C                     	;# 
  3819  039D                     	;# 
  3820  039E                     	;# 
  3821  039F                     	;# 
  3822  0411                     	;# 
  3823  0411                     	;# 
  3824  0412                     	;# 
  3825  0413                     	;# 
  3826  0414                     	;# 
  3827  0415                     	;# 
  3828  0416                     	;# 
  3829  0417                     	;# 
  3830  0418                     	;# 
  3831  0418                     	;# 
  3832  0419                     	;# 
  3833  041A                     	;# 
  3834  041B                     	;# 
  3835  041C                     	;# 
  3836  041D                     	;# 
  3837  041E                     	;# 
  3838  041F                     	;# 
  3839  0498                     	;# 
  3840  0498                     	;# 
  3841  0499                     	;# 
  3842  049A                     	;# 
  3843  049B                     	;# 
  3844  049B                     	;# 
  3845  049C                     	;# 
  3846  049D                     	;# 
  3847  049E                     	;# 
  3848  049F                     	;# 
  3849  0617                     	;# 
  3850  0618                     	;# 
  3851  0619                     	;# 
  3852  0619                     	;# 
  3853  061A                     	;# 
  3854  061B                     	;# 
  3855  061C                     	;# 
  3856  061C                     	;# 
  3857  061F                     	;# 
  3858  0691                     	;# 
  3859  0692                     	;# 
  3860  0693                     	;# 
  3861  0694                     	;# 
  3862  0695                     	;# 
  3863  0696                     	;# 
  3864  0697                     	;# 
  3865  0698                     	;# 
  3866  0699                     	;# 
  3867  0711                     	;# 
  3868  0712                     	;# 
  3869  0713                     	;# 
  3870  0714                     	;# 
  3871  0715                     	;# 
  3872  0716                     	;# 
  3873  0717                     	;# 
  3874  0718                     	;# 
  3875  0719                     	;# 
  3876  0891                     	;# 
  3877  0891                     	;# 
  3878  0891                     	;# 
  3879  0891                     	;# 
  3880  0891                     	;# 
  3881  0891                     	;# 
  3882  0892                     	;# 
  3883  0892                     	;# 
  3884  0892                     	;# 
  3885  0893                     	;# 
  3886  0893                     	;# 
  3887  0893                     	;# 
  3888  0893                     	;# 
  3889  0893                     	;# 
  3890  0893                     	;# 
  3891  0894                     	;# 
  3892  0894                     	;# 
  3893  0894                     	;# 
  3894  0895                     	;# 
  3895  0895                     	;# 
  3896  0895                     	;# 
  3897  0896                     	;# 
  3898  0896                     	;# 
  3899  0896                     	;# 
  3900  089B                     	;# 
  3901  0911                     	;# 
  3902  0912                     	;# 
  3903  0913                     	;# 
  3904  0914                     	;# 
  3905  0915                     	;# 
  3906  0916                     	;# 
  3907  0918                     	;# 
  3908  0919                     	;# 
  3909  091A                     	;# 
  3910  091B                     	;# 
  3911  091C                     	;# 
  3912  091D                     	;# 
  3913  091E                     	;# 
  3914  091F                     	;# 
  3915  0E0F                     	;# 
  3916  0E10                     	;# 
  3917  0E11                     	;# 
  3918  0E12                     	;# 
  3919  0E13                     	;# 
  3920  0E14                     	;# 
  3921  0E15                     	;# 
  3922  0E16                     	;# 
  3923  0E17                     	;# 
  3924  0E18                     	;# 
  3925  0E19                     	;# 
  3926  0E1A                     	;# 
  3927  0E1B                     	;# 
  3928  0E1C                     	;# 
  3929  0E1D                     	;# 
  3930  0E1E                     	;# 
  3931  0E1F                     	;# 
  3932  0E20                     	;# 
  3933  0E21                     	;# 
  3934  0E22                     	;# 
  3935  0E24                     	;# 
  3936  0E25                     	;# 
  3937  0E28                     	;# 
  3938  0E29                     	;# 
  3939  0E2A                     	;# 
  3940  0E2B                     	;# 
  3941  0E2C                     	;# 
  3942  0E2D                     	;# 
  3943  0E2E                     	;# 
  3944  0E2F                     	;# 
  3945  0E90                     	;# 
  3946  0E91                     	;# 
  3947  0E92                     	;# 
  3948  0E94                     	;# 
  3949  0E95                     	;# 
  3950  0E9C                     	;# 
  3951  0E9D                     	;# 
  3952  0E9E                     	;# 
  3953  0E9F                     	;# 
  3954  0EA0                     	;# 
  3955  0EA1                     	;# 
  3956  0EA2                     	;# 
  3957  0EA3                     	;# 
  3958  0EA4                     	;# 
  3959  0EA5                     	;# 
  3960  0EA6                     	;# 
  3961  0EA7                     	;# 
  3962  0F0F                     	;# 
  3963  0F10                     	;# 
  3964  0F11                     	;# 
  3965  0F12                     	;# 
  3966  0F13                     	;# 
  3967  0F14                     	;# 
  3968  0F15                     	;# 
  3969  0F16                     	;# 
  3970  0F17                     	;# 
  3971  0F18                     	;# 
  3972  0F19                     	;# 
  3973  0F1A                     	;# 
  3974  0F1B                     	;# 
  3975  0F1C                     	;# 
  3976  0F1D                     	;# 
  3977  0F1E                     	;# 
  3978  0F1F                     	;# 
  3979  0F20                     	;# 
  3980  0F21                     	;# 
  3981  0F22                     	;# 
  3982  0F23                     	;# 
  3983  0F24                     	;# 
  3984  0F25                     	;# 
  3985  0F26                     	;# 
  3986  0F27                     	;# 
  3987  0F28                     	;# 
  3988  0F29                     	;# 
  3989  0F2A                     	;# 
  3990  0F2B                     	;# 
  3991  0F2C                     	;# 
  3992  0F2D                     	;# 
  3993  0F2E                     	;# 
  3994  0F2F                     	;# 
  3995  0F30                     	;# 
  3996  0F31                     	;# 
  3997  0F32                     	;# 
  3998  0F33                     	;# 
  3999  0F34                     	;# 
  4000  0F35                     	;# 
  4001  0F36                     	;# 
  4002  0F37                     	;# 
  4003  0FE4                     	;# 
  4004  0FE5                     	;# 
  4005  0FE6                     	;# 
  4006  0FE7                     	;# 
  4007  0FE8                     	;# 
  4008  0FE9                     	;# 
  4009  0FEA                     	;# 
  4010  0FEB                     	;# 
  4011  0FED                     	;# 
  4012  0FEE                     	;# 
  4013  0FEF                     	;# 
  4014  0000                     	;# 
  4015  0001                     	;# 
  4016  0002                     	;# 
  4017  0003                     	;# 
  4018  0004                     	;# 
  4019  0005                     	;# 
  4020  0006                     	;# 
  4021  0007                     	;# 
  4022  0008                     	;# 
  4023  0009                     	;# 
  4024  000A                     	;# 
  4025  000B                     	;# 
  4026  000C                     	;# 
  4027  000D                     	;# 
  4028  000E                     	;# 
  4029  0010                     	;# 
  4030  0011                     	;# 
  4031  0012                     	;# 
  4032  0013                     	;# 
  4033  0014                     	;# 
  4034  0015                     	;# 
  4035  0015                     	;# 
  4036  0016                     	;# 
  4037  0016                     	;# 
  4038  0017                     	;# 
  4039  0018                     	;# 
  4040  0019                     	;# 
  4041  0019                     	;# 
  4042  001A                     	;# 
  4043  001B                     	;# 
  4044  001C                     	;# 
  4045  001D                     	;# 
  4046  001E                     	;# 
  4047  001F                     	;# 
  4048  008C                     	;# 
  4049  008D                     	;# 
  4050  008E                     	;# 
  4051  0090                     	;# 
  4052  0091                     	;# 
  4053  0092                     	;# 
  4054  0093                     	;# 
  4055  0094                     	;# 
  4056  0097                     	;# 
  4057  009B                     	;# 
  4058  009B                     	;# 
  4059  009C                     	;# 
  4060  009D                     	;# 
  4061  009E                     	;# 
  4062  009F                     	;# 
  4063  010C                     	;# 
  4064  010D                     	;# 
  4065  010E                     	;# 
  4066  0111                     	;# 
  4067  0112                     	;# 
  4068  0113                     	;# 
  4069  0114                     	;# 
  4070  0115                     	;# 
  4071  0116                     	;# 
  4072  0117                     	;# 
  4073  0118                     	;# 
  4074  0119                     	;# 
  4075  018C                     	;# 
  4076  018D                     	;# 
  4077  018E                     	;# 
  4078  0197                     	;# 
  4079  0199                     	;# 
  4080  0199                     	;# 
  4081  0199                     	;# 
  4082  019A                     	;# 
  4083  019A                     	;# 
  4084  019A                     	;# 
  4085  019B                     	;# 
  4086  019B                     	;# 
  4087  019B                     	;# 
  4088  019B                     	;# 
  4089  019B                     	;# 
  4090  019C                     	;# 
  4091  019C                     	;# 
  4092  019C                     	;# 
  4093  019D                     	;# 
  4094  019D                     	;# 
  4095  019D                     	;# 
  4096  019E                     	;# 
  4097  019E                     	;# 
  4098  019E                     	;# 
  4099  019F                     	;# 
  4100  019F                     	;# 
  4101  019F                     	;# 
  4102  019F                     	;# 
  4103  019F                     	;# 
  4104  020C                     	;# 
  4105  020D                     	;# 
  4106  020E                     	;# 
  4107  0211                     	;# 
  4108  0211                     	;# 
  4109  0212                     	;# 
  4110  0212                     	;# 
  4111  0213                     	;# 
  4112  0213                     	;# 
  4113  0214                     	;# 
  4114  0214                     	;# 
  4115  0215                     	;# 
  4116  0215                     	;# 
  4117  0215                     	;# 
  4118  0215                     	;# 
  4119  0216                     	;# 
  4120  0216                     	;# 
  4121  0217                     	;# 
  4122  0217                     	;# 
  4123  0219                     	;# 
  4124  021A                     	;# 
  4125  021B                     	;# 
  4126  021C                     	;# 
  4127  021D                     	;# 
  4128  021D                     	;# 
  4129  021E                     	;# 
  4130  021F                     	;# 
  4131  028C                     	;# 
  4132  028D                     	;# 
  4133  028E                     	;# 
  4134  0291                     	;# 
  4135  0291                     	;# 
  4136  0292                     	;# 
  4137  0293                     	;# 
  4138  0294                     	;# 
  4139  0295                     	;# 
  4140  0295                     	;# 
  4141  0296                     	;# 
  4142  0297                     	;# 
  4143  0298                     	;# 
  4144  029F                     	;# 
  4145  030C                     	;# 
  4146  030D                     	;# 
  4147  030E                     	;# 
  4148  0311                     	;# 
  4149  0311                     	;# 
  4150  0312                     	;# 
  4151  0313                     	;# 
  4152  0314                     	;# 
  4153  0315                     	;# 
  4154  0315                     	;# 
  4155  0316                     	;# 
  4156  0317                     	;# 
  4157  0318                     	;# 
  4158  038C                     	;# 
  4159  038D                     	;# 
  4160  038E                     	;# 
  4161  0391                     	;# 
  4162  0392                     	;# 
  4163  0393                     	;# 
  4164  0394                     	;# 
  4165  0395                     	;# 
  4166  0396                     	;# 
  4167  0397                     	;# 
  4168  0398                     	;# 
  4169  0399                     	;# 
  4170  039A                     	;# 
  4171  039C                     	;# 
  4172  039D                     	;# 
  4173  039E                     	;# 
  4174  039F                     	;# 
  4175  0411                     	;# 
  4176  0411                     	;# 
  4177  0412                     	;# 
  4178  0413                     	;# 
  4179  0414                     	;# 
  4180  0415                     	;# 
  4181  0416                     	;# 
  4182  0417                     	;# 
  4183  0418                     	;# 
  4184  0418                     	;# 
  4185  0419                     	;# 
  4186  041A                     	;# 
  4187  041B                     	;# 
  4188  041C                     	;# 
  4189  041D                     	;# 
  4190  041E                     	;# 
  4191  041F                     	;# 
  4192  0498                     	;# 
  4193  0498                     	;# 
  4194  0499                     	;# 
  4195  049A                     	;# 
  4196  049B                     	;# 
  4197  049B                     	;# 
  4198  049C                     	;# 
  4199  049D                     	;# 
  4200  049E                     	;# 
  4201  049F                     	;# 
  4202  0617                     	;# 
  4203  0618                     	;# 
  4204  0619                     	;# 
  4205  0619                     	;# 
  4206  061A                     	;# 
  4207  061B                     	;# 
  4208  061C                     	;# 
  4209  061C                     	;# 
  4210  061F                     	;# 
  4211  0691                     	;# 
  4212  0692                     	;# 
  4213  0693                     	;# 
  4214  0694                     	;# 
  4215  0695                     	;# 
  4216  0696                     	;# 
  4217  0697                     	;# 
  4218  0698                     	;# 
  4219  0699                     	;# 
  4220  0711                     	;# 
  4221  0712                     	;# 
  4222  0713                     	;# 
  4223  0714                     	;# 
  4224  0715                     	;# 
  4225  0716                     	;# 
  4226  0717                     	;# 
  4227  0718                     	;# 
  4228  0719                     	;# 
  4229  0891                     	;# 
  4230  0891                     	;# 
  4231  0891                     	;# 
  4232  0891                     	;# 
  4233  0891                     	;# 
  4234  0891                     	;# 
  4235  0892                     	;# 
  4236  0892                     	;# 
  4237  0892                     	;# 
  4238  0893                     	;# 
  4239  0893                     	;# 
  4240  0893                     	;# 
  4241  0893                     	;# 
  4242  0893                     	;# 
  4243  0893                     	;# 
  4244  0894                     	;# 
  4245  0894                     	;# 
  4246  0894                     	;# 
  4247  0895                     	;# 
  4248  0895                     	;# 
  4249  0895                     	;# 
  4250  0896                     	;# 
  4251  0896                     	;# 
  4252  0896                     	;# 
  4253  089B                     	;# 
  4254  0911                     	;# 
  4255  0912                     	;# 
  4256  0913                     	;# 
  4257  0914                     	;# 
  4258  0915                     	;# 
  4259  0916                     	;# 
  4260  0918                     	;# 
  4261  0919                     	;# 
  4262  091A                     	;# 
  4263  091B                     	;# 
  4264  091C                     	;# 
  4265  091D                     	;# 
  4266  091E                     	;# 
  4267  091F                     	;# 
  4268  0E0F                     	;# 
  4269  0E10                     	;# 
  4270  0E11                     	;# 
  4271  0E12                     	;# 
  4272  0E13                     	;# 
  4273  0E14                     	;# 
  4274  0E15                     	;# 
  4275  0E16                     	;# 
  4276  0E17                     	;# 
  4277  0E18                     	;# 
  4278  0E19                     	;# 
  4279  0E1A                     	;# 
  4280  0E1B                     	;# 
  4281  0E1C                     	;# 
  4282  0E1D                     	;# 
  4283  0E1E                     	;# 
  4284  0E1F                     	;# 
  4285  0E20                     	;# 
  4286  0E21                     	;# 
  4287  0E22                     	;# 
  4288  0E24                     	;# 
  4289  0E25                     	;# 
  4290  0E28                     	;# 
  4291  0E29                     	;# 
  4292  0E2A                     	;# 
  4293  0E2B                     	;# 
  4294  0E2C                     	;# 
  4295  0E2D                     	;# 
  4296  0E2E                     	;# 
  4297  0E2F                     	;# 
  4298  0E90                     	;# 
  4299  0E91                     	;# 
  4300  0E92                     	;# 
  4301  0E94                     	;# 
  4302  0E95                     	;# 
  4303  0E9C                     	;# 
  4304  0E9D                     	;# 
  4305  0E9E                     	;# 
  4306  0E9F                     	;# 
  4307  0EA0                     	;# 
  4308  0EA1                     	;# 
  4309  0EA2                     	;# 
  4310  0EA3                     	;# 
  4311  0EA4                     	;# 
  4312  0EA5                     	;# 
  4313  0EA6                     	;# 
  4314  0EA7                     	;# 
  4315  0F0F                     	;# 
  4316  0F10                     	;# 
  4317  0F11                     	;# 
  4318  0F12                     	;# 
  4319  0F13                     	;# 
  4320  0F14                     	;# 
  4321  0F15                     	;# 
  4322  0F16                     	;# 
  4323  0F17                     	;# 
  4324  0F18                     	;# 
  4325  0F19                     	;# 
  4326  0F1A                     	;# 
  4327  0F1B                     	;# 
  4328  0F1C                     	;# 
  4329  0F1D                     	;# 
  4330  0F1E                     	;# 
  4331  0F1F                     	;# 
  4332  0F20                     	;# 
  4333  0F21                     	;# 
  4334  0F22                     	;# 
  4335  0F23                     	;# 
  4336  0F24                     	;# 
  4337  0F25                     	;# 
  4338  0F26                     	;# 
  4339  0F27                     	;# 
  4340  0F28                     	;# 
  4341  0F29                     	;# 
  4342  0F2A                     	;# 
  4343  0F2B                     	;# 
  4344  0F2C                     	;# 
  4345  0F2D                     	;# 
  4346  0F2E                     	;# 
  4347  0F2F                     	;# 
  4348  0F30                     	;# 
  4349  0F31                     	;# 
  4350  0F32                     	;# 
  4351  0F33                     	;# 
  4352  0F34                     	;# 
  4353  0F35                     	;# 
  4354  0F36                     	;# 
  4355  0F37                     	;# 
  4356  0FE4                     	;# 
  4357  0FE5                     	;# 
  4358  0FE6                     	;# 
  4359  0FE7                     	;# 
  4360  0FE8                     	;# 
  4361  0FE9                     	;# 
  4362  0FEA                     	;# 
  4363  0FEB                     	;# 
  4364  0FED                     	;# 
  4365  0FEE                     	;# 
  4366  0FEF                     	;# 
  4367  0000                     	;# 
  4368  0001                     	;# 
  4369  0002                     	;# 
  4370  0003                     	;# 
  4371  0004                     	;# 
  4372  0005                     	;# 
  4373  0006                     	;# 
  4374  0007                     	;# 
  4375  0008                     	;# 
  4376  0009                     	;# 
  4377  000A                     	;# 
  4378  000B                     	;# 
  4379  000C                     	;# 
  4380  000D                     	;# 
  4381  000E                     	;# 
  4382  0010                     	;# 
  4383  0011                     	;# 
  4384  0012                     	;# 
  4385  0013                     	;# 
  4386  0014                     	;# 
  4387  0015                     	;# 
  4388  0015                     	;# 
  4389  0016                     	;# 
  4390  0016                     	;# 
  4391  0017                     	;# 
  4392  0018                     	;# 
  4393  0019                     	;# 
  4394  0019                     	;# 
  4395  001A                     	;# 
  4396  001B                     	;# 
  4397  001C                     	;# 
  4398  001D                     	;# 
  4399  001E                     	;# 
  4400  001F                     	;# 
  4401  008C                     	;# 
  4402  008D                     	;# 
  4403  008E                     	;# 
  4404  0090                     	;# 
  4405  0091                     	;# 
  4406  0092                     	;# 
  4407  0093                     	;# 
  4408  0094                     	;# 
  4409  0097                     	;# 
  4410  009B                     	;# 
  4411  009B                     	;# 
  4412  009C                     	;# 
  4413  009D                     	;# 
  4414  009E                     	;# 
  4415  009F                     	;# 
  4416  010C                     	;# 
  4417  010D                     	;# 
  4418  010E                     	;# 
  4419  0111                     	;# 
  4420  0112                     	;# 
  4421  0113                     	;# 
  4422  0114                     	;# 
  4423  0115                     	;# 
  4424  0116                     	;# 
  4425  0117                     	;# 
  4426  0118                     	;# 
  4427  0119                     	;# 
  4428  018C                     	;# 
  4429  018D                     	;# 
  4430  018E                     	;# 
  4431  0197                     	;# 
  4432  0199                     	;# 
  4433  0199                     	;# 
  4434  0199                     	;# 
  4435  019A                     	;# 
  4436  019A                     	;# 
  4437  019A                     	;# 
  4438  019B                     	;# 
  4439  019B                     	;# 
  4440  019B                     	;# 
  4441  019B                     	;# 
  4442  019B                     	;# 
  4443  019C                     	;# 
  4444  019C                     	;# 
  4445  019C                     	;# 
  4446  019D                     	;# 
  4447  019D                     	;# 
  4448  019D                     	;# 
  4449  019E                     	;# 
  4450  019E                     	;# 
  4451  019E                     	;# 
  4452  019F                     	;# 
  4453  019F                     	;# 
  4454  019F                     	;# 
  4455  019F                     	;# 
  4456  019F                     	;# 
  4457  020C                     	;# 
  4458  020D                     	;# 
  4459  020E                     	;# 
  4460  0211                     	;# 
  4461  0211                     	;# 
  4462  0212                     	;# 
  4463  0212                     	;# 
  4464  0213                     	;# 
  4465  0213                     	;# 
  4466  0214                     	;# 
  4467  0214                     	;# 
  4468  0215                     	;# 
  4469  0215                     	;# 
  4470  0215                     	;# 
  4471  0215                     	;# 
  4472  0216                     	;# 
  4473  0216                     	;# 
  4474  0217                     	;# 
  4475  0217                     	;# 
  4476  0219                     	;# 
  4477  021A                     	;# 
  4478  021B                     	;# 
  4479  021C                     	;# 
  4480  021D                     	;# 
  4481  021D                     	;# 
  4482  021E                     	;# 
  4483  021F                     	;# 
  4484  028C                     	;# 
  4485  028D                     	;# 
  4486  028E                     	;# 
  4487  0291                     	;# 
  4488  0291                     	;# 
  4489  0292                     	;# 
  4490  0293                     	;# 
  4491  0294                     	;# 
  4492  0295                     	;# 
  4493  0295                     	;# 
  4494  0296                     	;# 
  4495  0297                     	;# 
  4496  0298                     	;# 
  4497  029F                     	;# 
  4498  030C                     	;# 
  4499  030D                     	;# 
  4500  030E                     	;# 
  4501  0311                     	;# 
  4502  0311                     	;# 
  4503  0312                     	;# 
  4504  0313                     	;# 
  4505  0314                     	;# 
  4506  0315                     	;# 
  4507  0315                     	;# 
  4508  0316                     	;# 
  4509  0317                     	;# 
  4510  0318                     	;# 
  4511  038C                     	;# 
  4512  038D                     	;# 
  4513  038E                     	;# 
  4514  0391                     	;# 
  4515  0392                     	;# 
  4516  0393                     	;# 
  4517  0394                     	;# 
  4518  0395                     	;# 
  4519  0396                     	;# 
  4520  0397                     	;# 
  4521  0398                     	;# 
  4522  0399                     	;# 
  4523  039A                     	;# 
  4524  039C                     	;# 
  4525  039D                     	;# 
  4526  039E                     	;# 
  4527  039F                     	;# 
  4528  0411                     	;# 
  4529  0411                     	;# 
  4530  0412                     	;# 
  4531  0413                     	;# 
  4532  0414                     	;# 
  4533  0415                     	;# 
  4534  0416                     	;# 
  4535  0417                     	;# 
  4536  0418                     	;# 
  4537  0418                     	;# 
  4538  0419                     	;# 
  4539  041A                     	;# 
  4540  041B                     	;# 
  4541  041C                     	;# 
  4542  041D                     	;# 
  4543  041E                     	;# 
  4544  041F                     	;# 
  4545  0498                     	;# 
  4546  0498                     	;# 
  4547  0499                     	;# 
  4548  049A                     	;# 
  4549  049B                     	;# 
  4550  049B                     	;# 
  4551  049C                     	;# 
  4552  049D                     	;# 
  4553  049E                     	;# 
  4554  049F                     	;# 
  4555  0617                     	;# 
  4556  0618                     	;# 
  4557  0619                     	;# 
  4558  0619                     	;# 
  4559  061A                     	;# 
  4560  061B                     	;# 
  4561  061C                     	;# 
  4562  061C                     	;# 
  4563  061F                     	;# 
  4564  0691                     	;# 
  4565  0692                     	;# 
  4566  0693                     	;# 
  4567  0694                     	;# 
  4568  0695                     	;# 
  4569  0696                     	;# 
  4570  0697                     	;# 
  4571  0698                     	;# 
  4572  0699                     	;# 
  4573  0711                     	;# 
  4574  0712                     	;# 
  4575  0713                     	;# 
  4576  0714                     	;# 
  4577  0715                     	;# 
  4578  0716                     	;# 
  4579  0717                     	;# 
  4580  0718                     	;# 
  4581  0719                     	;# 
  4582  0891                     	;# 
  4583  0891                     	;# 
  4584  0891                     	;# 
  4585  0891                     	;# 
  4586  0891                     	;# 
  4587  0891                     	;# 
  4588  0892                     	;# 
  4589  0892                     	;# 
  4590  0892                     	;# 
  4591  0893                     	;# 
  4592  0893                     	;# 
  4593  0893                     	;# 
  4594  0893                     	;# 
  4595  0893                     	;# 
  4596  0893                     	;# 
  4597  0894                     	;# 
  4598  0894                     	;# 
  4599  0894                     	;# 
  4600  0895                     	;# 
  4601  0895                     	;# 
  4602  0895                     	;# 
  4603  0896                     	;# 
  4604  0896                     	;# 
  4605  0896                     	;# 
  4606  089B                     	;# 
  4607  0911                     	;# 
  4608  0912                     	;# 
  4609  0913                     	;# 
  4610  0914                     	;# 
  4611  0915                     	;# 
  4612  0916                     	;# 
  4613  0918                     	;# 
  4614  0919                     	;# 
  4615  091A                     	;# 
  4616  091B                     	;# 
  4617  091C                     	;# 
  4618  091D                     	;# 
  4619  091E                     	;# 
  4620  091F                     	;# 
  4621  0E0F                     	;# 
  4622  0E10                     	;# 
  4623  0E11                     	;# 
  4624  0E12                     	;# 
  4625  0E13                     	;# 
  4626  0E14                     	;# 
  4627  0E15                     	;# 
  4628  0E16                     	;# 
  4629  0E17                     	;# 
  4630  0E18                     	;# 
  4631  0E19                     	;# 
  4632  0E1A                     	;# 
  4633  0E1B                     	;# 
  4634  0E1C                     	;# 
  4635  0E1D                     	;# 
  4636  0E1E                     	;# 
  4637  0E1F                     	;# 
  4638  0E20                     	;# 
  4639  0E21                     	;# 
  4640  0E22                     	;# 
  4641  0E24                     	;# 
  4642  0E25                     	;# 
  4643  0E28                     	;# 
  4644  0E29                     	;# 
  4645  0E2A                     	;# 
  4646  0E2B                     	;# 
  4647  0E2C                     	;# 
  4648  0E2D                     	;# 
  4649  0E2E                     	;# 
  4650  0E2F                     	;# 
  4651  0E90                     	;# 
  4652  0E91                     	;# 
  4653  0E92                     	;# 
  4654  0E94                     	;# 
  4655  0E95                     	;# 
  4656  0E9C                     	;# 
  4657  0E9D                     	;# 
  4658  0E9E                     	;# 
  4659  0E9F                     	;# 
  4660  0EA0                     	;# 
  4661  0EA1                     	;# 
  4662  0EA2                     	;# 
  4663  0EA3                     	;# 
  4664  0EA4                     	;# 
  4665  0EA5                     	;# 
  4666  0EA6                     	;# 
  4667  0EA7                     	;# 
  4668  0F0F                     	;# 
  4669  0F10                     	;# 
  4670  0F11                     	;# 
  4671  0F12                     	;# 
  4672  0F13                     	;# 
  4673  0F14                     	;# 
  4674  0F15                     	;# 
  4675  0F16                     	;# 
  4676  0F17                     	;# 
  4677  0F18                     	;# 
  4678  0F19                     	;# 
  4679  0F1A                     	;# 
  4680  0F1B                     	;# 
  4681  0F1C                     	;# 
  4682  0F1D                     	;# 
  4683  0F1E                     	;# 
  4684  0F1F                     	;# 
  4685  0F20                     	;# 
  4686  0F21                     	;# 
  4687  0F22                     	;# 
  4688  0F23                     	;# 
  4689  0F24                     	;# 
  4690  0F25                     	;# 
  4691  0F26                     	;# 
  4692  0F27                     	;# 
  4693  0F28                     	;# 
  4694  0F29                     	;# 
  4695  0F2A                     	;# 
  4696  0F2B                     	;# 
  4697  0F2C                     	;# 
  4698  0F2D                     	;# 
  4699  0F2E                     	;# 
  4700  0F2F                     	;# 
  4701  0F30                     	;# 
  4702  0F31                     	;# 
  4703  0F32                     	;# 
  4704  0F33                     	;# 
  4705  0F34                     	;# 
  4706  0F35                     	;# 
  4707  0F36                     	;# 
  4708  0F37                     	;# 
  4709  0FE4                     	;# 
  4710  0FE5                     	;# 
  4711  0FE6                     	;# 
  4712  0FE7                     	;# 
  4713  0FE8                     	;# 
  4714  0FE9                     	;# 
  4715  0FEA                     	;# 
  4716  0FEB                     	;# 
  4717  0FED                     	;# 
  4718  0FEE                     	;# 
  4719  0FEF                     	;# 
  4720  0000                     	;# 
  4721  0001                     	;# 
  4722  0002                     	;# 
  4723  0003                     	;# 
  4724  0004                     	;# 
  4725  0005                     	;# 
  4726  0006                     	;# 
  4727  0007                     	;# 
  4728  0008                     	;# 
  4729  0009                     	;# 
  4730  000A                     	;# 
  4731  000B                     	;# 
  4732  000C                     	;# 
  4733  000D                     	;# 
  4734  000E                     	;# 
  4735  0010                     	;# 
  4736  0011                     	;# 
  4737  0012                     	;# 
  4738  0013                     	;# 
  4739  0014                     	;# 
  4740  0015                     	;# 
  4741  0015                     	;# 
  4742  0016                     	;# 
  4743  0016                     	;# 
  4744  0017                     	;# 
  4745  0018                     	;# 
  4746  0019                     	;# 
  4747  0019                     	;# 
  4748  001A                     	;# 
  4749  001B                     	;# 
  4750  001C                     	;# 
  4751  001D                     	;# 
  4752  001E                     	;# 
  4753  001F                     	;# 
  4754  008C                     	;# 
  4755  008D                     	;# 
  4756  008E                     	;# 
  4757  0090                     	;# 
  4758  0091                     	;# 
  4759  0092                     	;# 
  4760  0093                     	;# 
  4761  0094                     	;# 
  4762  0097                     	;# 
  4763  009B                     	;# 
  4764  009B                     	;# 
  4765  009C                     	;# 
  4766  009D                     	;# 
  4767  009E                     	;# 
  4768  009F                     	;# 
  4769  010C                     	;# 
  4770  010D                     	;# 
  4771  010E                     	;# 
  4772  0111                     	;# 
  4773  0112                     	;# 
  4774  0113                     	;# 
  4775  0114                     	;# 
  4776  0115                     	;# 
  4777  0116                     	;# 
  4778  0117                     	;# 
  4779  0118                     	;# 
  4780  0119                     	;# 
  4781  018C                     	;# 
  4782  018D                     	;# 
  4783  018E                     	;# 
  4784  0197                     	;# 
  4785  0199                     	;# 
  4786  0199                     	;# 
  4787  0199                     	;# 
  4788  019A                     	;# 
  4789  019A                     	;# 
  4790  019A                     	;# 
  4791  019B                     	;# 
  4792  019B                     	;# 
  4793  019B                     	;# 
  4794  019B                     	;# 
  4795  019B                     	;# 
  4796  019C                     	;# 
  4797  019C                     	;# 
  4798  019C                     	;# 
  4799  019D                     	;# 
  4800  019D                     	;# 
  4801  019D                     	;# 
  4802  019E                     	;# 
  4803  019E                     	;# 
  4804  019E                     	;# 
  4805  019F                     	;# 
  4806  019F                     	;# 
  4807  019F                     	;# 
  4808  019F                     	;# 
  4809  019F                     	;# 
  4810  020C                     	;# 
  4811  020D                     	;# 
  4812  020E                     	;# 
  4813  0211                     	;# 
  4814  0211                     	;# 
  4815  0212                     	;# 
  4816  0212                     	;# 
  4817  0213                     	;# 
  4818  0213                     	;# 
  4819  0214                     	;# 
  4820  0214                     	;# 
  4821  0215                     	;# 
  4822  0215                     	;# 
  4823  0215                     	;# 
  4824  0215                     	;# 
  4825  0216                     	;# 
  4826  0216                     	;# 
  4827  0217                     	;# 
  4828  0217                     	;# 
  4829  0219                     	;# 
  4830  021A                     	;# 
  4831  021B                     	;# 
  4832  021C                     	;# 
  4833  021D                     	;# 
  4834  021D                     	;# 
  4835  021E                     	;# 
  4836  021F                     	;# 
  4837  028C                     	;# 
  4838  028D                     	;# 
  4839  028E                     	;# 
  4840  0291                     	;# 
  4841  0291                     	;# 
  4842  0292                     	;# 
  4843  0293                     	;# 
  4844  0294                     	;# 
  4845  0295                     	;# 
  4846  0295                     	;# 
  4847  0296                     	;# 
  4848  0297                     	;# 
  4849  0298                     	;# 
  4850  029F                     	;# 
  4851  030C                     	;# 
  4852  030D                     	;# 
  4853  030E                     	;# 
  4854  0311                     	;# 
  4855  0311                     	;# 
  4856  0312                     	;# 
  4857  0313                     	;# 
  4858  0314                     	;# 
  4859  0315                     	;# 
  4860  0315                     	;# 
  4861  0316                     	;# 
  4862  0317                     	;# 
  4863  0318                     	;# 
  4864  038C                     	;# 
  4865  038D                     	;# 
  4866  038E                     	;# 
  4867  0391                     	;# 
  4868  0392                     	;# 
  4869  0393                     	;# 
  4870  0394                     	;# 
  4871  0395                     	;# 
  4872  0396                     	;# 
  4873  0397                     	;# 
  4874  0398                     	;# 
  4875  0399                     	;# 
  4876  039A                     	;# 
  4877  039C                     	;# 
  4878  039D                     	;# 
  4879  039E                     	;# 
  4880  039F                     	;# 
  4881  0411                     	;# 
  4882  0411                     	;# 
  4883  0412                     	;# 
  4884  0413                     	;# 
  4885  0414                     	;# 
  4886  0415                     	;# 
  4887  0416                     	;# 
  4888  0417                     	;# 
  4889  0418                     	;# 
  4890  0418                     	;# 
  4891  0419                     	;# 
  4892  041A                     	;# 
  4893  041B                     	;# 
  4894  041C                     	;# 
  4895  041D                     	;# 
  4896  041E                     	;# 
  4897  041F                     	;# 
  4898  0498                     	;# 
  4899  0498                     	;# 
  4900  0499                     	;# 
  4901  049A                     	;# 
  4902  049B                     	;# 
  4903  049B                     	;# 
  4904  049C                     	;# 
  4905  049D                     	;# 
  4906  049E                     	;# 
  4907  049F                     	;# 
  4908  0617                     	;# 
  4909  0618                     	;# 
  4910  0619                     	;# 
  4911  0619                     	;# 
  4912  061A                     	;# 
  4913  061B                     	;# 
  4914  061C                     	;# 
  4915  061C                     	;# 
  4916  061F                     	;# 
  4917  0691                     	;# 
  4918  0692                     	;# 
  4919  0693                     	;# 
  4920  0694                     	;# 
  4921  0695                     	;# 
  4922  0696                     	;# 
  4923  0697                     	;# 
  4924  0698                     	;# 
  4925  0699                     	;# 
  4926  0711                     	;# 
  4927  0712                     	;# 
  4928  0713                     	;# 
  4929  0714                     	;# 
  4930  0715                     	;# 
  4931  0716                     	;# 
  4932  0717                     	;# 
  4933  0718                     	;# 
  4934  0719                     	;# 
  4935  0891                     	;# 
  4936  0891                     	;# 
  4937  0891                     	;# 
  4938  0891                     	;# 
  4939  0891                     	;# 
  4940  0891                     	;# 
  4941  0892                     	;# 
  4942  0892                     	;# 
  4943  0892                     	;# 
  4944  0893                     	;# 
  4945  0893                     	;# 
  4946  0893                     	;# 
  4947  0893                     	;# 
  4948  0893                     	;# 
  4949  0893                     	;# 
  4950  0894                     	;# 
  4951  0894                     	;# 
  4952  0894                     	;# 
  4953  0895                     	;# 
  4954  0895                     	;# 
  4955  0895                     	;# 
  4956  0896                     	;# 
  4957  0896                     	;# 
  4958  0896                     	;# 
  4959  089B                     	;# 
  4960  0911                     	;# 
  4961  0912                     	;# 
  4962  0913                     	;# 
  4963  0914                     	;# 
  4964  0915                     	;# 
  4965  0916                     	;# 
  4966  0918                     	;# 
  4967  0919                     	;# 
  4968  091A                     	;# 
  4969  091B                     	;# 
  4970  091C                     	;# 
  4971  091D                     	;# 
  4972  091E                     	;# 
  4973  091F                     	;# 
  4974  0E0F                     	;# 
  4975  0E10                     	;# 
  4976  0E11                     	;# 
  4977  0E12                     	;# 
  4978  0E13                     	;# 
  4979  0E14                     	;# 
  4980  0E15                     	;# 
  4981  0E16                     	;# 
  4982  0E17                     	;# 
  4983  0E18                     	;# 
  4984  0E19                     	;# 
  4985  0E1A                     	;# 
  4986  0E1B                     	;# 
  4987  0E1C                     	;# 
  4988  0E1D                     	;# 
  4989  0E1E                     	;# 
  4990  0E1F                     	;# 
  4991  0E20                     	;# 
  4992  0E21                     	;# 
  4993  0E22                     	;# 
  4994  0E24                     	;# 
  4995  0E25                     	;# 
  4996  0E28                     	;# 
  4997  0E29                     	;# 
  4998  0E2A                     	;# 
  4999  0E2B                     	;# 
  5000  0E2C                     	;# 
  5001  0E2D                     	;# 
  5002  0E2E                     	;# 
  5003  0E2F                     	;# 
  5004  0E90                     	;# 
  5005  0E91                     	;# 
  5006  0E92                     	;# 
  5007  0E94                     	;# 
  5008  0E95                     	;# 
  5009  0E9C                     	;# 
  5010  0E9D                     	;# 
  5011  0E9E                     	;# 
  5012  0E9F                     	;# 
  5013  0EA0                     	;# 
  5014  0EA1                     	;# 
  5015  0EA2                     	;# 
  5016  0EA3                     	;# 
  5017  0EA4                     	;# 
  5018  0EA5                     	;# 
  5019  0EA6                     	;# 
  5020  0EA7                     	;# 
  5021  0F0F                     	;# 
  5022  0F10                     	;# 
  5023  0F11                     	;# 
  5024  0F12                     	;# 
  5025  0F13                     	;# 
  5026  0F14                     	;# 
  5027  0F15                     	;# 
  5028  0F16                     	;# 
  5029  0F17                     	;# 
  5030  0F18                     	;# 
  5031  0F19                     	;# 
  5032  0F1A                     	;# 
  5033  0F1B                     	;# 
  5034  0F1C                     	;# 
  5035  0F1D                     	;# 
  5036  0F1E                     	;# 
  5037  0F1F                     	;# 
  5038  0F20                     	;# 
  5039  0F21                     	;# 
  5040  0F22                     	;# 
  5041  0F23                     	;# 
  5042  0F24                     	;# 
  5043  0F25                     	;# 
  5044  0F26                     	;# 
  5045  0F27                     	;# 
  5046  0F28                     	;# 
  5047  0F29                     	;# 
  5048  0F2A                     	;# 
  5049  0F2B                     	;# 
  5050  0F2C                     	;# 
  5051  0F2D                     	;# 
  5052  0F2E                     	;# 
  5053  0F2F                     	;# 
  5054  0F30                     	;# 
  5055  0F31                     	;# 
  5056  0F32                     	;# 
  5057  0F33                     	;# 
  5058  0F34                     	;# 
  5059  0F35                     	;# 
  5060  0F36                     	;# 
  5061  0F37                     	;# 
  5062  0FE4                     	;# 
  5063  0FE5                     	;# 
  5064  0FE6                     	;# 
  5065  0FE7                     	;# 
  5066  0FE8                     	;# 
  5067  0FE9                     	;# 
  5068  0FEA                     	;# 
  5069  0FEB                     	;# 
  5070  0FED                     	;# 
  5071  0FEE                     	;# 
  5072  0FEF                     	;# 
  5073  0000                     	;# 
  5074  0001                     	;# 
  5075  0002                     	;# 
  5076  0003                     	;# 
  5077  0004                     	;# 
  5078  0005                     	;# 
  5079  0006                     	;# 
  5080  0007                     	;# 
  5081  0008                     	;# 
  5082  0009                     	;# 
  5083  000A                     	;# 
  5084  000B                     	;# 
  5085  000C                     	;# 
  5086  000D                     	;# 
  5087  000E                     	;# 
  5088  0010                     	;# 
  5089  0011                     	;# 
  5090  0012                     	;# 
  5091  0013                     	;# 
  5092  0014                     	;# 
  5093  0015                     	;# 
  5094  0015                     	;# 
  5095  0016                     	;# 
  5096  0016                     	;# 
  5097  0017                     	;# 
  5098  0018                     	;# 
  5099  0019                     	;# 
  5100  0019                     	;# 
  5101  001A                     	;# 
  5102  001B                     	;# 
  5103  001C                     	;# 
  5104  001D                     	;# 
  5105  001E                     	;# 
  5106  001F                     	;# 
  5107  008C                     	;# 
  5108  008D                     	;# 
  5109  008E                     	;# 
  5110  0090                     	;# 
  5111  0091                     	;# 
  5112  0092                     	;# 
  5113  0093                     	;# 
  5114  0094                     	;# 
  5115  0097                     	;# 
  5116  009B                     	;# 
  5117  009B                     	;# 
  5118  009C                     	;# 
  5119  009D                     	;# 
  5120  009E                     	;# 
  5121  009F                     	;# 
  5122  010C                     	;# 
  5123  010D                     	;# 
  5124  010E                     	;# 
  5125  0111                     	;# 
  5126  0112                     	;# 
  5127  0113                     	;# 
  5128  0114                     	;# 
  5129  0115                     	;# 
  5130  0116                     	;# 
  5131  0117                     	;# 
  5132  0118                     	;# 
  5133  0119                     	;# 
  5134  018C                     	;# 
  5135  018D                     	;# 
  5136  018E                     	;# 
  5137  0197                     	;# 
  5138  0199                     	;# 
  5139  0199                     	;# 
  5140  0199                     	;# 
  5141  019A                     	;# 
  5142  019A                     	;# 
  5143  019A                     	;# 
  5144  019B                     	;# 
  5145  019B                     	;# 
  5146  019B                     	;# 
  5147  019B                     	;# 
  5148  019B                     	;# 
  5149  019C                     	;# 
  5150  019C                     	;# 
  5151  019C                     	;# 
  5152  019D                     	;# 
  5153  019D                     	;# 
  5154  019D                     	;# 
  5155  019E                     	;# 
  5156  019E                     	;# 
  5157  019E                     	;# 
  5158  019F                     	;# 
  5159  019F                     	;# 
  5160  019F                     	;# 
  5161  019F                     	;# 
  5162  019F                     	;# 
  5163  020C                     	;# 
  5164  020D                     	;# 
  5165  020E                     	;# 
  5166  0211                     	;# 
  5167  0211                     	;# 
  5168  0212                     	;# 
  5169  0212                     	;# 
  5170  0213                     	;# 
  5171  0213                     	;# 
  5172  0214                     	;# 
  5173  0214                     	;# 
  5174  0215                     	;# 
  5175  0215                     	;# 
  5176  0215                     	;# 
  5177  0215                     	;# 
  5178  0216                     	;# 
  5179  0216                     	;# 
  5180  0217                     	;# 
  5181  0217                     	;# 
  5182  0219                     	;# 
  5183  021A                     	;# 
  5184  021B                     	;# 
  5185  021C                     	;# 
  5186  021D                     	;# 
  5187  021D                     	;# 
  5188  021E                     	;# 
  5189  021F                     	;# 
  5190  028C                     	;# 
  5191  028D                     	;# 
  5192  028E                     	;# 
  5193  0291                     	;# 
  5194  0291                     	;# 
  5195  0292                     	;# 
  5196  0293                     	;# 
  5197  0294                     	;# 
  5198  0295                     	;# 
  5199  0295                     	;# 
  5200  0296                     	;# 
  5201  0297                     	;# 
  5202  0298                     	;# 
  5203  029F                     	;# 
  5204  030C                     	;# 
  5205  030D                     	;# 
  5206  030E                     	;# 
  5207  0311                     	;# 
  5208  0311                     	;# 
  5209  0312                     	;# 
  5210  0313                     	;# 
  5211  0314                     	;# 
  5212  0315                     	;# 
  5213  0315                     	;# 
  5214  0316                     	;# 
  5215  0317                     	;# 
  5216  0318                     	;# 
  5217  038C                     	;# 
  5218  038D                     	;# 
  5219  038E                     	;# 
  5220  0391                     	;# 
  5221  0392                     	;# 
  5222  0393                     	;# 
  5223  0394                     	;# 
  5224  0395                     	;# 
  5225  0396                     	;# 
  5226  0397                     	;# 
  5227  0398                     	;# 
  5228  0399                     	;# 
  5229  039A                     	;# 
  5230  039C                     	;# 
  5231  039D                     	;# 
  5232  039E                     	;# 
  5233  039F                     	;# 
  5234  0411                     	;# 
  5235  0411                     	;# 
  5236  0412                     	;# 
  5237  0413                     	;# 
  5238  0414                     	;# 
  5239  0415                     	;# 
  5240  0416                     	;# 
  5241  0417                     	;# 
  5242  0418                     	;# 
  5243  0418                     	;# 
  5244  0419                     	;# 
  5245  041A                     	;# 
  5246  041B                     	;# 
  5247  041C                     	;# 
  5248  041D                     	;# 
  5249  041E                     	;# 
  5250  041F                     	;# 
  5251  0498                     	;# 
  5252  0498                     	;# 
  5253  0499                     	;# 
  5254  049A                     	;# 
  5255  049B                     	;# 
  5256  049B                     	;# 
  5257  049C                     	;# 
  5258  049D                     	;# 
  5259  049E                     	;# 
  5260  049F                     	;# 
  5261  0617                     	;# 
  5262  0618                     	;# 
  5263  0619                     	;# 
  5264  0619                     	;# 
  5265  061A                     	;# 
  5266  061B                     	;# 
  5267  061C                     	;# 
  5268  061C                     	;# 
  5269  061F                     	;# 
  5270  0691                     	;# 
  5271  0692                     	;# 
  5272  0693                     	;# 
  5273  0694                     	;# 
  5274  0695                     	;# 
  5275  0696                     	;# 
  5276  0697                     	;# 
  5277  0698                     	;# 
  5278  0699                     	;# 
  5279  0711                     	;# 
  5280  0712                     	;# 
  5281  0713                     	;# 
  5282  0714                     	;# 
  5283  0715                     	;# 
  5284  0716                     	;# 
  5285  0717                     	;# 
  5286  0718                     	;# 
  5287  0719                     	;# 
  5288  0891                     	;# 
  5289  0891                     	;# 
  5290  0891                     	;# 
  5291  0891                     	;# 
  5292  0891                     	;# 
  5293  0891                     	;# 
  5294  0892                     	;# 
  5295  0892                     	;# 
  5296  0892                     	;# 
  5297  0893                     	;# 
  5298  0893                     	;# 
  5299  0893                     	;# 
  5300  0893                     	;# 
  5301  0893                     	;# 
  5302  0893                     	;# 
  5303  0894                     	;# 
  5304  0894                     	;# 
  5305  0894                     	;# 
  5306  0895                     	;# 
  5307  0895                     	;# 
  5308  0895                     	;# 
  5309  0896                     	;# 
  5310  0896                     	;# 
  5311  0896                     	;# 
  5312  089B                     	;# 
  5313  0911                     	;# 
  5314  0912                     	;# 
  5315  0913                     	;# 
  5316  0914                     	;# 
  5317  0915                     	;# 
  5318  0916                     	;# 
  5319  0918                     	;# 
  5320  0919                     	;# 
  5321  091A                     	;# 
  5322  091B                     	;# 
  5323  091C                     	;# 
  5324  091D                     	;# 
  5325  091E                     	;# 
  5326  091F                     	;# 
  5327  0E0F                     	;# 
  5328  0E10                     	;# 
  5329  0E11                     	;# 
  5330  0E12                     	;# 
  5331  0E13                     	;# 
  5332  0E14                     	;# 
  5333  0E15                     	;# 
  5334  0E16                     	;# 
  5335  0E17                     	;# 
  5336  0E18                     	;# 
  5337  0E19                     	;# 
  5338  0E1A                     	;# 
  5339  0E1B                     	;# 
  5340  0E1C                     	;# 
  5341  0E1D                     	;# 
  5342  0E1E                     	;# 
  5343  0E1F                     	;# 
  5344  0E20                     	;# 
  5345  0E21                     	;# 
  5346  0E22                     	;# 
  5347  0E24                     	;# 
  5348  0E25                     	;# 
  5349  0E28                     	;# 
  5350  0E29                     	;# 
  5351  0E2A                     	;# 
  5352  0E2B                     	;# 
  5353  0E2C                     	;# 
  5354  0E2D                     	;# 
  5355  0E2E                     	;# 
  5356  0E2F                     	;# 
  5357  0E90                     	;# 
  5358  0E91                     	;# 
  5359  0E92                     	;# 
  5360  0E94                     	;# 
  5361  0E95                     	;# 
  5362  0E9C                     	;# 
  5363  0E9D                     	;# 
  5364  0E9E                     	;# 
  5365  0E9F                     	;# 
  5366  0EA0                     	;# 
  5367  0EA1                     	;# 
  5368  0EA2                     	;# 
  5369  0EA3                     	;# 
  5370  0EA4                     	;# 
  5371  0EA5                     	;# 
  5372  0EA6                     	;# 
  5373  0EA7                     	;# 
  5374  0F0F                     	;# 
  5375  0F10                     	;# 
  5376  0F11                     	;# 
  5377  0F12                     	;# 
  5378  0F13                     	;# 
  5379  0F14                     	;# 
  5380  0F15                     	;# 
  5381  0F16                     	;# 
  5382  0F17                     	;# 
  5383  0F18                     	;# 
  5384  0F19                     	;# 
  5385  0F1A                     	;# 
  5386  0F1B                     	;# 
  5387  0F1C                     	;# 
  5388  0F1D                     	;# 
  5389  0F1E                     	;# 
  5390  0F1F                     	;# 
  5391  0F20                     	;# 
  5392  0F21                     	;# 
  5393  0F22                     	;# 
  5394  0F23                     	;# 
  5395  0F24                     	;# 
  5396  0F25                     	;# 
  5397  0F26                     	;# 
  5398  0F27                     	;# 
  5399  0F28                     	;# 
  5400  0F29                     	;# 
  5401  0F2A                     	;# 
  5402  0F2B                     	;# 
  5403  0F2C                     	;# 
  5404  0F2D                     	;# 
  5405  0F2E                     	;# 
  5406  0F2F                     	;# 
  5407  0F30                     	;# 
  5408  0F31                     	;# 
  5409  0F32                     	;# 
  5410  0F33                     	;# 
  5411  0F34                     	;# 
  5412  0F35                     	;# 
  5413  0F36                     	;# 
  5414  0F37                     	;# 
  5415  0FE4                     	;# 
  5416  0FE5                     	;# 
  5417  0FE6                     	;# 
  5418  0FE7                     	;# 
  5419  0FE8                     	;# 
  5420  0FE9                     	;# 
  5421  0FEA                     	;# 
  5422  0FEB                     	;# 
  5423  0FED                     	;# 
  5424  0FEE                     	;# 
  5425  0FEF                     	;# 
  5426  0000                     	;# 
  5427  0001                     	;# 
  5428  0002                     	;# 
  5429  0003                     	;# 
  5430  0004                     	;# 
  5431  0005                     	;# 
  5432  0006                     	;# 
  5433  0007                     	;# 
  5434  0008                     	;# 
  5435  0009                     	;# 
  5436  000A                     	;# 
  5437  000B                     	;# 
  5438  000C                     	;# 
  5439  000D                     	;# 
  5440  000E                     	;# 
  5441  0010                     	;# 
  5442  0011                     	;# 
  5443  0012                     	;# 
  5444  0013                     	;# 
  5445  0014                     	;# 
  5446  0015                     	;# 
  5447  0015                     	;# 
  5448  0016                     	;# 
  5449  0016                     	;# 
  5450  0017                     	;# 
  5451  0018                     	;# 
  5452  0019                     	;# 
  5453  0019                     	;# 
  5454  001A                     	;# 
  5455  001B                     	;# 
  5456  001C                     	;# 
  5457  001D                     	;# 
  5458  001E                     	;# 
  5459  001F                     	;# 
  5460  008C                     	;# 
  5461  008D                     	;# 
  5462  008E                     	;# 
  5463  0090                     	;# 
  5464  0091                     	;# 
  5465  0092                     	;# 
  5466  0093                     	;# 
  5467  0094                     	;# 
  5468  0097                     	;# 
  5469  009B                     	;# 
  5470  009B                     	;# 
  5471  009C                     	;# 
  5472  009D                     	;# 
  5473  009E                     	;# 
  5474  009F                     	;# 
  5475  010C                     	;# 
  5476  010D                     	;# 
  5477  010E                     	;# 
  5478  0111                     	;# 
  5479  0112                     	;# 
  5480  0113                     	;# 
  5481  0114                     	;# 
  5482  0115                     	;# 
  5483  0116                     	;# 
  5484  0117                     	;# 
  5485  0118                     	;# 
  5486  0119                     	;# 
  5487  018C                     	;# 
  5488  018D                     	;# 
  5489  018E                     	;# 
  5490  0197                     	;# 
  5491  0199                     	;# 
  5492  0199                     	;# 
  5493  0199                     	;# 
  5494  019A                     	;# 
  5495  019A                     	;# 
  5496  019A                     	;# 
  5497  019B                     	;# 
  5498  019B                     	;# 
  5499  019B                     	;# 
  5500  019B                     	;# 
  5501  019B                     	;# 
  5502  019C                     	;# 
  5503  019C                     	;# 
  5504  019C                     	;# 
  5505  019D                     	;# 
  5506  019D                     	;# 
  5507  019D                     	;# 
  5508  019E                     	;# 
  5509  019E                     	;# 
  5510  019E                     	;# 
  5511  019F                     	;# 
  5512  019F                     	;# 
  5513  019F                     	;# 
  5514  019F                     	;# 
  5515  019F                     	;# 
  5516  020C                     	;# 
  5517  020D                     	;# 
  5518  020E                     	;# 
  5519  0211                     	;# 
  5520  0211                     	;# 
  5521  0212                     	;# 
  5522  0212                     	;# 
  5523  0213                     	;# 
  5524  0213                     	;# 
  5525  0214                     	;# 
  5526  0214                     	;# 
  5527  0215                     	;# 
  5528  0215                     	;# 
  5529  0215                     	;# 
  5530  0215                     	;# 
  5531  0216                     	;# 
  5532  0216                     	;# 
  5533  0217                     	;# 
  5534  0217                     	;# 
  5535  0219                     	;# 
  5536  021A                     	;# 
  5537  021B                     	;# 
  5538  021C                     	;# 
  5539  021D                     	;# 
  5540  021D                     	;# 
  5541  021E                     	;# 
  5542  021F                     	;# 
  5543  028C                     	;# 
  5544  028D                     	;# 
  5545  028E                     	;# 
  5546  0291                     	;# 
  5547  0291                     	;# 
  5548  0292                     	;# 
  5549  0293                     	;# 
  5550  0294                     	;# 
  5551  0295                     	;# 
  5552  0295                     	;# 
  5553  0296                     	;# 
  5554  0297                     	;# 
  5555  0298                     	;# 
  5556  029F                     	;# 
  5557  030C                     	;# 
  5558  030D                     	;# 
  5559  030E                     	;# 
  5560  0311                     	;# 
  5561  0311                     	;# 
  5562  0312                     	;# 
  5563  0313                     	;# 
  5564  0314                     	;# 
  5565  0315                     	;# 
  5566  0315                     	;# 
  5567  0316                     	;# 
  5568  0317                     	;# 
  5569  0318                     	;# 
  5570  038C                     	;# 
  5571  038D                     	;# 
  5572  038E                     	;# 
  5573  0391                     	;# 
  5574  0392                     	;# 
  5575  0393                     	;# 
  5576  0394                     	;# 
  5577  0395                     	;# 
  5578  0396                     	;# 
  5579  0397                     	;# 
  5580  0398                     	;# 
  5581  0399                     	;# 
  5582  039A                     	;# 
  5583  039C                     	;# 
  5584  039D                     	;# 
  5585  039E                     	;# 
  5586  039F                     	;# 
  5587  0411                     	;# 
  5588  0411                     	;# 
  5589  0412                     	;# 
  5590  0413                     	;# 
  5591  0414                     	;# 
  5592  0415                     	;# 
  5593  0416                     	;# 
  5594  0417                     	;# 
  5595  0418                     	;# 
  5596  0418                     	;# 
  5597  0419                     	;# 
  5598  041A                     	;# 
  5599  041B                     	;# 
  5600  041C                     	;# 
  5601  041D                     	;# 
  5602  041E                     	;# 
  5603  041F                     	;# 
  5604  0498                     	;# 
  5605  0498                     	;# 
  5606  0499                     	;# 
  5607  049A                     	;# 
  5608  049B                     	;# 
  5609  049B                     	;# 
  5610  049C                     	;# 
  5611  049D                     	;# 
  5612  049E                     	;# 
  5613  049F                     	;# 
  5614  0617                     	;# 
  5615  0618                     	;# 
  5616  0619                     	;# 
  5617  0619                     	;# 
  5618  061A                     	;# 
  5619  061B                     	;# 
  5620  061C                     	;# 
  5621  061C                     	;# 
  5622  061F                     	;# 
  5623  0691                     	;# 
  5624  0692                     	;# 
  5625  0693                     	;# 
  5626  0694                     	;# 
  5627  0695                     	;# 
  5628  0696                     	;# 
  5629  0697                     	;# 
  5630  0698                     	;# 
  5631  0699                     	;# 
  5632  0711                     	;# 
  5633  0712                     	;# 
  5634  0713                     	;# 
  5635  0714                     	;# 
  5636  0715                     	;# 
  5637  0716                     	;# 
  5638  0717                     	;# 
  5639  0718                     	;# 
  5640  0719                     	;# 
  5641  0891                     	;# 
  5642  0891                     	;# 
  5643  0891                     	;# 
  5644  0891                     	;# 
  5645  0891                     	;# 
  5646  0891                     	;# 
  5647  0892                     	;# 
  5648  0892                     	;# 
  5649  0892                     	;# 
  5650  0893                     	;# 
  5651  0893                     	;# 
  5652  0893                     	;# 
  5653  0893                     	;# 
  5654  0893                     	;# 
  5655  0893                     	;# 
  5656  0894                     	;# 
  5657  0894                     	;# 
  5658  0894                     	;# 
  5659  0895                     	;# 
  5660  0895                     	;# 
  5661  0895                     	;# 
  5662  0896                     	;# 
  5663  0896                     	;# 
  5664  0896                     	;# 
  5665  089B                     	;# 
  5666  0911                     	;# 
  5667  0912                     	;# 
  5668  0913                     	;# 
  5669  0914                     	;# 
  5670  0915                     	;# 
  5671  0916                     	;# 
  5672  0918                     	;# 
  5673  0919                     	;# 
  5674  091A                     	;# 
  5675  091B                     	;# 
  5676  091C                     	;# 
  5677  091D                     	;# 
  5678  091E                     	;# 
  5679  091F                     	;# 
  5680  0E0F                     	;# 
  5681  0E10                     	;# 
  5682  0E11                     	;# 
  5683  0E12                     	;# 
  5684  0E13                     	;# 
  5685  0E14                     	;# 
  5686  0E15                     	;# 
  5687  0E16                     	;# 
  5688  0E17                     	;# 
  5689  0E18                     	;# 
  5690  0E19                     	;# 
  5691  0E1A                     	;# 
  5692  0E1B                     	;# 
  5693  0E1C                     	;# 
  5694  0E1D                     	;# 
  5695  0E1E                     	;# 
  5696  0E1F                     	;# 
  5697  0E20                     	;# 
  5698  0E21                     	;# 
  5699  0E22                     	;# 
  5700  0E24                     	;# 
  5701  0E25                     	;# 
  5702  0E28                     	;# 
  5703  0E29                     	;# 
  5704  0E2A                     	;# 
  5705  0E2B                     	;# 
  5706  0E2C                     	;# 
  5707  0E2D                     	;# 
  5708  0E2E                     	;# 
  5709  0E2F                     	;# 
  5710  0E90                     	;# 
  5711  0E91                     	;# 
  5712  0E92                     	;# 
  5713  0E94                     	;# 
  5714  0E95                     	;# 
  5715  0E9C                     	;# 
  5716  0E9D                     	;# 
  5717  0E9E                     	;# 
  5718  0E9F                     	;# 
  5719  0EA0                     	;# 
  5720  0EA1                     	;# 
  5721  0EA2                     	;# 
  5722  0EA3                     	;# 
  5723  0EA4                     	;# 
  5724  0EA5                     	;# 
  5725  0EA6                     	;# 
  5726  0EA7                     	;# 
  5727  0F0F                     	;# 
  5728  0F10                     	;# 
  5729  0F11                     	;# 
  5730  0F12                     	;# 
  5731  0F13                     	;# 
  5732  0F14                     	;# 
  5733  0F15                     	;# 
  5734  0F16                     	;# 
  5735  0F17                     	;# 
  5736  0F18                     	;# 
  5737  0F19                     	;# 
  5738  0F1A                     	;# 
  5739  0F1B                     	;# 
  5740  0F1C                     	;# 
  5741  0F1D                     	;# 
  5742  0F1E                     	;# 
  5743  0F1F                     	;# 
  5744  0F20                     	;# 
  5745  0F21                     	;# 
  5746  0F22                     	;# 
  5747  0F23                     	;# 
  5748  0F24                     	;# 
  5749  0F25                     	;# 
  5750  0F26                     	;# 
  5751  0F27                     	;# 
  5752  0F28                     	;# 
  5753  0F29                     	;# 
  5754  0F2A                     	;# 
  5755  0F2B                     	;# 
  5756  0F2C                     	;# 
  5757  0F2D                     	;# 
  5758  0F2E                     	;# 
  5759  0F2F                     	;# 
  5760  0F30                     	;# 
  5761  0F31                     	;# 
  5762  0F32                     	;# 
  5763  0F33                     	;# 
  5764  0F34                     	;# 
  5765  0F35                     	;# 
  5766  0F36                     	;# 
  5767  0F37                     	;# 
  5768  0FE4                     	;# 
  5769  0FE5                     	;# 
  5770  0FE6                     	;# 
  5771  0FE7                     	;# 
  5772  0FE8                     	;# 
  5773  0FE9                     	;# 
  5774  0FEA                     	;# 
  5775  0FEB                     	;# 
  5776  0FED                     	;# 
  5777  0FEE                     	;# 
  5778  0FEF                     	;# 
  5779  0000                     	;# 
  5780  0001                     	;# 
  5781  0002                     	;# 
  5782  0003                     	;# 
  5783  0004                     	;# 
  5784  0005                     	;# 
  5785  0006                     	;# 
  5786  0007                     	;# 
  5787  0008                     	;# 
  5788  0009                     	;# 
  5789  000A                     	;# 
  5790  000B                     	;# 
  5791  000C                     	;# 
  5792  000D                     	;# 
  5793  000E                     	;# 
  5794  0010                     	;# 
  5795  0011                     	;# 
  5796  0012                     	;# 
  5797  0013                     	;# 
  5798  0014                     	;# 
  5799  0015                     	;# 
  5800  0015                     	;# 
  5801  0016                     	;# 
  5802  0016                     	;# 
  5803  0017                     	;# 
  5804  0018                     	;# 
  5805  0019                     	;# 
  5806  0019                     	;# 
  5807  001A                     	;# 
  5808  001B                     	;# 
  5809  001C                     	;# 
  5810  001D                     	;# 
  5811  001E                     	;# 
  5812  001F                     	;# 
  5813  008C                     	;# 
  5814  008D                     	;# 
  5815  008E                     	;# 
  5816  0090                     	;# 
  5817  0091                     	;# 
  5818  0092                     	;# 
  5819  0093                     	;# 
  5820  0094                     	;# 
  5821  0097                     	;# 
  5822  009B                     	;# 
  5823  009B                     	;# 
  5824  009C                     	;# 
  5825  009D                     	;# 
  5826  009E                     	;# 
  5827  009F                     	;# 
  5828  010C                     	;# 
  5829  010D                     	;# 
  5830  010E                     	;# 
  5831  0111                     	;# 
  5832  0112                     	;# 
  5833  0113                     	;# 
  5834  0114                     	;# 
  5835  0115                     	;# 
  5836  0116                     	;# 
  5837  0117                     	;# 
  5838  0118                     	;# 
  5839  0119                     	;# 
  5840  018C                     	;# 
  5841  018D                     	;# 
  5842  018E                     	;# 
  5843  0197                     	;# 
  5844  0199                     	;# 
  5845  0199                     	;# 
  5846  0199                     	;# 
  5847  019A                     	;# 
  5848  019A                     	;# 
  5849  019A                     	;# 
  5850  019B                     	;# 
  5851  019B                     	;# 
  5852  019B                     	;# 
  5853  019B                     	;# 
  5854  019B                     	;# 
  5855  019C                     	;# 
  5856  019C                     	;# 
  5857  019C                     	;# 
  5858  019D                     	;# 
  5859  019D                     	;# 
  5860  019D                     	;# 
  5861  019E                     	;# 
  5862  019E                     	;# 
  5863  019E                     	;# 
  5864  019F                     	;# 
  5865  019F                     	;# 
  5866  019F                     	;# 
  5867  019F                     	;# 
  5868  019F                     	;# 
  5869  020C                     	;# 
  5870  020D                     	;# 
  5871  020E                     	;# 
  5872  0211                     	;# 
  5873  0211                     	;# 
  5874  0212                     	;# 
  5875  0212                     	;# 
  5876  0213                     	;# 
  5877  0213                     	;# 
  5878  0214                     	;# 
  5879  0214                     	;# 
  5880  0215                     	;# 
  5881  0215                     	;# 
  5882  0215                     	;# 
  5883  0215                     	;# 
  5884  0216                     	;# 
  5885  0216                     	;# 
  5886  0217                     	;# 
  5887  0217                     	;# 
  5888  0219                     	;# 
  5889  021A                     	;# 
  5890  021B                     	;# 
  5891  021C                     	;# 
  5892  021D                     	;# 
  5893  021D                     	;# 
  5894  021E                     	;# 
  5895  021F                     	;# 
  5896  028C                     	;# 
  5897  028D                     	;# 
  5898  028E                     	;# 
  5899  0291                     	;# 
  5900  0291                     	;# 
  5901  0292                     	;# 
  5902  0293                     	;# 
  5903  0294                     	;# 
  5904  0295                     	;# 
  5905  0295                     	;# 
  5906  0296                     	;# 
  5907  0297                     	;# 
  5908  0298                     	;# 
  5909  029F                     	;# 
  5910  030C                     	;# 
  5911  030D                     	;# 
  5912  030E                     	;# 
  5913  0311                     	;# 
  5914  0311                     	;# 
  5915  0312                     	;# 
  5916  0313                     	;# 
  5917  0314                     	;# 
  5918  0315                     	;# 
  5919  0315                     	;# 
  5920  0316                     	;# 
  5921  0317                     	;# 
  5922  0318                     	;# 
  5923  038C                     	;# 
  5924  038D                     	;# 
  5925  038E                     	;# 
  5926  0391                     	;# 
  5927  0392                     	;# 
  5928  0393                     	;# 
  5929  0394                     	;# 
  5930  0395                     	;# 
  5931  0396                     	;# 
  5932  0397                     	;# 
  5933  0398                     	;# 
  5934  0399                     	;# 
  5935  039A                     	;# 
  5936  039C                     	;# 
  5937  039D                     	;# 
  5938  039E                     	;# 
  5939  039F                     	;# 
  5940  0411                     	;# 
  5941  0411                     	;# 
  5942  0412                     	;# 
  5943  0413                     	;# 
  5944  0414                     	;# 
  5945  0415                     	;# 
  5946  0416                     	;# 
  5947  0417                     	;# 
  5948  0418                     	;# 
  5949  0418                     	;# 
  5950  0419                     	;# 
  5951  041A                     	;# 
  5952  041B                     	;# 
  5953  041C                     	;# 
  5954  041D                     	;# 
  5955  041E                     	;# 
  5956  041F                     	;# 
  5957  0498                     	;# 
  5958  0498                     	;# 
  5959  0499                     	;# 
  5960  049A                     	;# 
  5961  049B                     	;# 
  5962  049B                     	;# 
  5963  049C                     	;# 
  5964  049D                     	;# 
  5965  049E                     	;# 
  5966  049F                     	;# 
  5967  0617                     	;# 
  5968  0618                     	;# 
  5969  0619                     	;# 
  5970  0619                     	;# 
  5971  061A                     	;# 
  5972  061B                     	;# 
  5973  061C                     	;# 
  5974  061C                     	;# 
  5975  061F                     	;# 
  5976  0691                     	;# 
  5977  0692                     	;# 
  5978  0693                     	;# 
  5979  0694                     	;# 
  5980  0695                     	;# 
  5981  0696                     	;# 
  5982  0697                     	;# 
  5983  0698                     	;# 
  5984  0699                     	;# 
  5985  0711                     	;# 
  5986  0712                     	;# 
  5987  0713                     	;# 
  5988  0714                     	;# 
  5989  0715                     	;# 
  5990  0716                     	;# 
  5991  0717                     	;# 
  5992  0718                     	;# 
  5993  0719                     	;# 
  5994  0891                     	;# 
  5995  0891                     	;# 
  5996  0891                     	;# 
  5997  0891                     	;# 
  5998  0891                     	;# 
  5999  0891                     	;# 
  6000  0892                     	;# 
  6001  0892                     	;# 
  6002  0892                     	;# 
  6003  0893                     	;# 
  6004  0893                     	;# 
  6005  0893                     	;# 
  6006  0893                     	;# 
  6007  0893                     	;# 
  6008  0893                     	;# 
  6009  0894                     	;# 
  6010  0894                     	;# 
  6011  0894                     	;# 
  6012  0895                     	;# 
  6013  0895                     	;# 
  6014  0895                     	;# 
  6015  0896                     	;# 
  6016  0896                     	;# 
  6017  0896                     	;# 
  6018  089B                     	;# 
  6019  0911                     	;# 
  6020  0912                     	;# 
  6021  0913                     	;# 
  6022  0914                     	;# 
  6023  0915                     	;# 
  6024  0916                     	;# 
  6025  0918                     	;# 
  6026  0919                     	;# 
  6027  091A                     	;# 
  6028  091B                     	;# 
  6029  091C                     	;# 
  6030  091D                     	;# 
  6031  091E                     	;# 
  6032  091F                     	;# 
  6033  0E0F                     	;# 
  6034  0E10                     	;# 
  6035  0E11                     	;# 
  6036  0E12                     	;# 
  6037  0E13                     	;# 
  6038  0E14                     	;# 
  6039  0E15                     	;# 
  6040  0E16                     	;# 
  6041  0E17                     	;# 
  6042  0E18                     	;# 
  6043  0E19                     	;# 
  6044  0E1A                     	;# 
  6045  0E1B                     	;# 
  6046  0E1C                     	;# 
  6047  0E1D                     	;# 
  6048  0E1E                     	;# 
  6049  0E1F                     	;# 
  6050  0E20                     	;# 
  6051  0E21                     	;# 
  6052  0E22                     	;# 
  6053  0E24                     	;# 
  6054  0E25                     	;# 
  6055  0E28                     	;# 
  6056  0E29                     	;# 
  6057  0E2A                     	;# 
  6058  0E2B                     	;# 
  6059  0E2C                     	;# 
  6060  0E2D                     	;# 
  6061  0E2E                     	;# 
  6062  0E2F                     	;# 
  6063  0E90                     	;# 
  6064  0E91                     	;# 
  6065  0E92                     	;# 
  6066  0E94                     	;# 
  6067  0E95                     	;# 
  6068  0E9C                     	;# 
  6069  0E9D                     	;# 
  6070  0E9E                     	;# 
  6071  0E9F                     	;# 
  6072  0EA0                     	;# 
  6073  0EA1                     	;# 
  6074  0EA2                     	;# 
  6075  0EA3                     	;# 
  6076  0EA4                     	;# 
  6077  0EA5                     	;# 
  6078  0EA6                     	;# 
  6079  0EA7                     	;# 
  6080  0F0F                     	;# 
  6081  0F10                     	;# 
  6082  0F11                     	;# 
  6083  0F12                     	;# 
  6084  0F13                     	;# 
  6085  0F14                     	;# 
  6086  0F15                     	;# 
  6087  0F16                     	;# 
  6088  0F17                     	;# 
  6089  0F18                     	;# 
  6090  0F19                     	;# 
  6091  0F1A                     	;# 
  6092  0F1B                     	;# 
  6093  0F1C                     	;# 
  6094  0F1D                     	;# 
  6095  0F1E                     	;# 
  6096  0F1F                     	;# 
  6097  0F20                     	;# 
  6098  0F21                     	;# 
  6099  0F22                     	;# 
  6100  0F23                     	;# 
  6101  0F24                     	;# 
  6102  0F25                     	;# 
  6103  0F26                     	;# 
  6104  0F27                     	;# 
  6105  0F28                     	;# 
  6106  0F29                     	;# 
  6107  0F2A                     	;# 
  6108  0F2B                     	;# 
  6109  0F2C                     	;# 
  6110  0F2D                     	;# 
  6111  0F2E                     	;# 
  6112  0F2F                     	;# 
  6113  0F30                     	;# 
  6114  0F31                     	;# 
  6115  0F32                     	;# 
  6116  0F33                     	;# 
  6117  0F34                     	;# 
  6118  0F35                     	;# 
  6119  0F36                     	;# 
  6120  0F37                     	;# 
  6121  0FE4                     	;# 
  6122  0FE5                     	;# 
  6123  0FE6                     	;# 
  6124  0FE7                     	;# 
  6125  0FE8                     	;# 
  6126  0FE9                     	;# 
  6127  0FEA                     	;# 
  6128  0FEB                     	;# 
  6129  0FED                     	;# 
  6130  0FEE                     	;# 
  6131  0FEF                     	;# 
  6132  0000                     	;# 
  6133  0001                     	;# 
  6134  0002                     	;# 
  6135  0003                     	;# 
  6136  0004                     	;# 
  6137  0005                     	;# 
  6138  0006                     	;# 
  6139  0007                     	;# 
  6140  0008                     	;# 
  6141  0009                     	;# 
  6142  000A                     	;# 
  6143  000B                     	;# 
  6144  000C                     	;# 
  6145  000D                     	;# 
  6146  000E                     	;# 
  6147  0010                     	;# 
  6148  0011                     	;# 
  6149  0012                     	;# 
  6150  0013                     	;# 
  6151  0014                     	;# 
  6152  0015                     	;# 
  6153  0015                     	;# 
  6154  0016                     	;# 
  6155  0016                     	;# 
  6156  0017                     	;# 
  6157  0018                     	;# 
  6158  0019                     	;# 
  6159  0019                     	;# 
  6160  001A                     	;# 
  6161  001B                     	;# 
  6162  001C                     	;# 
  6163  001D                     	;# 
  6164  001E                     	;# 
  6165  001F                     	;# 
  6166  008C                     	;# 
  6167  008D                     	;# 
  6168  008E                     	;# 
  6169  0090                     	;# 
  6170  0091                     	;# 
  6171  0092                     	;# 
  6172  0093                     	;# 
  6173  0094                     	;# 
  6174  0097                     	;# 
  6175  009B                     	;# 
  6176  009B                     	;# 
  6177  009C                     	;# 
  6178  009D                     	;# 
  6179  009E                     	;# 
  6180  009F                     	;# 
  6181  010C                     	;# 
  6182  010D                     	;# 
  6183  010E                     	;# 
  6184  0111                     	;# 
  6185  0112                     	;# 
  6186  0113                     	;# 
  6187  0114                     	;# 
  6188  0115                     	;# 
  6189  0116                     	;# 
  6190  0117                     	;# 
  6191  0118                     	;# 
  6192  0119                     	;# 
  6193  018C                     	;# 
  6194  018D                     	;# 
  6195  018E                     	;# 
  6196  0197                     	;# 
  6197  0199                     	;# 
  6198  0199                     	;# 
  6199  0199                     	;# 
  6200  019A                     	;# 
  6201  019A                     	;# 
  6202  019A                     	;# 
  6203  019B                     	;# 
  6204  019B                     	;# 
  6205  019B                     	;# 
  6206  019B                     	;# 
  6207  019B                     	;# 
  6208  019C                     	;# 
  6209  019C                     	;# 
  6210  019C                     	;# 
  6211  019D                     	;# 
  6212  019D                     	;# 
  6213  019D                     	;# 
  6214  019E                     	;# 
  6215  019E                     	;# 
  6216  019E                     	;# 
  6217  019F                     	;# 
  6218  019F                     	;# 
  6219  019F                     	;# 
  6220  019F                     	;# 
  6221  019F                     	;# 
  6222  020C                     	;# 
  6223  020D                     	;# 
  6224  020E                     	;# 
  6225  0211                     	;# 
  6226  0211                     	;# 
  6227  0212                     	;# 
  6228  0212                     	;# 
  6229  0213                     	;# 
  6230  0213                     	;# 
  6231  0214                     	;# 
  6232  0214                     	;# 
  6233  0215                     	;# 
  6234  0215                     	;# 
  6235  0215                     	;# 
  6236  0215                     	;# 
  6237  0216                     	;# 
  6238  0216                     	;# 
  6239  0217                     	;# 
  6240  0217                     	;# 
  6241  0219                     	;# 
  6242  021A                     	;# 
  6243  021B                     	;# 
  6244  021C                     	;# 
  6245  021D                     	;# 
  6246  021D                     	;# 
  6247  021E                     	;# 
  6248  021F                     	;# 
  6249  028C                     	;# 
  6250  028D                     	;# 
  6251  028E                     	;# 
  6252  0291                     	;# 
  6253  0291                     	;# 
  6254  0292                     	;# 
  6255  0293                     	;# 
  6256  0294                     	;# 
  6257  0295                     	;# 
  6258  0295                     	;# 
  6259  0296                     	;# 
  6260  0297                     	;# 
  6261  0298                     	;# 
  6262  029F                     	;# 
  6263  030C                     	;# 
  6264  030D                     	;# 
  6265  030E                     	;# 
  6266  0311                     	;# 
  6267  0311                     	;# 
  6268  0312                     	;# 
  6269  0313                     	;# 
  6270  0314                     	;# 
  6271  0315                     	;# 
  6272  0315                     	;# 
  6273  0316                     	;# 
  6274  0317                     	;# 
  6275  0318                     	;# 
  6276  038C                     	;# 
  6277  038D                     	;# 
  6278  038E                     	;# 
  6279  0391                     	;# 
  6280  0392                     	;# 
  6281  0393                     	;# 
  6282  0394                     	;# 
  6283  0395                     	;# 
  6284  0396                     	;# 
  6285  0397                     	;# 
  6286  0398                     	;# 
  6287  0399                     	;# 
  6288  039A                     	;# 
  6289  039C                     	;# 
  6290  039D                     	;# 
  6291  039E                     	;# 
  6292  039F                     	;# 
  6293  0411                     	;# 
  6294  0411                     	;# 
  6295  0412                     	;# 
  6296  0413                     	;# 
  6297  0414                     	;# 
  6298  0415                     	;# 
  6299  0416                     	;# 
  6300  0417                     	;# 
  6301  0418                     	;# 
  6302  0418                     	;# 
  6303  0419                     	;# 
  6304  041A                     	;# 
  6305  041B                     	;# 
  6306  041C                     	;# 
  6307  041D                     	;# 
  6308  041E                     	;# 
  6309  041F                     	;# 
  6310  0498                     	;# 
  6311  0498                     	;# 
  6312  0499                     	;# 
  6313  049A                     	;# 
  6314  049B                     	;# 
  6315  049B                     	;# 
  6316  049C                     	;# 
  6317  049D                     	;# 
  6318  049E                     	;# 
  6319  049F                     	;# 
  6320  0617                     	;# 
  6321  0618                     	;# 
  6322  0619                     	;# 
  6323  0619                     	;# 
  6324  061A                     	;# 
  6325  061B                     	;# 
  6326  061C                     	;# 
  6327  061C                     	;# 
  6328  061F                     	;# 
  6329  0691                     	;# 
  6330  0692                     	;# 
  6331  0693                     	;# 
  6332  0694                     	;# 
  6333  0695                     	;# 
  6334  0696                     	;# 
  6335  0697                     	;# 
  6336  0698                     	;# 
  6337  0699                     	;# 
  6338  0711                     	;# 
  6339  0712                     	;# 
  6340  0713                     	;# 
  6341  0714                     	;# 
  6342  0715                     	;# 
  6343  0716                     	;# 
  6344  0717                     	;# 
  6345  0718                     	;# 
  6346  0719                     	;# 
  6347  0891                     	;# 
  6348  0891                     	;# 
  6349  0891                     	;# 
  6350  0891                     	;# 
  6351  0891                     	;# 
  6352  0891                     	;# 
  6353  0892                     	;# 
  6354  0892                     	;# 
  6355  0892                     	;# 
  6356  0893                     	;# 
  6357  0893                     	;# 
  6358  0893                     	;# 
  6359  0893                     	;# 
  6360  0893                     	;# 
  6361  0893                     	;# 
  6362  0894                     	;# 
  6363  0894                     	;# 
  6364  0894                     	;# 
  6365  0895                     	;# 
  6366  0895                     	;# 
  6367  0895                     	;# 
  6368  0896                     	;# 
  6369  0896                     	;# 
  6370  0896                     	;# 
  6371  089B                     	;# 
  6372  0911                     	;# 
  6373  0912                     	;# 
  6374  0913                     	;# 
  6375  0914                     	;# 
  6376  0915                     	;# 
  6377  0916                     	;# 
  6378  0918                     	;# 
  6379  0919                     	;# 
  6380  091A                     	;# 
  6381  091B                     	;# 
  6382  091C                     	;# 
  6383  091D                     	;# 
  6384  091E                     	;# 
  6385  091F                     	;# 
  6386  0E0F                     	;# 
  6387  0E10                     	;# 
  6388  0E11                     	;# 
  6389  0E12                     	;# 
  6390  0E13                     	;# 
  6391  0E14                     	;# 
  6392  0E15                     	;# 
  6393  0E16                     	;# 
  6394  0E17                     	;# 
  6395  0E18                     	;# 
  6396  0E19                     	;# 
  6397  0E1A                     	;# 
  6398  0E1B                     	;# 
  6399  0E1C                     	;# 
  6400  0E1D                     	;# 
  6401  0E1E                     	;# 
  6402  0E1F                     	;# 
  6403  0E20                     	;# 
  6404  0E21                     	;# 
  6405  0E22                     	;# 
  6406  0E24                     	;# 
  6407  0E25                     	;# 
  6408  0E28                     	;# 
  6409  0E29                     	;# 
  6410  0E2A                     	;# 
  6411  0E2B                     	;# 
  6412  0E2C                     	;# 
  6413  0E2D                     	;# 
  6414  0E2E                     	;# 
  6415  0E2F                     	;# 
  6416  0E90                     	;# 
  6417  0E91                     	;# 
  6418  0E92                     	;# 
  6419  0E94                     	;# 
  6420  0E95                     	;# 
  6421  0E9C                     	;# 
  6422  0E9D                     	;# 
  6423  0E9E                     	;# 
  6424  0E9F                     	;# 
  6425  0EA0                     	;# 
  6426  0EA1                     	;# 
  6427  0EA2                     	;# 
  6428  0EA3                     	;# 
  6429  0EA4                     	;# 
  6430  0EA5                     	;# 
  6431  0EA6                     	;# 
  6432  0EA7                     	;# 
  6433  0F0F                     	;# 
  6434  0F10                     	;# 
  6435  0F11                     	;# 
  6436  0F12                     	;# 
  6437  0F13                     	;# 
  6438  0F14                     	;# 
  6439  0F15                     	;# 
  6440  0F16                     	;# 
  6441  0F17                     	;# 
  6442  0F18                     	;# 
  6443  0F19                     	;# 
  6444  0F1A                     	;# 
  6445  0F1B                     	;# 
  6446  0F1C                     	;# 
  6447  0F1D                     	;# 
  6448  0F1E                     	;# 
  6449  0F1F                     	;# 
  6450  0F20                     	;# 
  6451  0F21                     	;# 
  6452  0F22                     	;# 
  6453  0F23                     	;# 
  6454  0F24                     	;# 
  6455  0F25                     	;# 
  6456  0F26                     	;# 
  6457  0F27                     	;# 
  6458  0F28                     	;# 
  6459  0F29                     	;# 
  6460  0F2A                     	;# 
  6461  0F2B                     	;# 
  6462  0F2C                     	;# 
  6463  0F2D                     	;# 
  6464  0F2E                     	;# 
  6465  0F2F                     	;# 
  6466  0F30                     	;# 
  6467  0F31                     	;# 
  6468  0F32                     	;# 
  6469  0F33                     	;# 
  6470  0F34                     	;# 
  6471  0F35                     	;# 
  6472  0F36                     	;# 
  6473  0F37                     	;# 
  6474  0FE4                     	;# 
  6475  0FE5                     	;# 
  6476  0FE6                     	;# 
  6477  0FE7                     	;# 
  6478  0FE8                     	;# 
  6479  0FE9                     	;# 
  6480  0FEA                     	;# 
  6481  0FEB                     	;# 
  6482  0FED                     	;# 
  6483  0FEE                     	;# 
  6484  0FEF                     	;# 
  6485  0000                     	;# 
  6486  0001                     	;# 
  6487  0002                     	;# 
  6488  0003                     	;# 
  6489  0004                     	;# 
  6490  0005                     	;# 
  6491  0006                     	;# 
  6492  0007                     	;# 
  6493  0008                     	;# 
  6494  0009                     	;# 
  6495  000A                     	;# 
  6496  000B                     	;# 
  6497  000C                     	;# 
  6498  000D                     	;# 
  6499  000E                     	;# 
  6500  0010                     	;# 
  6501  0011                     	;# 
  6502  0012                     	;# 
  6503  0013                     	;# 
  6504  0014                     	;# 
  6505  0015                     	;# 
  6506  0015                     	;# 
  6507  0016                     	;# 
  6508  0016                     	;# 
  6509  0017                     	;# 
  6510  0018                     	;# 
  6511  0019                     	;# 
  6512  0019                     	;# 
  6513  001A                     	;# 
  6514  001B                     	;# 
  6515  001C                     	;# 
  6516  001D                     	;# 
  6517  001E                     	;# 
  6518  001F                     	;# 
  6519  008C                     	;# 
  6520  008D                     	;# 
  6521  008E                     	;# 
  6522  0090                     	;# 
  6523  0091                     	;# 
  6524  0092                     	;# 
  6525  0093                     	;# 
  6526  0094                     	;# 
  6527  0097                     	;# 
  6528  009B                     	;# 
  6529  009B                     	;# 
  6530  009C                     	;# 
  6531  009D                     	;# 
  6532  009E                     	;# 
  6533  009F                     	;# 
  6534  010C                     	;# 
  6535  010D                     	;# 
  6536  010E                     	;# 
  6537  0111                     	;# 
  6538  0112                     	;# 
  6539  0113                     	;# 
  6540  0114                     	;# 
  6541  0115                     	;# 
  6542  0116                     	;# 
  6543  0117                     	;# 
  6544  0118                     	;# 
  6545  0119                     	;# 
  6546  018C                     	;# 
  6547  018D                     	;# 
  6548  018E                     	;# 
  6549  0197                     	;# 
  6550  0199                     	;# 
  6551  0199                     	;# 
  6552  0199                     	;# 
  6553  019A                     	;# 
  6554  019A                     	;# 
  6555  019A                     	;# 
  6556  019B                     	;# 
  6557  019B                     	;# 
  6558  019B                     	;# 
  6559  019B                     	;# 
  6560  019B                     	;# 
  6561  019C                     	;# 
  6562  019C                     	;# 
  6563  019C                     	;# 
  6564  019D                     	;# 
  6565  019D                     	;# 
  6566  019D                     	;# 
  6567  019E                     	;# 
  6568  019E                     	;# 
  6569  019E                     	;# 
  6570  019F                     	;# 
  6571  019F                     	;# 
  6572  019F                     	;# 
  6573  019F                     	;# 
  6574  019F                     	;# 
  6575  020C                     	;# 
  6576  020D                     	;# 
  6577  020E                     	;# 
  6578  0211                     	;# 
  6579  0211                     	;# 
  6580  0212                     	;# 
  6581  0212                     	;# 
  6582  0213                     	;# 
  6583  0213                     	;# 
  6584  0214                     	;# 
  6585  0214                     	;# 
  6586  0215                     	;# 
  6587  0215                     	;# 
  6588  0215                     	;# 
  6589  0215                     	;# 
  6590  0216                     	;# 
  6591  0216                     	;# 
  6592  0217                     	;# 
  6593  0217                     	;# 
  6594  0219                     	;# 
  6595  021A                     	;# 
  6596  021B                     	;# 
  6597  021C                     	;# 
  6598  021D                     	;# 
  6599  021D                     	;# 
  6600  021E                     	;# 
  6601  021F                     	;# 
  6602  028C                     	;# 
  6603  028D                     	;# 
  6604  028E                     	;# 
  6605  0291                     	;# 
  6606  0291                     	;# 
  6607  0292                     	;# 
  6608  0293                     	;# 
  6609  0294                     	;# 
  6610  0295                     	;# 
  6611  0295                     	;# 
  6612  0296                     	;# 
  6613  0297                     	;# 
  6614  0298                     	;# 
  6615  029F                     	;# 
  6616  030C                     	;# 
  6617  030D                     	;# 
  6618  030E                     	;# 
  6619  0311                     	;# 
  6620  0311                     	;# 
  6621  0312                     	;# 
  6622  0313                     	;# 
  6623  0314                     	;# 
  6624  0315                     	;# 
  6625  0315                     	;# 
  6626  0316                     	;# 
  6627  0317                     	;# 
  6628  0318                     	;# 
  6629  038C                     	;# 
  6630  038D                     	;# 
  6631  038E                     	;# 
  6632  0391                     	;# 
  6633  0392                     	;# 
  6634  0393                     	;# 
  6635  0394                     	;# 
  6636  0395                     	;# 
  6637  0396                     	;# 
  6638  0397                     	;# 
  6639  0398                     	;# 
  6640  0399                     	;# 
  6641  039A                     	;# 
  6642  039C                     	;# 
  6643  039D                     	;# 
  6644  039E                     	;# 
  6645  039F                     	;# 
  6646  0411                     	;# 
  6647  0411                     	;# 
  6648  0412                     	;# 
  6649  0413                     	;# 
  6650  0414                     	;# 
  6651  0415                     	;# 
  6652  0416                     	;# 
  6653  0417                     	;# 
  6654  0418                     	;# 
  6655  0418                     	;# 
  6656  0419                     	;# 
  6657  041A                     	;# 
  6658  041B                     	;# 
  6659  041C                     	;# 
  6660  041D                     	;# 
  6661  041E                     	;# 
  6662  041F                     	;# 
  6663  0498                     	;# 
  6664  0498                     	;# 
  6665  0499                     	;# 
  6666  049A                     	;# 
  6667  049B                     	;# 
  6668  049B                     	;# 
  6669  049C                     	;# 
  6670  049D                     	;# 
  6671  049E                     	;# 
  6672  049F                     	;# 
  6673  0617                     	;# 
  6674  0618                     	;# 
  6675  0619                     	;# 
  6676  0619                     	;# 
  6677  061A                     	;# 
  6678  061B                     	;# 
  6679  061C                     	;# 
  6680  061C                     	;# 
  6681  061F                     	;# 
  6682  0691                     	;# 
  6683  0692                     	;# 
  6684  0693                     	;# 
  6685  0694                     	;# 
  6686  0695                     	;# 
  6687  0696                     	;# 
  6688  0697                     	;# 
  6689  0698                     	;# 
  6690  0699                     	;# 
  6691  0711                     	;# 
  6692  0712                     	;# 
  6693  0713                     	;# 
  6694  0714                     	;# 
  6695  0715                     	;# 
  6696  0716                     	;# 
  6697  0717                     	;# 
  6698  0718                     	;# 
  6699  0719                     	;# 
  6700  0891                     	;# 
  6701  0891                     	;# 
  6702  0891                     	;# 
  6703  0891                     	;# 
  6704  0891                     	;# 
  6705  0891                     	;# 
  6706  0892                     	;# 
  6707  0892                     	;# 
  6708  0892                     	;# 
  6709  0893                     	;# 
  6710  0893                     	;# 
  6711  0893                     	;# 
  6712  0893                     	;# 
  6713  0893                     	;# 
  6714  0893                     	;# 
  6715  0894                     	;# 
  6716  0894                     	;# 
  6717  0894                     	;# 
  6718  0895                     	;# 
  6719  0895                     	;# 
  6720  0895                     	;# 
  6721  0896                     	;# 
  6722  0896                     	;# 
  6723  0896                     	;# 
  6724  089B                     	;# 
  6725  0911                     	;# 
  6726  0912                     	;# 
  6727  0913                     	;# 
  6728  0914                     	;# 
  6729  0915                     	;# 
  6730  0916                     	;# 
  6731  0918                     	;# 
  6732  0919                     	;# 
  6733  091A                     	;# 
  6734  091B                     	;# 
  6735  091C                     	;# 
  6736  091D                     	;# 
  6737  091E                     	;# 
  6738  091F                     	;# 
  6739  0E0F                     	;# 
  6740  0E10                     	;# 
  6741  0E11                     	;# 
  6742  0E12                     	;# 
  6743  0E13                     	;# 
  6744  0E14                     	;# 
  6745  0E15                     	;# 
  6746  0E16                     	;# 
  6747  0E17                     	;# 
  6748  0E18                     	;# 
  6749  0E19                     	;# 
  6750  0E1A                     	;# 
  6751  0E1B                     	;# 
  6752  0E1C                     	;# 
  6753  0E1D                     	;# 
  6754  0E1E                     	;# 
  6755  0E1F                     	;# 
  6756  0E20                     	;# 
  6757  0E21                     	;# 
  6758  0E22                     	;# 
  6759  0E24                     	;# 
  6760  0E25                     	;# 
  6761  0E28                     	;# 
  6762  0E29                     	;# 
  6763  0E2A                     	;# 
  6764  0E2B                     	;# 
  6765  0E2C                     	;# 
  6766  0E2D                     	;# 
  6767  0E2E                     	;# 
  6768  0E2F                     	;# 
  6769  0E90                     	;# 
  6770  0E91                     	;# 
  6771  0E92                     	;# 
  6772  0E94                     	;# 
  6773  0E95                     	;# 
  6774  0E9C                     	;# 
  6775  0E9D                     	;# 
  6776  0E9E                     	;# 
  6777  0E9F                     	;# 
  6778  0EA0                     	;# 
  6779  0EA1                     	;# 
  6780  0EA2                     	;# 
  6781  0EA3                     	;# 
  6782  0EA4                     	;# 
  6783  0EA5                     	;# 
  6784  0EA6                     	;# 
  6785  0EA7                     	;# 
  6786  0F0F                     	;# 
  6787  0F10                     	;# 
  6788  0F11                     	;# 
  6789  0F12                     	;# 
  6790  0F13                     	;# 
  6791  0F14                     	;# 
  6792  0F15                     	;# 
  6793  0F16                     	;# 
  6794  0F17                     	;# 
  6795  0F18                     	;# 
  6796  0F19                     	;# 
  6797  0F1A                     	;# 
  6798  0F1B                     	;# 
  6799  0F1C                     	;# 
  6800  0F1D                     	;# 
  6801  0F1E                     	;# 
  6802  0F1F                     	;# 
  6803  0F20                     	;# 
  6804  0F21                     	;# 
  6805  0F22                     	;# 
  6806  0F23                     	;# 
  6807  0F24                     	;# 
  6808  0F25                     	;# 
  6809  0F26                     	;# 
  6810  0F27                     	;# 
  6811  0F28                     	;# 
  6812  0F29                     	;# 
  6813  0F2A                     	;# 
  6814  0F2B                     	;# 
  6815  0F2C                     	;# 
  6816  0F2D                     	;# 
  6817  0F2E                     	;# 
  6818  0F2F                     	;# 
  6819  0F30                     	;# 
  6820  0F31                     	;# 
  6821  0F32                     	;# 
  6822  0F33                     	;# 
  6823  0F34                     	;# 
  6824  0F35                     	;# 
  6825  0F36                     	;# 
  6826  0F37                     	;# 
  6827  0FE4                     	;# 
  6828  0FE5                     	;# 
  6829  0FE6                     	;# 
  6830  0FE7                     	;# 
  6831  0FE8                     	;# 
  6832  0FE9                     	;# 
  6833  0FEA                     	;# 
  6834  0FEB                     	;# 
  6835  0FED                     	;# 
  6836  0FEE                     	;# 
  6837  0FEF                     	;# 
  6838                           
  6839 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
  6840  001F                     _T2CONbits	set	31
  6841  001F                     _T2CON	set	31
  6842  001D                     _TMR2	set	29
  6843  001E                     _PR2	set	30
  6844  0013                     _PIR3bits	set	19
  6845  001B                     _T1CONbits	set	27
  6846  001B                     _T1CON	set	27
  6847  0011                     _PIR1bits	set	17
  6848  0019                     _TMR1L	set	25
  6849  001A                     _TMR1H	set	26
  6850  001C                     _T1GCON	set	28
  6851  0014                     _PIR4bits	set	20
  6852  0017                     _T0CON0bits	set	23
  6853  0017                     _T0CON0	set	23
  6854  0010                     _PIR0bits	set	16
  6855  0015                     _TMR0L	set	21
  6856  0016                     _TMR0H	set	22
  6857  0018                     _T0CON1	set	24
  6858  000D                     _PORTBbits	set	13
  6859  000E                     _PORTCbits	set	14
  6860  000C                     _PORTAbits	set	12
  6861  000B                     _INTCONbits	set	11
  6862  0014                     _PIR4	set	20
  6863  0013                     _PIR3	set	19
  6864  0012                     _PIR2	set	18
  6865  0011                     _PIR1	set	17
  6866  0010                     _PIR0	set	16
  6867  008E                     _TRISC	set	142
  6868  008D                     _TRISB	set	141
  6869  008C                     _TRISA	set	140
  6870  0093                     _PIE3bits	set	147
  6871  0091                     _PIE1bits	set	145
  6872  0094                     _PIE4bits	set	148
  6873  0090                     _PIE0bits	set	144
  6874  0097                     _WDTCON	set	151
  6875  008D                     _TRISBbits	set	141
  6876  008E                     _TRISCbits	set	142
  6877  008C                     _TRISAbits	set	140
  6878  0094                     _PIE4	set	148
  6879  0093                     _PIE3	set	147
  6880  0092                     _PIE2	set	146
  6881  0091                     _PIE1	set	145
  6882  0090                     _PIE0	set	144
  6883  010E                     _LATC	set	270
  6884  010D                     _LATB	set	269
  6885  010C                     _LATA	set	268
  6886  010D                     _LATBbits	set	269
  6887  010E                     _LATCbits	set	270
  6888  010C                     _LATAbits	set	268
  6889  018C                     _ANSELA	set	396
  6890  018D                     _ANSELB	set	397
  6891  018E                     _ANSELC	set	398
  6892  0199                     _RC1REG	set	409
  6893  019D                     _RC1STAbits	set	413
  6894  019A                     _TX1REG	set	410
  6895  019E                     _TX1STAbits	set	414
  6896  019C                     _SP1BRGH	set	412
  6897  019B                     _SP1BRGL	set	411
  6898  019E                     _TX1STA	set	414
  6899  019D                     _RC1STA	set	413
  6900  019F                     _BAUD1CON	set	415
  6901  020E                     _WPUC	set	526
  6902  020C                     _WPUA	set	524
  6903  020D                     _WPUB	set	525
  6904  028E                     _ODCONC	set	654
  6905  028D                     _ODCONB	set	653
  6906  028C                     _ODCONA	set	652
  6907  0295                     _CCPR2L	set	661
  6908  0296                     _CCPR2H	set	662
  6909  0298                     _CCP2CAP	set	664
  6910  0297                     _CCP2CON	set	663
  6911  029F                     _CCPTMRSbits	set	671
  6912  0291                     _CCPR1L	set	657
  6913  0292                     _CCPR1H	set	658
  6914  0294                     _CCP1CAP	set	660
  6915  0293                     _CCP1CON	set	659
  6916  0317                     _CCP4CONbits	set	791
  6917  0315                     _CCPR4L	set	789
  6918  0316                     _CCPR4H	set	790
  6919  0317                     _CCP4CON	set	791
  6920  030E                     _SLRCONC	set	782
  6921  030D                     _SLRCONB	set	781
  6922  030C                     _SLRCONA	set	780
  6923  0311                     _CCPR3L	set	785
  6924  0312                     _CCPR3H	set	786
  6925  0314                     _CCP3CAP	set	788
  6926  0313                     _CCP3CON	set	787
  6927  038E                     _INLVLC	set	910
  6928  038D                     _INLVLB	set	909
  6929  038C                     _INLVLA	set	908
  6930  0414                     _T3GCONbits	set	1044
  6931  0413                     _T3CONbits	set	1043
  6932  0413                     _T3CON	set	1043
  6933  0411                     _TMR3L	set	1041
  6934  0412                     _TMR3H	set	1042
  6935  0414                     _T3GCON	set	1044
  6936  061F                     _PWMTMRSbits	set	1567
  6937  0617                     _PWM5DCL	set	1559
  6938  0618                     _PWM5DCH	set	1560
  6939  0619                     _PWM5CON	set	1561
  6940  0916                     _PMD5	set	2326
  6941  0915                     _PMD4	set	2325
  6942  0914                     _PMD3	set	2324
  6943  0913                     _PMD2	set	2323
  6944  0912                     _PMD1	set	2322
  6945  0911                     _PMD0	set	2321
  6946  091E                     _OSCTUNE	set	2334
  6947  091F                     _OSCFRQ	set	2335
  6948  091D                     _OSCEN	set	2333
  6949  091B                     _OSCCON3	set	2331
  6950  0919                     _OSCCON1	set	2329
  6951  48E0                     _PLLR	set	18656
  6952  0E16                     _CCP3PPS	set	3606
  6953  0E15                     _CCP2PPS	set	3605
  6954  0E14                     _CCP1PPS	set	3604
  6955  0E24                     _RXPPS	set	3620
  6956  0E9E                     _RB6PPS	set	3742
  6957  0EA1                     _RC1PPS	set	3745
  6958  0EA4                     _RC4PPS	set	3748
  6959                           
  6960                           	psect	stringtext1
  6961  1000                     __pstringtext1:
  6962  1000                     STR_2:
  6963  1000  3445               	retlw	69	;'E'
  6964  1001  3452               	retlw	82	;'R'
  6965  1002  3452               	retlw	82	;'R'
  6966  1003  344F               	retlw	79	;'O'
  6967  1004  3452               	retlw	82	;'R'
  6968  1005  343A               	retlw	58	;':'
  6969  1006  3420               	retlw	32	;' '
  6970  1007  3449               	retlw	73	;'I'
  6971  1008  346E               	retlw	110	;'n'
  6972  1009  3476               	retlw	118	;'v'
  6973  100A  3461               	retlw	97	;'a'
  6974  100B  346C               	retlw	108	;'l'
  6975  100C  3469               	retlw	105	;'i'
  6976  100D  3464               	retlw	100	;'d'
  6977  100E  3420               	retlw	32	;' '
  6978  100F  3474               	retlw	116	;'t'
  6979  1010  3472               	retlw	114	;'r'
  6980  1011  3469               	retlw	105	;'i'
  6981  1012  3467               	retlw	103	;'g'
  6982  1013  3450               	retlw	80	;'P'
  6983  1014  3469               	retlw	105	;'i'
  6984  1015  346E               	retlw	110	;'n'
  6985  1016  3420               	retlw	32	;' '
  6986  1017  3428               	retlw	40	;'('
  6987  1018  346D               	retlw	109	;'m'
  6988  1019  3475               	retlw	117	;'u'
  6989  101A  3473               	retlw	115	;'s'
  6990  101B  3474               	retlw	116	;'t'
  6991  101C  3420               	retlw	32	;' '
  6992  101D  344E               	retlw	78	;'N'
  6993  101E  344F               	retlw	79	;'O'
  6994  101F  3454               	retlw	84	;'T'
  6995  1020  3420               	retlw	32	;' '
  6996  1021  3462               	retlw	98	;'b'
  6997  1022  3465               	retlw	101	;'e'
  6998  1023  3420               	retlw	32	;' '
  6999  1024  345B               	retlw	91	;'['
  7000  1025  3441               	retlw	65	;'A'
  7001  1026  3432               	retlw	50	;'2'
  7002  1027  342C               	retlw	44	;','
  7003  1028  3420               	retlw	32	;' '
  7004  1029  3441               	retlw	65	;'A'
  7005  102A  3433               	retlw	51	;'3'
  7006  102B  342C               	retlw	44	;','
  7007  102C  3420               	retlw	32	;' '
  7008  102D  3441               	retlw	65	;'A'
  7009  102E  3434               	retlw	52	;'4'
  7010  102F  342C               	retlw	44	;','
  7011  1030  3420               	retlw	32	;' '
  7012  1031  3443               	retlw	67	;'C'
  7013  1032  3433               	retlw	51	;'3'
  7014  1033  342C               	retlw	44	;','
  7015  1034  3420               	retlw	32	;' '
  7016  1035  3443               	retlw	67	;'C'
  7017  1036  3435               	retlw	53	;'5'
  7018  1037  345D               	retlw	93	;']'
  7019  1038  3429               	retlw	41	;')'
  7020  1039  3400               	retlw	0
  7021                           
  7022                           	psect	stringtext2
  7023  103A                     __pstringtext2:
  7024  103A                     STR_1:
  7025  103A  3445               	retlw	69	;'E'
  7026  103B  3452               	retlw	82	;'R'
  7027  103C  3452               	retlw	82	;'R'
  7028  103D  344F               	retlw	79	;'O'
  7029  103E  3452               	retlw	82	;'R'
  7030  103F  343A               	retlw	58	;':'
  7031  1040  3420               	retlw	32	;' '
  7032  1041  3449               	retlw	73	;'I'
  7033  1042  346E               	retlw	110	;'n'
  7034  1043  3476               	retlw	118	;'v'
  7035  1044  3461               	retlw	97	;'a'
  7036  1045  346C               	retlw	108	;'l'
  7037  1046  3469               	retlw	105	;'i'
  7038  1047  3464               	retlw	100	;'d'
  7039  1048  3420               	retlw	32	;' '
  7040  1049  3465               	retlw	101	;'e'
  7041  104A  3463               	retlw	99	;'c'
  7042  104B  3468               	retlw	104	;'h'
  7043  104C  346F               	retlw	111	;'o'
  7044  104D  3450               	retlw	80	;'P'
  7045  104E  3469               	retlw	105	;'i'
  7046  104F  346E               	retlw	110	;'n'
  7047  1050  3420               	retlw	32	;' '
  7048  1051  3428               	retlw	40	;'('
  7049  1052  346D               	retlw	109	;'m'
  7050  1053  3475               	retlw	117	;'u'
  7051  1054  3473               	retlw	115	;'s'
  7052  1055  3474               	retlw	116	;'t'
  7053  1056  3420               	retlw	32	;' '
  7054  1057  3462               	retlw	98	;'b'
  7055  1058  3465               	retlw	101	;'e'
  7056  1059  3420               	retlw	32	;' '
  7057  105A  345B               	retlw	91	;'['
  7058  105B  3441               	retlw	65	;'A'
  7059  105C  3432               	retlw	50	;'2'
  7060  105D  342C               	retlw	44	;','
  7061  105E  3420               	retlw	32	;' '
  7062  105F  3441               	retlw	65	;'A'
  7063  1060  3434               	retlw	52	;'4'
  7064  1061  342C               	retlw	44	;','
  7065  1062  3420               	retlw	32	;' '
  7066  1063  3443               	retlw	67	;'C'
  7067  1064  3433               	retlw	51	;'3'
  7068  1065  342C               	retlw	44	;','
  7069  1066  3420               	retlw	32	;' '
  7070  1067  3443               	retlw	67	;'C'
  7071  1068  3435               	retlw	53	;'5'
  7072  1069  345D               	retlw	93	;']'
  7073  106A  3429               	retlw	41	;')'
  7074  106B  3400               	retlw	0
  7075                           
  7076                           	psect	stringtext3
  7077  106C                     __pstringtext3:
  7078  106C                     STR_3:
  7079  106C  3425               	retlw	37	;'%'
  7080  106D  3475               	retlw	117	;'u'
  7081  106E  3400               	retlw	0
  7082                           
  7083                           	psect	stringtext4
  7084  0000                     __pstringtext4:
  7085  106C                     
  7086                           	psect	cinit
  7087  0092                     start_initialization:	
  7088                           ; #config settings
  7089                           
  7090  0092                     __initialization:
  7091                           
  7092                           ; Clear objects allocated to COMMON
  7093  0092  01FA               	clrf	__pbssCOMMON& (0+127)
  7094  0093  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  7095  0094  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  7096  0095  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  7097                           
  7098                           ; Clear objects allocated to BANK1
  7099  0096  30A0               	movlw	low __pbssBANK1
  7100  0097  0084               	movwf	4
  7101  0098  3000               	movlw	high __pbssBANK1
  7102  0099  0085               	movwf	5
  7103  009A  303B               	movlw	59
  7104  009B  318A  221C  3180   	fcall	clear_ram0
  7105                           
  7106                           ; Clear objects allocated to BANK2
  7107  009E  3020               	movlw	low __pbssBANK2
  7108  009F  0084               	movwf	4
  7109  00A0  3001               	movlw	high __pbssBANK2
  7110  00A1  0085               	movwf	5
  7111  00A2  3038               	movlw	56
  7112  00A3  318A  221C  3180   	fcall	clear_ram0
  7113                           
  7114                           ; Clear objects allocated to BANK3
  7115  00A6  30A0               	movlw	low __pbssBANK3
  7116  00A7  0084               	movwf	4
  7117  00A8  3001               	movlw	high __pbssBANK3
  7118  00A9  0085               	movwf	5
  7119  00AA  3020               	movlw	32
  7120  00AB  318A  221C  3180   	fcall	clear_ram0
  7121  00AE                     end_of_initialization:	
  7122                           ;End of C runtime variable initialization code
  7123                           
  7124  00AE                     __end_of__initialization:
  7125  00AE  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7126  00AF  0020               	movlb	0
  7127  00B0  3180  28B2         	ljmp	_main	;jump to C main() function
  7128                           
  7129                           	psect	bssCOMMON
  7130  007A                     __pbssCOMMON:
  7131  007A                     _eusartRxTail:
  7132  007A                     	ds	1
  7133  007B                     _eusartRxHead:
  7134  007B                     	ds	1
  7135  007C                     _eusartTxHead:
  7136  007C                     	ds	1
  7137  007D                     _CountCallBack:
  7138  007D                     	ds	1
  7139                           
  7140                           	psect	bssBANK1
  7141  00A0                     __pbssBANK1:
  7142  00A0                     _nout:
  7143  00A0                     	ds	2
  7144  00A2                     _width:
  7145  00A2                     	ds	2
  7146  00A4                     _prec:
  7147  00A4                     	ds	2
  7148  00A6                     _flags:
  7149  00A6                     	ds	2
  7150  00A8                     _timer3ReloadVal:
  7151  00A8                     	ds	2
  7152  00AA                     _dutyCycle10bit:
  7153  00AA                     	ds	2
  7154  00AC                     _ocCount:
  7155  00AC                     	ds	2
  7156  00AE                     _currFreq:
  7157  00AE                     	ds	2
  7158  00B0                     _EUSART_ErrorHandler:
  7159  00B0                     	ds	2
  7160  00B2                     _EUSART_OverrunErrorHandler:
  7161  00B2                     	ds	2
  7162  00B4                     _EUSART_FramingErrorHandler:
  7163  00B4                     	ds	2
  7164  00B6                     _EUSART_RxDefaultInterruptHandler:
  7165  00B6                     	ds	2
  7166  00B8                     _EUSART_TxDefaultInterruptHandler:
  7167  00B8                     	ds	2
  7168  00BA                     _timer1ReloadVal:
  7169  00BA                     	ds	2
  7170  00BC                     _ticksDown@ccp3$F990:
  7171  00BC                     	ds	2
  7172  00BE                     _ticksUp@ccp3$F989:
  7173  00BE                     	ds	2
  7174  00C0                     _CCP3_CallBack:
  7175  00C0                     	ds	2
  7176  00C2                     _ticksDown@ccp2$F869:
  7177  00C2                     	ds	2
  7178  00C4                     _ticksUp@ccp2$F868:
  7179  00C4                     	ds	2
  7180  00C6                     _CCP2_CallBack:
  7181  00C6                     	ds	2
  7182  00C8                     _ticksDown:
  7183  00C8                     	ds	2
  7184  00CA                     _ticksUp:
  7185  00CA                     	ds	2
  7186  00CC                     _CCP1_CallBack:
  7187  00CC                     	ds	2
  7188  00CE                     _TMR0_InterruptHandler:
  7189  00CE                     	ds	2
  7190  00D0                     _eusartRxLastError:
  7191  00D0                     	ds	1
  7192  00D1                     _eusartRxCount:
  7193  00D1                     	ds	1
  7194  00D2                     _eusartTxBufferRemaining:
  7195  00D2                     	ds	1
  7196  00D3                     _eusartTxTail:
  7197  00D3                     	ds	1
  7198  00D4                     _lastTrig@ccp3$F992:
  7199  00D4                     	ds	1
  7200  00D5                     _sameSens@ccp3$F991:
  7201  00D5                     	ds	1
  7202  00D6                     _lastTrig@ccp2$F871:
  7203  00D6                     	ds	1
  7204  00D7                     _sameSens@ccp2$F870:
  7205  00D7                     	ds	1
  7206  00D8                     _lastTrig@ccp1$F729:
  7207  00D8                     	ds	1
  7208  00D9                     _sameSens:
  7209  00D9                     	ds	1
  7210  00DA                     _lastTrig:
  7211  00DA                     	ds	1
  7212                           
  7213                           	psect	bssBANK2
  7214  0120                     __pbssBANK2:
  7215  0120                     _eusartRxStatusBuffer:
  7216  0120                     	ds	8
  7217  0128                     _eusartRxBuffer:
  7218  0128                     	ds	8
  7219  0130                     _eusartTxBuffer:
  7220  0130                     	ds	8
  7221  0138                     _micros@FRT$F1531:
  7222  0138                     	ds	4
  7223  013C                     _millis:
  7224  013C                     	ds	4
  7225  0140                     _micros:
  7226  0140                     	ds	4
  7227  0144                     _dutyCyclePerMilli:
  7228  0144                     	ds	2
  7229  0146                     _Sens3:
  7230  0146                     	ds	6
  7231  014C                     _Sens2:
  7232  014C                     	ds	6
  7233  0152                     _Sens1:
  7234  0152                     	ds	6
  7235                           
  7236                           	psect	bssBANK3
  7237  01A0                     __pbssBANK3:
  7238  01A0                     _dbuf:
  7239  01A0                     	ds	32
  7240                           
  7241                           	psect	clrtext
  7242  0A1C                     clear_ram0:	
  7243                           ;	Called with FSR0 containing the base address, and
  7244                           ;	WREG with the size to clear
  7245                           
  7246  0A1C  0064               	clrwdt	;clear the watchdog before getting into this loop
  7247  0A1D                     clrloop0:
  7248  0A1D  0180               	clrf	0	;clear RAM location pointed to by FSR
  7249  0A1E  3101               	addfsr 0,1
  7250  0A1F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7251  0A20  2A1D               	goto	clrloop0	;have we reached the end yet?
  7252  0A21  3400               	retlw	0	;all done for this memory range, return
  7253                           
  7254                           	psect	cstackBANK1
  7255  00DB                     __pcstackBANK1:
  7256  00DB                     ??_printf:
  7257                           
  7258                           ; 1 bytes @ 0x0
  7259  00DB                     	ds	1
  7260  00DC                     printf@ap:
  7261                           
  7262                           ; 1 bytes @ 0x1
  7263  00DC                     	ds	1
  7264  00DD                     ?_JSN_Sensor_Init:
  7265  00DD                     JSN_Sensor_Init@trigPin:	
  7266                           ; 1 bytes @ 0x2
  7267                           
  7268                           
  7269                           ; 1 bytes @ 0x2
  7270  00DD                     	ds	1
  7271  00DE                     JSN_Sensor_Init@echoPin:
  7272                           
  7273                           ; 1 bytes @ 0x3
  7274  00DE                     	ds	1
  7275  00DF                     ??_JSN_Sensor_Init:
  7276                           
  7277                           ; 1 bytes @ 0x4
  7278  00DF                     	ds	2
  7279  00E1                     JSN_Sensor_Init@Sensor:
  7280                           
  7281                           ; 1 bytes @ 0x6
  7282  00E1                     	ds	1
  7283  00E2                     ??_main:
  7284                           
  7285                           ; 1 bytes @ 0x7
  7286  00E2                     	ds	4
  7287  00E6                     main@prevMilli:
  7288                           
  7289                           ; 4 bytes @ 0xB
  7290  00E6                     	ds	4
  7291  00EA                     main@nextSens:
  7292                           
  7293                           ; 1 bytes @ 0xF
  7294  00EA                     	ds	1
  7295  00EB                     main@currMilli:
  7296                           
  7297                           ; 4 bytes @ 0x10
  7298  00EB                     	ds	4
  7299                           
  7300                           	psect	cstackCOMMON
  7301  0070                     __pcstackCOMMON:
  7302  0070                     ?_PIC16_Init:
  7303  0070                     ?_JSN_GetLastTrig:	
  7304                           ; 1 bytes @ 0x0
  7305                           
  7306  0070                     ??_JSN_GetLastTrig:	
  7307                           ; 1 bytes @ 0x0
  7308                           
  7309  0070                     ?_SYSTEM_Initialize:	
  7310                           ; 1 bytes @ 0x0
  7311                           
  7312  0070                     ?_PMD_Initialize:	
  7313                           ; 1 bytes @ 0x0
  7314                           
  7315  0070                     ?_PIN_MANAGER_Initialize:	
  7316                           ; 1 bytes @ 0x0
  7317                           
  7318  0070                     ?_OSCILLATOR_Initialize:	
  7319                           ; 1 bytes @ 0x0
  7320                           
  7321  0070                     ?_WDT_Initialize:	
  7322                           ; 1 bytes @ 0x0
  7323                           
  7324  0070                     ?_CCP3_Initialize:	
  7325                           ; 1 bytes @ 0x0
  7326                           
  7327  0070                     ?_CCP1_Initialize:	
  7328                           ; 1 bytes @ 0x0
  7329                           
  7330  0070                     ?_TMR2_Initialize:	
  7331                           ; 1 bytes @ 0x0
  7332                           
  7333  0070                     ?_TMR0_Initialize:	
  7334                           ; 1 bytes @ 0x0
  7335                           
  7336  0070                     ?_CCP2_Initialize:	
  7337                           ; 1 bytes @ 0x0
  7338                           
  7339  0070                     ?_CCP4_Initialize:	
  7340                           ; 1 bytes @ 0x0
  7341                           
  7342  0070                     ?_TMR3_Initialize:	
  7343                           ; 1 bytes @ 0x0
  7344                           
  7345  0070                     ?_PWM5_Initialize:	
  7346                           ; 1 bytes @ 0x0
  7347                           
  7348  0070                     ?_TMR1_Initialize:	
  7349                           ; 1 bytes @ 0x0
  7350                           
  7351  0070                     ?_EUSART_Initialize:	
  7352                           ; 1 bytes @ 0x0
  7353                           
  7354  0070                     ?_TMR0_CallBack:	
  7355                           ; 1 bytes @ 0x0
  7356                           
  7357  0070                     ??_TMR0_CallBack:	
  7358                           ; 1 bytes @ 0x0
  7359                           
  7360  0070                     ?_FRT_IncMillis:	
  7361                           ; 1 bytes @ 0x0
  7362                           
  7363  0070                     ??_FRT_IncMillis:	
  7364                           ; 1 bytes @ 0x0
  7365                           
  7366  0070                     ?_FRT_IncMicros:	
  7367                           ; 1 bytes @ 0x0
  7368                           
  7369  0070                     ??_FRT_IncMicros:	
  7370                           ; 1 bytes @ 0x0
  7371                           
  7372  0070                     ?_EUSART_Receive_ISR:	
  7373                           ; 1 bytes @ 0x0
  7374                           
  7375  0070                     ?_EUSART_Transmit_ISR:	
  7376                           ; 1 bytes @ 0x0
  7377                           
  7378  0070                     ??_EUSART_Transmit_ISR:	
  7379                           ; 1 bytes @ 0x0
  7380                           
  7381  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  7382                           ; 1 bytes @ 0x0
  7383                           
  7384  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  7385                           ; 1 bytes @ 0x0
  7386                           
  7387  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  7388                           ; 1 bytes @ 0x0
  7389                           
  7390  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  7391                           ; 1 bytes @ 0x0
  7392                           
  7393  0070                     ?_EUSART_DefaultErrorHandler:	
  7394                           ; 1 bytes @ 0x0
  7395                           
  7396  0070                     ?_EUSART_RxDataHandler:	
  7397                           ; 1 bytes @ 0x0
  7398                           
  7399  0070                     ??_EUSART_RxDataHandler:	
  7400                           ; 1 bytes @ 0x0
  7401                           
  7402  0070                     ?_CCP4_CompareISR:	
  7403                           ; 1 bytes @ 0x0
  7404                           
  7405  0070                     ??_CCP4_CompareISR:	
  7406                           ; 1 bytes @ 0x0
  7407                           
  7408  0070                     ?_TMR3_ISR:	
  7409                           ; 1 bytes @ 0x0
  7410                           
  7411  0070                     ?_TMR3_Reload:	
  7412                           ; 1 bytes @ 0x0
  7413                           
  7414  0070                     ?_JSN_Sensor_Trig:	
  7415                           ; 1 bytes @ 0x0
  7416                           
  7417  0070                     ?_ReadPin:	
  7418                           ; 1 bytes @ 0x0
  7419                           
  7420  0070                     ??_ReadPin:	
  7421                           ; 1 bytes @ 0x0
  7422                           
  7423  0070                     ?_TMR0_ReadTimer:	
  7424                           ; 1 bytes @ 0x0
  7425                           
  7426  0070                     ?_TMR0_ISR:	
  7427                           ; 1 bytes @ 0x0
  7428                           
  7429  0070                     ??_TMR0_ISR:	
  7430                           ; 1 bytes @ 0x0
  7431                           
  7432  0070                     ?_TMR0_GetCallBackNum:	
  7433                           ; 1 bytes @ 0x0
  7434                           
  7435  0070                     ?_CCP1_CaptureISR:	
  7436                           ; 1 bytes @ 0x0
  7437                           
  7438  0070                     ?_CCP2_CaptureISR:	
  7439                           ; 1 bytes @ 0x0
  7440                           
  7441  0070                     ?_CCP3_CaptureISR:	
  7442                           ; 1 bytes @ 0x0
  7443                           
  7444  0070                     ?_TMR1_WriteTimer:	
  7445                           ; 1 bytes @ 0x0
  7446                           
  7447  0070                     ?_TMR1_ISR:	
  7448                           ; 1 bytes @ 0x0
  7449                           
  7450  0070                     ?_EUSART_Write:	
  7451                           ; 1 bytes @ 0x0
  7452                           
  7453  0070                     ?_putch:	
  7454                           ; 1 bytes @ 0x0
  7455                           
  7456  0070                     ?_INTERRUPT_InterruptManager:	
  7457                           ; 1 bytes @ 0x0
  7458                           
  7459  0070                     ?_TMR3_WriteTimer:	
  7460                           ; 1 bytes @ 0x0
  7461                           
  7462  0070                     ?_main:	
  7463                           ; 1 bytes @ 0x0
  7464                           
  7465  0070                     TMR1_WriteTimer@timerVal:	
  7466                           ; 2 bytes @ 0x0
  7467                           
  7468  0070                     TMR3_WriteTimer@timerVal:	
  7469                           ; 2 bytes @ 0x0
  7470                           
  7471                           
  7472                           ; 2 bytes @ 0x0
  7473  0070                     	ds	1
  7474  0071                     ??_EUSART_Receive_ISR:
  7475  0071                     ??_EUSART_DefaultErrorHandler:	
  7476                           ; 1 bytes @ 0x1
  7477                           
  7478                           
  7479                           ; 1 bytes @ 0x1
  7480  0071                     	ds	1
  7481  0072                     ??_TMR3_ISR:
  7482  0072                     ??_TMR3_Reload:	
  7483                           ; 1 bytes @ 0x2
  7484                           
  7485  0072                     ??_TMR1_WriteTimer:	
  7486                           ; 1 bytes @ 0x2
  7487                           
  7488  0072                     ??_TMR1_ISR:	
  7489                           ; 1 bytes @ 0x2
  7490                           
  7491  0072                     ??_TMR3_WriteTimer:	
  7492                           ; 1 bytes @ 0x2
  7493                           
  7494  0072                     ReadPin@pin:	
  7495                           ; 1 bytes @ 0x2
  7496                           
  7497                           
  7498                           ; 1 bytes @ 0x2
  7499  0072                     	ds	1
  7500  0073                     ?_CCP1_DefaultCallBack:
  7501  0073                     ?_CCP2_DefaultCallBack:	
  7502                           ; 1 bytes @ 0x3
  7503                           
  7504  0073                     ?_CCP3_DefaultCallBack:	
  7505                           ; 1 bytes @ 0x3
  7506                           
  7507  0073                     CCP1_DefaultCallBack@capturedValue:	
  7508                           ; 1 bytes @ 0x3
  7509                           
  7510  0073                     CCP2_DefaultCallBack@capturedValue:	
  7511                           ; 2 bytes @ 0x3
  7512                           
  7513  0073                     CCP3_DefaultCallBack@capturedValue:	
  7514                           ; 2 bytes @ 0x3
  7515                           
  7516                           
  7517                           ; 2 bytes @ 0x3
  7518  0073                     	ds	2
  7519  0075                     ??_CCP1_DefaultCallBack:
  7520  0075                     ??_CCP2_DefaultCallBack:	
  7521                           ; 1 bytes @ 0x5
  7522                           
  7523  0075                     ??_CCP3_DefaultCallBack:	
  7524                           ; 1 bytes @ 0x5
  7525                           
  7526                           
  7527                           ; 1 bytes @ 0x5
  7528  0075                     	ds	2
  7529  0077                     ??_CCP1_CaptureISR:
  7530  0077                     ??_CCP2_CaptureISR:	
  7531                           ; 1 bytes @ 0x7
  7532                           
  7533  0077                     ??_CCP3_CaptureISR:	
  7534                           ; 1 bytes @ 0x7
  7535                           
  7536                           
  7537                           ; 1 bytes @ 0x7
  7538  0077                     	ds	1
  7539  0078                     CCP1_CaptureISR@module:
  7540  0078                     CCP2_CaptureISR@module:	
  7541                           ; 2 bytes @ 0x8
  7542                           
  7543  0078                     CCP3_CaptureISR@module:	
  7544                           ; 2 bytes @ 0x8
  7545                           
  7546                           
  7547                           ; 2 bytes @ 0x8
  7548  0078                     	ds	2
  7549  007A                     ??_INTERRUPT_InterruptManager:
  7550                           
  7551                           	psect	cstackBANK0
  7552  0020                     __pcstackBANK0:	
  7553                           ; 1 bytes @ 0xA
  7554                           
  7555  0020                     ?_SetPin:
  7556  0020                     ?_WritePin:	
  7557                           ; 1 bytes @ 0x0
  7558                           
  7559  0020                     ??_PMD_Initialize:	
  7560                           ; 1 bytes @ 0x0
  7561                           
  7562  0020                     ??_PIN_MANAGER_Initialize:	
  7563                           ; 1 bytes @ 0x0
  7564                           
  7565  0020                     ??_OSCILLATOR_Initialize:	
  7566                           ; 1 bytes @ 0x0
  7567                           
  7568  0020                     ??_WDT_Initialize:	
  7569                           ; 1 bytes @ 0x0
  7570                           
  7571  0020                     ??_TMR2_Initialize:	
  7572                           ; 1 bytes @ 0x0
  7573                           
  7574  0020                     ??_CCP4_Initialize:	
  7575                           ; 1 bytes @ 0x0
  7576                           
  7577  0020                     ??_TMR3_Initialize:	
  7578                           ; 1 bytes @ 0x0
  7579                           
  7580  0020                     ??_PWM5_Initialize:	
  7581                           ; 1 bytes @ 0x0
  7582                           
  7583  0020                     ??_TMR1_Initialize:	
  7584                           ; 1 bytes @ 0x0
  7585                           
  7586  0020                     ?_TMR0_SetInterruptHandler:	
  7587                           ; 1 bytes @ 0x0
  7588                           
  7589  0020                     ?_CCP1_SetCallBack:	
  7590                           ; 1 bytes @ 0x0
  7591                           
  7592  0020                     ?_CCP2_SetCallBack:	
  7593                           ; 1 bytes @ 0x0
  7594                           
  7595  0020                     ?_CCP3_SetCallBack:	
  7596                           ; 1 bytes @ 0x0
  7597                           
  7598  0020                     ?_EUSART_SetRxInterruptHandler:	
  7599                           ; 1 bytes @ 0x0
  7600                           
  7601  0020                     ?_EUSART_SetTxInterruptHandler:	
  7602                           ; 1 bytes @ 0x0
  7603                           
  7604  0020                     ?_EUSART_SetFramingErrorHandler:	
  7605                           ; 1 bytes @ 0x0
  7606                           
  7607  0020                     ?_EUSART_SetOverrunErrorHandler:	
  7608                           ; 1 bytes @ 0x0
  7609                           
  7610  0020                     ?_EUSART_SetErrorHandler:	
  7611                           ; 1 bytes @ 0x0
  7612                           
  7613  0020                     ??_TMR0_ReadTimer:	
  7614                           ; 1 bytes @ 0x0
  7615                           
  7616  0020                     ??_TMR0_GetCallBackNum:	
  7617                           ; 1 bytes @ 0x0
  7618                           
  7619  0020                     ??_EUSART_Write:	
  7620                           ; 1 bytes @ 0x0
  7621                           
  7622  0020                     ?_strlen:	
  7623                           ; 1 bytes @ 0x0
  7624                           
  7625  0020                     ?___wmul:	
  7626                           ; 2 bytes @ 0x0
  7627                           
  7628  0020                     ?_FRT_GetMillis:	
  7629                           ; 2 bytes @ 0x0
  7630                           
  7631  0020                     ?___lmul:	
  7632                           ; 4 bytes @ 0x0
  7633                           
  7634  0020                     ?___lodiv:	
  7635                           ; 4 bytes @ 0x0
  7636                           
  7637  0020                     ?___lomod:	
  7638                           ; 8 bytes @ 0x0
  7639                           
  7640  0020                     SetPin@io:	
  7641                           ; 8 bytes @ 0x0
  7642                           
  7643  0020                     WritePin@val:	
  7644                           ; 1 bytes @ 0x0
  7645                           
  7646  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  7647                           ; 1 bytes @ 0x0
  7648                           
  7649  0020                     CCP1_SetCallBack@customCallBack:	
  7650                           ; 2 bytes @ 0x0
  7651                           
  7652  0020                     CCP2_SetCallBack@customCallBack:	
  7653                           ; 2 bytes @ 0x0
  7654                           
  7655  0020                     CCP3_SetCallBack@customCallBack:	
  7656                           ; 2 bytes @ 0x0
  7657                           
  7658  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  7659                           ; 2 bytes @ 0x0
  7660                           
  7661  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  7662                           ; 2 bytes @ 0x0
  7663                           
  7664  0020                     EUSART_SetErrorHandler@interruptHandler:	
  7665                           ; 2 bytes @ 0x0
  7666                           
  7667  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  7668                           ; 2 bytes @ 0x0
  7669                           
  7670  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  7671                           ; 2 bytes @ 0x0
  7672                           
  7673  0020                     ___wmul@multiplier:	
  7674                           ; 2 bytes @ 0x0
  7675                           
  7676  0020                     ___lmul@multiplier:	
  7677                           ; 2 bytes @ 0x0
  7678                           
  7679  0020                     ___lodiv@divisor:	
  7680                           ; 4 bytes @ 0x0
  7681                           
  7682  0020                     ___lomod@divisor:	
  7683                           ; 8 bytes @ 0x0
  7684                           
  7685                           
  7686                           ; 8 bytes @ 0x0
  7687  0020                     	ds	1
  7688  0021                     ??_SetPin:
  7689  0021                     ??_WritePin:	
  7690                           ; 1 bytes @ 0x1
  7691                           
  7692  0021                     TMR0_ReadTimer@readVal:	
  7693                           ; 1 bytes @ 0x1
  7694                           
  7695  0021                     EUSART_Write@txData:	
  7696                           ; 1 bytes @ 0x1
  7697                           
  7698                           
  7699                           ; 1 bytes @ 0x1
  7700  0021                     	ds	1
  7701  0022                     ??_CCP3_Initialize:
  7702  0022                     ??_CCP1_Initialize:	
  7703                           ; 1 bytes @ 0x2
  7704                           
  7705  0022                     ??_TMR0_Initialize:	
  7706                           ; 1 bytes @ 0x2
  7707                           
  7708  0022                     ??_CCP2_Initialize:	
  7709                           ; 1 bytes @ 0x2
  7710                           
  7711  0022                     ??_EUSART_Initialize:	
  7712                           ; 1 bytes @ 0x2
  7713                           
  7714  0022                     ??_TMR0_SetInterruptHandler:	
  7715                           ; 1 bytes @ 0x2
  7716                           
  7717  0022                     ??_CCP1_SetCallBack:	
  7718                           ; 1 bytes @ 0x2
  7719                           
  7720  0022                     ??_CCP2_SetCallBack:	
  7721                           ; 1 bytes @ 0x2
  7722                           
  7723  0022                     ??_CCP3_SetCallBack:	
  7724                           ; 1 bytes @ 0x2
  7725                           
  7726  0022                     ??_EUSART_SetRxInterruptHandler:	
  7727                           ; 1 bytes @ 0x2
  7728                           
  7729  0022                     ??_EUSART_SetTxInterruptHandler:	
  7730                           ; 1 bytes @ 0x2
  7731                           
  7732  0022                     ??_EUSART_SetFramingErrorHandler:	
  7733                           ; 1 bytes @ 0x2
  7734                           
  7735  0022                     ??_EUSART_SetOverrunErrorHandler:	
  7736                           ; 1 bytes @ 0x2
  7737                           
  7738  0022                     ??_EUSART_SetErrorHandler:	
  7739                           ; 1 bytes @ 0x2
  7740                           
  7741  0022                     ??_strlen:	
  7742                           ; 1 bytes @ 0x2
  7743                           
  7744  0022                     ??_putch:	
  7745                           ; 1 bytes @ 0x2
  7746                           
  7747  0022                     putch@txData:	
  7748                           ; 1 bytes @ 0x2
  7749                           
  7750  0022                     ___wmul@multiplicand:	
  7751                           ; 1 bytes @ 0x2
  7752                           
  7753                           
  7754                           ; 2 bytes @ 0x2
  7755  0022                     	ds	1
  7756  0023                     ??_PIC16_Init:
  7757  0023                     ??_SYSTEM_Initialize:	
  7758                           ; 1 bytes @ 0x3
  7759                           
  7760  0023                     ?_fputc:	
  7761                           ; 1 bytes @ 0x3
  7762                           
  7763  0023                     SetPin@pin:	
  7764                           ; 2 bytes @ 0x3
  7765                           
  7766  0023                     WritePin@pin:	
  7767                           ; 1 bytes @ 0x3
  7768                           
  7769  0023                     strlen@a:	
  7770                           ; 1 bytes @ 0x3
  7771                           
  7772  0023                     fputc@c:	
  7773                           ; 1 bytes @ 0x3
  7774                           
  7775                           
  7776                           ; 2 bytes @ 0x3
  7777  0023                     	ds	1
  7778  0024                     ??_FRT_GetMillis:
  7779  0024                     ??___wmul:	
  7780                           ; 1 bytes @ 0x4
  7781                           
  7782  0024                     strlen@s:	
  7783                           ; 1 bytes @ 0x4
  7784                           
  7785  0024                     ___wmul@product:	
  7786                           ; 1 bytes @ 0x4
  7787                           
  7788  0024                     ___lmul@multiplicand:	
  7789                           ; 2 bytes @ 0x4
  7790                           
  7791                           
  7792                           ; 4 bytes @ 0x4
  7793  0024                     	ds	1
  7794  0025                     fputc@fp:
  7795                           
  7796                           ; 1 bytes @ 0x5
  7797  0025                     	ds	1
  7798  0026                     ??_fputc:
  7799  0026                     ?_FRT_GetMicros:	
  7800                           ; 1 bytes @ 0x6
  7801                           
  7802                           
  7803                           ; 4 bytes @ 0x6
  7804  0026                     	ds	2
  7805  0028                     ??___lmul:
  7806  0028                     ___lmul@product:	
  7807                           ; 1 bytes @ 0x8
  7808                           
  7809  0028                     ___lodiv@dividend:	
  7810                           ; 4 bytes @ 0x8
  7811                           
  7812  0028                     ___lomod@dividend:	
  7813                           ; 8 bytes @ 0x8
  7814                           
  7815                           
  7816                           ; 8 bytes @ 0x8
  7817  0028                     	ds	2
  7818  002A                     ??_FRT_GetMicros:
  7819                           
  7820                           ; 1 bytes @ 0xA
  7821  002A                     	ds	1
  7822  002B                     ?_fputs:
  7823  002B                     fputs@fp:	
  7824                           ; 2 bytes @ 0xB
  7825                           
  7826                           
  7827                           ; 1 bytes @ 0xB
  7828  002B                     	ds	1
  7829  002C                     ??_fputs:
  7830  002C                     ?___lldiv:	
  7831                           ; 1 bytes @ 0xC
  7832                           
  7833  002C                     ___lldiv@divisor:	
  7834                           ; 4 bytes @ 0xC
  7835                           
  7836                           
  7837                           ; 4 bytes @ 0xC
  7838  002C                     	ds	3
  7839  002F                     fputs@c:
  7840                           
  7841                           ; 1 bytes @ 0xF
  7842  002F                     	ds	1
  7843  0030                     ??___lodiv:
  7844  0030                     ??___lomod:	
  7845                           ; 1 bytes @ 0x10
  7846                           
  7847  0030                     fputs@i:	
  7848                           ; 1 bytes @ 0x10
  7849                           
  7850  0030                     ___lldiv@dividend:	
  7851                           ; 2 bytes @ 0x10
  7852                           
  7853                           
  7854                           ; 4 bytes @ 0x10
  7855  0030                     	ds	1
  7856  0031                     ___lomod@counter:
  7857  0031                     ___lodiv@quotient:	
  7858                           ; 1 bytes @ 0x11
  7859                           
  7860                           
  7861                           ; 8 bytes @ 0x11
  7862  0031                     	ds	1
  7863  0032                     fputs@s:
  7864                           
  7865                           ; 1 bytes @ 0x12
  7866  0032                     	ds	1
  7867  0033                     ?_pad:
  7868  0033                     pad@buf:	
  7869                           ; 2 bytes @ 0x13
  7870                           
  7871                           
  7872                           ; 1 bytes @ 0x13
  7873  0033                     	ds	1
  7874  0034                     ??___lldiv:
  7875  0034                     pad@p:	
  7876                           ; 1 bytes @ 0x14
  7877                           
  7878                           
  7879                           ; 2 bytes @ 0x14
  7880  0034                     	ds	1
  7881  0035                     ___lldiv@quotient:
  7882                           
  7883                           ; 4 bytes @ 0x15
  7884  0035                     	ds	1
  7885  0036                     ??_pad:
  7886                           
  7887                           ; 1 bytes @ 0x16
  7888  0036                     	ds	1
  7889  0037                     pad@i:
  7890                           
  7891                           ; 2 bytes @ 0x17
  7892  0037                     	ds	1
  7893  0038                     ??_JSN_Sensor_Trig:
  7894                           
  7895                           ; 1 bytes @ 0x18
  7896  0038                     	ds	1
  7897  0039                     ___lldiv@counter:
  7898  0039                     ___lodiv@counter:	
  7899                           ; 1 bytes @ 0x19
  7900                           
  7901  0039                     pad@w:	
  7902                           ; 1 bytes @ 0x19
  7903                           
  7904                           
  7905                           ; 2 bytes @ 0x19
  7906  0039                     	ds	1
  7907  003A                     ?_JSN_Sensor_GetDistance:
  7908                           
  7909                           ; 2 bytes @ 0x1A
  7910  003A                     	ds	1
  7911  003B                     pad@fp:
  7912                           
  7913                           ; 1 bytes @ 0x1B
  7914  003B                     	ds	1
  7915  003C                     ??_JSN_Sensor_GetDistance:
  7916  003C                     ?_utoa:	
  7917                           ; 1 bytes @ 0x1C
  7918                           
  7919  003C                     JSN_Sensor_Trig@Sensor:	
  7920                           ; 2 bytes @ 0x1C
  7921                           
  7922  003C                     utoa@d:	
  7923                           ; 1 bytes @ 0x1C
  7924                           
  7925                           
  7926                           ; 8 bytes @ 0x1C
  7927  003C                     	ds	2
  7928  003E                     JSN_Sensor_GetDistance@Sensor:
  7929                           
  7930                           ; 1 bytes @ 0x1E
  7931  003E                     	ds	6
  7932  0044                     ??_utoa:
  7933                           
  7934                           ; 1 bytes @ 0x24
  7935  0044                     	ds	1
  7936  0045                     utoa@p:
  7937                           
  7938                           ; 2 bytes @ 0x25
  7939  0045                     	ds	2
  7940  0047                     utoa@fp:
  7941                           
  7942                           ; 1 bytes @ 0x27
  7943  0047                     	ds	1
  7944  0048                     utoa@w:
  7945                           
  7946                           ; 2 bytes @ 0x28
  7947  0048                     	ds	2
  7948  004A                     utoa@n:
  7949                           
  7950                           ; 8 bytes @ 0x2A
  7951  004A                     	ds	8
  7952  0052                     utoa@i:
  7953                           
  7954                           ; 2 bytes @ 0x32
  7955  0052                     	ds	2
  7956  0054                     ?_vfpfcnvrt:
  7957  0054                     vfpfcnvrt@fmt:	
  7958                           ; 2 bytes @ 0x34
  7959                           
  7960                           
  7961                           ; 1 bytes @ 0x34
  7962  0054                     	ds	1
  7963  0055                     vfpfcnvrt@ap:
  7964                           
  7965                           ; 1 bytes @ 0x35
  7966  0055                     	ds	1
  7967  0056                     ??_vfpfcnvrt:
  7968                           
  7969                           ; 1 bytes @ 0x36
  7970  0056                     	ds	5
  7971  005B                     vfpfcnvrt@llu:
  7972                           
  7973                           ; 8 bytes @ 0x3B
  7974  005B                     	ds	8
  7975  0063                     vfpfcnvrt@fp:
  7976                           
  7977                           ; 1 bytes @ 0x43
  7978  0063                     	ds	1
  7979  0064                     ?_vfprintf:
  7980  0064                     vfprintf@fmt:	
  7981                           ; 2 bytes @ 0x44
  7982                           
  7983                           
  7984                           ; 2 bytes @ 0x44
  7985  0064                     	ds	2
  7986  0066                     vfprintf@ap:
  7987                           
  7988                           ; 1 bytes @ 0x46
  7989  0066                     	ds	1
  7990  0067                     ??_vfprintf:
  7991                           
  7992                           ; 1 bytes @ 0x47
  7993  0067                     	ds	2
  7994  0069                     vfprintf@fp:
  7995                           
  7996                           ; 1 bytes @ 0x49
  7997  0069                     	ds	1
  7998  006A                     vfprintf@cfmt:
  7999                           
  8000                           ; 2 bytes @ 0x4A
  8001  006A                     	ds	2
  8002  006C                     ?_printf:
  8003  006C                     printf@fmt:	
  8004                           ; 2 bytes @ 0x4C
  8005                           
  8006                           
  8007                           ; 2 bytes @ 0x4C
  8008  006C                     	ds	4
  8009                           
  8010                           	psect	maintext
  8011  00B2                     __pmaintext:	
  8012 ;;
  8013 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  8014 ;;
  8015 ;; *************** function _main *****************
  8016 ;; Defined at:
  8017 ;;		line 142 in file "JSN_Sensor.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;		None
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;  currMilli       4   16[BANK1 ] unsigned long 
  8022 ;;  prevMilli       4   11[BANK1 ] unsigned long 
  8023 ;;  nextSens        1   15[BANK1 ] unsigned char 
  8024 ;;  numSens         1    0        unsigned char 
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  2   64[None  ] int 
  8027 ;; Registers used:
  8028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8029 ;; Tracked objects:
  8030 ;;		On entry : B1F/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8036 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8037 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;Total ram usage:       13 bytes
  8039 ;; Hardware stack levels required when called: 14
  8040 ;; This function calls:
  8041 ;;		_FRT_GetMillis
  8042 ;;		_JSN_Sensor_GetDistance
  8043 ;;		_JSN_Sensor_Init
  8044 ;;		_JSN_Sensor_Trig
  8045 ;;		_PIC16_Init
  8046 ;;		_SetPin
  8047 ;;		_WritePin
  8048 ;;		_printf
  8049 ;; This function is called by:
  8050 ;;		Startup code after reset
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054  00B2                     _main:	
  8055                           ;psect for function _main
  8056                           
  8057  00B2                     l4217:	
  8058                           ;incstack = 0
  8059                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8060                           
  8061                           
  8062                           ;JSN_Sensor.c: 144:     PIC16_Init();
  8063  00B2  318B  2341  3180   	fcall	_PIC16_Init
  8064  00B5                     l4219:
  8065                           
  8066                           ;JSN_Sensor.c: 151:     switch (numSens) {
  8067  00B5  28EF               	goto	l4227
  8068  00B6                     l4221:
  8069                           
  8070                           ;JSN_Sensor.c: 153:             if (JSN_Sensor_Init(&Sens3, B7, A2) == 0xFF)
  8071  00B6  3008               	movlw	8
  8072  00B7  0021               	movlb	1	; select bank1
  8073  00B8  00E2               	movwf	??_main^(0+128)
  8074  00B9  0862               	movf	??_main^(0+128),w
  8075  00BA  00DD               	movwf	JSN_Sensor_Init@trigPin^(0+128)
  8076  00BB  300B               	movlw	11
  8077  00BC  00E3               	movwf	(??_main+1)^(0+128)
  8078  00BD  0863               	movf	(??_main+1)^(0+128),w
  8079  00BE  00DE               	movwf	JSN_Sensor_Init@echoPin^(0+128)
  8080  00BF  3046               	movlw	(low (_Sens3| (0+256)))& (0+255)
  8081  00C0  3185  2514  3180   	fcall	_JSN_Sensor_Init
  8082  00C3  3AFF               	xorlw	255
  8083  00C4  1D03               	skipz
  8084  00C5  28C7               	goto	u1531
  8085  00C6  28C8               	goto	u1530
  8086  00C7                     u1531:
  8087  00C7  28C9               	goto	l4223
  8088  00C8                     u1530:
  8089  00C8                     l68:	
  8090                           ;JSN_Sensor.c: 154:                 while (1);
  8091                           
  8092  00C8                     l69:
  8093  00C8  28C8               	goto	l68
  8094  00C9                     l4223:
  8095                           
  8096                           ;JSN_Sensor.c: 156:             if (JSN_Sensor_Init(&Sens2, A1, C3) == 0xFF)
  8097  00C9  300A               	movlw	10
  8098  00CA  0021               	movlb	1	; select bank1
  8099  00CB  00E2               	movwf	??_main^(0+128)
  8100  00CC  0862               	movf	??_main^(0+128),w
  8101  00CD  00DD               	movwf	JSN_Sensor_Init@trigPin^(0+128)
  8102  00CE  3005               	movlw	5
  8103  00CF  00E3               	movwf	(??_main+1)^(0+128)
  8104  00D0  0863               	movf	(??_main+1)^(0+128),w
  8105  00D1  00DE               	movwf	JSN_Sensor_Init@echoPin^(0+128)
  8106  00D2  304C               	movlw	(low (_Sens2| (0+256)))& (0+255)
  8107  00D3  3185  2514  3180   	fcall	_JSN_Sensor_Init
  8108  00D6  3AFF               	xorlw	255
  8109  00D7  1D03               	skipz
  8110  00D8  28DA               	goto	u1541
  8111  00D9  28DB               	goto	u1540
  8112  00DA                     u1541:
  8113  00DA  28DC               	goto	l4225
  8114  00DB                     u1540:
  8115  00DB                     l73:	
  8116                           ;JSN_Sensor.c: 157:                 while (1);
  8117                           
  8118  00DB                     l74:
  8119  00DB  28DB               	goto	l73
  8120  00DC                     l4225:
  8121                           
  8122                           ;JSN_Sensor.c: 159:             if (JSN_Sensor_Init(&Sens1, C6, C5) == 0xFF)
  8123  00DC  3006               	movlw	6
  8124  00DD  0021               	movlb	1	; select bank1
  8125  00DE  00E2               	movwf	??_main^(0+128)
  8126  00DF  0862               	movf	??_main^(0+128),w
  8127  00E0  00DD               	movwf	JSN_Sensor_Init@trigPin^(0+128)
  8128  00E1  3003               	movlw	3
  8129  00E2  00E3               	movwf	(??_main+1)^(0+128)
  8130  00E3  0863               	movf	(??_main+1)^(0+128),w
  8131  00E4  00DE               	movwf	JSN_Sensor_Init@echoPin^(0+128)
  8132  00E5  3052               	movlw	(low (_Sens1| (0+256)))& (0+255)
  8133  00E6  3185  2514  3180   	fcall	_JSN_Sensor_Init
  8134  00E9  3AFF               	xorlw	255
  8135  00EA  1D03               	skipz
  8136  00EB  28ED               	goto	u1551
  8137  00EC  28EE               	goto	u1550
  8138  00ED                     u1551:
  8139  00ED  28FF               	goto	l4229
  8140  00EE                     u1550:
  8141  00EE                     l78:	
  8142                           ;JSN_Sensor.c: 160:                 while (1);
  8143                           
  8144  00EE                     l79:
  8145  00EE  28EE               	goto	l78
  8146  00EF                     l4227:
  8147                           
  8148                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8149                           ; Switch size 1, requested type "simple"
  8150                           ; Number of cases is 1, Range of values is 0 to 0
  8151                           ; switch strategies available:
  8152                           ; Name         Instructions Cycles
  8153                           ; simple_byte            4     3 (average)
  8154                           ; direct_byte            8     6 (fixed)
  8155                           ; jumptable            260     6 (fixed)
  8156                           ;	Chosen strategy is simple_byte
  8157  00EF  3000               	movlw	0
  8158  00F0  3A00               	xorlw	0	; case 0
  8159  00F1  1903               	skipnz
  8160  00F2  28F4               	goto	l4663
  8161  00F3  28FF               	goto	l4229
  8162  00F4                     l4663:
  8163                           
  8164                           ; Switch size 1, requested type "simple"
  8165                           ; Number of cases is 3, Range of values is 1 to 3
  8166                           ; switch strategies available:
  8167                           ; Name         Instructions Cycles
  8168                           ; simple_byte           10     6 (average)
  8169                           ; direct_byte           15     9 (fixed)
  8170                           ; jumptable            263     9 (fixed)
  8171                           ;	Chosen strategy is simple_byte
  8172  00F4  3003               	movlw	3
  8173  00F5  3A01               	xorlw	1	; case 1
  8174  00F6  1903               	skipnz
  8175  00F7  28DC               	goto	l4225
  8176  00F8  3A03               	xorlw	3	; case 2
  8177  00F9  1903               	skipnz
  8178  00FA  28C9               	goto	l4223
  8179  00FB  3A01               	xorlw	1	; case 3
  8180  00FC  1903               	skipnz
  8181  00FD  28B6               	goto	l4221
  8182  00FE  28FF               	goto	l4229
  8183  00FF                     l4229:
  8184                           
  8185                           ;JSN_Sensor.c: 165:     unsigned long prevMilli = 0;
  8186  00FF  3000               	movlw	0
  8187  0100  0021               	movlb	1	; select bank1
  8188  0101  00E9               	movwf	(main@prevMilli+3)^(0+128)
  8189  0102  3000               	movlw	0
  8190  0103  00E8               	movwf	(main@prevMilli+2)^(0+128)
  8191  0104  3000               	movlw	0
  8192  0105  00E7               	movwf	(main@prevMilli+1)^(0+128)
  8193  0106  3000               	movlw	0
  8194  0107  00E6               	movwf	main@prevMilli^(0+128)
  8195  0108                     l4231:
  8196                           
  8197                           ;JSN_Sensor.c: 166:     uint8_t nextSens = 1;
  8198  0108  01EA               	clrf	main@nextSens^(0+128)
  8199  0109  0AEA               	incf	main@nextSens^(0+128),f
  8200  010A                     l4233:
  8201                           
  8202                           ;JSN_Sensor.c: 169:     SetPin(C0, 0);
  8203  010A  0020               	movlb	0	; select bank0
  8204  010B  01A0               	clrf	SetPin@io
  8205  010C  300C               	movlw	12
  8206  010D  3184  2459  3180   	fcall	_SetPin
  8207  0110                     l4235:
  8208                           
  8209                           ;JSN_Sensor.c: 170:     WritePin(C0, 0);
  8210  0110  0020               	movlb	0	; select bank0
  8211  0111  01A0               	clrf	WritePin@val
  8212  0112  300C               	movlw	12
  8213  0113  3183  239E  3180   	fcall	_WritePin
  8214  0116                     l4237:
  8215                           
  8216                           ;JSN_Sensor.c: 172:     JSN_Sensor_Trig(&Sens3);
  8217  0116  3046               	movlw	(low (_Sens3| (0+256)))& (0+255)
  8218  0117  3187  2799  3180   	fcall	_JSN_Sensor_Trig
  8219  011A                     l4239:
  8220                           
  8221                           ;JSN_Sensor.c: 173:     currMilli = FRT_GetMillis();
  8222  011A  318B  230E  3180   	fcall	_FRT_GetMillis
  8223  011D  0020               	movlb	0	; select bank0
  8224  011E  0823               	movf	?_FRT_GetMillis+3,w
  8225  011F  0021               	movlb	1	; select bank1
  8226  0120  00EE               	movwf	(main@currMilli+3)^(0+128)
  8227  0121  0020               	movlb	0	; select bank0
  8228  0122  0822               	movf	?_FRT_GetMillis+2,w
  8229  0123  0021               	movlb	1	; select bank1
  8230  0124  00ED               	movwf	(main@currMilli+2)^(0+128)
  8231  0125  0020               	movlb	0	; select bank0
  8232  0126  0821               	movf	?_FRT_GetMillis+1,w
  8233  0127  0021               	movlb	1	; select bank1
  8234  0128  00EC               	movwf	(main@currMilli+1)^(0+128)
  8235  0129  0020               	movlb	0	; select bank0
  8236  012A  0820               	movf	?_FRT_GetMillis,w
  8237  012B  0021               	movlb	1	; select bank1
  8238  012C  00EB               	movwf	main@currMilli^(0+128)
  8239  012D                     l4241:
  8240                           
  8241                           ;JSN_Sensor.c: 174:     prevMilli = currMilli;
  8242  012D  0021               	movlb	1	; select bank1
  8243  012E  086E               	movf	(main@currMilli+3)^(0+128),w
  8244  012F  00E9               	movwf	(main@prevMilli+3)^(0+128)
  8245  0130  086D               	movf	(main@currMilli+2)^(0+128),w
  8246  0131  00E8               	movwf	(main@prevMilli+2)^(0+128)
  8247  0132  086C               	movf	(main@currMilli+1)^(0+128),w
  8248  0133  00E7               	movwf	(main@prevMilli+1)^(0+128)
  8249  0134  086B               	movf	main@currMilli^(0+128),w
  8250  0135  00E6               	movwf	main@prevMilli^(0+128)
  8251  0136                     l4243:
  8252                           
  8253                           ;JSN_Sensor.c: 178:         currMilli = FRT_GetMillis();
  8254  0136  318B  230E  3180   	fcall	_FRT_GetMillis
  8255  0139  0020               	movlb	0	; select bank0
  8256  013A  0823               	movf	?_FRT_GetMillis+3,w
  8257  013B  0021               	movlb	1	; select bank1
  8258  013C  00EE               	movwf	(main@currMilli+3)^(0+128)
  8259  013D  0020               	movlb	0	; select bank0
  8260  013E  0822               	movf	?_FRT_GetMillis+2,w
  8261  013F  0021               	movlb	1	; select bank1
  8262  0140  00ED               	movwf	(main@currMilli+2)^(0+128)
  8263  0141  0020               	movlb	0	; select bank0
  8264  0142  0821               	movf	?_FRT_GetMillis+1,w
  8265  0143  0021               	movlb	1	; select bank1
  8266  0144  00EC               	movwf	(main@currMilli+1)^(0+128)
  8267  0145  0020               	movlb	0	; select bank0
  8268  0146  0820               	movf	?_FRT_GetMillis,w
  8269  0147  0021               	movlb	1	; select bank1
  8270  0148  00EB               	movwf	main@currMilli^(0+128)
  8271  0149                     l4245:
  8272                           
  8273                           ;JSN_Sensor.c: 181:         if ((currMilli - prevMilli) >= 50) {
  8274  0149  0866               	movf	main@prevMilli^(0+128),w
  8275  014A  026B               	subwf	main@currMilli^(0+128),w
  8276  014B  00E2               	movwf	??_main^(0+128)
  8277  014C  0867               	movf	(main@prevMilli+1)^(0+128),w
  8278  014D  3B6C               	subwfb	(main@currMilli+1)^(0+128),w
  8279  014E  00E3               	movwf	(??_main^(0+128)+1)
  8280  014F  0868               	movf	(main@prevMilli+2)^(0+128),w
  8281  0150  3B6D               	subwfb	(main@currMilli+2)^(0+128),w
  8282  0151  00E4               	movwf	(??_main^(0+128)+2)
  8283  0152  0869               	movf	(main@prevMilli+3)^(0+128),w
  8284  0153  3B6E               	subwfb	(main@currMilli+3)^(0+128),w
  8285  0154  00E5               	movwf	(??_main^(0+128)+3)
  8286  0155  0865               	movf	(??_main^(0+128)+3),w
  8287  0156  1D03               	btfss	3,2
  8288  0157  2964               	goto	u1560
  8289  0158  0864               	movf	(??_main^(0+128)+2),w
  8290  0159  1D03               	btfss	3,2
  8291  015A  2964               	goto	u1560
  8292  015B  0863               	movf	(??_main^(0+128)+1),w
  8293  015C  1D03               	btfss	3,2
  8294  015D  2964               	goto	u1560
  8295  015E  3032               	movlw	50
  8296  015F  0262               	subwf	??_main^(0+128),w
  8297  0160  1C03               	btfss	3,0
  8298  0161  2963               	goto	u1561
  8299  0162  2964               	goto	u1560
  8300  0163                     u1561:
  8301  0163  2936               	goto	l4243
  8302  0164                     u1560:
  8303  0164  29B4               	goto	l4261
  8304  0165                     l4249:
  8305                           
  8306                           ;JSN_Sensor.c: 189:                     JSN_Sensor_Trig(&Sens1);
  8307  0165  3052               	movlw	(low (_Sens1| (0+256)))& (0+255)
  8308  0166  3187  2799  3180   	fcall	_JSN_Sensor_Trig
  8309                           
  8310                           ;JSN_Sensor.c: 190:                     printf("%u", JSN_Sensor_GetDistance(&Sens3));
  8311  0169  306C               	movlw	low (STR_3| (0+32768))
  8312  016A  0020               	movlb	0	; select bank0
  8313  016B  00EC               	movwf	printf@fmt
  8314  016C  3090               	movlw	high (STR_3| (0+32768))
  8315  016D  00ED               	movwf	printf@fmt+1
  8316  016E  3046               	movlw	(low (_Sens3| (0+256)))& (0+255)
  8317  016F  318E  268F  3180   	fcall	_JSN_Sensor_GetDistance
  8318  0172  0020               	movlb	0	; select bank0
  8319  0173  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  8320  0174  00EF               	movwf	?_printf+3
  8321  0175  083A               	movf	?_JSN_Sensor_GetDistance,w
  8322  0176  00EE               	movwf	?_printf+2
  8323  0177  318B  2353  3180   	fcall	_printf
  8324  017A                     l4251:
  8325                           
  8326                           ;JSN_Sensor.c: 191:                     nextSens = 2;
  8327  017A  3002               	movlw	2
  8328  017B  0021               	movlb	1	; select bank1
  8329  017C  00E2               	movwf	??_main^(0+128)
  8330  017D  0862               	movf	??_main^(0+128),w
  8331  017E  00EA               	movwf	main@nextSens^(0+128)
  8332                           
  8333                           ;JSN_Sensor.c: 192:                     break;
  8334  017F  29C8               	goto	l4263
  8335  0180                     l4253:
  8336                           
  8337                           ;JSN_Sensor.c: 195:                     JSN_Sensor_Trig(&Sens2);
  8338  0180  304C               	movlw	(low (_Sens2| (0+256)))& (0+255)
  8339  0181  3187  2799  3180   	fcall	_JSN_Sensor_Trig
  8340                           
  8341                           ;JSN_Sensor.c: 196:                     printf("%u", JSN_Sensor_GetDistance(&Sens1));
  8342  0184  306C               	movlw	low (STR_3| (0+32768))
  8343  0185  0020               	movlb	0	; select bank0
  8344  0186  00EC               	movwf	printf@fmt
  8345  0187  3090               	movlw	high (STR_3| (0+32768))
  8346  0188  00ED               	movwf	printf@fmt+1
  8347  0189  3052               	movlw	(low (_Sens1| (0+256)))& (0+255)
  8348  018A  318E  268F  3180   	fcall	_JSN_Sensor_GetDistance
  8349  018D  0020               	movlb	0	; select bank0
  8350  018E  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  8351  018F  00EF               	movwf	?_printf+3
  8352  0190  083A               	movf	?_JSN_Sensor_GetDistance,w
  8353  0191  00EE               	movwf	?_printf+2
  8354  0192  318B  2353  3180   	fcall	_printf
  8355  0195                     l4255:
  8356                           
  8357                           ;JSN_Sensor.c: 197:                     nextSens = 3;
  8358  0195  3003               	movlw	3
  8359  0196  0021               	movlb	1	; select bank1
  8360  0197  00E2               	movwf	??_main^(0+128)
  8361  0198  0862               	movf	??_main^(0+128),w
  8362  0199  00EA               	movwf	main@nextSens^(0+128)
  8363                           
  8364                           ;JSN_Sensor.c: 198:                     break;
  8365  019A  29C8               	goto	l4263
  8366  019B                     l4257:
  8367                           
  8368                           ;JSN_Sensor.c: 201:                     JSN_Sensor_Trig(&Sens3);
  8369  019B  3046               	movlw	(low (_Sens3| (0+256)))& (0+255)
  8370  019C  3187  2799  3180   	fcall	_JSN_Sensor_Trig
  8371                           
  8372                           ;JSN_Sensor.c: 202:                     printf("%u", JSN_Sensor_GetDistance(&Sens2));
  8373  019F  306C               	movlw	low (STR_3| (0+32768))
  8374  01A0  0020               	movlb	0	; select bank0
  8375  01A1  00EC               	movwf	printf@fmt
  8376  01A2  3090               	movlw	high (STR_3| (0+32768))
  8377  01A3  00ED               	movwf	printf@fmt+1
  8378  01A4  304C               	movlw	(low (_Sens2| (0+256)))& (0+255)
  8379  01A5  318E  268F  3180   	fcall	_JSN_Sensor_GetDistance
  8380  01A8  0020               	movlb	0	; select bank0
  8381  01A9  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  8382  01AA  00EF               	movwf	?_printf+3
  8383  01AB  083A               	movf	?_JSN_Sensor_GetDistance,w
  8384  01AC  00EE               	movwf	?_printf+2
  8385  01AD  318B  2353  3180   	fcall	_printf
  8386  01B0                     l4259:
  8387                           
  8388                           ;JSN_Sensor.c: 203:                     nextSens = 1;
  8389  01B0  0021               	movlb	1	; select bank1
  8390  01B1  01EA               	clrf	main@nextSens^(0+128)
  8391  01B2  0AEA               	incf	main@nextSens^(0+128),f
  8392                           
  8393                           ;JSN_Sensor.c: 204:             }
  8394  01B3  29C8               	goto	l4263
  8395  01B4                     l4261:
  8396  01B4  0021               	movlb	1	; select bank1
  8397  01B5  086A               	movf	main@nextSens^(0+128),w
  8398  01B6  00E2               	movwf	??_main^(0+128)
  8399  01B7  01E3               	clrf	(??_main^(0+128)+1)
  8400                           
  8401                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8402                           ; Switch size 1, requested type "simple"
  8403                           ; Number of cases is 1, Range of values is 0 to 0
  8404                           ; switch strategies available:
  8405                           ; Name         Instructions Cycles
  8406                           ; simple_byte            4     3 (average)
  8407                           ; direct_byte            8     6 (fixed)
  8408                           ; jumptable            260     6 (fixed)
  8409                           ;	Chosen strategy is simple_byte
  8410  01B8  0863               	movf	(??_main+1)^(0+128),w
  8411  01B9  3A00               	xorlw	0	; case 0
  8412  01BA  1903               	skipnz
  8413  01BB  29BD               	goto	l4665
  8414  01BC  29C8               	goto	l4263
  8415  01BD                     l4665:
  8416                           
  8417                           ; Switch size 1, requested type "simple"
  8418                           ; Number of cases is 3, Range of values is 1 to 3
  8419                           ; switch strategies available:
  8420                           ; Name         Instructions Cycles
  8421                           ; simple_byte           10     6 (average)
  8422                           ; direct_byte           15     9 (fixed)
  8423                           ; jumptable            263     9 (fixed)
  8424                           ;	Chosen strategy is simple_byte
  8425  01BD  0862               	movf	??_main^(0+128),w
  8426  01BE  3A01               	xorlw	1	; case 1
  8427  01BF  1903               	skipnz
  8428  01C0  2965               	goto	l4249
  8429  01C1  3A03               	xorlw	3	; case 2
  8430  01C2  1903               	skipnz
  8431  01C3  2980               	goto	l4253
  8432  01C4  3A01               	xorlw	1	; case 3
  8433  01C5  1903               	skipnz
  8434  01C6  299B               	goto	l4257
  8435  01C7  29C8               	goto	l4263
  8436  01C8                     l4263:
  8437                           
  8438                           ;JSN_Sensor.c: 207:             if ((Sens1.distance < 500) || (Sens2.distance < 500)) {
  8439  01C8  3001               	movlw	1
  8440  01C9  0022               	movlb	2	; select bank2
  8441  01CA  0255               	subwf	((_Sens1+1)^(0+256)+2),w
  8442  01CB  30F4               	movlw	244
  8443  01CC  1903               	skipnz
  8444  01CD  0254               	subwf	(_Sens1^(0+256)+2),w
  8445  01CE  1C03               	skipc
  8446  01CF  29D1               	goto	u1571
  8447  01D0  29D2               	goto	u1570
  8448  01D1                     u1571:
  8449  01D1  29DB               	goto	l4267
  8450  01D2                     u1570:
  8451  01D2                     l4265:
  8452  01D2  3001               	movlw	1
  8453  01D3  024F               	subwf	((_Sens2+1)^(0+256)+2),w
  8454  01D4  30F4               	movlw	244
  8455  01D5  1903               	skipnz
  8456  01D6  024E               	subwf	(_Sens2^(0+256)+2),w
  8457  01D7  1803               	skipnc
  8458  01D8  29DA               	goto	u1581
  8459  01D9  29DB               	goto	u1580
  8460  01DA                     u1581:
  8461  01DA  29E3               	goto	l4269
  8462  01DB                     u1580:
  8463  01DB                     l4267:
  8464                           
  8465                           ;JSN_Sensor.c: 208:                 WritePin(C0, 1);
  8466  01DB  0020               	movlb	0	; select bank0
  8467  01DC  01A0               	clrf	WritePin@val
  8468  01DD  0AA0               	incf	WritePin@val,f
  8469  01DE  300C               	movlw	12
  8470  01DF  3183  239E  3180   	fcall	_WritePin
  8471                           
  8472                           ;JSN_Sensor.c: 209:             } else {
  8473  01E2  292D               	goto	l4241
  8474  01E3                     l4269:
  8475                           
  8476                           ;JSN_Sensor.c: 210:                 WritePin(C0, 0);
  8477  01E3  0020               	movlb	0	; select bank0
  8478  01E4  01A0               	clrf	WritePin@val
  8479  01E5  300C               	movlw	12
  8480  01E6  3183  239E  3180   	fcall	_WritePin
  8481  01E9  292D               	goto	l4241
  8482  01EA  3180  2890         	ljmp	start
  8483  01EC                     __end_of_main:
  8484                           
  8485                           	psect	text1
  8486  0B41                     __ptext1:	
  8487 ;; *************** function _PIC16_Init *****************
  8488 ;; Defined at:
  8489 ;;		line 16 in file "PIC16Xpress_DevBoard.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;		None
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;		None
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  1    wreg      void 
  8496 ;; Registers used:
  8497 ;;		wreg, status,2, status,0, pclath, cstack
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8507 ;;Total ram usage:        0 bytes
  8508 ;; Hardware stack levels used: 1
  8509 ;; Hardware stack levels required when called: 7
  8510 ;; This function calls:
  8511 ;;		_SYSTEM_Initialize
  8512 ;; This function is called by:
  8513 ;;		_main
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517  0B41                     _PIC16_Init:	
  8518                           ;psect for function _PIC16_Init
  8519                           
  8520  0B41                     l4115:	
  8521                           ;incstack = 0
  8522                           ; Regs used in _PIC16_Init: [wreg+status,2+status,0+pclath+cstack]
  8523                           
  8524                           
  8525                           ;PIC16Xpress_DevBoard.c: 18:     PIE0 = 0x00;
  8526  0B41  0021               	movlb	1	; select bank1
  8527  0B42  0190               	clrf	16	;volatile
  8528                           
  8529                           ;PIC16Xpress_DevBoard.c: 19:     PIE1 = 0x00;
  8530  0B43  0191               	clrf	17	;volatile
  8531                           
  8532                           ;PIC16Xpress_DevBoard.c: 20:     PIE2 = 0x00;
  8533  0B44  0192               	clrf	18	;volatile
  8534                           
  8535                           ;PIC16Xpress_DevBoard.c: 21:     PIE3 = 0x00;
  8536  0B45  0193               	clrf	19	;volatile
  8537                           
  8538                           ;PIC16Xpress_DevBoard.c: 22:     PIE4 = 0x00;
  8539  0B46  0194               	clrf	20	;volatile
  8540                           
  8541                           ;PIC16Xpress_DevBoard.c: 25:     PIR0 = 0x00;
  8542  0B47  0020               	movlb	0	; select bank0
  8543  0B48  0190               	clrf	16	;volatile
  8544                           
  8545                           ;PIC16Xpress_DevBoard.c: 26:     PIR1 = 0x00;
  8546  0B49  0191               	clrf	17	;volatile
  8547                           
  8548                           ;PIC16Xpress_DevBoard.c: 27:     PIR2 = 0x00;
  8549  0B4A  0192               	clrf	18	;volatile
  8550                           
  8551                           ;PIC16Xpress_DevBoard.c: 28:     PIR3 = 0x00;
  8552  0B4B  0193               	clrf	19	;volatile
  8553                           
  8554                           ;PIC16Xpress_DevBoard.c: 29:     PIR4 = 0x00;
  8555  0B4C  0194               	clrf	20	;volatile
  8556  0B4D                     l4117:
  8557                           
  8558                           ;PIC16Xpress_DevBoard.c: 32:     SYSTEM_Initialize();
  8559  0B4D  318C  24A9  318B   	fcall	_SYSTEM_Initialize
  8560  0B50                     l4119:
  8561                           
  8562                           ;PIC16Xpress_DevBoard.c: 35:     (INTCONbits.PEIE = 1);
  8563  0B50  170B               	bsf	11,6	;volatile
  8564  0B51                     l4121:
  8565                           
  8566                           ;PIC16Xpress_DevBoard.c: 36:     (INTCONbits.GIE = 1);
  8567  0B51  178B               	bsf	11,7	;volatile
  8568  0B52                     l140:
  8569  0B52  0008               	return
  8570  0B53                     __end_of_PIC16_Init:
  8571                           
  8572                           	psect	text2
  8573  0CA9                     __ptext2:	
  8574 ;; *************** function _SYSTEM_Initialize *****************
  8575 ;; Defined at:
  8576 ;;		line 15 in file "mcc.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;		None
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;		None
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  1    wreg      void 
  8583 ;; Registers used:
  8584 ;;		wreg, status,2, status,0, pclath, cstack
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8594 ;;Total ram usage:        0 bytes
  8595 ;; Hardware stack levels used: 1
  8596 ;; Hardware stack levels required when called: 6
  8597 ;; This function calls:
  8598 ;;		_CCP1_Initialize
  8599 ;;		_CCP2_Initialize
  8600 ;;		_CCP3_Initialize
  8601 ;;		_CCP4_Initialize
  8602 ;;		_EUSART_Initialize
  8603 ;;		_OSCILLATOR_Initialize
  8604 ;;		_PIN_MANAGER_Initialize
  8605 ;;		_PMD_Initialize
  8606 ;;		_PWM5_Initialize
  8607 ;;		_TMR0_Initialize
  8608 ;;		_TMR1_Initialize
  8609 ;;		_TMR2_Initialize
  8610 ;;		_TMR3_Initialize
  8611 ;;		_WDT_Initialize
  8612 ;; This function is called by:
  8613 ;;		_PIC16_Init
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           
  8617  0CA9                     _SYSTEM_Initialize:	
  8618                           ;psect for function _SYSTEM_Initialize
  8619                           
  8620  0CA9                     l3927:	
  8621                           ;incstack = 0
  8622                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8623                           
  8624                           
  8625                           ;mcc.c: 16:     PMD_Initialize();
  8626  0CA9  318A  22AD  318C   	fcall	_PMD_Initialize
  8627                           
  8628                           ;mcc.c: 17:     PIN_MANAGER_Initialize();
  8629  0CAC  318E  2617  318C   	fcall	_PIN_MANAGER_Initialize
  8630                           
  8631                           ;mcc.c: 18:     OSCILLATOR_Initialize();
  8632  0CAF  318A  22C2  318C   	fcall	_OSCILLATOR_Initialize
  8633                           
  8634                           ;mcc.c: 19:     WDT_Initialize();
  8635  0CB2  318A  2212  318C   	fcall	_WDT_Initialize
  8636                           
  8637                           ;mcc.c: 20:     CCP3_Initialize();
  8638  0CB5  318B  23F0  318C   	fcall	_CCP3_Initialize
  8639                           
  8640                           ;mcc.c: 21:     CCP1_Initialize();
  8641  0CB8  318B  23C0  318C   	fcall	_CCP1_Initialize
  8642                           
  8643                           ;mcc.c: 22:     TMR2_Initialize();
  8644  0CBB  318A  2237  318C   	fcall	_TMR2_Initialize
  8645                           
  8646                           ;mcc.c: 23:     TMR0_Initialize();
  8647  0CBE  318B  23AA  318C   	fcall	_TMR0_Initialize
  8648                           
  8649                           ;mcc.c: 24:     CCP2_Initialize();
  8650  0CC1  318B  23D8  318C   	fcall	_CCP2_Initialize
  8651                           
  8652                           ;mcc.c: 25:     CCP4_Initialize();
  8653  0CC4  318B  231F  318C   	fcall	_CCP4_Initialize
  8654  0CC7                     l3929:
  8655                           
  8656                           ;mcc.c: 26:     TMR3_Initialize();
  8657  0CC7  318A  22CE  318C   	fcall	_TMR3_Initialize
  8658  0CCA                     l3931:
  8659                           
  8660                           ;mcc.c: 27:     PWM5_Initialize();
  8661  0CCA  3187  27F2  318C   	fcall	_PWM5_Initialize
  8662  0CCD                     l3933:
  8663                           
  8664                           ;mcc.c: 28:     TMR1_Initialize();
  8665  0CCD  318B  2330  318C   	fcall	_TMR1_Initialize
  8666  0CD0                     l3935:
  8667                           
  8668                           ;mcc.c: 29:     EUSART_Initialize();
  8669  0CD0  318F  2715  318C   	fcall	_EUSART_Initialize
  8670  0CD3                     l269:
  8671  0CD3  0008               	return
  8672  0CD4                     __end_of_SYSTEM_Initialize:
  8673                           
  8674                           	psect	text3
  8675  0A12                     __ptext3:	
  8676 ;; *************** function _WDT_Initialize *****************
  8677 ;; Defined at:
  8678 ;;		line 52 in file "mcc.c"
  8679 ;; Parameters:    Size  Location     Type
  8680 ;;		None
  8681 ;; Auto vars:     Size  Location     Type
  8682 ;;		None
  8683 ;; Return value:  Size  Location     Type
  8684 ;;                  1    wreg      void 
  8685 ;; Registers used:
  8686 ;;		wreg
  8687 ;; Tracked objects:
  8688 ;;		On entry : 0/0
  8689 ;;		On exit  : 0/0
  8690 ;;		Unchanged: 0/0
  8691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8696 ;;Total ram usage:        0 bytes
  8697 ;; Hardware stack levels used: 1
  8698 ;; Hardware stack levels required when called: 4
  8699 ;; This function calls:
  8700 ;;		Nothing
  8701 ;; This function is called by:
  8702 ;;		_SYSTEM_Initialize
  8703 ;; This function uses a non-reentrant model
  8704 ;;
  8705                           
  8706  0A12                     _WDT_Initialize:	
  8707                           ;psect for function _WDT_Initialize
  8708                           
  8709  0A12                     l3551:	
  8710                           ;incstack = 0
  8711                           ; Regs used in _WDT_Initialize: [wreg]
  8712                           
  8713                           
  8714                           ;mcc.c: 54:     WDTCON = 0x16;
  8715  0A12  3016               	movlw	22
  8716  0A13  0021               	movlb	1	; select bank1
  8717  0A14  0097               	movwf	23	;volatile
  8718  0A15                     l278:
  8719  0A15  0008               	return
  8720  0A16                     __end_of_WDT_Initialize:
  8721                           
  8722                           	psect	text4
  8723  0ACE                     __ptext4:	
  8724 ;; *************** function _TMR3_Initialize *****************
  8725 ;; Defined at:
  8726 ;;		line 25 in file "tmr3.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;		None
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;		None
  8731 ;; Return value:  Size  Location     Type
  8732 ;;                  1    wreg      void 
  8733 ;; Registers used:
  8734 ;;		status,2
  8735 ;; Tracked objects:
  8736 ;;		On entry : 0/0
  8737 ;;		On exit  : 0/0
  8738 ;;		Unchanged: 0/0
  8739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8744 ;;Total ram usage:        0 bytes
  8745 ;; Hardware stack levels used: 1
  8746 ;; Hardware stack levels required when called: 4
  8747 ;; This function calls:
  8748 ;;		Nothing
  8749 ;; This function is called by:
  8750 ;;		_SYSTEM_Initialize
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754  0ACE                     _TMR3_Initialize:	
  8755                           ;psect for function _TMR3_Initialize
  8756                           
  8757  0ACE                     l3631:	
  8758                           ;incstack = 0
  8759                           ; Regs used in _TMR3_Initialize: [status,2]
  8760                           
  8761                           
  8762                           ;tmr3.c: 28:     T3GCON = 0x00;
  8763  0ACE  0028               	movlb	8	; select bank8
  8764  0ACF  0194               	clrf	20	;volatile
  8765                           
  8766                           ;tmr3.c: 31:     TMR3H = 0x00;
  8767  0AD0  0192               	clrf	18	;volatile
  8768                           
  8769                           ;tmr3.c: 34:     TMR3L = 0x00;
  8770  0AD1  0191               	clrf	17	;volatile
  8771  0AD2                     l3633:
  8772                           
  8773                           ;tmr3.c: 37:     PIR3bits.TMR3IF = 0;
  8774  0AD2  0020               	movlb	0	; select bank0
  8775  0AD3  1213               	bcf	19,4	;volatile
  8776                           
  8777                           ;tmr3.c: 40:     timer3ReloadVal = 0x0000;
  8778  0AD4  0021               	movlb	1	; select bank1
  8779  0AD5  01A8               	clrf	_timer3ReloadVal^(0+128)	;volatile
  8780  0AD6  01A9               	clrf	(_timer3ReloadVal+1)^(0+128)	;volatile
  8781  0AD7                     l3635:
  8782                           
  8783                           ;tmr3.c: 43:     PIE3bits.TMR3IE = 1;
  8784  0AD7  1613               	bsf	19,4	;volatile
  8785                           
  8786                           ;tmr3.c: 46:     T3CON = 0x00;
  8787  0AD8  0028               	movlb	8	; select bank8
  8788  0AD9  0193               	clrf	19	;volatile
  8789  0ADA                     l975:
  8790  0ADA  0008               	return
  8791  0ADB                     __end_of_TMR3_Initialize:
  8792                           
  8793                           	psect	text5
  8794  0A37                     __ptext5:	
  8795 ;; *************** function _TMR2_Initialize *****************
  8796 ;; Defined at:
  8797 ;;		line 17 in file "tmr2.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;		None
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;		None
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  1    wreg      void 
  8804 ;; Registers used:
  8805 ;;		wreg, status,2
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8815 ;;Total ram usage:        0 bytes
  8816 ;; Hardware stack levels used: 1
  8817 ;; Hardware stack levels required when called: 4
  8818 ;; This function calls:
  8819 ;;		Nothing
  8820 ;; This function is called by:
  8821 ;;		_SYSTEM_Initialize
  8822 ;; This function uses a non-reentrant model
  8823 ;;
  8824                           
  8825  0A37                     _TMR2_Initialize:	
  8826                           ;psect for function _TMR2_Initialize
  8827                           
  8828  0A37                     l3585:	
  8829                           ;incstack = 0
  8830                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8831                           
  8832                           
  8833                           ;tmr2.c: 20:     PR2 = 0xF9;
  8834  0A37  30F9               	movlw	249
  8835  0A38  0020               	movlb	0	; select bank0
  8836  0A39  009E               	movwf	30	;volatile
  8837  0A3A                     l3587:
  8838                           
  8839                           ;tmr2.c: 23:     TMR2 = 0x00;
  8840  0A3A  019D               	clrf	29	;volatile
  8841  0A3B                     l3589:
  8842                           
  8843                           ;tmr2.c: 26:     PIR1bits.TMR2IF = 0;
  8844  0A3B  1091               	bcf	17,1	;volatile
  8845  0A3C                     l3591:
  8846                           
  8847                           ;tmr2.c: 29:     T2CON = 0x04;
  8848  0A3C  3004               	movlw	4
  8849  0A3D  009F               	movwf	31	;volatile
  8850  0A3E                     l935:
  8851  0A3E  0008               	return
  8852  0A3F                     __end_of_TMR2_Initialize:
  8853                           
  8854                           	psect	text6
  8855  0B30                     __ptext6:	
  8856 ;; *************** function _TMR1_Initialize *****************
  8857 ;; Defined at:
  8858 ;;		line 19 in file "tmr1.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;		None
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;		None
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  1    wreg      void 
  8865 ;; Registers used:
  8866 ;;		wreg, status,2
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8876 ;;Total ram usage:        0 bytes
  8877 ;; Hardware stack levels used: 1
  8878 ;; Hardware stack levels required when called: 4
  8879 ;; This function calls:
  8880 ;;		Nothing
  8881 ;; This function is called by:
  8882 ;;		_SYSTEM_Initialize
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           
  8886  0B30                     _TMR1_Initialize:	
  8887                           ;psect for function _TMR1_Initialize
  8888                           
  8889  0B30                     l3649:	
  8890                           ;incstack = 0
  8891                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  8892                           
  8893                           
  8894                           ;tmr1.c: 24:     T1GCON = 0x00;
  8895  0B30  0020               	movlb	0	; select bank0
  8896  0B31  019C               	clrf	28	;volatile
  8897                           
  8898                           ;tmr1.c: 27:     TMR1H = 0x00;
  8899  0B32  019A               	clrf	26	;volatile
  8900                           
  8901                           ;tmr1.c: 30:     TMR1L = 0x00;
  8902  0B33  0199               	clrf	25	;volatile
  8903  0B34                     l3651:
  8904                           
  8905                           ;tmr1.c: 33:     PIR1bits.TMR1IF = 0;
  8906  0B34  1011               	bcf	17,0	;volatile
  8907  0B35                     l3653:
  8908                           
  8909                           ;tmr1.c: 36:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8910  0B35  081A               	movf	26,w	;volatile
  8911  0B36  0021               	movlb	1	; select bank1
  8912  0B37  00BB               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  8913  0B38  0020               	movlb	0	; select bank0
  8914  0B39  0819               	movf	25,w	;volatile
  8915  0B3A  0021               	movlb	1	; select bank1
  8916  0B3B  00BA               	movwf	_timer1ReloadVal^(0+128)	;volatile
  8917  0B3C                     l3655:
  8918                           
  8919                           ;tmr1.c: 39:     PIE1bits.TMR1IE = 1;
  8920  0B3C  1411               	bsf	17,0	;volatile
  8921  0B3D                     l3657:
  8922                           
  8923                           ;tmr1.c: 42:     T1CON = 0b00100001;
  8924  0B3D  3021               	movlw	33
  8925  0B3E  0020               	movlb	0	; select bank0
  8926  0B3F  009B               	movwf	27	;volatile
  8927  0B40                     l500:
  8928  0B40  0008               	return
  8929  0B41                     __end_of_TMR1_Initialize:
  8930                           
  8931                           	psect	text7
  8932  0BAA                     __ptext7:	
  8933 ;; *************** function _TMR0_Initialize *****************
  8934 ;; Defined at:
  8935 ;;		line 19 in file "tmr0.c"
  8936 ;; Parameters:    Size  Location     Type
  8937 ;;		None
  8938 ;; Auto vars:     Size  Location     Type
  8939 ;;		None
  8940 ;; Return value:  Size  Location     Type
  8941 ;;                  1    wreg      void 
  8942 ;; Registers used:
  8943 ;;		wreg, status,2, status,0, pclath, cstack
  8944 ;; Tracked objects:
  8945 ;;		On entry : 0/0
  8946 ;;		On exit  : 0/0
  8947 ;;		Unchanged: 0/0
  8948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8953 ;;Total ram usage:        0 bytes
  8954 ;; Hardware stack levels used: 1
  8955 ;; Hardware stack levels required when called: 5
  8956 ;; This function calls:
  8957 ;;		_TMR0_SetInterruptHandler
  8958 ;; This function is called by:
  8959 ;;		_SYSTEM_Initialize
  8960 ;; This function uses a non-reentrant model
  8961 ;;
  8962                           
  8963  0BAA                     _TMR0_Initialize:	
  8964                           ;psect for function _TMR0_Initialize
  8965                           
  8966  0BAA                     l3593:	
  8967                           ;incstack = 0
  8968                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8969                           
  8970                           
  8971                           ;tmr0.c: 22:     T0CON1 = 0x42;
  8972  0BAA  3042               	movlw	66
  8973  0BAB  0020               	movlb	0	; select bank0
  8974  0BAC  0098               	movwf	24	;volatile
  8975                           
  8976                           ;tmr0.c: 25:     TMR0H = 0xF9;
  8977  0BAD  30F9               	movlw	249
  8978  0BAE  0096               	movwf	22	;volatile
  8979  0BAF                     l3595:
  8980                           
  8981                           ;tmr0.c: 28:     TMR0L = 0x00;
  8982  0BAF  0195               	clrf	21	;volatile
  8983  0BB0                     l3597:
  8984                           
  8985                           ;tmr0.c: 31:     PIR0bits.TMR0IF = 0;
  8986  0BB0  1290               	bcf	16,5	;volatile
  8987  0BB1                     l3599:
  8988                           
  8989                           ;tmr0.c: 34:     PIE0bits.TMR0IE = 1;
  8990  0BB1  0021               	movlb	1	; select bank1
  8991  0BB2  1690               	bsf	16,5	;volatile
  8992  0BB3                     l3601:
  8993                           
  8994                           ;tmr0.c: 37:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  8995  0BB3  3000               	movlw	0
  8996  0BB4  0020               	movlb	0	; select bank0
  8997  0BB5  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8998  0BB6  3000               	movlw	0
  8999  0BB7  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9000  0BB8  318A  2290  318B   	fcall	_TMR0_SetInterruptHandler
  9001  0BBB                     l3603:
  9002                           
  9003                           ;tmr0.c: 40:     T0CON0 = 0x80;
  9004  0BBB  3080               	movlw	128
  9005  0BBC  0020               	movlb	0	; select bank0
  9006  0BBD  0097               	movwf	23	;volatile
  9007  0BBE                     l3605:
  9008                           
  9009                           ;tmr0.c: 41:     CountCallBack = 0;
  9010  0BBE  01FD               	clrf	_CountCallBack	;volatile
  9011  0BBF                     l312:
  9012  0BBF  0008               	return
  9013  0BC0                     __end_of_TMR0_Initialize:
  9014                           
  9015                           	psect	text8
  9016  0A90                     __ptext8:	
  9017 ;; *************** function _TMR0_SetInterruptHandler *****************
  9018 ;; Defined at:
  9019 ;;		line 117 in file "tmr0.c"
  9020 ;; Parameters:    Size  Location     Type
  9021 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9022 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  9023 ;; Auto vars:     Size  Location     Type
  9024 ;;		None
  9025 ;; Return value:  Size  Location     Type
  9026 ;;                  1    wreg      void 
  9027 ;; Registers used:
  9028 ;;		wreg
  9029 ;; Tracked objects:
  9030 ;;		On entry : 0/0
  9031 ;;		On exit  : 0/0
  9032 ;;		Unchanged: 0/0
  9033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9034 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9037 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9038 ;;Total ram usage:        2 bytes
  9039 ;; Hardware stack levels used: 1
  9040 ;; Hardware stack levels required when called: 4
  9041 ;; This function calls:
  9042 ;;		Nothing
  9043 ;; This function is called by:
  9044 ;;		_TMR0_Initialize
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048  0A90                     _TMR0_SetInterruptHandler:	
  9049                           ;psect for function _TMR0_SetInterruptHandler
  9050                           
  9051  0A90                     l3345:	
  9052                           ;incstack = 0
  9053                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  9054                           
  9055                           
  9056                           ;tmr0.c: 118:     TMR0_InterruptHandler = InterruptHandler;
  9057  0A90  0020               	movlb	0	; select bank0
  9058  0A91  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  9059  0A92  0021               	movlb	1	; select bank1
  9060  0A93  00CF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  9061  0A94  0020               	movlb	0	; select bank0
  9062  0A95  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  9063  0A96  0021               	movlb	1	; select bank1
  9064  0A97  00CE               	movwf	_TMR0_InterruptHandler^(0+128)
  9065  0A98                     l337:
  9066  0A98  0008               	return
  9067  0A99                     __end_of_TMR0_SetInterruptHandler:
  9068                           
  9069                           	psect	text9
  9070  07F2                     __ptext9:	
  9071 ;; *************** function _PWM5_Initialize *****************
  9072 ;; Defined at:
  9073 ;;		line 16 in file "pwm5.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;		None
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;		None
  9078 ;; Return value:  Size  Location     Type
  9079 ;;                  1    wreg      void 
  9080 ;; Registers used:
  9081 ;;		wreg, status,2, status,0
  9082 ;; Tracked objects:
  9083 ;;		On entry : 0/0
  9084 ;;		On exit  : 0/0
  9085 ;;		Unchanged: 0/0
  9086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9091 ;;Total ram usage:        0 bytes
  9092 ;; Hardware stack levels used: 1
  9093 ;; Hardware stack levels required when called: 4
  9094 ;; This function calls:
  9095 ;;		Nothing
  9096 ;; This function is called by:
  9097 ;;		_SYSTEM_Initialize
  9098 ;; This function uses a non-reentrant model
  9099 ;;
  9100                           
  9101  07F2                     _PWM5_Initialize:	
  9102                           ;psect for function _PWM5_Initialize
  9103                           
  9104  07F2                     l3637:	
  9105                           ;incstack = 0
  9106                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
  9107                           
  9108                           
  9109                           ;pwm5.c: 18:     PWM5CON = 0x80;
  9110  07F2  3080               	movlw	128
  9111  07F3  002C               	movlb	12	; select bank12
  9112  07F4  0099               	movwf	25	;volatile
  9113  07F5                     l3639:
  9114                           
  9115                           ;pwm5.c: 21:     PWM5DCH = 0x00;
  9116  07F5  0198               	clrf	24	;volatile
  9117  07F6                     l3641:
  9118                           
  9119                           ;pwm5.c: 24:     PWM5DCL = 0x00;
  9120  07F6  0197               	clrf	23	;volatile
  9121  07F7                     l3643:
  9122                           
  9123                           ;pwm5.c: 27:     PWMTMRSbits.P5TSEL = 1;
  9124  07F7  081F               	movf	31,w	;volatile
  9125  07F8  39FC               	andlw	-4
  9126  07F9  3801               	iorlw	1
  9127  07FA  009F               	movwf	31	;volatile
  9128  07FB                     l3645:
  9129                           
  9130                           ;pwm5.c: 30:     TRISBbits.TRISB6 = 0;
  9131  07FB  0021               	movlb	1	; select bank1
  9132  07FC  130D               	bcf	13,6	;volatile
  9133  07FD                     l3647:
  9134                           
  9135                           ;pwm5.c: 31:     LATBbits.LATB6 = 0;
  9136  07FD  0022               	movlb	2	; select bank2
  9137  07FE  130D               	bcf	13,6	;volatile
  9138  07FF                     l919:
  9139  07FF  0008               	return
  9140  0800                     __end_of_PWM5_Initialize:
  9141                           
  9142                           	psect	text10
  9143  0AAD                     __ptext10:	
  9144 ;; *************** function _PMD_Initialize *****************
  9145 ;; Defined at:
  9146 ;;		line 59 in file "mcc.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;		None
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;		None
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  1    wreg      void 
  9153 ;; Registers used:
  9154 ;;		wreg, status,2
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9164 ;;Total ram usage:        0 bytes
  9165 ;; Hardware stack levels used: 1
  9166 ;; Hardware stack levels required when called: 4
  9167 ;; This function calls:
  9168 ;;		Nothing
  9169 ;; This function is called by:
  9170 ;;		_SYSTEM_Initialize
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174  0AAD                     _PMD_Initialize:	
  9175                           ;psect for function _PMD_Initialize
  9176                           
  9177  0AAD                     l3495:	
  9178                           ;incstack = 0
  9179                           ; Regs used in _PMD_Initialize: [wreg+status,2]
  9180                           
  9181                           
  9182                           ;mcc.c: 62:     PMD0 = 0x00;
  9183  0AAD  0032               	movlb	18	; select bank18
  9184  0AAE  0191               	clrf	17	;volatile
  9185                           
  9186                           ;mcc.c: 63:     PMD1 = 0x00;
  9187  0AAF  0192               	clrf	18	;volatile
  9188  0AB0                     l3497:
  9189                           
  9190                           ;mcc.c: 66:     PMD2 = 0x66;
  9191  0AB0  3066               	movlw	102
  9192  0AB1  0093               	movwf	19	;volatile
  9193  0AB2                     l3499:
  9194                           
  9195                           ;mcc.c: 67:     PMD3 = 0x00;
  9196  0AB2  0194               	clrf	20	;volatile
  9197  0AB3                     l3501:
  9198                           
  9199                           ;mcc.c: 68:     PMD4 = 0x00;
  9200  0AB3  0195               	clrf	21	;volatile
  9201  0AB4                     l3503:
  9202                           
  9203                           ;mcc.c: 71:     PMD5 = 0x1F;
  9204  0AB4  301F               	movlw	31
  9205  0AB5  0096               	movwf	22	;volatile
  9206  0AB6                     l281:
  9207  0AB6  0008               	return
  9208  0AB7                     __end_of_PMD_Initialize:
  9209                           
  9210                           	psect	text11
  9211  0E17                     __ptext11:	
  9212 ;; *************** function _PIN_MANAGER_Initialize *****************
  9213 ;; Defined at:
  9214 ;;		line 14 in file "pin_manager.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;		None
  9217 ;; Auto vars:     Size  Location     Type
  9218 ;;		None
  9219 ;; Return value:  Size  Location     Type
  9220 ;;                  1    wreg      void 
  9221 ;; Registers used:
  9222 ;;		wreg, status,2
  9223 ;; Tracked objects:
  9224 ;;		On entry : 0/0
  9225 ;;		On exit  : 0/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;Total ram usage:        0 bytes
  9233 ;; Hardware stack levels used: 1
  9234 ;; Hardware stack levels required when called: 4
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		_SYSTEM_Initialize
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242  0E17                     _PIN_MANAGER_Initialize:	
  9243                           ;psect for function _PIN_MANAGER_Initialize
  9244                           
  9245  0E17                     l3505:	
  9246                           ;incstack = 0
  9247                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9248                           
  9249                           
  9250                           ;pin_manager.c: 19:     LATA = 0x00;
  9251  0E17  0022               	movlb	2	; select bank2
  9252  0E18  018C               	clrf	12	;volatile
  9253                           
  9254                           ;pin_manager.c: 20:     LATB = 0x00;
  9255  0E19  018D               	clrf	13	;volatile
  9256                           
  9257                           ;pin_manager.c: 21:     LATC = 0x00;
  9258  0E1A  018E               	clrf	14	;volatile
  9259  0E1B                     l3507:
  9260                           
  9261                           ;pin_manager.c: 26:     TRISA = 0x37;
  9262  0E1B  3037               	movlw	55
  9263  0E1C  0021               	movlb	1	; select bank1
  9264  0E1D  008C               	movwf	12	;volatile
  9265  0E1E                     l3509:
  9266                           
  9267                           ;pin_manager.c: 27:     TRISB = 0xF0;
  9268  0E1E  30F0               	movlw	240
  9269  0E1F  008D               	movwf	13	;volatile
  9270  0E20                     l3511:
  9271                           
  9272                           ;pin_manager.c: 28:     TRISC = 0xEF;
  9273  0E20  30EF               	movlw	239
  9274  0E21  008E               	movwf	14	;volatile
  9275  0E22                     l3513:
  9276                           
  9277                           ;pin_manager.c: 33:     ANSELC = 0xD7;
  9278  0E22  30D7               	movlw	215
  9279  0E23  0023               	movlb	3	; select bank3
  9280  0E24  008E               	movwf	14	;volatile
  9281  0E25                     l3515:
  9282                           
  9283                           ;pin_manager.c: 34:     ANSELB = 0xD0;
  9284  0E25  30D0               	movlw	208
  9285  0E26  008D               	movwf	13	;volatile
  9286  0E27                     l3517:
  9287                           
  9288                           ;pin_manager.c: 35:     ANSELA = 0x33;
  9289  0E27  3033               	movlw	51
  9290  0E28  008C               	movwf	12	;volatile
  9291                           
  9292                           ;pin_manager.c: 40:     WPUB = 0x00;
  9293  0E29  0024               	movlb	4	; select bank4
  9294  0E2A  018D               	clrf	13	;volatile
  9295                           
  9296                           ;pin_manager.c: 41:     WPUA = 0x00;
  9297  0E2B  018C               	clrf	12	;volatile
  9298                           
  9299                           ;pin_manager.c: 42:     WPUC = 0x00;
  9300  0E2C  018E               	clrf	14	;volatile
  9301                           
  9302                           ;pin_manager.c: 47:     ODCONA = 0x00;
  9303  0E2D  0025               	movlb	5	; select bank5
  9304  0E2E  018C               	clrf	12	;volatile
  9305                           
  9306                           ;pin_manager.c: 48:     ODCONB = 0x00;
  9307  0E2F  018D               	clrf	13	;volatile
  9308                           
  9309                           ;pin_manager.c: 49:     ODCONC = 0x00;
  9310  0E30  018E               	clrf	14	;volatile
  9311  0E31                     l3519:
  9312                           
  9313                           ;pin_manager.c: 54:     SLRCONA = 0x37;
  9314  0E31  3037               	movlw	55
  9315  0E32  0026               	movlb	6	; select bank6
  9316  0E33  008C               	movwf	12	;volatile
  9317  0E34                     l3521:
  9318                           
  9319                           ;pin_manager.c: 55:     SLRCONB = 0xF0;
  9320  0E34  30F0               	movlw	240
  9321  0E35  008D               	movwf	13	;volatile
  9322  0E36                     l3523:
  9323                           
  9324                           ;pin_manager.c: 56:     SLRCONC = 0xFF;
  9325  0E36  30FF               	movlw	255
  9326  0E37  008E               	movwf	14	;volatile
  9327  0E38                     l3525:
  9328                           
  9329                           ;pin_manager.c: 61:     INLVLA = 0x3F;
  9330  0E38  303F               	movlw	63
  9331  0E39  0027               	movlb	7	; select bank7
  9332  0E3A  008C               	movwf	12	;volatile
  9333  0E3B                     l3527:
  9334                           
  9335                           ;pin_manager.c: 62:     INLVLB = 0xF0;
  9336  0E3B  30F0               	movlw	240
  9337  0E3C  008D               	movwf	13	;volatile
  9338  0E3D                     l3529:
  9339                           
  9340                           ;pin_manager.c: 63:     INLVLC = 0xFF;
  9341  0E3D  30FF               	movlw	255
  9342  0E3E  008E               	movwf	14	;volatile
  9343  0E3F                     l3531:
  9344                           
  9345                           ;pin_manager.c: 66:     RXPPS = 0x0D;
  9346  0E3F  300D               	movlw	13
  9347  0E40  003C               	movlb	28	; select bank28
  9348  0E41  00A4               	movwf	36	;volatile
  9349  0E42                     l3533:
  9350                           
  9351                           ;pin_manager.c: 67:     RC4PPS = 0x14;
  9352  0E42  3014               	movlw	20
  9353  0E43  003D               	movlb	29	; select bank29
  9354  0E44  00A4               	movwf	36	;volatile
  9355  0E45                     l3535:
  9356                           
  9357                           ;pin_manager.c: 69:     CCP1PPS = 0x15;
  9358  0E45  3015               	movlw	21
  9359  0E46  003C               	movlb	28	; select bank28
  9360  0E47  0094               	movwf	20	;volatile
  9361  0E48                     l3537:
  9362                           
  9363                           ;pin_manager.c: 70:     CCP2PPS = 0x13;
  9364  0E48  3013               	movlw	19
  9365  0E49  0095               	movwf	21	;volatile
  9366  0E4A                     l3539:
  9367                           
  9368                           ;pin_manager.c: 71:     CCP3PPS = 0x02;
  9369  0E4A  3002               	movlw	2
  9370  0E4B  0096               	movwf	22	;volatile
  9371  0E4C                     l3541:
  9372                           
  9373                           ;pin_manager.c: 73:     RC1PPS = 0x0F;
  9374  0E4C  300F               	movlw	15
  9375  0E4D  003D               	movlb	29	; select bank29
  9376  0E4E  00A1               	movwf	33	;volatile
  9377  0E4F                     l3543:
  9378                           
  9379                           ;pin_manager.c: 74:     RB6PPS = 0x02;
  9380  0E4F  3002               	movlw	2
  9381  0E50  009E               	movwf	30	;volatile
  9382  0E51                     l788:
  9383  0E51  0008               	return
  9384  0E52                     __end_of_PIN_MANAGER_Initialize:
  9385                           
  9386                           	psect	text12
  9387  0AC2                     __ptext12:	
  9388 ;; *************** function _OSCILLATOR_Initialize *****************
  9389 ;; Defined at:
  9390 ;;		line 34 in file "mcc.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;		None
  9393 ;; Auto vars:     Size  Location     Type
  9394 ;;		None
  9395 ;; Return value:  Size  Location     Type
  9396 ;;                  1    wreg      void 
  9397 ;; Registers used:
  9398 ;;		wreg, status,2
  9399 ;; Tracked objects:
  9400 ;;		On entry : 0/0
  9401 ;;		On exit  : 0/0
  9402 ;;		Unchanged: 0/0
  9403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9408 ;;Total ram usage:        0 bytes
  9409 ;; Hardware stack levels used: 1
  9410 ;; Hardware stack levels required when called: 4
  9411 ;; This function calls:
  9412 ;;		Nothing
  9413 ;; This function is called by:
  9414 ;;		_SYSTEM_Initialize
  9415 ;; This function uses a non-reentrant model
  9416 ;;
  9417                           
  9418  0AC2                     _OSCILLATOR_Initialize:	
  9419                           ;psect for function _OSCILLATOR_Initialize
  9420                           
  9421  0AC2                     l3545:	
  9422                           ;incstack = 0
  9423                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9424                           
  9425                           
  9426                           ;mcc.c: 36:     OSCCON1 = 0x00;
  9427  0AC2  0032               	movlb	18	; select bank18
  9428  0AC3  0199               	clrf	25	;volatile
  9429                           
  9430                           ;mcc.c: 38:     OSCCON3 = 0x00;
  9431  0AC4  019B               	clrf	27	;volatile
  9432                           
  9433                           ;mcc.c: 40:     OSCEN = 0x00;
  9434  0AC5  019D               	clrf	29	;volatile
  9435  0AC6                     l3547:
  9436                           
  9437                           ;mcc.c: 42:     OSCFRQ = 0x04;
  9438  0AC6  3004               	movlw	4
  9439  0AC7  009F               	movwf	31	;volatile
  9440  0AC8                     l3549:
  9441                           
  9442                           ;mcc.c: 44:     OSCTUNE = 0x00;
  9443  0AC8  019E               	clrf	30	;volatile
  9444  0AC9                     l272:	
  9445                           ;mcc.c: 47:     }
  9446                           
  9447                           
  9448                           ;mcc.c: 46:     while (PLLR == 0) {
  9449  0AC9  1C1C               	btfss	28,0	;volatile
  9450  0ACA  2ACC               	goto	u1241
  9451  0ACB  2ACD               	goto	u1240
  9452  0ACC                     u1241:
  9453  0ACC  2AC9               	goto	l272
  9454  0ACD                     u1240:
  9455  0ACD                     l275:
  9456  0ACD  0008               	return
  9457  0ACE                     __end_of_OSCILLATOR_Initialize:
  9458                           
  9459                           	psect	text13
  9460  0F15                     __ptext13:	
  9461 ;; *************** function _EUSART_Initialize *****************
  9462 ;; Defined at:
  9463 ;;		line 45 in file "eusart.c"
  9464 ;; Parameters:    Size  Location     Type
  9465 ;;		None
  9466 ;; Auto vars:     Size  Location     Type
  9467 ;;		None
  9468 ;; Return value:  Size  Location     Type
  9469 ;;                  1    wreg      void 
  9470 ;; Registers used:
  9471 ;;		wreg, status,2, status,0, pclath, cstack
  9472 ;; Tracked objects:
  9473 ;;		On entry : 0/0
  9474 ;;		On exit  : 0/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9479 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9480 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9481 ;;Total ram usage:        1 bytes
  9482 ;; Hardware stack levels used: 1
  9483 ;; Hardware stack levels required when called: 5
  9484 ;; This function calls:
  9485 ;;		_EUSART_SetErrorHandler
  9486 ;;		_EUSART_SetFramingErrorHandler
  9487 ;;		_EUSART_SetOverrunErrorHandler
  9488 ;;		_EUSART_SetRxInterruptHandler
  9489 ;;		_EUSART_SetTxInterruptHandler
  9490 ;; This function is called by:
  9491 ;;		_SYSTEM_Initialize
  9492 ;; This function uses a non-reentrant model
  9493 ;;
  9494                           
  9495  0F15                     _EUSART_Initialize:	
  9496                           ;psect for function _EUSART_Initialize
  9497                           
  9498  0F15                     l3659:	
  9499                           ;incstack = 0
  9500                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9501                           
  9502                           
  9503                           ;eusart.c: 48:     PIE1bits.RCIE = 0;
  9504  0F15  0021               	movlb	1	; select bank1
  9505  0F16  1291               	bcf	17,5	;volatile
  9506  0F17                     l3661:
  9507                           
  9508                           ;eusart.c: 49:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  9509  0F17  3052               	movlw	low _EUSART_Receive_ISR
  9510  0F18  0020               	movlb	0	; select bank0
  9511  0F19  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  9512  0F1A  300E               	movlw	high _EUSART_Receive_ISR
  9513  0F1B  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  9514  0F1C  318A  227E  318F   	fcall	_EUSART_SetRxInterruptHandler
  9515  0F1F                     l3663:
  9516                           
  9517                           ;eusart.c: 50:     PIE1bits.TXIE = 0;
  9518  0F1F  0021               	movlb	1	; select bank1
  9519  0F20  1211               	bcf	17,4	;volatile
  9520                           
  9521                           ;eusart.c: 51:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  9522  0F21  305E               	movlw	low _EUSART_Transmit_ISR
  9523  0F22  0020               	movlb	0	; select bank0
  9524  0F23  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  9525  0F24  300C               	movlw	high _EUSART_Transmit_ISR
  9526  0F25  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  9527  0F26  318A  2287  318F   	fcall	_EUSART_SetTxInterruptHandler
  9528  0F29                     l3665:
  9529                           
  9530                           ;eusart.c: 55:     BAUD1CON = 0x08;
  9531  0F29  3008               	movlw	8
  9532  0F2A  0023               	movlb	3	; select bank3
  9533  0F2B  009F               	movwf	31	;volatile
  9534  0F2C                     l3667:
  9535                           
  9536                           ;eusart.c: 58:     RC1STA = 0x90;
  9537  0F2C  3090               	movlw	144
  9538  0F2D  009D               	movwf	29	;volatile
  9539  0F2E                     l3669:
  9540                           
  9541                           ;eusart.c: 61:     TX1STA = 0x24;
  9542  0F2E  3024               	movlw	36
  9543  0F2F  009E               	movwf	30	;volatile
  9544  0F30                     l3671:
  9545                           
  9546                           ;eusart.c: 64:     SP1BRGL = 0xA0;
  9547  0F30  30A0               	movlw	160
  9548  0F31  009B               	movwf	27	;volatile
  9549  0F32                     l3673:
  9550                           
  9551                           ;eusart.c: 67:     SP1BRGH = 0x01;
  9552  0F32  3001               	movlw	1
  9553  0F33  009C               	movwf	28	;volatile
  9554  0F34                     l3675:
  9555                           
  9556                           ;eusart.c: 70:     EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  9557  0F34  3003               	movlw	low _EUSART_DefaultFramingErrorHandler
  9558  0F35  0020               	movlb	0	; select bank0
  9559  0F36  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  9560  0F37  300A               	movlw	high _EUSART_DefaultFramingErrorHandler
  9561  0F38  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  9562  0F39  318A  226C  318F   	fcall	_EUSART_SetFramingErrorHandler
  9563  0F3C                     l3677:
  9564                           
  9565                           ;eusart.c: 71:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  9566  0F3C  300E               	movlw	low _EUSART_DefaultOverrunErrorHandler
  9567  0F3D  0020               	movlb	0	; select bank0
  9568  0F3E  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  9569  0F3F  300A               	movlw	high _EUSART_DefaultOverrunErrorHandler
  9570  0F40  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  9571  0F41  318A  2275  318F   	fcall	_EUSART_SetOverrunErrorHandler
  9572  0F44                     l3679:
  9573                           
  9574                           ;eusart.c: 72:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  9575  0F44  300A               	movlw	low _EUSART_DefaultErrorHandler
  9576  0F45  0020               	movlb	0	; select bank0
  9577  0F46  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  9578  0F47  300A               	movlw	high _EUSART_DefaultErrorHandler
  9579  0F48  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  9580  0F49  318A  2263  318F   	fcall	_EUSART_SetErrorHandler
  9581  0F4C                     l3681:
  9582                           
  9583                           ;eusart.c: 74:     eusartRxLastError.status = 0;
  9584  0F4C  0021               	movlb	1	; select bank1
  9585  0F4D  01D0               	clrf	_eusartRxLastError^(0+128)	;volatile
  9586  0F4E                     l3683:
  9587                           
  9588                           ;eusart.c: 77:     eusartTxHead = 0;
  9589  0F4E  01FC               	clrf	_eusartTxHead	;volatile
  9590  0F4F                     l3685:
  9591                           
  9592                           ;eusart.c: 78:     eusartTxTail = 0;
  9593  0F4F  01D3               	clrf	_eusartTxTail^(0+128)	;volatile
  9594  0F50                     l3687:
  9595                           
  9596                           ;eusart.c: 79:     eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  9597  0F50  3008               	movlw	8
  9598  0F51  0020               	movlb	0	; select bank0
  9599  0F52  00A2               	movwf	??_EUSART_Initialize
  9600  0F53  0822               	movf	??_EUSART_Initialize,w
  9601  0F54  0021               	movlb	1	; select bank1
  9602  0F55  00D2               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  9603                           
  9604                           ;eusart.c: 81:     eusartRxHead = 0;
  9605  0F56  01FB               	clrf	_eusartRxHead	;volatile
  9606                           
  9607                           ;eusart.c: 82:     eusartRxTail = 0;
  9608  0F57  01FA               	clrf	_eusartRxTail	;volatile
  9609                           
  9610                           ;eusart.c: 83:     eusartRxCount = 0;
  9611  0F58  01D1               	clrf	_eusartRxCount^(0+128)	;volatile
  9612  0F59                     l3689:
  9613                           
  9614                           ;eusart.c: 86:     PIE1bits.RCIE = 1;
  9615  0F59  1691               	bsf	17,5	;volatile
  9616  0F5A                     l595:
  9617  0F5A  0008               	return
  9618  0F5B                     __end_of_EUSART_Initialize:
  9619                           
  9620                           	psect	text14
  9621  0A87                     __ptext14:	
  9622 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  9623 ;; Defined at:
  9624 ;;		line 278 in file "eusart.c"
  9625 ;; Parameters:    Size  Location     Type
  9626 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9627 ;;		 -> EUSART_Transmit_ISR(1), 
  9628 ;; Auto vars:     Size  Location     Type
  9629 ;;		None
  9630 ;; Return value:  Size  Location     Type
  9631 ;;                  1    wreg      void 
  9632 ;; Registers used:
  9633 ;;		wreg
  9634 ;; Tracked objects:
  9635 ;;		On entry : 0/0
  9636 ;;		On exit  : 0/0
  9637 ;;		Unchanged: 0/0
  9638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9639 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9642 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9643 ;;Total ram usage:        2 bytes
  9644 ;; Hardware stack levels used: 1
  9645 ;; Hardware stack levels required when called: 4
  9646 ;; This function calls:
  9647 ;;		Nothing
  9648 ;; This function is called by:
  9649 ;;		_EUSART_Initialize
  9650 ;; This function uses a non-reentrant model
  9651 ;;
  9652                           
  9653  0A87                     _EUSART_SetTxInterruptHandler:	
  9654                           ;psect for function _EUSART_SetTxInterruptHandler
  9655                           
  9656  0A87                     l3355:	
  9657                           ;incstack = 0
  9658                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  9659                           
  9660                           
  9661                           ;eusart.c: 279:     EUSART_TxDefaultInterruptHandler = interruptHandler;
  9662  0A87  0020               	movlb	0	; select bank0
  9663  0A88  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  9664  0A89  0021               	movlb	1	; select bank1
  9665  0A8A  00B9               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
  9666  0A8B  0020               	movlb	0	; select bank0
  9667  0A8C  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  9668  0A8D  0021               	movlb	1	; select bank1
  9669  0A8E  00B8               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
  9670  0A8F                     l667:
  9671  0A8F  0008               	return
  9672  0A90                     __end_of_EUSART_SetTxInterruptHandler:
  9673                           
  9674                           	psect	text15
  9675  0A7E                     __ptext15:	
  9676 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  9677 ;; Defined at:
  9678 ;;		line 284 in file "eusart.c"
  9679 ;; Parameters:    Size  Location     Type
  9680 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9681 ;;		 -> EUSART_Receive_ISR(1), 
  9682 ;; Auto vars:     Size  Location     Type
  9683 ;;		None
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  1    wreg      void 
  9686 ;; Registers used:
  9687 ;;		wreg
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9693 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9696 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;Total ram usage:        2 bytes
  9698 ;; Hardware stack levels used: 1
  9699 ;; Hardware stack levels required when called: 4
  9700 ;; This function calls:
  9701 ;;		Nothing
  9702 ;; This function is called by:
  9703 ;;		_EUSART_Initialize
  9704 ;; This function uses a non-reentrant model
  9705 ;;
  9706                           
  9707  0A7E                     _EUSART_SetRxInterruptHandler:	
  9708                           ;psect for function _EUSART_SetRxInterruptHandler
  9709                           
  9710  0A7E                     l3353:	
  9711                           ;incstack = 0
  9712                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  9713                           
  9714                           
  9715                           ;eusart.c: 285:     EUSART_RxDefaultInterruptHandler = interruptHandler;
  9716  0A7E  0020               	movlb	0	; select bank0
  9717  0A7F  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  9718  0A80  0021               	movlb	1	; select bank1
  9719  0A81  00B7               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  9720  0A82  0020               	movlb	0	; select bank0
  9721  0A83  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  9722  0A84  0021               	movlb	1	; select bank1
  9723  0A85  00B6               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  9724  0A86                     l670:
  9725  0A86  0008               	return
  9726  0A87                     __end_of_EUSART_SetRxInterruptHandler:
  9727                           
  9728                           	psect	text16
  9729  0A75                     __ptext16:	
  9730 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  9731 ;; Defined at:
  9732 ;;		line 266 in file "eusart.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9735 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;		None
  9738 ;; Return value:  Size  Location     Type
  9739 ;;                  1    wreg      void 
  9740 ;; Registers used:
  9741 ;;		wreg
  9742 ;; Tracked objects:
  9743 ;;		On entry : 0/0
  9744 ;;		On exit  : 0/0
  9745 ;;		Unchanged: 0/0
  9746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9747 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9750 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9751 ;;Total ram usage:        2 bytes
  9752 ;; Hardware stack levels used: 1
  9753 ;; Hardware stack levels required when called: 4
  9754 ;; This function calls:
  9755 ;;		Nothing
  9756 ;; This function is called by:
  9757 ;;		_EUSART_Initialize
  9758 ;; This function uses a non-reentrant model
  9759 ;;
  9760                           
  9761  0A75                     _EUSART_SetOverrunErrorHandler:	
  9762                           ;psect for function _EUSART_SetOverrunErrorHandler
  9763                           
  9764  0A75                     l3359:	
  9765                           ;incstack = 0
  9766                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  9767                           
  9768                           
  9769                           ;eusart.c: 267:     EUSART_OverrunErrorHandler = interruptHandler;
  9770  0A75  0020               	movlb	0	; select bank0
  9771  0A76  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  9772  0A77  0021               	movlb	1	; select bank1
  9773  0A78  00B3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  9774  0A79  0020               	movlb	0	; select bank0
  9775  0A7A  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  9776  0A7B  0021               	movlb	1	; select bank1
  9777  0A7C  00B2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  9778  0A7D                     l661:
  9779  0A7D  0008               	return
  9780  0A7E                     __end_of_EUSART_SetOverrunErrorHandler:
  9781                           
  9782                           	psect	text17
  9783  0A6C                     __ptext17:	
  9784 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  9785 ;; Defined at:
  9786 ;;		line 260 in file "eusart.c"
  9787 ;; Parameters:    Size  Location     Type
  9788 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9789 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;		None
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  1    wreg      void 
  9794 ;; Registers used:
  9795 ;;		wreg
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9801 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9804 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9805 ;;Total ram usage:        2 bytes
  9806 ;; Hardware stack levels used: 1
  9807 ;; Hardware stack levels required when called: 4
  9808 ;; This function calls:
  9809 ;;		Nothing
  9810 ;; This function is called by:
  9811 ;;		_EUSART_Initialize
  9812 ;; This function uses a non-reentrant model
  9813 ;;
  9814                           
  9815  0A6C                     _EUSART_SetFramingErrorHandler:	
  9816                           ;psect for function _EUSART_SetFramingErrorHandler
  9817                           
  9818  0A6C                     l3357:	
  9819                           ;incstack = 0
  9820                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9821                           
  9822                           
  9823                           ;eusart.c: 261:     EUSART_FramingErrorHandler = interruptHandler;
  9824  0A6C  0020               	movlb	0	; select bank0
  9825  0A6D  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  9826  0A6E  0021               	movlb	1	; select bank1
  9827  0A6F  00B5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  9828  0A70  0020               	movlb	0	; select bank0
  9829  0A71  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  9830  0A72  0021               	movlb	1	; select bank1
  9831  0A73  00B4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  9832  0A74                     l658:
  9833  0A74  0008               	return
  9834  0A75                     __end_of_EUSART_SetFramingErrorHandler:
  9835                           
  9836                           	psect	text18
  9837  0A63                     __ptext18:	
  9838 ;; *************** function _EUSART_SetErrorHandler *****************
  9839 ;; Defined at:
  9840 ;;		line 272 in file "eusart.c"
  9841 ;; Parameters:    Size  Location     Type
  9842 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9843 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;		None
  9846 ;; Return value:  Size  Location     Type
  9847 ;;                  1    wreg      void 
  9848 ;; Registers used:
  9849 ;;		wreg
  9850 ;; Tracked objects:
  9851 ;;		On entry : 0/0
  9852 ;;		On exit  : 0/0
  9853 ;;		Unchanged: 0/0
  9854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9855 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9858 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9859 ;;Total ram usage:        2 bytes
  9860 ;; Hardware stack levels used: 1
  9861 ;; Hardware stack levels required when called: 4
  9862 ;; This function calls:
  9863 ;;		Nothing
  9864 ;; This function is called by:
  9865 ;;		_EUSART_Initialize
  9866 ;; This function uses a non-reentrant model
  9867 ;;
  9868                           
  9869  0A63                     _EUSART_SetErrorHandler:	
  9870                           ;psect for function _EUSART_SetErrorHandler
  9871                           
  9872  0A63                     l3361:	
  9873                           ;incstack = 0
  9874                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9875                           
  9876                           
  9877                           ;eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  9878  0A63  0020               	movlb	0	; select bank0
  9879  0A64  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9880  0A65  0021               	movlb	1	; select bank1
  9881  0A66  00B1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  9882  0A67  0020               	movlb	0	; select bank0
  9883  0A68  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9884  0A69  0021               	movlb	1	; select bank1
  9885  0A6A  00B0               	movwf	_EUSART_ErrorHandler^(0+128)
  9886  0A6B                     l664:
  9887  0A6B  0008               	return
  9888  0A6C                     __end_of_EUSART_SetErrorHandler:
  9889                           
  9890                           	psect	text19
  9891  0B1F                     __ptext19:	
  9892 ;; *************** function _CCP4_Initialize *****************
  9893 ;; Defined at:
  9894 ;;		line 18 in file "ccp4.c"
  9895 ;; Parameters:    Size  Location     Type
  9896 ;;		None
  9897 ;; Auto vars:     Size  Location     Type
  9898 ;;		None
  9899 ;; Return value:  Size  Location     Type
  9900 ;;                  1    wreg      void 
  9901 ;; Registers used:
  9902 ;;		wreg, status,2, status,0
  9903 ;; Tracked objects:
  9904 ;;		On entry : 0/0
  9905 ;;		On exit  : 0/0
  9906 ;;		Unchanged: 0/0
  9907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9912 ;;Total ram usage:        0 bytes
  9913 ;; Hardware stack levels used: 1
  9914 ;; Hardware stack levels required when called: 4
  9915 ;; This function calls:
  9916 ;;		Nothing
  9917 ;; This function is called by:
  9918 ;;		_SYSTEM_Initialize
  9919 ;; This function uses a non-reentrant model
  9920 ;;
  9921                           
  9922  0B1F                     _CCP4_Initialize:	
  9923                           ;psect for function _CCP4_Initialize
  9924                           
  9925  0B1F                     l3623:	
  9926                           ;incstack = 0
  9927                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0]
  9928                           
  9929                           
  9930                           ;ccp4.c: 21:  CCP4CON = 0x81;
  9931  0B1F  3081               	movlw	129
  9932  0B20  0026               	movlb	6	; select bank6
  9933  0B21  0097               	movwf	23	;volatile
  9934                           
  9935                           ;ccp4.c: 24:  CCPR4H = 0x11;
  9936  0B22  3011               	movlw	17
  9937  0B23  0096               	movwf	22	;volatile
  9938                           
  9939                           ;ccp4.c: 25:  CCPR4L = 0xC1;
  9940  0B24  30C1               	movlw	193
  9941  0B25  0095               	movwf	21	;volatile
  9942  0B26                     l3625:
  9943                           
  9944                           ;ccp4.c: 28:  CCPTMRSbits.C4TSEL = 0x2;
  9945  0B26  0025               	movlb	5	; select bank5
  9946  0B27  081F               	movf	31,w	;volatile
  9947  0B28  393F               	andlw	-193
  9948  0B29  3880               	iorlw	128
  9949  0B2A  009F               	movwf	31	;volatile
  9950  0B2B                     l3627:
  9951                           
  9952                           ;ccp4.c: 31:     PIR4bits.CCP4IF = 0;
  9953  0B2B  0020               	movlb	0	; select bank0
  9954  0B2C  1194               	bcf	20,3	;volatile
  9955  0B2D                     l3629:
  9956                           
  9957                           ;ccp4.c: 34:     PIE4bits.CCP4IE = 1;
  9958  0B2D  0021               	movlb	1	; select bank1
  9959  0B2E  1594               	bsf	20,3	;volatile
  9960  0B2F                     l895:
  9961  0B2F  0008               	return
  9962  0B30                     __end_of_CCP4_Initialize:
  9963                           
  9964                           	psect	text20
  9965  0BF0                     __ptext20:	
  9966 ;; *************** function _CCP3_Initialize *****************
  9967 ;; Defined at:
  9968 ;;		line 49 in file "ccp3.c"
  9969 ;; Parameters:    Size  Location     Type
  9970 ;;		None
  9971 ;; Auto vars:     Size  Location     Type
  9972 ;;		None
  9973 ;; Return value:  Size  Location     Type
  9974 ;;                  1    wreg      void 
  9975 ;; Registers used:
  9976 ;;		wreg, status,2, status,0, pclath, cstack
  9977 ;; Tracked objects:
  9978 ;;		On entry : 0/0
  9979 ;;		On exit  : 0/0
  9980 ;;		Unchanged: 0/0
  9981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9986 ;;Total ram usage:        0 bytes
  9987 ;; Hardware stack levels used: 1
  9988 ;; Hardware stack levels required when called: 5
  9989 ;; This function calls:
  9990 ;;		_CCP3_SetCallBack
  9991 ;; This function is called by:
  9992 ;;		_SYSTEM_Initialize
  9993 ;; This function uses a non-reentrant model
  9994 ;;
  9995                           
  9996  0BF0                     _CCP3_Initialize:	
  9997                           ;psect for function _CCP3_Initialize
  9998                           
  9999  0BF0                     l3553:	
 10000                           ;incstack = 0
 10001                           ; Regs used in _CCP3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10002                           
 10003                           
 10004                           ;ccp3.c: 52:  CCP3CON = 0x83;
 10005  0BF0  3083               	movlw	131
 10006  0BF1  0026               	movlb	6	; select bank6
 10007  0BF2  0093               	movwf	19	;volatile
 10008  0BF3                     l3555:
 10009                           
 10010                           ;ccp3.c: 55:  CCP3CAP = 0x00;
 10011  0BF3  0194               	clrf	20	;volatile
 10012  0BF4                     l3557:
 10013                           
 10014                           ;ccp3.c: 58:  CCPR3H = 0x00;
 10015  0BF4  0192               	clrf	18	;volatile
 10016  0BF5                     l3559:
 10017                           
 10018                           ;ccp3.c: 61:  CCPR3L = 0x00;
 10019  0BF5  0191               	clrf	17	;volatile
 10020  0BF6                     l3561:
 10021                           
 10022                           ;ccp3.c: 64:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 10023  0BF6  30DC               	movlw	low _CCP3_DefaultCallBack
 10024  0BF7  0020               	movlb	0	; select bank0
 10025  0BF8  00A0               	movwf	CCP3_SetCallBack@customCallBack
 10026  0BF9  300D               	movlw	high _CCP3_DefaultCallBack
 10027  0BFA  00A1               	movwf	CCP3_SetCallBack@customCallBack+1
 10028  0BFB  318A  225A  318B   	fcall	_CCP3_SetCallBack
 10029  0BFE                     l3563:
 10030                           
 10031                           ;ccp3.c: 67:  CCPTMRSbits.C3TSEL = 0x1;
 10032  0BFE  0025               	movlb	5	; select bank5
 10033  0BFF  081F               	movf	31,w	;volatile
 10034  0C00  39CF               	andlw	-49
 10035  0C01  3810               	iorlw	16
 10036  0C02  009F               	movwf	31	;volatile
 10037  0C03                     l3565:
 10038                           
 10039                           ;ccp3.c: 70:     PIR4bits.CCP3IF = 0;
 10040  0C03  0020               	movlb	0	; select bank0
 10041  0C04  1114               	bcf	20,2	;volatile
 10042  0C05                     l3567:
 10043                           
 10044                           ;ccp3.c: 73:     PIE4bits.CCP3IE = 1;
 10045  0C05  0021               	movlb	1	; select bank1
 10046  0C06  1514               	bsf	20,2	;volatile
 10047  0C07                     l475:
 10048  0C07  0008               	return
 10049  0C08                     __end_of_CCP3_Initialize:
 10050                           
 10051                           	psect	text21
 10052  0A5A                     __ptext21:	
 10053 ;; *************** function _CCP3_SetCallBack *****************
 10054 ;; Defined at:
 10055 ;;		line 95 in file "ccp3.c"
 10056 ;; Parameters:    Size  Location     Type
 10057 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10058 ;;		 -> CCP3_DefaultCallBack(1), 
 10059 ;; Auto vars:     Size  Location     Type
 10060 ;;		None
 10061 ;; Return value:  Size  Location     Type
 10062 ;;                  1    wreg      void 
 10063 ;; Registers used:
 10064 ;;		wreg
 10065 ;; Tracked objects:
 10066 ;;		On entry : 0/0
 10067 ;;		On exit  : 0/0
 10068 ;;		Unchanged: 0/0
 10069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10070 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10073 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10074 ;;Total ram usage:        2 bytes
 10075 ;; Hardware stack levels used: 1
 10076 ;; Hardware stack levels required when called: 4
 10077 ;; This function calls:
 10078 ;;		Nothing
 10079 ;; This function is called by:
 10080 ;;		_CCP3_Initialize
 10081 ;; This function uses a non-reentrant model
 10082 ;;
 10083                           
 10084  0A5A                     _CCP3_SetCallBack:	
 10085                           ;psect for function _CCP3_SetCallBack
 10086                           
 10087  0A5A                     l3351:	
 10088                           ;incstack = 0
 10089                           ; Regs used in _CCP3_SetCallBack: [wreg]
 10090                           
 10091                           
 10092                           ;ccp3.c: 96:     CCP3_CallBack = customCallBack;
 10093  0A5A  0020               	movlb	0	; select bank0
 10094  0A5B  0821               	movf	CCP3_SetCallBack@customCallBack+1,w
 10095  0A5C  0021               	movlb	1	; select bank1
 10096  0A5D  00C1               	movwf	(_CCP3_CallBack+1)^(0+128)
 10097  0A5E  0020               	movlb	0	; select bank0
 10098  0A5F  0820               	movf	CCP3_SetCallBack@customCallBack,w
 10099  0A60  0021               	movlb	1	; select bank1
 10100  0A61  00C0               	movwf	_CCP3_CallBack^(0+128)
 10101  0A62                     l481:
 10102  0A62  0008               	return
 10103  0A63                     __end_of_CCP3_SetCallBack:
 10104                           
 10105                           	psect	text22
 10106  0BD8                     __ptext22:	
 10107 ;; *************** function _CCP2_Initialize *****************
 10108 ;; Defined at:
 10109 ;;		line 49 in file "ccp2.c"
 10110 ;; Parameters:    Size  Location     Type
 10111 ;;		None
 10112 ;; Auto vars:     Size  Location     Type
 10113 ;;		None
 10114 ;; Return value:  Size  Location     Type
 10115 ;;                  1    wreg      void 
 10116 ;; Registers used:
 10117 ;;		wreg, status,2, status,0, pclath, cstack
 10118 ;; Tracked objects:
 10119 ;;		On entry : 0/0
 10120 ;;		On exit  : 0/0
 10121 ;;		Unchanged: 0/0
 10122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10127 ;;Total ram usage:        0 bytes
 10128 ;; Hardware stack levels used: 1
 10129 ;; Hardware stack levels required when called: 5
 10130 ;; This function calls:
 10131 ;;		_CCP2_SetCallBack
 10132 ;; This function is called by:
 10133 ;;		_SYSTEM_Initialize
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           
 10137  0BD8                     _CCP2_Initialize:	
 10138                           ;psect for function _CCP2_Initialize
 10139                           
 10140  0BD8                     l3607:	
 10141                           ;incstack = 0
 10142                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10143                           
 10144                           
 10145                           ;ccp2.c: 52:  CCP2CON = 0x83;
 10146  0BD8  3083               	movlw	131
 10147  0BD9  0025               	movlb	5	; select bank5
 10148  0BDA  0097               	movwf	23	;volatile
 10149  0BDB                     l3609:
 10150                           
 10151                           ;ccp2.c: 55:  CCP2CAP = 0x00;
 10152  0BDB  0198               	clrf	24	;volatile
 10153  0BDC                     l3611:
 10154                           
 10155                           ;ccp2.c: 58:  CCPR2H = 0x00;
 10156  0BDC  0196               	clrf	22	;volatile
 10157  0BDD                     l3613:
 10158                           
 10159                           ;ccp2.c: 61:  CCPR2L = 0x00;
 10160  0BDD  0195               	clrf	21	;volatile
 10161  0BDE                     l3615:
 10162                           
 10163                           ;ccp2.c: 64:     CCP2_SetCallBack(CCP2_DefaultCallBack);
 10164  0BDE  30A1               	movlw	low _CCP2_DefaultCallBack
 10165  0BDF  0020               	movlb	0	; select bank0
 10166  0BE0  00A0               	movwf	CCP2_SetCallBack@customCallBack
 10167  0BE1  300D               	movlw	high _CCP2_DefaultCallBack
 10168  0BE2  00A1               	movwf	CCP2_SetCallBack@customCallBack+1
 10169  0BE3  318A  2251  318B   	fcall	_CCP2_SetCallBack
 10170  0BE6                     l3617:
 10171                           
 10172                           ;ccp2.c: 67:  CCPTMRSbits.C2TSEL = 0x1;
 10173  0BE6  0025               	movlb	5	; select bank5
 10174  0BE7  081F               	movf	31,w	;volatile
 10175  0BE8  39F3               	andlw	-13
 10176  0BE9  3804               	iorlw	4
 10177  0BEA  009F               	movwf	31	;volatile
 10178  0BEB                     l3619:
 10179                           
 10180                           ;ccp2.c: 70:     PIR4bits.CCP2IF = 0;
 10181  0BEB  0020               	movlb	0	; select bank0
 10182  0BEC  1094               	bcf	20,1	;volatile
 10183  0BED                     l3621:
 10184                           
 10185                           ;ccp2.c: 73:     PIE4bits.CCP2IE = 1;
 10186  0BED  0021               	movlb	1	; select bank1
 10187  0BEE  1494               	bsf	20,1	;volatile
 10188  0BEF                     l429:
 10189  0BEF  0008               	return
 10190  0BF0                     __end_of_CCP2_Initialize:
 10191                           
 10192                           	psect	text23
 10193  0A51                     __ptext23:	
 10194 ;; *************** function _CCP2_SetCallBack *****************
 10195 ;; Defined at:
 10196 ;;		line 95 in file "ccp2.c"
 10197 ;; Parameters:    Size  Location     Type
 10198 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10199 ;;		 -> CCP2_DefaultCallBack(1), 
 10200 ;; Auto vars:     Size  Location     Type
 10201 ;;		None
 10202 ;; Return value:  Size  Location     Type
 10203 ;;                  1    wreg      void 
 10204 ;; Registers used:
 10205 ;;		wreg
 10206 ;; Tracked objects:
 10207 ;;		On entry : 0/0
 10208 ;;		On exit  : 0/0
 10209 ;;		Unchanged: 0/0
 10210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10211 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10214 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10215 ;;Total ram usage:        2 bytes
 10216 ;; Hardware stack levels used: 1
 10217 ;; Hardware stack levels required when called: 4
 10218 ;; This function calls:
 10219 ;;		Nothing
 10220 ;; This function is called by:
 10221 ;;		_CCP2_Initialize
 10222 ;; This function uses a non-reentrant model
 10223 ;;
 10224                           
 10225  0A51                     _CCP2_SetCallBack:	
 10226                           ;psect for function _CCP2_SetCallBack
 10227                           
 10228  0A51                     l3349:	
 10229                           ;incstack = 0
 10230                           ; Regs used in _CCP2_SetCallBack: [wreg]
 10231                           
 10232                           
 10233                           ;ccp2.c: 96:     CCP2_CallBack = customCallBack;
 10234  0A51  0020               	movlb	0	; select bank0
 10235  0A52  0821               	movf	CCP2_SetCallBack@customCallBack+1,w
 10236  0A53  0021               	movlb	1	; select bank1
 10237  0A54  00C7               	movwf	(_CCP2_CallBack+1)^(0+128)
 10238  0A55  0020               	movlb	0	; select bank0
 10239  0A56  0820               	movf	CCP2_SetCallBack@customCallBack,w
 10240  0A57  0021               	movlb	1	; select bank1
 10241  0A58  00C6               	movwf	_CCP2_CallBack^(0+128)
 10242  0A59                     l435:
 10243  0A59  0008               	return
 10244  0A5A                     __end_of_CCP2_SetCallBack:
 10245                           
 10246                           	psect	text24
 10247  0BC0                     __ptext24:	
 10248 ;; *************** function _CCP1_Initialize *****************
 10249 ;; Defined at:
 10250 ;;		line 49 in file "ccp1.c"
 10251 ;; Parameters:    Size  Location     Type
 10252 ;;		None
 10253 ;; Auto vars:     Size  Location     Type
 10254 ;;		None
 10255 ;; Return value:  Size  Location     Type
 10256 ;;                  1    wreg      void 
 10257 ;; Registers used:
 10258 ;;		wreg, status,2, status,0, pclath, cstack
 10259 ;; Tracked objects:
 10260 ;;		On entry : 0/0
 10261 ;;		On exit  : 0/0
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10268 ;;Total ram usage:        0 bytes
 10269 ;; Hardware stack levels used: 1
 10270 ;; Hardware stack levels required when called: 5
 10271 ;; This function calls:
 10272 ;;		_CCP1_SetCallBack
 10273 ;; This function is called by:
 10274 ;;		_SYSTEM_Initialize
 10275 ;; This function uses a non-reentrant model
 10276 ;;
 10277                           
 10278  0BC0                     _CCP1_Initialize:	
 10279                           ;psect for function _CCP1_Initialize
 10280                           
 10281  0BC0                     l3569:	
 10282                           ;incstack = 0
 10283                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10284                           
 10285                           
 10286                           ;ccp1.c: 52:  CCP1CON = 0x83;
 10287  0BC0  3083               	movlw	131
 10288  0BC1  0025               	movlb	5	; select bank5
 10289  0BC2  0093               	movwf	19	;volatile
 10290  0BC3                     l3571:
 10291                           
 10292                           ;ccp1.c: 55:  CCP1CAP = 0x00;
 10293  0BC3  0194               	clrf	20	;volatile
 10294  0BC4                     l3573:
 10295                           
 10296                           ;ccp1.c: 58:  CCPR1H = 0x00;
 10297  0BC4  0192               	clrf	18	;volatile
 10298  0BC5                     l3575:
 10299                           
 10300                           ;ccp1.c: 61:  CCPR1L = 0x00;
 10301  0BC5  0191               	clrf	17	;volatile
 10302  0BC6                     l3577:
 10303                           
 10304                           ;ccp1.c: 64:     CCP1_SetCallBack(CCP1_DefaultCallBack);
 10305  0BC6  3066               	movlw	low _CCP1_DefaultCallBack
 10306  0BC7  0020               	movlb	0	; select bank0
 10307  0BC8  00A0               	movwf	CCP1_SetCallBack@customCallBack
 10308  0BC9  300D               	movlw	high _CCP1_DefaultCallBack
 10309  0BCA  00A1               	movwf	CCP1_SetCallBack@customCallBack+1
 10310  0BCB  318A  2248  318B   	fcall	_CCP1_SetCallBack
 10311  0BCE                     l3579:
 10312                           
 10313                           ;ccp1.c: 67:  CCPTMRSbits.C1TSEL = 0x1;
 10314  0BCE  0025               	movlb	5	; select bank5
 10315  0BCF  081F               	movf	31,w	;volatile
 10316  0BD0  39FC               	andlw	-4
 10317  0BD1  3801               	iorlw	1
 10318  0BD2  009F               	movwf	31	;volatile
 10319  0BD3                     l3581:
 10320                           
 10321                           ;ccp1.c: 70:     PIR4bits.CCP1IF = 0;
 10322  0BD3  0020               	movlb	0	; select bank0
 10323  0BD4  1014               	bcf	20,0	;volatile
 10324  0BD5                     l3583:
 10325                           
 10326                           ;ccp1.c: 73:     PIE4bits.CCP1IE = 1;
 10327  0BD5  0021               	movlb	1	; select bank1
 10328  0BD6  1414               	bsf	20,0	;volatile
 10329  0BD7                     l383:
 10330  0BD7  0008               	return
 10331  0BD8                     __end_of_CCP1_Initialize:
 10332                           
 10333                           	psect	text25
 10334  0A48                     __ptext25:	
 10335 ;; *************** function _CCP1_SetCallBack *****************
 10336 ;; Defined at:
 10337 ;;		line 95 in file "ccp1.c"
 10338 ;; Parameters:    Size  Location     Type
 10339 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10340 ;;		 -> CCP1_DefaultCallBack(1), 
 10341 ;; Auto vars:     Size  Location     Type
 10342 ;;		None
 10343 ;; Return value:  Size  Location     Type
 10344 ;;                  1    wreg      void 
 10345 ;; Registers used:
 10346 ;;		wreg
 10347 ;; Tracked objects:
 10348 ;;		On entry : 0/0
 10349 ;;		On exit  : 0/0
 10350 ;;		Unchanged: 0/0
 10351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10352 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10355 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10356 ;;Total ram usage:        2 bytes
 10357 ;; Hardware stack levels used: 1
 10358 ;; Hardware stack levels required when called: 4
 10359 ;; This function calls:
 10360 ;;		Nothing
 10361 ;; This function is called by:
 10362 ;;		_CCP1_Initialize
 10363 ;; This function uses a non-reentrant model
 10364 ;;
 10365                           
 10366  0A48                     _CCP1_SetCallBack:	
 10367                           ;psect for function _CCP1_SetCallBack
 10368                           
 10369  0A48                     l3347:	
 10370                           ;incstack = 0
 10371                           ; Regs used in _CCP1_SetCallBack: [wreg]
 10372                           
 10373                           
 10374                           ;ccp1.c: 96:     CCP1_CallBack = customCallBack;
 10375  0A48  0020               	movlb	0	; select bank0
 10376  0A49  0821               	movf	CCP1_SetCallBack@customCallBack+1,w
 10377  0A4A  0021               	movlb	1	; select bank1
 10378  0A4B  00CD               	movwf	(_CCP1_CallBack+1)^(0+128)
 10379  0A4C  0020               	movlb	0	; select bank0
 10380  0A4D  0820               	movf	CCP1_SetCallBack@customCallBack,w
 10381  0A4E  0021               	movlb	1	; select bank1
 10382  0A4F  00CC               	movwf	_CCP1_CallBack^(0+128)
 10383  0A50                     l389:
 10384  0A50  0008               	return
 10385  0A51                     __end_of_CCP1_SetCallBack:
 10386                           
 10387                           	psect	text26
 10388  0799                     __ptext26:	
 10389 ;; *************** function _JSN_Sensor_Trig *****************
 10390 ;; Defined at:
 10391 ;;		line 87 in file "JSN_Sensor.c"
 10392 ;; Parameters:    Size  Location     Type
 10393 ;;  Sensor          1    wreg     PTR struct .
 10394 ;;		 -> Sens1(6), Sens2(6), Sens3(6), 
 10395 ;; Auto vars:     Size  Location     Type
 10396 ;;  Sensor          1   28[BANK0 ] PTR struct .
 10397 ;;		 -> Sens1(6), Sens2(6), Sens3(6), 
 10398 ;; Return value:  Size  Location     Type
 10399 ;;                  1    wreg      void 
 10400 ;; Registers used:
 10401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10402 ;; Tracked objects:
 10403 ;;		On entry : 0/0
 10404 ;;		On exit  : 0/0
 10405 ;;		Unchanged: 0/0
 10406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10408 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10409 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10410 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10411 ;;Total ram usage:        5 bytes
 10412 ;; Hardware stack levels used: 1
 10413 ;; Hardware stack levels required when called: 6
 10414 ;; This function calls:
 10415 ;;		_FRT_GetMicros
 10416 ;;		_WritePin
 10417 ;; This function is called by:
 10418 ;;		_main
 10419 ;; This function uses a non-reentrant model
 10420 ;;
 10421                           
 10422  0799                     _JSN_Sensor_Trig:	
 10423                           ;psect for function _JSN_Sensor_Trig
 10424                           
 10425                           
 10426                           ;incstack = 0
 10427                           ; Regs used in _JSN_Sensor_Trig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10428                           ;JSN_Sensor_Trig@Sensor stored from wreg
 10429  0799  0020               	movlb	0	; select bank0
 10430  079A  00BC               	movwf	JSN_Sensor_Trig@Sensor
 10431  079B                     l4097:
 10432                           
 10433                           ;JSN_Sensor.c: 88:     micros = FRT_GetMicros();
 10434  079B  318F  275B  3187   	fcall	_FRT_GetMicros
 10435  079E  0020               	movlb	0	; select bank0
 10436  079F  0829               	movf	?_FRT_GetMicros+3,w
 10437  07A0  0022               	movlb	2	; select bank2
 10438  07A1  00C3               	movwf	(_micros+3)^(0+256)
 10439  07A2  0020               	movlb	0	; select bank0
 10440  07A3  0828               	movf	?_FRT_GetMicros+2,w
 10441  07A4  0022               	movlb	2	; select bank2
 10442  07A5  00C2               	movwf	(_micros+2)^(0+256)
 10443  07A6  0020               	movlb	0	; select bank0
 10444  07A7  0827               	movf	?_FRT_GetMicros+1,w
 10445  07A8  0022               	movlb	2	; select bank2
 10446  07A9  00C1               	movwf	(_micros+1)^(0+256)
 10447  07AA  0020               	movlb	0	; select bank0
 10448  07AB  0826               	movf	?_FRT_GetMicros,w
 10449  07AC  0022               	movlb	2	; select bank2
 10450  07AD  00C0               	movwf	_micros^(0+256)
 10451  07AE                     l4099:
 10452                           
 10453                           ;JSN_Sensor.c: 91:     WritePin(Sensor->trigPin, 1);
 10454  07AE  0020               	movlb	0	; select bank0
 10455  07AF  01A0               	clrf	WritePin@val
 10456  07B0  0AA0               	incf	WritePin@val,f
 10457  07B1  083C               	movf	JSN_Sensor_Trig@Sensor,w
 10458  07B2  3E04               	addlw	4
 10459  07B3  0086               	movwf	6
 10460  07B4  3001               	movlw	1	; select bank2/3
 10461  07B5  0087               	movwf	7
 10462  07B6  0801               	movf	1,w
 10463  07B7  3183  239E  3187   	fcall	_WritePin
 10464  07BA                     l4101:	
 10465                           ;JSN_Sensor.c: 94:     while ((FRT_GetMicros() - micros) < 11);
 10466                           
 10467  07BA  318F  275B  3187   	fcall	_FRT_GetMicros
 10468  07BD  0022               	movlb	2	; select bank2
 10469  07BE  0840               	movf	_micros^(0+256),w
 10470  07BF  0020               	movlb	0	; select bank0
 10471  07C0  0226               	subwf	?_FRT_GetMicros,w
 10472  07C1  00B8               	movwf	??_JSN_Sensor_Trig
 10473  07C2  0022               	movlb	2	; select bank2
 10474  07C3  0841               	movf	(_micros+1)^(0+256),w
 10475  07C4  0020               	movlb	0	; select bank0
 10476  07C5  3B27               	subwfb	?_FRT_GetMicros+1,w
 10477  07C6  00B9               	movwf	??_JSN_Sensor_Trig+1
 10478  07C7  0022               	movlb	2	; select bank2
 10479  07C8  0842               	movf	(_micros+2)^(0+256),w
 10480  07C9  0020               	movlb	0	; select bank0
 10481  07CA  3B28               	subwfb	?_FRT_GetMicros+2,w
 10482  07CB  00BA               	movwf	??_JSN_Sensor_Trig+2
 10483  07CC  0022               	movlb	2	; select bank2
 10484  07CD  0843               	movf	(_micros+3)^(0+256),w
 10485  07CE  0020               	movlb	0	; select bank0
 10486  07CF  3B29               	subwfb	?_FRT_GetMicros+3,w
 10487  07D0  00BB               	movwf	??_JSN_Sensor_Trig+3
 10488  07D1  083B               	movf	??_JSN_Sensor_Trig+3,w
 10489  07D2  1D03               	btfss	3,2
 10490  07D3  2FE0               	goto	u1440
 10491  07D4  083A               	movf	??_JSN_Sensor_Trig+2,w
 10492  07D5  1D03               	btfss	3,2
 10493  07D6  2FE0               	goto	u1440
 10494  07D7  0839               	movf	??_JSN_Sensor_Trig+1,w
 10495  07D8  1D03               	btfss	3,2
 10496  07D9  2FE0               	goto	u1440
 10497  07DA  300B               	movlw	11
 10498  07DB  0238               	subwf	??_JSN_Sensor_Trig,w
 10499  07DC  1C03               	btfss	3,0
 10500  07DD  2FDF               	goto	u1441
 10501  07DE  2FE0               	goto	u1440
 10502  07DF                     u1441:
 10503  07DF  2FBA               	goto	l4101
 10504  07E0                     u1440:
 10505  07E0                     l4103:
 10506                           
 10507                           ;JSN_Sensor.c: 97:     WritePin(Sensor->trigPin, 0);
 10508  07E0  0020               	movlb	0	; select bank0
 10509  07E1  01A0               	clrf	WritePin@val
 10510  07E2  083C               	movf	JSN_Sensor_Trig@Sensor,w
 10511  07E3  3E04               	addlw	4
 10512  07E4  0086               	movwf	6
 10513  07E5  3001               	movlw	1	; select bank2/3
 10514  07E6  0087               	movwf	7
 10515  07E7  0801               	movf	1,w
 10516  07E8  3183  239E  3187   	fcall	_WritePin
 10517  07EB                     l4105:
 10518                           
 10519                           ;JSN_Sensor.c: 100:     lastTrig = Sensor;
 10520  07EB  0020               	movlb	0	; select bank0
 10521  07EC  083C               	movf	JSN_Sensor_Trig@Sensor,w
 10522  07ED  00B8               	movwf	??_JSN_Sensor_Trig
 10523  07EE  0838               	movf	??_JSN_Sensor_Trig,w
 10524  07EF  0021               	movlb	1	; select bank1
 10525  07F0  00DA               	movwf	_lastTrig^(0+128)
 10526  07F1                     l54:
 10527  07F1  0008               	return
 10528  07F2                     __end_of_JSN_Sensor_Trig:
 10529                           
 10530                           	psect	text27
 10531  0F5B                     __ptext27:	
 10532 ;; *************** function _FRT_GetMicros *****************
 10533 ;; Defined at:
 10534 ;;		line 32 in file "FRT.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;		None
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;		None
 10539 ;; Return value:  Size  Location     Type
 10540 ;;                  4    6[BANK0 ] unsigned long 
 10541 ;; Registers used:
 10542 ;;		wreg, status,2, status,0, pclath, cstack
 10543 ;; Tracked objects:
 10544 ;;		On entry : 0/0
 10545 ;;		On exit  : 0/0
 10546 ;;		Unchanged: 0/0
 10547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10548 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10550 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10551 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;Total ram usage:       18 bytes
 10553 ;; Hardware stack levels used: 1
 10554 ;; Hardware stack levels required when called: 5
 10555 ;; This function calls:
 10556 ;;		_TMR0_GetCallBackNum
 10557 ;;		_TMR0_ReadTimer
 10558 ;;		___wmul
 10559 ;; This function is called by:
 10560 ;;		_JSN_Sensor_Trig
 10561 ;; This function uses a non-reentrant model
 10562 ;;
 10563                           
 10564  0F5B                     _FRT_GetMicros:	
 10565                           ;psect for function _FRT_GetMicros
 10566                           
 10567  0F5B                     l3923:	
 10568                           ;incstack = 0
 10569                           ; Regs used in _FRT_GetMicros: [wreg+status,2+status,0+pclath+cstack]
 10570                           
 10571                           
 10572                           ;FRT.c: 33:     return (micros + (250*TMR0_GetCallBackNum()) + TMR0_ReadTimer());
 10573  0F5B  0022               	movlb	2	; select bank2
 10574  0F5C  0838               	movf	_micros@FRT$F1531^(0+256),w
 10575  0F5D  0020               	movlb	0	; select bank0
 10576  0F5E  00AA               	movwf	??_FRT_GetMicros
 10577  0F5F  0022               	movlb	2	; select bank2
 10578  0F60  0839               	movf	(_micros@FRT$F1531+1)^(0+256),w
 10579  0F61  0020               	movlb	0	; select bank0
 10580  0F62  00AB               	movwf	??_FRT_GetMicros+1
 10581  0F63  0022               	movlb	2	; select bank2
 10582  0F64  083A               	movf	(_micros@FRT$F1531+2)^(0+256),w
 10583  0F65  0020               	movlb	0	; select bank0
 10584  0F66  00AC               	movwf	??_FRT_GetMicros+2
 10585  0F67  0022               	movlb	2	; select bank2
 10586  0F68  083B               	movf	(_micros@FRT$F1531+3)^(0+256),w
 10587  0F69  0020               	movlb	0	; select bank0
 10588  0F6A  00AD               	movwf	??_FRT_GetMicros+3
 10589  0F6B  318A  2230  318F   	fcall	_TMR0_ReadTimer
 10590  0F6E  0020               	movlb	0	; select bank0
 10591  0F6F  00AE               	movwf	??_FRT_GetMicros+4
 10592  0F70  01AF               	clrf	??_FRT_GetMicros+5
 10593  0F71  01B0               	clrf	??_FRT_GetMicros+6
 10594  0F72  01B1               	clrf	??_FRT_GetMicros+7
 10595  0F73  3180  2002  318F   	fcall	_TMR0_GetCallBackNum
 10596  0F76  0020               	movlb	0	; select bank0
 10597  0F77  00B2               	movwf	??_FRT_GetMicros+8
 10598  0F78  01B3               	clrf	??_FRT_GetMicros+9
 10599  0F79  0832               	movf	??_FRT_GetMicros+8,w
 10600  0F7A  00A0               	movwf	___wmul@multiplier
 10601  0F7B  0833               	movf	??_FRT_GetMicros+9,w
 10602  0F7C  00A1               	movwf	___wmul@multiplier+1
 10603  0F7D  30FA               	movlw	250
 10604  0F7E  00A2               	movwf	___wmul@multiplicand
 10605  0F7F  3000               	movlw	0
 10606  0F80  00A3               	movwf	___wmul@multiplicand+1
 10607  0F81  318C  243E  318F   	fcall	___wmul
 10608  0F84  0020               	movlb	0	; select bank0
 10609  0F85  0820               	movf	?___wmul,w
 10610  0F86  00B4               	movwf	??_FRT_GetMicros+10
 10611  0F87  0821               	movf	?___wmul+1,w
 10612  0F88  00B5               	movwf	??_FRT_GetMicros+11
 10613  0F89  3000               	movlw	0
 10614  0F8A  1BB5               	btfsc	??_FRT_GetMicros+11,7
 10615  0F8B  30FF               	movlw	255
 10616  0F8C  00B6               	movwf	??_FRT_GetMicros+12
 10617  0F8D  00B7               	movwf	??_FRT_GetMicros+13
 10618  0F8E  0834               	movf	??_FRT_GetMicros+10,w
 10619  0F8F  07AE               	addwf	??_FRT_GetMicros+4,f
 10620  0F90  0835               	movf	??_FRT_GetMicros+11,w
 10621  0F91  3DAF               	addwfc	??_FRT_GetMicros+5,f
 10622  0F92  0836               	movf	??_FRT_GetMicros+12,w
 10623  0F93  3DB0               	addwfc	??_FRT_GetMicros+6,f
 10624  0F94  0837               	movf	??_FRT_GetMicros+13,w
 10625  0F95  3DB1               	addwfc	??_FRT_GetMicros+7,f
 10626  0F96  082E               	movf	??_FRT_GetMicros+4,w
 10627  0F97  07AA               	addwf	??_FRT_GetMicros,f
 10628  0F98  082F               	movf	??_FRT_GetMicros+5,w
 10629  0F99  3DAB               	addwfc	??_FRT_GetMicros+1,f
 10630  0F9A  0830               	movf	??_FRT_GetMicros+6,w
 10631  0F9B  3DAC               	addwfc	??_FRT_GetMicros+2,f
 10632  0F9C  0831               	movf	??_FRT_GetMicros+7,w
 10633  0F9D  3DAD               	addwfc	??_FRT_GetMicros+3,f
 10634  0F9E  082D               	movf	??_FRT_GetMicros+3,w
 10635  0F9F  00A9               	movwf	?_FRT_GetMicros+3
 10636  0FA0  082C               	movf	??_FRT_GetMicros+2,w
 10637  0FA1  00A8               	movwf	?_FRT_GetMicros+2
 10638  0FA2  082B               	movf	??_FRT_GetMicros+1,w
 10639  0FA3  00A7               	movwf	?_FRT_GetMicros+1
 10640  0FA4  082A               	movf	??_FRT_GetMicros,w
 10641  0FA5  00A6               	movwf	?_FRT_GetMicros
 10642  0FA6                     l805:
 10643  0FA6  0008               	return
 10644  0FA7                     __end_of_FRT_GetMicros:
 10645                           
 10646                           	psect	text28
 10647  0C3E                     __ptext28:	
 10648 ;; *************** function ___wmul *****************
 10649 ;; Defined at:
 10650 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 10651 ;; Parameters:    Size  Location     Type
 10652 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10653 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;  product         2    4[BANK0 ] unsigned int 
 10656 ;; Return value:  Size  Location     Type
 10657 ;;                  2    0[BANK0 ] unsigned int 
 10658 ;; Registers used:
 10659 ;;		wreg, status,2, status,0
 10660 ;; Tracked objects:
 10661 ;;		On entry : 0/0
 10662 ;;		On exit  : 0/0
 10663 ;;		Unchanged: 0/0
 10664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10665 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10668 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;Total ram usage:        6 bytes
 10670 ;; Hardware stack levels used: 1
 10671 ;; Hardware stack levels required when called: 4
 10672 ;; This function calls:
 10673 ;;		Nothing
 10674 ;; This function is called by:
 10675 ;;		_FRT_GetMicros
 10676 ;; This function uses a non-reentrant model
 10677 ;;
 10678                           
 10679  0C3E                     ___wmul:	
 10680                           ;psect for function ___wmul
 10681                           
 10682  0C3E                     l3731:	
 10683                           ;incstack = 0
 10684                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10685                           
 10686  0C3E  0020               	movlb	0	; select bank0
 10687  0C3F  01A4               	clrf	___wmul@product
 10688  0C40  01A5               	clrf	___wmul@product+1
 10689  0C41                     l3733:
 10690  0C41  1C20               	btfss	___wmul@multiplier,0
 10691  0C42  2C44               	goto	u1271
 10692  0C43  2C45               	goto	u1270
 10693  0C44                     u1271:
 10694  0C44  2C49               	goto	l1153
 10695  0C45                     u1270:
 10696  0C45                     l3735:
 10697  0C45  0822               	movf	___wmul@multiplicand,w
 10698  0C46  07A4               	addwf	___wmul@product,f
 10699  0C47  0823               	movf	___wmul@multiplicand+1,w
 10700  0C48  3DA5               	addwfc	___wmul@product+1,f
 10701  0C49                     l1153:
 10702  0C49  3001               	movlw	1
 10703  0C4A                     u1285:
 10704  0C4A  35A2               	lslf	___wmul@multiplicand,f
 10705  0C4B  0DA3               	rlf	___wmul@multiplicand+1,f
 10706  0C4C  0B89               	decfsz	9,f
 10707  0C4D  2C4A               	goto	u1285
 10708  0C4E                     l3737:
 10709  0C4E  3001               	movlw	1
 10710  0C4F                     u1295:
 10711  0C4F  36A1               	lsrf	___wmul@multiplier+1,f
 10712  0C50  0CA0               	rrf	___wmul@multiplier,f
 10713  0C51  0B89               	decfsz	9,f
 10714  0C52  2C4F               	goto	u1295
 10715  0C53                     l3739:
 10716  0C53  0820               	movf	___wmul@multiplier,w
 10717  0C54  0421               	iorwf	___wmul@multiplier+1,w
 10718  0C55  1D03               	btfss	3,2
 10719  0C56  2C58               	goto	u1301
 10720  0C57  2C59               	goto	u1300
 10721  0C58                     u1301:
 10722  0C58  2C41               	goto	l3733
 10723  0C59                     u1300:
 10724  0C59                     l3741:
 10725  0C59  0825               	movf	___wmul@product+1,w
 10726  0C5A  00A1               	movwf	?___wmul+1
 10727  0C5B  0824               	movf	___wmul@product,w
 10728  0C5C  00A0               	movwf	?___wmul
 10729  0C5D                     l1155:
 10730  0C5D  0008               	return
 10731  0C5E                     __end_of___wmul:
 10732                           
 10733                           	psect	text29
 10734  0A30                     __ptext29:	
 10735 ;; *************** function _TMR0_ReadTimer *****************
 10736 ;; Defined at:
 10737 ;;		line 62 in file "tmr0.c"
 10738 ;; Parameters:    Size  Location     Type
 10739 ;;		None
 10740 ;; Auto vars:     Size  Location     Type
 10741 ;;  readVal         1    1[BANK0 ] unsigned char 
 10742 ;; Return value:  Size  Location     Type
 10743 ;;                  1    wreg      unsigned char 
 10744 ;; Registers used:
 10745 ;;		wreg
 10746 ;; Tracked objects:
 10747 ;;		On entry : 0/0
 10748 ;;		On exit  : 0/0
 10749 ;;		Unchanged: 0/0
 10750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10753 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10754 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10755 ;;Total ram usage:        2 bytes
 10756 ;; Hardware stack levels used: 1
 10757 ;; Hardware stack levels required when called: 4
 10758 ;; This function calls:
 10759 ;;		Nothing
 10760 ;; This function is called by:
 10761 ;;		_FRT_GetMicros
 10762 ;; This function uses a non-reentrant model
 10763 ;;
 10764                           
 10765  0A30                     _TMR0_ReadTimer:	
 10766                           ;psect for function _TMR0_ReadTimer
 10767                           
 10768  0A30                     l3691:	
 10769                           ;incstack = 0
 10770                           ; Regs used in _TMR0_ReadTimer: [wreg]
 10771                           
 10772                           
 10773                           ;tmr0.c: 64:     uint8_t readVal;;tmr0.c: 67:     readVal = TMR0L;
 10774  0A30  0020               	movlb	0	; select bank0
 10775  0A31  0815               	movf	21,w	;volatile
 10776  0A32  00A0               	movwf	??_TMR0_ReadTimer
 10777  0A33  0820               	movf	??_TMR0_ReadTimer,w
 10778  0A34  00A1               	movwf	TMR0_ReadTimer@readVal
 10779                           
 10780                           ;tmr0.c: 69:     return readVal;
 10781  0A35  0821               	movf	TMR0_ReadTimer@readVal,w
 10782  0A36                     l321:
 10783  0A36  0008               	return
 10784  0A37                     __end_of_TMR0_ReadTimer:
 10785                           
 10786                           	psect	text30
 10787  0002                     __ptext30:	
 10788 ;; *************** function _TMR0_GetCallBackNum *****************
 10789 ;; Defined at:
 10790 ;;		line 130 in file "tmr0.c"
 10791 ;; Parameters:    Size  Location     Type
 10792 ;;		None
 10793 ;; Auto vars:     Size  Location     Type
 10794 ;;		None
 10795 ;; Return value:  Size  Location     Type
 10796 ;;                  1    wreg      unsigned char 
 10797 ;; Registers used:
 10798 ;;		wreg
 10799 ;; Tracked objects:
 10800 ;;		On entry : 0/0
 10801 ;;		On exit  : 0/0
 10802 ;;		Unchanged: 0/0
 10803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;Total ram usage:        0 bytes
 10809 ;; Hardware stack levels used: 1
 10810 ;; Hardware stack levels required when called: 4
 10811 ;; This function calls:
 10812 ;;		Nothing
 10813 ;; This function is called by:
 10814 ;;		_FRT_GetMicros
 10815 ;; This function uses a non-reentrant model
 10816 ;;
 10817                           
 10818  0002                     _TMR0_GetCallBackNum:	
 10819                           ;psect for function _TMR0_GetCallBackNum
 10820                           
 10821  0002                     l3703:	
 10822                           ;incstack = 0
 10823                           ; Regs used in _TMR0_GetCallBackNum: [wreg]
 10824                           
 10825                           
 10826                           ;tmr0.c: 131:     return CountCallBack;
 10827  0002  087D               	movf	_CountCallBack,w	;volatile
 10828  0003                     l343:
 10829  0003  0008               	return
 10830  0004                     __end_of_TMR0_GetCallBackNum:
 10831                           
 10832                           	psect	text31
 10833  0514                     __ptext31:	
 10834 ;; *************** function _JSN_Sensor_Init *****************
 10835 ;; Defined at:
 10836 ;;		line 32 in file "JSN_Sensor.c"
 10837 ;; Parameters:    Size  Location     Type
 10838 ;;  Sensor          1    wreg     PTR struct .
 10839 ;;		 -> Sens1(6), Sens2(6), Sens3(6), 
 10840 ;;  trigPin         1    2[BANK1 ] enum E7144
 10841 ;;  echoPin         1    3[BANK1 ] enum E7144
 10842 ;; Auto vars:     Size  Location     Type
 10843 ;;  Sensor          1    6[BANK1 ] PTR struct .
 10844 ;;		 -> Sens1(6), Sens2(6), Sens3(6), 
 10845 ;; Return value:  Size  Location     Type
 10846 ;;                  1    wreg      unsigned char 
 10847 ;; Registers used:
 10848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10849 ;; Tracked objects:
 10850 ;;		On entry : 0/0
 10851 ;;		On exit  : 0/0
 10852 ;;		Unchanged: 0/0
 10853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10854 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10855 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10856 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10857 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10858 ;;Total ram usage:        5 bytes
 10859 ;; Hardware stack levels used: 1
 10860 ;; Hardware stack levels required when called: 13
 10861 ;; This function calls:
 10862 ;;		_SetPin
 10863 ;;		_WritePin
 10864 ;;		_printf
 10865 ;; This function is called by:
 10866 ;;		_main
 10867 ;; This function uses a non-reentrant model
 10868 ;;
 10869                           
 10870  0514                     _JSN_Sensor_Init:	
 10871                           ;psect for function _JSN_Sensor_Init
 10872                           
 10873                           
 10874                           ;incstack = 0
 10875                           ; Regs used in _JSN_Sensor_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10876                           ;JSN_Sensor_Init@Sensor stored from wreg
 10877  0514  0021               	movlb	1	; select bank1
 10878  0515  00E1               	movwf	JSN_Sensor_Init@Sensor^(0+128)
 10879  0516                     l4045:
 10880                           
 10881                           ;JSN_Sensor.c: 39:     switch (echoPin) {
 10882  0516  2D2A               	goto	l4057
 10883  0517                     l28:	
 10884                           ;JSN_Sensor.c: 42:         case C3:
 10885                           
 10886  0517                     l4047:
 10887                           
 10888                           ;JSN_Sensor.c: 44:             SetPin(echoPin, 1);
 10889  0517  0020               	movlb	0	; select bank0
 10890  0518  01A0               	clrf	SetPin@io
 10891  0519  0AA0               	incf	SetPin@io,f
 10892  051A  0021               	movlb	1	; select bank1
 10893  051B  085E               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 10894  051C  3184  2459  3185   	fcall	_SetPin
 10895                           
 10896                           ;JSN_Sensor.c: 45:             break;
 10897  051F  2D58               	goto	l4069
 10898  0520                     l4049:
 10899                           
 10900                           ;JSN_Sensor.c: 47:             printf("ERROR: Invalid echoPin (must be [A2, A4, C3, C5])
      +                          ");
 10901  0520  303A               	movlw	low (STR_1| (0+32768))
 10902  0521  0020               	movlb	0	; select bank0
 10903  0522  00EC               	movwf	printf@fmt
 10904  0523  3090               	movlw	high (STR_1| (0+32768))
 10905  0524  00ED               	movwf	printf@fmt+1
 10906  0525  318B  2353  3185   	fcall	_printf
 10907  0528                     l4051:
 10908                           
 10909                           ;JSN_Sensor.c: 48:             return 0xFF;
 10910  0528  30FF               	movlw	255
 10911  0529  2DB1               	goto	l32
 10912  052A                     l4057:
 10913  052A  085E               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 10914  052B  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 10915  052C  01E0               	clrf	(??_JSN_Sensor_Init^(0+128)+1)
 10916                           
 10917                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10918                           ; Switch size 1, requested type "simple"
 10919                           ; Number of cases is 1, Range of values is 0 to 0
 10920                           ; switch strategies available:
 10921                           ; Name         Instructions Cycles
 10922                           ; simple_byte            4     3 (average)
 10923                           ; direct_byte            8     6 (fixed)
 10924                           ; jumptable            260     6 (fixed)
 10925                           ;	Chosen strategy is simple_byte
 10926  052D  0860               	movf	(??_JSN_Sensor_Init+1)^(0+128),w
 10927  052E  3A00               	xorlw	0	; case 0
 10928  052F  1903               	skipnz
 10929  0530  2D32               	goto	l4667
 10930  0531  2D20               	goto	l4049
 10931  0532                     l4667:
 10932                           
 10933                           ; Switch size 1, requested type "simple"
 10934                           ; Number of cases is 4, Range of values is 1 to 11
 10935                           ; switch strategies available:
 10936                           ; Name         Instructions Cycles
 10937                           ; simple_byte           13     7 (average)
 10938                           ; direct_byte           31     9 (fixed)
 10939                           ; jumptable            263     9 (fixed)
 10940                           ;	Chosen strategy is simple_byte
 10941  0532  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 10942  0533  3A01               	xorlw	1	; case 1
 10943  0534  1903               	skipnz
 10944  0535  2D17               	goto	l4047
 10945  0536  3A02               	xorlw	2	; case 3
 10946  0537  1903               	skipnz
 10947  0538  2D17               	goto	l4047
 10948  0539  3A06               	xorlw	6	; case 5
 10949  053A  1903               	skipnz
 10950  053B  2D17               	goto	l4047
 10951  053C  3A0E               	xorlw	14	; case 11
 10952  053D  1903               	skipnz
 10953  053E  2D17               	goto	l28
 10954  053F  2D20               	goto	l4049
 10955  0540                     l37:	
 10956                           ;JSN_Sensor.c: 56:         case C7:
 10957                           
 10958  0540                     l4059:
 10959                           
 10960                           ;JSN_Sensor.c: 66:             SetPin(trigPin, 0);
 10961  0540  0020               	movlb	0	; select bank0
 10962  0541  01A0               	clrf	SetPin@io
 10963  0542  0021               	movlb	1	; select bank1
 10964  0543  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 10965  0544  3184  2459  3185   	fcall	_SetPin
 10966                           
 10967                           ;JSN_Sensor.c: 67:             WritePin(trigPin, 0);
 10968  0547  0020               	movlb	0	; select bank0
 10969  0548  01A0               	clrf	WritePin@val
 10970  0549  0021               	movlb	1	; select bank1
 10971  054A  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 10972  054B  3183  239E  3185   	fcall	_WritePin
 10973                           
 10974                           ;JSN_Sensor.c: 68:             break;
 10975  054E  2D8A               	goto	l4071
 10976  054F                     l4061:
 10977                           
 10978                           ;JSN_Sensor.c: 70:             printf("ERROR: Invalid trigPin (must NOT be [A2, A3, A4, 
      +                          C3, C5])");
 10979  054F  3000               	movlw	low (STR_2| (0+32768))
 10980  0550  0020               	movlb	0	; select bank0
 10981  0551  00EC               	movwf	printf@fmt
 10982  0552  3090               	movlw	high (STR_2| (0+32768))
 10983  0553  00ED               	movwf	printf@fmt+1
 10984  0554  318B  2353  3185   	fcall	_printf
 10985  0557  2D28               	goto	l4051
 10986  0558                     l4069:
 10987  0558  0021               	movlb	1	; select bank1
 10988  0559  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 10989  055A  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 10990  055B  01E0               	clrf	(??_JSN_Sensor_Init^(0+128)+1)
 10991                           
 10992                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10993                           ; Switch size 1, requested type "simple"
 10994                           ; Number of cases is 1, Range of values is 0 to 0
 10995                           ; switch strategies available:
 10996                           ; Name         Instructions Cycles
 10997                           ; simple_byte            4     3 (average)
 10998                           ; direct_byte            8     6 (fixed)
 10999                           ; jumptable            260     6 (fixed)
 11000                           ;	Chosen strategy is simple_byte
 11001  055C  0860               	movf	(??_JSN_Sensor_Init+1)^(0+128),w
 11002  055D  3A00               	xorlw	0	; case 0
 11003  055E  1903               	skipnz
 11004  055F  2D61               	goto	l4669
 11005  0560  2D4F               	goto	l4061
 11006  0561                     l4669:
 11007                           
 11008                           ; Switch size 1, requested type "simple"
 11009                           ; Number of cases is 13, Range of values is 0 to 17
 11010                           ; switch strategies available:
 11011                           ; Name         Instructions Cycles
 11012                           ; simple_byte           40    21 (average)
 11013                           ; direct_byte           42     6 (fixed)
 11014                           ; jumptable            260     6 (fixed)
 11015                           ;	Chosen strategy is simple_byte
 11016  0561  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11017  0562  3A00               	xorlw	0	; case 0
 11018  0563  1903               	skipnz
 11019  0564  2D40               	goto	l37
 11020  0565  3A04               	xorlw	4	; case 4
 11021  0566  1903               	skipnz
 11022  0567  2D40               	goto	l37
 11023  0568  3A02               	xorlw	2	; case 6
 11024  0569  1903               	skipnz
 11025  056A  2D40               	goto	l37
 11026  056B  3A01               	xorlw	1	; case 7
 11027  056C  1903               	skipnz
 11028  056D  2D40               	goto	l4059
 11029  056E  3A0F               	xorlw	15	; case 8
 11030  056F  1903               	skipnz
 11031  0570  2D40               	goto	l4059
 11032  0571  3A01               	xorlw	1	; case 9
 11033  0572  1903               	skipnz
 11034  0573  2D40               	goto	l4059
 11035  0574  3A03               	xorlw	3	; case 10
 11036  0575  1903               	skipnz
 11037  0576  2D40               	goto	l4059
 11038  0577  3A06               	xorlw	6	; case 12
 11039  0578  1903               	skipnz
 11040  0579  2D40               	goto	l4059
 11041  057A  3A01               	xorlw	1	; case 13
 11042  057B  1903               	skipnz
 11043  057C  2D40               	goto	l4059
 11044  057D  3A03               	xorlw	3	; case 14
 11045  057E  1903               	skipnz
 11046  057F  2D40               	goto	l4059
 11047  0580  3A01               	xorlw	1	; case 15
 11048  0581  1903               	skipnz
 11049  0582  2D40               	goto	l4059
 11050  0583  3A1F               	xorlw	31	; case 16
 11051  0584  1903               	skipnz
 11052  0585  2D40               	goto	l4059
 11053  0586  3A01               	xorlw	1	; case 17
 11054  0587  1903               	skipnz
 11055  0588  2D40               	goto	l4059
 11056  0589  2D4F               	goto	l4061
 11057  058A                     l4071:
 11058                           
 11059                           ;JSN_Sensor.c: 75:     Sensor->distance = 0;
 11060  058A  0021               	movlb	1	; select bank1
 11061  058B  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11062  058C  3E02               	addlw	2
 11063  058D  0086               	movwf	6
 11064  058E  3001               	movlw	1	; select bank2/3
 11065  058F  0087               	movwf	7
 11066  0590  3000               	movlw	0
 11067  0591  3FC0               	movwi [0]fsr1
 11068  0592  3FC1               	movwi [1]fsr1
 11069  0593                     l4073:
 11070                           
 11071                           ;JSN_Sensor.c: 76:     Sensor->echoHighTime = 0;
 11072  0593  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11073  0594  0086               	movwf	6
 11074  0595  3001               	movlw	1	; select bank2/3
 11075  0596  0087               	movwf	7
 11076  0597  3000               	movlw	0
 11077  0598  3FC0               	movwi [0]fsr1
 11078  0599  3FC1               	movwi [1]fsr1
 11079  059A                     l4075:
 11080                           
 11081                           ;JSN_Sensor.c: 77:     Sensor->echoPin = echoPin;
 11082  059A  085E               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 11083  059B  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11084  059C  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11085  059D  3E05               	addlw	5
 11086  059E  0086               	movwf	6
 11087  059F  3001               	movlw	1	; select bank2/3
 11088  05A0  0087               	movwf	7
 11089  05A1  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11090  05A2  0081               	movwf	1
 11091  05A3                     l4077:
 11092                           
 11093                           ;JSN_Sensor.c: 78:     Sensor->trigPin = trigPin;
 11094  05A3  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 11095  05A4  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11096  05A5  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11097  05A6  3E04               	addlw	4
 11098  05A7  0086               	movwf	6
 11099  05A8  3001               	movlw	1	; select bank2/3
 11100  05A9  0087               	movwf	7
 11101  05AA  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11102  05AB  0081               	movwf	1
 11103  05AC                     l4079:
 11104                           
 11105                           ;JSN_Sensor.c: 80:     lastTrig = Sensor;
 11106  05AC  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11107  05AD  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11108  05AE  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11109  05AF  00DA               	movwf	_lastTrig^(0+128)
 11110  05B0                     l4081:
 11111                           
 11112                           ;JSN_Sensor.c: 82:     return 0x00;
 11113  05B0  3000               	movlw	0
 11114  05B1                     l32:
 11115  05B1  0008               	return
 11116  05B2                     __end_of_JSN_Sensor_Init:
 11117                           
 11118                           	psect	text32
 11119  0B53                     __ptext32:	
 11120 ;; *************** function _printf *****************
 11121 ;; Defined at:
 11122 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\printf.c"
 11123 ;; Parameters:    Size  Location     Type
 11124 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
 11125 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(58), 
 11126 ;;		 -> STR_1(50), 
 11127 ;; Auto vars:     Size  Location     Type
 11128 ;;  ret             2    0        int 
 11129 ;;  ap              1    1[BANK1 ] PTR void [1]
 11130 ;;		 -> ?_printf(2), 
 11131 ;; Return value:  Size  Location     Type
 11132 ;;                  2   76[BANK0 ] int 
 11133 ;; Registers used:
 11134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11135 ;; Tracked objects:
 11136 ;;		On entry : 0/0
 11137 ;;		On exit  : 0/0
 11138 ;;		Unchanged: 0/0
 11139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11140 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11141 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11142 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11143 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11144 ;;Total ram usage:        6 bytes
 11145 ;; Hardware stack levels used: 1
 11146 ;; Hardware stack levels required when called: 12
 11147 ;; This function calls:
 11148 ;;		_vfprintf
 11149 ;; This function is called by:
 11150 ;;		_JSN_Sensor_Init
 11151 ;;		_main
 11152 ;; This function uses a non-reentrant model
 11153 ;;
 11154                           
 11155  0B53                     _printf:	
 11156                           ;psect for function _printf
 11157                           
 11158  0B53                     l3837:	
 11159                           ;incstack = 0
 11160                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11161                           
 11162  0B53  306E               	movlw	(low ((?_printf| 0+2)))& (0+255)
 11163  0B54  0021               	movlb	1	; select bank1
 11164  0B55  00DB               	movwf	??_printf^(0+128)
 11165  0B56  085B               	movf	??_printf^(0+128),w
 11166  0B57  00DC               	movwf	printf@ap^(0+128)
 11167  0B58                     l3839:
 11168  0B58  0020               	movlb	0	; select bank0
 11169  0B59  086D               	movf	printf@fmt+1,w
 11170  0B5A  00E5               	movwf	vfprintf@fmt+1
 11171  0B5B  086C               	movf	printf@fmt,w
 11172  0B5C  00E4               	movwf	vfprintf@fmt
 11173  0B5D  30DC               	movlw	(low (printf@ap| 0))& (0+255)
 11174  0B5E  0021               	movlb	1	; select bank1
 11175  0B5F  00DB               	movwf	??_printf^(0+128)
 11176  0B60  085B               	movf	??_printf^(0+128),w
 11177  0B61  0020               	movlb	0	; select bank0
 11178  0B62  00E6               	movwf	vfprintf@ap
 11179  0B63  3000               	movlw	0
 11180  0B64  318D  2501  318B   	fcall	_vfprintf
 11181  0B67                     l1616:
 11182  0B67  0008               	return
 11183  0B68                     __end_of_printf:
 11184                           
 11185                           	psect	text33
 11186  0D01                     __ptext33:	
 11187 ;; *************** function _vfprintf *****************
 11188 ;; Defined at:
 11189 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11190 ;; Parameters:    Size  Location     Type
 11191 ;;  fp              1    wreg     PTR struct _IO_FILE
 11192 ;;		 -> NULL(0), 
 11193 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
 11194 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(58), 
 11195 ;;		 -> STR_1(50), 
 11196 ;;  ap              1   70[BANK0 ] PTR PTR void 
 11197 ;;		 -> printf@ap(1), 
 11198 ;; Auto vars:     Size  Location     Type
 11199 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
 11200 ;;		 -> NULL(0), 
 11201 ;;  cfmt            2   74[BANK0 ] PTR unsigned char 
 11202 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(58), 
 11203 ;;		 -> STR_1(50), 
 11204 ;; Return value:  Size  Location     Type
 11205 ;;                  2   68[BANK0 ] int 
 11206 ;; Registers used:
 11207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11208 ;; Tracked objects:
 11209 ;;		On entry : 0/0
 11210 ;;		On exit  : 0/0
 11211 ;;		Unchanged: 0/0
 11212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11213 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11214 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11215 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11216 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11217 ;;Total ram usage:        8 bytes
 11218 ;; Hardware stack levels used: 1
 11219 ;; Hardware stack levels required when called: 11
 11220 ;; This function calls:
 11221 ;;		_vfpfcnvrt
 11222 ;; This function is called by:
 11223 ;;		_printf
 11224 ;; This function uses a non-reentrant model
 11225 ;;
 11226                           
 11227  0D01                     _vfprintf:	
 11228                           ;psect for function _vfprintf
 11229                           
 11230                           
 11231                           ;incstack = 0
 11232                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11233                           ;vfprintf@fp stored from wreg
 11234  0D01  0020               	movlb	0	; select bank0
 11235  0D02  00E9               	movwf	vfprintf@fp
 11236  0D03                     l3745:
 11237                           
 11238                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 11239  0D03  0865               	movf	vfprintf@fmt+1,w
 11240  0D04  00EB               	movwf	vfprintf@cfmt+1
 11241  0D05  0864               	movf	vfprintf@fmt,w
 11242  0D06  00EA               	movwf	vfprintf@cfmt
 11243  0D07                     l3747:
 11244                           
 11245                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 11246  0D07  0021               	movlb	1	; select bank1
 11247  0D08  01A0               	clrf	_nout^(0+128)
 11248  0D09  01A1               	clrf	(_nout+1)^(0+128)
 11249                           
 11250                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11251  0D0A  2D1F               	goto	l3751
 11252  0D0B                     l3749:
 11253                           
 11254                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 11255  0D0B  306A               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 11256  0D0C  00E7               	movwf	??_vfprintf
 11257  0D0D  0867               	movf	??_vfprintf,w
 11258  0D0E  00D4               	movwf	vfpfcnvrt@fmt
 11259  0D0F  0866               	movf	vfprintf@ap,w
 11260  0D10  00E8               	movwf	??_vfprintf+1
 11261  0D11  0868               	movf	??_vfprintf+1,w
 11262  0D12  00D5               	movwf	vfpfcnvrt@ap
 11263  0D13  0869               	movf	vfprintf@fp,w
 11264  0D14  3182  22DB  318D   	fcall	_vfpfcnvrt
 11265  0D17  0020               	movlb	0	; select bank0
 11266  0D18  0854               	movf	?_vfpfcnvrt,w
 11267  0D19  0021               	movlb	1	; select bank1
 11268  0D1A  07A0               	addwf	_nout^(0+128),f
 11269  0D1B  0020               	movlb	0	; select bank0
 11270  0D1C  0855               	movf	?_vfpfcnvrt+1,w
 11271  0D1D  0021               	movlb	1	; select bank1
 11272  0D1E  3DA1               	addwfc	(_nout+1)^(0+128),f
 11273  0D1F                     l3751:
 11274                           
 11275                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11276  0D1F  0020               	movlb	0	; select bank0
 11277  0D20  086A               	movf	vfprintf@cfmt,w
 11278  0D21  0084               	movwf	4
 11279  0D22  086B               	movf	vfprintf@cfmt+1,w
 11280  0D23  0085               	movwf	5
 11281  0D24  0012               	moviw fsr0++
 11282  0D25  1D03               	btfss	3,2
 11283  0D26  2D28               	goto	u1311
 11284  0D27  2D29               	goto	u1310
 11285  0D28                     u1311:
 11286  0D28  2D0B               	goto	l3749
 11287  0D29                     u1310:
 11288  0D29                     l3753:
 11289                           
 11290                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 11291  0D29  0021               	movlb	1	; select bank1
 11292  0D2A  0821               	movf	(_nout+1)^(0+128),w
 11293  0D2B  0020               	movlb	0	; select bank0
 11294  0D2C  00E5               	movwf	?_vfprintf+1
 11295  0D2D  0021               	movlb	1	; select bank1
 11296  0D2E  0820               	movf	_nout^(0+128),w
 11297  0D2F  0020               	movlb	0	; select bank0
 11298  0D30  00E4               	movwf	?_vfprintf
 11299  0D31                     l1673:
 11300  0D31  0008               	return
 11301  0D32                     __end_of_vfprintf:
 11302                           
 11303                           	psect	text34
 11304  02DB                     __ptext34:	
 11305 ;; *************** function _vfpfcnvrt *****************
 11306 ;; Defined at:
 11307 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11308 ;; Parameters:    Size  Location     Type
 11309 ;;  fp              1    wreg     PTR struct _IO_FILE
 11310 ;;		 -> NULL(0), 
 11311 ;;  fmt             1   52[BANK0 ] PTR PTR unsigned char 
 11312 ;;		 -> vfprintf@cfmt(2), 
 11313 ;;  ap              1   53[BANK0 ] PTR PTR void 
 11314 ;;		 -> printf@ap(1), 
 11315 ;; Auto vars:     Size  Location     Type
 11316 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
 11317 ;;		 -> NULL(0), 
 11318 ;;  llu             8   59[BANK0 ] unsigned long long 
 11319 ;;  ll              8    0        long long 
 11320 ;;  f               4    0        long long 
 11321 ;;  ct              3    0        unsigned char [3]
 11322 ;;  vp              2    0        PTR void 
 11323 ;;  i               2    0        int 
 11324 ;;  done            2    0        int 
 11325 ;;  cp              2    0        PTR unsigned char 
 11326 ;;  c               1    0        unsigned char 
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  2   52[BANK0 ] int 
 11329 ;; Registers used:
 11330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/0
 11333 ;;		On exit  : 0/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11336 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11338 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11339 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;Total ram usage:       16 bytes
 11341 ;; Hardware stack levels used: 1
 11342 ;; Hardware stack levels required when called: 10
 11343 ;; This function calls:
 11344 ;;		_fputc
 11345 ;;		_utoa
 11346 ;; This function is called by:
 11347 ;;		_vfprintf
 11348 ;; This function uses a non-reentrant model
 11349 ;;
 11350                           
 11351  02DB                     _vfpfcnvrt:	
 11352                           ;psect for function _vfpfcnvrt
 11353                           
 11354                           
 11355                           ;incstack = 0
 11356                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11357                           ;vfpfcnvrt@fp stored from wreg
 11358  02DB  0020               	movlb	0	; select bank0
 11359  02DC  00E3               	movwf	vfpfcnvrt@fp
 11360  02DD                     l3363:
 11361                           
 11362                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 11363  02DD  0854               	movf	vfpfcnvrt@fmt,w
 11364  02DE  0086               	movwf	6
 11365  02DF  0187               	clrf	7
 11366  02E0  3F40               	moviw [0]fsr1
 11367  02E1  00D6               	movwf	??_vfpfcnvrt
 11368  02E2  3F41               	moviw [1]fsr1
 11369  02E3  00D7               	movwf	??_vfpfcnvrt+1
 11370  02E4  0856               	movf	??_vfpfcnvrt,w
 11371  02E5  0084               	movwf	4
 11372  02E6  0857               	movf	??_vfpfcnvrt+1,w
 11373  02E7  0085               	movwf	5
 11374  02E8  0012               	moviw fsr0++
 11375  02E9  3A25               	xorlw	37
 11376  02EA  1D03               	btfss	3,2
 11377  02EB  2AED               	goto	u1211
 11378  02EC  2AEE               	goto	u1210
 11379  02ED                     u1211:
 11380  02ED  2B7A               	goto	l3397
 11381  02EE                     u1210:
 11382  02EE                     l3365:
 11383                           
 11384                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 11385  02EE  0854               	movf	vfpfcnvrt@fmt,w
 11386  02EF  0086               	movwf	6
 11387  02F0  0187               	clrf	7
 11388  02F1  3001               	movlw	1
 11389  02F2  0781               	addwf	1,f
 11390  02F3  3141               	addfsr 1,1
 11391  02F4  1803               	skipnc
 11392  02F5  0A81               	incf	1,f
 11393  02F6                     l3367:
 11394                           
 11395                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 11396  02F6  0021               	movlb	1	; select bank1
 11397  02F7  01A2               	clrf	_width^(0+128)
 11398  02F8  01A3               	clrf	(_width+1)^(0+128)
 11399  02F9  01A6               	clrf	_flags^(0+128)
 11400  02FA  01A7               	clrf	(_flags+1)^(0+128)
 11401  02FB                     l3369:
 11402                           
 11403                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 11404  02FB  30FF               	movlw	255
 11405  02FC  00A4               	movwf	_prec^(0+128)
 11406  02FD  30FF               	movlw	255
 11407  02FE  00A5               	movwf	(_prec^(0+128)+1)
 11408  02FF                     l3371:
 11409                           
 11410                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
 11411  02FF  0020               	movlb	0	; select bank0
 11412  0300  0854               	movf	vfpfcnvrt@fmt,w
 11413  0301  0086               	movwf	6
 11414  0302  0187               	clrf	7
 11415  0303  3F40               	moviw [0]fsr1
 11416  0304  00D6               	movwf	??_vfpfcnvrt
 11417  0305  3F41               	moviw [1]fsr1
 11418  0306  00D7               	movwf	??_vfpfcnvrt+1
 11419  0307  0856               	movf	??_vfpfcnvrt,w
 11420  0308  0084               	movwf	4
 11421  0309  0857               	movf	??_vfpfcnvrt+1,w
 11422  030A  0085               	movwf	5
 11423  030B  0012               	moviw fsr0++
 11424  030C  3A75               	xorlw	117
 11425  030D  1D03               	btfss	3,2
 11426  030E  2B10               	goto	u1221
 11427  030F  2B11               	goto	u1220
 11428  0310                     u1221:
 11429  0310  2B45               	goto	l3381
 11430  0311                     u1220:
 11431  0311                     l3373:
 11432                           
 11433                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
 11434  0311  0854               	movf	vfpfcnvrt@fmt,w
 11435  0312  0086               	movwf	6
 11436  0313  0187               	clrf	7
 11437  0314  3001               	movlw	1
 11438  0315  0781               	addwf	1,f
 11439  0316  3141               	addfsr 1,1
 11440  0317  1803               	skipnc
 11441  0318  0A81               	incf	1,f
 11442  0319                     l3375:
 11443                           
 11444                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 11445  0319  0855               	movf	vfpfcnvrt@ap,w
 11446  031A  0086               	movwf	6
 11447  031B  0187               	clrf	7
 11448  031C  0801               	movf	1,w
 11449  031D  0084               	movwf	4
 11450  031E  0185               	clrf	5
 11451  031F  3002               	movlw	2
 11452  0320  0781               	addwf	1,f
 11453  0321  3F00               	moviw [0]fsr0
 11454  0322  00DB               	movwf	vfpfcnvrt@llu
 11455  0323  3F01               	moviw [1]fsr0
 11456  0324  00DC               	movwf	vfpfcnvrt@llu+1
 11457  0325  01DD               	clrf	vfpfcnvrt@llu+2
 11458  0326  01DE               	clrf	vfpfcnvrt@llu+3
 11459  0327  01DF               	clrf	vfpfcnvrt@llu+4
 11460  0328  01E0               	clrf	vfpfcnvrt@llu+5
 11461  0329  01E1               	clrf	vfpfcnvrt@llu+6
 11462  032A  01E2               	clrf	vfpfcnvrt@llu+7
 11463  032B                     l3377:
 11464                           
 11465                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
 11466  032B  085B               	movf	vfpfcnvrt@llu,w
 11467  032C  00BC               	movwf	utoa@d
 11468  032D  085C               	movf	vfpfcnvrt@llu+1,w
 11469  032E  00BD               	movwf	utoa@d+1
 11470  032F  085D               	movf	vfpfcnvrt@llu+2,w
 11471  0330  00BE               	movwf	utoa@d+2
 11472  0331  085E               	movf	vfpfcnvrt@llu+3,w
 11473  0332  00BF               	movwf	utoa@d+3
 11474  0333  085F               	movf	vfpfcnvrt@llu+4,w
 11475  0334  00C0               	movwf	utoa@d+4
 11476  0335  0860               	movf	vfpfcnvrt@llu+5,w
 11477  0336  00C1               	movwf	utoa@d+5
 11478  0337  0861               	movf	vfpfcnvrt@llu+6,w
 11479  0338  00C2               	movwf	utoa@d+6
 11480  0339  0862               	movf	vfpfcnvrt@llu+7,w
 11481  033A  00C3               	movwf	utoa@d+7
 11482  033B  0863               	movf	vfpfcnvrt@fp,w
 11483  033C  3181  21EC  3182   	fcall	_utoa
 11484  033F  0020               	movlb	0	; select bank0
 11485  0340  083D               	movf	?_utoa+1,w
 11486  0341  00D5               	movwf	?_vfpfcnvrt+1
 11487  0342  083C               	movf	?_utoa,w
 11488  0343  00D4               	movwf	?_vfpfcnvrt
 11489  0344  2B9D               	goto	l1666
 11490  0345                     l3381:
 11491                           
 11492                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 11493  0345  0854               	movf	vfpfcnvrt@fmt,w
 11494  0346  0086               	movwf	6
 11495  0347  0187               	clrf	7
 11496  0348  3F40               	moviw [0]fsr1
 11497  0349  00D6               	movwf	??_vfpfcnvrt
 11498  034A  3F41               	moviw [1]fsr1
 11499  034B  00D7               	movwf	??_vfpfcnvrt+1
 11500  034C  0856               	movf	??_vfpfcnvrt,w
 11501  034D  0084               	movwf	4
 11502  034E  0857               	movf	??_vfpfcnvrt+1,w
 11503  034F  0085               	movwf	5
 11504  0350  0012               	moviw fsr0++
 11505  0351  3A25               	xorlw	37
 11506  0352  1D03               	btfss	3,2
 11507  0353  2B55               	goto	u1231
 11508  0354  2B56               	goto	u1230
 11509  0355                     u1231:
 11510  0355  2B6F               	goto	l3391
 11511  0356                     u1230:
 11512  0356                     l3383:
 11513                           
 11514                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 11515  0356  0854               	movf	vfpfcnvrt@fmt,w
 11516  0357  0086               	movwf	6
 11517  0358  0187               	clrf	7
 11518  0359  3001               	movlw	1
 11519  035A  0781               	addwf	1,f
 11520  035B  3141               	addfsr 1,1
 11521  035C  1803               	skipnc
 11522  035D  0A81               	incf	1,f
 11523  035E                     l3385:
 11524                           
 11525                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 11526  035E  3025               	movlw	37
 11527  035F  00A3               	movwf	fputc@c
 11528  0360  3000               	movlw	0
 11529  0361  00A4               	movwf	fputc@c+1
 11530  0362  0863               	movf	vfpfcnvrt@fp,w
 11531  0363  00D6               	movwf	??_vfpfcnvrt
 11532  0364  0856               	movf	??_vfpfcnvrt,w
 11533  0365  00A5               	movwf	fputc@fp
 11534  0366  318E  26D2  3182   	fcall	_fputc
 11535  0369                     l3387:
 11536                           
 11537                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 11538  0369  3001               	movlw	1
 11539  036A  0020               	movlb	0	; select bank0
 11540  036B  00D4               	movwf	?_vfpfcnvrt
 11541  036C  3000               	movlw	0
 11542  036D  00D5               	movwf	?_vfpfcnvrt+1
 11543  036E  2B9D               	goto	l1666
 11544  036F                     l3391:
 11545                           
 11546                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 11547  036F  0854               	movf	vfpfcnvrt@fmt,w
 11548  0370  0086               	movwf	6
 11549  0371  0187               	clrf	7
 11550  0372  3001               	movlw	1
 11551  0373  0781               	addwf	1,f
 11552  0374  3141               	addfsr 1,1
 11553  0375  1803               	skipnc
 11554  0376  0A81               	incf	1,f
 11555  0377                     l3393:
 11556                           
 11557                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 11558  0377  01D4               	clrf	?_vfpfcnvrt
 11559  0378  01D5               	clrf	?_vfpfcnvrt+1
 11560  0379  2B9D               	goto	l1666
 11561  037A                     l3397:
 11562                           
 11563                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 11564  037A  0854               	movf	vfpfcnvrt@fmt,w
 11565  037B  0086               	movwf	6
 11566  037C  0187               	clrf	7
 11567  037D  3F40               	moviw [0]fsr1
 11568  037E  00D6               	movwf	??_vfpfcnvrt
 11569  037F  3F41               	moviw [1]fsr1
 11570  0380  00D7               	movwf	??_vfpfcnvrt+1
 11571  0381  0856               	movf	??_vfpfcnvrt,w
 11572  0382  0084               	movwf	4
 11573  0383  0857               	movf	??_vfpfcnvrt+1,w
 11574  0384  0085               	movwf	5
 11575  0385  0800               	movf	0,w	;code access
 11576  0386  00D8               	movwf	??_vfpfcnvrt+2
 11577  0387  01D9               	clrf	??_vfpfcnvrt+3
 11578  0388  0858               	movf	??_vfpfcnvrt+2,w
 11579  0389  00A3               	movwf	fputc@c
 11580  038A  0859               	movf	??_vfpfcnvrt+3,w
 11581  038B  00A4               	movwf	fputc@c+1
 11582  038C  0863               	movf	vfpfcnvrt@fp,w
 11583  038D  00DA               	movwf	??_vfpfcnvrt+4
 11584  038E  085A               	movf	??_vfpfcnvrt+4,w
 11585  038F  00A5               	movwf	fputc@fp
 11586  0390  318E  26D2  3182   	fcall	_fputc
 11587  0393                     l3399:
 11588                           
 11589                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 11590  0393  0020               	movlb	0	; select bank0
 11591  0394  0854               	movf	vfpfcnvrt@fmt,w
 11592  0395  0086               	movwf	6
 11593  0396  0187               	clrf	7
 11594  0397  3001               	movlw	1
 11595  0398  0781               	addwf	1,f
 11596  0399  3141               	addfsr 1,1
 11597  039A  1803               	skipnc
 11598  039B  0A81               	incf	1,f
 11599  039C  2B69               	goto	l3387
 11600  039D                     l1666:
 11601  039D  0008               	return
 11602  039E                     __end_of_vfpfcnvrt:
 11603                           
 11604                           	psect	text35
 11605  01EC                     __ptext35:	
 11606 ;; *************** function _utoa *****************
 11607 ;; Defined at:
 11608 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11609 ;; Parameters:    Size  Location     Type
 11610 ;;  fp              1    wreg     PTR struct _IO_FILE
 11611 ;;		 -> NULL(0), 
 11612 ;;  d               8   28[BANK0 ] unsigned long long 
 11613 ;; Auto vars:     Size  Location     Type
 11614 ;;  fp              1   39[BANK0 ] PTR struct _IO_FILE
 11615 ;;		 -> NULL(0), 
 11616 ;;  n               8   42[BANK0 ] unsigned long long 
 11617 ;;  i               2   50[BANK0 ] int 
 11618 ;;  w               2   40[BANK0 ] int 
 11619 ;;  p               2   37[BANK0 ] int 
 11620 ;; Return value:  Size  Location     Type
 11621 ;;                  2   28[BANK0 ] int 
 11622 ;; Registers used:
 11623 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11624 ;; Tracked objects:
 11625 ;;		On entry : 0/0
 11626 ;;		On exit  : 0/0
 11627 ;;		Unchanged: 0/0
 11628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11629 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11630 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11631 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11632 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11633 ;;Total ram usage:       24 bytes
 11634 ;; Hardware stack levels used: 1
 11635 ;; Hardware stack levels required when called: 9
 11636 ;; This function calls:
 11637 ;;		___lodiv
 11638 ;;		___lomod
 11639 ;;		_pad
 11640 ;; This function is called by:
 11641 ;;		_vfpfcnvrt
 11642 ;; This function uses a non-reentrant model
 11643 ;;
 11644                           
 11645  01EC                     _utoa:	
 11646                           ;psect for function _utoa
 11647                           
 11648                           
 11649                           ;incstack = 0
 11650                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11651                           ;utoa@fp stored from wreg
 11652  01EC  0020               	movlb	0	; select bank0
 11653  01ED  00C7               	movwf	utoa@fp
 11654  01EE                     l3309:
 11655                           
 11656                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
 11657  01EE  0021               	movlb	1	; select bank1
 11658  01EF  1BA5               	btfsc	(_prec+1)^(0+128),7
 11659  01F0  29F2               	goto	u1141
 11660  01F1  29F3               	goto	u1140
 11661  01F2                     u1141:
 11662  01F2  29F7               	goto	l1649
 11663  01F3                     u1140:
 11664  01F3                     l3311:
 11665                           
 11666                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
 11667  01F3  30FD               	movlw	253
 11668  01F4  05A6               	andwf	_flags^(0+128),f
 11669  01F5  30FF               	movlw	255
 11670  01F6  05A7               	andwf	(_flags+1)^(0+128),f
 11671  01F7                     l1649:	
 11672                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 623:     }
 11673                           
 11674                           
 11675                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
 11676  01F7  0825               	movf	(_prec+1)^(0+128),w
 11677  01F8  3A80               	xorlw	128
 11678  01F9  0020               	movlb	0	; select bank0
 11679  01FA  00C4               	movwf	??_utoa
 11680  01FB  3080               	movlw	128
 11681  01FC  0244               	subwf	??_utoa,w
 11682  01FD  1D03               	skipz
 11683  01FE  2A02               	goto	u1155
 11684  01FF  3001               	movlw	1
 11685  0200  0021               	movlb	1	; select bank1
 11686  0201  0224               	subwf	_prec^(0+128),w
 11687  0202                     u1155:
 11688  0202  1803               	skipnc
 11689  0203  2A05               	goto	u1151
 11690  0204  2A06               	goto	u1150
 11691  0205                     u1151:
 11692  0205  2A0C               	goto	l3315
 11693  0206                     u1150:
 11694  0206                     l3313:
 11695  0206  3001               	movlw	1
 11696  0207  0020               	movlb	0	; select bank0
 11697  0208  00C5               	movwf	utoa@p
 11698  0209  3000               	movlw	0
 11699  020A  00C6               	movwf	utoa@p+1
 11700  020B  2A14               	goto	l1653
 11701  020C                     l3315:
 11702  020C  0021               	movlb	1	; select bank1
 11703  020D  0825               	movf	(_prec+1)^(0+128),w
 11704  020E  0020               	movlb	0	; select bank0
 11705  020F  00C6               	movwf	utoa@p+1
 11706  0210  0021               	movlb	1	; select bank1
 11707  0211  0824               	movf	_prec^(0+128),w
 11708  0212  0020               	movlb	0	; select bank0
 11709  0213  00C5               	movwf	utoa@p
 11710  0214                     l1653:
 11711                           
 11712                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
 11713  0214  0021               	movlb	1	; select bank1
 11714  0215  0823               	movf	(_width+1)^(0+128),w
 11715  0216  0020               	movlb	0	; select bank0
 11716  0217  00C9               	movwf	utoa@w+1
 11717  0218  0021               	movlb	1	; select bank1
 11718  0219  0822               	movf	_width^(0+128),w
 11719  021A  0020               	movlb	0	; select bank0
 11720  021B  00C8               	movwf	utoa@w
 11721  021C                     l3317:
 11722                           
 11723                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 628:     n = d;
 11724  021C  083C               	movf	utoa@d,w
 11725  021D  00CA               	movwf	utoa@n
 11726  021E  083D               	movf	utoa@d+1,w
 11727  021F  00CB               	movwf	utoa@n+1
 11728  0220  083E               	movf	utoa@d+2,w
 11729  0221  00CC               	movwf	utoa@n+2
 11730  0222  083F               	movf	utoa@d+3,w
 11731  0223  00CD               	movwf	utoa@n+3
 11732  0224  0840               	movf	utoa@d+4,w
 11733  0225  00CE               	movwf	utoa@n+4
 11734  0226  0841               	movf	utoa@d+5,w
 11735  0227  00CF               	movwf	utoa@n+5
 11736  0228  0842               	movf	utoa@d+6,w
 11737  0229  00D0               	movwf	utoa@n+6
 11738  022A  0843               	movf	utoa@d+7,w
 11739  022B  00D1               	movwf	utoa@n+7
 11740                           
 11741                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
 11742  022C  301F               	movlw	31
 11743  022D  00D2               	movwf	utoa@i
 11744  022E  3000               	movlw	0
 11745  022F  00D3               	movwf	utoa@i+1
 11746  0230                     l3319:
 11747                           
 11748                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
 11749  0230  0023               	movlb	3	; select bank3
 11750  0231  01BF               	clrf	(_dbuf^(0+384)+31)
 11751                           
 11752                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11753  0232  2A94               	goto	l3331
 11754  0233                     l3321:
 11755                           
 11756                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 632:         --i;
 11757  0233  30FF               	movlw	255
 11758  0234  0020               	movlb	0	; select bank0
 11759  0235  07D2               	addwf	utoa@i,f
 11760  0236  30FF               	movlw	255
 11761  0237  3DD3               	addwfc	utoa@i+1,f
 11762  0238                     l3323:
 11763                           
 11764                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
 11765  0238  300A               	movlw	10
 11766  0239  00A0               	movwf	___lomod@divisor
 11767  023A  01A1               	clrf	___lomod@divisor+1
 11768  023B  01A2               	clrf	___lomod@divisor+2
 11769  023C  01A3               	clrf	___lomod@divisor+3
 11770  023D  01A4               	clrf	___lomod@divisor+4
 11771  023E  01A5               	clrf	___lomod@divisor+5
 11772  023F  01A6               	clrf	___lomod@divisor+6
 11773  0240  01A7               	clrf	___lomod@divisor+7
 11774  0241  084A               	movf	utoa@n,w
 11775  0242  00A8               	movwf	___lomod@dividend
 11776  0243  084B               	movf	utoa@n+1,w
 11777  0244  00A9               	movwf	___lomod@dividend+1
 11778  0245  084C               	movf	utoa@n+2,w
 11779  0246  00AA               	movwf	___lomod@dividend+2
 11780  0247  084D               	movf	utoa@n+3,w
 11781  0248  00AB               	movwf	___lomod@dividend+3
 11782  0249  084E               	movf	utoa@n+4,w
 11783  024A  00AC               	movwf	___lomod@dividend+4
 11784  024B  084F               	movf	utoa@n+5,w
 11785  024C  00AD               	movwf	___lomod@dividend+5
 11786  024D  0850               	movf	utoa@n+6,w
 11787  024E  00AE               	movwf	___lomod@dividend+6
 11788  024F  0851               	movf	utoa@n+7,w
 11789  0250  00AF               	movwf	___lomod@dividend+7
 11790  0251  3186  26CD  3181   	fcall	___lomod
 11791  0254  0020               	movlb	0	; select bank0
 11792  0255  0820               	movf	?___lomod,w
 11793  0256  3E30               	addlw	48
 11794  0257  00C4               	movwf	??_utoa
 11795  0258  0852               	movf	utoa@i,w
 11796  0259  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11797  025A  0086               	movwf	6
 11798  025B  3001               	movlw	1	; select bank3/4
 11799  025C  0087               	movwf	7
 11800  025D  0844               	movf	??_utoa,w
 11801  025E  0081               	movwf	1
 11802  025F                     l3325:
 11803                           
 11804                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 634:         --p;
 11805  025F  30FF               	movlw	255
 11806  0260  07C5               	addwf	utoa@p,f
 11807  0261  30FF               	movlw	255
 11808  0262  3DC6               	addwfc	utoa@p+1,f
 11809  0263                     l3327:
 11810                           
 11811                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 635:         --w;
 11812  0263  30FF               	movlw	255
 11813  0264  07C8               	addwf	utoa@w,f
 11814  0265  30FF               	movlw	255
 11815  0266  3DC9               	addwfc	utoa@w+1,f
 11816  0267                     l3329:
 11817                           
 11818                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
 11819  0267  300A               	movlw	10
 11820  0268  00A0               	movwf	___lodiv@divisor
 11821  0269  01A1               	clrf	___lodiv@divisor+1
 11822  026A  01A2               	clrf	___lodiv@divisor+2
 11823  026B  01A3               	clrf	___lodiv@divisor+3
 11824  026C  01A4               	clrf	___lodiv@divisor+4
 11825  026D  01A5               	clrf	___lodiv@divisor+5
 11826  026E  01A6               	clrf	___lodiv@divisor+6
 11827  026F  01A7               	clrf	___lodiv@divisor+7
 11828  0270  084A               	movf	utoa@n,w
 11829  0271  00A8               	movwf	___lodiv@dividend
 11830  0272  084B               	movf	utoa@n+1,w
 11831  0273  00A9               	movwf	___lodiv@dividend+1
 11832  0274  084C               	movf	utoa@n+2,w
 11833  0275  00AA               	movwf	___lodiv@dividend+2
 11834  0276  084D               	movf	utoa@n+3,w
 11835  0277  00AB               	movwf	___lodiv@dividend+3
 11836  0278  084E               	movf	utoa@n+4,w
 11837  0279  00AC               	movwf	___lodiv@dividend+4
 11838  027A  084F               	movf	utoa@n+5,w
 11839  027B  00AD               	movwf	___lodiv@dividend+5
 11840  027C  0850               	movf	utoa@n+6,w
 11841  027D  00AE               	movwf	___lodiv@dividend+6
 11842  027E  0851               	movf	utoa@n+7,w
 11843  027F  00AF               	movwf	___lodiv@dividend+7
 11844  0280  3186  2649  3181   	fcall	___lodiv
 11845  0283  0020               	movlb	0	; select bank0
 11846  0284  0820               	movf	?___lodiv,w
 11847  0285  00CA               	movwf	utoa@n
 11848  0286  0821               	movf	?___lodiv+1,w
 11849  0287  00CB               	movwf	utoa@n+1
 11850  0288  0822               	movf	?___lodiv+2,w
 11851  0289  00CC               	movwf	utoa@n+2
 11852  028A  0823               	movf	?___lodiv+3,w
 11853  028B  00CD               	movwf	utoa@n+3
 11854  028C  0824               	movf	?___lodiv+4,w
 11855  028D  00CE               	movwf	utoa@n+4
 11856  028E  0825               	movf	?___lodiv+5,w
 11857  028F  00CF               	movwf	utoa@n+5
 11858  0290  0826               	movf	?___lodiv+6,w
 11859  0291  00D0               	movwf	utoa@n+6
 11860  0292  0827               	movf	?___lodiv+7,w
 11861  0293  00D1               	movwf	utoa@n+7
 11862  0294                     l3331:
 11863                           
 11864                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11865  0294  0020               	movlb	0	; select bank0
 11866  0295  0852               	movf	utoa@i,w
 11867  0296  0453               	iorwf	utoa@i+1,w
 11868  0297  1903               	btfsc	3,2
 11869  0298  2A9A               	goto	u1161
 11870  0299  2A9B               	goto	u1160
 11871  029A                     u1161:
 11872  029A  2AC7               	goto	l3341
 11873  029B                     u1160:
 11874  029B                     l3333:
 11875  029B  084A               	movf	utoa@n,w
 11876  029C  044B               	iorwf	utoa@n+1,w
 11877  029D  044C               	iorwf	utoa@n+2,w
 11878  029E  044D               	iorwf	utoa@n+3,w
 11879  029F  044E               	iorwf	utoa@n+4,w
 11880  02A0  044F               	iorwf	utoa@n+5,w
 11881  02A1  0450               	iorwf	utoa@n+6,w
 11882  02A2  0451               	iorwf	utoa@n+7,w
 11883  02A3  1D03               	skipz
 11884  02A4  2AA6               	goto	u1171
 11885  02A5  2AA7               	goto	u1170
 11886  02A6                     u1171:
 11887  02A6  2A33               	goto	l3321
 11888  02A7                     u1170:
 11889  02A7                     l3335:
 11890  02A7  0846               	movf	utoa@p+1,w
 11891  02A8  3A80               	xorlw	128
 11892  02A9  00C4               	movwf	??_utoa
 11893  02AA  3080               	movlw	128
 11894  02AB  0244               	subwf	??_utoa,w
 11895  02AC  1D03               	skipz
 11896  02AD  2AB0               	goto	u1185
 11897  02AE  3001               	movlw	1
 11898  02AF  0245               	subwf	utoa@p,w
 11899  02B0                     u1185:
 11900  02B0  1803               	skipnc
 11901  02B1  2AB3               	goto	u1181
 11902  02B2  2AB4               	goto	u1180
 11903  02B3                     u1181:
 11904  02B3  2A33               	goto	l3321
 11905  02B4                     u1180:
 11906  02B4                     l3337:
 11907  02B4  0020               	movlb	0	; select bank0
 11908  02B5  0849               	movf	utoa@w+1,w
 11909  02B6  3A80               	xorlw	128
 11910  02B7  00C4               	movwf	??_utoa
 11911  02B8  3080               	movlw	128
 11912  02B9  0244               	subwf	??_utoa,w
 11913  02BA  1D03               	skipz
 11914  02BB  2ABE               	goto	u1195
 11915  02BC  3001               	movlw	1
 11916  02BD  0248               	subwf	utoa@w,w
 11917  02BE                     u1195:
 11918  02BE  1C03               	skipc
 11919  02BF  2AC1               	goto	u1191
 11920  02C0  2AC2               	goto	u1190
 11921  02C1                     u1191:
 11922  02C1  2AC7               	goto	l3341
 11923  02C2                     u1190:
 11924  02C2                     l3339:
 11925  02C2  0021               	movlb	1	; select bank1
 11926  02C3  18A6               	btfsc	_flags^(0+128),1
 11927  02C4  2AC6               	goto	u1201
 11928  02C5  2AC7               	goto	u1200
 11929  02C6                     u1201:
 11930  02C6  2A33               	goto	l3321
 11931  02C7                     u1200:
 11932  02C7                     l3341:
 11933                           
 11934                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
 11935  02C7  0020               	movlb	0	; select bank0
 11936  02C8  0852               	movf	utoa@i,w
 11937  02C9  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11938  02CA  00C4               	movwf	??_utoa
 11939  02CB  0844               	movf	??_utoa,w
 11940  02CC  00B3               	movwf	pad@buf
 11941  02CD  0849               	movf	utoa@w+1,w
 11942  02CE  00B5               	movwf	pad@p+1
 11943  02CF  0848               	movf	utoa@w,w
 11944  02D0  00B4               	movwf	pad@p
 11945  02D1  0847               	movf	utoa@fp,w
 11946  02D2  318F  27A7  3181   	fcall	_pad
 11947  02D5  0020               	movlb	0	; select bank0
 11948  02D6  0834               	movf	?_pad+1,w
 11949  02D7  00BD               	movwf	?_utoa+1
 11950  02D8  0833               	movf	?_pad,w
 11951  02D9  00BC               	movwf	?_utoa
 11952  02DA                     l1661:
 11953  02DA  0008               	return
 11954  02DB                     __end_of_utoa:
 11955                           
 11956                           	psect	text36
 11957  0FA7                     __ptext36:	
 11958 ;; *************** function _pad *****************
 11959 ;; Defined at:
 11960 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11961 ;; Parameters:    Size  Location     Type
 11962 ;;  fp              1    wreg     PTR struct _IO_FILE
 11963 ;;		 -> NULL(0), 
 11964 ;;  buf             1   19[BANK0 ] PTR unsigned char 
 11965 ;;		 -> dbuf(32), 
 11966 ;;  p               2   20[BANK0 ] int 
 11967 ;; Auto vars:     Size  Location     Type
 11968 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 11969 ;;		 -> NULL(0), 
 11970 ;;  w               2   25[BANK0 ] int 
 11971 ;;  i               2   23[BANK0 ] int 
 11972 ;; Return value:  Size  Location     Type
 11973 ;;                  2   19[BANK0 ] int 
 11974 ;; Registers used:
 11975 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11976 ;; Tracked objects:
 11977 ;;		On entry : 0/0
 11978 ;;		On exit  : 0/0
 11979 ;;		Unchanged: 0/0
 11980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11981 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11982 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11983 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11984 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11985 ;;Total ram usage:        9 bytes
 11986 ;; Hardware stack levels used: 1
 11987 ;; Hardware stack levels required when called: 8
 11988 ;; This function calls:
 11989 ;;		_fputc
 11990 ;;		_fputs
 11991 ;;		_strlen
 11992 ;; This function is called by:
 11993 ;;		_utoa
 11994 ;; This function uses a non-reentrant model
 11995 ;;
 11996                           
 11997  0FA7                     _pad:	
 11998                           ;psect for function _pad
 11999                           
 12000                           
 12001                           ;incstack = 0
 12002                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12003                           ;pad@fp stored from wreg
 12004  0FA7  0020               	movlb	0	; select bank0
 12005  0FA8  00BB               	movwf	pad@fp
 12006  0FA9                     l3289:
 12007                           
 12008                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12009  0FA9  0021               	movlb	1	; select bank1
 12010  0FAA  1C26               	btfss	_flags^(0+128),0
 12011  0FAB  2FAD               	goto	u1101
 12012  0FAC  2FAE               	goto	u1100
 12013  0FAD                     u1101:
 12014  0FAD  2FB7               	goto	l3293
 12015  0FAE                     u1100:
 12016  0FAE                     l3291:
 12017                           
 12018                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12019  0FAE  0020               	movlb	0	; select bank0
 12020  0FAF  083B               	movf	pad@fp,w
 12021  0FB0  00B6               	movwf	??_pad
 12022  0FB1  0836               	movf	??_pad,w
 12023  0FB2  00AB               	movwf	fputs@fp
 12024  0FB3  0833               	movf	pad@buf,w
 12025  0FB4  318C  2480  318F   	fcall	_fputs
 12026  0FB7                     l3293:
 12027                           
 12028                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12029  0FB7  0020               	movlb	0	; select bank0
 12030  0FB8  1BB5               	btfsc	pad@p+1,7
 12031  0FB9  2FBB               	goto	u1111
 12032  0FBA  2FBC               	goto	u1110
 12033  0FBB                     u1111:
 12034  0FBB  2FC1               	goto	l3297
 12035  0FBC                     u1110:
 12036  0FBC                     l3295:
 12037  0FBC  0835               	movf	pad@p+1,w
 12038  0FBD  00BA               	movwf	pad@w+1
 12039  0FBE  0834               	movf	pad@p,w
 12040  0FBF  00B9               	movwf	pad@w
 12041  0FC0  2FC3               	goto	l1641
 12042  0FC1                     l3297:
 12043  0FC1  01B9               	clrf	pad@w
 12044  0FC2  01BA               	clrf	pad@w+1
 12045  0FC3                     l1641:
 12046                           
 12047                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12048  0FC3  01B7               	clrf	pad@i
 12049  0FC4  01B8               	clrf	pad@i+1
 12050                           
 12051                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12052  0FC5  2FD7               	goto	l3303
 12053  0FC6                     l3299:
 12054                           
 12055                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12056  0FC6  3020               	movlw	32
 12057  0FC7  0020               	movlb	0	; select bank0
 12058  0FC8  00A3               	movwf	fputc@c
 12059  0FC9  3000               	movlw	0
 12060  0FCA  00A4               	movwf	fputc@c+1
 12061  0FCB  083B               	movf	pad@fp,w
 12062  0FCC  00B6               	movwf	??_pad
 12063  0FCD  0836               	movf	??_pad,w
 12064  0FCE  00A5               	movwf	fputc@fp
 12065  0FCF  318E  26D2  318F   	fcall	_fputc
 12066  0FD2                     l3301:
 12067                           
 12068                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12069  0FD2  3001               	movlw	1
 12070  0FD3  0020               	movlb	0	; select bank0
 12071  0FD4  07B7               	addwf	pad@i,f
 12072  0FD5  3000               	movlw	0
 12073  0FD6  3DB8               	addwfc	pad@i+1,f
 12074  0FD7                     l3303:
 12075                           
 12076                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12077  0FD7  0838               	movf	pad@i+1,w
 12078  0FD8  3A80               	xorlw	128
 12079  0FD9  00B6               	movwf	??_pad
 12080  0FDA  083A               	movf	pad@w+1,w
 12081  0FDB  3A80               	xorlw	128
 12082  0FDC  0236               	subwf	??_pad,w
 12083  0FDD  1D03               	skipz
 12084  0FDE  2FE1               	goto	u1125
 12085  0FDF  0839               	movf	pad@w,w
 12086  0FE0  0237               	subwf	pad@i,w
 12087  0FE1                     u1125:
 12088  0FE1  1C03               	skipc
 12089  0FE2  2FE4               	goto	u1121
 12090  0FE3  2FE5               	goto	u1120
 12091  0FE4                     u1121:
 12092  0FE4  2FC6               	goto	l3299
 12093  0FE5                     u1120:
 12094  0FE5                     l1644:
 12095                           
 12096                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12097  0FE5  0021               	movlb	1	; select bank1
 12098  0FE6  1826               	btfsc	_flags^(0+128),0
 12099  0FE7  2FE9               	goto	u1131
 12100  0FE8  2FEA               	goto	u1130
 12101  0FE9                     u1131:
 12102  0FE9  2FF3               	goto	l1645
 12103  0FEA                     u1130:
 12104  0FEA                     l3305:
 12105                           
 12106                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12107  0FEA  0020               	movlb	0	; select bank0
 12108  0FEB  083B               	movf	pad@fp,w
 12109  0FEC  00B6               	movwf	??_pad
 12110  0FED  0836               	movf	??_pad,w
 12111  0FEE  00AB               	movwf	fputs@fp
 12112  0FEF  0833               	movf	pad@buf,w
 12113  0FF0  318C  2480  318F   	fcall	_fputs
 12114  0FF3                     l1645:	
 12115                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 92:     }
 12116                           
 12117                           
 12118                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12119  0FF3  0020               	movlb	0	; select bank0
 12120  0FF4  0833               	movf	pad@buf,w
 12121  0FF5  318C  2423  318F   	fcall	_strlen
 12122  0FF8  0020               	movlb	0	; select bank0
 12123  0FF9  0839               	movf	pad@w,w
 12124  0FFA  0720               	addwf	?_strlen,w
 12125  0FFB  00B3               	movwf	?_pad
 12126  0FFC  083A               	movf	pad@w+1,w
 12127  0FFD  3D21               	addwfc	?_strlen+1,w
 12128  0FFE  00B4               	movwf	?_pad+1
 12129  0FFF                     l1646:
 12130  0FFF  0008               	return
 12131  1000                     __end_of_pad:
 12132                           
 12133                           	psect	text37
 12134  0C23                     __ptext37:	
 12135 ;; *************** function _strlen *****************
 12136 ;; Defined at:
 12137 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
 12138 ;; Parameters:    Size  Location     Type
 12139 ;;  s               1    wreg     PTR const unsigned char 
 12140 ;;		 -> dbuf(32), 
 12141 ;; Auto vars:     Size  Location     Type
 12142 ;;  s               1    4[BANK0 ] PTR const unsigned char 
 12143 ;;		 -> dbuf(32), 
 12144 ;;  a               1    3[BANK0 ] PTR const unsigned char 
 12145 ;;		 -> dbuf(32), 
 12146 ;; Return value:  Size  Location     Type
 12147 ;;                  2    0[BANK0 ] unsigned int 
 12148 ;; Registers used:
 12149 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12150 ;; Tracked objects:
 12151 ;;		On entry : 0/0
 12152 ;;		On exit  : 0/0
 12153 ;;		Unchanged: 0/0
 12154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12155 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12156 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12157 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12158 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12159 ;;Total ram usage:        5 bytes
 12160 ;; Hardware stack levels used: 1
 12161 ;; Hardware stack levels required when called: 4
 12162 ;; This function calls:
 12163 ;;		Nothing
 12164 ;; This function is called by:
 12165 ;;		_pad
 12166 ;; This function uses a non-reentrant model
 12167 ;;
 12168                           
 12169  0C23                     _strlen:	
 12170                           ;psect for function _strlen
 12171                           
 12172                           
 12173                           ;incstack = 0
 12174                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 12175                           ;strlen@s stored from wreg
 12176  0C23  0020               	movlb	0	; select bank0
 12177  0C24  00A4               	movwf	strlen@s
 12178  0C25                     l3241:
 12179  0C25  0824               	movf	strlen@s,w
 12180  0C26  00A2               	movwf	??_strlen
 12181  0C27  0822               	movf	??_strlen,w
 12182  0C28  00A3               	movwf	strlen@a
 12183  0C29  2C2E               	goto	l3245
 12184  0C2A                     l3243:
 12185  0C2A  3001               	movlw	1
 12186  0C2B  00A2               	movwf	??_strlen
 12187  0C2C  0822               	movf	??_strlen,w
 12188  0C2D  07A4               	addwf	strlen@s,f
 12189  0C2E                     l3245:
 12190  0C2E  0824               	movf	strlen@s,w
 12191  0C2F  0086               	movwf	6
 12192  0C30  3001               	movlw	1	; select bank2/3
 12193  0C31  0087               	movwf	7
 12194  0C32  0801               	movf	1,w
 12195  0C33  1D03               	btfss	3,2
 12196  0C34  2C36               	goto	u1001
 12197  0C35  2C37               	goto	u1000
 12198  0C36                     u1001:
 12199  0C36  2C2A               	goto	l3243
 12200  0C37                     u1000:
 12201  0C37                     l3247:
 12202  0C37  0823               	movf	strlen@a,w
 12203  0C38  0224               	subwf	strlen@s,w
 12204  0C39  00A0               	movwf	?_strlen
 12205  0C3A  01A1               	clrf	?_strlen+1
 12206  0C3B  1BA0               	btfsc	?_strlen,7
 12207  0C3C  03A1               	decf	?_strlen+1,f
 12208  0C3D                     l1699:
 12209  0C3D  0008               	return
 12210  0C3E                     __end_of_strlen:
 12211                           
 12212                           	psect	text38
 12213  0C80                     __ptext38:	
 12214 ;; *************** function _fputs *****************
 12215 ;; Defined at:
 12216 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
 12217 ;; Parameters:    Size  Location     Type
 12218 ;;  s               1    wreg     PTR const unsigned char 
 12219 ;;		 -> dbuf(32), 
 12220 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
 12221 ;;		 -> NULL(0), 
 12222 ;; Auto vars:     Size  Location     Type
 12223 ;;  s               1   18[BANK0 ] PTR const unsigned char 
 12224 ;;		 -> dbuf(32), 
 12225 ;;  i               2   16[BANK0 ] int 
 12226 ;;  c               1   15[BANK0 ] unsigned char 
 12227 ;; Return value:  Size  Location     Type
 12228 ;;                  2   11[BANK0 ] int 
 12229 ;; Registers used:
 12230 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12231 ;; Tracked objects:
 12232 ;;		On entry : 0/0
 12233 ;;		On exit  : 0/0
 12234 ;;		Unchanged: 0/0
 12235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12236 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12237 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12238 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12239 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12240 ;;Total ram usage:        8 bytes
 12241 ;; Hardware stack levels used: 1
 12242 ;; Hardware stack levels required when called: 7
 12243 ;; This function calls:
 12244 ;;		_fputc
 12245 ;; This function is called by:
 12246 ;;		_pad
 12247 ;; This function uses a non-reentrant model
 12248 ;;
 12249                           
 12250  0C80                     _fputs:	
 12251                           ;psect for function _fputs
 12252                           
 12253                           
 12254                           ;incstack = 0
 12255                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12256                           ;fputs@s stored from wreg
 12257  0C80  0020               	movlb	0	; select bank0
 12258  0C81  00B2               	movwf	fputs@s
 12259  0C82                     l3233:
 12260  0C82  01B0               	clrf	fputs@i
 12261  0C83  01B1               	clrf	fputs@i+1
 12262  0C84  2C98               	goto	l3239
 12263  0C85                     l3235:
 12264  0C85  082F               	movf	fputs@c,w
 12265  0C86  00AC               	movwf	??_fputs
 12266  0C87  01AD               	clrf	??_fputs+1
 12267  0C88  082C               	movf	??_fputs,w
 12268  0C89  00A3               	movwf	fputc@c
 12269  0C8A  082D               	movf	??_fputs+1,w
 12270  0C8B  00A4               	movwf	fputc@c+1
 12271  0C8C  082B               	movf	fputs@fp,w
 12272  0C8D  00AE               	movwf	??_fputs+2
 12273  0C8E  082E               	movf	??_fputs+2,w
 12274  0C8F  00A5               	movwf	fputc@fp
 12275  0C90  318E  26D2  318C   	fcall	_fputc
 12276  0C93                     l3237:
 12277  0C93  3001               	movlw	1
 12278  0C94  0020               	movlb	0	; select bank0
 12279  0C95  07B0               	addwf	fputs@i,f
 12280  0C96  3000               	movlw	0
 12281  0C97  3DB1               	addwfc	fputs@i+1,f
 12282  0C98                     l3239:
 12283  0C98  0830               	movf	fputs@i,w
 12284  0C99  0732               	addwf	fputs@s,w
 12285  0C9A  00AC               	movwf	??_fputs
 12286  0C9B  082C               	movf	??_fputs,w
 12287  0C9C  0086               	movwf	6
 12288  0C9D  3001               	movlw	1	; select bank2/3
 12289  0C9E  0087               	movwf	7
 12290  0C9F  0801               	movf	1,w
 12291  0CA0  00AD               	movwf	??_fputs+1
 12292  0CA1  082D               	movf	??_fputs+1,w
 12293  0CA2  00AF               	movwf	fputs@c
 12294  0CA3  082F               	movf	fputs@c,w
 12295  0CA4  1D03               	btfss	3,2
 12296  0CA5  2CA7               	goto	u991
 12297  0CA6  2CA8               	goto	u990
 12298  0CA7                     u991:
 12299  0CA7  2C85               	goto	l3235
 12300  0CA8                     u990:
 12301  0CA8                     l1693:
 12302  0CA8  0008               	return
 12303  0CA9                     __end_of_fputs:
 12304                           
 12305                           	psect	text39
 12306  0ED2                     __ptext39:	
 12307 ;; *************** function _fputc *****************
 12308 ;; Defined at:
 12309 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
 12310 ;; Parameters:    Size  Location     Type
 12311 ;;  c               2    3[BANK0 ] int 
 12312 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
 12313 ;;		 -> NULL(0), 
 12314 ;; Auto vars:     Size  Location     Type
 12315 ;;		None
 12316 ;; Return value:  Size  Location     Type
 12317 ;;                  2    3[BANK0 ] int 
 12318 ;; Registers used:
 12319 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12320 ;; Tracked objects:
 12321 ;;		On entry : 0/0
 12322 ;;		On exit  : 0/0
 12323 ;;		Unchanged: 0/0
 12324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12325 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12327 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12328 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12329 ;;Total ram usage:        8 bytes
 12330 ;; Hardware stack levels used: 1
 12331 ;; Hardware stack levels required when called: 6
 12332 ;; This function calls:
 12333 ;;		_putch
 12334 ;; This function is called by:
 12335 ;;		_pad
 12336 ;;		_vfpfcnvrt
 12337 ;;		_fputs
 12338 ;; This function uses a non-reentrant model
 12339 ;;
 12340                           
 12341  0ED2                     _fputc:	
 12342                           ;psect for function _fputc
 12343                           
 12344  0ED2                     l3219:	
 12345                           ;incstack = 0
 12346                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12347                           
 12348  0ED2  0020               	movlb	0	; select bank0
 12349  0ED3  0825               	movf	fputc@fp,w
 12350  0ED4  1903               	btfsc	3,2
 12351  0ED5  2ED7               	goto	u951
 12352  0ED6  2ED8               	goto	u950
 12353  0ED7                     u951:
 12354  0ED7  2EDD               	goto	l3223
 12355  0ED8                     u950:
 12356  0ED8                     l3221:
 12357  0ED8  0825               	movf	fputc@fp,w
 12358  0ED9  1D03               	btfss	3,2
 12359  0EDA  2EDC               	goto	u961
 12360  0EDB  2EDD               	goto	u960
 12361  0EDC                     u961:
 12362  0EDC  2EE2               	goto	l3225
 12363  0EDD                     u960:
 12364  0EDD                     l3223:
 12365  0EDD  0823               	movf	fputc@c,w
 12366  0EDE  318A  2229  318E   	fcall	_putch
 12367  0EE1  2F14               	goto	l1685
 12368  0EE2                     l3225:
 12369  0EE2  0825               	movf	fputc@fp,w
 12370  0EE3  3E08               	addlw	8
 12371  0EE4  0086               	movwf	6
 12372  0EE5  0187               	clrf	7
 12373  0EE6  0016               	moviw fsr1++
 12374  0EE7  0401               	iorwf	1,w
 12375  0EE8  1903               	btfsc	3,2
 12376  0EE9  2EEB               	goto	u971
 12377  0EEA  2EEC               	goto	u970
 12378  0EEB                     u971:
 12379  0EEB  2F0A               	goto	l3229
 12380  0EEC                     u970:
 12381  0EEC                     l3227:
 12382  0EEC  0825               	movf	fputc@fp,w
 12383  0EED  3E08               	addlw	8
 12384  0EEE  0086               	movwf	6
 12385  0EEF  0187               	clrf	7
 12386  0EF0  3F40               	moviw [0]fsr1
 12387  0EF1  00A6               	movwf	??_fputc
 12388  0EF2  3F41               	moviw [1]fsr1
 12389  0EF3  00A7               	movwf	??_fputc+1
 12390  0EF4  0825               	movf	fputc@fp,w
 12391  0EF5  3E02               	addlw	2
 12392  0EF6  0086               	movwf	6
 12393  0EF7  0187               	clrf	7
 12394  0EF8  3F40               	moviw [0]fsr1
 12395  0EF9  00A8               	movwf	??_fputc+2
 12396  0EFA  3F41               	moviw [1]fsr1
 12397  0EFB  00A9               	movwf	??_fputc+3
 12398  0EFC  0829               	movf	??_fputc+3,w
 12399  0EFD  3A80               	xorlw	128
 12400  0EFE  00AA               	movwf	??_fputc+4
 12401  0EFF  0827               	movf	??_fputc+1,w
 12402  0F00  3A80               	xorlw	128
 12403  0F01  022A               	subwf	??_fputc+4,w
 12404  0F02  1D03               	skipz
 12405  0F03  2F06               	goto	u985
 12406  0F04  0826               	movf	??_fputc,w
 12407  0F05  0228               	subwf	??_fputc+2,w
 12408  0F06                     u985:
 12409  0F06  1803               	skipnc
 12410  0F07  2F09               	goto	u981
 12411  0F08  2F0A               	goto	u980
 12412  0F09                     u981:
 12413  0F09  2F14               	goto	l1685
 12414  0F0A                     u980:
 12415  0F0A                     l3229:
 12416  0F0A  0020               	movlb	0	; select bank0
 12417  0F0B  0825               	movf	fputc@fp,w
 12418  0F0C  3E02               	addlw	2
 12419  0F0D  0086               	movwf	6
 12420  0F0E  0187               	clrf	7
 12421  0F0F  3001               	movlw	1
 12422  0F10  0781               	addwf	1,f
 12423  0F11  3141               	addfsr 1,1
 12424  0F12  1803               	skipnc
 12425  0F13  0A81               	incf	1,f
 12426  0F14                     l1685:
 12427  0F14  0008               	return
 12428  0F15                     __end_of_fputc:
 12429                           
 12430                           	psect	text40
 12431  0A29                     __ptext40:	
 12432 ;; *************** function _putch *****************
 12433 ;; Defined at:
 12434 ;;		line 174 in file "eusart.c"
 12435 ;; Parameters:    Size  Location     Type
 12436 ;;  txData          1    wreg     unsigned char 
 12437 ;; Auto vars:     Size  Location     Type
 12438 ;;  txData          1    2[BANK0 ] unsigned char 
 12439 ;; Return value:  Size  Location     Type
 12440 ;;                  1    wreg      void 
 12441 ;; Registers used:
 12442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12443 ;; Tracked objects:
 12444 ;;		On entry : 0/0
 12445 ;;		On exit  : 0/0
 12446 ;;		Unchanged: 0/0
 12447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12449 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12451 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12452 ;;Total ram usage:        1 bytes
 12453 ;; Hardware stack levels used: 1
 12454 ;; Hardware stack levels required when called: 5
 12455 ;; This function calls:
 12456 ;;		_EUSART_Write
 12457 ;; This function is called by:
 12458 ;;		_fputc
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462  0A29                     _putch:	
 12463                           ;psect for function _putch
 12464                           
 12465                           
 12466                           ;incstack = 0
 12467                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12468                           ;putch@txData stored from wreg
 12469  0A29  0020               	movlb	0	; select bank0
 12470  0A2A  00A2               	movwf	putch@txData
 12471  0A2B                     l3217:
 12472                           
 12473                           ;eusart.c: 174: void putch(char txData);eusart.c: 175: {;eusart.c: 176:     EUSART_Write
      +                          (txData);
 12474  0A2B  0822               	movf	putch@txData,w
 12475  0A2C  318C  24D4  318A   	fcall	_EUSART_Write
 12476  0A2F                     l629:
 12477  0A2F  0008               	return
 12478  0A30                     __end_of_putch:
 12479                           
 12480                           	psect	text41
 12481  0CD4                     __ptext41:	
 12482 ;; *************** function _EUSART_Write *****************
 12483 ;; Defined at:
 12484 ;;		line 142 in file "eusart.c"
 12485 ;; Parameters:    Size  Location     Type
 12486 ;;  txData          1    wreg     unsigned char 
 12487 ;; Auto vars:     Size  Location     Type
 12488 ;;  txData          1    1[BANK0 ] unsigned char 
 12489 ;; Return value:  Size  Location     Type
 12490 ;;                  1    wreg      void 
 12491 ;; Registers used:
 12492 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12493 ;; Tracked objects:
 12494 ;;		On entry : 0/0
 12495 ;;		On exit  : 0/0
 12496 ;;		Unchanged: 0/0
 12497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12499 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12500 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12501 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12502 ;;Total ram usage:        2 bytes
 12503 ;; Hardware stack levels used: 1
 12504 ;; Hardware stack levels required when called: 4
 12505 ;; This function calls:
 12506 ;;		Nothing
 12507 ;; This function is called by:
 12508 ;;		_putch
 12509 ;; This function uses a non-reentrant model
 12510 ;;
 12511                           
 12512  0CD4                     _EUSART_Write:	
 12513                           ;psect for function _EUSART_Write
 12514                           
 12515                           
 12516                           ;incstack = 0
 12517                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 12518                           ;EUSART_Write@txData stored from wreg
 12519  0CD4  0020               	movlb	0	; select bank0
 12520  0CD5  00A1               	movwf	EUSART_Write@txData
 12521  0CD6                     l3199:
 12522  0CD6                     l3201:	
 12523                           ;eusart.c: 142: void EUSART_Write(uint8_t txData);eusart.c: 143: {;eusart.c: 144:     wh
      +                          ile(0 == eusartTxBufferRemaining)
 12524                           
 12525                           
 12526                           ;eusart.c: 144:     while(0 == eusartTxBufferRemaining)
 12527  0CD6  0021               	movlb	1	; select bank1
 12528  0CD7  0852               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 12529  0CD8  1903               	btfsc	3,2
 12530  0CD9  2CDB               	goto	u921
 12531  0CDA  2CDC               	goto	u920
 12532  0CDB                     u921:
 12533  0CDB  2CD6               	goto	l3201
 12534  0CDC                     u920:
 12535  0CDC                     l619:
 12536                           
 12537                           ;eusart.c: 148:     if(0 == PIE1bits.TXIE)
 12538  0CDC  1A11               	btfsc	17,4	;volatile
 12539  0CDD  2CDF               	goto	u931
 12540  0CDE  2CE0               	goto	u930
 12541  0CDF                     u931:
 12542  0CDF  2CE5               	goto	l620
 12543  0CE0                     u930:
 12544  0CE0                     l3203:
 12545                           
 12546                           ;eusart.c: 149:     {;eusart.c: 150:         TX1REG = txData;
 12547  0CE0  0020               	movlb	0	; select bank0
 12548  0CE1  0821               	movf	EUSART_Write@txData,w
 12549  0CE2  0023               	movlb	3	; select bank3
 12550  0CE3  009A               	movwf	26	;volatile
 12551                           
 12552                           ;eusart.c: 151:     }
 12553  0CE4  2CFE               	goto	l3215
 12554  0CE5                     l620:	
 12555                           ;eusart.c: 152:     else
 12556                           
 12557                           
 12558                           ;eusart.c: 153:     {;eusart.c: 154:         PIE1bits.TXIE = 0;
 12559  0CE5  1211               	bcf	17,4	;volatile
 12560  0CE6                     l3205:
 12561                           
 12562                           ;eusart.c: 155:         eusartTxBuffer[eusartTxHead++] = txData;
 12563  0CE6  0020               	movlb	0	; select bank0
 12564  0CE7  0821               	movf	EUSART_Write@txData,w
 12565  0CE8  00A0               	movwf	??_EUSART_Write
 12566  0CE9  087C               	movf	_eusartTxHead,w
 12567  0CEA  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 12568  0CEB  0086               	movwf	6
 12569  0CEC  3001               	movlw	1	; select bank2/3
 12570  0CED  0087               	movwf	7
 12571  0CEE  0820               	movf	??_EUSART_Write,w
 12572  0CEF  0081               	movwf	1
 12573  0CF0                     l3207:
 12574  0CF0  3001               	movlw	1
 12575  0CF1  00A0               	movwf	??_EUSART_Write
 12576  0CF2  0820               	movf	??_EUSART_Write,w
 12577  0CF3  07FC               	addwf	_eusartTxHead,f	;volatile
 12578  0CF4                     l3209:
 12579                           
 12580                           ;eusart.c: 156:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 12581  0CF4  3008               	movlw	8
 12582  0CF5  027C               	subwf	_eusartTxHead,w	;volatile
 12583  0CF6  1C03               	skipc
 12584  0CF7  2CF9               	goto	u941
 12585  0CF8  2CFA               	goto	u940
 12586  0CF9                     u941:
 12587  0CF9  2CFB               	goto	l3213
 12588  0CFA                     u940:
 12589  0CFA                     l3211:
 12590                           
 12591                           ;eusart.c: 157:         {;eusart.c: 158:             eusartTxHead = 0;
 12592  0CFA  01FC               	clrf	_eusartTxHead	;volatile
 12593  0CFB                     l3213:
 12594                           
 12595                           ;eusart.c: 160:         eusartTxBufferRemaining--;
 12596  0CFB  3001               	movlw	1
 12597  0CFC  0021               	movlb	1	; select bank1
 12598  0CFD  02D2               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 12599  0CFE                     l3215:
 12600                           
 12601                           ;eusart.c: 162:     PIE1bits.TXIE = 1;
 12602  0CFE  0021               	movlb	1	; select bank1
 12603  0CFF  1611               	bsf	17,4	;volatile
 12604  0D00                     l623:
 12605  0D00  0008               	return
 12606  0D01                     __end_of_EUSART_Write:
 12607                           
 12608                           	psect	text42
 12609  06CD                     __ptext42:	
 12610 ;; *************** function ___lomod *****************
 12611 ;; Defined at:
 12612 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lomod.c"
 12613 ;; Parameters:    Size  Location     Type
 12614 ;;  divisor         8    0[BANK0 ] unsigned long long 
 12615 ;;  dividend        8    8[BANK0 ] unsigned long long 
 12616 ;; Auto vars:     Size  Location     Type
 12617 ;;  counter         1   17[BANK0 ] unsigned char 
 12618 ;; Return value:  Size  Location     Type
 12619 ;;                  8    0[BANK0 ] unsigned long long 
 12620 ;; Registers used:
 12621 ;;		wreg, status,2, status,0
 12622 ;; Tracked objects:
 12623 ;;		On entry : 0/0
 12624 ;;		On exit  : 0/0
 12625 ;;		Unchanged: 0/0
 12626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12627 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12628 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12629 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12630 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12631 ;;Total ram usage:       18 bytes
 12632 ;; Hardware stack levels used: 1
 12633 ;; Hardware stack levels required when called: 4
 12634 ;; This function calls:
 12635 ;;		Nothing
 12636 ;; This function is called by:
 12637 ;;		_utoa
 12638 ;; This function uses a non-reentrant model
 12639 ;;
 12640                           
 12641  06CD                     ___lomod:	
 12642                           ;psect for function ___lomod
 12643                           
 12644  06CD                     l3273:	
 12645                           ;incstack = 0
 12646                           ; Regs used in ___lomod: [wreg+status,2+status,0]
 12647                           
 12648  06CD  0020               	movlb	0	; select bank0
 12649  06CE  0820               	movf	___lomod@divisor,w
 12650  06CF  0421               	iorwf	___lomod@divisor+1,w
 12651  06D0  0422               	iorwf	___lomod@divisor+2,w
 12652  06D1  0423               	iorwf	___lomod@divisor+3,w
 12653  06D2  0424               	iorwf	___lomod@divisor+4,w
 12654  06D3  0425               	iorwf	___lomod@divisor+5,w
 12655  06D4  0426               	iorwf	___lomod@divisor+6,w
 12656  06D5  0427               	iorwf	___lomod@divisor+7,w
 12657  06D6  1903               	skipnz
 12658  06D7  2ED9               	goto	u1061
 12659  06D8  2EDA               	goto	u1060
 12660  06D9                     u1061:
 12661  06D9  2F2D               	goto	l1396
 12662  06DA                     u1060:
 12663  06DA                     l3275:
 12664  06DA  01B1               	clrf	___lomod@counter
 12665  06DB  0AB1               	incf	___lomod@counter,f
 12666  06DC  2EE9               	goto	l3281
 12667  06DD                     l3277:
 12668  06DD  35A0               	lslf	___lomod@divisor,f
 12669  06DE  0DA1               	rlf	___lomod@divisor+1,f
 12670  06DF  0DA2               	rlf	___lomod@divisor+2,f
 12671  06E0  0DA3               	rlf	___lomod@divisor+3,f
 12672  06E1  0DA4               	rlf	___lomod@divisor+4,f
 12673  06E2  0DA5               	rlf	___lomod@divisor+5,f
 12674  06E3  0DA6               	rlf	___lomod@divisor+6,f
 12675  06E4  0DA7               	rlf	___lomod@divisor+7,f
 12676  06E5                     l3279:
 12677  06E5  3001               	movlw	1
 12678  06E6  00B0               	movwf	??___lomod
 12679  06E7  0830               	movf	??___lomod,w
 12680  06E8  07B1               	addwf	___lomod@counter,f
 12681  06E9                     l3281:
 12682  06E9  1FA7               	btfss	___lomod@divisor+7,7
 12683  06EA  2EEC               	goto	u1071
 12684  06EB  2EED               	goto	u1070
 12685  06EC                     u1071:
 12686  06EC  2EDD               	goto	l3277
 12687  06ED                     u1070:
 12688  06ED                     l3283:
 12689  06ED  0827               	movf	___lomod@divisor+7,w
 12690  06EE  022F               	subwf	___lomod@dividend+7,w
 12691  06EF  1D03               	skipz
 12692  06F0  2F0B               	goto	u1085
 12693  06F1  0826               	movf	___lomod@divisor+6,w
 12694  06F2  022E               	subwf	___lomod@dividend+6,w
 12695  06F3  1D03               	skipz
 12696  06F4  2F0B               	goto	u1085
 12697  06F5  0825               	movf	___lomod@divisor+5,w
 12698  06F6  022D               	subwf	___lomod@dividend+5,w
 12699  06F7  1D03               	skipz
 12700  06F8  2F0B               	goto	u1085
 12701  06F9  0824               	movf	___lomod@divisor+4,w
 12702  06FA  022C               	subwf	___lomod@dividend+4,w
 12703  06FB  1D03               	skipz
 12704  06FC  2F0B               	goto	u1085
 12705  06FD  0823               	movf	___lomod@divisor+3,w
 12706  06FE  022B               	subwf	___lomod@dividend+3,w
 12707  06FF  1D03               	skipz
 12708  0700  2F0B               	goto	u1085
 12709  0701  0822               	movf	___lomod@divisor+2,w
 12710  0702  022A               	subwf	___lomod@dividend+2,w
 12711  0703  1D03               	skipz
 12712  0704  2F0B               	goto	u1085
 12713  0705  0821               	movf	___lomod@divisor+1,w
 12714  0706  0229               	subwf	___lomod@dividend+1,w
 12715  0707  1D03               	skipz
 12716  0708  2F0B               	goto	u1085
 12717  0709  0820               	movf	___lomod@divisor,w
 12718  070A  0228               	subwf	___lomod@dividend,w
 12719  070B                     u1085:
 12720  070B  1C03               	skipc
 12721  070C  2F0E               	goto	u1081
 12722  070D  2F0F               	goto	u1080
 12723  070E                     u1081:
 12724  070E  2F1F               	goto	l3287
 12725  070F                     u1080:
 12726  070F                     l3285:
 12727  070F  0820               	movf	___lomod@divisor,w
 12728  0710  02A8               	subwf	___lomod@dividend,f
 12729  0711  0821               	movf	___lomod@divisor+1,w
 12730  0712  3BA9               	subwfb	___lomod@dividend+1,f
 12731  0713  0822               	movf	___lomod@divisor+2,w
 12732  0714  3BAA               	subwfb	___lomod@dividend+2,f
 12733  0715  0823               	movf	___lomod@divisor+3,w
 12734  0716  3BAB               	subwfb	___lomod@dividend+3,f
 12735  0717  0824               	movf	___lomod@divisor+4,w
 12736  0718  3BAC               	subwfb	___lomod@dividend+4,f
 12737  0719  0825               	movf	___lomod@divisor+5,w
 12738  071A  3BAD               	subwfb	___lomod@dividend+5,f
 12739  071B  0826               	movf	___lomod@divisor+6,w
 12740  071C  3BAE               	subwfb	___lomod@dividend+6,f
 12741  071D  0827               	movf	___lomod@divisor+7,w
 12742  071E  3BAF               	subwfb	___lomod@dividend+7,f
 12743  071F                     l3287:
 12744  071F  36A7               	lsrf	___lomod@divisor+7,f
 12745  0720  0CA6               	rrf	___lomod@divisor+6,f
 12746  0721  0CA5               	rrf	___lomod@divisor+5,f
 12747  0722  0CA4               	rrf	___lomod@divisor+4,f
 12748  0723  0CA3               	rrf	___lomod@divisor+3,f
 12749  0724  0CA2               	rrf	___lomod@divisor+2,f
 12750  0725  0CA1               	rrf	___lomod@divisor+1,f
 12751  0726  0CA0               	rrf	___lomod@divisor,f
 12752  0727  3001               	movlw	1
 12753  0728  02B1               	subwf	___lomod@counter,f
 12754  0729  1D03               	btfss	3,2
 12755  072A  2F2C               	goto	u1091
 12756  072B  2F2D               	goto	u1090
 12757  072C                     u1091:
 12758  072C  2EED               	goto	l3283
 12759  072D                     u1090:
 12760  072D                     l1396:
 12761  072D  0828               	movf	___lomod@dividend,w
 12762  072E  00A0               	movwf	?___lomod
 12763  072F  0829               	movf	___lomod@dividend+1,w
 12764  0730  00A1               	movwf	?___lomod+1
 12765  0731  082A               	movf	___lomod@dividend+2,w
 12766  0732  00A2               	movwf	?___lomod+2
 12767  0733  082B               	movf	___lomod@dividend+3,w
 12768  0734  00A3               	movwf	?___lomod+3
 12769  0735  082C               	movf	___lomod@dividend+4,w
 12770  0736  00A4               	movwf	?___lomod+4
 12771  0737  082D               	movf	___lomod@dividend+5,w
 12772  0738  00A5               	movwf	?___lomod+5
 12773  0739  082E               	movf	___lomod@dividend+6,w
 12774  073A  00A6               	movwf	?___lomod+6
 12775  073B  082F               	movf	___lomod@dividend+7,w
 12776  073C  00A7               	movwf	?___lomod+7
 12777  073D                     l1403:
 12778  073D  0008               	return
 12779  073E                     __end_of___lomod:
 12780                           
 12781                           	psect	text43
 12782  0649                     __ptext43:	
 12783 ;; *************** function ___lodiv *****************
 12784 ;; Defined at:
 12785 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lodiv.c"
 12786 ;; Parameters:    Size  Location     Type
 12787 ;;  divisor         8    0[BANK0 ] unsigned long long 
 12788 ;;  dividend        8    8[BANK0 ] unsigned long long 
 12789 ;; Auto vars:     Size  Location     Type
 12790 ;;  quotient        8   17[BANK0 ] unsigned long long 
 12791 ;;  counter         1   25[BANK0 ] unsigned char 
 12792 ;; Return value:  Size  Location     Type
 12793 ;;                  8    0[BANK0 ] unsigned long long 
 12794 ;; Registers used:
 12795 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12796 ;; Tracked objects:
 12797 ;;		On entry : 0/0
 12798 ;;		On exit  : 0/0
 12799 ;;		Unchanged: 0/0
 12800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12801 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12802 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12803 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12804 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12805 ;;Total ram usage:       26 bytes
 12806 ;; Hardware stack levels used: 1
 12807 ;; Hardware stack levels required when called: 4
 12808 ;; This function calls:
 12809 ;;		Nothing
 12810 ;; This function is called by:
 12811 ;;		_utoa
 12812 ;; This function uses a non-reentrant model
 12813 ;;
 12814                           
 12815  0649                     ___lodiv:	
 12816                           ;psect for function ___lodiv
 12817                           
 12818  0649                     l3251:	
 12819                           ;incstack = 0
 12820                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 12821                           
 12822  0649  3031               	movlw	low ___lodiv@quotient
 12823  064A  0086               	movwf	6
 12824  064B  3000               	movlw	high ___lodiv@quotient
 12825  064C  0087               	movwf	7
 12826  064D  3008               	movlw	8
 12827  064E  0020               	movlb	0	; select bank0
 12828  064F  00B0               	movwf	??___lodiv
 12829  0650  3000               	movlw	0
 12830  0651                     u1010:
 12831  0651  001E               	movwi fsr1++
 12832  0652  0BB0               	decfsz	??___lodiv,f
 12833  0653  2E51               	goto	u1010
 12834  0654                     l3253:
 12835  0654  0820               	movf	___lodiv@divisor,w
 12836  0655  0421               	iorwf	___lodiv@divisor+1,w
 12837  0656  0422               	iorwf	___lodiv@divisor+2,w
 12838  0657  0423               	iorwf	___lodiv@divisor+3,w
 12839  0658  0424               	iorwf	___lodiv@divisor+4,w
 12840  0659  0425               	iorwf	___lodiv@divisor+5,w
 12841  065A  0426               	iorwf	___lodiv@divisor+6,w
 12842  065B  0427               	iorwf	___lodiv@divisor+7,w
 12843  065C  1903               	skipnz
 12844  065D  2E5F               	goto	u1021
 12845  065E  2E60               	goto	u1020
 12846  065F                     u1021:
 12847  065F  2EBC               	goto	l1386
 12848  0660                     u1020:
 12849  0660                     l3255:
 12850  0660  01B9               	clrf	___lodiv@counter
 12851  0661  0AB9               	incf	___lodiv@counter,f
 12852  0662  2E6F               	goto	l3261
 12853  0663                     l3257:
 12854  0663  35A0               	lslf	___lodiv@divisor,f
 12855  0664  0DA1               	rlf	___lodiv@divisor+1,f
 12856  0665  0DA2               	rlf	___lodiv@divisor+2,f
 12857  0666  0DA3               	rlf	___lodiv@divisor+3,f
 12858  0667  0DA4               	rlf	___lodiv@divisor+4,f
 12859  0668  0DA5               	rlf	___lodiv@divisor+5,f
 12860  0669  0DA6               	rlf	___lodiv@divisor+6,f
 12861  066A  0DA7               	rlf	___lodiv@divisor+7,f
 12862  066B                     l3259:
 12863  066B  3001               	movlw	1
 12864  066C  00B0               	movwf	??___lodiv
 12865  066D  0830               	movf	??___lodiv,w
 12866  066E  07B9               	addwf	___lodiv@counter,f
 12867  066F                     l3261:
 12868  066F  1FA7               	btfss	___lodiv@divisor+7,7
 12869  0670  2E72               	goto	u1031
 12870  0671  2E73               	goto	u1030
 12871  0672                     u1031:
 12872  0672  2E63               	goto	l3257
 12873  0673                     u1030:
 12874  0673                     l3263:
 12875  0673  35B1               	lslf	___lodiv@quotient,f
 12876  0674  0DB2               	rlf	___lodiv@quotient+1,f
 12877  0675  0DB3               	rlf	___lodiv@quotient+2,f
 12878  0676  0DB4               	rlf	___lodiv@quotient+3,f
 12879  0677  0DB5               	rlf	___lodiv@quotient+4,f
 12880  0678  0DB6               	rlf	___lodiv@quotient+5,f
 12881  0679  0DB7               	rlf	___lodiv@quotient+6,f
 12882  067A  0DB8               	rlf	___lodiv@quotient+7,f
 12883  067B                     l3265:
 12884  067B  0827               	movf	___lodiv@divisor+7,w
 12885  067C  022F               	subwf	___lodiv@dividend+7,w
 12886  067D  1D03               	skipz
 12887  067E  2E99               	goto	u1045
 12888  067F  0826               	movf	___lodiv@divisor+6,w
 12889  0680  022E               	subwf	___lodiv@dividend+6,w
 12890  0681  1D03               	skipz
 12891  0682  2E99               	goto	u1045
 12892  0683  0825               	movf	___lodiv@divisor+5,w
 12893  0684  022D               	subwf	___lodiv@dividend+5,w
 12894  0685  1D03               	skipz
 12895  0686  2E99               	goto	u1045
 12896  0687  0824               	movf	___lodiv@divisor+4,w
 12897  0688  022C               	subwf	___lodiv@dividend+4,w
 12898  0689  1D03               	skipz
 12899  068A  2E99               	goto	u1045
 12900  068B  0823               	movf	___lodiv@divisor+3,w
 12901  068C  022B               	subwf	___lodiv@dividend+3,w
 12902  068D  1D03               	skipz
 12903  068E  2E99               	goto	u1045
 12904  068F  0822               	movf	___lodiv@divisor+2,w
 12905  0690  022A               	subwf	___lodiv@dividend+2,w
 12906  0691  1D03               	skipz
 12907  0692  2E99               	goto	u1045
 12908  0693  0821               	movf	___lodiv@divisor+1,w
 12909  0694  0229               	subwf	___lodiv@dividend+1,w
 12910  0695  1D03               	skipz
 12911  0696  2E99               	goto	u1045
 12912  0697  0820               	movf	___lodiv@divisor,w
 12913  0698  0228               	subwf	___lodiv@dividend,w
 12914  0699                     u1045:
 12915  0699  1C03               	skipc
 12916  069A  2E9C               	goto	u1041
 12917  069B  2E9D               	goto	u1040
 12918  069C                     u1041:
 12919  069C  2EAE               	goto	l3271
 12920  069D                     u1040:
 12921  069D                     l3267:
 12922  069D  0820               	movf	___lodiv@divisor,w
 12923  069E  02A8               	subwf	___lodiv@dividend,f
 12924  069F  0821               	movf	___lodiv@divisor+1,w
 12925  06A0  3BA9               	subwfb	___lodiv@dividend+1,f
 12926  06A1  0822               	movf	___lodiv@divisor+2,w
 12927  06A2  3BAA               	subwfb	___lodiv@dividend+2,f
 12928  06A3  0823               	movf	___lodiv@divisor+3,w
 12929  06A4  3BAB               	subwfb	___lodiv@dividend+3,f
 12930  06A5  0824               	movf	___lodiv@divisor+4,w
 12931  06A6  3BAC               	subwfb	___lodiv@dividend+4,f
 12932  06A7  0825               	movf	___lodiv@divisor+5,w
 12933  06A8  3BAD               	subwfb	___lodiv@dividend+5,f
 12934  06A9  0826               	movf	___lodiv@divisor+6,w
 12935  06AA  3BAE               	subwfb	___lodiv@dividend+6,f
 12936  06AB  0827               	movf	___lodiv@divisor+7,w
 12937  06AC  3BAF               	subwfb	___lodiv@dividend+7,f
 12938  06AD                     l3269:
 12939  06AD  1431               	bsf	___lodiv@quotient,0
 12940  06AE                     l3271:
 12941  06AE  36A7               	lsrf	___lodiv@divisor+7,f
 12942  06AF  0CA6               	rrf	___lodiv@divisor+6,f
 12943  06B0  0CA5               	rrf	___lodiv@divisor+5,f
 12944  06B1  0CA4               	rrf	___lodiv@divisor+4,f
 12945  06B2  0CA3               	rrf	___lodiv@divisor+3,f
 12946  06B3  0CA2               	rrf	___lodiv@divisor+2,f
 12947  06B4  0CA1               	rrf	___lodiv@divisor+1,f
 12948  06B5  0CA0               	rrf	___lodiv@divisor,f
 12949  06B6  3001               	movlw	1
 12950  06B7  02B9               	subwf	___lodiv@counter,f
 12951  06B8  1D03               	btfss	3,2
 12952  06B9  2EBB               	goto	u1051
 12953  06BA  2EBC               	goto	u1050
 12954  06BB                     u1051:
 12955  06BB  2E73               	goto	l3263
 12956  06BC                     u1050:
 12957  06BC                     l1386:
 12958  06BC  0831               	movf	___lodiv@quotient,w
 12959  06BD  00A0               	movwf	?___lodiv
 12960  06BE  0832               	movf	___lodiv@quotient+1,w
 12961  06BF  00A1               	movwf	?___lodiv+1
 12962  06C0  0833               	movf	___lodiv@quotient+2,w
 12963  06C1  00A2               	movwf	?___lodiv+2
 12964  06C2  0834               	movf	___lodiv@quotient+3,w
 12965  06C3  00A3               	movwf	?___lodiv+3
 12966  06C4  0835               	movf	___lodiv@quotient+4,w
 12967  06C5  00A4               	movwf	?___lodiv+4
 12968  06C6  0836               	movf	___lodiv@quotient+5,w
 12969  06C7  00A5               	movwf	?___lodiv+5
 12970  06C8  0837               	movf	___lodiv@quotient+6,w
 12971  06C9  00A6               	movwf	?___lodiv+6
 12972  06CA  0838               	movf	___lodiv@quotient+7,w
 12973  06CB  00A7               	movwf	?___lodiv+7
 12974  06CC                     l1393:
 12975  06CC  0008               	return
 12976  06CD                     __end_of___lodiv:
 12977                           
 12978                           	psect	text44
 12979  039E                     __ptext44:	
 12980 ;; *************** function _WritePin *****************
 12981 ;; Defined at:
 12982 ;;		line 148 in file "PIC16Xpress_DevBoard.c"
 12983 ;; Parameters:    Size  Location     Type
 12984 ;;  pin             1    wreg     enum E7144
 12985 ;;  val             1    0[BANK0 ] unsigned char 
 12986 ;; Auto vars:     Size  Location     Type
 12987 ;;  pin             1    3[BANK0 ] enum E7144
 12988 ;; Return value:  Size  Location     Type
 12989 ;;                  1    wreg      unsigned char 
 12990 ;; Registers used:
 12991 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12992 ;; Tracked objects:
 12993 ;;		On entry : 0/0
 12994 ;;		On exit  : 0/0
 12995 ;;		Unchanged: 0/0
 12996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12997 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12998 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12999 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13000 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13001 ;;Total ram usage:        4 bytes
 13002 ;; Hardware stack levels used: 1
 13003 ;; Hardware stack levels required when called: 4
 13004 ;; This function calls:
 13005 ;;		Nothing
 13006 ;; This function is called by:
 13007 ;;		_JSN_Sensor_Init
 13008 ;;		_JSN_Sensor_Trig
 13009 ;;		_main
 13010 ;;		_SpeakerTone_Init
 13011 ;; This function uses a non-reentrant model
 13012 ;;
 13013                           
 13014  039E                     _WritePin:	
 13015                           ;psect for function _WritePin
 13016                           
 13017                           
 13018                           ;incstack = 0
 13019                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
 13020                           ;WritePin@pin stored from wreg
 13021  039E  0020               	movlb	0	; select bank0
 13022  039F  00A3               	movwf	WritePin@pin
 13023  03A0                     l3843:
 13024                           
 13025                           ;PIC16Xpress_DevBoard.c: 149:     switch(pin) {
 13026  03A0  2C18               	goto	l3915
 13027  03A1                     l3845:
 13028                           
 13029                           ;PIC16Xpress_DevBoard.c: 151:             LATAbits.LATA5 = val;
 13030  03A1  0C20               	rrf	WritePin@val,w
 13031  03A2  0022               	movlb	2	; select bank2
 13032  03A3  1C03               	skipc
 13033  03A4  128C               	bcf	12,5	;volatile
 13034  03A5  1803               	skipnc
 13035  03A6  168C               	bsf	12,5	;volatile
 13036  03A7  2C58               	goto	l193
 13037  03A8                     l3849:
 13038                           
 13039                           ;PIC16Xpress_DevBoard.c: 154:             LATAbits.LATA4 = val;
 13040  03A8  0C20               	rrf	WritePin@val,w
 13041  03A9  0022               	movlb	2	; select bank2
 13042  03AA  1C03               	skipc
 13043  03AB  120C               	bcf	12,4	;volatile
 13044  03AC  1803               	skipnc
 13045  03AD  160C               	bsf	12,4	;volatile
 13046  03AE  2C58               	goto	l193
 13047  03AF                     l3853:
 13048                           
 13049                           ;PIC16Xpress_DevBoard.c: 159:             LATCbits.LATC5 = val;
 13050  03AF  0C20               	rrf	WritePin@val,w
 13051  03B0  0022               	movlb	2	; select bank2
 13052  03B1  1C03               	skipc
 13053  03B2  128E               	bcf	14,5	;volatile
 13054  03B3  1803               	skipnc
 13055  03B4  168E               	bsf	14,5	;volatile
 13056  03B5  2C58               	goto	l193
 13057  03B6                     l3857:
 13058                           
 13059                           ;PIC16Xpress_DevBoard.c: 162:             LATCbits.LATC4 = val;
 13060  03B6  0C20               	rrf	WritePin@val,w
 13061  03B7  0022               	movlb	2	; select bank2
 13062  03B8  1C03               	skipc
 13063  03B9  120E               	bcf	14,4	;volatile
 13064  03BA  1803               	skipnc
 13065  03BB  160E               	bsf	14,4	;volatile
 13066  03BC  2C58               	goto	l193
 13067  03BD                     l3861:
 13068                           
 13069                           ;PIC16Xpress_DevBoard.c: 165:             LATCbits.LATC3 = val;
 13070  03BD  0C20               	rrf	WritePin@val,w
 13071  03BE  0022               	movlb	2	; select bank2
 13072  03BF  1C03               	skipc
 13073  03C0  118E               	bcf	14,3	;volatile
 13074  03C1  1803               	skipnc
 13075  03C2  158E               	bsf	14,3	;volatile
 13076  03C3  2C58               	goto	l193
 13077  03C4                     l3865:
 13078                           
 13079                           ;PIC16Xpress_DevBoard.c: 168:             LATCbits.LATC6 = val;
 13080  03C4  0C20               	rrf	WritePin@val,w
 13081  03C5  0022               	movlb	2	; select bank2
 13082  03C6  1C03               	skipc
 13083  03C7  130E               	bcf	14,6	;volatile
 13084  03C8  1803               	skipnc
 13085  03C9  170E               	bsf	14,6	;volatile
 13086  03CA  2C58               	goto	l193
 13087  03CB                     l3869:
 13088                           
 13089                           ;PIC16Xpress_DevBoard.c: 171:             LATCbits.LATC7 = val;
 13090  03CB  0C20               	rrf	WritePin@val,w
 13091  03CC  0022               	movlb	2	; select bank2
 13092  03CD  1C03               	skipc
 13093  03CE  138E               	bcf	14,7	;volatile
 13094  03CF  1803               	skipnc
 13095  03D0  178E               	bsf	14,7	;volatile
 13096  03D1  2C58               	goto	l193
 13097  03D2                     l3873:
 13098                           
 13099                           ;PIC16Xpress_DevBoard.c: 174:             LATBbits.LATB7 = val;
 13100  03D2  0C20               	rrf	WritePin@val,w
 13101  03D3  0022               	movlb	2	; select bank2
 13102  03D4  1C03               	skipc
 13103  03D5  138D               	bcf	13,7	;volatile
 13104  03D6  1803               	skipnc
 13105  03D7  178D               	bsf	13,7	;volatile
 13106  03D8  2C58               	goto	l193
 13107  03D9                     l3877:
 13108                           
 13109                           ;PIC16Xpress_DevBoard.c: 177:             LATAbits.LATA0 = val;
 13110  03D9  0C20               	rrf	WritePin@val,w
 13111  03DA  0022               	movlb	2	; select bank2
 13112  03DB  1C03               	skipc
 13113  03DC  100C               	bcf	12,0	;volatile
 13114  03DD  1803               	skipnc
 13115  03DE  140C               	bsf	12,0	;volatile
 13116  03DF  2C58               	goto	l193
 13117  03E0                     l3881:
 13118                           
 13119                           ;PIC16Xpress_DevBoard.c: 180:             LATAbits.LATA1 = val;
 13120  03E0  0C20               	rrf	WritePin@val,w
 13121  03E1  0022               	movlb	2	; select bank2
 13122  03E2  1C03               	skipc
 13123  03E3  108C               	bcf	12,1	;volatile
 13124  03E4  1803               	skipnc
 13125  03E5  148C               	bsf	12,1	;volatile
 13126  03E6  2C58               	goto	l193
 13127  03E7                     l3885:
 13128                           
 13129                           ;PIC16Xpress_DevBoard.c: 183:             LATAbits.LATA2 = val;
 13130  03E7  0C20               	rrf	WritePin@val,w
 13131  03E8  0022               	movlb	2	; select bank2
 13132  03E9  1C03               	skipc
 13133  03EA  110C               	bcf	12,2	;volatile
 13134  03EB  1803               	skipnc
 13135  03EC  150C               	bsf	12,2	;volatile
 13136  03ED  2C58               	goto	l193
 13137  03EE                     l3889:
 13138                           
 13139                           ;PIC16Xpress_DevBoard.c: 186:             LATCbits.LATC0 = val;
 13140  03EE  0C20               	rrf	WritePin@val,w
 13141  03EF  0022               	movlb	2	; select bank2
 13142  03F0  1C03               	skipc
 13143  03F1  100E               	bcf	14,0	;volatile
 13144  03F2  1803               	skipnc
 13145  03F3  140E               	bsf	14,0	;volatile
 13146  03F4  2C58               	goto	l193
 13147  03F5                     l3893:
 13148                           
 13149                           ;PIC16Xpress_DevBoard.c: 189:             LATCbits.LATC1 = val;
 13150  03F5  0C20               	rrf	WritePin@val,w
 13151  03F6  0022               	movlb	2	; select bank2
 13152  03F7  1C03               	skipc
 13153  03F8  108E               	bcf	14,1	;volatile
 13154  03F9  1803               	skipnc
 13155  03FA  148E               	bsf	14,1	;volatile
 13156  03FB  2C58               	goto	l193
 13157  03FC                     l3897:
 13158                           
 13159                           ;PIC16Xpress_DevBoard.c: 192:             LATCbits.LATC2 = val;
 13160  03FC  0C20               	rrf	WritePin@val,w
 13161  03FD  0022               	movlb	2	; select bank2
 13162  03FE  1C03               	skipc
 13163  03FF  110E               	bcf	14,2	;volatile
 13164  0400  1803               	skipnc
 13165  0401  150E               	bsf	14,2	;volatile
 13166  0402  2C58               	goto	l193
 13167  0403                     l3901:
 13168                           
 13169                           ;PIC16Xpress_DevBoard.c: 195:             LATBbits.LATB4 = val;
 13170  0403  0C20               	rrf	WritePin@val,w
 13171  0404  0022               	movlb	2	; select bank2
 13172  0405  1C03               	skipc
 13173  0406  120D               	bcf	13,4	;volatile
 13174  0407  1803               	skipnc
 13175  0408  160D               	bsf	13,4	;volatile
 13176  0409  2C58               	goto	l193
 13177  040A                     l3905:
 13178                           
 13179                           ;PIC16Xpress_DevBoard.c: 198:             LATBbits.LATB5 = val;
 13180  040A  0C20               	rrf	WritePin@val,w
 13181  040B  0022               	movlb	2	; select bank2
 13182  040C  1C03               	skipc
 13183  040D  128D               	bcf	13,5	;volatile
 13184  040E  1803               	skipnc
 13185  040F  168D               	bsf	13,5	;volatile
 13186  0410  2C58               	goto	l193
 13187  0411                     l3909:
 13188                           
 13189                           ;PIC16Xpress_DevBoard.c: 201:             LATBbits.LATB6 = val;
 13190  0411  0C20               	rrf	WritePin@val,w
 13191  0412  0022               	movlb	2	; select bank2
 13192  0413  1C03               	skipc
 13193  0414  130D               	bcf	13,6	;volatile
 13194  0415  1803               	skipnc
 13195  0416  170D               	bsf	13,6	;volatile
 13196  0417  2C58               	goto	l193
 13197  0418                     l3915:
 13198  0418  0823               	movf	WritePin@pin,w
 13199  0419  00A1               	movwf	??_WritePin
 13200  041A  01A2               	clrf	??_WritePin+1
 13201                           
 13202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13203                           ; Switch size 1, requested type "simple"
 13204                           ; Number of cases is 1, Range of values is 0 to 0
 13205                           ; switch strategies available:
 13206                           ; Name         Instructions Cycles
 13207                           ; simple_byte            4     3 (average)
 13208                           ; direct_byte            8     6 (fixed)
 13209                           ; jumptable            260     6 (fixed)
 13210                           ;	Chosen strategy is simple_byte
 13211  041B  0822               	movf	??_WritePin+1,w
 13212  041C  3A00               	xorlw	0	; case 0
 13213  041D  1903               	skipnz
 13214  041E  2C20               	goto	l4671
 13215  041F  2C58               	goto	l193
 13216  0420                     l4671:
 13217                           
 13218                           ; Switch size 1, requested type "simple"
 13219                           ; Number of cases is 18, Range of values is 0 to 17
 13220                           ; switch strategies available:
 13221                           ; Name         Instructions Cycles
 13222                           ; direct_byte           42     6 (fixed)
 13223                           ; simple_byte           55    28 (average)
 13224                           ; jumptable            260     6 (fixed)
 13225                           ;	Chosen strategy is simple_byte
 13226  0420  0821               	movf	??_WritePin,w
 13227  0421  3A00               	xorlw	0	; case 0
 13228  0422  1903               	skipnz
 13229  0423  2BA1               	goto	l3845
 13230  0424  3A01               	xorlw	1	; case 1
 13231  0425  1903               	skipnz
 13232  0426  2BA8               	goto	l3849
 13233  0427  3A03               	xorlw	3	; case 2
 13234  0428  1903               	skipnz
 13235  0429  2C58               	goto	l193
 13236  042A  3A01               	xorlw	1	; case 3
 13237  042B  1903               	skipnz
 13238  042C  2BAF               	goto	l3853
 13239  042D  3A07               	xorlw	7	; case 4
 13240  042E  1903               	skipnz
 13241  042F  2BB6               	goto	l3857
 13242  0430  3A01               	xorlw	1	; case 5
 13243  0431  1903               	skipnz
 13244  0432  2BBD               	goto	l3861
 13245  0433  3A03               	xorlw	3	; case 6
 13246  0434  1903               	skipnz
 13247  0435  2BC4               	goto	l3865
 13248  0436  3A01               	xorlw	1	; case 7
 13249  0437  1903               	skipnz
 13250  0438  2BCB               	goto	l3869
 13251  0439  3A0F               	xorlw	15	; case 8
 13252  043A  1903               	skipnz
 13253  043B  2BD2               	goto	l3873
 13254  043C  3A01               	xorlw	1	; case 9
 13255  043D  1903               	skipnz
 13256  043E  2BD9               	goto	l3877
 13257  043F  3A03               	xorlw	3	; case 10
 13258  0440  1903               	skipnz
 13259  0441  2BE0               	goto	l3881
 13260  0442  3A01               	xorlw	1	; case 11
 13261  0443  1903               	skipnz
 13262  0444  2BE7               	goto	l3885
 13263  0445  3A07               	xorlw	7	; case 12
 13264  0446  1903               	skipnz
 13265  0447  2BEE               	goto	l3889
 13266  0448  3A01               	xorlw	1	; case 13
 13267  0449  1903               	skipnz
 13268  044A  2BF5               	goto	l3893
 13269  044B  3A03               	xorlw	3	; case 14
 13270  044C  1903               	skipnz
 13271  044D  2BFC               	goto	l3897
 13272  044E  3A01               	xorlw	1	; case 15
 13273  044F  1903               	skipnz
 13274  0450  2C03               	goto	l3901
 13275  0451  3A1F               	xorlw	31	; case 16
 13276  0452  1903               	skipnz
 13277  0453  2C0A               	goto	l3905
 13278  0454  3A01               	xorlw	1	; case 17
 13279  0455  1903               	skipnz
 13280  0456  2C11               	goto	l3909
 13281  0457  2C58               	goto	l193
 13282  0458                     l193:
 13283  0458  0008               	return
 13284  0459                     __end_of_WritePin:
 13285                           
 13286                           	psect	text45
 13287  0459                     __ptext45:	
 13288 ;; *************** function _SetPin *****************
 13289 ;; Defined at:
 13290 ;;		line 41 in file "PIC16Xpress_DevBoard.c"
 13291 ;; Parameters:    Size  Location     Type
 13292 ;;  pin             1    wreg     enum E7144
 13293 ;;  io              1    0[BANK0 ] unsigned char 
 13294 ;; Auto vars:     Size  Location     Type
 13295 ;;  pin             1    3[BANK0 ] enum E7144
 13296 ;; Return value:  Size  Location     Type
 13297 ;;                  1    wreg      unsigned char 
 13298 ;; Registers used:
 13299 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13300 ;; Tracked objects:
 13301 ;;		On entry : 0/0
 13302 ;;		On exit  : 0/0
 13303 ;;		Unchanged: 0/0
 13304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13305 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13306 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13307 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13308 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13309 ;;Total ram usage:        4 bytes
 13310 ;; Hardware stack levels used: 1
 13311 ;; Hardware stack levels required when called: 4
 13312 ;; This function calls:
 13313 ;;		Nothing
 13314 ;; This function is called by:
 13315 ;;		_JSN_Sensor_Init
 13316 ;;		_main
 13317 ;;		_SpeakerTone_Init
 13318 ;; This function uses a non-reentrant model
 13319 ;;
 13320                           
 13321  0459                     _SetPin:	
 13322                           ;psect for function _SetPin
 13323                           
 13324                           
 13325                           ;incstack = 0
 13326                           ; Regs used in _SetPin: [wreg-fsr0h+status,2+status,0]
 13327                           ;SetPin@pin stored from wreg
 13328  0459  0020               	movlb	0	; select bank0
 13329  045A  00A3               	movwf	SetPin@pin
 13330  045B                     l3757:
 13331                           
 13332                           ;PIC16Xpress_DevBoard.c: 42:     switch(pin) {
 13333  045B  2CD3               	goto	l3829
 13334  045C                     l3759:
 13335                           
 13336                           ;PIC16Xpress_DevBoard.c: 44:             TRISAbits.TRISA5 = io;
 13337  045C  0C20               	rrf	SetPin@io,w
 13338  045D  0021               	movlb	1	; select bank1
 13339  045E  1C03               	skipc
 13340  045F  128C               	bcf	12,5	;volatile
 13341  0460  1803               	skipnc
 13342  0461  168C               	bsf	12,5	;volatile
 13343  0462  2D13               	goto	l145
 13344  0463                     l3763:
 13345                           
 13346                           ;PIC16Xpress_DevBoard.c: 47:             TRISAbits.TRISA4 = io;
 13347  0463  0C20               	rrf	SetPin@io,w
 13348  0464  0021               	movlb	1	; select bank1
 13349  0465  1C03               	skipc
 13350  0466  120C               	bcf	12,4	;volatile
 13351  0467  1803               	skipnc
 13352  0468  160C               	bsf	12,4	;volatile
 13353  0469  2D13               	goto	l145
 13354  046A                     l3767:
 13355                           
 13356                           ;PIC16Xpress_DevBoard.c: 52:             TRISCbits.TRISC5 = io;
 13357  046A  0C20               	rrf	SetPin@io,w
 13358  046B  0021               	movlb	1	; select bank1
 13359  046C  1C03               	skipc
 13360  046D  128E               	bcf	14,5	;volatile
 13361  046E  1803               	skipnc
 13362  046F  168E               	bsf	14,5	;volatile
 13363  0470  2D13               	goto	l145
 13364  0471                     l3771:
 13365                           
 13366                           ;PIC16Xpress_DevBoard.c: 55:             TRISCbits.TRISC4 = io;
 13367  0471  0C20               	rrf	SetPin@io,w
 13368  0472  0021               	movlb	1	; select bank1
 13369  0473  1C03               	skipc
 13370  0474  120E               	bcf	14,4	;volatile
 13371  0475  1803               	skipnc
 13372  0476  160E               	bsf	14,4	;volatile
 13373  0477  2D13               	goto	l145
 13374  0478                     l3775:
 13375                           
 13376                           ;PIC16Xpress_DevBoard.c: 58:             TRISCbits.TRISC3 = io;
 13377  0478  0C20               	rrf	SetPin@io,w
 13378  0479  0021               	movlb	1	; select bank1
 13379  047A  1C03               	skipc
 13380  047B  118E               	bcf	14,3	;volatile
 13381  047C  1803               	skipnc
 13382  047D  158E               	bsf	14,3	;volatile
 13383  047E  2D13               	goto	l145
 13384  047F                     l3779:
 13385                           
 13386                           ;PIC16Xpress_DevBoard.c: 61:             TRISCbits.TRISC6 = io;
 13387  047F  0C20               	rrf	SetPin@io,w
 13388  0480  0021               	movlb	1	; select bank1
 13389  0481  1C03               	skipc
 13390  0482  130E               	bcf	14,6	;volatile
 13391  0483  1803               	skipnc
 13392  0484  170E               	bsf	14,6	;volatile
 13393  0485  2D13               	goto	l145
 13394  0486                     l3783:
 13395                           
 13396                           ;PIC16Xpress_DevBoard.c: 64:             TRISCbits.TRISC7 = io;
 13397  0486  0C20               	rrf	SetPin@io,w
 13398  0487  0021               	movlb	1	; select bank1
 13399  0488  1C03               	skipc
 13400  0489  138E               	bcf	14,7	;volatile
 13401  048A  1803               	skipnc
 13402  048B  178E               	bsf	14,7	;volatile
 13403  048C  2D13               	goto	l145
 13404  048D                     l3787:
 13405                           
 13406                           ;PIC16Xpress_DevBoard.c: 67:             TRISBbits.TRISB7 = io;
 13407  048D  0C20               	rrf	SetPin@io,w
 13408  048E  0021               	movlb	1	; select bank1
 13409  048F  1C03               	skipc
 13410  0490  138D               	bcf	13,7	;volatile
 13411  0491  1803               	skipnc
 13412  0492  178D               	bsf	13,7	;volatile
 13413  0493  2D13               	goto	l145
 13414  0494                     l3791:
 13415                           
 13416                           ;PIC16Xpress_DevBoard.c: 70:             TRISAbits.TRISA0 = io;
 13417  0494  0C20               	rrf	SetPin@io,w
 13418  0495  0021               	movlb	1	; select bank1
 13419  0496  1C03               	skipc
 13420  0497  100C               	bcf	12,0	;volatile
 13421  0498  1803               	skipnc
 13422  0499  140C               	bsf	12,0	;volatile
 13423  049A  2D13               	goto	l145
 13424  049B                     l3795:
 13425                           
 13426                           ;PIC16Xpress_DevBoard.c: 73:             TRISAbits.TRISA1 = io;
 13427  049B  0C20               	rrf	SetPin@io,w
 13428  049C  0021               	movlb	1	; select bank1
 13429  049D  1C03               	skipc
 13430  049E  108C               	bcf	12,1	;volatile
 13431  049F  1803               	skipnc
 13432  04A0  148C               	bsf	12,1	;volatile
 13433  04A1  2D13               	goto	l145
 13434  04A2                     l3799:
 13435                           
 13436                           ;PIC16Xpress_DevBoard.c: 76:             TRISAbits.TRISA2 = io;
 13437  04A2  0C20               	rrf	SetPin@io,w
 13438  04A3  0021               	movlb	1	; select bank1
 13439  04A4  1C03               	skipc
 13440  04A5  110C               	bcf	12,2	;volatile
 13441  04A6  1803               	skipnc
 13442  04A7  150C               	bsf	12,2	;volatile
 13443  04A8  2D13               	goto	l145
 13444  04A9                     l3803:
 13445                           
 13446                           ;PIC16Xpress_DevBoard.c: 79:             TRISCbits.TRISC0 = io;
 13447  04A9  0C20               	rrf	SetPin@io,w
 13448  04AA  0021               	movlb	1	; select bank1
 13449  04AB  1C03               	skipc
 13450  04AC  100E               	bcf	14,0	;volatile
 13451  04AD  1803               	skipnc
 13452  04AE  140E               	bsf	14,0	;volatile
 13453  04AF  2D13               	goto	l145
 13454  04B0                     l3807:
 13455                           
 13456                           ;PIC16Xpress_DevBoard.c: 82:             TRISCbits.TRISC1 = io;
 13457  04B0  0C20               	rrf	SetPin@io,w
 13458  04B1  0021               	movlb	1	; select bank1
 13459  04B2  1C03               	skipc
 13460  04B3  108E               	bcf	14,1	;volatile
 13461  04B4  1803               	skipnc
 13462  04B5  148E               	bsf	14,1	;volatile
 13463  04B6  2D13               	goto	l145
 13464  04B7                     l3811:
 13465                           
 13466                           ;PIC16Xpress_DevBoard.c: 85:             TRISCbits.TRISC2 = io;
 13467  04B7  0C20               	rrf	SetPin@io,w
 13468  04B8  0021               	movlb	1	; select bank1
 13469  04B9  1C03               	skipc
 13470  04BA  110E               	bcf	14,2	;volatile
 13471  04BB  1803               	skipnc
 13472  04BC  150E               	bsf	14,2	;volatile
 13473  04BD  2D13               	goto	l145
 13474  04BE                     l3815:
 13475                           
 13476                           ;PIC16Xpress_DevBoard.c: 88:             TRISBbits.TRISB4 = io;
 13477  04BE  0C20               	rrf	SetPin@io,w
 13478  04BF  0021               	movlb	1	; select bank1
 13479  04C0  1C03               	skipc
 13480  04C1  120D               	bcf	13,4	;volatile
 13481  04C2  1803               	skipnc
 13482  04C3  160D               	bsf	13,4	;volatile
 13483  04C4  2D13               	goto	l145
 13484  04C5                     l3819:
 13485                           
 13486                           ;PIC16Xpress_DevBoard.c: 91:             TRISBbits.TRISB5 = io;
 13487  04C5  0C20               	rrf	SetPin@io,w
 13488  04C6  0021               	movlb	1	; select bank1
 13489  04C7  1C03               	skipc
 13490  04C8  128D               	bcf	13,5	;volatile
 13491  04C9  1803               	skipnc
 13492  04CA  168D               	bsf	13,5	;volatile
 13493  04CB  2D13               	goto	l145
 13494  04CC                     l3823:
 13495                           
 13496                           ;PIC16Xpress_DevBoard.c: 94:             TRISBbits.TRISB6 = io;
 13497  04CC  0C20               	rrf	SetPin@io,w
 13498  04CD  0021               	movlb	1	; select bank1
 13499  04CE  1C03               	skipc
 13500  04CF  130D               	bcf	13,6	;volatile
 13501  04D0  1803               	skipnc
 13502  04D1  170D               	bsf	13,6	;volatile
 13503  04D2  2D13               	goto	l145
 13504  04D3                     l3829:
 13505  04D3  0823               	movf	SetPin@pin,w
 13506  04D4  00A1               	movwf	??_SetPin
 13507  04D5  01A2               	clrf	??_SetPin+1
 13508                           
 13509                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13510                           ; Switch size 1, requested type "simple"
 13511                           ; Number of cases is 1, Range of values is 0 to 0
 13512                           ; switch strategies available:
 13513                           ; Name         Instructions Cycles
 13514                           ; simple_byte            4     3 (average)
 13515                           ; direct_byte            8     6 (fixed)
 13516                           ; jumptable            260     6 (fixed)
 13517                           ;	Chosen strategy is simple_byte
 13518  04D6  0822               	movf	??_SetPin+1,w
 13519  04D7  3A00               	xorlw	0	; case 0
 13520  04D8  1903               	skipnz
 13521  04D9  2CDB               	goto	l4673
 13522  04DA  2D13               	goto	l145
 13523  04DB                     l4673:
 13524                           
 13525                           ; Switch size 1, requested type "simple"
 13526                           ; Number of cases is 18, Range of values is 0 to 17
 13527                           ; switch strategies available:
 13528                           ; Name         Instructions Cycles
 13529                           ; direct_byte           42     6 (fixed)
 13530                           ; simple_byte           55    28 (average)
 13531                           ; jumptable            260     6 (fixed)
 13532                           ;	Chosen strategy is simple_byte
 13533  04DB  0821               	movf	??_SetPin,w
 13534  04DC  3A00               	xorlw	0	; case 0
 13535  04DD  1903               	skipnz
 13536  04DE  2C5C               	goto	l3759
 13537  04DF  3A01               	xorlw	1	; case 1
 13538  04E0  1903               	skipnz
 13539  04E1  2C63               	goto	l3763
 13540  04E2  3A03               	xorlw	3	; case 2
 13541  04E3  1903               	skipnz
 13542  04E4  2D13               	goto	l145
 13543  04E5  3A01               	xorlw	1	; case 3
 13544  04E6  1903               	skipnz
 13545  04E7  2C6A               	goto	l3767
 13546  04E8  3A07               	xorlw	7	; case 4
 13547  04E9  1903               	skipnz
 13548  04EA  2C71               	goto	l3771
 13549  04EB  3A01               	xorlw	1	; case 5
 13550  04EC  1903               	skipnz
 13551  04ED  2C78               	goto	l3775
 13552  04EE  3A03               	xorlw	3	; case 6
 13553  04EF  1903               	skipnz
 13554  04F0  2C7F               	goto	l3779
 13555  04F1  3A01               	xorlw	1	; case 7
 13556  04F2  1903               	skipnz
 13557  04F3  2C86               	goto	l3783
 13558  04F4  3A0F               	xorlw	15	; case 8
 13559  04F5  1903               	skipnz
 13560  04F6  2C8D               	goto	l3787
 13561  04F7  3A01               	xorlw	1	; case 9
 13562  04F8  1903               	skipnz
 13563  04F9  2C94               	goto	l3791
 13564  04FA  3A03               	xorlw	3	; case 10
 13565  04FB  1903               	skipnz
 13566  04FC  2C9B               	goto	l3795
 13567  04FD  3A01               	xorlw	1	; case 11
 13568  04FE  1903               	skipnz
 13569  04FF  2CA2               	goto	l3799
 13570  0500  3A07               	xorlw	7	; case 12
 13571  0501  1903               	skipnz
 13572  0502  2CA9               	goto	l3803
 13573  0503  3A01               	xorlw	1	; case 13
 13574  0504  1903               	skipnz
 13575  0505  2CB0               	goto	l3807
 13576  0506  3A03               	xorlw	3	; case 14
 13577  0507  1903               	skipnz
 13578  0508  2CB7               	goto	l3811
 13579  0509  3A01               	xorlw	1	; case 15
 13580  050A  1903               	skipnz
 13581  050B  2CBE               	goto	l3815
 13582  050C  3A1F               	xorlw	31	; case 16
 13583  050D  1903               	skipnz
 13584  050E  2CC5               	goto	l3819
 13585  050F  3A01               	xorlw	1	; case 17
 13586  0510  1903               	skipnz
 13587  0511  2CCC               	goto	l3823
 13588  0512  2D13               	goto	l145
 13589  0513                     l145:
 13590  0513  0008               	return
 13591  0514                     __end_of_SetPin:
 13592                           
 13593                           	psect	text46
 13594  0E8F                     __ptext46:	
 13595 ;; *************** function _JSN_Sensor_GetDistance *****************
 13596 ;; Defined at:
 13597 ;;		line 106 in file "JSN_Sensor.c"
 13598 ;; Parameters:    Size  Location     Type
 13599 ;;  Sensor          1    wreg     PTR struct .
 13600 ;;		 -> Sens1(6), Sens2(6), Sens3(6), 
 13601 ;; Auto vars:     Size  Location     Type
 13602 ;;  Sensor          1   30[BANK0 ] PTR struct .
 13603 ;;		 -> Sens1(6), Sens2(6), Sens3(6), 
 13604 ;; Return value:  Size  Location     Type
 13605 ;;                  2   26[BANK0 ] unsigned int 
 13606 ;; Registers used:
 13607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13608 ;; Tracked objects:
 13609 ;;		On entry : 0/0
 13610 ;;		On exit  : 0/0
 13611 ;;		Unchanged: 0/0
 13612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13613 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13614 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13615 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13616 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13617 ;;Total ram usage:        5 bytes
 13618 ;; Hardware stack levels used: 1
 13619 ;; Hardware stack levels required when called: 5
 13620 ;; This function calls:
 13621 ;;		___lldiv
 13622 ;;		___lmul
 13623 ;; This function is called by:
 13624 ;;		_main
 13625 ;; This function uses a non-reentrant model
 13626 ;;
 13627                           
 13628  0E8F                     _JSN_Sensor_GetDistance:	
 13629                           ;psect for function _JSN_Sensor_GetDistance
 13630                           
 13631                           
 13632                           ;incstack = 0
 13633                           ; Regs used in _JSN_Sensor_GetDistance: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13634                           ;JSN_Sensor_GetDistance@Sensor stored from wreg
 13635  0E8F  0020               	movlb	0	; select bank0
 13636  0E90  00BE               	movwf	JSN_Sensor_GetDistance@Sensor
 13637  0E91                     l4109:
 13638                           
 13639                           ;JSN_Sensor.c: 111:     Sensor->distance = (unsigned int) (((uint32_t) Sensor->echoHighT
      +                          ime *
 13640  0E91  3000               	movlw	0
 13641  0E92  00AF               	movwf	___lldiv@divisor+3
 13642  0E93  3000               	movlw	0
 13643  0E94  00AE               	movwf	___lldiv@divisor+2
 13644  0E95  3007               	movlw	7
 13645  0E96  00AD               	movwf	___lldiv@divisor+1
 13646  0E97  30D0               	movlw	208
 13647  0E98  00AC               	movwf	___lldiv@divisor
 13648  0E99  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 13649  0E9A  0086               	movwf	6
 13650  0E9B  3001               	movlw	1	; select bank2/3
 13651  0E9C  0087               	movwf	7
 13652  0E9D  3F40               	moviw [0]fsr1
 13653  0E9E  00BC               	movwf	??_JSN_Sensor_GetDistance
 13654  0E9F  3F41               	moviw [1]fsr1
 13655  0EA0  00BD               	movwf	??_JSN_Sensor_GetDistance+1
 13656  0EA1  083C               	movf	??_JSN_Sensor_GetDistance,w
 13657  0EA2  00A0               	movwf	___lmul@multiplier
 13658  0EA3  083D               	movf	??_JSN_Sensor_GetDistance+1,w
 13659  0EA4  00A1               	movwf	___lmul@multiplier+1
 13660  0EA5  01A2               	clrf	___lmul@multiplier+2
 13661  0EA6  01A3               	clrf	___lmul@multiplier+3
 13662  0EA7  3000               	movlw	0
 13663  0EA8  00A7               	movwf	___lmul@multiplicand+3
 13664  0EA9  3000               	movlw	0
 13665  0EAA  00A6               	movwf	___lmul@multiplicand+2
 13666  0EAB  3001               	movlw	1
 13667  0EAC  00A5               	movwf	___lmul@multiplicand+1
 13668  0EAD  3057               	movlw	87
 13669  0EAE  00A4               	movwf	___lmul@multiplicand
 13670  0EAF  318D  2532  318E   	fcall	___lmul
 13671  0EB2  0020               	movlb	0	; select bank0
 13672  0EB3  0823               	movf	?___lmul+3,w
 13673  0EB4  00B3               	movwf	___lldiv@dividend+3
 13674  0EB5  0822               	movf	?___lmul+2,w
 13675  0EB6  00B2               	movwf	___lldiv@dividend+2
 13676  0EB7  0821               	movf	?___lmul+1,w
 13677  0EB8  00B1               	movwf	___lldiv@dividend+1
 13678  0EB9  0820               	movf	?___lmul,w
 13679  0EBA  00B0               	movwf	___lldiv@dividend
 13680  0EBB  3187  273E  318E   	fcall	___lldiv
 13681  0EBE  0020               	movlb	0	; select bank0
 13682  0EBF  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 13683  0EC0  3E02               	addlw	2
 13684  0EC1  0086               	movwf	6
 13685  0EC2  3001               	movlw	1	; select bank2/3
 13686  0EC3  0087               	movwf	7
 13687  0EC4  082C               	movf	?___lldiv,w
 13688  0EC5  3FC0               	movwi [0]fsr1
 13689  0EC6  082D               	movf	?___lldiv+1,w
 13690  0EC7  3FC1               	movwi [1]fsr1
 13691  0EC8                     l4111:
 13692                           
 13693                           ;JSN_Sensor.c: 113:     return Sensor->distance;
 13694  0EC8  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 13695  0EC9  3E02               	addlw	2
 13696  0ECA  0086               	movwf	6
 13697  0ECB  3001               	movlw	1	; select bank2/3
 13698  0ECC  0087               	movwf	7
 13699  0ECD  3F40               	moviw [0]fsr1
 13700  0ECE  00BA               	movwf	?_JSN_Sensor_GetDistance
 13701  0ECF  3F41               	moviw [1]fsr1
 13702  0ED0  00BB               	movwf	?_JSN_Sensor_GetDistance+1
 13703  0ED1                     l57:
 13704  0ED1  0008               	return
 13705  0ED2                     __end_of_JSN_Sensor_GetDistance:
 13706                           
 13707                           	psect	text47
 13708  0D32                     __ptext47:	
 13709 ;; *************** function ___lmul *****************
 13710 ;; Defined at:
 13711 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul32.c"
 13712 ;; Parameters:    Size  Location     Type
 13713 ;;  multiplier      4    0[BANK0 ] unsigned long 
 13714 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 13715 ;; Auto vars:     Size  Location     Type
 13716 ;;  product         4    8[BANK0 ] unsigned long 
 13717 ;; Return value:  Size  Location     Type
 13718 ;;                  4    0[BANK0 ] unsigned long 
 13719 ;; Registers used:
 13720 ;;		wreg, status,2, status,0
 13721 ;; Tracked objects:
 13722 ;;		On entry : 0/0
 13723 ;;		On exit  : 0/0
 13724 ;;		Unchanged: 0/0
 13725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13726 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13727 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13729 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13730 ;;Total ram usage:       12 bytes
 13731 ;; Hardware stack levels used: 1
 13732 ;; Hardware stack levels required when called: 4
 13733 ;; This function calls:
 13734 ;;		Nothing
 13735 ;; This function is called by:
 13736 ;;		_JSN_Sensor_GetDistance
 13737 ;;		_MotorControl_SetIntensity
 13738 ;; This function uses a non-reentrant model
 13739 ;;
 13740                           
 13741  0D32                     ___lmul:	
 13742                           ;psect for function ___lmul
 13743                           
 13744  0D32                     l4007:	
 13745                           ;incstack = 0
 13746                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13747                           
 13748  0D32  3000               	movlw	0
 13749  0D33  0020               	movlb	0	; select bank0
 13750  0D34  00AB               	movwf	___lmul@product+3
 13751  0D35  3000               	movlw	0
 13752  0D36  00AA               	movwf	___lmul@product+2
 13753  0D37  3000               	movlw	0
 13754  0D38  00A9               	movwf	___lmul@product+1
 13755  0D39  3000               	movlw	0
 13756  0D3A  00A8               	movwf	___lmul@product
 13757  0D3B                     l4009:
 13758  0D3B  1C20               	btfss	___lmul@multiplier,0
 13759  0D3C  2D3E               	goto	u1331
 13760  0D3D  2D3F               	goto	u1330
 13761  0D3E                     u1331:
 13762  0D3E  2D47               	goto	l4013
 13763  0D3F                     u1330:
 13764  0D3F                     l4011:
 13765  0D3F  0824               	movf	___lmul@multiplicand,w
 13766  0D40  07A8               	addwf	___lmul@product,f
 13767  0D41  0825               	movf	___lmul@multiplicand+1,w
 13768  0D42  3DA9               	addwfc	___lmul@product+1,f
 13769  0D43  0826               	movf	___lmul@multiplicand+2,w
 13770  0D44  3DAA               	addwfc	___lmul@product+2,f
 13771  0D45  0827               	movf	___lmul@multiplicand+3,w
 13772  0D46  3DAB               	addwfc	___lmul@product+3,f
 13773  0D47                     l4013:
 13774  0D47  3001               	movlw	1
 13775  0D48                     u1345:
 13776  0D48  35A4               	lslf	___lmul@multiplicand,f
 13777  0D49  0DA5               	rlf	___lmul@multiplicand+1,f
 13778  0D4A  0DA6               	rlf	___lmul@multiplicand+2,f
 13779  0D4B  0DA7               	rlf	___lmul@multiplicand+3,f
 13780  0D4C  0B89               	decfsz	9,f
 13781  0D4D  2D48               	goto	u1345
 13782  0D4E                     l4015:
 13783  0D4E  3001               	movlw	1
 13784  0D4F                     u1355:
 13785  0D4F  36A3               	lsrf	___lmul@multiplier+3,f
 13786  0D50  0CA2               	rrf	___lmul@multiplier+2,f
 13787  0D51  0CA1               	rrf	___lmul@multiplier+1,f
 13788  0D52  0CA0               	rrf	___lmul@multiplier,f
 13789  0D53  0B89               	decfsz	9,f
 13790  0D54  2D4F               	goto	u1355
 13791  0D55  0823               	movf	___lmul@multiplier+3,w
 13792  0D56  0422               	iorwf	___lmul@multiplier+2,w
 13793  0D57  0421               	iorwf	___lmul@multiplier+1,w
 13794  0D58  0420               	iorwf	___lmul@multiplier,w
 13795  0D59  1D03               	skipz
 13796  0D5A  2D5C               	goto	u1361
 13797  0D5B  2D5D               	goto	u1360
 13798  0D5C                     u1361:
 13799  0D5C  2D3B               	goto	l4009
 13800  0D5D                     u1360:
 13801  0D5D                     l4017:
 13802  0D5D  082B               	movf	___lmul@product+3,w
 13803  0D5E  00A3               	movwf	?___lmul+3
 13804  0D5F  082A               	movf	___lmul@product+2,w
 13805  0D60  00A2               	movwf	?___lmul+2
 13806  0D61  0829               	movf	___lmul@product+1,w
 13807  0D62  00A1               	movwf	?___lmul+1
 13808  0D63  0828               	movf	___lmul@product,w
 13809  0D64  00A0               	movwf	?___lmul
 13810  0D65                     l1167:
 13811  0D65  0008               	return
 13812  0D66                     __end_of___lmul:
 13813                           
 13814                           	psect	text48
 13815  073E                     __ptext48:	
 13816 ;; *************** function ___lldiv *****************
 13817 ;; Defined at:
 13818 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\__lldiv.c"
 13819 ;; Parameters:    Size  Location     Type
 13820 ;;  divisor         4   12[BANK0 ] unsigned long 
 13821 ;;  dividend        4   16[BANK0 ] unsigned long 
 13822 ;; Auto vars:     Size  Location     Type
 13823 ;;  quotient        4   21[BANK0 ] unsigned long 
 13824 ;;  counter         1   25[BANK0 ] unsigned char 
 13825 ;; Return value:  Size  Location     Type
 13826 ;;                  4   12[BANK0 ] unsigned long 
 13827 ;; Registers used:
 13828 ;;		wreg, status,2, status,0
 13829 ;; Tracked objects:
 13830 ;;		On entry : 0/0
 13831 ;;		On exit  : 0/0
 13832 ;;		Unchanged: 0/0
 13833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13834 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13835 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13836 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13837 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13838 ;;Total ram usage:       14 bytes
 13839 ;; Hardware stack levels used: 1
 13840 ;; Hardware stack levels required when called: 4
 13841 ;; This function calls:
 13842 ;;		Nothing
 13843 ;; This function is called by:
 13844 ;;		_JSN_Sensor_GetDistance
 13845 ;;		_SpeakerTone_SetFrequency
 13846 ;;		_MotorControl_SetIntensity
 13847 ;; This function uses a non-reentrant model
 13848 ;;
 13849                           
 13850  073E                     ___lldiv:	
 13851                           ;psect for function ___lldiv
 13852                           
 13853  073E                     l4021:	
 13854                           ;incstack = 0
 13855                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 13856                           
 13857  073E  3000               	movlw	0
 13858  073F  0020               	movlb	0	; select bank0
 13859  0740  00B8               	movwf	___lldiv@quotient+3
 13860  0741  3000               	movlw	0
 13861  0742  00B7               	movwf	___lldiv@quotient+2
 13862  0743  3000               	movlw	0
 13863  0744  00B6               	movwf	___lldiv@quotient+1
 13864  0745  3000               	movlw	0
 13865  0746  00B5               	movwf	___lldiv@quotient
 13866  0747  082F               	movf	___lldiv@divisor+3,w
 13867  0748  042E               	iorwf	___lldiv@divisor+2,w
 13868  0749  042D               	iorwf	___lldiv@divisor+1,w
 13869  074A  042C               	iorwf	___lldiv@divisor,w
 13870  074B  1903               	skipnz
 13871  074C  2F4E               	goto	u1371
 13872  074D  2F4F               	goto	u1370
 13873  074E                     u1371:
 13874  074E  2F90               	goto	l4041
 13875  074F                     u1370:
 13876  074F                     l4023:
 13877  074F  01B9               	clrf	___lldiv@counter
 13878  0750  0AB9               	incf	___lldiv@counter,f
 13879  0751  2F5D               	goto	l4027
 13880  0752                     l4025:
 13881  0752  3001               	movlw	1
 13882  0753                     u1385:
 13883  0753  35AC               	lslf	___lldiv@divisor,f
 13884  0754  0DAD               	rlf	___lldiv@divisor+1,f
 13885  0755  0DAE               	rlf	___lldiv@divisor+2,f
 13886  0756  0DAF               	rlf	___lldiv@divisor+3,f
 13887  0757  0B89               	decfsz	9,f
 13888  0758  2F53               	goto	u1385
 13889  0759  3001               	movlw	1
 13890  075A  00B4               	movwf	??___lldiv
 13891  075B  0834               	movf	??___lldiv,w
 13892  075C  07B9               	addwf	___lldiv@counter,f
 13893  075D                     l4027:
 13894  075D  1FAF               	btfss	___lldiv@divisor+3,7
 13895  075E  2F60               	goto	u1391
 13896  075F  2F61               	goto	u1390
 13897  0760                     u1391:
 13898  0760  2F52               	goto	l4025
 13899  0761                     u1390:
 13900  0761                     l4029:
 13901  0761  3001               	movlw	1
 13902  0762                     u1405:
 13903  0762  35B5               	lslf	___lldiv@quotient,f
 13904  0763  0DB6               	rlf	___lldiv@quotient+1,f
 13905  0764  0DB7               	rlf	___lldiv@quotient+2,f
 13906  0765  0DB8               	rlf	___lldiv@quotient+3,f
 13907  0766  0B89               	decfsz	9,f
 13908  0767  2F62               	goto	u1405
 13909  0768                     l4031:
 13910  0768  082F               	movf	___lldiv@divisor+3,w
 13911  0769  0233               	subwf	___lldiv@dividend+3,w
 13912  076A  1D03               	skipz
 13913  076B  2F76               	goto	u1415
 13914  076C  082E               	movf	___lldiv@divisor+2,w
 13915  076D  0232               	subwf	___lldiv@dividend+2,w
 13916  076E  1D03               	skipz
 13917  076F  2F76               	goto	u1415
 13918  0770  082D               	movf	___lldiv@divisor+1,w
 13919  0771  0231               	subwf	___lldiv@dividend+1,w
 13920  0772  1D03               	skipz
 13921  0773  2F76               	goto	u1415
 13922  0774  082C               	movf	___lldiv@divisor,w
 13923  0775  0230               	subwf	___lldiv@dividend,w
 13924  0776                     u1415:
 13925  0776  1C03               	skipc
 13926  0777  2F79               	goto	u1411
 13927  0778  2F7A               	goto	u1410
 13928  0779                     u1411:
 13929  0779  2F83               	goto	l4037
 13930  077A                     u1410:
 13931  077A                     l4033:
 13932  077A  082C               	movf	___lldiv@divisor,w
 13933  077B  02B0               	subwf	___lldiv@dividend,f
 13934  077C  082D               	movf	___lldiv@divisor+1,w
 13935  077D  3BB1               	subwfb	___lldiv@dividend+1,f
 13936  077E  082E               	movf	___lldiv@divisor+2,w
 13937  077F  3BB2               	subwfb	___lldiv@dividend+2,f
 13938  0780  082F               	movf	___lldiv@divisor+3,w
 13939  0781  3BB3               	subwfb	___lldiv@dividend+3,f
 13940  0782                     l4035:
 13941  0782  1435               	bsf	___lldiv@quotient,0
 13942  0783                     l4037:
 13943  0783  3001               	movlw	1
 13944  0784                     u1425:
 13945  0784  36AF               	lsrf	___lldiv@divisor+3,f
 13946  0785  0CAE               	rrf	___lldiv@divisor+2,f
 13947  0786  0CAD               	rrf	___lldiv@divisor+1,f
 13948  0787  0CAC               	rrf	___lldiv@divisor,f
 13949  0788  0B89               	decfsz	9,f
 13950  0789  2F84               	goto	u1425
 13951  078A                     l4039:
 13952  078A  3001               	movlw	1
 13953  078B  02B9               	subwf	___lldiv@counter,f
 13954  078C  1D03               	btfss	3,2
 13955  078D  2F8F               	goto	u1431
 13956  078E  2F90               	goto	u1430
 13957  078F                     u1431:
 13958  078F  2F61               	goto	l4029
 13959  0790                     u1430:
 13960  0790                     l4041:
 13961  0790  0838               	movf	___lldiv@quotient+3,w
 13962  0791  00AF               	movwf	?___lldiv+3
 13963  0792  0837               	movf	___lldiv@quotient+2,w
 13964  0793  00AE               	movwf	?___lldiv+2
 13965  0794  0836               	movf	___lldiv@quotient+1,w
 13966  0795  00AD               	movwf	?___lldiv+1
 13967  0796  0835               	movf	___lldiv@quotient,w
 13968  0797  00AC               	movwf	?___lldiv
 13969  0798                     l1189:
 13970  0798  0008               	return
 13971  0799                     __end_of___lldiv:
 13972                           
 13973                           	psect	text49
 13974  0B0E                     __ptext49:	
 13975 ;; *************** function _FRT_GetMillis *****************
 13976 ;; Defined at:
 13977 ;;		line 26 in file "FRT.c"
 13978 ;; Parameters:    Size  Location     Type
 13979 ;;		None
 13980 ;; Auto vars:     Size  Location     Type
 13981 ;;		None
 13982 ;; Return value:  Size  Location     Type
 13983 ;;                  4    0[BANK0 ] unsigned long 
 13984 ;; Registers used:
 13985 ;;		wreg
 13986 ;; Tracked objects:
 13987 ;;		On entry : 0/0
 13988 ;;		On exit  : 0/0
 13989 ;;		Unchanged: 0/0
 13990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13991 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13994 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13995 ;;Total ram usage:        4 bytes
 13996 ;; Hardware stack levels used: 1
 13997 ;; Hardware stack levels required when called: 4
 13998 ;; This function calls:
 13999 ;;		Nothing
 14000 ;; This function is called by:
 14001 ;;		_main
 14002 ;; This function uses a non-reentrant model
 14003 ;;
 14004                           
 14005  0B0E                     _FRT_GetMillis:	
 14006                           ;psect for function _FRT_GetMillis
 14007                           
 14008  0B0E                     l4123:	
 14009                           ;incstack = 0
 14010                           ; Regs used in _FRT_GetMillis: [wreg]
 14011                           
 14012                           
 14013                           ;FRT.c: 27:     return millis;
 14014  0B0E  0022               	movlb	2	; select bank2
 14015  0B0F  083F               	movf	(_millis+3)^(0+256),w
 14016  0B10  0020               	movlb	0	; select bank0
 14017  0B11  00A3               	movwf	?_FRT_GetMillis+3
 14018  0B12  0022               	movlb	2	; select bank2
 14019  0B13  083E               	movf	(_millis+2)^(0+256),w
 14020  0B14  0020               	movlb	0	; select bank0
 14021  0B15  00A2               	movwf	?_FRT_GetMillis+2
 14022  0B16  0022               	movlb	2	; select bank2
 14023  0B17  083D               	movf	(_millis+1)^(0+256),w
 14024  0B18  0020               	movlb	0	; select bank0
 14025  0B19  00A1               	movwf	?_FRT_GetMillis+1
 14026  0B1A  0022               	movlb	2	; select bank2
 14027  0B1B  083C               	movf	_millis^(0+256),w
 14028  0B1C  0020               	movlb	0	; select bank0
 14029  0B1D  00A0               	movwf	?_FRT_GetMillis
 14030  0B1E                     l802:
 14031  0B1E  0008               	return
 14032  0B1F                     __end_of_FRT_GetMillis:
 14033                           
 14034                           	psect	intentry
 14035  0004                     __pintentry:	
 14036 ;; *************** function _INTERRUPT_InterruptManager *****************
 14037 ;; Defined at:
 14038 ;;		line 16 in file "interrupt_manager.c"
 14039 ;; Parameters:    Size  Location     Type
 14040 ;;		None
 14041 ;; Auto vars:     Size  Location     Type
 14042 ;;		None
 14043 ;; Return value:  Size  Location     Type
 14044 ;;                  1    wreg      void 
 14045 ;; Registers used:
 14046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14047 ;; Tracked objects:
 14048 ;;		On entry : 0/0
 14049 ;;		On exit  : 0/0
 14050 ;;		Unchanged: 0/0
 14051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14056 ;;Total ram usage:        0 bytes
 14057 ;; Hardware stack levels used: 1
 14058 ;; Hardware stack levels required when called: 3
 14059 ;; This function calls:
 14060 ;;		Absolute function
 14061 ;;		_CCP1_CaptureISR
 14062 ;;		_CCP2_CaptureISR
 14063 ;;		_CCP3_CaptureISR
 14064 ;;		_CCP4_CompareISR
 14065 ;;		_EUSART_Receive_ISR
 14066 ;;		_EUSART_Transmit_ISR
 14067 ;;		_TMR0_ISR
 14068 ;;		_TMR1_ISR
 14069 ;;		_TMR3_ISR
 14070 ;; This function is called by:
 14071 ;;		Interrupt level 1
 14072 ;; This function uses a non-reentrant model
 14073 ;;
 14074                           
 14075  0004                     _INTERRUPT_InterruptManager:
 14076                           
 14077                           ;incstack = 0
 14078  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 14079                           
 14080                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14081  0005  3180               	pagesel	$
 14082  0006                     i1l4291:
 14083                           
 14084                           ;interrupt_manager.c: 19:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 14085  0006  0021               	movlb	1	; select bank1
 14086  0007  1E90               	btfss	16,5	;volatile
 14087  0008  280A               	goto	u159_21
 14088  0009  280B               	goto	u159_20
 14089  000A                     u159_21:
 14090  000A  2814               	goto	i1l711
 14091  000B                     u159_20:
 14092  000B                     i1l4293:
 14093  000B  0020               	movlb	0	; select bank0
 14094  000C  1E90               	btfss	16,5	;volatile
 14095  000D  280F               	goto	u160_21
 14096  000E  2810               	goto	u160_20
 14097  000F                     u160_21:
 14098  000F  2814               	goto	i1l711
 14099  0010                     u160_20:
 14100  0010                     i1l4295:
 14101                           
 14102                           ;interrupt_manager.c: 20:     {;interrupt_manager.c: 21:         TMR0_ISR();
 14103  0010  318A  22DB  3180   	fcall	_TMR0_ISR
 14104                           
 14105                           ;interrupt_manager.c: 22:     }
 14106  0013  288E               	goto	i1l729
 14107  0014                     i1l711:	
 14108                           ;interrupt_manager.c: 23:     else if(INTCONbits.PEIE == 1)
 14109                           
 14110  0014  1F0B               	btfss	11,6	;volatile
 14111  0015  2817               	goto	u161_21
 14112  0016  2818               	goto	u161_20
 14113  0017                     u161_21:
 14114  0017  288E               	goto	i1l729
 14115  0018                     u161_20:
 14116  0018                     i1l4297:
 14117                           
 14118                           ;interrupt_manager.c: 24:     {;interrupt_manager.c: 25:         if(PIE4bits.CCP4IE == 1
      +                           && PIR4bits.CCP4IF == 1)
 14119  0018  0021               	movlb	1	; select bank1
 14120  0019  1D94               	btfss	20,3	;volatile
 14121  001A  281C               	goto	u162_21
 14122  001B  281D               	goto	u162_20
 14123  001C                     u162_21:
 14124  001C  2826               	goto	i1l714
 14125  001D                     u162_20:
 14126  001D                     i1l4299:
 14127  001D  0020               	movlb	0	; select bank0
 14128  001E  1D94               	btfss	20,3	;volatile
 14129  001F  2821               	goto	u163_21
 14130  0020  2822               	goto	u163_20
 14131  0021                     u163_21:
 14132  0021  2826               	goto	i1l714
 14133  0022                     u163_20:
 14134  0022                     i1l4301:
 14135                           
 14136                           ;interrupt_manager.c: 26:         {;interrupt_manager.c: 27:             CCP4_CompareISR
      +                          ();
 14137  0022  318A  2207  3180   	fcall	_CCP4_CompareISR
 14138                           
 14139                           ;interrupt_manager.c: 28:         }
 14140  0025  288E               	goto	i1l729
 14141  0026                     i1l714:	
 14142                           ;interrupt_manager.c: 29:         else if(PIE3bits.TMR3IE == 1 && PIR3bits.TMR3IF == 1)
 14143                           
 14144  0026  0021               	movlb	1	; select bank1
 14145  0027  1E13               	btfss	19,4	;volatile
 14146  0028  282A               	goto	u164_21
 14147  0029  282B               	goto	u164_20
 14148  002A                     u164_21:
 14149  002A  2834               	goto	i1l716
 14150  002B                     u164_20:
 14151  002B                     i1l4303:
 14152  002B  0020               	movlb	0	; select bank0
 14153  002C  1E13               	btfss	19,4	;volatile
 14154  002D  282F               	goto	u165_21
 14155  002E  2830               	goto	u165_20
 14156  002F                     u165_21:
 14157  002F  2834               	goto	i1l716
 14158  0030                     u165_20:
 14159  0030                     i1l4305:
 14160                           
 14161                           ;interrupt_manager.c: 30:         {;interrupt_manager.c: 31:             TMR3_ISR();
 14162  0030  318A  2216  3180   	fcall	_TMR3_ISR
 14163                           
 14164                           ;interrupt_manager.c: 32:         }
 14165  0033  288E               	goto	i1l729
 14166  0034                     i1l716:	
 14167                           ;interrupt_manager.c: 33:         else if(PIE4bits.CCP1IE == 1 && PIR4bits.CCP1IF == 1)
 14168                           
 14169  0034  0021               	movlb	1	; select bank1
 14170  0035  1C14               	btfss	20,0	;volatile
 14171  0036  2838               	goto	u166_21
 14172  0037  2839               	goto	u166_20
 14173  0038                     u166_21:
 14174  0038  2842               	goto	i1l718
 14175  0039                     u166_20:
 14176  0039                     i1l4307:
 14177  0039  0020               	movlb	0	; select bank0
 14178  003A  1C14               	btfss	20,0	;volatile
 14179  003B  283D               	goto	u167_21
 14180  003C  283E               	goto	u167_20
 14181  003D                     u167_21:
 14182  003D  2842               	goto	i1l718
 14183  003E                     u167_20:
 14184  003E                     i1l4309:
 14185                           
 14186                           ;interrupt_manager.c: 34:         {;interrupt_manager.c: 35:             CCP1_CaptureISR
      +                          ();
 14187  003E  318B  2368  3180   	fcall	_CCP1_CaptureISR
 14188                           
 14189                           ;interrupt_manager.c: 36:         }
 14190  0041  288E               	goto	i1l729
 14191  0042                     i1l718:	
 14192                           ;interrupt_manager.c: 37:         else if(PIE4bits.CCP3IE == 1 && PIR4bits.CCP3IF == 1)
 14193                           
 14194  0042  0021               	movlb	1	; select bank1
 14195  0043  1D14               	btfss	20,2	;volatile
 14196  0044  2846               	goto	u168_21
 14197  0045  2847               	goto	u168_20
 14198  0046                     u168_21:
 14199  0046  2850               	goto	i1l720
 14200  0047                     u168_20:
 14201  0047                     i1l4311:
 14202  0047  0020               	movlb	0	; select bank0
 14203  0048  1D14               	btfss	20,2	;volatile
 14204  0049  284B               	goto	u169_21
 14205  004A  284C               	goto	u169_20
 14206  004B                     u169_21:
 14207  004B  2850               	goto	i1l720
 14208  004C                     u169_20:
 14209  004C                     i1l4313:
 14210                           
 14211                           ;interrupt_manager.c: 38:         {;interrupt_manager.c: 39:             CCP3_CaptureISR
      +                          ();
 14212  004C  318B  2394  3180   	fcall	_CCP3_CaptureISR
 14213                           
 14214                           ;interrupt_manager.c: 40:         }
 14215  004F  288E               	goto	i1l729
 14216  0050                     i1l720:	
 14217                           ;interrupt_manager.c: 41:         else if(PIE4bits.CCP2IE == 1 && PIR4bits.CCP2IF == 1)
 14218                           
 14219  0050  0021               	movlb	1	; select bank1
 14220  0051  1C94               	btfss	20,1	;volatile
 14221  0052  2854               	goto	u170_21
 14222  0053  2855               	goto	u170_20
 14223  0054                     u170_21:
 14224  0054  285E               	goto	i1l722
 14225  0055                     u170_20:
 14226  0055                     i1l4315:
 14227  0055  0020               	movlb	0	; select bank0
 14228  0056  1C94               	btfss	20,1	;volatile
 14229  0057  2859               	goto	u171_21
 14230  0058  285A               	goto	u171_20
 14231  0059                     u171_21:
 14232  0059  285E               	goto	i1l722
 14233  005A                     u171_20:
 14234  005A                     i1l4317:
 14235                           
 14236                           ;interrupt_manager.c: 42:         {;interrupt_manager.c: 43:             CCP2_CaptureISR
      +                          ();
 14237  005A  318B  237E  3180   	fcall	_CCP2_CaptureISR
 14238                           
 14239                           ;interrupt_manager.c: 44:         }
 14240  005D  288E               	goto	i1l729
 14241  005E                     i1l722:	
 14242                           ;interrupt_manager.c: 45:         else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 14243                           
 14244  005E  0021               	movlb	1	; select bank1
 14245  005F  1C11               	btfss	17,0	;volatile
 14246  0060  2862               	goto	u172_21
 14247  0061  2863               	goto	u172_20
 14248  0062                     u172_21:
 14249  0062  286C               	goto	i1l724
 14250  0063                     u172_20:
 14251  0063                     i1l4319:
 14252  0063  0020               	movlb	0	; select bank0
 14253  0064  1C11               	btfss	17,0	;volatile
 14254  0065  2867               	goto	u173_21
 14255  0066  2868               	goto	u173_20
 14256  0067                     u173_21:
 14257  0067  286C               	goto	i1l724
 14258  0068                     u173_20:
 14259  0068                     i1l4321:
 14260                           
 14261                           ;interrupt_manager.c: 46:         {;interrupt_manager.c: 47:             TMR1_ISR();
 14262  0068  318A  22B7  3180   	fcall	_TMR1_ISR
 14263                           
 14264                           ;interrupt_manager.c: 48:         }
 14265  006B  288E               	goto	i1l729
 14266  006C                     i1l724:	
 14267                           ;interrupt_manager.c: 49:         else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 14268                           
 14269  006C  0021               	movlb	1	; select bank1
 14270  006D  1E91               	btfss	17,5	;volatile
 14271  006E  2870               	goto	u174_21
 14272  006F  2871               	goto	u174_20
 14273  0070                     u174_21:
 14274  0070  287D               	goto	i1l726
 14275  0071                     u174_20:
 14276  0071                     i1l4323:
 14277  0071  0020               	movlb	0	; select bank0
 14278  0072  1E91               	btfss	17,5	;volatile
 14279  0073  2875               	goto	u175_21
 14280  0074  2876               	goto	u175_20
 14281  0075                     u175_21:
 14282  0075  287D               	goto	i1l726
 14283  0076                     u175_20:
 14284  0076                     i1l4325:
 14285                           
 14286                           ;interrupt_manager.c: 50:         {;interrupt_manager.c: 51:             EUSART_RxDefaul
      +                          tInterruptHandler();
 14287  0076  0021               	movlb	1	; select bank1
 14288  0077  0837               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 14289  0078  008A               	movwf	10
 14290  0079  0836               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 14291  007A  000A               	callw
 14292  007B  3180               	pagesel	$
 14293                           
 14294                           ;interrupt_manager.c: 52:         }
 14295  007C  288E               	goto	i1l729
 14296  007D                     i1l726:	
 14297                           ;interrupt_manager.c: 53:         else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 14298                           
 14299  007D  0021               	movlb	1	; select bank1
 14300  007E  1E11               	btfss	17,4	;volatile
 14301  007F  2881               	goto	u176_21
 14302  0080  2882               	goto	u176_20
 14303  0081                     u176_21:
 14304  0081  288E               	goto	i1l723
 14305  0082                     u176_20:
 14306  0082                     i1l4327:
 14307  0082  0020               	movlb	0	; select bank0
 14308  0083  1E11               	btfss	17,4	;volatile
 14309  0084  2886               	goto	u177_21
 14310  0085  2887               	goto	u177_20
 14311  0086                     u177_21:
 14312  0086  288E               	goto	i1l723
 14313  0087                     u177_20:
 14314  0087                     i1l4329:
 14315                           
 14316                           ;interrupt_manager.c: 54:         {;interrupt_manager.c: 55:             EUSART_TxDefaul
      +                          tInterruptHandler();
 14317  0087  0021               	movlb	1	; select bank1
 14318  0088  0839               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 14319  0089  008A               	movwf	10
 14320  008A  0838               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 14321  008B  000A               	callw
 14322  008C  3180               	pagesel	$
 14323  008D  288E               	goto	i1l729
 14324  008E                     i1l723:
 14325  008E                     i1l729:
 14326  008E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 14327  008F  0009               	retfie
 14328  0090                     __end_of_INTERRUPT_InterruptManager:
 14329                           
 14330                           	psect	text51
 14331  0A16                     __ptext51:	
 14332 ;; *************** function _TMR3_ISR *****************
 14333 ;; Defined at:
 14334 ;;		line 129 in file "tmr3.c"
 14335 ;; Parameters:    Size  Location     Type
 14336 ;;		None
 14337 ;; Auto vars:     Size  Location     Type
 14338 ;;		None
 14339 ;; Return value:  Size  Location     Type
 14340 ;;                  1    wreg      void 
 14341 ;; Registers used:
 14342 ;;		wreg, status,2, status,0, pclath, cstack
 14343 ;; Tracked objects:
 14344 ;;		On entry : 0/0
 14345 ;;		On exit  : 0/0
 14346 ;;		Unchanged: 0/0
 14347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14352 ;;Total ram usage:        0 bytes
 14353 ;; Hardware stack levels used: 1
 14354 ;; Hardware stack levels required when called: 2
 14355 ;; This function calls:
 14356 ;;		_TMR3_Reload
 14357 ;; This function is called by:
 14358 ;;		_INTERRUPT_InterruptManager
 14359 ;; This function uses a non-reentrant model
 14360 ;;
 14361                           
 14362  0A16                     _TMR3_ISR:	
 14363                           ;psect for function _TMR3_ISR
 14364                           
 14365  0A16                     i1l4213:	
 14366                           ;incstack = 0
 14367                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 14368                           
 14369                           
 14370                           ;tmr3.c: 132:     PIR3bits.TMR3IF = 0;
 14371  0A16  0020               	movlb	0	; select bank0
 14372  0A17  1213               	bcf	19,4	;volatile
 14373  0A18                     i1l4215:
 14374                           
 14375                           ;tmr3.c: 133:     TMR3_Reload();
 14376  0A18  318A  223F  318A   	fcall	_TMR3_Reload
 14377  0A1B                     i1l1001:
 14378  0A1B  0008               	return
 14379  0A1C                     __end_of_TMR3_ISR:
 14380                           
 14381                           	psect	text52
 14382  0A3F                     __ptext52:	
 14383 ;; *************** function _TMR3_Reload *****************
 14384 ;; Defined at:
 14385 ;;		line 108 in file "tmr3.c"
 14386 ;; Parameters:    Size  Location     Type
 14387 ;;		None
 14388 ;; Auto vars:     Size  Location     Type
 14389 ;;		None
 14390 ;; Return value:  Size  Location     Type
 14391 ;;                  1    wreg      void 
 14392 ;; Registers used:
 14393 ;;		wreg, status,2, status,0, pclath, cstack
 14394 ;; Tracked objects:
 14395 ;;		On entry : 0/0
 14396 ;;		On exit  : 0/0
 14397 ;;		Unchanged: 0/0
 14398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14403 ;;Total ram usage:        0 bytes
 14404 ;; Hardware stack levels used: 1
 14405 ;; Hardware stack levels required when called: 1
 14406 ;; This function calls:
 14407 ;;		_TMR3_WriteTimer
 14408 ;; This function is called by:
 14409 ;;		_TMR3_ISR
 14410 ;;		_SpeakerTone_Off
 14411 ;; This function uses a non-reentrant model
 14412 ;;
 14413                           
 14414  0A3F                     _TMR3_Reload:	
 14415                           ;psect for function _TMR3_Reload
 14416                           
 14417  0A3F                     i1l4005:	
 14418                           ;incstack = 0
 14419                           ; Regs used in _TMR3_Reload: [wreg+status,2+status,0+pclath+cstack]
 14420                           
 14421                           
 14422                           ;tmr3.c: 110:     TMR3_WriteTimer(timer3ReloadVal);
 14423  0A3F  0021               	movlb	1	; select bank1
 14424  0A40  0829               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
 14425  0A41  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 14426  0A42  0828               	movf	_timer3ReloadVal^(0+128),w	;volatile
 14427  0A43  00F0               	movwf	TMR3_WriteTimer@timerVal
 14428  0A44  318A  22FD  318A   	fcall	_TMR3_WriteTimer
 14429  0A47                     i1l992:
 14430  0A47  0008               	return
 14431  0A48                     __end_of_TMR3_Reload:
 14432                           
 14433                           	psect	text53
 14434  0AFD                     __ptext53:	
 14435 ;; *************** function _TMR3_WriteTimer *****************
 14436 ;; Defined at:
 14437 ;;		line 84 in file "tmr3.c"
 14438 ;; Parameters:    Size  Location     Type
 14439 ;;  timerVal        2    0[COMMON] unsigned short 
 14440 ;; Auto vars:     Size  Location     Type
 14441 ;;		None
 14442 ;; Return value:  Size  Location     Type
 14443 ;;                  1    wreg      void 
 14444 ;; Registers used:
 14445 ;;		wreg, status,2
 14446 ;; Tracked objects:
 14447 ;;		On entry : 0/0
 14448 ;;		On exit  : 0/0
 14449 ;;		Unchanged: 0/0
 14450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14454 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14455 ;;Total ram usage:        2 bytes
 14456 ;; Hardware stack levels used: 1
 14457 ;; This function calls:
 14458 ;;		Nothing
 14459 ;; This function is called by:
 14460 ;;		_TMR3_Reload
 14461 ;; This function uses a non-reentrant model
 14462 ;;
 14463                           
 14464  0AFD                     _TMR3_WriteTimer:	
 14465                           ;psect for function _TMR3_WriteTimer
 14466                           
 14467  0AFD                     i1l3717:	
 14468                           ;incstack = 0
 14469                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 14470                           
 14471                           
 14472                           ;tmr3.c: 84: void TMR3_WriteTimer(uint16_t timerVal);tmr3.c: 85: {;tmr3.c: 86:     if (T
      +                          3CONbits.T3SYNC == 1)
 14473  0AFD  0028               	movlb	8	; select bank8
 14474  0AFE  1D13               	btfss	19,2	;volatile
 14475  0AFF  2B01               	goto	u126_21
 14476  0B00  2B02               	goto	u126_20
 14477  0B01                     u126_21:
 14478  0B01  2B09               	goto	i1l3727
 14479  0B02                     u126_20:
 14480  0B02                     i1l3719:
 14481                           
 14482                           ;tmr3.c: 87:     {;tmr3.c: 89:         T3CONbits.TMR3ON = 0;
 14483  0B02  1013               	bcf	19,0	;volatile
 14484  0B03                     i1l3721:
 14485                           
 14486                           ;tmr3.c: 92:         TMR3H = (uint8_t)(timerVal >> 8);
 14487  0B03  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14488  0B04  0092               	movwf	18	;volatile
 14489  0B05                     i1l3723:
 14490                           
 14491                           ;tmr3.c: 93:         TMR3L = (uint8_t)timerVal;
 14492  0B05  0870               	movf	TMR3_WriteTimer@timerVal,w
 14493  0B06  0091               	movwf	17	;volatile
 14494  0B07                     i1l3725:
 14495                           
 14496                           ;tmr3.c: 96:         T3CONbits.TMR3ON =1;
 14497  0B07  1413               	bsf	19,0	;volatile
 14498                           
 14499                           ;tmr3.c: 97:     }
 14500  0B08  2B0D               	goto	i1l989
 14501  0B09                     i1l3727:
 14502                           
 14503                           ;tmr3.c: 99:     {;tmr3.c: 101:         TMR3H = (uint8_t)(timerVal >> 8);
 14504  0B09  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14505  0B0A  0092               	movwf	18	;volatile
 14506  0B0B                     i1l3729:
 14507                           
 14508                           ;tmr3.c: 102:         TMR3L = (uint8_t)timerVal;
 14509  0B0B  0870               	movf	TMR3_WriteTimer@timerVal,w
 14510  0B0C  0091               	movwf	17	;volatile
 14511  0B0D                     i1l989:
 14512  0B0D  0008               	return
 14513  0B0E                     __end_of_TMR3_WriteTimer:
 14514                           
 14515                           	psect	text54
 14516  0AB7                     __ptext54:	
 14517 ;; *************** function _TMR1_ISR *****************
 14518 ;; Defined at:
 14519 ;;		line 111 in file "tmr1.c"
 14520 ;; Parameters:    Size  Location     Type
 14521 ;;		None
 14522 ;; Auto vars:     Size  Location     Type
 14523 ;;		None
 14524 ;; Return value:  Size  Location     Type
 14525 ;;                  1    wreg      void 
 14526 ;; Registers used:
 14527 ;;		wreg, status,2, status,0, pclath, cstack
 14528 ;; Tracked objects:
 14529 ;;		On entry : 0/0
 14530 ;;		On exit  : 0/0
 14531 ;;		Unchanged: 0/0
 14532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14537 ;;Total ram usage:        0 bytes
 14538 ;; Hardware stack levels used: 1
 14539 ;; Hardware stack levels required when called: 1
 14540 ;; This function calls:
 14541 ;;		_TMR1_WriteTimer
 14542 ;; This function is called by:
 14543 ;;		_INTERRUPT_InterruptManager
 14544 ;; This function uses a non-reentrant model
 14545 ;;
 14546                           
 14547  0AB7                     _TMR1_ISR:	
 14548                           ;psect for function _TMR1_ISR
 14549                           
 14550  0AB7                     i1l4153:	
 14551                           ;incstack = 0
 14552                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 14553                           
 14554                           
 14555                           ;tmr1.c: 114:     PIR1bits.TMR1IF = 0;
 14556  0AB7  0020               	movlb	0	; select bank0
 14557  0AB8  1011               	bcf	17,0	;volatile
 14558  0AB9                     i1l4155:
 14559                           
 14560                           ;tmr1.c: 115:     TMR1_WriteTimer(timer1ReloadVal);
 14561  0AB9  0021               	movlb	1	; select bank1
 14562  0ABA  083B               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 14563  0ABB  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 14564  0ABC  083A               	movf	_timer1ReloadVal^(0+128),w	;volatile
 14565  0ABD  00F0               	movwf	TMR1_WriteTimer@timerVal
 14566  0ABE  318A  22EC  318A   	fcall	_TMR1_WriteTimer
 14567  0AC1                     i1l520:
 14568  0AC1  0008               	return
 14569  0AC2                     __end_of_TMR1_ISR:
 14570                           
 14571                           	psect	text55
 14572  0AEC                     __ptext55:	
 14573 ;; *************** function _TMR1_WriteTimer *****************
 14574 ;; Defined at:
 14575 ;;		line 80 in file "tmr1.c"
 14576 ;; Parameters:    Size  Location     Type
 14577 ;;  timerVal        2    0[COMMON] unsigned short 
 14578 ;; Auto vars:     Size  Location     Type
 14579 ;;		None
 14580 ;; Return value:  Size  Location     Type
 14581 ;;                  1    wreg      void 
 14582 ;; Registers used:
 14583 ;;		wreg, status,2
 14584 ;; Tracked objects:
 14585 ;;		On entry : 0/0
 14586 ;;		On exit  : 0/0
 14587 ;;		Unchanged: 0/0
 14588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14592 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14593 ;;Total ram usage:        2 bytes
 14594 ;; Hardware stack levels used: 1
 14595 ;; This function calls:
 14596 ;;		Nothing
 14597 ;; This function is called by:
 14598 ;;		_TMR1_ISR
 14599 ;;		_TMR1_Reload
 14600 ;; This function uses a non-reentrant model
 14601 ;;
 14602                           
 14603  0AEC                     _TMR1_WriteTimer:	
 14604                           ;psect for function _TMR1_WriteTimer
 14605                           
 14606  0AEC                     i1l3987:	
 14607                           ;incstack = 0
 14608                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 14609                           
 14610                           
 14611                           ;tmr1.c: 80: void TMR1_WriteTimer(uint16_t timerVal);tmr1.c: 81: {;tmr1.c: 82:     if (T
      +                          1CONbits.T1SYNC == 1)
 14612  0AEC  0020               	movlb	0	; select bank0
 14613  0AED  1D1B               	btfss	27,2	;volatile
 14614  0AEE  2AF0               	goto	u132_21
 14615  0AEF  2AF1               	goto	u132_20
 14616  0AF0                     u132_21:
 14617  0AF0  2AF8               	goto	i1l3997
 14618  0AF1                     u132_20:
 14619  0AF1                     i1l3989:
 14620                           
 14621                           ;tmr1.c: 83:     {;tmr1.c: 85:         T1CONbits.TMR1ON = 0;
 14622  0AF1  101B               	bcf	27,0	;volatile
 14623  0AF2                     i1l3991:
 14624                           
 14625                           ;tmr1.c: 88:         TMR1H = (uint8_t)(timerVal >> 8);
 14626  0AF2  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 14627  0AF3  009A               	movwf	26	;volatile
 14628  0AF4                     i1l3993:
 14629                           
 14630                           ;tmr1.c: 89:         TMR1L = (uint8_t)timerVal;
 14631  0AF4  0870               	movf	TMR1_WriteTimer@timerVal,w
 14632  0AF5  0099               	movwf	25	;volatile
 14633  0AF6                     i1l3995:
 14634                           
 14635                           ;tmr1.c: 92:         T1CONbits.TMR1ON =1;
 14636  0AF6  141B               	bsf	27,0	;volatile
 14637                           
 14638                           ;tmr1.c: 93:     }
 14639  0AF7  2AFC               	goto	i1l514
 14640  0AF8                     i1l3997:
 14641                           
 14642                           ;tmr1.c: 95:     {;tmr1.c: 97:         TMR1H = (uint8_t)(timerVal >> 8);
 14643  0AF8  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 14644  0AF9  009A               	movwf	26	;volatile
 14645  0AFA                     i1l3999:
 14646                           
 14647                           ;tmr1.c: 98:         TMR1L = (uint8_t)timerVal;
 14648  0AFA  0870               	movf	TMR1_WriteTimer@timerVal,w
 14649  0AFB  0099               	movwf	25	;volatile
 14650  0AFC                     i1l514:
 14651  0AFC  0008               	return
 14652  0AFD                     __end_of_TMR1_WriteTimer:
 14653                           
 14654                           	psect	text56
 14655  0ADB                     __ptext56:	
 14656 ;; *************** function _TMR0_ISR *****************
 14657 ;; Defined at:
 14658 ;;		line 90 in file "tmr0.c"
 14659 ;; Parameters:    Size  Location     Type
 14660 ;;		None
 14661 ;; Auto vars:     Size  Location     Type
 14662 ;;		None
 14663 ;; Return value:  Size  Location     Type
 14664 ;;                  1    wreg      void 
 14665 ;; Registers used:
 14666 ;;		wreg, status,2, status,0, pclath, cstack
 14667 ;; Tracked objects:
 14668 ;;		On entry : 0/0
 14669 ;;		On exit  : 0/0
 14670 ;;		Unchanged: 0/0
 14671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14675 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14676 ;;Total ram usage:        1 bytes
 14677 ;; Hardware stack levels used: 1
 14678 ;; Hardware stack levels required when called: 2
 14679 ;; This function calls:
 14680 ;;		_TMR0_CallBack
 14681 ;; This function is called by:
 14682 ;;		_INTERRUPT_InterruptManager
 14683 ;; This function uses a non-reentrant model
 14684 ;;
 14685                           
 14686  0ADB                     _TMR0_ISR:	
 14687                           ;psect for function _TMR0_ISR
 14688                           
 14689  0ADB                     i1l4127:	
 14690                           ;incstack = 0
 14691                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 14692                           
 14693                           
 14694                           ;tmr0.c: 93:     PIR0bits.TMR0IF = 0;
 14695  0ADB  0020               	movlb	0	; select bank0
 14696  0ADC  1290               	bcf	16,5	;volatile
 14697  0ADD                     i1l4129:
 14698                           
 14699                           ;tmr0.c: 95:     if (++CountCallBack >= 4)
 14700  0ADD  3001               	movlw	1
 14701  0ADE  00F0               	movwf	??_TMR0_ISR
 14702  0ADF  0870               	movf	??_TMR0_ISR,w
 14703  0AE0  07FD               	addwf	_CountCallBack,f	;volatile
 14704  0AE1  3004               	movlw	4
 14705  0AE2  027D               	subwf	_CountCallBack,w	;volatile
 14706  0AE3  1C03               	skipc
 14707  0AE4  2AE6               	goto	u145_21
 14708  0AE5  2AE7               	goto	u145_20
 14709  0AE6                     u145_21:
 14710  0AE6  2AEB               	goto	i1l331
 14711  0AE7                     u145_20:
 14712  0AE7                     i1l4131:
 14713                           
 14714                           ;tmr0.c: 96:     {;tmr0.c: 98:         TMR0_CallBack();
 14715  0AE7  318A  2222  318A   	fcall	_TMR0_CallBack
 14716  0AEA                     i1l4133:
 14717                           
 14718                           ;tmr0.c: 101:         CountCallBack = 0;
 14719  0AEA  01FD               	clrf	_CountCallBack	;volatile
 14720  0AEB                     i1l331:
 14721  0AEB  0008               	return
 14722  0AEC                     __end_of_TMR0_ISR:
 14723                           
 14724                           	psect	text57
 14725  0A22                     __ptext57:	
 14726 ;; *************** function _TMR0_CallBack *****************
 14727 ;; Defined at:
 14728 ;;		line 109 in file "tmr0.c"
 14729 ;; Parameters:    Size  Location     Type
 14730 ;;		None
 14731 ;; Auto vars:     Size  Location     Type
 14732 ;;		None
 14733 ;; Return value:  Size  Location     Type
 14734 ;;                  1    wreg      void 
 14735 ;; Registers used:
 14736 ;;		wreg, status,2, status,0, pclath, cstack
 14737 ;; Tracked objects:
 14738 ;;		On entry : 0/0
 14739 ;;		On exit  : 0/0
 14740 ;;		Unchanged: 0/0
 14741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14746 ;;Total ram usage:        0 bytes
 14747 ;; Hardware stack levels used: 1
 14748 ;; Hardware stack levels required when called: 1
 14749 ;; This function calls:
 14750 ;;		_FRT_IncMicros
 14751 ;;		_FRT_IncMillis
 14752 ;; This function is called by:
 14753 ;;		_TMR0_ISR
 14754 ;; This function uses a non-reentrant model
 14755 ;;
 14756                           
 14757  0A22                     _TMR0_CallBack:	
 14758                           ;psect for function _TMR0_CallBack
 14759                           
 14760  0A22                     i1l3937:	
 14761                           ;incstack = 0
 14762                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 14763                           
 14764                           
 14765                           ;tmr0.c: 111:     FRT_IncMillis();
 14766  0A22  318A  22A3  318A   	fcall	_FRT_IncMillis
 14767                           
 14768                           ;tmr0.c: 112:     FRT_IncMicros();
 14769  0A25  318A  2299  318A   	fcall	_FRT_IncMicros
 14770  0A28                     i1l334:
 14771  0A28  0008               	return
 14772  0A29                     __end_of_TMR0_CallBack:
 14773                           
 14774                           	psect	text58
 14775  0AA3                     __ptext58:	
 14776 ;; *************** function _FRT_IncMillis *****************
 14777 ;; Defined at:
 14778 ;;		line 38 in file "FRT.c"
 14779 ;; Parameters:    Size  Location     Type
 14780 ;;		None
 14781 ;; Auto vars:     Size  Location     Type
 14782 ;;		None
 14783 ;; Return value:  Size  Location     Type
 14784 ;;                  1    wreg      void 
 14785 ;; Registers used:
 14786 ;;		wreg
 14787 ;; Tracked objects:
 14788 ;;		On entry : 0/0
 14789 ;;		On exit  : 0/0
 14790 ;;		Unchanged: 0/0
 14791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14796 ;;Total ram usage:        0 bytes
 14797 ;; Hardware stack levels used: 1
 14798 ;; This function calls:
 14799 ;;		Nothing
 14800 ;; This function is called by:
 14801 ;;		_TMR0_CallBack
 14802 ;; This function uses a non-reentrant model
 14803 ;;
 14804                           
 14805  0AA3                     _FRT_IncMillis:	
 14806                           ;psect for function _FRT_IncMillis
 14807                           
 14808  0AA3                     i1l3695:	
 14809                           ;incstack = 0
 14810                           ; Regs used in _FRT_IncMillis: [wreg]
 14811                           
 14812                           
 14813                           ;FRT.c: 39:     millis ++;
 14814  0AA3  3001               	movlw	1
 14815  0AA4  0022               	movlb	2	; select bank2
 14816  0AA5  07BC               	addwf	_millis^(0+256),f
 14817  0AA6  3000               	movlw	0
 14818  0AA7  3DBD               	addwfc	(_millis+1)^(0+256),f
 14819  0AA8  3000               	movlw	0
 14820  0AA9  3DBE               	addwfc	(_millis+2)^(0+256),f
 14821  0AAA  3000               	movlw	0
 14822  0AAB  3DBF               	addwfc	(_millis+3)^(0+256),f
 14823  0AAC                     i1l808:
 14824  0AAC  0008               	return
 14825  0AAD                     __end_of_FRT_IncMillis:
 14826                           
 14827                           	psect	text59
 14828  0A99                     __ptext59:	
 14829 ;; *************** function _FRT_IncMicros *****************
 14830 ;; Defined at:
 14831 ;;		line 45 in file "FRT.c"
 14832 ;; Parameters:    Size  Location     Type
 14833 ;;		None
 14834 ;; Auto vars:     Size  Location     Type
 14835 ;;		None
 14836 ;; Return value:  Size  Location     Type
 14837 ;;                  1    wreg      void 
 14838 ;; Registers used:
 14839 ;;		wreg
 14840 ;; Tracked objects:
 14841 ;;		On entry : 0/0
 14842 ;;		On exit  : 0/0
 14843 ;;		Unchanged: 0/0
 14844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14849 ;;Total ram usage:        0 bytes
 14850 ;; Hardware stack levels used: 1
 14851 ;; This function calls:
 14852 ;;		Nothing
 14853 ;; This function is called by:
 14854 ;;		_TMR0_CallBack
 14855 ;; This function uses a non-reentrant model
 14856 ;;
 14857                           
 14858  0A99                     _FRT_IncMicros:	
 14859                           ;psect for function _FRT_IncMicros
 14860                           
 14861  0A99                     i1l3699:	
 14862                           ;incstack = 0
 14863                           ; Regs used in _FRT_IncMicros: [wreg]
 14864                           
 14865                           
 14866                           ;FRT.c: 46:     micros += 1000;
 14867  0A99  30E8               	movlw	232
 14868  0A9A  0022               	movlb	2	; select bank2
 14869  0A9B  07B8               	addwf	_micros@FRT$F1531^(0+256),f
 14870  0A9C  3003               	movlw	3
 14871  0A9D  3DB9               	addwfc	(_micros@FRT$F1531+1)^(0+256),f
 14872  0A9E  3000               	movlw	0
 14873  0A9F  3DBA               	addwfc	(_micros@FRT$F1531+2)^(0+256),f
 14874  0AA0  3000               	movlw	0
 14875  0AA1  3DBB               	addwfc	(_micros@FRT$F1531+3)^(0+256),f
 14876  0AA2                     i1l811:
 14877  0AA2  0008               	return
 14878  0AA3                     __end_of_FRT_IncMicros:
 14879                           
 14880                           	psect	text60
 14881  0C5E                     __ptext60:	
 14882 ;; *************** function _EUSART_Transmit_ISR *****************
 14883 ;; Defined at:
 14884 ;;		line 181 in file "eusart.c"
 14885 ;; Parameters:    Size  Location     Type
 14886 ;;		None
 14887 ;; Auto vars:     Size  Location     Type
 14888 ;;		None
 14889 ;; Return value:  Size  Location     Type
 14890 ;;                  1    wreg      void 
 14891 ;; Registers used:
 14892 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14893 ;; Tracked objects:
 14894 ;;		On entry : 0/0
 14895 ;;		On exit  : 0/0
 14896 ;;		Unchanged: 0/0
 14897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14902 ;;Total ram usage:        1 bytes
 14903 ;; Hardware stack levels used: 1
 14904 ;; This function calls:
 14905 ;;		Nothing
 14906 ;; This function is called by:
 14907 ;;		_EUSART_Initialize
 14908 ;;		_INTERRUPT_InterruptManager
 14909 ;; This function uses a non-reentrant model
 14910 ;;
 14911                           
 14912  0C5E                     _EUSART_Transmit_ISR:	
 14913                           ;psect for function _EUSART_Transmit_ISR
 14914                           
 14915  0C5E                     i1l4179:	
 14916                           ;incstack = 0
 14917                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 14918                           
 14919                           
 14920                           ;eusart.c: 185:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 14921  0C5E  3008               	movlw	8
 14922  0C5F  0021               	movlb	1	; select bank1
 14923  0C60  0252               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 14924  0C61  1803               	skipnc
 14925  0C62  2C64               	goto	u148_21
 14926  0C63  2C65               	goto	u148_20
 14927  0C64                     u148_21:
 14928  0C64  2C7E               	goto	i1l632
 14929  0C65                     u148_20:
 14930  0C65                     i1l4181:
 14931                           
 14932                           ;eusart.c: 186:     {;eusart.c: 187:         TX1REG = eusartTxBuffer[eusartTxTail++];
 14933  0C65  0853               	movf	_eusartTxTail^(0+128),w
 14934  0C66  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 14935  0C67  0086               	movwf	6
 14936  0C68  3001               	movlw	1	; select bank2/3
 14937  0C69  0087               	movwf	7
 14938  0C6A  0801               	movf	1,w
 14939  0C6B  0023               	movlb	3	; select bank3
 14940  0C6C  009A               	movwf	26	;volatile
 14941  0C6D                     i1l4183:
 14942  0C6D  3001               	movlw	1
 14943  0C6E  00F0               	movwf	??_EUSART_Transmit_ISR
 14944  0C6F  0870               	movf	??_EUSART_Transmit_ISR,w
 14945  0C70  0021               	movlb	1	; select bank1
 14946  0C71  07D3               	addwf	_eusartTxTail^(0+128),f	;volatile
 14947  0C72                     i1l4185:
 14948                           
 14949                           ;eusart.c: 188:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 14950  0C72  3008               	movlw	8
 14951  0C73  0253               	subwf	_eusartTxTail^(0+128),w	;volatile
 14952  0C74  1C03               	skipc
 14953  0C75  2C77               	goto	u149_21
 14954  0C76  2C78               	goto	u149_20
 14955  0C77                     u149_21:
 14956  0C77  2C79               	goto	i1l4189
 14957  0C78                     u149_20:
 14958  0C78                     i1l4187:
 14959                           
 14960                           ;eusart.c: 189:         {;eusart.c: 190:             eusartTxTail = 0;
 14961  0C78  01D3               	clrf	_eusartTxTail^(0+128)	;volatile
 14962  0C79                     i1l4189:
 14963                           
 14964                           ;eusart.c: 192:         eusartTxBufferRemaining++;
 14965  0C79  3001               	movlw	1
 14966  0C7A  00F0               	movwf	??_EUSART_Transmit_ISR
 14967  0C7B  0870               	movf	??_EUSART_Transmit_ISR,w
 14968  0C7C  07D2               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 14969                           
 14970                           ;eusart.c: 193:     }
 14971  0C7D  2C7F               	goto	i1l635
 14972  0C7E                     i1l632:	
 14973                           ;eusart.c: 194:     else
 14974                           
 14975                           
 14976                           ;eusart.c: 195:     {;eusart.c: 196:         PIE1bits.TXIE = 0;
 14977  0C7E  1211               	bcf	17,4	;volatile
 14978  0C7F                     i1l635:
 14979  0C7F  0008               	return
 14980  0C80                     __end_of_EUSART_Transmit_ISR:
 14981                           
 14982                           	psect	text61
 14983  0E52                     __ptext61:	
 14984 ;; *************** function _EUSART_Receive_ISR *****************
 14985 ;; Defined at:
 14986 ;;		line 202 in file "eusart.c"
 14987 ;; Parameters:    Size  Location     Type
 14988 ;;		None
 14989 ;; Auto vars:     Size  Location     Type
 14990 ;;		None
 14991 ;; Return value:  Size  Location     Type
 14992 ;;                  1    wreg      void 
 14993 ;; Registers used:
 14994 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14995 ;; Tracked objects:
 14996 ;;		On entry : 0/0
 14997 ;;		On exit  : 0/0
 14998 ;;		Unchanged: 0/0
 14999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15004 ;;Total ram usage:        0 bytes
 15005 ;; Hardware stack levels used: 1
 15006 ;; Hardware stack levels required when called: 2
 15007 ;; This function calls:
 15008 ;;		Absolute function
 15009 ;;		_EUSART_DefaultErrorHandler
 15010 ;;		_EUSART_DefaultFramingErrorHandler
 15011 ;;		_EUSART_DefaultOverrunErrorHandler
 15012 ;;		_EUSART_RxDataHandler
 15013 ;; This function is called by:
 15014 ;;		_EUSART_Initialize
 15015 ;;		_INTERRUPT_InterruptManager
 15016 ;; This function uses a non-reentrant model
 15017 ;;
 15018                           
 15019  0E52                     _EUSART_Receive_ISR:	
 15020                           ;psect for function _EUSART_Receive_ISR
 15021                           
 15022  0E52                     i1l4191:	
 15023                           ;incstack = 0
 15024                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15025                           
 15026                           
 15027                           ;eusart.c: 205:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 15028  0E52  087B               	movf	_eusartRxHead,w	;volatile
 15029  0E53  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15030  0E54  0086               	movwf	6
 15031  0E55  3001               	movlw	1	; select bank2/3
 15032  0E56  0087               	movwf	7
 15033  0E57  0181               	clrf	1
 15034  0E58                     i1l4193:
 15035                           
 15036                           ;eusart.c: 207:     if(RC1STAbits.FERR){
 15037  0E58  0023               	movlb	3	; select bank3
 15038  0E59  1D1D               	btfss	29,2	;volatile
 15039  0E5A  2E5C               	goto	u150_21
 15040  0E5B  2E5D               	goto	u150_20
 15041  0E5C                     u150_21:
 15042  0E5C  2E69               	goto	i1l4199
 15043  0E5D                     u150_20:
 15044  0E5D                     i1l4195:
 15045                           
 15046                           ;eusart.c: 208:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 15047  0E5D  087B               	movf	_eusartRxHead,w	;volatile
 15048  0E5E  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15049  0E5F  0086               	movwf	6
 15050  0E60  3001               	movlw	1	; select bank2/3
 15051  0E61  0087               	movwf	7
 15052  0E62  1481               	bsf	1,1
 15053  0E63                     i1l4197:
 15054                           
 15055                           ;eusart.c: 209:         EUSART_FramingErrorHandler();
 15056  0E63  0021               	movlb	1	; select bank1
 15057  0E64  0835               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 15058  0E65  008A               	movwf	10
 15059  0E66  0834               	movf	_EUSART_FramingErrorHandler^(0+128),w
 15060  0E67  000A               	callw
 15061  0E68  318E               	pagesel	$
 15062  0E69                     i1l4199:
 15063                           
 15064                           ;eusart.c: 212:     if(RC1STAbits.OERR){
 15065  0E69  0023               	movlb	3	; select bank3
 15066  0E6A  1C9D               	btfss	29,1	;volatile
 15067  0E6B  2E6D               	goto	u151_21
 15068  0E6C  2E6E               	goto	u151_20
 15069  0E6D                     u151_21:
 15070  0E6D  2E7A               	goto	i1l4205
 15071  0E6E                     u151_20:
 15072  0E6E                     i1l4201:
 15073                           
 15074                           ;eusart.c: 213:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 15075  0E6E  087B               	movf	_eusartRxHead,w	;volatile
 15076  0E6F  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15077  0E70  0086               	movwf	6
 15078  0E71  3001               	movlw	1	; select bank2/3
 15079  0E72  0087               	movwf	7
 15080  0E73  1501               	bsf	1,2
 15081  0E74                     i1l4203:
 15082                           
 15083                           ;eusart.c: 214:         EUSART_OverrunErrorHandler();
 15084  0E74  0021               	movlb	1	; select bank1
 15085  0E75  0833               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 15086  0E76  008A               	movwf	10
 15087  0E77  0832               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 15088  0E78  000A               	callw
 15089  0E79  318E               	pagesel	$
 15090  0E7A                     i1l4205:
 15091                           
 15092                           ;eusart.c: 217:     if(eusartRxStatusBuffer[eusartRxHead].status){
 15093  0E7A  087B               	movf	_eusartRxHead,w	;volatile
 15094  0E7B  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15095  0E7C  0086               	movwf	6
 15096  0E7D  3001               	movlw	1	; select bank2/3
 15097  0E7E  0087               	movwf	7
 15098  0E7F  0801               	movf	1,w
 15099  0E80  1903               	btfsc	3,2
 15100  0E81  2E83               	goto	u152_21
 15101  0E82  2E84               	goto	u152_20
 15102  0E83                     u152_21:
 15103  0E83  2E8B               	goto	i1l4209
 15104  0E84                     u152_20:
 15105  0E84                     i1l4207:
 15106                           
 15107                           ;eusart.c: 218:         EUSART_ErrorHandler();
 15108  0E84  0021               	movlb	1	; select bank1
 15109  0E85  0831               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 15110  0E86  008A               	movwf	10
 15111  0E87  0830               	movf	_EUSART_ErrorHandler^(0+128),w
 15112  0E88  000A               	callw
 15113  0E89  318E               	pagesel	$
 15114                           
 15115                           ;eusart.c: 219:     } else {
 15116  0E8A  2E8E               	goto	i1l642
 15117  0E8B                     i1l4209:
 15118                           
 15119                           ;eusart.c: 220:         EUSART_RxDataHandler();
 15120  0E8B  318C  2408  318E   	fcall	_EUSART_RxDataHandler
 15121  0E8E                     i1l642:
 15122  0E8E  0008               	return
 15123  0E8F                     __end_of_EUSART_Receive_ISR:
 15124                           
 15125                           	psect	text62
 15126  0A0E                     __ptext62:	
 15127 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 15128 ;; Defined at:
 15129 ;;		line 244 in file "eusart.c"
 15130 ;; Parameters:    Size  Location     Type
 15131 ;;		None
 15132 ;; Auto vars:     Size  Location     Type
 15133 ;;		None
 15134 ;; Return value:  Size  Location     Type
 15135 ;;                  1    wreg      void 
 15136 ;; Registers used:
 15137 ;;		None
 15138 ;; Tracked objects:
 15139 ;;		On entry : 0/0
 15140 ;;		On exit  : 0/0
 15141 ;;		Unchanged: 0/0
 15142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15147 ;;Total ram usage:        0 bytes
 15148 ;; Hardware stack levels used: 1
 15149 ;; This function calls:
 15150 ;;		Nothing
 15151 ;; This function is called by:
 15152 ;;		_EUSART_Initialize
 15153 ;;		_EUSART_Receive_ISR
 15154 ;; This function uses a non-reentrant model
 15155 ;;
 15156                           
 15157  0A0E                     _EUSART_DefaultOverrunErrorHandler:	
 15158                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 15159                           
 15160  0A0E                     i1l4001:	
 15161                           ;incstack = 0
 15162                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 15163                           
 15164                           
 15165                           ;eusart.c: 247:     RC1STAbits.CREN = 0;
 15166  0A0E  0023               	movlb	3	; select bank3
 15167  0A0F  121D               	bcf	29,4	;volatile
 15168                           
 15169                           ;eusart.c: 248:     RC1STAbits.CREN = 1;
 15170  0A10  161D               	bsf	29,4	;volatile
 15171  0A11                     i1l652:
 15172  0A11  0008               	return
 15173  0A12                     __end_of_EUSART_DefaultOverrunErrorHandler:
 15174                           
 15175                           	psect	text63
 15176  0A03                     __ptext63:	
 15177 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 15178 ;; Defined at:
 15179 ;;		line 240 in file "eusart.c"
 15180 ;; Parameters:    Size  Location     Type
 15181 ;;		None
 15182 ;; Auto vars:     Size  Location     Type
 15183 ;;		None
 15184 ;; Return value:  Size  Location     Type
 15185 ;;                  1    wreg      void 
 15186 ;; Registers used:
 15187 ;;		None
 15188 ;; Tracked objects:
 15189 ;;		On entry : 0/0
 15190 ;;		On exit  : 0/0
 15191 ;;		Unchanged: 0/0
 15192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15197 ;;Total ram usage:        0 bytes
 15198 ;; Hardware stack levels used: 1
 15199 ;; This function calls:
 15200 ;;		Nothing
 15201 ;; This function is called by:
 15202 ;;		_EUSART_Initialize
 15203 ;;		_EUSART_Receive_ISR
 15204 ;; This function uses a non-reentrant model
 15205 ;;
 15206                           
 15207  0A03                     _EUSART_DefaultFramingErrorHandler:	
 15208                           ;psect for function _EUSART_DefaultFramingErrorHandler
 15209                           
 15210  0A03                     i1l649:	
 15211                           ;incstack = 0
 15212                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 15213                           
 15214  0A03  0008               	return
 15215  0A04                     __end_of_EUSART_DefaultFramingErrorHandler:
 15216                           
 15217                           	psect	text64
 15218  0A0A                     __ptext64:	
 15219 ;; *************** function _EUSART_DefaultErrorHandler *****************
 15220 ;; Defined at:
 15221 ;;		line 254 in file "eusart.c"
 15222 ;; Parameters:    Size  Location     Type
 15223 ;;		None
 15224 ;; Auto vars:     Size  Location     Type
 15225 ;;		None
 15226 ;; Return value:  Size  Location     Type
 15227 ;;                  1    wreg      void 
 15228 ;; Registers used:
 15229 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15230 ;; Tracked objects:
 15231 ;;		On entry : 0/0
 15232 ;;		On exit  : 0/0
 15233 ;;		Unchanged: 0/0
 15234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15239 ;;Total ram usage:        0 bytes
 15240 ;; Hardware stack levels used: 1
 15241 ;; Hardware stack levels required when called: 1
 15242 ;; This function calls:
 15243 ;;		_EUSART_RxDataHandler
 15244 ;; This function is called by:
 15245 ;;		_EUSART_Initialize
 15246 ;;		_EUSART_Receive_ISR
 15247 ;; This function uses a non-reentrant model
 15248 ;;
 15249                           
 15250  0A0A                     _EUSART_DefaultErrorHandler:	
 15251                           ;psect for function _EUSART_DefaultErrorHandler
 15252                           
 15253  0A0A                     i1l4003:	
 15254                           ;incstack = 0
 15255                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 15256                           
 15257                           
 15258                           ;eusart.c: 255:     EUSART_RxDataHandler();
 15259  0A0A  318C  2408  318A   	fcall	_EUSART_RxDataHandler
 15260  0A0D                     i1l655:
 15261  0A0D  0008               	return
 15262  0A0E                     __end_of_EUSART_DefaultErrorHandler:
 15263                           
 15264                           	psect	text65
 15265  0C08                     __ptext65:	
 15266 ;; *************** function _EUSART_RxDataHandler *****************
 15267 ;; Defined at:
 15268 ;;		line 228 in file "eusart.c"
 15269 ;; Parameters:    Size  Location     Type
 15270 ;;		None
 15271 ;; Auto vars:     Size  Location     Type
 15272 ;;		None
 15273 ;; Return value:  Size  Location     Type
 15274 ;;                  1    wreg      void 
 15275 ;; Registers used:
 15276 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15277 ;; Tracked objects:
 15278 ;;		On entry : 0/0
 15279 ;;		On exit  : 0/0
 15280 ;;		Unchanged: 0/0
 15281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15284 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15286 ;;Total ram usage:        1 bytes
 15287 ;; Hardware stack levels used: 1
 15288 ;; This function calls:
 15289 ;;		Nothing
 15290 ;; This function is called by:
 15291 ;;		_EUSART_Receive_ISR
 15292 ;;		_EUSART_DefaultErrorHandler
 15293 ;; This function uses a non-reentrant model
 15294 ;;
 15295                           
 15296  0C08                     _EUSART_RxDataHandler:	
 15297                           ;psect for function _EUSART_RxDataHandler
 15298                           
 15299  0C08                     i1l3707:	
 15300                           ;incstack = 0
 15301                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 15302                           
 15303                           
 15304                           ;eusart.c: 230:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 15305  0C08  0023               	movlb	3	; select bank3
 15306  0C09  0819               	movf	25,w	;volatile
 15307  0C0A  00F0               	movwf	??_EUSART_RxDataHandler
 15308  0C0B  087B               	movf	_eusartRxHead,w
 15309  0C0C  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 15310  0C0D  0086               	movwf	6
 15311  0C0E  3001               	movlw	1	; select bank2/3
 15312  0C0F  0087               	movwf	7
 15313  0C10  0870               	movf	??_EUSART_RxDataHandler,w
 15314  0C11  0081               	movwf	1
 15315  0C12                     i1l3709:
 15316  0C12  3001               	movlw	1
 15317  0C13  00F0               	movwf	??_EUSART_RxDataHandler
 15318  0C14  0870               	movf	??_EUSART_RxDataHandler,w
 15319  0C15  07FB               	addwf	_eusartRxHead,f	;volatile
 15320  0C16                     i1l3711:
 15321                           
 15322                           ;eusart.c: 231:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 15323  0C16  3008               	movlw	8
 15324  0C17  027B               	subwf	_eusartRxHead,w	;volatile
 15325  0C18  1C03               	skipc
 15326  0C19  2C1B               	goto	u125_21
 15327  0C1A  2C1C               	goto	u125_20
 15328  0C1B                     u125_21:
 15329  0C1B  2C1D               	goto	i1l3715
 15330  0C1C                     u125_20:
 15331  0C1C                     i1l3713:
 15332                           
 15333                           ;eusart.c: 232:     {;eusart.c: 233:         eusartRxHead = 0;
 15334  0C1C  01FB               	clrf	_eusartRxHead	;volatile
 15335  0C1D                     i1l3715:
 15336                           
 15337                           ;eusart.c: 235:     eusartRxCount++;
 15338  0C1D  3001               	movlw	1
 15339  0C1E  00F0               	movwf	??_EUSART_RxDataHandler
 15340  0C1F  0870               	movf	??_EUSART_RxDataHandler,w
 15341  0C20  0021               	movlb	1	; select bank1
 15342  0C21  07D1               	addwf	_eusartRxCount^(0+128),f	;volatile
 15343  0C22                     i1l646:
 15344  0C22  0008               	return
 15345  0C23                     __end_of_EUSART_RxDataHandler:
 15346                           
 15347                           	psect	text66
 15348  0A07                     __ptext66:	
 15349 ;; *************** function _CCP4_CompareISR *****************
 15350 ;; Defined at:
 15351 ;;		line 60 in file "ccp4.c"
 15352 ;; Parameters:    Size  Location     Type
 15353 ;;		None
 15354 ;; Auto vars:     Size  Location     Type
 15355 ;;		None
 15356 ;; Return value:  Size  Location     Type
 15357 ;;                  1    wreg      void 
 15358 ;; Registers used:
 15359 ;;		None
 15360 ;; Tracked objects:
 15361 ;;		On entry : 0/0
 15362 ;;		On exit  : 0/0
 15363 ;;		Unchanged: 0/0
 15364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15369 ;;Total ram usage:        0 bytes
 15370 ;; Hardware stack levels used: 1
 15371 ;; This function calls:
 15372 ;;		Nothing
 15373 ;; This function is called by:
 15374 ;;		_INTERRUPT_InterruptManager
 15375 ;; This function uses a non-reentrant model
 15376 ;;
 15377                           
 15378  0A07                     _CCP4_CompareISR:	
 15379                           ;psect for function _CCP4_CompareISR
 15380                           
 15381  0A07                     i1l4211:	
 15382                           ;incstack = 0
 15383                           ; Regs used in _CCP4_CompareISR: []
 15384                           
 15385                           
 15386                           ;ccp4.c: 63:     PIR4bits.CCP4IF = 0;
 15387  0A07  0020               	movlb	0	; select bank0
 15388  0A08  1194               	bcf	20,3	;volatile
 15389  0A09                     i1l904:
 15390  0A09  0008               	return
 15391  0A0A                     __end_of_CCP4_CompareISR:
 15392                           
 15393                           	psect	text67
 15394  0B94                     __ptext67:	
 15395 ;; *************** function _CCP3_CaptureISR *****************
 15396 ;; Defined at:
 15397 ;;		line 78 in file "ccp3.c"
 15398 ;; Parameters:    Size  Location     Type
 15399 ;;		None
 15400 ;; Auto vars:     Size  Location     Type
 15401 ;;  module          2    8[COMMON] struct CCPR3Reg_tag
 15402 ;; Return value:  Size  Location     Type
 15403 ;;                  1    wreg      void 
 15404 ;; Registers used:
 15405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15406 ;; Tracked objects:
 15407 ;;		On entry : 0/0
 15408 ;;		On exit  : 0/0
 15409 ;;		Unchanged: 0/0
 15410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15414 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15415 ;;Total ram usage:        3 bytes
 15416 ;; Hardware stack levels used: 1
 15417 ;; Hardware stack levels required when called: 2
 15418 ;; This function calls:
 15419 ;;		Absolute function
 15420 ;;		_CCP3_DefaultCallBack
 15421 ;; This function is called by:
 15422 ;;		_INTERRUPT_InterruptManager
 15423 ;; This function uses a non-reentrant model
 15424 ;;
 15425                           
 15426  0B94                     _CCP3_CaptureISR:	
 15427                           ;psect for function _CCP3_CaptureISR
 15428                           
 15429  0B94                     i1l4147:	
 15430                           ;incstack = 0
 15431                           ; Regs used in _CCP3_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15432                           
 15433                           
 15434                           ;ccp3.c: 80:     CCP3_PERIOD_REG_T module;;ccp3.c: 83:     PIR4bits.CCP3IF = 0;
 15435  0B94  0020               	movlb	0	; select bank0
 15436  0B95  1114               	bcf	20,2	;volatile
 15437  0B96                     i1l4149:
 15438                           
 15439                           ;ccp3.c: 86:     module.ccpr3l = CCPR3L;
 15440  0B96  0026               	movlb	6	; select bank6
 15441  0B97  0811               	movf	17,w	;volatile
 15442  0B98  00F7               	movwf	??_CCP3_CaptureISR
 15443  0B99  0877               	movf	??_CCP3_CaptureISR,w
 15444  0B9A  00F8               	movwf	CCP3_CaptureISR@module
 15445                           
 15446                           ;ccp3.c: 87:     module.ccpr3h = CCPR3H;
 15447  0B9B  0812               	movf	18,w	;volatile
 15448  0B9C  00F7               	movwf	??_CCP3_CaptureISR
 15449  0B9D  0877               	movf	??_CCP3_CaptureISR,w
 15450  0B9E  00F9               	movwf	CCP3_CaptureISR@module+1
 15451  0B9F                     i1l4151:
 15452                           
 15453                           ;ccp3.c: 90:     CCP3_CallBack(module.ccpr3_16Bit);
 15454  0B9F  0879               	movf	CCP3_CaptureISR@module+1,w
 15455  0BA0  00F4               	movwf	CCP3_DefaultCallBack@capturedValue+1
 15456  0BA1  0878               	movf	CCP3_CaptureISR@module,w
 15457  0BA2  00F3               	movwf	CCP3_DefaultCallBack@capturedValue
 15458  0BA3  0021               	movlb	1	; select bank1
 15459  0BA4  0841               	movf	(_CCP3_CallBack+1)^(0+128),w
 15460  0BA5  008A               	movwf	10
 15461  0BA6  0840               	movf	_CCP3_CallBack^(0+128),w
 15462  0BA7  000A               	callw
 15463  0BA8  318B               	pagesel	$
 15464  0BA9                     i1l478:
 15465  0BA9  0008               	return
 15466  0BAA                     __end_of_CCP3_CaptureISR:
 15467                           
 15468                           	psect	text68
 15469  0DDC                     __ptext68:	
 15470 ;; *************** function _CCP3_DefaultCallBack *****************
 15471 ;; Defined at:
 15472 ;;		line 29 in file "ccp3.c"
 15473 ;; Parameters:    Size  Location     Type
 15474 ;;  capturedValu    2    3[COMMON] unsigned short 
 15475 ;; Auto vars:     Size  Location     Type
 15476 ;;		None
 15477 ;; Return value:  Size  Location     Type
 15478 ;;                  1    wreg      void 
 15479 ;; Registers used:
 15480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15481 ;; Tracked objects:
 15482 ;;		On entry : 0/0
 15483 ;;		On exit  : 0/0
 15484 ;;		Unchanged: 0/0
 15485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15488 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15489 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15490 ;;Total ram usage:        4 bytes
 15491 ;; Hardware stack levels used: 1
 15492 ;; Hardware stack levels required when called: 1
 15493 ;; This function calls:
 15494 ;;		_JSN_GetLastTrig
 15495 ;;		_ReadPin
 15496 ;; This function is called by:
 15497 ;;		_CCP3_Initialize
 15498 ;;		_CCP3_CaptureISR
 15499 ;; This function uses a non-reentrant model
 15500 ;;
 15501                           
 15502  0DDC                     _CCP3_DefaultCallBack:	
 15503                           ;psect for function _CCP3_DefaultCallBack
 15504                           
 15505  0DDC                     i1l3971:	
 15506                           ;incstack = 0
 15507                           ; Regs used in _CCP3_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15508                           
 15509                           
 15510                           ;ccp3.c: 29: static void CCP3_DefaultCallBack(uint16_t capturedValue);ccp3.c: 30: {;ccp3
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 15511  0DDC  318A  2204  318D   	fcall	_JSN_GetLastTrig
 15512  0DDF  00F5               	movwf	??_CCP3_DefaultCallBack
 15513  0DE0  0875               	movf	??_CCP3_DefaultCallBack,w
 15514  0DE1  0021               	movlb	1	; select bank1
 15515  0DE2  00D4               	movwf	_lastTrig@ccp3$F992^(0+128)
 15516                           
 15517                           ;ccp3.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 15518  0DE3  2DFE               	goto	i1l3981
 15519  0DE4                     i1l3973:
 15520                           
 15521                           ;ccp3.c: 35:             ticksUp = capturedValue;
 15522  0DE4  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 15523  0DE5  0021               	movlb	1	; select bank1
 15524  0DE6  00BF               	movwf	(_ticksUp@ccp3$F989+1)^(0+128)
 15525  0DE7  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 15526  0DE8  00BE               	movwf	_ticksUp@ccp3$F989^(0+128)
 15527                           
 15528                           ;ccp3.c: 36:             break;
 15529  0DE9  2E16               	goto	i1l472
 15530  0DEA                     i1l3975:
 15531                           
 15532                           ;ccp3.c: 39:             ticksDown = capturedValue;
 15533  0DEA  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 15534  0DEB  0021               	movlb	1	; select bank1
 15535  0DEC  00BD               	movwf	(_ticksDown@ccp3$F990+1)^(0+128)
 15536  0DED  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 15537  0DEE  00BC               	movwf	_ticksDown@ccp3$F990^(0+128)
 15538  0DEF                     i1l3977:
 15539                           
 15540                           ;ccp3.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 15541  0DEF  083E               	movf	_ticksUp@ccp3$F989^(0+128),w
 15542  0DF0  023C               	subwf	_ticksDown@ccp3$F990^(0+128),w
 15543  0DF1  00F5               	movwf	??_CCP3_DefaultCallBack
 15544  0DF2  083F               	movf	(_ticksUp@ccp3$F989+1)^(0+128),w
 15545  0DF3  3B3D               	subwfb	(_ticksDown@ccp3$F990+1)^(0+128),w
 15546  0DF4  00F6               	movwf	??_CCP3_DefaultCallBack+1
 15547  0DF5  0854               	movf	_lastTrig@ccp3$F992^(0+128),w
 15548  0DF6  0086               	movwf	6
 15549  0DF7  3001               	movlw	1	; select bank2/3
 15550  0DF8  0087               	movwf	7
 15551  0DF9  0875               	movf	??_CCP3_DefaultCallBack,w
 15552  0DFA  3FC0               	movwi [0]fsr1
 15553  0DFB  0876               	movf	??_CCP3_DefaultCallBack+1,w
 15554  0DFC  3FC1               	movwi [1]fsr1
 15555                           
 15556                           ;ccp3.c: 43:             break;
 15557  0DFD  2E16               	goto	i1l472
 15558  0DFE                     i1l3981:
 15559  0DFE  0854               	movf	_lastTrig@ccp3$F992^(0+128),w
 15560  0DFF  3E05               	addlw	5
 15561  0E00  0086               	movwf	6
 15562  0E01  3001               	movlw	1	; select bank2/3
 15563  0E02  0087               	movwf	7
 15564  0E03  0801               	movf	1,w
 15565  0E04  3185  25B2  318D   	fcall	_ReadPin
 15566  0E07  00F5               	movwf	??_CCP3_DefaultCallBack
 15567  0E08  01F6               	clrf	??_CCP3_DefaultCallBack+1
 15568                           
 15569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15570                           ; Switch size 1, requested type "simple"
 15571                           ; Number of cases is 1, Range of values is 0 to 0
 15572                           ; switch strategies available:
 15573                           ; Name         Instructions Cycles
 15574                           ; simple_byte            4     3 (average)
 15575                           ; direct_byte            8     6 (fixed)
 15576                           ; jumptable            260     6 (fixed)
 15577                           ;	Chosen strategy is simple_byte
 15578  0E09  0876               	movf	??_CCP3_DefaultCallBack+1,w
 15579  0E0A  3A00               	xorlw	0	; case 0
 15580  0E0B  1903               	skipnz
 15581  0E0C  2E0E               	goto	i1l4675
 15582  0E0D  2E16               	goto	i1l472
 15583  0E0E                     i1l4675:
 15584                           
 15585                           ; Switch size 1, requested type "simple"
 15586                           ; Number of cases is 2, Range of values is 0 to 1
 15587                           ; switch strategies available:
 15588                           ; Name         Instructions Cycles
 15589                           ; simple_byte            7     4 (average)
 15590                           ; direct_byte           10     6 (fixed)
 15591                           ; jumptable            260     6 (fixed)
 15592                           ;	Chosen strategy is simple_byte
 15593  0E0E  0875               	movf	??_CCP3_DefaultCallBack,w
 15594  0E0F  3A00               	xorlw	0	; case 0
 15595  0E10  1903               	skipnz
 15596  0E11  2DEA               	goto	i1l3975
 15597  0E12  3A01               	xorlw	1	; case 1
 15598  0E13  1903               	skipnz
 15599  0E14  2DE4               	goto	i1l3973
 15600  0E15  2E16               	goto	i1l472
 15601  0E16                     i1l472:
 15602  0E16  0008               	return
 15603  0E17                     __end_of_CCP3_DefaultCallBack:
 15604                           
 15605                           	psect	text69
 15606  0B7E                     __ptext69:	
 15607 ;; *************** function _CCP2_CaptureISR *****************
 15608 ;; Defined at:
 15609 ;;		line 78 in file "ccp2.c"
 15610 ;; Parameters:    Size  Location     Type
 15611 ;;		None
 15612 ;; Auto vars:     Size  Location     Type
 15613 ;;  module          2    8[COMMON] struct CCPR2Reg_tag
 15614 ;; Return value:  Size  Location     Type
 15615 ;;                  1    wreg      void 
 15616 ;; Registers used:
 15617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15618 ;; Tracked objects:
 15619 ;;		On entry : 0/0
 15620 ;;		On exit  : 0/0
 15621 ;;		Unchanged: 0/0
 15622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15624 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15626 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15627 ;;Total ram usage:        3 bytes
 15628 ;; Hardware stack levels used: 1
 15629 ;; Hardware stack levels required when called: 2
 15630 ;; This function calls:
 15631 ;;		Absolute function
 15632 ;;		_CCP2_DefaultCallBack
 15633 ;; This function is called by:
 15634 ;;		_INTERRUPT_InterruptManager
 15635 ;; This function uses a non-reentrant model
 15636 ;;
 15637                           
 15638  0B7E                     _CCP2_CaptureISR:	
 15639                           ;psect for function _CCP2_CaptureISR
 15640                           
 15641  0B7E                     i1l4141:	
 15642                           ;incstack = 0
 15643                           ; Regs used in _CCP2_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15644                           
 15645                           
 15646                           ;ccp2.c: 80:     CCP2_PERIOD_REG_T module;;ccp2.c: 83:     PIR4bits.CCP2IF = 0;
 15647  0B7E  0020               	movlb	0	; select bank0
 15648  0B7F  1094               	bcf	20,1	;volatile
 15649  0B80                     i1l4143:
 15650                           
 15651                           ;ccp2.c: 86:     module.ccpr2l = CCPR2L;
 15652  0B80  0025               	movlb	5	; select bank5
 15653  0B81  0815               	movf	21,w	;volatile
 15654  0B82  00F7               	movwf	??_CCP2_CaptureISR
 15655  0B83  0877               	movf	??_CCP2_CaptureISR,w
 15656  0B84  00F8               	movwf	CCP2_CaptureISR@module
 15657                           
 15658                           ;ccp2.c: 87:     module.ccpr2h = CCPR2H;
 15659  0B85  0816               	movf	22,w	;volatile
 15660  0B86  00F7               	movwf	??_CCP2_CaptureISR
 15661  0B87  0877               	movf	??_CCP2_CaptureISR,w
 15662  0B88  00F9               	movwf	CCP2_CaptureISR@module+1
 15663  0B89                     i1l4145:
 15664                           
 15665                           ;ccp2.c: 90:     CCP2_CallBack(module.ccpr2_16Bit);
 15666  0B89  0879               	movf	CCP2_CaptureISR@module+1,w
 15667  0B8A  00F4               	movwf	CCP2_DefaultCallBack@capturedValue+1
 15668  0B8B  0878               	movf	CCP2_CaptureISR@module,w
 15669  0B8C  00F3               	movwf	CCP2_DefaultCallBack@capturedValue
 15670  0B8D  0021               	movlb	1	; select bank1
 15671  0B8E  0847               	movf	(_CCP2_CallBack+1)^(0+128),w
 15672  0B8F  008A               	movwf	10
 15673  0B90  0846               	movf	_CCP2_CallBack^(0+128),w
 15674  0B91  000A               	callw
 15675  0B92  318B               	pagesel	$
 15676  0B93                     i1l432:
 15677  0B93  0008               	return
 15678  0B94                     __end_of_CCP2_CaptureISR:
 15679                           
 15680                           	psect	text70
 15681  0DA1                     __ptext70:	
 15682 ;; *************** function _CCP2_DefaultCallBack *****************
 15683 ;; Defined at:
 15684 ;;		line 29 in file "ccp2.c"
 15685 ;; Parameters:    Size  Location     Type
 15686 ;;  capturedValu    2    3[COMMON] unsigned short 
 15687 ;; Auto vars:     Size  Location     Type
 15688 ;;		None
 15689 ;; Return value:  Size  Location     Type
 15690 ;;                  1    wreg      void 
 15691 ;; Registers used:
 15692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15693 ;; Tracked objects:
 15694 ;;		On entry : 0/0
 15695 ;;		On exit  : 0/0
 15696 ;;		Unchanged: 0/0
 15697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15698 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15700 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15701 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15702 ;;Total ram usage:        4 bytes
 15703 ;; Hardware stack levels used: 1
 15704 ;; Hardware stack levels required when called: 1
 15705 ;; This function calls:
 15706 ;;		_JSN_GetLastTrig
 15707 ;;		_ReadPin
 15708 ;; This function is called by:
 15709 ;;		_CCP2_Initialize
 15710 ;;		_CCP2_CaptureISR
 15711 ;; This function uses a non-reentrant model
 15712 ;;
 15713                           
 15714  0DA1                     _CCP2_DefaultCallBack:	
 15715                           ;psect for function _CCP2_DefaultCallBack
 15716                           
 15717  0DA1                     i1l3955:	
 15718                           ;incstack = 0
 15719                           ; Regs used in _CCP2_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15720                           
 15721                           
 15722                           ;ccp2.c: 29: static void CCP2_DefaultCallBack(uint16_t capturedValue);ccp2.c: 30: {;ccp2
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 15723  0DA1  318A  2204  318D   	fcall	_JSN_GetLastTrig
 15724  0DA4  00F5               	movwf	??_CCP2_DefaultCallBack
 15725  0DA5  0875               	movf	??_CCP2_DefaultCallBack,w
 15726  0DA6  0021               	movlb	1	; select bank1
 15727  0DA7  00D6               	movwf	_lastTrig@ccp2$F871^(0+128)
 15728                           
 15729                           ;ccp2.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 15730  0DA8  2DC3               	goto	i1l3965
 15731  0DA9                     i1l3957:
 15732                           
 15733                           ;ccp2.c: 35:             ticksUp = capturedValue;
 15734  0DA9  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 15735  0DAA  0021               	movlb	1	; select bank1
 15736  0DAB  00C5               	movwf	(_ticksUp@ccp2$F868+1)^(0+128)
 15737  0DAC  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 15738  0DAD  00C4               	movwf	_ticksUp@ccp2$F868^(0+128)
 15739                           
 15740                           ;ccp2.c: 36:             break;
 15741  0DAE  2DDB               	goto	i1l426
 15742  0DAF                     i1l3959:
 15743                           
 15744                           ;ccp2.c: 39:             ticksDown = capturedValue;
 15745  0DAF  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 15746  0DB0  0021               	movlb	1	; select bank1
 15747  0DB1  00C3               	movwf	(_ticksDown@ccp2$F869+1)^(0+128)
 15748  0DB2  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 15749  0DB3  00C2               	movwf	_ticksDown@ccp2$F869^(0+128)
 15750  0DB4                     i1l3961:
 15751                           
 15752                           ;ccp2.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 15753  0DB4  0844               	movf	_ticksUp@ccp2$F868^(0+128),w
 15754  0DB5  0242               	subwf	_ticksDown@ccp2$F869^(0+128),w
 15755  0DB6  00F5               	movwf	??_CCP2_DefaultCallBack
 15756  0DB7  0845               	movf	(_ticksUp@ccp2$F868+1)^(0+128),w
 15757  0DB8  3B43               	subwfb	(_ticksDown@ccp2$F869+1)^(0+128),w
 15758  0DB9  00F6               	movwf	??_CCP2_DefaultCallBack+1
 15759  0DBA  0856               	movf	_lastTrig@ccp2$F871^(0+128),w
 15760  0DBB  0086               	movwf	6
 15761  0DBC  3001               	movlw	1	; select bank2/3
 15762  0DBD  0087               	movwf	7
 15763  0DBE  0875               	movf	??_CCP2_DefaultCallBack,w
 15764  0DBF  3FC0               	movwi [0]fsr1
 15765  0DC0  0876               	movf	??_CCP2_DefaultCallBack+1,w
 15766  0DC1  3FC1               	movwi [1]fsr1
 15767                           
 15768                           ;ccp2.c: 43:             break;
 15769  0DC2  2DDB               	goto	i1l426
 15770  0DC3                     i1l3965:
 15771  0DC3  0856               	movf	_lastTrig@ccp2$F871^(0+128),w
 15772  0DC4  3E05               	addlw	5
 15773  0DC5  0086               	movwf	6
 15774  0DC6  3001               	movlw	1	; select bank2/3
 15775  0DC7  0087               	movwf	7
 15776  0DC8  0801               	movf	1,w
 15777  0DC9  3185  25B2  318D   	fcall	_ReadPin
 15778  0DCC  00F5               	movwf	??_CCP2_DefaultCallBack
 15779  0DCD  01F6               	clrf	??_CCP2_DefaultCallBack+1
 15780                           
 15781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15782                           ; Switch size 1, requested type "simple"
 15783                           ; Number of cases is 1, Range of values is 0 to 0
 15784                           ; switch strategies available:
 15785                           ; Name         Instructions Cycles
 15786                           ; simple_byte            4     3 (average)
 15787                           ; direct_byte            8     6 (fixed)
 15788                           ; jumptable            260     6 (fixed)
 15789                           ;	Chosen strategy is simple_byte
 15790  0DCE  0876               	movf	??_CCP2_DefaultCallBack+1,w
 15791  0DCF  3A00               	xorlw	0	; case 0
 15792  0DD0  1903               	skipnz
 15793  0DD1  2DD3               	goto	i1l4677
 15794  0DD2  2DDB               	goto	i1l426
 15795  0DD3                     i1l4677:
 15796                           
 15797                           ; Switch size 1, requested type "simple"
 15798                           ; Number of cases is 2, Range of values is 0 to 1
 15799                           ; switch strategies available:
 15800                           ; Name         Instructions Cycles
 15801                           ; simple_byte            7     4 (average)
 15802                           ; direct_byte           10     6 (fixed)
 15803                           ; jumptable            260     6 (fixed)
 15804                           ;	Chosen strategy is simple_byte
 15805  0DD3  0875               	movf	??_CCP2_DefaultCallBack,w
 15806  0DD4  3A00               	xorlw	0	; case 0
 15807  0DD5  1903               	skipnz
 15808  0DD6  2DAF               	goto	i1l3959
 15809  0DD7  3A01               	xorlw	1	; case 1
 15810  0DD8  1903               	skipnz
 15811  0DD9  2DA9               	goto	i1l3957
 15812  0DDA  2DDB               	goto	i1l426
 15813  0DDB                     i1l426:
 15814  0DDB  0008               	return
 15815  0DDC                     __end_of_CCP2_DefaultCallBack:
 15816                           
 15817                           	psect	text71
 15818  0B68                     __ptext71:	
 15819 ;; *************** function _CCP1_CaptureISR *****************
 15820 ;; Defined at:
 15821 ;;		line 78 in file "ccp1.c"
 15822 ;; Parameters:    Size  Location     Type
 15823 ;;		None
 15824 ;; Auto vars:     Size  Location     Type
 15825 ;;  module          2    8[COMMON] struct CCPR1Reg_tag
 15826 ;; Return value:  Size  Location     Type
 15827 ;;                  1    wreg      void 
 15828 ;; Registers used:
 15829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15830 ;; Tracked objects:
 15831 ;;		On entry : 0/0
 15832 ;;		On exit  : 0/0
 15833 ;;		Unchanged: 0/0
 15834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15837 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15838 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15839 ;;Total ram usage:        3 bytes
 15840 ;; Hardware stack levels used: 1
 15841 ;; Hardware stack levels required when called: 2
 15842 ;; This function calls:
 15843 ;;		Absolute function
 15844 ;;		_CCP1_DefaultCallBack
 15845 ;; This function is called by:
 15846 ;;		_INTERRUPT_InterruptManager
 15847 ;; This function uses a non-reentrant model
 15848 ;;
 15849                           
 15850  0B68                     _CCP1_CaptureISR:	
 15851                           ;psect for function _CCP1_CaptureISR
 15852                           
 15853  0B68                     i1l4135:	
 15854                           ;incstack = 0
 15855                           ; Regs used in _CCP1_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15856                           
 15857                           
 15858                           ;ccp1.c: 80:     CCP1_PERIOD_REG_T module;;ccp1.c: 83:     PIR4bits.CCP1IF = 0;
 15859  0B68  0020               	movlb	0	; select bank0
 15860  0B69  1014               	bcf	20,0	;volatile
 15861  0B6A                     i1l4137:
 15862                           
 15863                           ;ccp1.c: 86:     module.ccpr1l = CCPR1L;
 15864  0B6A  0025               	movlb	5	; select bank5
 15865  0B6B  0811               	movf	17,w	;volatile
 15866  0B6C  00F7               	movwf	??_CCP1_CaptureISR
 15867  0B6D  0877               	movf	??_CCP1_CaptureISR,w
 15868  0B6E  00F8               	movwf	CCP1_CaptureISR@module
 15869                           
 15870                           ;ccp1.c: 87:     module.ccpr1h = CCPR1H;
 15871  0B6F  0812               	movf	18,w	;volatile
 15872  0B70  00F7               	movwf	??_CCP1_CaptureISR
 15873  0B71  0877               	movf	??_CCP1_CaptureISR,w
 15874  0B72  00F9               	movwf	CCP1_CaptureISR@module+1
 15875  0B73                     i1l4139:
 15876                           
 15877                           ;ccp1.c: 90:     CCP1_CallBack(module.ccpr1_16Bit);
 15878  0B73  0879               	movf	CCP1_CaptureISR@module+1,w
 15879  0B74  00F4               	movwf	CCP1_DefaultCallBack@capturedValue+1
 15880  0B75  0878               	movf	CCP1_CaptureISR@module,w
 15881  0B76  00F3               	movwf	CCP1_DefaultCallBack@capturedValue
 15882  0B77  0021               	movlb	1	; select bank1
 15883  0B78  084D               	movf	(_CCP1_CallBack+1)^(0+128),w
 15884  0B79  008A               	movwf	10
 15885  0B7A  084C               	movf	_CCP1_CallBack^(0+128),w
 15886  0B7B  000A               	callw
 15887  0B7C  318B               	pagesel	$
 15888  0B7D                     i1l386:
 15889  0B7D  0008               	return
 15890  0B7E                     __end_of_CCP1_CaptureISR:
 15891                           
 15892                           	psect	text72
 15893  0D66                     __ptext72:	
 15894 ;; *************** function _CCP1_DefaultCallBack *****************
 15895 ;; Defined at:
 15896 ;;		line 29 in file "ccp1.c"
 15897 ;; Parameters:    Size  Location     Type
 15898 ;;  capturedValu    2    3[COMMON] unsigned short 
 15899 ;; Auto vars:     Size  Location     Type
 15900 ;;		None
 15901 ;; Return value:  Size  Location     Type
 15902 ;;                  1    wreg      void 
 15903 ;; Registers used:
 15904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15905 ;; Tracked objects:
 15906 ;;		On entry : 0/0
 15907 ;;		On exit  : 0/0
 15908 ;;		Unchanged: 0/0
 15909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15913 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15914 ;;Total ram usage:        4 bytes
 15915 ;; Hardware stack levels used: 1
 15916 ;; Hardware stack levels required when called: 1
 15917 ;; This function calls:
 15918 ;;		_JSN_GetLastTrig
 15919 ;;		_ReadPin
 15920 ;; This function is called by:
 15921 ;;		_CCP1_Initialize
 15922 ;;		_CCP1_CaptureISR
 15923 ;; This function uses a non-reentrant model
 15924 ;;
 15925                           
 15926  0D66                     _CCP1_DefaultCallBack:	
 15927                           ;psect for function _CCP1_DefaultCallBack
 15928                           
 15929  0D66                     i1l3939:	
 15930                           ;incstack = 0
 15931                           ; Regs used in _CCP1_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15932                           
 15933                           
 15934                           ;ccp1.c: 29: static void CCP1_DefaultCallBack(uint16_t capturedValue);ccp1.c: 30: {;ccp1
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 15935  0D66  318A  2204  318D   	fcall	_JSN_GetLastTrig
 15936  0D69  00F5               	movwf	??_CCP1_DefaultCallBack
 15937  0D6A  0875               	movf	??_CCP1_DefaultCallBack,w
 15938  0D6B  0021               	movlb	1	; select bank1
 15939  0D6C  00D8               	movwf	_lastTrig@ccp1$F729^(0+128)
 15940                           
 15941                           ;ccp1.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 15942  0D6D  2D88               	goto	i1l3949
 15943  0D6E                     i1l3941:
 15944                           
 15945                           ;ccp1.c: 35:             ticksUp = capturedValue;
 15946  0D6E  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 15947  0D6F  0021               	movlb	1	; select bank1
 15948  0D70  00CB               	movwf	(_ticksUp+1)^(0+128)
 15949  0D71  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 15950  0D72  00CA               	movwf	_ticksUp^(0+128)
 15951                           
 15952                           ;ccp1.c: 36:             break;
 15953  0D73  2DA0               	goto	i1l380
 15954  0D74                     i1l3943:
 15955                           
 15956                           ;ccp1.c: 39:             ticksDown = capturedValue;
 15957  0D74  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 15958  0D75  0021               	movlb	1	; select bank1
 15959  0D76  00C9               	movwf	(_ticksDown+1)^(0+128)
 15960  0D77  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 15961  0D78  00C8               	movwf	_ticksDown^(0+128)
 15962  0D79                     i1l3945:
 15963                           
 15964                           ;ccp1.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 15965  0D79  084A               	movf	_ticksUp^(0+128),w
 15966  0D7A  0248               	subwf	_ticksDown^(0+128),w
 15967  0D7B  00F5               	movwf	??_CCP1_DefaultCallBack
 15968  0D7C  084B               	movf	(_ticksUp+1)^(0+128),w
 15969  0D7D  3B49               	subwfb	(_ticksDown+1)^(0+128),w
 15970  0D7E  00F6               	movwf	??_CCP1_DefaultCallBack+1
 15971  0D7F  0858               	movf	_lastTrig@ccp1$F729^(0+128),w
 15972  0D80  0086               	movwf	6
 15973  0D81  3001               	movlw	1	; select bank2/3
 15974  0D82  0087               	movwf	7
 15975  0D83  0875               	movf	??_CCP1_DefaultCallBack,w
 15976  0D84  3FC0               	movwi [0]fsr1
 15977  0D85  0876               	movf	??_CCP1_DefaultCallBack+1,w
 15978  0D86  3FC1               	movwi [1]fsr1
 15979                           
 15980                           ;ccp1.c: 43:             break;
 15981  0D87  2DA0               	goto	i1l380
 15982  0D88                     i1l3949:
 15983  0D88  0858               	movf	_lastTrig@ccp1$F729^(0+128),w
 15984  0D89  3E05               	addlw	5
 15985  0D8A  0086               	movwf	6
 15986  0D8B  3001               	movlw	1	; select bank2/3
 15987  0D8C  0087               	movwf	7
 15988  0D8D  0801               	movf	1,w
 15989  0D8E  3185  25B2  318D   	fcall	_ReadPin
 15990  0D91  00F5               	movwf	??_CCP1_DefaultCallBack
 15991  0D92  01F6               	clrf	??_CCP1_DefaultCallBack+1
 15992                           
 15993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15994                           ; Switch size 1, requested type "simple"
 15995                           ; Number of cases is 1, Range of values is 0 to 0
 15996                           ; switch strategies available:
 15997                           ; Name         Instructions Cycles
 15998                           ; simple_byte            4     3 (average)
 15999                           ; direct_byte            8     6 (fixed)
 16000                           ; jumptable            260     6 (fixed)
 16001                           ;	Chosen strategy is simple_byte
 16002  0D93  0876               	movf	??_CCP1_DefaultCallBack+1,w
 16003  0D94  3A00               	xorlw	0	; case 0
 16004  0D95  1903               	skipnz
 16005  0D96  2D98               	goto	i1l4679
 16006  0D97  2DA0               	goto	i1l380
 16007  0D98                     i1l4679:
 16008                           
 16009                           ; Switch size 1, requested type "simple"
 16010                           ; Number of cases is 2, Range of values is 0 to 1
 16011                           ; switch strategies available:
 16012                           ; Name         Instructions Cycles
 16013                           ; simple_byte            7     4 (average)
 16014                           ; direct_byte           10     6 (fixed)
 16015                           ; jumptable            260     6 (fixed)
 16016                           ;	Chosen strategy is simple_byte
 16017  0D98  0875               	movf	??_CCP1_DefaultCallBack,w
 16018  0D99  3A00               	xorlw	0	; case 0
 16019  0D9A  1903               	skipnz
 16020  0D9B  2D74               	goto	i1l3943
 16021  0D9C  3A01               	xorlw	1	; case 1
 16022  0D9D  1903               	skipnz
 16023  0D9E  2D6E               	goto	i1l3941
 16024  0D9F  2DA0               	goto	i1l380
 16025  0DA0                     i1l380:
 16026  0DA0  0008               	return
 16027  0DA1                     __end_of_CCP1_DefaultCallBack:
 16028                           
 16029                           	psect	text73
 16030  05B2                     __ptext73:	
 16031 ;; *************** function _ReadPin *****************
 16032 ;; Defined at:
 16033 ;;		line 103 in file "PIC16Xpress_DevBoard.c"
 16034 ;; Parameters:    Size  Location     Type
 16035 ;;  pin             1    wreg     enum E7144
 16036 ;; Auto vars:     Size  Location     Type
 16037 ;;  pin             1    2[COMMON] enum E7144
 16038 ;; Return value:  Size  Location     Type
 16039 ;;                  1    wreg      unsigned char 
 16040 ;; Registers used:
 16041 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 16042 ;; Tracked objects:
 16043 ;;		On entry : 0/0
 16044 ;;		On exit  : 0/0
 16045 ;;		Unchanged: 0/0
 16046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16048 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16049 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16050 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16051 ;;Total ram usage:        3 bytes
 16052 ;; Hardware stack levels used: 1
 16053 ;; This function calls:
 16054 ;;		Nothing
 16055 ;; This function is called by:
 16056 ;;		_CCP1_DefaultCallBack
 16057 ;;		_CCP2_DefaultCallBack
 16058 ;;		_CCP3_DefaultCallBack
 16059 ;; This function uses a non-reentrant model
 16060 ;;
 16061                           
 16062  05B2                     _ReadPin:	
 16063                           ;psect for function _ReadPin
 16064                           
 16065                           
 16066                           ;incstack = 0
 16067                           ; Regs used in _ReadPin: [wreg-fsr0h+status,2+status,0]
 16068                           ;ReadPin@pin stored from wreg
 16069  05B2  00F2               	movwf	ReadPin@pin
 16070  05B3                     i1l3409:
 16071                           
 16072                           ;PIC16Xpress_DevBoard.c: 104:     switch(pin) {
 16073  05B3  2E08               	goto	i1l3489
 16074  05B4                     i1l3411:
 16075                           
 16076                           ;PIC16Xpress_DevBoard.c: 106:             return PORTAbits.RA5;
 16077  05B4  0020               	movlb	0	; select bank0
 16078  05B5  0E0C               	swapf	12,w	;volatile
 16079  05B6  0C89               	rrf	9,f
 16080  05B7  3901               	andlw	1
 16081  05B8  2E48               	goto	i1l169
 16082  05B9                     i1l3415:
 16083                           
 16084                           ;PIC16Xpress_DevBoard.c: 108:             return PORTAbits.RA4;
 16085  05B9  0020               	movlb	0	; select bank0
 16086  05BA  0E0C               	swapf	12,w	;volatile
 16087  05BB  3901               	andlw	1
 16088  05BC  2E48               	goto	i1l169
 16089  05BD                     i1l3419:
 16090                           
 16091                           ;PIC16Xpress_DevBoard.c: 110:             return 0xFF;
 16092  05BD  30FF               	movlw	255
 16093  05BE  2E48               	goto	i1l169
 16094  05BF                     i1l3423:
 16095                           
 16096                           ;PIC16Xpress_DevBoard.c: 112:             return PORTCbits.RC5;
 16097  05BF  0020               	movlb	0	; select bank0
 16098  05C0  0E0E               	swapf	14,w	;volatile
 16099  05C1  0C89               	rrf	9,f
 16100  05C2  3901               	andlw	1
 16101  05C3  2E48               	goto	i1l169
 16102  05C4                     i1l3427:
 16103                           
 16104                           ;PIC16Xpress_DevBoard.c: 114:             return PORTCbits.RC4;
 16105  05C4  0020               	movlb	0	; select bank0
 16106  05C5  0E0E               	swapf	14,w	;volatile
 16107  05C6  3901               	andlw	1
 16108  05C7  2E48               	goto	i1l169
 16109  05C8                     i1l3431:
 16110                           
 16111                           ;PIC16Xpress_DevBoard.c: 116:             return PORTCbits.RC3;
 16112  05C8  0020               	movlb	0	; select bank0
 16113  05C9  0C0E               	rrf	14,w	;volatile
 16114  05CA  00F0               	movwf	??_ReadPin
 16115  05CB  0CF0               	rrf	??_ReadPin,f
 16116  05CC  0C70               	rrf	??_ReadPin,w
 16117  05CD  3901               	andlw	1
 16118  05CE  2E48               	goto	i1l169
 16119  05CF                     i1l3435:
 16120                           
 16121                           ;PIC16Xpress_DevBoard.c: 118:             return PORTCbits.RC6;
 16122  05CF  0020               	movlb	0	; select bank0
 16123  05D0  0E0E               	swapf	14,w	;volatile
 16124  05D1  0C89               	rrf	9,f
 16125  05D2  0C89               	rrf	9,f
 16126  05D3  3901               	andlw	1
 16127  05D4  2E48               	goto	i1l169
 16128  05D5                     i1l3439:
 16129                           
 16130                           ;PIC16Xpress_DevBoard.c: 120:             return PORTCbits.RC7;
 16131  05D5  0020               	movlb	0	; select bank0
 16132  05D6  0D0E               	rlf	14,w	;volatile
 16133  05D7  0D0E               	rlf	14,w	;volatile
 16134  05D8  3901               	andlw	1
 16135  05D9  2E48               	goto	i1l169
 16136  05DA                     i1l3443:
 16137                           
 16138                           ;PIC16Xpress_DevBoard.c: 122:             return PORTBbits.RB7;
 16139  05DA  0020               	movlb	0	; select bank0
 16140  05DB  0D0D               	rlf	13,w	;volatile
 16141  05DC  0D0D               	rlf	13,w	;volatile
 16142  05DD  3901               	andlw	1
 16143  05DE  2E48               	goto	i1l169
 16144  05DF                     i1l3447:
 16145                           
 16146                           ;PIC16Xpress_DevBoard.c: 124:             return PORTAbits.RA0;
 16147  05DF  0020               	movlb	0	; select bank0
 16148  05E0  080C               	movf	12,w	;volatile
 16149  05E1  3901               	andlw	1
 16150  05E2  2E48               	goto	i1l169
 16151  05E3                     i1l3451:
 16152                           
 16153                           ;PIC16Xpress_DevBoard.c: 126:             return PORTAbits.RA1;
 16154  05E3  0020               	movlb	0	; select bank0
 16155  05E4  0C0C               	rrf	12,w	;volatile
 16156  05E5  3901               	andlw	1
 16157  05E6  2E48               	goto	i1l169
 16158  05E7                     i1l3455:
 16159                           
 16160                           ;PIC16Xpress_DevBoard.c: 128:             return PORTAbits.RA2;
 16161  05E7  0020               	movlb	0	; select bank0
 16162  05E8  0C0C               	rrf	12,w	;volatile
 16163  05E9  0C89               	rrf	9,f
 16164  05EA  3901               	andlw	1
 16165  05EB  2E48               	goto	i1l169
 16166  05EC                     i1l3459:
 16167                           
 16168                           ;PIC16Xpress_DevBoard.c: 130:             return PORTCbits.RC0;
 16169  05EC  0020               	movlb	0	; select bank0
 16170  05ED  080E               	movf	14,w	;volatile
 16171  05EE  3901               	andlw	1
 16172  05EF  2E48               	goto	i1l169
 16173  05F0                     i1l3463:
 16174                           
 16175                           ;PIC16Xpress_DevBoard.c: 132:             return PORTCbits.RC1;
 16176  05F0  0020               	movlb	0	; select bank0
 16177  05F1  0C0E               	rrf	14,w	;volatile
 16178  05F2  3901               	andlw	1
 16179  05F3  2E48               	goto	i1l169
 16180  05F4                     i1l3467:
 16181                           
 16182                           ;PIC16Xpress_DevBoard.c: 134:             return PORTCbits.RC2;
 16183  05F4  0020               	movlb	0	; select bank0
 16184  05F5  0C0E               	rrf	14,w	;volatile
 16185  05F6  0C89               	rrf	9,f
 16186  05F7  3901               	andlw	1
 16187  05F8  2E48               	goto	i1l169
 16188  05F9                     i1l3471:
 16189                           
 16190                           ;PIC16Xpress_DevBoard.c: 136:             return PORTBbits.RB4;
 16191  05F9  0020               	movlb	0	; select bank0
 16192  05FA  0E0D               	swapf	13,w	;volatile
 16193  05FB  3901               	andlw	1
 16194  05FC  2E48               	goto	i1l169
 16195  05FD                     i1l3475:
 16196                           
 16197                           ;PIC16Xpress_DevBoard.c: 138:             return PORTBbits.RB5;
 16198  05FD  0020               	movlb	0	; select bank0
 16199  05FE  0E0D               	swapf	13,w	;volatile
 16200  05FF  0C89               	rrf	9,f
 16201  0600  3901               	andlw	1
 16202  0601  2E48               	goto	i1l169
 16203  0602                     i1l3479:
 16204                           
 16205                           ;PIC16Xpress_DevBoard.c: 140:             return PORTBbits.RB6;
 16206  0602  0020               	movlb	0	; select bank0
 16207  0603  0E0D               	swapf	13,w	;volatile
 16208  0604  0C89               	rrf	9,f
 16209  0605  0C89               	rrf	9,f
 16210  0606  3901               	andlw	1
 16211  0607  2E48               	goto	i1l169
 16212  0608                     i1l3489:
 16213  0608  0872               	movf	ReadPin@pin,w
 16214  0609  00F0               	movwf	??_ReadPin
 16215  060A  01F1               	clrf	??_ReadPin+1
 16216                           
 16217                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16218                           ; Switch size 1, requested type "simple"
 16219                           ; Number of cases is 1, Range of values is 0 to 0
 16220                           ; switch strategies available:
 16221                           ; Name         Instructions Cycles
 16222                           ; simple_byte            4     3 (average)
 16223                           ; direct_byte            8     6 (fixed)
 16224                           ; jumptable            260     6 (fixed)
 16225                           ;	Chosen strategy is simple_byte
 16226  060B  0871               	movf	??_ReadPin+1,w
 16227  060C  3A00               	xorlw	0	; case 0
 16228  060D  1903               	skipnz
 16229  060E  2E10               	goto	i1l4681
 16230  060F  2DBD               	goto	i1l3419
 16231  0610                     i1l4681:
 16232                           
 16233                           ; Switch size 1, requested type "simple"
 16234                           ; Number of cases is 18, Range of values is 0 to 17
 16235                           ; switch strategies available:
 16236                           ; Name         Instructions Cycles
 16237                           ; direct_byte           42     6 (fixed)
 16238                           ; simple_byte           55    28 (average)
 16239                           ; jumptable            260     6 (fixed)
 16240                           ;	Chosen strategy is simple_byte
 16241  0610  0870               	movf	??_ReadPin,w
 16242  0611  3A00               	xorlw	0	; case 0
 16243  0612  1903               	skipnz
 16244  0613  2DB4               	goto	i1l3411
 16245  0614  3A01               	xorlw	1	; case 1
 16246  0615  1903               	skipnz
 16247  0616  2DB9               	goto	i1l3415
 16248  0617  3A03               	xorlw	3	; case 2
 16249  0618  1903               	skipnz
 16250  0619  2DBD               	goto	i1l3419
 16251  061A  3A01               	xorlw	1	; case 3
 16252  061B  1903               	skipnz
 16253  061C  2DBF               	goto	i1l3423
 16254  061D  3A07               	xorlw	7	; case 4
 16255  061E  1903               	skipnz
 16256  061F  2DC4               	goto	i1l3427
 16257  0620  3A01               	xorlw	1	; case 5
 16258  0621  1903               	skipnz
 16259  0622  2DC8               	goto	i1l3431
 16260  0623  3A03               	xorlw	3	; case 6
 16261  0624  1903               	skipnz
 16262  0625  2DCF               	goto	i1l3435
 16263  0626  3A01               	xorlw	1	; case 7
 16264  0627  1903               	skipnz
 16265  0628  2DD5               	goto	i1l3439
 16266  0629  3A0F               	xorlw	15	; case 8
 16267  062A  1903               	skipnz
 16268  062B  2DDA               	goto	i1l3443
 16269  062C  3A01               	xorlw	1	; case 9
 16270  062D  1903               	skipnz
 16271  062E  2DDF               	goto	i1l3447
 16272  062F  3A03               	xorlw	3	; case 10
 16273  0630  1903               	skipnz
 16274  0631  2DE3               	goto	i1l3451
 16275  0632  3A01               	xorlw	1	; case 11
 16276  0633  1903               	skipnz
 16277  0634  2DE7               	goto	i1l3455
 16278  0635  3A07               	xorlw	7	; case 12
 16279  0636  1903               	skipnz
 16280  0637  2DEC               	goto	i1l3459
 16281  0638  3A01               	xorlw	1	; case 13
 16282  0639  1903               	skipnz
 16283  063A  2DF0               	goto	i1l3463
 16284  063B  3A03               	xorlw	3	; case 14
 16285  063C  1903               	skipnz
 16286  063D  2DF4               	goto	i1l3467
 16287  063E  3A01               	xorlw	1	; case 15
 16288  063F  1903               	skipnz
 16289  0640  2DF9               	goto	i1l3471
 16290  0641  3A1F               	xorlw	31	; case 16
 16291  0642  1903               	skipnz
 16292  0643  2DFD               	goto	i1l3475
 16293  0644  3A01               	xorlw	1	; case 17
 16294  0645  1903               	skipnz
 16295  0646  2E02               	goto	i1l3479
 16296  0647  2DBD               	goto	i1l3419
 16297  0648                     i1l169:
 16298  0648  0008               	return
 16299  0649                     __end_of_ReadPin:
 16300                           
 16301                           	psect	text74
 16302  0A04                     __ptext74:	
 16303 ;; *************** function _JSN_GetLastTrig *****************
 16304 ;; Defined at:
 16305 ;;		line 118 in file "JSN_Sensor.c"
 16306 ;; Parameters:    Size  Location     Type
 16307 ;;		None
 16308 ;; Auto vars:     Size  Location     Type
 16309 ;;		None
 16310 ;; Return value:  Size  Location     Type
 16311 ;;                  1    wreg      PTR struct .
 16312 ;; Registers used:
 16313 ;;		wreg
 16314 ;; Tracked objects:
 16315 ;;		On entry : 0/0
 16316 ;;		On exit  : 0/0
 16317 ;;		Unchanged: 0/0
 16318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16323 ;;Total ram usage:        0 bytes
 16324 ;; Hardware stack levels used: 1
 16325 ;; This function calls:
 16326 ;;		Nothing
 16327 ;; This function is called by:
 16328 ;;		_CCP1_DefaultCallBack
 16329 ;;		_CCP2_DefaultCallBack
 16330 ;;		_CCP3_DefaultCallBack
 16331 ;; This function uses a non-reentrant model
 16332 ;;
 16333                           
 16334  0A04                     _JSN_GetLastTrig:	
 16335                           ;psect for function _JSN_GetLastTrig
 16336                           
 16337  0A04                     i1l3405:	
 16338                           ;incstack = 0
 16339                           ; Regs used in _JSN_GetLastTrig: [wreg]
 16340                           
 16341                           
 16342                           ;JSN_Sensor.c: 119:     return lastTrig;
 16343  0A04  0021               	movlb	1	; select bank1
 16344  0A05  085A               	movf	_lastTrig^(0+128),w
 16345  0A06                     i1l60:
 16346  0A06  0008               	return
 16347  0A07                     __end_of_JSN_GetLastTrig:
 16348  007E                     btemp	set	126	;btemp
 16349  007E                     int$flags	set	126
 16350  007E                     wtemp0	set	126
 16351                           
 16352                           	psect	idloc
 16353                           
 16354                           ;Config register IDLOC0 @ 0x8000
 16355                           ;	unspecified, using default values
 16356  8000                     	org	32768
 16357  8000  3FFF               	dw	16383
 16358                           
 16359                           ;Config register IDLOC1 @ 0x8001
 16360                           ;	unspecified, using default values
 16361  8001                     	org	32769
 16362  8001  3FFF               	dw	16383
 16363                           
 16364                           ;Config register IDLOC2 @ 0x8002
 16365                           ;	unspecified, using default values
 16366  8002                     	org	32770
 16367  8002  3FFF               	dw	16383
 16368                           
 16369                           ;Config register IDLOC3 @ 0x8003
 16370                           ;	unspecified, using default values
 16371  8003                     	org	32771
 16372  8003  3FFF               	dw	16383
 16373                           
 16374                           	psect	config
 16375                           
 16376                           ;Config register CONFIG1 @ 0x8007
 16377                           ;	FEXTOSC External Oscillator mode Selection bits
 16378                           ;	FEXTOSC = OFF, Oscillator not enabled
 16379                           ;	Power-up default value for COSC bits
 16380                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 16381                           ;	Clock Out Enable bit
 16382                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 16383                           ;	Clock Switch Enable bit
 16384                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16385                           ;	Fail-Safe Clock Monitor Enable
 16386                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 16387  8007                     	org	32775
 16388  8007  3F8C               	dw	16268
 16389                           
 16390                           ;Config register CONFIG2 @ 0x8008
 16391                           ;	Master Clear Enable bit
 16392                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 16393                           ;	Power-up Timer Enable bit
 16394                           ;	PWRTE = OFF, PWRT disabled
 16395                           ;	Watchdog Timer Enable bits
 16396                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 16397                           ;	Low-power BOR enable bit
 16398                           ;	LPBOREN = OFF, ULPBOR disabled
 16399                           ;	Brown-out Reset Enable bits
 16400                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 16401                           ;	Brown-out Reset Voltage selection bit
 16402                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 16403                           ;	PPSLOCK bit One-Way Set Enable bit
 16404                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 16405                           ;	Stack Overflow/Underflow Reset Enable bit
 16406                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 16407                           ;	Debugger enable bit
 16408                           ;	DEBUG = OFF, Background debugger disabled
 16409  8008                     	org	32776
 16410  8008  3FF3               	dw	16371
 16411                           
 16412                           ;Config register CONFIG3 @ 0x8009
 16413                           ;	User NVM self-write protection bits
 16414                           ;	WRT = OFF, Write protection off
 16415                           ;	Low Voltage Programming Enable bit
 16416                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 16417  8009                     	org	32777
 16418  8009  3FFF               	dw	16383
 16419                           
 16420                           ;Config register CONFIG4 @ 0x800A
 16421                           ;	User NVM Program Memory Code Protection bit
 16422                           ;	CP = OFF, User NVM code protection disabled
 16423                           ;	Data NVM Memory Code Protection bit
 16424                           ;	CPD = OFF, Data NVM code protection disabled
 16425  800A                     	org	32778
 16426  800A  3FFF               	dw	16383

Data Sizes:
    Strings     111
    Constant    0
    Data        0
    BSS         151
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     80      80
    BANK1            80     20      79
    BANK2            80      0      56
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sameSens@ccp3$F991	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sameSens@ccp2$F870	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sameSens	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2377$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    S2377$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[58]), 
		 -> STR_1(CODE[50]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 58
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[58]), 
		 -> STR_1(CODE[50]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[58]), 
		 -> STR_1(CODE[50]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP3_DefaultCallBack(), 

    lastTrig@ccp3$F992	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK2[6]), Sens2(BANK2[6]), Sens3(BANK2[6]), 

    CCP2_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP2_DefaultCallBack(), 

    CCP2_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP2_DefaultCallBack(), 

    lastTrig@ccp2$F871	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK2[6]), Sens2(BANK2[6]), Sens3(BANK2[6]), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP1_DefaultCallBack(), 

    lastTrig@ccp1$F729	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK2[6]), Sens2(BANK2[6]), Sens3(BANK2[6]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    sp__JSN_GetLastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK2[6]), Sens2(BANK2[6]), Sens3(BANK2[6]), 

    JSN_Sensor_GetDistance@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK2[6]), Sens2(BANK2[6]), Sens3(BANK2[6]), 

    JSN_Sensor_Trig@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK2[6]), Sens2(BANK2[6]), Sens3(BANK2[6]), 

    lastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK2[6]), Sens2(BANK2[6]), Sens3(BANK2[6]), 

    JSN_Sensor_Init@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK2[6]), Sens2(BANK2[6]), Sens3(BANK2[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _INTERRUPT_InterruptManager->_CCP2_CaptureISR
    _INTERRUPT_InterruptManager->_CCP3_CaptureISR
    _TMR3_Reload->_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _CCP3_CaptureISR->_CCP3_DefaultCallBack
    _CCP3_DefaultCallBack->_ReadPin
    _CCP2_CaptureISR->_CCP2_DefaultCallBack
    _CCP2_DefaultCallBack->_ReadPin
    _CCP1_CaptureISR->_CCP1_DefaultCallBack
    _CCP1_DefaultCallBack->_ReadPin

Critical Paths under _main in BANK0

    _main->_printf
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _CCP3_Initialize->_CCP3_SetCallBack
    _CCP2_Initialize->_CCP2_SetCallBack
    _CCP1_Initialize->_CCP1_SetCallBack
    _JSN_Sensor_Trig->_FRT_GetMicros
    _FRT_GetMicros->___wmul
    _JSN_Sensor_Init->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _JSN_Sensor_GetDistance->___lldiv
    ___lldiv->___lmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_JSN_Sensor_Init
    _JSN_Sensor_Init->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   19040
                                              7 BANK1     13    13      0
                      _FRT_GetMillis
             _JSN_Sensor_GetDistance
                    _JSN_Sensor_Init
                    _JSN_Sensor_Trig
                         _PIC16_Init
                             _SetPin
                           _WritePin
                             _printf
 ---------------------------------------------------------------------------------
 (1) _PIC16_Init                                           0     0      0     882
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     882
                    _CCP1_Initialize
                    _CCP2_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Initialize                                    1     1      0     490
                                              2 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP3_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP2_Initialize                                      0     0      0      98
                   _CCP2_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP2_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP1_Initialize                                      0     0      0      98
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP1_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Trig                                      5     5      0    1393
                                             24 BANK0      5     5      0
                      _FRT_GetMicros
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _FRT_GetMicros                                       18    14      4     267
                                              6 BANK0     18    14      4
                _TMR0_GetCallBackNum
                     _TMR0_ReadTimer
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
                _TMR0_GetCallBackNum (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR0_ReadTimer                                       2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _TMR0_GetCallBackNum                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Init                                      5     3      2    8131
                                              2 BANK1      5     3      2
                             _SetPin
                           _WritePin
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5684
                                             76 BANK0      4     0      4
                                              0 BANK1      2     2      0
             _JSN_Sensor_GetDistance (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5250
                                             68 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    4923
                                             52 BANK0     16    14      2
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                24    16      8    3578
                                             28 BANK0     24    16      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2554
                                             19 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                             11 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     834
                                              3 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      66
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             18     2     16     311
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             26    10     16     314
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _WritePin                                             4     3      1     928
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetPin                                               4     3      1     700
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_GetDistance                               5     3      2    1179
                                             26 BANK0      5     3      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     396
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _FRT_GetMillis                                        4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0     902
                   Absolute function *
                    _CCP1_CaptureISR
                    _CCP2_CaptureISR
                    _CCP3_CaptureISR
                    _CCP4_CompareISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR3_ISR                                            0     0      0     164
                        _TMR3_Reload
 ---------------------------------------------------------------------------------
 (13) _TMR3_Reload                                         0     0      0     164
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR3_WriteTimer                                     2     0      2     164
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            1     1      0       0
                                              0 COMMON     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR0_CallBack                                       0     0      0       0
                      _FRT_IncMicros
                      _FRT_IncMillis
 ---------------------------------------------------------------------------------
 (14) _FRT_IncMillis                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _FRT_IncMicros                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _CCP4_CompareISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CCP3_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP3_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (12) _CCP2_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP2_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP2_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (12) _CCP1_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP1_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP1_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (14) _ReadPin                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (14) _JSN_GetLastTrig                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FRT_GetMillis
   _JSN_Sensor_GetDistance
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _JSN_Sensor_Init
     _SetPin
     _WritePin
     _printf
       _JSN_Sensor_GetDistance (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _fputc
             _putch
               _EUSART_Write
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
   _JSN_Sensor_Trig
     _FRT_GetMicros
       _TMR0_GetCallBackNum
       _TMR0_ReadTimer
       ___wmul
         _TMR0_GetCallBackNum (ARG)
     _WritePin
   _PIC16_Init
     _SYSTEM_Initialize
       _CCP1_Initialize
         _CCP1_SetCallBack
       _CCP2_Initialize
         _CCP2_SetCallBack
       _CCP3_Initialize
         _CCP3_SetCallBack
       _CCP4_Initialize
       _EUSART_Initialize
         _EUSART_SetErrorHandler
         _EUSART_SetFramingErrorHandler
         _EUSART_SetOverrunErrorHandler
         _EUSART_SetRxInterruptHandler
         _EUSART_SetTxInterruptHandler
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _PWM5_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR1_Initialize
       _TMR2_Initialize
       _TMR3_Initialize
       _WDT_Initialize
   _SetPin
   _WritePin
   _printf

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _CCP1_CaptureISR *
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP2_CaptureISR *
     Absolute function(Fake) *
     _CCP2_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP3_CaptureISR *
     Absolute function(Fake) *
     _CCP3_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP4_CompareISR *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     _TMR0_CallBack
       _FRT_IncMicros
       _FRT_IncMillis
   _TMR1_ISR *
     _TMR1_WriteTimer
   _TMR3_ISR *
     _TMR3_Reload
       _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     14      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      38       9       70.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     105      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     105      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Feb 17 13:03:53 2022

                              _CCP4_Initialize 0B1F                  ?_EUSART_SetRxInterruptHandler 0020  
                       ??_CCP3_DefaultCallBack 0075                                             l32 05B1  
                                           l28 0517                                             l37 0540  
                                           l54 07F1                                             l57 0ED1  
                                           l73 00DB                                             l74 00DB  
                                           l68 00C8                                             l69 00C8  
                                           l78 00EE                                             l79 00EE  
                          ___wmul@multiplicand 0022                        __end_of_CCP1_Initialize 0BD8  
                                          l140 0B52                                            l312 0BBF  
                                          l145 0513                                            l321 0A36  
                                          l500 0B40                                            l343 0003  
                                          l272 0AC9                                            l193 0458  
                                          l281 0AB6                                            l337 0A98  
                                          l435 0A59                                            l275 0ACD  
                                          l620 0CE5                                            l429 0BEF  
                                          l269 0CD3                                            l278 0A15  
                                          l623 0D00                                            l383 0BD7  
                                          l481 0A62                                            l802 0B1E  
                                          l619 0CDC                                            l475 0C07  
                                          l629 0A2F                                            l805 0FA6  
                                          l389 0A50                                            l661 0A7D  
                                          l670 0A86                                            l664 0A6B  
                                          l658 0A74                                            l667 0A8F  
                                          l595 0F5A                                            l919 07FF  
                                          l935 0A3E                                            l788 0E51  
                                          l895 0B2F                                            l975 0ADA  
                                          _PR2 001E                                            u920 0CDC  
                                          u921 0CDB                                            u930 0CE0  
                                          u931 0CDF                                            u940 0CFA  
                                          u941 0CF9                                            u950 0ED8  
                                          u951 0ED7                                            u960 0EDD  
                                          u961 0EDC                                            u970 0EEC  
                                          u971 0EEB                                            u980 0F0A  
                                          u981 0F09                                            u990 0CA8  
                                          u991 0CA7                                            u985 0F06  
                              _timer1ReloadVal 00BA                         ??_EUSART_RxDataHandler 0070  
                                          _pad 0FA7                 ?_EUSART_SetFramingErrorHandler 0020  
                              _TMR2_Initialize 0A37                                            wreg 0009  
                                         l1153 0C49                                           l1403 073D  
                                         l1155 0C5D                   JSN_Sensor_GetDistance@Sensor 003E  
                                         l1167 0D65                                           l3201 0CD6  
                                         l4011 0D3F                                           l3211 0CFA  
                                         l3203 0CE0                                _timer3ReloadVal 00A8  
                                         l1189 0798                                           l4021 073E  
                                         l4013 0D47                                           l3213 0CFB  
                                         l3205 0CE6                                           l3221 0ED8  
                                         l3301 0FD2                                           l4101 07BA  
                                         l4031 0768                                           l4023 074F  
                                         l4015 0D4E                                           l4007 0D32  
                                         l4111 0EC8                                           l3207 0CF0  
                                         l3215 0CFE                                           l3223 0EDD  
                                         l3303 0FD7                                           l3311 01F3  
                                         l4103 07E0                                           l1616 0B67  
                                         l4033 077A                                           l4025 0752  
                                         l4041 0790                                           l4017 0D5D  
                                         l4009 0D3B                                           l1393 06CC  
                                         l3209 0CF4                                           l3217 0A2B  
                                         l3225 0EE2                                           l3233 0C82  
                                         l3241 0C25                                           l3305 0FEA  
                                         l1641 0FC3                                           l3321 0233  
                                         l3313 0206                                           l4105 07EB  
                                         l4121 0B51                                           l1386 06BC  
                                         l4123 0B0E                                           l4035 0782  
                                         l4027 075D                                           l3251 0649  
                                         l3227 0EEC                                           l3219 0ED2  
                                         l3235 0C85                                           l3243 0C2A  
                                         l3323 0238                                           l3331 0294  
                                         l3315 020C                                           l4051 0528  
                                         l4115 0B41                                           l1396 072D  
                                         l1644 0FE5                                           l4037 0783  
                                         l4029 0761                                           l4109 0E91  
                                         l3261 066F                                           l3253 0654  
                                         l3229 0F0A                                           l3237 0C93  
                                         l3245 0C2E                                           l1645 0FF3  
                                         l1661 02DA                                           l3333 029B  
                                         l3341 02C7                                           l3325 025F  
                                         l3317 021C                                           l1653 0214  
                                         l3309 01EE                                           l4061 054F  
                                         l4045 0516                                           l3501 0AB3  
                                         l4117 0B4D                                           l4221 00B6  
                                         l1646 0FFF                                           l4039 078A  
                                         l3271 06AE                                           l3263 0673  
                                         l3255 0660                                           l3239 0C98  
                                         l3247 0C37                                           l3335 02A7  
                                         l3327 0263                                           l3319 0230  
                                         l4071 058A                                           l4047 0517  
                                         l3351 0A5A                                           l3511 0E20  
                                         l3503 0AB4                                           l4119 0B50  
                                         l4231 0108                                           l4223 00C9  
                                         l3265 067B                                           l3257 0663  
                                         l3281 06E9                                           l3273 06CD  
                                         l3337 02B4                                           l3329 0267  
                                         l1649 01F7                                           l1673 0D31  
                                         l4081 05B0                                           l4073 0593  
                                         l4049 0520                                           l4057 052A  
                                         l3361 0A63                                           l3353 0A7E  
                                         l3521 0E34                                           l3513 0E22  
                                         l3505 0E17                                           l3345 0A90  
                                         l3601 0BB3                                           l4241 012D  
                                         l4233 010A                                           l4225 00DC  
                                         l4217 00B2                                           l1666 039D  
                                         l3267 069D                                           l3259 066B  
                                         l3283 06ED                                           l3275 06DA  
                                         l3291 0FAE                                           l3339 02C2  
                                         l3371 02FF                                           l3363 02DD  
                                         l4075 059A                                           l4059 0540  
                                         l3347 0A48                                           l3611 0BDC  
                                         l3355 0A87                                           l3531 0E3F  
                                         l3523 0E36                                           l3515 0E25  
                                         l3507 0E1B                                           l3603 0BBB  
                                         l4251 017A                                           l4243 0136  
                                         l4235 0110                                           l4227 00EF  
                                         l4219 00B5                                           l3269 06AD  
                                         l3285 070F                                           l3277 06DD  
                                         l1685 0F14                                           l1693 0CA8  
                                         l3293 0FB7                                           l3373 0311  
                                         l3381 0345                                           l3365 02EE  
                                         l4077 05A3                                           l4069 0558  
                                         l3349 0A51                                           l3621 0BED  
                                         l3613 0BDD                                           l3357 0A6C  
                                         l3541 0E4C                                           l3533 0E42  
                                         l3525 0E38                                           l3517 0E27  
                                         l3509 0E1E                                           l3605 0BBE  
                                         l4253 0180                                           l4261 01B4  
                                         l4245 0149                                           l4237 0116  
                                         l4229 00FF                                           l3287 071F  
                                         l3279 06E5                                           l3199 0CD6  
                                         l3295 0FBC                                           l3383 0356  
                                         l3391 036F                                           l3375 0319  
                                         l3367 02F6                                           l4079 05AC  
                                         l3703 0002                                           l3615 0BDE  
                                         l3607 0BD8                                           l3623 0B1F  
                                         l3359 0A75                                           l3543 0E4F  
                                         l3535 0E45                                           l3527 0E3B  
                                         l3519 0E31                                           l3631 0ACE  
                                         l3551 0A12                                           l4255 0195  
                                         l4263 01C8                                           l4239 011A  
                                         l3297 0FC1                                           l3289 0FA9  
                                         l3393 0377                                           l3385 035E  
                                         l3377 032B                                           l3369 02FB  
                                         l4097 079B                                           l3617 0BE6  
                                         l3609 0BDB                                           l3561 0BF6  
                                         l3553 0BF0                                           l3625 0B26  
                                         l3545 0AC2                                           l3537 0E48  
                                         l3529 0E3D                                           l3641 07F6  
                                         l3633 0AD2                                           l4265 01D2  
                                         l4257 019B                                           l4249 0165  
                                         l3811 04B7                                           l3803 04A9  
                                         l1699 0C3D                                           l3299 0FC6  
                                         l3387 0369                                           l3731 0C3E  
                                         l4099 07AE                                           l3571 0BC3  
                                         l3619 0BEB                                           l3563 0BFE  
                                         l3555 0BF3                                           l3627 0B2B  
                                         l3547 0AC6                                           l3539 0E4A  
                                         l3643 07F7                                           l3651 0B34  
                                         l3635 0AD7                                           l4267 01DB  
                                         l4259 01B0                                           l3901 0403  
                                         l3397 037A                                           l3741 0C59  
                                         l3733 0C41                                           l3581 0BD3  
                                         l3573 0BC4                                           l3565 0C03  
                                         l3557 0BF4                                           l3629 0B2D  
                                         l3661 0F17                                           l3549 0AC8  
                                         l3645 07FB                                           l3637 07F2  
                                         l3653 0B35                                           l4269 01E3  
                                         ?_pad 0033                                           l3823 04CC  
                                         l3815 04BE                                           l3807 04B0  
                                         l3399 0393                                           l3751 0D1F  
                                         l3735 0C45                                           l3583 0BD5  
                                         l3575 0BC5                                           l3567 0C05  
                                         l3559 0BF5                                           l3671 0F30  
                                         l3663 0F1F                                           l3495 0AAD  
                                         l3647 07FD                                           l3639 07F5  
                                         l3655 0B3C                                           l3591 0A3C  
                                         l3905 040A                                           l3753 0D29  
                                         l3745 0D03                                           l3737 0C4E  
                                         l3577 0BC6                                           l3569 0BC0  
                                         l3681 0F4C                                           l3673 0F32  
                                         l3665 0F29                                           l3497 0AB0  
                                         l3593 0BAA                                           l3657 0B3D  
                                         l3649 0B30                                           l3585 0A37  
                                         l3819 04C5                                           l3771 0471  
                                         l3763 0463                                           l3915 0418  
                                         l3843 03A0                                           l3747 0D07  
                                         l3691 0A30                                           l3739 0C53  
                                         l3923 0F5B                                           l3579 0BCE  
                                         l3683 0F4E                                           l3675 0F34  
                                         l3667 0F2C                                           l3659 0F15  
                                         l3499 0AB2                                           l3595 0BAF  
                                         l3587 0A3A                                           l3931 0CCA  
                                         l3829 04D3                                           l3757 045B  
                                         l3909 0411                                           l3861 03BD  
                                         l3853 03AF                                           l3845 03A1  
                                         l3749 0D0B                                           l3837 0B53  
                                         l3685 0F4F                                           l3677 0F3C  
                                         l3669 0F2E                                           l3597 0BB0  
                                         l3589 0A3B                                           l3933 0CCD  
                                         l3791 0494                                           l3783 0486  
                                         l3775 0478                                           l3767 046A  
                                         l3759 045C                                           l4671 0420  
                                         l3839 0B58                                           l3687 0F50  
                                         l3679 0F44                                           l3599 0BB1  
                                         l3935 0CD0                                           l3927 0CA9  
                                         l4663 00F4                                           l4673 04DB  
                                         l3881 03E0                                           l3873 03D2  
                                         l3865 03C4                                           l3857 03B6  
                                         l3849 03A8                                           l3689 0F59  
                                         l3929 0CC7                                           l4665 01BD  
                                         l3795 049B                                           l3787 048D  
                                         l3779 047F                                           l4667 0532  
                                         l3893 03F5                                           l3885 03E7  
                                         l3877 03D9                                           l3869 03CB  
                                         l4669 0561                                           l3799 04A2  
                                         l3897 03FC                                           l3889 03EE  
                                         STR_1 103A                                           STR_2 1000  
                                         STR_3 106C                                           STR_4 106C  
                                         STR_5 106C                                           u1000 0C37  
                                         u1001 0C36                                           u1010 0651  
                                         u1020 0660                                           u1100 0FAE  
                                         u1021 065F                                           u1101 0FAD  
                                         u1030 0673                                           u1110 0FBC  
                                         u1031 0672                                           u1111 0FBB  
                                         u1040 069D                                           u1120 0FE5  
                                         u1200 02C7                                           u1041 069C  
                                         u1121 0FE4                                           u1201 02C6  
                                         u1050 06BC                                           u1130 0FEA  
                                         u1210 02EE                                           u1051 06BB  
                                         u1131 0FE9                                           u1211 02ED  
                                         u1060 06DA                                           u1140 01F3  
                                         u1220 0311                                           u1300 0C59  
                                         u1045 0699                                           u1061 06D9  
                                         u1125 0FE1                                           u1141 01F2  
                                         u1221 0310                                           u1301 0C58  
                                         u1070 06ED                                           u1150 0206  
                                         u1230 0356                                           u1310 0D29  
                                         u1071 06EC                                           u1151 0205  
                                         u1231 0355                                           u1311 0D28  
                                         u1080 070F                                           u1160 029B  
                                         u1240 0ACD                                           u1081 070E  
                                         u1161 029A                                           u1241 0ACC  
                                         u1410 077A                                           u1330 0D3F  
                                         u1090 072D                                           u1170 02A7  
                                         u1411 0779                                           u1331 0D3E  
                                         u1091 072C                                           u1171 02A6  
                                         u1155 0202                                           u1180 02B4  
                                         u1405 0762                                           u1085 070B  
                                         u1181 02B3                                           _LATA 010C  
                                         u1430 0790                                           u1190 02C2  
                                         u1270 0C45                                           _LATB 010D  
                                         u1431 078F                                           u1415 0776  
                                         u1191 02C1                                           u1271 0C44  
                                         _LATC 010E                                           u1360 0D5D  
                                         u1440 07E0                                           u1425 0784  
                                         u1361 0D5C                                           u1345 0D48  
                                         u1185 02B0                                           u1441 07DF  
                                         u1370 074F                                           u1530 00C8  
                                         u1371 074E                                           u1355 0D4F  
                                         u1195 02BE                                           u1531 00C7  
                                         u1540 00DB                                           u1285 0C4A  
                                         u1541 00DA                                           u1390 0761  
                                         u1550 00EE                                           u1391 0760  
                                         u1295 0C4F                                           u1551 00ED  
                                         u1560 0164                                           u1385 0753  
                                         u1561 0163                                           u1570 01D2  
                                         u1571 01D1                                           u1580 01DB  
                                         u1581 01DA                                           _PIE0 0090  
                                         _PIE1 0091                                           _PIE2 0092  
                                         _PIE3 0093                                           _PIE4 0094  
                                         _PMD0 0911                                           _PMD1 0912  
                                         _PMD2 0913                                           _PMD3 0914  
                                         _PMD4 0915                                           _PMD5 0916  
                                         i1l60 0A06                                           _PIR0 0010  
                                         _PIR1 0011                                           _PIR2 0012  
                                         _PIR3 0013                                           _PIR4 0014  
                                         _PLLR 48E0                                           _TMR2 001D  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                           _dbuf 01A0  
                      __end_of_CCP2_Initialize 0BF0                                           _main 00B2  
                                         _prec 00A4                                           _nout 00A0  
                                         pad@i 0037                                           pad@p 0034  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 0039                                           btemp 007E  
                                         _utoa 01EC                                     ReadPin@pin 0072  
                                         start 0090                                _TMR3_Initialize 0ACE  
                              _PWM5_Initialize 07F2                       __end_of_CCP1_SetCallBack 0A51  
                        ??_TMR0_GetCallBackNum 0020                               ?_CCP1_CaptureISR 0070  
                              __end_of_ReadPin 0649                        __end_of_CCP4_CompareISR 0A0A  
                                        ??_pad 0036                        __end_of_TMR0_Initialize 0BC0  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0ACE  
                      __end_of_CCP3_Initialize 0C08                                          ?_main 0070  
                              __end_of___lldiv 0799                                          ?_utoa 003C  
                              __end_of___lodiv 06CD                                          _T1CON 001B  
                                        _T2CON 001F                                          _T3CON 0413  
                              __end_of___lomod 073E                                          i1l331 0AEB  
                                        i1l334 0A28                                          i1l432 0B93  
                                        i1l520 0AC1                                          i1l169 0648  
                                        i1l426 0DDB                                          i1l514 0AFC  
                                        i1l380 0DA0                                          i1l711 0014  
                                        i1l472 0E16                                          i1l632 0C7E  
                                        i1l720 0050                                          i1l386 0B7D  
                                        i1l642 0E8E                                          i1l722 005E  
                                        i1l714 0026                                          i1l635 0C7F  
                                        i1l811 0AA2                                          i1l723 008E  
                                        i1l652 0A11                                          i1l724 006C  
                                        i1l716 0034                                          i1l478 0BA9  
                                        i1l646 0C22                                          i1l726 007D  
                                        i1l718 0042                                          i1l655 0A0D  
                                        i1l904 0A09                                          i1l808 0AAC  
                                        i1l649 0A03                                          i1l729 008E  
                                        i1l992 0A47                                          i1l989 0B0D  
                                        _OSCEN 091D                                   vfpfcnvrt@fmt 0054  
                                        _TMR0H 0016                                   vfpfcnvrt@llu 005B  
                                        _TMR1H 001A                                          _TMR0L 0015  
                                        _TMR3H 0412                                          _TMR1L 0019  
                                        _TMR3L 0411                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _RXPPS 0E24                            ___lmul@multiplicand 0024  
                    ?_TMR0_SetInterruptHandler 0020                                          _Sens1 0152  
                                        _Sens2 014C                                          _Sens3 0146  
                             __end_of_TMR0_ISR 0AEC                               __end_of_TMR1_ISR 0AC2  
                             __end_of_TMR3_ISR 0A1C                                   main@nextSens 00EA  
                             ?_CCP2_CaptureISR 0070                                          _flags 00A6  
                               _WDT_Initialize 0A12                                          _fputc 0ED2  
                                        _fputs 0C80                                          pad@fp 003B  
                                        _width 00A2                                          _putch 0A29  
                      __end_of_TMR1_Initialize 0B41                                          pclath 000A  
                                        utoa@d 003C                                          utoa@i 0052  
                                        utoa@n 004A                                          utoa@p 0045  
                                        utoa@w 0048                                          status 0003  
                      __end_of_CCP4_Initialize 0B30                                          wtemp0 007E  
                             ___lodiv@dividend 0028                                _TMR1_WriteTimer 0AEC  
                     __end_of_CCP2_SetCallBack 0A5A                                __initialization 0092  
                             ?_CCP3_CaptureISR 0070                                   __end_of_main 01EC  
                                 __end_of_utoa 02DB                                 ??_EUSART_Write 0020  
                      __end_of_TMR2_Initialize 0A3F                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0022                                         ??_main 00E2  
                             ?_CCP1_Initialize 0070                                         ??_utoa 0044  
                             ___lodiv@quotient 0031                         __end_of_WDT_Initialize 0A16  
                              _JSN_GetLastTrig 0A04      __end_of_EUSART_DefaultFramingErrorHandler 0A04  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0A03                     _EUSART_OverrunErrorHandler 00B2  
                                       ?_fputc 0023                                         ?_fputs 002B  
                                       _CCPR1H 0292                                         _CCPR2H 0296  
                                       _CCPR3H 0312                                         _CCPR1L 0291  
                                       _CCPR4H 0316                                         _CCPR2L 0295  
                                       _CCPR3L 0311                                         _CCPR4L 0315  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _T0CON0 0017                                         _T0CON1 0018  
                                       _T1GCON 001C                                         _T3GCON 0414  
                                       _RC1REG 0199                               __end_of_WritePin 0459  
                                       _RC1PPS 0EA1                                         _RC1STA 019D  
                                       i1l1001 0A1B                        TMR1_WriteTimer@timerVal 0070  
                                       _RC4PPS 0EA4                                         _RB6PPS 0E9E  
                                       i1l4001 0A0E                                         _ODCONA 028C  
                                       _ODCONB 028D                                         i1l4003 0A0A  
                                       _ODCONC 028E                                         i1l4005 0A3F  
                                       i1l4201 0E6E                                         i1l3411 05B4  
                                       i1l4211 0A07                                         i1l4203 0E74  
                                       i1l4131 0AE7                                         i1l3405 0A04  
                                       i1l4141 0B7E                                         i1l4205 0E7A  
                                       i1l4133 0AEA                                         i1l4213 0A16  
                                       i1l4301 0022                                         i1l3431 05C8  
                                       i1l3423 05BF                                         i1l3415 05B9  
                                       i1l4135 0B68                                         i1l4143 0B80  
                                       i1l4151 0B9F                                         i1l4207 0E84  
                                       i1l4127 0ADB                                         i1l4215 0A18  
                                       i1l4311 0047                                         i1l4303 002B  
                                       i1l3409 05B3                                         i1l4137 0B6A  
                                       i1l4145 0B89                                         i1l4209 0E8B  
                                       i1l4129 0ADD                                         i1l4153 0AB7  
                                       i1l4321 0068                                         i1l4313 004C  
                                       i1l4305 0030                                         i1l3451 05E3  
                                       i1l3443 05DA                                         i1l3435 05CF  
                                       i1l3427 05C4                                         i1l3419 05BD  
                                       i1l4139 0B73                                         i1l4147 0B94  
                                       i1l4155 0AB9                                         i1l4323 0071  
                                       i1l4315 0055                                         i1l4307 0039  
                      __end_of_PWM5_Initialize 0800                        __end_of_TMR3_Initialize 0ADB  
                                       i1l4149 0B96                                         i1l4181 0C65  
                                       i1l4325 0076                                         i1l4317 005A  
                                       i1l4309 003E                                         i1l3471 05F9  
                                       i1l3463 05F0                                         i1l3455 05E7  
                                       i1l3447 05DF                                         i1l3439 05D5  
                                       i1l3711 0C16                                         i1l4191 0E52  
                                       i1l4183 0C6D                                         i1l4327 0082  
                                       i1l4319 0063                                         i1l3713 0C1C  
                                       i1l4193 0E58                                         i1l4185 0C72  
                                       i1l3721 0B03                                         i1l4329 0087  
                                       i1l3475 05FD                                         i1l3467 05F4  
                                       i1l3459 05EC                                         i1l3715 0C1D  
                                       i1l3707 0C08                                         i1l4195 0E5D  
                                       i1l4187 0C78                                         i1l4179 0C5E  
                                       i1l3723 0B05                                         i1l4291 0006  
                                       i1l3709 0C12                                         i1l4197 0E63  
                                       i1l4189 0C79                                         i1l3725 0B07  
                                       i1l3717 0AFD                                         i1l4293 000B  
                                       i1l3479 0602                                         i1l4199 0E69  
                                       i1l3719 0B02                                         i1l3727 0B09  
                                       i1l4295 0010                                         u132_20 0AF1  
                                       i1l3489 0608                                         u132_21 0AF0  
                                       i1l3729 0B0B                                         i1l4297 0018  
                                       i1l4299 001D                                         i1l3941 0D6E  
                                       i1l3943 0D74                                         i1l3695 0AA3  
                                       u125_20 0C1C                                         i1l4681 0610  
                                       i1l3945 0D79                                         i1l3961 0DB4  
                                       u125_21 0C1B                                         i1l3937 0A22  
                                       i1l3939 0D66                                         i1l3955 0DA1  
                                       i1l4675 0E0E                                         i1l3971 0DDC  
                                       i1l3699 0A99                                         i1l3949 0D88  
                                       i1l4677 0DD3                                         i1l3957 0DA9  
                                       i1l3965 0DC3                                         i1l3973 0DE4  
                                       i1l3981 0DFE                                         i1l4679 0D98  
                                       i1l3959 0DAF                                         i1l3975 0DEA  
                                       i1l3991 0AF2                                         u150_20 0E5D  
                                       u126_20 0B02                                         i1l3977 0DEF  
                                       u150_21 0E5C                                         i1l3993 0AF4  
                                       u126_21 0B01                                         i1l3995 0AF6  
                                       i1l3987 0AEC                                         i1l3989 0AF1  
                                       i1l3997 0AF8                                         i1l3999 0AFA  
                                       u151_20 0E6E                                         u151_21 0E6D  
                                       u152_20 0E84                                         u160_20 0010  
                                       u152_21 0E83                                         u160_21 000F  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         u145_20 0AE7  
                                       u161_20 0018                                         u145_21 0AE6  
                                       u161_21 0017                                         u170_20 0055  
                                       u162_20 001D                                         u170_21 0054  
                                       u162_21 001C                                         u171_20 005A  
                                       u163_20 0022                                         u171_21 0059  
                                       u163_21 0021                                         u148_20 0C65  
                                       u172_20 0063                                         u164_20 002B  
                                       u148_21 0C64                                         u172_21 0062  
                                       u164_21 002A                                         u149_20 0C78  
                                       u173_20 0068                                         u165_20 0030  
                                       u149_21 0C77                                         u173_21 0067  
                                       u165_21 002F                                         u174_20 0071  
                                       u166_20 0039                                         u174_21 0070  
                                       u166_21 0038                                         u175_20 0076  
                                       u167_20 003E                                         u159_20 000B  
                                       u175_21 0075                                         u167_21 003D  
                                       u159_21 000A                                         u176_20 0082  
                                       u168_20 0047                                         u176_21 0081  
                                       u168_21 0046                                         u177_20 0087  
                                       u169_20 004C                                         u177_21 0086  
                                       u169_21 004B                                  main@currMilli 00EB  
                                       _OSCFRQ 091F                                         _TX1REG 019A  
                                       _WDTCON 0097                                         _TX1STA 019E  
                             ?_CCP2_Initialize 0070                              ??_JSN_Sensor_Init 00DF  
                                    ??_ReadPin 0070                                _TMR3_WriteTimer 0AFD  
                            ??_JSN_Sensor_Trig 0038                                  _CCP1_CallBack 00CC  
                     __end_of_CCP3_SetCallBack 0A63                                         _SetPin 0459  
                                _CCP2_CallBack 00C6                                   vfprintf@cfmt 006A  
                                       ___lmul 0D32                                         ___wmul 0C3E  
                                    ??___lldiv 0034                               ?_CCP4_CompareISR 0070  
                                    ??___lodiv 0030                                      ??___lomod 0030  
                                 ?_TMR3_Reload 0070                                  _CCP3_CallBack 00C0  
                          _EUSART_Transmit_ISR 0C5E                               ?_TMR0_Initialize 0070  
                                       _micros 0140                                         _millis 013C  
                           _lastTrig@ccp1$F729 00D8                             _lastTrig@ccp2$F871 00D6  
                           _lastTrig@ccp3$F992 00D4                                         _printf 0B53  
                                       pad@buf 0033                                  main@prevMilli 00E6  
                             ?_CCP3_Initialize 0070                                         _strlen 0C23  
                                       fputc@c 0023                                 _PMD_Initialize 0AAD  
                                       fputs@c 002F                                         fputs@i 0030  
                                       fputs@s 0032              CCP2_DefaultCallBack@capturedValue 0073  
                              ?_WDT_Initialize 0070                          __end_of_TMR0_CallBack 0A29  
                             __end_of_vfprintf 0D32                                         utoa@fp 0047  
     TMR0_SetInterruptHandler@InterruptHandler 0020                        __end_of_TMR1_WriteTimer 0AFD  
                         ?_EUSART_Transmit_ISR 0070                               ?_TMR1_Initialize 0070  
                            _SYSTEM_Initialize 0CA9                        __end_of__initialization 00AE  
                             ?_CCP4_Initialize 0070                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 0A90                   _EUSART_SetTxInterruptHandler 0A87  
                                 ??_PIC16_Init 0023                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0023                                      ?_TMR0_ISR 0070  
                                    ?_TMR1_ISR 0070                                      ?_TMR3_ISR 0070  
                                __end_of_fputc 0F15                                  __end_of_fputs 0CA9  
                                __end_of_putch 0A30                               ?_TMR2_Initialize 0070  
                       __end_of_PMD_Initialize 0AB7                        __end_of_JSN_GetLastTrig 0A07  
                        CCP3_CaptureISR@module 0078                           _eusartRxStatusBuffer 0120  
               CCP3_SetCallBack@customCallBack 0020                ??_EUSART_SetOverrunErrorHandler 0022  
                           __end_of_PIC16_Init 0B53                                        ??_fputc 0026  
                    __end_of_SYSTEM_Initialize 0CD4                                        ??_fputs 002C  
                        ??_EUSART_Transmit_ISR 0070                        __end_of_TMR3_WriteTimer 0B0E  
                                      ??_putch 0022                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                                     __pbssBANK3 01A0  
                         __end_of_EUSART_Write 0D01                               ?_PWM5_Initialize 0070  
                             ?_TMR3_Initialize 0070                       ??_JSN_Sensor_GetDistance 003C  
                                      ?_SetPin 0020                              ?_CCP1_SetCallBack 0020  
                                   __pmaintext 00B2                  ?_EUSART_SetTxInterruptHandler 0020  
             _EUSART_TxDefaultInterruptHandler 00B8               __end_of_TMR0_SetInterruptHandler 0A99  
                                      ?___lmul 0020                                        ?___wmul 0020  
                                _FRT_GetMicros 0F5B                                     ??_TMR0_ISR 0070  
                                   ??_TMR1_ISR 0072                                  _FRT_GetMillis 0B0E  
                                   ??_TMR3_ISR 0072                             ??_CCP1_SetCallBack 0022  
                                   __pintentry 0004                                        _CCP1CAP 0294  
                                      _CCP2CAP 0298                                        _CCP3CAP 0314  
                                      _CCP1CON 0293                                        _CCP2CON 0297  
                                      _CCP3CON 0313                                        _CCP4CON 0317  
                                      _CCP1PPS 0E14                                        _CCP2PPS 0E15  
                                      _CCP3PPS 0E16                                 ___lmul@product 0028  
                                _FRT_IncMicros 0A99                   ??_EUSART_DefaultErrorHandler 0071  
                                _FRT_IncMillis 0AA3                                        ?_printf 006C  
                              ?_PMD_Initialize 0070                                      ?_WritePin 0020  
                                      ?_strlen 0020                                  _eusartRxCount 00D1  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                                      _OSCCON1 0919                                        _OSCCON3 091B  
                                      _OSCTUNE 091E                                        _PWM5DCH 0618  
                                      _PWM5DCL 0617                                        _PWM5CON 0619  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                       ??_EUSART_SetErrorHandler 0022  
                             ?_TMR1_WriteTimer 0070                               ___lomod@dividend 0028  
            CCP1_DefaultCallBack@capturedValue 0073                    __end_of_TMR0_GetCallBackNum 0004  
                             _micros@FRT$F1531 0138                              _dutyCyclePerMilli 0144  
                                      _ReadPin 05B2                              ?_CCP2_SetCallBack 0020  
                               ?_FRT_GetMicros 0026                                 ?_FRT_GetMillis 0020  
                                      ___lldiv 073E                                        ___lodiv 0649  
                           ??_CCP2_SetCallBack 0022                                        ___lomod 06CD  
                                    ?_vfprintf 0064                                 ?_FRT_IncMicros 0070  
                               ?_FRT_IncMillis 0070                                        _ocCount 00AC  
                                   ??_WritePin 0021                                        __ptext1 0B41  
                                      __ptext2 0CA9                                        __ptext3 0A12  
                                      __ptext4 0ACE                                        __ptext5 0A37  
                                      __ptext6 0B30                                        __ptext7 0BAA  
                                      __ptext8 0A90                                        __ptext9 07F2  
                             ?_JSN_GetLastTrig 0070                                      _T1CONbits 001B  
                        _OSCILLATOR_Initialize 0AC2                                      _T2CONbits 001F  
                                    _T3CONbits 0413                             _sameSens@ccp2$F870 00D7  
                           _sameSens@ccp3$F991 00D5                       ??_PIN_MANAGER_Initialize 0020  
                                      _ticksUp 00CA                                _JSN_Sensor_Init 0514  
                              _JSN_Sensor_Trig 0799                                        clrloop0 0A1D  
                         end_of_initialization 00AE                               ?_TMR3_WriteTimer 0070  
        __end_of_EUSART_SetOverrunErrorHandler 0A7E                  _EUSART_SetOverrunErrorHandler 0A75  
                                      fputc@fp 0025                                        fputs@fp 002B  
                            _EUSART_Initialize 0F15                                ___lldiv@divisor 002C  
                              ___lldiv@counter 0039                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 039E                              ?_CCP3_SetCallBack 0020  
                        TMR0_ReadTimer@readVal 0021                   __end_of_CCP1_DefaultCallBack 0DA1  
                           ??_CCP3_SetCallBack 0022                                     ??_vfprintf 0067  
                               _TMR0_ReadTimer 0A30                                        strlen@a 0023  
                                      strlen@s 0024                            ??_EUSART_Initialize 0022  
                             ??_WDT_Initialize 0020                 ??_EUSART_SetTxInterruptHandler 0022  
                     _TMR0_SetInterruptHandler 0A90                                      _PORTAbits 000C  
                                    _PORTBbits 000D                                      _PORTCbits 000E  
                                    _TRISAbits 008C                                      _TRISBbits 008D  
                                    _TRISCbits 008E                      __end_of_EUSART_Initialize 0F5B  
                                  _CCP4CONbits 0317                                ??_FRT_GetMicros 002A  
                              ??_FRT_GetMillis 0024                         __end_of_TMR0_ReadTimer 0A37  
                              ??_FRT_IncMicros 0070                                 __end_of_SetPin 0514  
                              ??_FRT_IncMillis 0070                                 __end_of___lmul 0D66  
           __end_of_EUSART_DefaultErrorHandler 0A0E                     _EUSART_DefaultErrorHandler 0A0A  
                                  vfpfcnvrt@ap 0055                                    vfpfcnvrt@fp 0063  
                               __end_of___wmul 0C5E                                   _EUSART_Write 0CD4  
                      __end_of_JSN_Sensor_Init 05B2                         _JSN_Sensor_GetDistance 0E8F  
                       ?_OSCILLATOR_Initialize 0070                        __end_of_JSN_Sensor_Trig 07F2  
                 __end_of_CCP2_DefaultCallBack 0DDC                                 __end_of_printf 0B68  
                               __end_of_strlen 0C3E                            start_initialization 0092  
                              ___lodiv@divisor 0020                                ___lodiv@counter 0039  
               CCP2_SetCallBack@customCallBack 0020                                      SetPin@pin 0023  
                                  __end_of_pad 1000                              ??_CCP1_CaptureISR 0077  
 EUSART_SetRxInterruptHandler@interruptHandler 0020   EUSART_SetTxInterruptHandler@interruptHandler 0020  
                                  putch@txData 0022                              _ticksUp@ccp2$F868 00C4  
                            _ticksUp@ccp3$F989 00BE                 ?_EUSART_SetOverrunErrorHandler 0020  
                                     ??_SetPin 0021                                    vfprintf@fmt 0064  
                   _EUSART_FramingErrorHandler 00B4                               ??_PMD_Initialize 0020  
                              ?_TMR0_ReadTimer 0070                                       ??___lmul 0028  
                                     ??___wmul 0024                              ??_CCP2_CaptureISR 0077  
                       _EUSART_SetErrorHandler 0A63                         JSN_Sensor_Init@echoPin 00DE  
                                  _CCPTMRSbits 029F                                       ??_printf 00DB  
                                     ??_strlen 0022                          CCP1_CaptureISR@module 0078  
                  __end_of_EUSART_Transmit_ISR 0C80                                    __pbssCOMMON 007A  
                                    ___latbits 0002                         JSN_Sensor_Init@trigPin 00DD  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00DB  
                            ??_CCP3_CaptureISR 0077                   __end_of_CCP3_DefaultCallBack 0E17  
                         _CCP1_DefaultCallBack 0D66                     __end_of_EUSART_Receive_ISR 0E8F  
             _EUSART_RxDefaultInterruptHandler 00B6                          _TMR0_InterruptHandler 00CE  
                            ??_CCP1_Initialize 0022                                 _dutyCycle10bit 00AA  
                                     ?_ReadPin 0070                                    WritePin@pin 0023  
                                  WritePin@val 0020                   __end_of_EUSART_RxDataHandler 0C23  
                       _PIN_MANAGER_Initialize 0E17              CCP3_DefaultCallBack@capturedValue 0073  
                                     ?___lldiv 002C                                       ?___lodiv 0020  
                                     ?___lomod 0020                                   _eusartRxHead 007B  
                                 _eusartTxHead 007C                                   _eusartRxTail 007A  
                                 _eusartTxTail 00D3                   ??_INTERRUPT_InterruptManager 007A  
                             ?_JSN_Sensor_Init 00DD                               ?_JSN_Sensor_Trig 0070  
                      _eusartTxBufferRemaining 00D2                                ___lomod@divisor 0020  
                                     _BAUD1CON 019F                              ??_CCP2_Initialize 0022  
                              ___lomod@counter 0031                                  _TMR0_CallBack 0A22  
                        ?_CCP1_DefaultCallBack 0073                              ??_CCP4_CompareISR 0070  
                               _eusartRxBuffer 0128                              ??_TMR0_Initialize 0022  
                               _eusartTxBuffer 0130                                 ___wmul@product 0024  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0020  
                                     _LATBbits 010D                                       _LATCbits 010E  
                                    clear_ram0 0A1C                              ??_CCP3_Initialize 0022  
                                     _PIE0bits 0090                                       _PIE1bits 0091  
                                     _PIE3bits 0093                                       _PIE4bits 0094  
                            _eusartRxLastError 00D0                           _CCP2_DefaultCallBack 0DA1  
                   ??_TMR0_SetInterruptHandler 0022                                       _PIR0bits 0010  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0022  
                                    _ticksDown 00C8                                       _PIR3bits 0013  
                                     _PIR4bits 0014                                       _TMR0_ISR 0ADB  
    __end_of_EUSART_DefaultOverrunErrorHandler 0A12            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 0A0E  
                                     _TMR1_ISR 0AB7                                  ??_TMR3_Reload 0072  
                                     _TMR3_ISR 0A16                                      _vfpfcnvrt 02DB  
                            ??_TMR1_Initialize 0020                              ___wmul@multiplier 0020  
                            ??_CCP4_Initialize 0020                                 ?_TMR0_CallBack 0070  
                            ___lmul@multiplier 0020                                       SetPin@io 0020  
                            ??_TMR2_Initialize 0020                          ?_CCP2_DefaultCallBack 0073  
                        JSN_Sensor_Init@Sensor 00E1                                     vfprintf@ap 0066  
                                   vfprintf@fp 0069                        ?_JSN_Sensor_GetDistance 003A  
                      ??_OSCILLATOR_Initialize 0020                            _EUSART_ErrorHandler 00B0  
                         _CCP3_DefaultCallBack 0DDC                    ?_EUSART_DefaultErrorHandler 0070  
                                   ?_vfpfcnvrt 0054                                _CCP1_CaptureISR 0B68  
                                     _WritePin 039E                              ??_PWM5_Initialize 0020  
                            ??_TMR3_Initialize 0020                            __end_of_TMR3_Reload 0A48  
                                   _T0CON0bits 0017                               _CCP1_SetCallBack 0A48  
                         _EUSART_RxDataHandler 0C08                 CCP1_SetCallBack@customCallBack 0020  
                                     __ptext10 0AAD                                       __ptext11 0E17  
                                     __ptext20 0BF0                                       __ptext12 0AC2  
                                     __ptext21 0A5A                                       __ptext13 0F15  
                                     __ptext30 0002                                       __ptext22 0BD8  
                                     __ptext14 0A87                                       __ptext31 0514  
                                     __ptext23 0A51                                       __ptext15 0A7E  
                                     __ptext40 0A29                                       __ptext32 0B53  
                                     __ptext24 0BC0                                       __ptext16 0A75  
                                     __ptext41 0CD4                                       __ptext33 0D01  
                                     __ptext25 0A48                                       __ptext17 0A6C  
                                     __ptext42 06CD                                       __ptext34 02DB  
                                     __ptext26 0799                                       __ptext18 0A63  
                                     __ptext51 0A16                                       __ptext43 0649  
                                     __ptext35 01EC                                       __ptext27 0F5B  
                                     __ptext19 0B1F                                       __ptext60 0C5E  
                                     __ptext52 0A3F                                       __ptext44 039E  
                                     __ptext36 0FA7                                       __ptext28 0C3E  
                                     __ptext61 0E52                                       __ptext53 0AFD  
                                     __ptext45 0459                                       __ptext37 0C23  
                                     __ptext29 0A30                                       __ptext70 0DA1  
                                     __ptext62 0A0E                                       __ptext54 0AB7  
                                     __ptext46 0E8F                                       __ptext38 0C80  
                                     __ptext71 0B68                                       __ptext63 0A03  
                                     __ptext55 0AEC                                       __ptext47 0D32  
                                     __ptext39 0ED2                                       __ptext72 0D66  
                                     __ptext64 0A0A                                       __ptext56 0ADB  
                                     __ptext48 073E                                       __ptext73 05B2  
                                     __ptext65 0C08                                       __ptext57 0A22  
                                     __ptext49 0B0E                                       __ptext74 0A04  
                                     __ptext66 0A07                                       __ptext58 0AA3  
                                     __ptext67 0B94                                       __ptext59 0A99  
                                     __ptext68 0DDC                                       __ptext69 0B7E  
                       ??_CCP1_DefaultCallBack 0075                                     _T3GCONbits 0414  
                      TMR3_WriteTimer@timerVal 0070                                       _currFreq 00AE  
                                     _lastTrig 00DA                                _CCP2_CaptureISR 0B7E  
                             ??_TMR0_ReadTimer 0020                                       _sameSens 00D9  
                 _TMR0_DefaultInterruptHandler 0000                        ?_EUSART_SetErrorHandler 0020  
                          _ticksDown@ccp2$F869 00C2                            _ticksDown@ccp3$F990 00BC  
                                   _PIC16_Init 0B41                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0020                 __end_of_JSN_Sensor_GetDistance 0ED2  
                        __end_of_FRT_GetMicros 0FA7                          __end_of_FRT_GetMillis 0B1F  
                                     int$flags 007E                          ?_CCP3_DefaultCallBack 0073  
                                     _vfprintf 0D01             __end_of_INTERRUPT_InterruptManager 0090  
                   _INTERRUPT_InterruptManager 0004                          __end_of_FRT_IncMicros 0AA3  
                        __end_of_FRT_IncMillis 0AAD                                      printf@fmt 006C  
        __end_of_EUSART_SetFramingErrorHandler 0A75                  _EUSART_SetFramingErrorHandler 0A6C  
                            ??_TMR1_WriteTimer 0072                                _CCP3_CaptureISR 0B94  
                                   _INTCONbits 000B                                ??_TMR0_CallBack 0070  
                             _CCP2_SetCallBack 0A51                          ?_EUSART_RxDataHandler 0070  
                              _CCP1_Initialize 0BC0                                       intlevel1 0000  
                                _CountCallBack 007D                               ___lldiv@dividend 0030  
                      ?_PIN_MANAGER_Initialize 0070                         ??_CCP2_DefaultCallBack 0075  
               __end_of_EUSART_SetErrorHandler 0A6C                              ??_JSN_GetLastTrig 0070  
         __end_of_EUSART_SetRxInterruptHandler 0A87                   _EUSART_SetRxInterruptHandler 0A7E  
                      __end_of_CCP1_CaptureISR 0B7E                                _CCP2_Initialize 0BD8  
                                     printf@ap 00DC                             _EUSART_Receive_ISR 0E52  
EUSART_SetFramingErrorHandler@interruptHandler 0020                                    _TMR3_Reload 0A3F  
                                  ??_vfpfcnvrt 0056                              ??_TMR3_WriteTimer 0072  
                                __pstringtext1 1000                                  __pstringtext2 103A  
                                __pstringtext3 106C                                  __pstringtext4 0000  
                        CCP2_CaptureISR@module 0078                                _CCP4_CompareISR 0A07  
                          ?_EUSART_Receive_ISR 0070                               ___lldiv@quotient 0035  
                              _TMR0_Initialize 0BAA                               _CCP3_SetCallBack 0A5A  
                      __end_of_CCP2_CaptureISR 0B94                            _TMR0_GetCallBackNum 0002  
                              _CCP3_Initialize 0BF0                                     _TX1STAbits 019E  
                           EUSART_Write@txData 0021                 __end_of_PIN_MANAGER_Initialize 0E52  
                                  _PWMTMRSbits 061F                           ??_EUSART_Receive_ISR 0071  
                        JSN_Sensor_Trig@Sensor 003C                                _TMR1_Initialize 0B30  
                                  ?_PIC16_Init 0070                           ?_TMR0_GetCallBackNum 0070  
                      __end_of_CCP3_CaptureISR 0BAA  
