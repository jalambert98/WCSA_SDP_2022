

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Feb 17 16:52:57 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text37,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text38,local,class=CODE,merge=1,delta=2,group=3
    58                           	psect	text39,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	intentry,global,class=CODE,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	psect	text64,local,class=CODE,merge=1,delta=2
    84                           	psect	text65,local,class=CODE,merge=1,delta=2
    85                           	psect	text66,local,class=CODE,merge=1,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,delta=2
    87                           	psect	text68,local,class=CODE,merge=1,delta=2
    88                           	psect	text69,local,class=CODE,merge=1,delta=2
    89                           	psect	text70,local,class=CODE,merge=1,delta=2
    90                           	psect	text71,local,class=CODE,merge=1,delta=2
    91                           	psect	text72,local,class=CODE,merge=1,delta=2
    92                           	psect	text73,local,class=CODE,merge=1,delta=2
    93                           	psect	text74,local,class=CODE,merge=1,delta=2
    94                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    95                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    96                           	dabs	1,0x7E,2
    97  0000                     
    98                           ; Version 2.40
    99                           ; Generated 19/01/2022 GMT
   100                           ; 
   101                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution. Publication is not required when
   115                           ;        this file is used in an embedded application.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC16F18345 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0097                     	;# 
   176  009B                     	;# 
   177  009B                     	;# 
   178  009C                     	;# 
   179  009D                     	;# 
   180  009E                     	;# 
   181  009F                     	;# 
   182  010C                     	;# 
   183  010D                     	;# 
   184  010E                     	;# 
   185  0111                     	;# 
   186  0112                     	;# 
   187  0113                     	;# 
   188  0114                     	;# 
   189  0115                     	;# 
   190  0116                     	;# 
   191  0117                     	;# 
   192  0118                     	;# 
   193  0119                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196  018E                     	;# 
   197  0197                     	;# 
   198  0199                     	;# 
   199  0199                     	;# 
   200  0199                     	;# 
   201  019A                     	;# 
   202  019A                     	;# 
   203  019A                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019B                     	;# 
   207  019B                     	;# 
   208  019B                     	;# 
   209  019C                     	;# 
   210  019C                     	;# 
   211  019C                     	;# 
   212  019D                     	;# 
   213  019D                     	;# 
   214  019D                     	;# 
   215  019E                     	;# 
   216  019E                     	;# 
   217  019E                     	;# 
   218  019F                     	;# 
   219  019F                     	;# 
   220  019F                     	;# 
   221  019F                     	;# 
   222  019F                     	;# 
   223  020C                     	;# 
   224  020D                     	;# 
   225  020E                     	;# 
   226  0211                     	;# 
   227  0211                     	;# 
   228  0212                     	;# 
   229  0212                     	;# 
   230  0213                     	;# 
   231  0213                     	;# 
   232  0214                     	;# 
   233  0214                     	;# 
   234  0215                     	;# 
   235  0215                     	;# 
   236  0215                     	;# 
   237  0215                     	;# 
   238  0216                     	;# 
   239  0216                     	;# 
   240  0217                     	;# 
   241  0217                     	;# 
   242  0219                     	;# 
   243  021A                     	;# 
   244  021B                     	;# 
   245  021C                     	;# 
   246  021D                     	;# 
   247  021D                     	;# 
   248  021E                     	;# 
   249  021F                     	;# 
   250  028C                     	;# 
   251  028D                     	;# 
   252  028E                     	;# 
   253  0291                     	;# 
   254  0291                     	;# 
   255  0292                     	;# 
   256  0293                     	;# 
   257  0294                     	;# 
   258  0295                     	;# 
   259  0295                     	;# 
   260  0296                     	;# 
   261  0297                     	;# 
   262  0298                     	;# 
   263  029F                     	;# 
   264  030C                     	;# 
   265  030D                     	;# 
   266  030E                     	;# 
   267  0311                     	;# 
   268  0311                     	;# 
   269  0312                     	;# 
   270  0313                     	;# 
   271  0314                     	;# 
   272  0315                     	;# 
   273  0315                     	;# 
   274  0316                     	;# 
   275  0317                     	;# 
   276  0318                     	;# 
   277  038C                     	;# 
   278  038D                     	;# 
   279  038E                     	;# 
   280  0391                     	;# 
   281  0392                     	;# 
   282  0393                     	;# 
   283  0394                     	;# 
   284  0395                     	;# 
   285  0396                     	;# 
   286  0397                     	;# 
   287  0398                     	;# 
   288  0399                     	;# 
   289  039A                     	;# 
   290  039C                     	;# 
   291  039D                     	;# 
   292  039E                     	;# 
   293  039F                     	;# 
   294  0411                     	;# 
   295  0411                     	;# 
   296  0412                     	;# 
   297  0413                     	;# 
   298  0414                     	;# 
   299  0415                     	;# 
   300  0416                     	;# 
   301  0417                     	;# 
   302  0418                     	;# 
   303  0418                     	;# 
   304  0419                     	;# 
   305  041A                     	;# 
   306  041B                     	;# 
   307  041C                     	;# 
   308  041D                     	;# 
   309  041E                     	;# 
   310  041F                     	;# 
   311  0498                     	;# 
   312  0498                     	;# 
   313  0499                     	;# 
   314  049A                     	;# 
   315  049B                     	;# 
   316  049B                     	;# 
   317  049C                     	;# 
   318  049D                     	;# 
   319  049E                     	;# 
   320  049F                     	;# 
   321  0617                     	;# 
   322  0618                     	;# 
   323  0619                     	;# 
   324  0619                     	;# 
   325  061A                     	;# 
   326  061B                     	;# 
   327  061C                     	;# 
   328  061C                     	;# 
   329  061F                     	;# 
   330  0691                     	;# 
   331  0692                     	;# 
   332  0693                     	;# 
   333  0694                     	;# 
   334  0695                     	;# 
   335  0696                     	;# 
   336  0697                     	;# 
   337  0698                     	;# 
   338  0699                     	;# 
   339  0711                     	;# 
   340  0712                     	;# 
   341  0713                     	;# 
   342  0714                     	;# 
   343  0715                     	;# 
   344  0716                     	;# 
   345  0717                     	;# 
   346  0718                     	;# 
   347  0719                     	;# 
   348  0891                     	;# 
   349  0891                     	;# 
   350  0891                     	;# 
   351  0891                     	;# 
   352  0891                     	;# 
   353  0891                     	;# 
   354  0892                     	;# 
   355  0892                     	;# 
   356  0892                     	;# 
   357  0893                     	;# 
   358  0893                     	;# 
   359  0893                     	;# 
   360  0893                     	;# 
   361  0893                     	;# 
   362  0893                     	;# 
   363  0894                     	;# 
   364  0894                     	;# 
   365  0894                     	;# 
   366  0895                     	;# 
   367  0895                     	;# 
   368  0895                     	;# 
   369  0896                     	;# 
   370  0896                     	;# 
   371  0896                     	;# 
   372  089B                     	;# 
   373  0911                     	;# 
   374  0912                     	;# 
   375  0913                     	;# 
   376  0914                     	;# 
   377  0915                     	;# 
   378  0916                     	;# 
   379  0918                     	;# 
   380  0919                     	;# 
   381  091A                     	;# 
   382  091B                     	;# 
   383  091C                     	;# 
   384  091D                     	;# 
   385  091E                     	;# 
   386  091F                     	;# 
   387  0E0F                     	;# 
   388  0E10                     	;# 
   389  0E11                     	;# 
   390  0E12                     	;# 
   391  0E13                     	;# 
   392  0E14                     	;# 
   393  0E15                     	;# 
   394  0E16                     	;# 
   395  0E17                     	;# 
   396  0E18                     	;# 
   397  0E19                     	;# 
   398  0E1A                     	;# 
   399  0E1B                     	;# 
   400  0E1C                     	;# 
   401  0E1D                     	;# 
   402  0E1E                     	;# 
   403  0E1F                     	;# 
   404  0E20                     	;# 
   405  0E21                     	;# 
   406  0E22                     	;# 
   407  0E24                     	;# 
   408  0E25                     	;# 
   409  0E28                     	;# 
   410  0E29                     	;# 
   411  0E2A                     	;# 
   412  0E2B                     	;# 
   413  0E2C                     	;# 
   414  0E2D                     	;# 
   415  0E2E                     	;# 
   416  0E2F                     	;# 
   417  0E90                     	;# 
   418  0E91                     	;# 
   419  0E92                     	;# 
   420  0E94                     	;# 
   421  0E95                     	;# 
   422  0E9C                     	;# 
   423  0E9D                     	;# 
   424  0E9E                     	;# 
   425  0E9F                     	;# 
   426  0EA0                     	;# 
   427  0EA1                     	;# 
   428  0EA2                     	;# 
   429  0EA3                     	;# 
   430  0EA4                     	;# 
   431  0EA5                     	;# 
   432  0EA6                     	;# 
   433  0EA7                     	;# 
   434  0F0F                     	;# 
   435  0F10                     	;# 
   436  0F11                     	;# 
   437  0F12                     	;# 
   438  0F13                     	;# 
   439  0F14                     	;# 
   440  0F15                     	;# 
   441  0F16                     	;# 
   442  0F17                     	;# 
   443  0F18                     	;# 
   444  0F19                     	;# 
   445  0F1A                     	;# 
   446  0F1B                     	;# 
   447  0F1C                     	;# 
   448  0F1D                     	;# 
   449  0F1E                     	;# 
   450  0F1F                     	;# 
   451  0F20                     	;# 
   452  0F21                     	;# 
   453  0F22                     	;# 
   454  0F23                     	;# 
   455  0F24                     	;# 
   456  0F25                     	;# 
   457  0F26                     	;# 
   458  0F27                     	;# 
   459  0F28                     	;# 
   460  0F29                     	;# 
   461  0F2A                     	;# 
   462  0F2B                     	;# 
   463  0F2C                     	;# 
   464  0F2D                     	;# 
   465  0F2E                     	;# 
   466  0F2F                     	;# 
   467  0F30                     	;# 
   468  0F31                     	;# 
   469  0F32                     	;# 
   470  0F33                     	;# 
   471  0F34                     	;# 
   472  0F35                     	;# 
   473  0F36                     	;# 
   474  0F37                     	;# 
   475  0FE4                     	;# 
   476  0FE5                     	;# 
   477  0FE6                     	;# 
   478  0FE7                     	;# 
   479  0FE8                     	;# 
   480  0FE9                     	;# 
   481  0FEA                     	;# 
   482  0FEB                     	;# 
   483  0FED                     	;# 
   484  0FEE                     	;# 
   485  0FEF                     	;# 
   486  0000                     	;# 
   487  0001                     	;# 
   488  0002                     	;# 
   489  0003                     	;# 
   490  0004                     	;# 
   491  0005                     	;# 
   492  0006                     	;# 
   493  0007                     	;# 
   494  0008                     	;# 
   495  0009                     	;# 
   496  000A                     	;# 
   497  000B                     	;# 
   498  000C                     	;# 
   499  000D                     	;# 
   500  000E                     	;# 
   501  0010                     	;# 
   502  0011                     	;# 
   503  0012                     	;# 
   504  0013                     	;# 
   505  0014                     	;# 
   506  0015                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  0019                     	;# 
   514  001A                     	;# 
   515  001B                     	;# 
   516  001C                     	;# 
   517  001D                     	;# 
   518  001E                     	;# 
   519  001F                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  008E                     	;# 
   523  0090                     	;# 
   524  0091                     	;# 
   525  0092                     	;# 
   526  0093                     	;# 
   527  0094                     	;# 
   528  0097                     	;# 
   529  009B                     	;# 
   530  009B                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  0111                     	;# 
   539  0112                     	;# 
   540  0113                     	;# 
   541  0114                     	;# 
   542  0115                     	;# 
   543  0116                     	;# 
   544  0117                     	;# 
   545  0118                     	;# 
   546  0119                     	;# 
   547  018C                     	;# 
   548  018D                     	;# 
   549  018E                     	;# 
   550  0197                     	;# 
   551  0199                     	;# 
   552  0199                     	;# 
   553  0199                     	;# 
   554  019A                     	;# 
   555  019A                     	;# 
   556  019A                     	;# 
   557  019B                     	;# 
   558  019B                     	;# 
   559  019B                     	;# 
   560  019B                     	;# 
   561  019B                     	;# 
   562  019C                     	;# 
   563  019C                     	;# 
   564  019C                     	;# 
   565  019D                     	;# 
   566  019D                     	;# 
   567  019D                     	;# 
   568  019E                     	;# 
   569  019E                     	;# 
   570  019E                     	;# 
   571  019F                     	;# 
   572  019F                     	;# 
   573  019F                     	;# 
   574  019F                     	;# 
   575  019F                     	;# 
   576  020C                     	;# 
   577  020D                     	;# 
   578  020E                     	;# 
   579  0211                     	;# 
   580  0211                     	;# 
   581  0212                     	;# 
   582  0212                     	;# 
   583  0213                     	;# 
   584  0213                     	;# 
   585  0214                     	;# 
   586  0214                     	;# 
   587  0215                     	;# 
   588  0215                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0216                     	;# 
   592  0216                     	;# 
   593  0217                     	;# 
   594  0217                     	;# 
   595  0219                     	;# 
   596  021A                     	;# 
   597  021B                     	;# 
   598  021C                     	;# 
   599  021D                     	;# 
   600  021D                     	;# 
   601  021E                     	;# 
   602  021F                     	;# 
   603  028C                     	;# 
   604  028D                     	;# 
   605  028E                     	;# 
   606  0291                     	;# 
   607  0291                     	;# 
   608  0292                     	;# 
   609  0293                     	;# 
   610  0294                     	;# 
   611  0295                     	;# 
   612  0295                     	;# 
   613  0296                     	;# 
   614  0297                     	;# 
   615  0298                     	;# 
   616  029F                     	;# 
   617  030C                     	;# 
   618  030D                     	;# 
   619  030E                     	;# 
   620  0311                     	;# 
   621  0311                     	;# 
   622  0312                     	;# 
   623  0313                     	;# 
   624  0314                     	;# 
   625  0315                     	;# 
   626  0315                     	;# 
   627  0316                     	;# 
   628  0317                     	;# 
   629  0318                     	;# 
   630  038C                     	;# 
   631  038D                     	;# 
   632  038E                     	;# 
   633  0391                     	;# 
   634  0392                     	;# 
   635  0393                     	;# 
   636  0394                     	;# 
   637  0395                     	;# 
   638  0396                     	;# 
   639  0397                     	;# 
   640  0398                     	;# 
   641  0399                     	;# 
   642  039A                     	;# 
   643  039C                     	;# 
   644  039D                     	;# 
   645  039E                     	;# 
   646  039F                     	;# 
   647  0411                     	;# 
   648  0411                     	;# 
   649  0412                     	;# 
   650  0413                     	;# 
   651  0414                     	;# 
   652  0415                     	;# 
   653  0416                     	;# 
   654  0417                     	;# 
   655  0418                     	;# 
   656  0418                     	;# 
   657  0419                     	;# 
   658  041A                     	;# 
   659  041B                     	;# 
   660  041C                     	;# 
   661  041D                     	;# 
   662  041E                     	;# 
   663  041F                     	;# 
   664  0498                     	;# 
   665  0498                     	;# 
   666  0499                     	;# 
   667  049A                     	;# 
   668  049B                     	;# 
   669  049B                     	;# 
   670  049C                     	;# 
   671  049D                     	;# 
   672  049E                     	;# 
   673  049F                     	;# 
   674  0617                     	;# 
   675  0618                     	;# 
   676  0619                     	;# 
   677  0619                     	;# 
   678  061A                     	;# 
   679  061B                     	;# 
   680  061C                     	;# 
   681  061C                     	;# 
   682  061F                     	;# 
   683  0691                     	;# 
   684  0692                     	;# 
   685  0693                     	;# 
   686  0694                     	;# 
   687  0695                     	;# 
   688  0696                     	;# 
   689  0697                     	;# 
   690  0698                     	;# 
   691  0699                     	;# 
   692  0711                     	;# 
   693  0712                     	;# 
   694  0713                     	;# 
   695  0714                     	;# 
   696  0715                     	;# 
   697  0716                     	;# 
   698  0717                     	;# 
   699  0718                     	;# 
   700  0719                     	;# 
   701  0891                     	;# 
   702  0891                     	;# 
   703  0891                     	;# 
   704  0891                     	;# 
   705  0891                     	;# 
   706  0891                     	;# 
   707  0892                     	;# 
   708  0892                     	;# 
   709  0892                     	;# 
   710  0893                     	;# 
   711  0893                     	;# 
   712  0893                     	;# 
   713  0893                     	;# 
   714  0893                     	;# 
   715  0893                     	;# 
   716  0894                     	;# 
   717  0894                     	;# 
   718  0894                     	;# 
   719  0895                     	;# 
   720  0895                     	;# 
   721  0895                     	;# 
   722  0896                     	;# 
   723  0896                     	;# 
   724  0896                     	;# 
   725  089B                     	;# 
   726  0911                     	;# 
   727  0912                     	;# 
   728  0913                     	;# 
   729  0914                     	;# 
   730  0915                     	;# 
   731  0916                     	;# 
   732  0918                     	;# 
   733  0919                     	;# 
   734  091A                     	;# 
   735  091B                     	;# 
   736  091C                     	;# 
   737  091D                     	;# 
   738  091E                     	;# 
   739  091F                     	;# 
   740  0E0F                     	;# 
   741  0E10                     	;# 
   742  0E11                     	;# 
   743  0E12                     	;# 
   744  0E13                     	;# 
   745  0E14                     	;# 
   746  0E15                     	;# 
   747  0E16                     	;# 
   748  0E17                     	;# 
   749  0E18                     	;# 
   750  0E19                     	;# 
   751  0E1A                     	;# 
   752  0E1B                     	;# 
   753  0E1C                     	;# 
   754  0E1D                     	;# 
   755  0E1E                     	;# 
   756  0E1F                     	;# 
   757  0E20                     	;# 
   758  0E21                     	;# 
   759  0E22                     	;# 
   760  0E24                     	;# 
   761  0E25                     	;# 
   762  0E28                     	;# 
   763  0E29                     	;# 
   764  0E2A                     	;# 
   765  0E2B                     	;# 
   766  0E2C                     	;# 
   767  0E2D                     	;# 
   768  0E2E                     	;# 
   769  0E2F                     	;# 
   770  0E90                     	;# 
   771  0E91                     	;# 
   772  0E92                     	;# 
   773  0E94                     	;# 
   774  0E95                     	;# 
   775  0E9C                     	;# 
   776  0E9D                     	;# 
   777  0E9E                     	;# 
   778  0E9F                     	;# 
   779  0EA0                     	;# 
   780  0EA1                     	;# 
   781  0EA2                     	;# 
   782  0EA3                     	;# 
   783  0EA4                     	;# 
   784  0EA5                     	;# 
   785  0EA6                     	;# 
   786  0EA7                     	;# 
   787  0F0F                     	;# 
   788  0F10                     	;# 
   789  0F11                     	;# 
   790  0F12                     	;# 
   791  0F13                     	;# 
   792  0F14                     	;# 
   793  0F15                     	;# 
   794  0F16                     	;# 
   795  0F17                     	;# 
   796  0F18                     	;# 
   797  0F19                     	;# 
   798  0F1A                     	;# 
   799  0F1B                     	;# 
   800  0F1C                     	;# 
   801  0F1D                     	;# 
   802  0F1E                     	;# 
   803  0F1F                     	;# 
   804  0F20                     	;# 
   805  0F21                     	;# 
   806  0F22                     	;# 
   807  0F23                     	;# 
   808  0F24                     	;# 
   809  0F25                     	;# 
   810  0F26                     	;# 
   811  0F27                     	;# 
   812  0F28                     	;# 
   813  0F29                     	;# 
   814  0F2A                     	;# 
   815  0F2B                     	;# 
   816  0F2C                     	;# 
   817  0F2D                     	;# 
   818  0F2E                     	;# 
   819  0F2F                     	;# 
   820  0F30                     	;# 
   821  0F31                     	;# 
   822  0F32                     	;# 
   823  0F33                     	;# 
   824  0F34                     	;# 
   825  0F35                     	;# 
   826  0F36                     	;# 
   827  0F37                     	;# 
   828  0FE4                     	;# 
   829  0FE5                     	;# 
   830  0FE6                     	;# 
   831  0FE7                     	;# 
   832  0FE8                     	;# 
   833  0FE9                     	;# 
   834  0FEA                     	;# 
   835  0FEB                     	;# 
   836  0FED                     	;# 
   837  0FEE                     	;# 
   838  0FEF                     	;# 
   839  0000                     	;# 
   840  0001                     	;# 
   841  0002                     	;# 
   842  0003                     	;# 
   843  0004                     	;# 
   844  0005                     	;# 
   845  0006                     	;# 
   846  0007                     	;# 
   847  0008                     	;# 
   848  0009                     	;# 
   849  000A                     	;# 
   850  000B                     	;# 
   851  000C                     	;# 
   852  000D                     	;# 
   853  000E                     	;# 
   854  0010                     	;# 
   855  0011                     	;# 
   856  0012                     	;# 
   857  0013                     	;# 
   858  0014                     	;# 
   859  0015                     	;# 
   860  0015                     	;# 
   861  0016                     	;# 
   862  0016                     	;# 
   863  0017                     	;# 
   864  0018                     	;# 
   865  0019                     	;# 
   866  0019                     	;# 
   867  001A                     	;# 
   868  001B                     	;# 
   869  001C                     	;# 
   870  001D                     	;# 
   871  001E                     	;# 
   872  001F                     	;# 
   873  008C                     	;# 
   874  008D                     	;# 
   875  008E                     	;# 
   876  0090                     	;# 
   877  0091                     	;# 
   878  0092                     	;# 
   879  0093                     	;# 
   880  0094                     	;# 
   881  0097                     	;# 
   882  009B                     	;# 
   883  009B                     	;# 
   884  009C                     	;# 
   885  009D                     	;# 
   886  009E                     	;# 
   887  009F                     	;# 
   888  010C                     	;# 
   889  010D                     	;# 
   890  010E                     	;# 
   891  0111                     	;# 
   892  0112                     	;# 
   893  0113                     	;# 
   894  0114                     	;# 
   895  0115                     	;# 
   896  0116                     	;# 
   897  0117                     	;# 
   898  0118                     	;# 
   899  0119                     	;# 
   900  018C                     	;# 
   901  018D                     	;# 
   902  018E                     	;# 
   903  0197                     	;# 
   904  0199                     	;# 
   905  0199                     	;# 
   906  0199                     	;# 
   907  019A                     	;# 
   908  019A                     	;# 
   909  019A                     	;# 
   910  019B                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019B                     	;# 
   914  019B                     	;# 
   915  019C                     	;# 
   916  019C                     	;# 
   917  019C                     	;# 
   918  019D                     	;# 
   919  019D                     	;# 
   920  019D                     	;# 
   921  019E                     	;# 
   922  019E                     	;# 
   923  019E                     	;# 
   924  019F                     	;# 
   925  019F                     	;# 
   926  019F                     	;# 
   927  019F                     	;# 
   928  019F                     	;# 
   929  020C                     	;# 
   930  020D                     	;# 
   931  020E                     	;# 
   932  0211                     	;# 
   933  0211                     	;# 
   934  0212                     	;# 
   935  0212                     	;# 
   936  0213                     	;# 
   937  0213                     	;# 
   938  0214                     	;# 
   939  0214                     	;# 
   940  0215                     	;# 
   941  0215                     	;# 
   942  0215                     	;# 
   943  0215                     	;# 
   944  0216                     	;# 
   945  0216                     	;# 
   946  0217                     	;# 
   947  0217                     	;# 
   948  0219                     	;# 
   949  021A                     	;# 
   950  021B                     	;# 
   951  021C                     	;# 
   952  021D                     	;# 
   953  021D                     	;# 
   954  021E                     	;# 
   955  021F                     	;# 
   956  028C                     	;# 
   957  028D                     	;# 
   958  028E                     	;# 
   959  0291                     	;# 
   960  0291                     	;# 
   961  0292                     	;# 
   962  0293                     	;# 
   963  0294                     	;# 
   964  0295                     	;# 
   965  0295                     	;# 
   966  0296                     	;# 
   967  0297                     	;# 
   968  0298                     	;# 
   969  029F                     	;# 
   970  030C                     	;# 
   971  030D                     	;# 
   972  030E                     	;# 
   973  0311                     	;# 
   974  0311                     	;# 
   975  0312                     	;# 
   976  0313                     	;# 
   977  0314                     	;# 
   978  0315                     	;# 
   979  0315                     	;# 
   980  0316                     	;# 
   981  0317                     	;# 
   982  0318                     	;# 
   983  038C                     	;# 
   984  038D                     	;# 
   985  038E                     	;# 
   986  0391                     	;# 
   987  0392                     	;# 
   988  0393                     	;# 
   989  0394                     	;# 
   990  0395                     	;# 
   991  0396                     	;# 
   992  0397                     	;# 
   993  0398                     	;# 
   994  0399                     	;# 
   995  039A                     	;# 
   996  039C                     	;# 
   997  039D                     	;# 
   998  039E                     	;# 
   999  039F                     	;# 
  1000  0411                     	;# 
  1001  0411                     	;# 
  1002  0412                     	;# 
  1003  0413                     	;# 
  1004  0414                     	;# 
  1005  0415                     	;# 
  1006  0416                     	;# 
  1007  0417                     	;# 
  1008  0418                     	;# 
  1009  0418                     	;# 
  1010  0419                     	;# 
  1011  041A                     	;# 
  1012  041B                     	;# 
  1013  041C                     	;# 
  1014  041D                     	;# 
  1015  041E                     	;# 
  1016  041F                     	;# 
  1017  0498                     	;# 
  1018  0498                     	;# 
  1019  0499                     	;# 
  1020  049A                     	;# 
  1021  049B                     	;# 
  1022  049B                     	;# 
  1023  049C                     	;# 
  1024  049D                     	;# 
  1025  049E                     	;# 
  1026  049F                     	;# 
  1027  0617                     	;# 
  1028  0618                     	;# 
  1029  0619                     	;# 
  1030  0619                     	;# 
  1031  061A                     	;# 
  1032  061B                     	;# 
  1033  061C                     	;# 
  1034  061C                     	;# 
  1035  061F                     	;# 
  1036  0691                     	;# 
  1037  0692                     	;# 
  1038  0693                     	;# 
  1039  0694                     	;# 
  1040  0695                     	;# 
  1041  0696                     	;# 
  1042  0697                     	;# 
  1043  0698                     	;# 
  1044  0699                     	;# 
  1045  0711                     	;# 
  1046  0712                     	;# 
  1047  0713                     	;# 
  1048  0714                     	;# 
  1049  0715                     	;# 
  1050  0716                     	;# 
  1051  0717                     	;# 
  1052  0718                     	;# 
  1053  0719                     	;# 
  1054  0891                     	;# 
  1055  0891                     	;# 
  1056  0891                     	;# 
  1057  0891                     	;# 
  1058  0891                     	;# 
  1059  0891                     	;# 
  1060  0892                     	;# 
  1061  0892                     	;# 
  1062  0892                     	;# 
  1063  0893                     	;# 
  1064  0893                     	;# 
  1065  0893                     	;# 
  1066  0893                     	;# 
  1067  0893                     	;# 
  1068  0893                     	;# 
  1069  0894                     	;# 
  1070  0894                     	;# 
  1071  0894                     	;# 
  1072  0895                     	;# 
  1073  0895                     	;# 
  1074  0895                     	;# 
  1075  0896                     	;# 
  1076  0896                     	;# 
  1077  0896                     	;# 
  1078  089B                     	;# 
  1079  0911                     	;# 
  1080  0912                     	;# 
  1081  0913                     	;# 
  1082  0914                     	;# 
  1083  0915                     	;# 
  1084  0916                     	;# 
  1085  0918                     	;# 
  1086  0919                     	;# 
  1087  091A                     	;# 
  1088  091B                     	;# 
  1089  091C                     	;# 
  1090  091D                     	;# 
  1091  091E                     	;# 
  1092  091F                     	;# 
  1093  0E0F                     	;# 
  1094  0E10                     	;# 
  1095  0E11                     	;# 
  1096  0E12                     	;# 
  1097  0E13                     	;# 
  1098  0E14                     	;# 
  1099  0E15                     	;# 
  1100  0E16                     	;# 
  1101  0E17                     	;# 
  1102  0E18                     	;# 
  1103  0E19                     	;# 
  1104  0E1A                     	;# 
  1105  0E1B                     	;# 
  1106  0E1C                     	;# 
  1107  0E1D                     	;# 
  1108  0E1E                     	;# 
  1109  0E1F                     	;# 
  1110  0E20                     	;# 
  1111  0E21                     	;# 
  1112  0E22                     	;# 
  1113  0E24                     	;# 
  1114  0E25                     	;# 
  1115  0E28                     	;# 
  1116  0E29                     	;# 
  1117  0E2A                     	;# 
  1118  0E2B                     	;# 
  1119  0E2C                     	;# 
  1120  0E2D                     	;# 
  1121  0E2E                     	;# 
  1122  0E2F                     	;# 
  1123  0E90                     	;# 
  1124  0E91                     	;# 
  1125  0E92                     	;# 
  1126  0E94                     	;# 
  1127  0E95                     	;# 
  1128  0E9C                     	;# 
  1129  0E9D                     	;# 
  1130  0E9E                     	;# 
  1131  0E9F                     	;# 
  1132  0EA0                     	;# 
  1133  0EA1                     	;# 
  1134  0EA2                     	;# 
  1135  0EA3                     	;# 
  1136  0EA4                     	;# 
  1137  0EA5                     	;# 
  1138  0EA6                     	;# 
  1139  0EA7                     	;# 
  1140  0F0F                     	;# 
  1141  0F10                     	;# 
  1142  0F11                     	;# 
  1143  0F12                     	;# 
  1144  0F13                     	;# 
  1145  0F14                     	;# 
  1146  0F15                     	;# 
  1147  0F16                     	;# 
  1148  0F17                     	;# 
  1149  0F18                     	;# 
  1150  0F19                     	;# 
  1151  0F1A                     	;# 
  1152  0F1B                     	;# 
  1153  0F1C                     	;# 
  1154  0F1D                     	;# 
  1155  0F1E                     	;# 
  1156  0F1F                     	;# 
  1157  0F20                     	;# 
  1158  0F21                     	;# 
  1159  0F22                     	;# 
  1160  0F23                     	;# 
  1161  0F24                     	;# 
  1162  0F25                     	;# 
  1163  0F26                     	;# 
  1164  0F27                     	;# 
  1165  0F28                     	;# 
  1166  0F29                     	;# 
  1167  0F2A                     	;# 
  1168  0F2B                     	;# 
  1169  0F2C                     	;# 
  1170  0F2D                     	;# 
  1171  0F2E                     	;# 
  1172  0F2F                     	;# 
  1173  0F30                     	;# 
  1174  0F31                     	;# 
  1175  0F32                     	;# 
  1176  0F33                     	;# 
  1177  0F34                     	;# 
  1178  0F35                     	;# 
  1179  0F36                     	;# 
  1180  0F37                     	;# 
  1181  0FE4                     	;# 
  1182  0FE5                     	;# 
  1183  0FE6                     	;# 
  1184  0FE7                     	;# 
  1185  0FE8                     	;# 
  1186  0FE9                     	;# 
  1187  0FEA                     	;# 
  1188  0FEB                     	;# 
  1189  0FED                     	;# 
  1190  0FEE                     	;# 
  1191  0FEF                     	;# 
  1192  0000                     	;# 
  1193  0001                     	;# 
  1194  0002                     	;# 
  1195  0003                     	;# 
  1196  0004                     	;# 
  1197  0005                     	;# 
  1198  0006                     	;# 
  1199  0007                     	;# 
  1200  0008                     	;# 
  1201  0009                     	;# 
  1202  000A                     	;# 
  1203  000B                     	;# 
  1204  000C                     	;# 
  1205  000D                     	;# 
  1206  000E                     	;# 
  1207  0010                     	;# 
  1208  0011                     	;# 
  1209  0012                     	;# 
  1210  0013                     	;# 
  1211  0014                     	;# 
  1212  0015                     	;# 
  1213  0015                     	;# 
  1214  0016                     	;# 
  1215  0016                     	;# 
  1216  0017                     	;# 
  1217  0018                     	;# 
  1218  0019                     	;# 
  1219  0019                     	;# 
  1220  001A                     	;# 
  1221  001B                     	;# 
  1222  001C                     	;# 
  1223  001D                     	;# 
  1224  001E                     	;# 
  1225  001F                     	;# 
  1226  008C                     	;# 
  1227  008D                     	;# 
  1228  008E                     	;# 
  1229  0090                     	;# 
  1230  0091                     	;# 
  1231  0092                     	;# 
  1232  0093                     	;# 
  1233  0094                     	;# 
  1234  0097                     	;# 
  1235  009B                     	;# 
  1236  009B                     	;# 
  1237  009C                     	;# 
  1238  009D                     	;# 
  1239  009E                     	;# 
  1240  009F                     	;# 
  1241  010C                     	;# 
  1242  010D                     	;# 
  1243  010E                     	;# 
  1244  0111                     	;# 
  1245  0112                     	;# 
  1246  0113                     	;# 
  1247  0114                     	;# 
  1248  0115                     	;# 
  1249  0116                     	;# 
  1250  0117                     	;# 
  1251  0118                     	;# 
  1252  0119                     	;# 
  1253  018C                     	;# 
  1254  018D                     	;# 
  1255  018E                     	;# 
  1256  0197                     	;# 
  1257  0199                     	;# 
  1258  0199                     	;# 
  1259  0199                     	;# 
  1260  019A                     	;# 
  1261  019A                     	;# 
  1262  019A                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019B                     	;# 
  1267  019B                     	;# 
  1268  019C                     	;# 
  1269  019C                     	;# 
  1270  019C                     	;# 
  1271  019D                     	;# 
  1272  019D                     	;# 
  1273  019D                     	;# 
  1274  019E                     	;# 
  1275  019E                     	;# 
  1276  019E                     	;# 
  1277  019F                     	;# 
  1278  019F                     	;# 
  1279  019F                     	;# 
  1280  019F                     	;# 
  1281  019F                     	;# 
  1282  020C                     	;# 
  1283  020D                     	;# 
  1284  020E                     	;# 
  1285  0211                     	;# 
  1286  0211                     	;# 
  1287  0212                     	;# 
  1288  0212                     	;# 
  1289  0213                     	;# 
  1290  0213                     	;# 
  1291  0214                     	;# 
  1292  0214                     	;# 
  1293  0215                     	;# 
  1294  0215                     	;# 
  1295  0215                     	;# 
  1296  0215                     	;# 
  1297  0216                     	;# 
  1298  0216                     	;# 
  1299  0217                     	;# 
  1300  0217                     	;# 
  1301  0219                     	;# 
  1302  021A                     	;# 
  1303  021B                     	;# 
  1304  021C                     	;# 
  1305  021D                     	;# 
  1306  021D                     	;# 
  1307  021E                     	;# 
  1308  021F                     	;# 
  1309  028C                     	;# 
  1310  028D                     	;# 
  1311  028E                     	;# 
  1312  0291                     	;# 
  1313  0291                     	;# 
  1314  0292                     	;# 
  1315  0293                     	;# 
  1316  0294                     	;# 
  1317  0295                     	;# 
  1318  0295                     	;# 
  1319  0296                     	;# 
  1320  0297                     	;# 
  1321  0298                     	;# 
  1322  029F                     	;# 
  1323  030C                     	;# 
  1324  030D                     	;# 
  1325  030E                     	;# 
  1326  0311                     	;# 
  1327  0311                     	;# 
  1328  0312                     	;# 
  1329  0313                     	;# 
  1330  0314                     	;# 
  1331  0315                     	;# 
  1332  0315                     	;# 
  1333  0316                     	;# 
  1334  0317                     	;# 
  1335  0318                     	;# 
  1336  038C                     	;# 
  1337  038D                     	;# 
  1338  038E                     	;# 
  1339  0391                     	;# 
  1340  0392                     	;# 
  1341  0393                     	;# 
  1342  0394                     	;# 
  1343  0395                     	;# 
  1344  0396                     	;# 
  1345  0397                     	;# 
  1346  0398                     	;# 
  1347  0399                     	;# 
  1348  039A                     	;# 
  1349  039C                     	;# 
  1350  039D                     	;# 
  1351  039E                     	;# 
  1352  039F                     	;# 
  1353  0411                     	;# 
  1354  0411                     	;# 
  1355  0412                     	;# 
  1356  0413                     	;# 
  1357  0414                     	;# 
  1358  0415                     	;# 
  1359  0416                     	;# 
  1360  0417                     	;# 
  1361  0418                     	;# 
  1362  0418                     	;# 
  1363  0419                     	;# 
  1364  041A                     	;# 
  1365  041B                     	;# 
  1366  041C                     	;# 
  1367  041D                     	;# 
  1368  041E                     	;# 
  1369  041F                     	;# 
  1370  0498                     	;# 
  1371  0498                     	;# 
  1372  0499                     	;# 
  1373  049A                     	;# 
  1374  049B                     	;# 
  1375  049B                     	;# 
  1376  049C                     	;# 
  1377  049D                     	;# 
  1378  049E                     	;# 
  1379  049F                     	;# 
  1380  0617                     	;# 
  1381  0618                     	;# 
  1382  0619                     	;# 
  1383  0619                     	;# 
  1384  061A                     	;# 
  1385  061B                     	;# 
  1386  061C                     	;# 
  1387  061C                     	;# 
  1388  061F                     	;# 
  1389  0691                     	;# 
  1390  0692                     	;# 
  1391  0693                     	;# 
  1392  0694                     	;# 
  1393  0695                     	;# 
  1394  0696                     	;# 
  1395  0697                     	;# 
  1396  0698                     	;# 
  1397  0699                     	;# 
  1398  0711                     	;# 
  1399  0712                     	;# 
  1400  0713                     	;# 
  1401  0714                     	;# 
  1402  0715                     	;# 
  1403  0716                     	;# 
  1404  0717                     	;# 
  1405  0718                     	;# 
  1406  0719                     	;# 
  1407  0891                     	;# 
  1408  0891                     	;# 
  1409  0891                     	;# 
  1410  0891                     	;# 
  1411  0891                     	;# 
  1412  0891                     	;# 
  1413  0892                     	;# 
  1414  0892                     	;# 
  1415  0892                     	;# 
  1416  0893                     	;# 
  1417  0893                     	;# 
  1418  0893                     	;# 
  1419  0893                     	;# 
  1420  0893                     	;# 
  1421  0893                     	;# 
  1422  0894                     	;# 
  1423  0894                     	;# 
  1424  0894                     	;# 
  1425  0895                     	;# 
  1426  0895                     	;# 
  1427  0895                     	;# 
  1428  0896                     	;# 
  1429  0896                     	;# 
  1430  0896                     	;# 
  1431  089B                     	;# 
  1432  0911                     	;# 
  1433  0912                     	;# 
  1434  0913                     	;# 
  1435  0914                     	;# 
  1436  0915                     	;# 
  1437  0916                     	;# 
  1438  0918                     	;# 
  1439  0919                     	;# 
  1440  091A                     	;# 
  1441  091B                     	;# 
  1442  091C                     	;# 
  1443  091D                     	;# 
  1444  091E                     	;# 
  1445  091F                     	;# 
  1446  0E0F                     	;# 
  1447  0E10                     	;# 
  1448  0E11                     	;# 
  1449  0E12                     	;# 
  1450  0E13                     	;# 
  1451  0E14                     	;# 
  1452  0E15                     	;# 
  1453  0E16                     	;# 
  1454  0E17                     	;# 
  1455  0E18                     	;# 
  1456  0E19                     	;# 
  1457  0E1A                     	;# 
  1458  0E1B                     	;# 
  1459  0E1C                     	;# 
  1460  0E1D                     	;# 
  1461  0E1E                     	;# 
  1462  0E1F                     	;# 
  1463  0E20                     	;# 
  1464  0E21                     	;# 
  1465  0E22                     	;# 
  1466  0E24                     	;# 
  1467  0E25                     	;# 
  1468  0E28                     	;# 
  1469  0E29                     	;# 
  1470  0E2A                     	;# 
  1471  0E2B                     	;# 
  1472  0E2C                     	;# 
  1473  0E2D                     	;# 
  1474  0E2E                     	;# 
  1475  0E2F                     	;# 
  1476  0E90                     	;# 
  1477  0E91                     	;# 
  1478  0E92                     	;# 
  1479  0E94                     	;# 
  1480  0E95                     	;# 
  1481  0E9C                     	;# 
  1482  0E9D                     	;# 
  1483  0E9E                     	;# 
  1484  0E9F                     	;# 
  1485  0EA0                     	;# 
  1486  0EA1                     	;# 
  1487  0EA2                     	;# 
  1488  0EA3                     	;# 
  1489  0EA4                     	;# 
  1490  0EA5                     	;# 
  1491  0EA6                     	;# 
  1492  0EA7                     	;# 
  1493  0F0F                     	;# 
  1494  0F10                     	;# 
  1495  0F11                     	;# 
  1496  0F12                     	;# 
  1497  0F13                     	;# 
  1498  0F14                     	;# 
  1499  0F15                     	;# 
  1500  0F16                     	;# 
  1501  0F17                     	;# 
  1502  0F18                     	;# 
  1503  0F19                     	;# 
  1504  0F1A                     	;# 
  1505  0F1B                     	;# 
  1506  0F1C                     	;# 
  1507  0F1D                     	;# 
  1508  0F1E                     	;# 
  1509  0F1F                     	;# 
  1510  0F20                     	;# 
  1511  0F21                     	;# 
  1512  0F22                     	;# 
  1513  0F23                     	;# 
  1514  0F24                     	;# 
  1515  0F25                     	;# 
  1516  0F26                     	;# 
  1517  0F27                     	;# 
  1518  0F28                     	;# 
  1519  0F29                     	;# 
  1520  0F2A                     	;# 
  1521  0F2B                     	;# 
  1522  0F2C                     	;# 
  1523  0F2D                     	;# 
  1524  0F2E                     	;# 
  1525  0F2F                     	;# 
  1526  0F30                     	;# 
  1527  0F31                     	;# 
  1528  0F32                     	;# 
  1529  0F33                     	;# 
  1530  0F34                     	;# 
  1531  0F35                     	;# 
  1532  0F36                     	;# 
  1533  0F37                     	;# 
  1534  0FE4                     	;# 
  1535  0FE5                     	;# 
  1536  0FE6                     	;# 
  1537  0FE7                     	;# 
  1538  0FE8                     	;# 
  1539  0FE9                     	;# 
  1540  0FEA                     	;# 
  1541  0FEB                     	;# 
  1542  0FED                     	;# 
  1543  0FEE                     	;# 
  1544  0FEF                     	;# 
  1545  0000                     	;# 
  1546  0001                     	;# 
  1547  0002                     	;# 
  1548  0003                     	;# 
  1549  0004                     	;# 
  1550  0005                     	;# 
  1551  0006                     	;# 
  1552  0007                     	;# 
  1553  0008                     	;# 
  1554  0009                     	;# 
  1555  000A                     	;# 
  1556  000B                     	;# 
  1557  000C                     	;# 
  1558  000D                     	;# 
  1559  000E                     	;# 
  1560  0010                     	;# 
  1561  0011                     	;# 
  1562  0012                     	;# 
  1563  0013                     	;# 
  1564  0014                     	;# 
  1565  0015                     	;# 
  1566  0015                     	;# 
  1567  0016                     	;# 
  1568  0016                     	;# 
  1569  0017                     	;# 
  1570  0018                     	;# 
  1571  0019                     	;# 
  1572  0019                     	;# 
  1573  001A                     	;# 
  1574  001B                     	;# 
  1575  001C                     	;# 
  1576  001D                     	;# 
  1577  001E                     	;# 
  1578  001F                     	;# 
  1579  008C                     	;# 
  1580  008D                     	;# 
  1581  008E                     	;# 
  1582  0090                     	;# 
  1583  0091                     	;# 
  1584  0092                     	;# 
  1585  0093                     	;# 
  1586  0094                     	;# 
  1587  0097                     	;# 
  1588  009B                     	;# 
  1589  009B                     	;# 
  1590  009C                     	;# 
  1591  009D                     	;# 
  1592  009E                     	;# 
  1593  009F                     	;# 
  1594  010C                     	;# 
  1595  010D                     	;# 
  1596  010E                     	;# 
  1597  0111                     	;# 
  1598  0112                     	;# 
  1599  0113                     	;# 
  1600  0114                     	;# 
  1601  0115                     	;# 
  1602  0116                     	;# 
  1603  0117                     	;# 
  1604  0118                     	;# 
  1605  0119                     	;# 
  1606  018C                     	;# 
  1607  018D                     	;# 
  1608  018E                     	;# 
  1609  0197                     	;# 
  1610  0199                     	;# 
  1611  0199                     	;# 
  1612  0199                     	;# 
  1613  019A                     	;# 
  1614  019A                     	;# 
  1615  019A                     	;# 
  1616  019B                     	;# 
  1617  019B                     	;# 
  1618  019B                     	;# 
  1619  019B                     	;# 
  1620  019B                     	;# 
  1621  019C                     	;# 
  1622  019C                     	;# 
  1623  019C                     	;# 
  1624  019D                     	;# 
  1625  019D                     	;# 
  1626  019D                     	;# 
  1627  019E                     	;# 
  1628  019E                     	;# 
  1629  019E                     	;# 
  1630  019F                     	;# 
  1631  019F                     	;# 
  1632  019F                     	;# 
  1633  019F                     	;# 
  1634  019F                     	;# 
  1635  020C                     	;# 
  1636  020D                     	;# 
  1637  020E                     	;# 
  1638  0211                     	;# 
  1639  0211                     	;# 
  1640  0212                     	;# 
  1641  0212                     	;# 
  1642  0213                     	;# 
  1643  0213                     	;# 
  1644  0214                     	;# 
  1645  0214                     	;# 
  1646  0215                     	;# 
  1647  0215                     	;# 
  1648  0215                     	;# 
  1649  0215                     	;# 
  1650  0216                     	;# 
  1651  0216                     	;# 
  1652  0217                     	;# 
  1653  0217                     	;# 
  1654  0219                     	;# 
  1655  021A                     	;# 
  1656  021B                     	;# 
  1657  021C                     	;# 
  1658  021D                     	;# 
  1659  021D                     	;# 
  1660  021E                     	;# 
  1661  021F                     	;# 
  1662  028C                     	;# 
  1663  028D                     	;# 
  1664  028E                     	;# 
  1665  0291                     	;# 
  1666  0291                     	;# 
  1667  0292                     	;# 
  1668  0293                     	;# 
  1669  0294                     	;# 
  1670  0295                     	;# 
  1671  0295                     	;# 
  1672  0296                     	;# 
  1673  0297                     	;# 
  1674  0298                     	;# 
  1675  029F                     	;# 
  1676  030C                     	;# 
  1677  030D                     	;# 
  1678  030E                     	;# 
  1679  0311                     	;# 
  1680  0311                     	;# 
  1681  0312                     	;# 
  1682  0313                     	;# 
  1683  0314                     	;# 
  1684  0315                     	;# 
  1685  0315                     	;# 
  1686  0316                     	;# 
  1687  0317                     	;# 
  1688  0318                     	;# 
  1689  038C                     	;# 
  1690  038D                     	;# 
  1691  038E                     	;# 
  1692  0391                     	;# 
  1693  0392                     	;# 
  1694  0393                     	;# 
  1695  0394                     	;# 
  1696  0395                     	;# 
  1697  0396                     	;# 
  1698  0397                     	;# 
  1699  0398                     	;# 
  1700  0399                     	;# 
  1701  039A                     	;# 
  1702  039C                     	;# 
  1703  039D                     	;# 
  1704  039E                     	;# 
  1705  039F                     	;# 
  1706  0411                     	;# 
  1707  0411                     	;# 
  1708  0412                     	;# 
  1709  0413                     	;# 
  1710  0414                     	;# 
  1711  0415                     	;# 
  1712  0416                     	;# 
  1713  0417                     	;# 
  1714  0418                     	;# 
  1715  0418                     	;# 
  1716  0419                     	;# 
  1717  041A                     	;# 
  1718  041B                     	;# 
  1719  041C                     	;# 
  1720  041D                     	;# 
  1721  041E                     	;# 
  1722  041F                     	;# 
  1723  0498                     	;# 
  1724  0498                     	;# 
  1725  0499                     	;# 
  1726  049A                     	;# 
  1727  049B                     	;# 
  1728  049B                     	;# 
  1729  049C                     	;# 
  1730  049D                     	;# 
  1731  049E                     	;# 
  1732  049F                     	;# 
  1733  0617                     	;# 
  1734  0618                     	;# 
  1735  0619                     	;# 
  1736  0619                     	;# 
  1737  061A                     	;# 
  1738  061B                     	;# 
  1739  061C                     	;# 
  1740  061C                     	;# 
  1741  061F                     	;# 
  1742  0691                     	;# 
  1743  0692                     	;# 
  1744  0693                     	;# 
  1745  0694                     	;# 
  1746  0695                     	;# 
  1747  0696                     	;# 
  1748  0697                     	;# 
  1749  0698                     	;# 
  1750  0699                     	;# 
  1751  0711                     	;# 
  1752  0712                     	;# 
  1753  0713                     	;# 
  1754  0714                     	;# 
  1755  0715                     	;# 
  1756  0716                     	;# 
  1757  0717                     	;# 
  1758  0718                     	;# 
  1759  0719                     	;# 
  1760  0891                     	;# 
  1761  0891                     	;# 
  1762  0891                     	;# 
  1763  0891                     	;# 
  1764  0891                     	;# 
  1765  0891                     	;# 
  1766  0892                     	;# 
  1767  0892                     	;# 
  1768  0892                     	;# 
  1769  0893                     	;# 
  1770  0893                     	;# 
  1771  0893                     	;# 
  1772  0893                     	;# 
  1773  0893                     	;# 
  1774  0893                     	;# 
  1775  0894                     	;# 
  1776  0894                     	;# 
  1777  0894                     	;# 
  1778  0895                     	;# 
  1779  0895                     	;# 
  1780  0895                     	;# 
  1781  0896                     	;# 
  1782  0896                     	;# 
  1783  0896                     	;# 
  1784  089B                     	;# 
  1785  0911                     	;# 
  1786  0912                     	;# 
  1787  0913                     	;# 
  1788  0914                     	;# 
  1789  0915                     	;# 
  1790  0916                     	;# 
  1791  0918                     	;# 
  1792  0919                     	;# 
  1793  091A                     	;# 
  1794  091B                     	;# 
  1795  091C                     	;# 
  1796  091D                     	;# 
  1797  091E                     	;# 
  1798  091F                     	;# 
  1799  0E0F                     	;# 
  1800  0E10                     	;# 
  1801  0E11                     	;# 
  1802  0E12                     	;# 
  1803  0E13                     	;# 
  1804  0E14                     	;# 
  1805  0E15                     	;# 
  1806  0E16                     	;# 
  1807  0E17                     	;# 
  1808  0E18                     	;# 
  1809  0E19                     	;# 
  1810  0E1A                     	;# 
  1811  0E1B                     	;# 
  1812  0E1C                     	;# 
  1813  0E1D                     	;# 
  1814  0E1E                     	;# 
  1815  0E1F                     	;# 
  1816  0E20                     	;# 
  1817  0E21                     	;# 
  1818  0E22                     	;# 
  1819  0E24                     	;# 
  1820  0E25                     	;# 
  1821  0E28                     	;# 
  1822  0E29                     	;# 
  1823  0E2A                     	;# 
  1824  0E2B                     	;# 
  1825  0E2C                     	;# 
  1826  0E2D                     	;# 
  1827  0E2E                     	;# 
  1828  0E2F                     	;# 
  1829  0E90                     	;# 
  1830  0E91                     	;# 
  1831  0E92                     	;# 
  1832  0E94                     	;# 
  1833  0E95                     	;# 
  1834  0E9C                     	;# 
  1835  0E9D                     	;# 
  1836  0E9E                     	;# 
  1837  0E9F                     	;# 
  1838  0EA0                     	;# 
  1839  0EA1                     	;# 
  1840  0EA2                     	;# 
  1841  0EA3                     	;# 
  1842  0EA4                     	;# 
  1843  0EA5                     	;# 
  1844  0EA6                     	;# 
  1845  0EA7                     	;# 
  1846  0F0F                     	;# 
  1847  0F10                     	;# 
  1848  0F11                     	;# 
  1849  0F12                     	;# 
  1850  0F13                     	;# 
  1851  0F14                     	;# 
  1852  0F15                     	;# 
  1853  0F16                     	;# 
  1854  0F17                     	;# 
  1855  0F18                     	;# 
  1856  0F19                     	;# 
  1857  0F1A                     	;# 
  1858  0F1B                     	;# 
  1859  0F1C                     	;# 
  1860  0F1D                     	;# 
  1861  0F1E                     	;# 
  1862  0F1F                     	;# 
  1863  0F20                     	;# 
  1864  0F21                     	;# 
  1865  0F22                     	;# 
  1866  0F23                     	;# 
  1867  0F24                     	;# 
  1868  0F25                     	;# 
  1869  0F26                     	;# 
  1870  0F27                     	;# 
  1871  0F28                     	;# 
  1872  0F29                     	;# 
  1873  0F2A                     	;# 
  1874  0F2B                     	;# 
  1875  0F2C                     	;# 
  1876  0F2D                     	;# 
  1877  0F2E                     	;# 
  1878  0F2F                     	;# 
  1879  0F30                     	;# 
  1880  0F31                     	;# 
  1881  0F32                     	;# 
  1882  0F33                     	;# 
  1883  0F34                     	;# 
  1884  0F35                     	;# 
  1885  0F36                     	;# 
  1886  0F37                     	;# 
  1887  0FE4                     	;# 
  1888  0FE5                     	;# 
  1889  0FE6                     	;# 
  1890  0FE7                     	;# 
  1891  0FE8                     	;# 
  1892  0FE9                     	;# 
  1893  0FEA                     	;# 
  1894  0FEB                     	;# 
  1895  0FED                     	;# 
  1896  0FEE                     	;# 
  1897  0FEF                     	;# 
  1898  0000                     	;# 
  1899  0001                     	;# 
  1900  0002                     	;# 
  1901  0003                     	;# 
  1902  0004                     	;# 
  1903  0005                     	;# 
  1904  0006                     	;# 
  1905  0007                     	;# 
  1906  0008                     	;# 
  1907  0009                     	;# 
  1908  000A                     	;# 
  1909  000B                     	;# 
  1910  000C                     	;# 
  1911  000D                     	;# 
  1912  000E                     	;# 
  1913  0010                     	;# 
  1914  0011                     	;# 
  1915  0012                     	;# 
  1916  0013                     	;# 
  1917  0014                     	;# 
  1918  0015                     	;# 
  1919  0015                     	;# 
  1920  0016                     	;# 
  1921  0016                     	;# 
  1922  0017                     	;# 
  1923  0018                     	;# 
  1924  0019                     	;# 
  1925  0019                     	;# 
  1926  001A                     	;# 
  1927  001B                     	;# 
  1928  001C                     	;# 
  1929  001D                     	;# 
  1930  001E                     	;# 
  1931  001F                     	;# 
  1932  008C                     	;# 
  1933  008D                     	;# 
  1934  008E                     	;# 
  1935  0090                     	;# 
  1936  0091                     	;# 
  1937  0092                     	;# 
  1938  0093                     	;# 
  1939  0094                     	;# 
  1940  0097                     	;# 
  1941  009B                     	;# 
  1942  009B                     	;# 
  1943  009C                     	;# 
  1944  009D                     	;# 
  1945  009E                     	;# 
  1946  009F                     	;# 
  1947  010C                     	;# 
  1948  010D                     	;# 
  1949  010E                     	;# 
  1950  0111                     	;# 
  1951  0112                     	;# 
  1952  0113                     	;# 
  1953  0114                     	;# 
  1954  0115                     	;# 
  1955  0116                     	;# 
  1956  0117                     	;# 
  1957  0118                     	;# 
  1958  0119                     	;# 
  1959  018C                     	;# 
  1960  018D                     	;# 
  1961  018E                     	;# 
  1962  0197                     	;# 
  1963  0199                     	;# 
  1964  0199                     	;# 
  1965  0199                     	;# 
  1966  019A                     	;# 
  1967  019A                     	;# 
  1968  019A                     	;# 
  1969  019B                     	;# 
  1970  019B                     	;# 
  1971  019B                     	;# 
  1972  019B                     	;# 
  1973  019B                     	;# 
  1974  019C                     	;# 
  1975  019C                     	;# 
  1976  019C                     	;# 
  1977  019D                     	;# 
  1978  019D                     	;# 
  1979  019D                     	;# 
  1980  019E                     	;# 
  1981  019E                     	;# 
  1982  019E                     	;# 
  1983  019F                     	;# 
  1984  019F                     	;# 
  1985  019F                     	;# 
  1986  019F                     	;# 
  1987  019F                     	;# 
  1988  020C                     	;# 
  1989  020D                     	;# 
  1990  020E                     	;# 
  1991  0211                     	;# 
  1992  0211                     	;# 
  1993  0212                     	;# 
  1994  0212                     	;# 
  1995  0213                     	;# 
  1996  0213                     	;# 
  1997  0214                     	;# 
  1998  0214                     	;# 
  1999  0215                     	;# 
  2000  0215                     	;# 
  2001  0215                     	;# 
  2002  0215                     	;# 
  2003  0216                     	;# 
  2004  0216                     	;# 
  2005  0217                     	;# 
  2006  0217                     	;# 
  2007  0219                     	;# 
  2008  021A                     	;# 
  2009  021B                     	;# 
  2010  021C                     	;# 
  2011  021D                     	;# 
  2012  021D                     	;# 
  2013  021E                     	;# 
  2014  021F                     	;# 
  2015  028C                     	;# 
  2016  028D                     	;# 
  2017  028E                     	;# 
  2018  0291                     	;# 
  2019  0291                     	;# 
  2020  0292                     	;# 
  2021  0293                     	;# 
  2022  0294                     	;# 
  2023  0295                     	;# 
  2024  0295                     	;# 
  2025  0296                     	;# 
  2026  0297                     	;# 
  2027  0298                     	;# 
  2028  029F                     	;# 
  2029  030C                     	;# 
  2030  030D                     	;# 
  2031  030E                     	;# 
  2032  0311                     	;# 
  2033  0311                     	;# 
  2034  0312                     	;# 
  2035  0313                     	;# 
  2036  0314                     	;# 
  2037  0315                     	;# 
  2038  0315                     	;# 
  2039  0316                     	;# 
  2040  0317                     	;# 
  2041  0318                     	;# 
  2042  038C                     	;# 
  2043  038D                     	;# 
  2044  038E                     	;# 
  2045  0391                     	;# 
  2046  0392                     	;# 
  2047  0393                     	;# 
  2048  0394                     	;# 
  2049  0395                     	;# 
  2050  0396                     	;# 
  2051  0397                     	;# 
  2052  0398                     	;# 
  2053  0399                     	;# 
  2054  039A                     	;# 
  2055  039C                     	;# 
  2056  039D                     	;# 
  2057  039E                     	;# 
  2058  039F                     	;# 
  2059  0411                     	;# 
  2060  0411                     	;# 
  2061  0412                     	;# 
  2062  0413                     	;# 
  2063  0414                     	;# 
  2064  0415                     	;# 
  2065  0416                     	;# 
  2066  0417                     	;# 
  2067  0418                     	;# 
  2068  0418                     	;# 
  2069  0419                     	;# 
  2070  041A                     	;# 
  2071  041B                     	;# 
  2072  041C                     	;# 
  2073  041D                     	;# 
  2074  041E                     	;# 
  2075  041F                     	;# 
  2076  0498                     	;# 
  2077  0498                     	;# 
  2078  0499                     	;# 
  2079  049A                     	;# 
  2080  049B                     	;# 
  2081  049B                     	;# 
  2082  049C                     	;# 
  2083  049D                     	;# 
  2084  049E                     	;# 
  2085  049F                     	;# 
  2086  0617                     	;# 
  2087  0618                     	;# 
  2088  0619                     	;# 
  2089  0619                     	;# 
  2090  061A                     	;# 
  2091  061B                     	;# 
  2092  061C                     	;# 
  2093  061C                     	;# 
  2094  061F                     	;# 
  2095  0691                     	;# 
  2096  0692                     	;# 
  2097  0693                     	;# 
  2098  0694                     	;# 
  2099  0695                     	;# 
  2100  0696                     	;# 
  2101  0697                     	;# 
  2102  0698                     	;# 
  2103  0699                     	;# 
  2104  0711                     	;# 
  2105  0712                     	;# 
  2106  0713                     	;# 
  2107  0714                     	;# 
  2108  0715                     	;# 
  2109  0716                     	;# 
  2110  0717                     	;# 
  2111  0718                     	;# 
  2112  0719                     	;# 
  2113  0891                     	;# 
  2114  0891                     	;# 
  2115  0891                     	;# 
  2116  0891                     	;# 
  2117  0891                     	;# 
  2118  0891                     	;# 
  2119  0892                     	;# 
  2120  0892                     	;# 
  2121  0892                     	;# 
  2122  0893                     	;# 
  2123  0893                     	;# 
  2124  0893                     	;# 
  2125  0893                     	;# 
  2126  0893                     	;# 
  2127  0893                     	;# 
  2128  0894                     	;# 
  2129  0894                     	;# 
  2130  0894                     	;# 
  2131  0895                     	;# 
  2132  0895                     	;# 
  2133  0895                     	;# 
  2134  0896                     	;# 
  2135  0896                     	;# 
  2136  0896                     	;# 
  2137  089B                     	;# 
  2138  0911                     	;# 
  2139  0912                     	;# 
  2140  0913                     	;# 
  2141  0914                     	;# 
  2142  0915                     	;# 
  2143  0916                     	;# 
  2144  0918                     	;# 
  2145  0919                     	;# 
  2146  091A                     	;# 
  2147  091B                     	;# 
  2148  091C                     	;# 
  2149  091D                     	;# 
  2150  091E                     	;# 
  2151  091F                     	;# 
  2152  0E0F                     	;# 
  2153  0E10                     	;# 
  2154  0E11                     	;# 
  2155  0E12                     	;# 
  2156  0E13                     	;# 
  2157  0E14                     	;# 
  2158  0E15                     	;# 
  2159  0E16                     	;# 
  2160  0E17                     	;# 
  2161  0E18                     	;# 
  2162  0E19                     	;# 
  2163  0E1A                     	;# 
  2164  0E1B                     	;# 
  2165  0E1C                     	;# 
  2166  0E1D                     	;# 
  2167  0E1E                     	;# 
  2168  0E1F                     	;# 
  2169  0E20                     	;# 
  2170  0E21                     	;# 
  2171  0E22                     	;# 
  2172  0E24                     	;# 
  2173  0E25                     	;# 
  2174  0E28                     	;# 
  2175  0E29                     	;# 
  2176  0E2A                     	;# 
  2177  0E2B                     	;# 
  2178  0E2C                     	;# 
  2179  0E2D                     	;# 
  2180  0E2E                     	;# 
  2181  0E2F                     	;# 
  2182  0E90                     	;# 
  2183  0E91                     	;# 
  2184  0E92                     	;# 
  2185  0E94                     	;# 
  2186  0E95                     	;# 
  2187  0E9C                     	;# 
  2188  0E9D                     	;# 
  2189  0E9E                     	;# 
  2190  0E9F                     	;# 
  2191  0EA0                     	;# 
  2192  0EA1                     	;# 
  2193  0EA2                     	;# 
  2194  0EA3                     	;# 
  2195  0EA4                     	;# 
  2196  0EA5                     	;# 
  2197  0EA6                     	;# 
  2198  0EA7                     	;# 
  2199  0F0F                     	;# 
  2200  0F10                     	;# 
  2201  0F11                     	;# 
  2202  0F12                     	;# 
  2203  0F13                     	;# 
  2204  0F14                     	;# 
  2205  0F15                     	;# 
  2206  0F16                     	;# 
  2207  0F17                     	;# 
  2208  0F18                     	;# 
  2209  0F19                     	;# 
  2210  0F1A                     	;# 
  2211  0F1B                     	;# 
  2212  0F1C                     	;# 
  2213  0F1D                     	;# 
  2214  0F1E                     	;# 
  2215  0F1F                     	;# 
  2216  0F20                     	;# 
  2217  0F21                     	;# 
  2218  0F22                     	;# 
  2219  0F23                     	;# 
  2220  0F24                     	;# 
  2221  0F25                     	;# 
  2222  0F26                     	;# 
  2223  0F27                     	;# 
  2224  0F28                     	;# 
  2225  0F29                     	;# 
  2226  0F2A                     	;# 
  2227  0F2B                     	;# 
  2228  0F2C                     	;# 
  2229  0F2D                     	;# 
  2230  0F2E                     	;# 
  2231  0F2F                     	;# 
  2232  0F30                     	;# 
  2233  0F31                     	;# 
  2234  0F32                     	;# 
  2235  0F33                     	;# 
  2236  0F34                     	;# 
  2237  0F35                     	;# 
  2238  0F36                     	;# 
  2239  0F37                     	;# 
  2240  0FE4                     	;# 
  2241  0FE5                     	;# 
  2242  0FE6                     	;# 
  2243  0FE7                     	;# 
  2244  0FE8                     	;# 
  2245  0FE9                     	;# 
  2246  0FEA                     	;# 
  2247  0FEB                     	;# 
  2248  0FED                     	;# 
  2249  0FEE                     	;# 
  2250  0FEF                     	;# 
  2251  0000                     	;# 
  2252  0001                     	;# 
  2253  0002                     	;# 
  2254  0003                     	;# 
  2255  0004                     	;# 
  2256  0005                     	;# 
  2257  0006                     	;# 
  2258  0007                     	;# 
  2259  0008                     	;# 
  2260  0009                     	;# 
  2261  000A                     	;# 
  2262  000B                     	;# 
  2263  000C                     	;# 
  2264  000D                     	;# 
  2265  000E                     	;# 
  2266  0010                     	;# 
  2267  0011                     	;# 
  2268  0012                     	;# 
  2269  0013                     	;# 
  2270  0014                     	;# 
  2271  0015                     	;# 
  2272  0015                     	;# 
  2273  0016                     	;# 
  2274  0016                     	;# 
  2275  0017                     	;# 
  2276  0018                     	;# 
  2277  0019                     	;# 
  2278  0019                     	;# 
  2279  001A                     	;# 
  2280  001B                     	;# 
  2281  001C                     	;# 
  2282  001D                     	;# 
  2283  001E                     	;# 
  2284  001F                     	;# 
  2285  008C                     	;# 
  2286  008D                     	;# 
  2287  008E                     	;# 
  2288  0090                     	;# 
  2289  0091                     	;# 
  2290  0092                     	;# 
  2291  0093                     	;# 
  2292  0094                     	;# 
  2293  0097                     	;# 
  2294  009B                     	;# 
  2295  009B                     	;# 
  2296  009C                     	;# 
  2297  009D                     	;# 
  2298  009E                     	;# 
  2299  009F                     	;# 
  2300  010C                     	;# 
  2301  010D                     	;# 
  2302  010E                     	;# 
  2303  0111                     	;# 
  2304  0112                     	;# 
  2305  0113                     	;# 
  2306  0114                     	;# 
  2307  0115                     	;# 
  2308  0116                     	;# 
  2309  0117                     	;# 
  2310  0118                     	;# 
  2311  0119                     	;# 
  2312  018C                     	;# 
  2313  018D                     	;# 
  2314  018E                     	;# 
  2315  0197                     	;# 
  2316  0199                     	;# 
  2317  0199                     	;# 
  2318  0199                     	;# 
  2319  019A                     	;# 
  2320  019A                     	;# 
  2321  019A                     	;# 
  2322  019B                     	;# 
  2323  019B                     	;# 
  2324  019B                     	;# 
  2325  019B                     	;# 
  2326  019B                     	;# 
  2327  019C                     	;# 
  2328  019C                     	;# 
  2329  019C                     	;# 
  2330  019D                     	;# 
  2331  019D                     	;# 
  2332  019D                     	;# 
  2333  019E                     	;# 
  2334  019E                     	;# 
  2335  019E                     	;# 
  2336  019F                     	;# 
  2337  019F                     	;# 
  2338  019F                     	;# 
  2339  019F                     	;# 
  2340  019F                     	;# 
  2341  020C                     	;# 
  2342  020D                     	;# 
  2343  020E                     	;# 
  2344  0211                     	;# 
  2345  0211                     	;# 
  2346  0212                     	;# 
  2347  0212                     	;# 
  2348  0213                     	;# 
  2349  0213                     	;# 
  2350  0214                     	;# 
  2351  0214                     	;# 
  2352  0215                     	;# 
  2353  0215                     	;# 
  2354  0215                     	;# 
  2355  0215                     	;# 
  2356  0216                     	;# 
  2357  0216                     	;# 
  2358  0217                     	;# 
  2359  0217                     	;# 
  2360  0219                     	;# 
  2361  021A                     	;# 
  2362  021B                     	;# 
  2363  021C                     	;# 
  2364  021D                     	;# 
  2365  021D                     	;# 
  2366  021E                     	;# 
  2367  021F                     	;# 
  2368  028C                     	;# 
  2369  028D                     	;# 
  2370  028E                     	;# 
  2371  0291                     	;# 
  2372  0291                     	;# 
  2373  0292                     	;# 
  2374  0293                     	;# 
  2375  0294                     	;# 
  2376  0295                     	;# 
  2377  0295                     	;# 
  2378  0296                     	;# 
  2379  0297                     	;# 
  2380  0298                     	;# 
  2381  029F                     	;# 
  2382  030C                     	;# 
  2383  030D                     	;# 
  2384  030E                     	;# 
  2385  0311                     	;# 
  2386  0311                     	;# 
  2387  0312                     	;# 
  2388  0313                     	;# 
  2389  0314                     	;# 
  2390  0315                     	;# 
  2391  0315                     	;# 
  2392  0316                     	;# 
  2393  0317                     	;# 
  2394  0318                     	;# 
  2395  038C                     	;# 
  2396  038D                     	;# 
  2397  038E                     	;# 
  2398  0391                     	;# 
  2399  0392                     	;# 
  2400  0393                     	;# 
  2401  0394                     	;# 
  2402  0395                     	;# 
  2403  0396                     	;# 
  2404  0397                     	;# 
  2405  0398                     	;# 
  2406  0399                     	;# 
  2407  039A                     	;# 
  2408  039C                     	;# 
  2409  039D                     	;# 
  2410  039E                     	;# 
  2411  039F                     	;# 
  2412  0411                     	;# 
  2413  0411                     	;# 
  2414  0412                     	;# 
  2415  0413                     	;# 
  2416  0414                     	;# 
  2417  0415                     	;# 
  2418  0416                     	;# 
  2419  0417                     	;# 
  2420  0418                     	;# 
  2421  0418                     	;# 
  2422  0419                     	;# 
  2423  041A                     	;# 
  2424  041B                     	;# 
  2425  041C                     	;# 
  2426  041D                     	;# 
  2427  041E                     	;# 
  2428  041F                     	;# 
  2429  0498                     	;# 
  2430  0498                     	;# 
  2431  0499                     	;# 
  2432  049A                     	;# 
  2433  049B                     	;# 
  2434  049B                     	;# 
  2435  049C                     	;# 
  2436  049D                     	;# 
  2437  049E                     	;# 
  2438  049F                     	;# 
  2439  0617                     	;# 
  2440  0618                     	;# 
  2441  0619                     	;# 
  2442  0619                     	;# 
  2443  061A                     	;# 
  2444  061B                     	;# 
  2445  061C                     	;# 
  2446  061C                     	;# 
  2447  061F                     	;# 
  2448  0691                     	;# 
  2449  0692                     	;# 
  2450  0693                     	;# 
  2451  0694                     	;# 
  2452  0695                     	;# 
  2453  0696                     	;# 
  2454  0697                     	;# 
  2455  0698                     	;# 
  2456  0699                     	;# 
  2457  0711                     	;# 
  2458  0712                     	;# 
  2459  0713                     	;# 
  2460  0714                     	;# 
  2461  0715                     	;# 
  2462  0716                     	;# 
  2463  0717                     	;# 
  2464  0718                     	;# 
  2465  0719                     	;# 
  2466  0891                     	;# 
  2467  0891                     	;# 
  2468  0891                     	;# 
  2469  0891                     	;# 
  2470  0891                     	;# 
  2471  0891                     	;# 
  2472  0892                     	;# 
  2473  0892                     	;# 
  2474  0892                     	;# 
  2475  0893                     	;# 
  2476  0893                     	;# 
  2477  0893                     	;# 
  2478  0893                     	;# 
  2479  0893                     	;# 
  2480  0893                     	;# 
  2481  0894                     	;# 
  2482  0894                     	;# 
  2483  0894                     	;# 
  2484  0895                     	;# 
  2485  0895                     	;# 
  2486  0895                     	;# 
  2487  0896                     	;# 
  2488  0896                     	;# 
  2489  0896                     	;# 
  2490  089B                     	;# 
  2491  0911                     	;# 
  2492  0912                     	;# 
  2493  0913                     	;# 
  2494  0914                     	;# 
  2495  0915                     	;# 
  2496  0916                     	;# 
  2497  0918                     	;# 
  2498  0919                     	;# 
  2499  091A                     	;# 
  2500  091B                     	;# 
  2501  091C                     	;# 
  2502  091D                     	;# 
  2503  091E                     	;# 
  2504  091F                     	;# 
  2505  0E0F                     	;# 
  2506  0E10                     	;# 
  2507  0E11                     	;# 
  2508  0E12                     	;# 
  2509  0E13                     	;# 
  2510  0E14                     	;# 
  2511  0E15                     	;# 
  2512  0E16                     	;# 
  2513  0E17                     	;# 
  2514  0E18                     	;# 
  2515  0E19                     	;# 
  2516  0E1A                     	;# 
  2517  0E1B                     	;# 
  2518  0E1C                     	;# 
  2519  0E1D                     	;# 
  2520  0E1E                     	;# 
  2521  0E1F                     	;# 
  2522  0E20                     	;# 
  2523  0E21                     	;# 
  2524  0E22                     	;# 
  2525  0E24                     	;# 
  2526  0E25                     	;# 
  2527  0E28                     	;# 
  2528  0E29                     	;# 
  2529  0E2A                     	;# 
  2530  0E2B                     	;# 
  2531  0E2C                     	;# 
  2532  0E2D                     	;# 
  2533  0E2E                     	;# 
  2534  0E2F                     	;# 
  2535  0E90                     	;# 
  2536  0E91                     	;# 
  2537  0E92                     	;# 
  2538  0E94                     	;# 
  2539  0E95                     	;# 
  2540  0E9C                     	;# 
  2541  0E9D                     	;# 
  2542  0E9E                     	;# 
  2543  0E9F                     	;# 
  2544  0EA0                     	;# 
  2545  0EA1                     	;# 
  2546  0EA2                     	;# 
  2547  0EA3                     	;# 
  2548  0EA4                     	;# 
  2549  0EA5                     	;# 
  2550  0EA6                     	;# 
  2551  0EA7                     	;# 
  2552  0F0F                     	;# 
  2553  0F10                     	;# 
  2554  0F11                     	;# 
  2555  0F12                     	;# 
  2556  0F13                     	;# 
  2557  0F14                     	;# 
  2558  0F15                     	;# 
  2559  0F16                     	;# 
  2560  0F17                     	;# 
  2561  0F18                     	;# 
  2562  0F19                     	;# 
  2563  0F1A                     	;# 
  2564  0F1B                     	;# 
  2565  0F1C                     	;# 
  2566  0F1D                     	;# 
  2567  0F1E                     	;# 
  2568  0F1F                     	;# 
  2569  0F20                     	;# 
  2570  0F21                     	;# 
  2571  0F22                     	;# 
  2572  0F23                     	;# 
  2573  0F24                     	;# 
  2574  0F25                     	;# 
  2575  0F26                     	;# 
  2576  0F27                     	;# 
  2577  0F28                     	;# 
  2578  0F29                     	;# 
  2579  0F2A                     	;# 
  2580  0F2B                     	;# 
  2581  0F2C                     	;# 
  2582  0F2D                     	;# 
  2583  0F2E                     	;# 
  2584  0F2F                     	;# 
  2585  0F30                     	;# 
  2586  0F31                     	;# 
  2587  0F32                     	;# 
  2588  0F33                     	;# 
  2589  0F34                     	;# 
  2590  0F35                     	;# 
  2591  0F36                     	;# 
  2592  0F37                     	;# 
  2593  0FE4                     	;# 
  2594  0FE5                     	;# 
  2595  0FE6                     	;# 
  2596  0FE7                     	;# 
  2597  0FE8                     	;# 
  2598  0FE9                     	;# 
  2599  0FEA                     	;# 
  2600  0FEB                     	;# 
  2601  0FED                     	;# 
  2602  0FEE                     	;# 
  2603  0FEF                     	;# 
  2604  0000                     	;# 
  2605  0001                     	;# 
  2606  0002                     	;# 
  2607  0003                     	;# 
  2608  0004                     	;# 
  2609  0005                     	;# 
  2610  0006                     	;# 
  2611  0007                     	;# 
  2612  0008                     	;# 
  2613  0009                     	;# 
  2614  000A                     	;# 
  2615  000B                     	;# 
  2616  000C                     	;# 
  2617  000D                     	;# 
  2618  000E                     	;# 
  2619  0010                     	;# 
  2620  0011                     	;# 
  2621  0012                     	;# 
  2622  0013                     	;# 
  2623  0014                     	;# 
  2624  0015                     	;# 
  2625  0015                     	;# 
  2626  0016                     	;# 
  2627  0016                     	;# 
  2628  0017                     	;# 
  2629  0018                     	;# 
  2630  0019                     	;# 
  2631  0019                     	;# 
  2632  001A                     	;# 
  2633  001B                     	;# 
  2634  001C                     	;# 
  2635  001D                     	;# 
  2636  001E                     	;# 
  2637  001F                     	;# 
  2638  008C                     	;# 
  2639  008D                     	;# 
  2640  008E                     	;# 
  2641  0090                     	;# 
  2642  0091                     	;# 
  2643  0092                     	;# 
  2644  0093                     	;# 
  2645  0094                     	;# 
  2646  0097                     	;# 
  2647  009B                     	;# 
  2648  009B                     	;# 
  2649  009C                     	;# 
  2650  009D                     	;# 
  2651  009E                     	;# 
  2652  009F                     	;# 
  2653  010C                     	;# 
  2654  010D                     	;# 
  2655  010E                     	;# 
  2656  0111                     	;# 
  2657  0112                     	;# 
  2658  0113                     	;# 
  2659  0114                     	;# 
  2660  0115                     	;# 
  2661  0116                     	;# 
  2662  0117                     	;# 
  2663  0118                     	;# 
  2664  0119                     	;# 
  2665  018C                     	;# 
  2666  018D                     	;# 
  2667  018E                     	;# 
  2668  0197                     	;# 
  2669  0199                     	;# 
  2670  0199                     	;# 
  2671  0199                     	;# 
  2672  019A                     	;# 
  2673  019A                     	;# 
  2674  019A                     	;# 
  2675  019B                     	;# 
  2676  019B                     	;# 
  2677  019B                     	;# 
  2678  019B                     	;# 
  2679  019B                     	;# 
  2680  019C                     	;# 
  2681  019C                     	;# 
  2682  019C                     	;# 
  2683  019D                     	;# 
  2684  019D                     	;# 
  2685  019D                     	;# 
  2686  019E                     	;# 
  2687  019E                     	;# 
  2688  019E                     	;# 
  2689  019F                     	;# 
  2690  019F                     	;# 
  2691  019F                     	;# 
  2692  019F                     	;# 
  2693  019F                     	;# 
  2694  020C                     	;# 
  2695  020D                     	;# 
  2696  020E                     	;# 
  2697  0211                     	;# 
  2698  0211                     	;# 
  2699  0212                     	;# 
  2700  0212                     	;# 
  2701  0213                     	;# 
  2702  0213                     	;# 
  2703  0214                     	;# 
  2704  0214                     	;# 
  2705  0215                     	;# 
  2706  0215                     	;# 
  2707  0215                     	;# 
  2708  0215                     	;# 
  2709  0216                     	;# 
  2710  0216                     	;# 
  2711  0217                     	;# 
  2712  0217                     	;# 
  2713  0219                     	;# 
  2714  021A                     	;# 
  2715  021B                     	;# 
  2716  021C                     	;# 
  2717  021D                     	;# 
  2718  021D                     	;# 
  2719  021E                     	;# 
  2720  021F                     	;# 
  2721  028C                     	;# 
  2722  028D                     	;# 
  2723  028E                     	;# 
  2724  0291                     	;# 
  2725  0291                     	;# 
  2726  0292                     	;# 
  2727  0293                     	;# 
  2728  0294                     	;# 
  2729  0295                     	;# 
  2730  0295                     	;# 
  2731  0296                     	;# 
  2732  0297                     	;# 
  2733  0298                     	;# 
  2734  029F                     	;# 
  2735  030C                     	;# 
  2736  030D                     	;# 
  2737  030E                     	;# 
  2738  0311                     	;# 
  2739  0311                     	;# 
  2740  0312                     	;# 
  2741  0313                     	;# 
  2742  0314                     	;# 
  2743  0315                     	;# 
  2744  0315                     	;# 
  2745  0316                     	;# 
  2746  0317                     	;# 
  2747  0318                     	;# 
  2748  038C                     	;# 
  2749  038D                     	;# 
  2750  038E                     	;# 
  2751  0391                     	;# 
  2752  0392                     	;# 
  2753  0393                     	;# 
  2754  0394                     	;# 
  2755  0395                     	;# 
  2756  0396                     	;# 
  2757  0397                     	;# 
  2758  0398                     	;# 
  2759  0399                     	;# 
  2760  039A                     	;# 
  2761  039C                     	;# 
  2762  039D                     	;# 
  2763  039E                     	;# 
  2764  039F                     	;# 
  2765  0411                     	;# 
  2766  0411                     	;# 
  2767  0412                     	;# 
  2768  0413                     	;# 
  2769  0414                     	;# 
  2770  0415                     	;# 
  2771  0416                     	;# 
  2772  0417                     	;# 
  2773  0418                     	;# 
  2774  0418                     	;# 
  2775  0419                     	;# 
  2776  041A                     	;# 
  2777  041B                     	;# 
  2778  041C                     	;# 
  2779  041D                     	;# 
  2780  041E                     	;# 
  2781  041F                     	;# 
  2782  0498                     	;# 
  2783  0498                     	;# 
  2784  0499                     	;# 
  2785  049A                     	;# 
  2786  049B                     	;# 
  2787  049B                     	;# 
  2788  049C                     	;# 
  2789  049D                     	;# 
  2790  049E                     	;# 
  2791  049F                     	;# 
  2792  0617                     	;# 
  2793  0618                     	;# 
  2794  0619                     	;# 
  2795  0619                     	;# 
  2796  061A                     	;# 
  2797  061B                     	;# 
  2798  061C                     	;# 
  2799  061C                     	;# 
  2800  061F                     	;# 
  2801  0691                     	;# 
  2802  0692                     	;# 
  2803  0693                     	;# 
  2804  0694                     	;# 
  2805  0695                     	;# 
  2806  0696                     	;# 
  2807  0697                     	;# 
  2808  0698                     	;# 
  2809  0699                     	;# 
  2810  0711                     	;# 
  2811  0712                     	;# 
  2812  0713                     	;# 
  2813  0714                     	;# 
  2814  0715                     	;# 
  2815  0716                     	;# 
  2816  0717                     	;# 
  2817  0718                     	;# 
  2818  0719                     	;# 
  2819  0891                     	;# 
  2820  0891                     	;# 
  2821  0891                     	;# 
  2822  0891                     	;# 
  2823  0891                     	;# 
  2824  0891                     	;# 
  2825  0892                     	;# 
  2826  0892                     	;# 
  2827  0892                     	;# 
  2828  0893                     	;# 
  2829  0893                     	;# 
  2830  0893                     	;# 
  2831  0893                     	;# 
  2832  0893                     	;# 
  2833  0893                     	;# 
  2834  0894                     	;# 
  2835  0894                     	;# 
  2836  0894                     	;# 
  2837  0895                     	;# 
  2838  0895                     	;# 
  2839  0895                     	;# 
  2840  0896                     	;# 
  2841  0896                     	;# 
  2842  0896                     	;# 
  2843  089B                     	;# 
  2844  0911                     	;# 
  2845  0912                     	;# 
  2846  0913                     	;# 
  2847  0914                     	;# 
  2848  0915                     	;# 
  2849  0916                     	;# 
  2850  0918                     	;# 
  2851  0919                     	;# 
  2852  091A                     	;# 
  2853  091B                     	;# 
  2854  091C                     	;# 
  2855  091D                     	;# 
  2856  091E                     	;# 
  2857  091F                     	;# 
  2858  0E0F                     	;# 
  2859  0E10                     	;# 
  2860  0E11                     	;# 
  2861  0E12                     	;# 
  2862  0E13                     	;# 
  2863  0E14                     	;# 
  2864  0E15                     	;# 
  2865  0E16                     	;# 
  2866  0E17                     	;# 
  2867  0E18                     	;# 
  2868  0E19                     	;# 
  2869  0E1A                     	;# 
  2870  0E1B                     	;# 
  2871  0E1C                     	;# 
  2872  0E1D                     	;# 
  2873  0E1E                     	;# 
  2874  0E1F                     	;# 
  2875  0E20                     	;# 
  2876  0E21                     	;# 
  2877  0E22                     	;# 
  2878  0E24                     	;# 
  2879  0E25                     	;# 
  2880  0E28                     	;# 
  2881  0E29                     	;# 
  2882  0E2A                     	;# 
  2883  0E2B                     	;# 
  2884  0E2C                     	;# 
  2885  0E2D                     	;# 
  2886  0E2E                     	;# 
  2887  0E2F                     	;# 
  2888  0E90                     	;# 
  2889  0E91                     	;# 
  2890  0E92                     	;# 
  2891  0E94                     	;# 
  2892  0E95                     	;# 
  2893  0E9C                     	;# 
  2894  0E9D                     	;# 
  2895  0E9E                     	;# 
  2896  0E9F                     	;# 
  2897  0EA0                     	;# 
  2898  0EA1                     	;# 
  2899  0EA2                     	;# 
  2900  0EA3                     	;# 
  2901  0EA4                     	;# 
  2902  0EA5                     	;# 
  2903  0EA6                     	;# 
  2904  0EA7                     	;# 
  2905  0F0F                     	;# 
  2906  0F10                     	;# 
  2907  0F11                     	;# 
  2908  0F12                     	;# 
  2909  0F13                     	;# 
  2910  0F14                     	;# 
  2911  0F15                     	;# 
  2912  0F16                     	;# 
  2913  0F17                     	;# 
  2914  0F18                     	;# 
  2915  0F19                     	;# 
  2916  0F1A                     	;# 
  2917  0F1B                     	;# 
  2918  0F1C                     	;# 
  2919  0F1D                     	;# 
  2920  0F1E                     	;# 
  2921  0F1F                     	;# 
  2922  0F20                     	;# 
  2923  0F21                     	;# 
  2924  0F22                     	;# 
  2925  0F23                     	;# 
  2926  0F24                     	;# 
  2927  0F25                     	;# 
  2928  0F26                     	;# 
  2929  0F27                     	;# 
  2930  0F28                     	;# 
  2931  0F29                     	;# 
  2932  0F2A                     	;# 
  2933  0F2B                     	;# 
  2934  0F2C                     	;# 
  2935  0F2D                     	;# 
  2936  0F2E                     	;# 
  2937  0F2F                     	;# 
  2938  0F30                     	;# 
  2939  0F31                     	;# 
  2940  0F32                     	;# 
  2941  0F33                     	;# 
  2942  0F34                     	;# 
  2943  0F35                     	;# 
  2944  0F36                     	;# 
  2945  0F37                     	;# 
  2946  0FE4                     	;# 
  2947  0FE5                     	;# 
  2948  0FE6                     	;# 
  2949  0FE7                     	;# 
  2950  0FE8                     	;# 
  2951  0FE9                     	;# 
  2952  0FEA                     	;# 
  2953  0FEB                     	;# 
  2954  0FED                     	;# 
  2955  0FEE                     	;# 
  2956  0FEF                     	;# 
  2957  0000                     	;# 
  2958  0001                     	;# 
  2959  0002                     	;# 
  2960  0003                     	;# 
  2961  0004                     	;# 
  2962  0005                     	;# 
  2963  0006                     	;# 
  2964  0007                     	;# 
  2965  0008                     	;# 
  2966  0009                     	;# 
  2967  000A                     	;# 
  2968  000B                     	;# 
  2969  000C                     	;# 
  2970  000D                     	;# 
  2971  000E                     	;# 
  2972  0010                     	;# 
  2973  0011                     	;# 
  2974  0012                     	;# 
  2975  0013                     	;# 
  2976  0014                     	;# 
  2977  0015                     	;# 
  2978  0015                     	;# 
  2979  0016                     	;# 
  2980  0016                     	;# 
  2981  0017                     	;# 
  2982  0018                     	;# 
  2983  0019                     	;# 
  2984  0019                     	;# 
  2985  001A                     	;# 
  2986  001B                     	;# 
  2987  001C                     	;# 
  2988  001D                     	;# 
  2989  001E                     	;# 
  2990  001F                     	;# 
  2991  008C                     	;# 
  2992  008D                     	;# 
  2993  008E                     	;# 
  2994  0090                     	;# 
  2995  0091                     	;# 
  2996  0092                     	;# 
  2997  0093                     	;# 
  2998  0094                     	;# 
  2999  0097                     	;# 
  3000  009B                     	;# 
  3001  009B                     	;# 
  3002  009C                     	;# 
  3003  009D                     	;# 
  3004  009E                     	;# 
  3005  009F                     	;# 
  3006  010C                     	;# 
  3007  010D                     	;# 
  3008  010E                     	;# 
  3009  0111                     	;# 
  3010  0112                     	;# 
  3011  0113                     	;# 
  3012  0114                     	;# 
  3013  0115                     	;# 
  3014  0116                     	;# 
  3015  0117                     	;# 
  3016  0118                     	;# 
  3017  0119                     	;# 
  3018  018C                     	;# 
  3019  018D                     	;# 
  3020  018E                     	;# 
  3021  0197                     	;# 
  3022  0199                     	;# 
  3023  0199                     	;# 
  3024  0199                     	;# 
  3025  019A                     	;# 
  3026  019A                     	;# 
  3027  019A                     	;# 
  3028  019B                     	;# 
  3029  019B                     	;# 
  3030  019B                     	;# 
  3031  019B                     	;# 
  3032  019B                     	;# 
  3033  019C                     	;# 
  3034  019C                     	;# 
  3035  019C                     	;# 
  3036  019D                     	;# 
  3037  019D                     	;# 
  3038  019D                     	;# 
  3039  019E                     	;# 
  3040  019E                     	;# 
  3041  019E                     	;# 
  3042  019F                     	;# 
  3043  019F                     	;# 
  3044  019F                     	;# 
  3045  019F                     	;# 
  3046  019F                     	;# 
  3047  020C                     	;# 
  3048  020D                     	;# 
  3049  020E                     	;# 
  3050  0211                     	;# 
  3051  0211                     	;# 
  3052  0212                     	;# 
  3053  0212                     	;# 
  3054  0213                     	;# 
  3055  0213                     	;# 
  3056  0214                     	;# 
  3057  0214                     	;# 
  3058  0215                     	;# 
  3059  0215                     	;# 
  3060  0215                     	;# 
  3061  0215                     	;# 
  3062  0216                     	;# 
  3063  0216                     	;# 
  3064  0217                     	;# 
  3065  0217                     	;# 
  3066  0219                     	;# 
  3067  021A                     	;# 
  3068  021B                     	;# 
  3069  021C                     	;# 
  3070  021D                     	;# 
  3071  021D                     	;# 
  3072  021E                     	;# 
  3073  021F                     	;# 
  3074  028C                     	;# 
  3075  028D                     	;# 
  3076  028E                     	;# 
  3077  0291                     	;# 
  3078  0291                     	;# 
  3079  0292                     	;# 
  3080  0293                     	;# 
  3081  0294                     	;# 
  3082  0295                     	;# 
  3083  0295                     	;# 
  3084  0296                     	;# 
  3085  0297                     	;# 
  3086  0298                     	;# 
  3087  029F                     	;# 
  3088  030C                     	;# 
  3089  030D                     	;# 
  3090  030E                     	;# 
  3091  0311                     	;# 
  3092  0311                     	;# 
  3093  0312                     	;# 
  3094  0313                     	;# 
  3095  0314                     	;# 
  3096  0315                     	;# 
  3097  0315                     	;# 
  3098  0316                     	;# 
  3099  0317                     	;# 
  3100  0318                     	;# 
  3101  038C                     	;# 
  3102  038D                     	;# 
  3103  038E                     	;# 
  3104  0391                     	;# 
  3105  0392                     	;# 
  3106  0393                     	;# 
  3107  0394                     	;# 
  3108  0395                     	;# 
  3109  0396                     	;# 
  3110  0397                     	;# 
  3111  0398                     	;# 
  3112  0399                     	;# 
  3113  039A                     	;# 
  3114  039C                     	;# 
  3115  039D                     	;# 
  3116  039E                     	;# 
  3117  039F                     	;# 
  3118  0411                     	;# 
  3119  0411                     	;# 
  3120  0412                     	;# 
  3121  0413                     	;# 
  3122  0414                     	;# 
  3123  0415                     	;# 
  3124  0416                     	;# 
  3125  0417                     	;# 
  3126  0418                     	;# 
  3127  0418                     	;# 
  3128  0419                     	;# 
  3129  041A                     	;# 
  3130  041B                     	;# 
  3131  041C                     	;# 
  3132  041D                     	;# 
  3133  041E                     	;# 
  3134  041F                     	;# 
  3135  0498                     	;# 
  3136  0498                     	;# 
  3137  0499                     	;# 
  3138  049A                     	;# 
  3139  049B                     	;# 
  3140  049B                     	;# 
  3141  049C                     	;# 
  3142  049D                     	;# 
  3143  049E                     	;# 
  3144  049F                     	;# 
  3145  0617                     	;# 
  3146  0618                     	;# 
  3147  0619                     	;# 
  3148  0619                     	;# 
  3149  061A                     	;# 
  3150  061B                     	;# 
  3151  061C                     	;# 
  3152  061C                     	;# 
  3153  061F                     	;# 
  3154  0691                     	;# 
  3155  0692                     	;# 
  3156  0693                     	;# 
  3157  0694                     	;# 
  3158  0695                     	;# 
  3159  0696                     	;# 
  3160  0697                     	;# 
  3161  0698                     	;# 
  3162  0699                     	;# 
  3163  0711                     	;# 
  3164  0712                     	;# 
  3165  0713                     	;# 
  3166  0714                     	;# 
  3167  0715                     	;# 
  3168  0716                     	;# 
  3169  0717                     	;# 
  3170  0718                     	;# 
  3171  0719                     	;# 
  3172  0891                     	;# 
  3173  0891                     	;# 
  3174  0891                     	;# 
  3175  0891                     	;# 
  3176  0891                     	;# 
  3177  0891                     	;# 
  3178  0892                     	;# 
  3179  0892                     	;# 
  3180  0892                     	;# 
  3181  0893                     	;# 
  3182  0893                     	;# 
  3183  0893                     	;# 
  3184  0893                     	;# 
  3185  0893                     	;# 
  3186  0893                     	;# 
  3187  0894                     	;# 
  3188  0894                     	;# 
  3189  0894                     	;# 
  3190  0895                     	;# 
  3191  0895                     	;# 
  3192  0895                     	;# 
  3193  0896                     	;# 
  3194  0896                     	;# 
  3195  0896                     	;# 
  3196  089B                     	;# 
  3197  0911                     	;# 
  3198  0912                     	;# 
  3199  0913                     	;# 
  3200  0914                     	;# 
  3201  0915                     	;# 
  3202  0916                     	;# 
  3203  0918                     	;# 
  3204  0919                     	;# 
  3205  091A                     	;# 
  3206  091B                     	;# 
  3207  091C                     	;# 
  3208  091D                     	;# 
  3209  091E                     	;# 
  3210  091F                     	;# 
  3211  0E0F                     	;# 
  3212  0E10                     	;# 
  3213  0E11                     	;# 
  3214  0E12                     	;# 
  3215  0E13                     	;# 
  3216  0E14                     	;# 
  3217  0E15                     	;# 
  3218  0E16                     	;# 
  3219  0E17                     	;# 
  3220  0E18                     	;# 
  3221  0E19                     	;# 
  3222  0E1A                     	;# 
  3223  0E1B                     	;# 
  3224  0E1C                     	;# 
  3225  0E1D                     	;# 
  3226  0E1E                     	;# 
  3227  0E1F                     	;# 
  3228  0E20                     	;# 
  3229  0E21                     	;# 
  3230  0E22                     	;# 
  3231  0E24                     	;# 
  3232  0E25                     	;# 
  3233  0E28                     	;# 
  3234  0E29                     	;# 
  3235  0E2A                     	;# 
  3236  0E2B                     	;# 
  3237  0E2C                     	;# 
  3238  0E2D                     	;# 
  3239  0E2E                     	;# 
  3240  0E2F                     	;# 
  3241  0E90                     	;# 
  3242  0E91                     	;# 
  3243  0E92                     	;# 
  3244  0E94                     	;# 
  3245  0E95                     	;# 
  3246  0E9C                     	;# 
  3247  0E9D                     	;# 
  3248  0E9E                     	;# 
  3249  0E9F                     	;# 
  3250  0EA0                     	;# 
  3251  0EA1                     	;# 
  3252  0EA2                     	;# 
  3253  0EA3                     	;# 
  3254  0EA4                     	;# 
  3255  0EA5                     	;# 
  3256  0EA6                     	;# 
  3257  0EA7                     	;# 
  3258  0F0F                     	;# 
  3259  0F10                     	;# 
  3260  0F11                     	;# 
  3261  0F12                     	;# 
  3262  0F13                     	;# 
  3263  0F14                     	;# 
  3264  0F15                     	;# 
  3265  0F16                     	;# 
  3266  0F17                     	;# 
  3267  0F18                     	;# 
  3268  0F19                     	;# 
  3269  0F1A                     	;# 
  3270  0F1B                     	;# 
  3271  0F1C                     	;# 
  3272  0F1D                     	;# 
  3273  0F1E                     	;# 
  3274  0F1F                     	;# 
  3275  0F20                     	;# 
  3276  0F21                     	;# 
  3277  0F22                     	;# 
  3278  0F23                     	;# 
  3279  0F24                     	;# 
  3280  0F25                     	;# 
  3281  0F26                     	;# 
  3282  0F27                     	;# 
  3283  0F28                     	;# 
  3284  0F29                     	;# 
  3285  0F2A                     	;# 
  3286  0F2B                     	;# 
  3287  0F2C                     	;# 
  3288  0F2D                     	;# 
  3289  0F2E                     	;# 
  3290  0F2F                     	;# 
  3291  0F30                     	;# 
  3292  0F31                     	;# 
  3293  0F32                     	;# 
  3294  0F33                     	;# 
  3295  0F34                     	;# 
  3296  0F35                     	;# 
  3297  0F36                     	;# 
  3298  0F37                     	;# 
  3299  0FE4                     	;# 
  3300  0FE5                     	;# 
  3301  0FE6                     	;# 
  3302  0FE7                     	;# 
  3303  0FE8                     	;# 
  3304  0FE9                     	;# 
  3305  0FEA                     	;# 
  3306  0FEB                     	;# 
  3307  0FED                     	;# 
  3308  0FEE                     	;# 
  3309  0FEF                     	;# 
  3310  0000                     	;# 
  3311  0001                     	;# 
  3312  0002                     	;# 
  3313  0003                     	;# 
  3314  0004                     	;# 
  3315  0005                     	;# 
  3316  0006                     	;# 
  3317  0007                     	;# 
  3318  0008                     	;# 
  3319  0009                     	;# 
  3320  000A                     	;# 
  3321  000B                     	;# 
  3322  000C                     	;# 
  3323  000D                     	;# 
  3324  000E                     	;# 
  3325  0010                     	;# 
  3326  0011                     	;# 
  3327  0012                     	;# 
  3328  0013                     	;# 
  3329  0014                     	;# 
  3330  0015                     	;# 
  3331  0015                     	;# 
  3332  0016                     	;# 
  3333  0016                     	;# 
  3334  0017                     	;# 
  3335  0018                     	;# 
  3336  0019                     	;# 
  3337  0019                     	;# 
  3338  001A                     	;# 
  3339  001B                     	;# 
  3340  001C                     	;# 
  3341  001D                     	;# 
  3342  001E                     	;# 
  3343  001F                     	;# 
  3344  008C                     	;# 
  3345  008D                     	;# 
  3346  008E                     	;# 
  3347  0090                     	;# 
  3348  0091                     	;# 
  3349  0092                     	;# 
  3350  0093                     	;# 
  3351  0094                     	;# 
  3352  0097                     	;# 
  3353  009B                     	;# 
  3354  009B                     	;# 
  3355  009C                     	;# 
  3356  009D                     	;# 
  3357  009E                     	;# 
  3358  009F                     	;# 
  3359  010C                     	;# 
  3360  010D                     	;# 
  3361  010E                     	;# 
  3362  0111                     	;# 
  3363  0112                     	;# 
  3364  0113                     	;# 
  3365  0114                     	;# 
  3366  0115                     	;# 
  3367  0116                     	;# 
  3368  0117                     	;# 
  3369  0118                     	;# 
  3370  0119                     	;# 
  3371  018C                     	;# 
  3372  018D                     	;# 
  3373  018E                     	;# 
  3374  0197                     	;# 
  3375  0199                     	;# 
  3376  0199                     	;# 
  3377  0199                     	;# 
  3378  019A                     	;# 
  3379  019A                     	;# 
  3380  019A                     	;# 
  3381  019B                     	;# 
  3382  019B                     	;# 
  3383  019B                     	;# 
  3384  019B                     	;# 
  3385  019B                     	;# 
  3386  019C                     	;# 
  3387  019C                     	;# 
  3388  019C                     	;# 
  3389  019D                     	;# 
  3390  019D                     	;# 
  3391  019D                     	;# 
  3392  019E                     	;# 
  3393  019E                     	;# 
  3394  019E                     	;# 
  3395  019F                     	;# 
  3396  019F                     	;# 
  3397  019F                     	;# 
  3398  019F                     	;# 
  3399  019F                     	;# 
  3400  020C                     	;# 
  3401  020D                     	;# 
  3402  020E                     	;# 
  3403  0211                     	;# 
  3404  0211                     	;# 
  3405  0212                     	;# 
  3406  0212                     	;# 
  3407  0213                     	;# 
  3408  0213                     	;# 
  3409  0214                     	;# 
  3410  0214                     	;# 
  3411  0215                     	;# 
  3412  0215                     	;# 
  3413  0215                     	;# 
  3414  0215                     	;# 
  3415  0216                     	;# 
  3416  0216                     	;# 
  3417  0217                     	;# 
  3418  0217                     	;# 
  3419  0219                     	;# 
  3420  021A                     	;# 
  3421  021B                     	;# 
  3422  021C                     	;# 
  3423  021D                     	;# 
  3424  021D                     	;# 
  3425  021E                     	;# 
  3426  021F                     	;# 
  3427  028C                     	;# 
  3428  028D                     	;# 
  3429  028E                     	;# 
  3430  0291                     	;# 
  3431  0291                     	;# 
  3432  0292                     	;# 
  3433  0293                     	;# 
  3434  0294                     	;# 
  3435  0295                     	;# 
  3436  0295                     	;# 
  3437  0296                     	;# 
  3438  0297                     	;# 
  3439  0298                     	;# 
  3440  029F                     	;# 
  3441  030C                     	;# 
  3442  030D                     	;# 
  3443  030E                     	;# 
  3444  0311                     	;# 
  3445  0311                     	;# 
  3446  0312                     	;# 
  3447  0313                     	;# 
  3448  0314                     	;# 
  3449  0315                     	;# 
  3450  0315                     	;# 
  3451  0316                     	;# 
  3452  0317                     	;# 
  3453  0318                     	;# 
  3454  038C                     	;# 
  3455  038D                     	;# 
  3456  038E                     	;# 
  3457  0391                     	;# 
  3458  0392                     	;# 
  3459  0393                     	;# 
  3460  0394                     	;# 
  3461  0395                     	;# 
  3462  0396                     	;# 
  3463  0397                     	;# 
  3464  0398                     	;# 
  3465  0399                     	;# 
  3466  039A                     	;# 
  3467  039C                     	;# 
  3468  039D                     	;# 
  3469  039E                     	;# 
  3470  039F                     	;# 
  3471  0411                     	;# 
  3472  0411                     	;# 
  3473  0412                     	;# 
  3474  0413                     	;# 
  3475  0414                     	;# 
  3476  0415                     	;# 
  3477  0416                     	;# 
  3478  0417                     	;# 
  3479  0418                     	;# 
  3480  0418                     	;# 
  3481  0419                     	;# 
  3482  041A                     	;# 
  3483  041B                     	;# 
  3484  041C                     	;# 
  3485  041D                     	;# 
  3486  041E                     	;# 
  3487  041F                     	;# 
  3488  0498                     	;# 
  3489  0498                     	;# 
  3490  0499                     	;# 
  3491  049A                     	;# 
  3492  049B                     	;# 
  3493  049B                     	;# 
  3494  049C                     	;# 
  3495  049D                     	;# 
  3496  049E                     	;# 
  3497  049F                     	;# 
  3498  0617                     	;# 
  3499  0618                     	;# 
  3500  0619                     	;# 
  3501  0619                     	;# 
  3502  061A                     	;# 
  3503  061B                     	;# 
  3504  061C                     	;# 
  3505  061C                     	;# 
  3506  061F                     	;# 
  3507  0691                     	;# 
  3508  0692                     	;# 
  3509  0693                     	;# 
  3510  0694                     	;# 
  3511  0695                     	;# 
  3512  0696                     	;# 
  3513  0697                     	;# 
  3514  0698                     	;# 
  3515  0699                     	;# 
  3516  0711                     	;# 
  3517  0712                     	;# 
  3518  0713                     	;# 
  3519  0714                     	;# 
  3520  0715                     	;# 
  3521  0716                     	;# 
  3522  0717                     	;# 
  3523  0718                     	;# 
  3524  0719                     	;# 
  3525  0891                     	;# 
  3526  0891                     	;# 
  3527  0891                     	;# 
  3528  0891                     	;# 
  3529  0891                     	;# 
  3530  0891                     	;# 
  3531  0892                     	;# 
  3532  0892                     	;# 
  3533  0892                     	;# 
  3534  0893                     	;# 
  3535  0893                     	;# 
  3536  0893                     	;# 
  3537  0893                     	;# 
  3538  0893                     	;# 
  3539  0893                     	;# 
  3540  0894                     	;# 
  3541  0894                     	;# 
  3542  0894                     	;# 
  3543  0895                     	;# 
  3544  0895                     	;# 
  3545  0895                     	;# 
  3546  0896                     	;# 
  3547  0896                     	;# 
  3548  0896                     	;# 
  3549  089B                     	;# 
  3550  0911                     	;# 
  3551  0912                     	;# 
  3552  0913                     	;# 
  3553  0914                     	;# 
  3554  0915                     	;# 
  3555  0916                     	;# 
  3556  0918                     	;# 
  3557  0919                     	;# 
  3558  091A                     	;# 
  3559  091B                     	;# 
  3560  091C                     	;# 
  3561  091D                     	;# 
  3562  091E                     	;# 
  3563  091F                     	;# 
  3564  0E0F                     	;# 
  3565  0E10                     	;# 
  3566  0E11                     	;# 
  3567  0E12                     	;# 
  3568  0E13                     	;# 
  3569  0E14                     	;# 
  3570  0E15                     	;# 
  3571  0E16                     	;# 
  3572  0E17                     	;# 
  3573  0E18                     	;# 
  3574  0E19                     	;# 
  3575  0E1A                     	;# 
  3576  0E1B                     	;# 
  3577  0E1C                     	;# 
  3578  0E1D                     	;# 
  3579  0E1E                     	;# 
  3580  0E1F                     	;# 
  3581  0E20                     	;# 
  3582  0E21                     	;# 
  3583  0E22                     	;# 
  3584  0E24                     	;# 
  3585  0E25                     	;# 
  3586  0E28                     	;# 
  3587  0E29                     	;# 
  3588  0E2A                     	;# 
  3589  0E2B                     	;# 
  3590  0E2C                     	;# 
  3591  0E2D                     	;# 
  3592  0E2E                     	;# 
  3593  0E2F                     	;# 
  3594  0E90                     	;# 
  3595  0E91                     	;# 
  3596  0E92                     	;# 
  3597  0E94                     	;# 
  3598  0E95                     	;# 
  3599  0E9C                     	;# 
  3600  0E9D                     	;# 
  3601  0E9E                     	;# 
  3602  0E9F                     	;# 
  3603  0EA0                     	;# 
  3604  0EA1                     	;# 
  3605  0EA2                     	;# 
  3606  0EA3                     	;# 
  3607  0EA4                     	;# 
  3608  0EA5                     	;# 
  3609  0EA6                     	;# 
  3610  0EA7                     	;# 
  3611  0F0F                     	;# 
  3612  0F10                     	;# 
  3613  0F11                     	;# 
  3614  0F12                     	;# 
  3615  0F13                     	;# 
  3616  0F14                     	;# 
  3617  0F15                     	;# 
  3618  0F16                     	;# 
  3619  0F17                     	;# 
  3620  0F18                     	;# 
  3621  0F19                     	;# 
  3622  0F1A                     	;# 
  3623  0F1B                     	;# 
  3624  0F1C                     	;# 
  3625  0F1D                     	;# 
  3626  0F1E                     	;# 
  3627  0F1F                     	;# 
  3628  0F20                     	;# 
  3629  0F21                     	;# 
  3630  0F22                     	;# 
  3631  0F23                     	;# 
  3632  0F24                     	;# 
  3633  0F25                     	;# 
  3634  0F26                     	;# 
  3635  0F27                     	;# 
  3636  0F28                     	;# 
  3637  0F29                     	;# 
  3638  0F2A                     	;# 
  3639  0F2B                     	;# 
  3640  0F2C                     	;# 
  3641  0F2D                     	;# 
  3642  0F2E                     	;# 
  3643  0F2F                     	;# 
  3644  0F30                     	;# 
  3645  0F31                     	;# 
  3646  0F32                     	;# 
  3647  0F33                     	;# 
  3648  0F34                     	;# 
  3649  0F35                     	;# 
  3650  0F36                     	;# 
  3651  0F37                     	;# 
  3652  0FE4                     	;# 
  3653  0FE5                     	;# 
  3654  0FE6                     	;# 
  3655  0FE7                     	;# 
  3656  0FE8                     	;# 
  3657  0FE9                     	;# 
  3658  0FEA                     	;# 
  3659  0FEB                     	;# 
  3660  0FED                     	;# 
  3661  0FEE                     	;# 
  3662  0FEF                     	;# 
  3663  0000                     	;# 
  3664  0001                     	;# 
  3665  0002                     	;# 
  3666  0003                     	;# 
  3667  0004                     	;# 
  3668  0005                     	;# 
  3669  0006                     	;# 
  3670  0007                     	;# 
  3671  0008                     	;# 
  3672  0009                     	;# 
  3673  000A                     	;# 
  3674  000B                     	;# 
  3675  000C                     	;# 
  3676  000D                     	;# 
  3677  000E                     	;# 
  3678  0010                     	;# 
  3679  0011                     	;# 
  3680  0012                     	;# 
  3681  0013                     	;# 
  3682  0014                     	;# 
  3683  0015                     	;# 
  3684  0015                     	;# 
  3685  0016                     	;# 
  3686  0016                     	;# 
  3687  0017                     	;# 
  3688  0018                     	;# 
  3689  0019                     	;# 
  3690  0019                     	;# 
  3691  001A                     	;# 
  3692  001B                     	;# 
  3693  001C                     	;# 
  3694  001D                     	;# 
  3695  001E                     	;# 
  3696  001F                     	;# 
  3697  008C                     	;# 
  3698  008D                     	;# 
  3699  008E                     	;# 
  3700  0090                     	;# 
  3701  0091                     	;# 
  3702  0092                     	;# 
  3703  0093                     	;# 
  3704  0094                     	;# 
  3705  0097                     	;# 
  3706  009B                     	;# 
  3707  009B                     	;# 
  3708  009C                     	;# 
  3709  009D                     	;# 
  3710  009E                     	;# 
  3711  009F                     	;# 
  3712  010C                     	;# 
  3713  010D                     	;# 
  3714  010E                     	;# 
  3715  0111                     	;# 
  3716  0112                     	;# 
  3717  0113                     	;# 
  3718  0114                     	;# 
  3719  0115                     	;# 
  3720  0116                     	;# 
  3721  0117                     	;# 
  3722  0118                     	;# 
  3723  0119                     	;# 
  3724  018C                     	;# 
  3725  018D                     	;# 
  3726  018E                     	;# 
  3727  0197                     	;# 
  3728  0199                     	;# 
  3729  0199                     	;# 
  3730  0199                     	;# 
  3731  019A                     	;# 
  3732  019A                     	;# 
  3733  019A                     	;# 
  3734  019B                     	;# 
  3735  019B                     	;# 
  3736  019B                     	;# 
  3737  019B                     	;# 
  3738  019B                     	;# 
  3739  019C                     	;# 
  3740  019C                     	;# 
  3741  019C                     	;# 
  3742  019D                     	;# 
  3743  019D                     	;# 
  3744  019D                     	;# 
  3745  019E                     	;# 
  3746  019E                     	;# 
  3747  019E                     	;# 
  3748  019F                     	;# 
  3749  019F                     	;# 
  3750  019F                     	;# 
  3751  019F                     	;# 
  3752  019F                     	;# 
  3753  020C                     	;# 
  3754  020D                     	;# 
  3755  020E                     	;# 
  3756  0211                     	;# 
  3757  0211                     	;# 
  3758  0212                     	;# 
  3759  0212                     	;# 
  3760  0213                     	;# 
  3761  0213                     	;# 
  3762  0214                     	;# 
  3763  0214                     	;# 
  3764  0215                     	;# 
  3765  0215                     	;# 
  3766  0215                     	;# 
  3767  0215                     	;# 
  3768  0216                     	;# 
  3769  0216                     	;# 
  3770  0217                     	;# 
  3771  0217                     	;# 
  3772  0219                     	;# 
  3773  021A                     	;# 
  3774  021B                     	;# 
  3775  021C                     	;# 
  3776  021D                     	;# 
  3777  021D                     	;# 
  3778  021E                     	;# 
  3779  021F                     	;# 
  3780  028C                     	;# 
  3781  028D                     	;# 
  3782  028E                     	;# 
  3783  0291                     	;# 
  3784  0291                     	;# 
  3785  0292                     	;# 
  3786  0293                     	;# 
  3787  0294                     	;# 
  3788  0295                     	;# 
  3789  0295                     	;# 
  3790  0296                     	;# 
  3791  0297                     	;# 
  3792  0298                     	;# 
  3793  029F                     	;# 
  3794  030C                     	;# 
  3795  030D                     	;# 
  3796  030E                     	;# 
  3797  0311                     	;# 
  3798  0311                     	;# 
  3799  0312                     	;# 
  3800  0313                     	;# 
  3801  0314                     	;# 
  3802  0315                     	;# 
  3803  0315                     	;# 
  3804  0316                     	;# 
  3805  0317                     	;# 
  3806  0318                     	;# 
  3807  038C                     	;# 
  3808  038D                     	;# 
  3809  038E                     	;# 
  3810  0391                     	;# 
  3811  0392                     	;# 
  3812  0393                     	;# 
  3813  0394                     	;# 
  3814  0395                     	;# 
  3815  0396                     	;# 
  3816  0397                     	;# 
  3817  0398                     	;# 
  3818  0399                     	;# 
  3819  039A                     	;# 
  3820  039C                     	;# 
  3821  039D                     	;# 
  3822  039E                     	;# 
  3823  039F                     	;# 
  3824  0411                     	;# 
  3825  0411                     	;# 
  3826  0412                     	;# 
  3827  0413                     	;# 
  3828  0414                     	;# 
  3829  0415                     	;# 
  3830  0416                     	;# 
  3831  0417                     	;# 
  3832  0418                     	;# 
  3833  0418                     	;# 
  3834  0419                     	;# 
  3835  041A                     	;# 
  3836  041B                     	;# 
  3837  041C                     	;# 
  3838  041D                     	;# 
  3839  041E                     	;# 
  3840  041F                     	;# 
  3841  0498                     	;# 
  3842  0498                     	;# 
  3843  0499                     	;# 
  3844  049A                     	;# 
  3845  049B                     	;# 
  3846  049B                     	;# 
  3847  049C                     	;# 
  3848  049D                     	;# 
  3849  049E                     	;# 
  3850  049F                     	;# 
  3851  0617                     	;# 
  3852  0618                     	;# 
  3853  0619                     	;# 
  3854  0619                     	;# 
  3855  061A                     	;# 
  3856  061B                     	;# 
  3857  061C                     	;# 
  3858  061C                     	;# 
  3859  061F                     	;# 
  3860  0691                     	;# 
  3861  0692                     	;# 
  3862  0693                     	;# 
  3863  0694                     	;# 
  3864  0695                     	;# 
  3865  0696                     	;# 
  3866  0697                     	;# 
  3867  0698                     	;# 
  3868  0699                     	;# 
  3869  0711                     	;# 
  3870  0712                     	;# 
  3871  0713                     	;# 
  3872  0714                     	;# 
  3873  0715                     	;# 
  3874  0716                     	;# 
  3875  0717                     	;# 
  3876  0718                     	;# 
  3877  0719                     	;# 
  3878  0891                     	;# 
  3879  0891                     	;# 
  3880  0891                     	;# 
  3881  0891                     	;# 
  3882  0891                     	;# 
  3883  0891                     	;# 
  3884  0892                     	;# 
  3885  0892                     	;# 
  3886  0892                     	;# 
  3887  0893                     	;# 
  3888  0893                     	;# 
  3889  0893                     	;# 
  3890  0893                     	;# 
  3891  0893                     	;# 
  3892  0893                     	;# 
  3893  0894                     	;# 
  3894  0894                     	;# 
  3895  0894                     	;# 
  3896  0895                     	;# 
  3897  0895                     	;# 
  3898  0895                     	;# 
  3899  0896                     	;# 
  3900  0896                     	;# 
  3901  0896                     	;# 
  3902  089B                     	;# 
  3903  0911                     	;# 
  3904  0912                     	;# 
  3905  0913                     	;# 
  3906  0914                     	;# 
  3907  0915                     	;# 
  3908  0916                     	;# 
  3909  0918                     	;# 
  3910  0919                     	;# 
  3911  091A                     	;# 
  3912  091B                     	;# 
  3913  091C                     	;# 
  3914  091D                     	;# 
  3915  091E                     	;# 
  3916  091F                     	;# 
  3917  0E0F                     	;# 
  3918  0E10                     	;# 
  3919  0E11                     	;# 
  3920  0E12                     	;# 
  3921  0E13                     	;# 
  3922  0E14                     	;# 
  3923  0E15                     	;# 
  3924  0E16                     	;# 
  3925  0E17                     	;# 
  3926  0E18                     	;# 
  3927  0E19                     	;# 
  3928  0E1A                     	;# 
  3929  0E1B                     	;# 
  3930  0E1C                     	;# 
  3931  0E1D                     	;# 
  3932  0E1E                     	;# 
  3933  0E1F                     	;# 
  3934  0E20                     	;# 
  3935  0E21                     	;# 
  3936  0E22                     	;# 
  3937  0E24                     	;# 
  3938  0E25                     	;# 
  3939  0E28                     	;# 
  3940  0E29                     	;# 
  3941  0E2A                     	;# 
  3942  0E2B                     	;# 
  3943  0E2C                     	;# 
  3944  0E2D                     	;# 
  3945  0E2E                     	;# 
  3946  0E2F                     	;# 
  3947  0E90                     	;# 
  3948  0E91                     	;# 
  3949  0E92                     	;# 
  3950  0E94                     	;# 
  3951  0E95                     	;# 
  3952  0E9C                     	;# 
  3953  0E9D                     	;# 
  3954  0E9E                     	;# 
  3955  0E9F                     	;# 
  3956  0EA0                     	;# 
  3957  0EA1                     	;# 
  3958  0EA2                     	;# 
  3959  0EA3                     	;# 
  3960  0EA4                     	;# 
  3961  0EA5                     	;# 
  3962  0EA6                     	;# 
  3963  0EA7                     	;# 
  3964  0F0F                     	;# 
  3965  0F10                     	;# 
  3966  0F11                     	;# 
  3967  0F12                     	;# 
  3968  0F13                     	;# 
  3969  0F14                     	;# 
  3970  0F15                     	;# 
  3971  0F16                     	;# 
  3972  0F17                     	;# 
  3973  0F18                     	;# 
  3974  0F19                     	;# 
  3975  0F1A                     	;# 
  3976  0F1B                     	;# 
  3977  0F1C                     	;# 
  3978  0F1D                     	;# 
  3979  0F1E                     	;# 
  3980  0F1F                     	;# 
  3981  0F20                     	;# 
  3982  0F21                     	;# 
  3983  0F22                     	;# 
  3984  0F23                     	;# 
  3985  0F24                     	;# 
  3986  0F25                     	;# 
  3987  0F26                     	;# 
  3988  0F27                     	;# 
  3989  0F28                     	;# 
  3990  0F29                     	;# 
  3991  0F2A                     	;# 
  3992  0F2B                     	;# 
  3993  0F2C                     	;# 
  3994  0F2D                     	;# 
  3995  0F2E                     	;# 
  3996  0F2F                     	;# 
  3997  0F30                     	;# 
  3998  0F31                     	;# 
  3999  0F32                     	;# 
  4000  0F33                     	;# 
  4001  0F34                     	;# 
  4002  0F35                     	;# 
  4003  0F36                     	;# 
  4004  0F37                     	;# 
  4005  0FE4                     	;# 
  4006  0FE5                     	;# 
  4007  0FE6                     	;# 
  4008  0FE7                     	;# 
  4009  0FE8                     	;# 
  4010  0FE9                     	;# 
  4011  0FEA                     	;# 
  4012  0FEB                     	;# 
  4013  0FED                     	;# 
  4014  0FEE                     	;# 
  4015  0FEF                     	;# 
  4016  0000                     	;# 
  4017  0001                     	;# 
  4018  0002                     	;# 
  4019  0003                     	;# 
  4020  0004                     	;# 
  4021  0005                     	;# 
  4022  0006                     	;# 
  4023  0007                     	;# 
  4024  0008                     	;# 
  4025  0009                     	;# 
  4026  000A                     	;# 
  4027  000B                     	;# 
  4028  000C                     	;# 
  4029  000D                     	;# 
  4030  000E                     	;# 
  4031  0010                     	;# 
  4032  0011                     	;# 
  4033  0012                     	;# 
  4034  0013                     	;# 
  4035  0014                     	;# 
  4036  0015                     	;# 
  4037  0015                     	;# 
  4038  0016                     	;# 
  4039  0016                     	;# 
  4040  0017                     	;# 
  4041  0018                     	;# 
  4042  0019                     	;# 
  4043  0019                     	;# 
  4044  001A                     	;# 
  4045  001B                     	;# 
  4046  001C                     	;# 
  4047  001D                     	;# 
  4048  001E                     	;# 
  4049  001F                     	;# 
  4050  008C                     	;# 
  4051  008D                     	;# 
  4052  008E                     	;# 
  4053  0090                     	;# 
  4054  0091                     	;# 
  4055  0092                     	;# 
  4056  0093                     	;# 
  4057  0094                     	;# 
  4058  0097                     	;# 
  4059  009B                     	;# 
  4060  009B                     	;# 
  4061  009C                     	;# 
  4062  009D                     	;# 
  4063  009E                     	;# 
  4064  009F                     	;# 
  4065  010C                     	;# 
  4066  010D                     	;# 
  4067  010E                     	;# 
  4068  0111                     	;# 
  4069  0112                     	;# 
  4070  0113                     	;# 
  4071  0114                     	;# 
  4072  0115                     	;# 
  4073  0116                     	;# 
  4074  0117                     	;# 
  4075  0118                     	;# 
  4076  0119                     	;# 
  4077  018C                     	;# 
  4078  018D                     	;# 
  4079  018E                     	;# 
  4080  0197                     	;# 
  4081  0199                     	;# 
  4082  0199                     	;# 
  4083  0199                     	;# 
  4084  019A                     	;# 
  4085  019A                     	;# 
  4086  019A                     	;# 
  4087  019B                     	;# 
  4088  019B                     	;# 
  4089  019B                     	;# 
  4090  019B                     	;# 
  4091  019B                     	;# 
  4092  019C                     	;# 
  4093  019C                     	;# 
  4094  019C                     	;# 
  4095  019D                     	;# 
  4096  019D                     	;# 
  4097  019D                     	;# 
  4098  019E                     	;# 
  4099  019E                     	;# 
  4100  019E                     	;# 
  4101  019F                     	;# 
  4102  019F                     	;# 
  4103  019F                     	;# 
  4104  019F                     	;# 
  4105  019F                     	;# 
  4106  020C                     	;# 
  4107  020D                     	;# 
  4108  020E                     	;# 
  4109  0211                     	;# 
  4110  0211                     	;# 
  4111  0212                     	;# 
  4112  0212                     	;# 
  4113  0213                     	;# 
  4114  0213                     	;# 
  4115  0214                     	;# 
  4116  0214                     	;# 
  4117  0215                     	;# 
  4118  0215                     	;# 
  4119  0215                     	;# 
  4120  0215                     	;# 
  4121  0216                     	;# 
  4122  0216                     	;# 
  4123  0217                     	;# 
  4124  0217                     	;# 
  4125  0219                     	;# 
  4126  021A                     	;# 
  4127  021B                     	;# 
  4128  021C                     	;# 
  4129  021D                     	;# 
  4130  021D                     	;# 
  4131  021E                     	;# 
  4132  021F                     	;# 
  4133  028C                     	;# 
  4134  028D                     	;# 
  4135  028E                     	;# 
  4136  0291                     	;# 
  4137  0291                     	;# 
  4138  0292                     	;# 
  4139  0293                     	;# 
  4140  0294                     	;# 
  4141  0295                     	;# 
  4142  0295                     	;# 
  4143  0296                     	;# 
  4144  0297                     	;# 
  4145  0298                     	;# 
  4146  029F                     	;# 
  4147  030C                     	;# 
  4148  030D                     	;# 
  4149  030E                     	;# 
  4150  0311                     	;# 
  4151  0311                     	;# 
  4152  0312                     	;# 
  4153  0313                     	;# 
  4154  0314                     	;# 
  4155  0315                     	;# 
  4156  0315                     	;# 
  4157  0316                     	;# 
  4158  0317                     	;# 
  4159  0318                     	;# 
  4160  038C                     	;# 
  4161  038D                     	;# 
  4162  038E                     	;# 
  4163  0391                     	;# 
  4164  0392                     	;# 
  4165  0393                     	;# 
  4166  0394                     	;# 
  4167  0395                     	;# 
  4168  0396                     	;# 
  4169  0397                     	;# 
  4170  0398                     	;# 
  4171  0399                     	;# 
  4172  039A                     	;# 
  4173  039C                     	;# 
  4174  039D                     	;# 
  4175  039E                     	;# 
  4176  039F                     	;# 
  4177  0411                     	;# 
  4178  0411                     	;# 
  4179  0412                     	;# 
  4180  0413                     	;# 
  4181  0414                     	;# 
  4182  0415                     	;# 
  4183  0416                     	;# 
  4184  0417                     	;# 
  4185  0418                     	;# 
  4186  0418                     	;# 
  4187  0419                     	;# 
  4188  041A                     	;# 
  4189  041B                     	;# 
  4190  041C                     	;# 
  4191  041D                     	;# 
  4192  041E                     	;# 
  4193  041F                     	;# 
  4194  0498                     	;# 
  4195  0498                     	;# 
  4196  0499                     	;# 
  4197  049A                     	;# 
  4198  049B                     	;# 
  4199  049B                     	;# 
  4200  049C                     	;# 
  4201  049D                     	;# 
  4202  049E                     	;# 
  4203  049F                     	;# 
  4204  0617                     	;# 
  4205  0618                     	;# 
  4206  0619                     	;# 
  4207  0619                     	;# 
  4208  061A                     	;# 
  4209  061B                     	;# 
  4210  061C                     	;# 
  4211  061C                     	;# 
  4212  061F                     	;# 
  4213  0691                     	;# 
  4214  0692                     	;# 
  4215  0693                     	;# 
  4216  0694                     	;# 
  4217  0695                     	;# 
  4218  0696                     	;# 
  4219  0697                     	;# 
  4220  0698                     	;# 
  4221  0699                     	;# 
  4222  0711                     	;# 
  4223  0712                     	;# 
  4224  0713                     	;# 
  4225  0714                     	;# 
  4226  0715                     	;# 
  4227  0716                     	;# 
  4228  0717                     	;# 
  4229  0718                     	;# 
  4230  0719                     	;# 
  4231  0891                     	;# 
  4232  0891                     	;# 
  4233  0891                     	;# 
  4234  0891                     	;# 
  4235  0891                     	;# 
  4236  0891                     	;# 
  4237  0892                     	;# 
  4238  0892                     	;# 
  4239  0892                     	;# 
  4240  0893                     	;# 
  4241  0893                     	;# 
  4242  0893                     	;# 
  4243  0893                     	;# 
  4244  0893                     	;# 
  4245  0893                     	;# 
  4246  0894                     	;# 
  4247  0894                     	;# 
  4248  0894                     	;# 
  4249  0895                     	;# 
  4250  0895                     	;# 
  4251  0895                     	;# 
  4252  0896                     	;# 
  4253  0896                     	;# 
  4254  0896                     	;# 
  4255  089B                     	;# 
  4256  0911                     	;# 
  4257  0912                     	;# 
  4258  0913                     	;# 
  4259  0914                     	;# 
  4260  0915                     	;# 
  4261  0916                     	;# 
  4262  0918                     	;# 
  4263  0919                     	;# 
  4264  091A                     	;# 
  4265  091B                     	;# 
  4266  091C                     	;# 
  4267  091D                     	;# 
  4268  091E                     	;# 
  4269  091F                     	;# 
  4270  0E0F                     	;# 
  4271  0E10                     	;# 
  4272  0E11                     	;# 
  4273  0E12                     	;# 
  4274  0E13                     	;# 
  4275  0E14                     	;# 
  4276  0E15                     	;# 
  4277  0E16                     	;# 
  4278  0E17                     	;# 
  4279  0E18                     	;# 
  4280  0E19                     	;# 
  4281  0E1A                     	;# 
  4282  0E1B                     	;# 
  4283  0E1C                     	;# 
  4284  0E1D                     	;# 
  4285  0E1E                     	;# 
  4286  0E1F                     	;# 
  4287  0E20                     	;# 
  4288  0E21                     	;# 
  4289  0E22                     	;# 
  4290  0E24                     	;# 
  4291  0E25                     	;# 
  4292  0E28                     	;# 
  4293  0E29                     	;# 
  4294  0E2A                     	;# 
  4295  0E2B                     	;# 
  4296  0E2C                     	;# 
  4297  0E2D                     	;# 
  4298  0E2E                     	;# 
  4299  0E2F                     	;# 
  4300  0E90                     	;# 
  4301  0E91                     	;# 
  4302  0E92                     	;# 
  4303  0E94                     	;# 
  4304  0E95                     	;# 
  4305  0E9C                     	;# 
  4306  0E9D                     	;# 
  4307  0E9E                     	;# 
  4308  0E9F                     	;# 
  4309  0EA0                     	;# 
  4310  0EA1                     	;# 
  4311  0EA2                     	;# 
  4312  0EA3                     	;# 
  4313  0EA4                     	;# 
  4314  0EA5                     	;# 
  4315  0EA6                     	;# 
  4316  0EA7                     	;# 
  4317  0F0F                     	;# 
  4318  0F10                     	;# 
  4319  0F11                     	;# 
  4320  0F12                     	;# 
  4321  0F13                     	;# 
  4322  0F14                     	;# 
  4323  0F15                     	;# 
  4324  0F16                     	;# 
  4325  0F17                     	;# 
  4326  0F18                     	;# 
  4327  0F19                     	;# 
  4328  0F1A                     	;# 
  4329  0F1B                     	;# 
  4330  0F1C                     	;# 
  4331  0F1D                     	;# 
  4332  0F1E                     	;# 
  4333  0F1F                     	;# 
  4334  0F20                     	;# 
  4335  0F21                     	;# 
  4336  0F22                     	;# 
  4337  0F23                     	;# 
  4338  0F24                     	;# 
  4339  0F25                     	;# 
  4340  0F26                     	;# 
  4341  0F27                     	;# 
  4342  0F28                     	;# 
  4343  0F29                     	;# 
  4344  0F2A                     	;# 
  4345  0F2B                     	;# 
  4346  0F2C                     	;# 
  4347  0F2D                     	;# 
  4348  0F2E                     	;# 
  4349  0F2F                     	;# 
  4350  0F30                     	;# 
  4351  0F31                     	;# 
  4352  0F32                     	;# 
  4353  0F33                     	;# 
  4354  0F34                     	;# 
  4355  0F35                     	;# 
  4356  0F36                     	;# 
  4357  0F37                     	;# 
  4358  0FE4                     	;# 
  4359  0FE5                     	;# 
  4360  0FE6                     	;# 
  4361  0FE7                     	;# 
  4362  0FE8                     	;# 
  4363  0FE9                     	;# 
  4364  0FEA                     	;# 
  4365  0FEB                     	;# 
  4366  0FED                     	;# 
  4367  0FEE                     	;# 
  4368  0FEF                     	;# 
  4369  0000                     	;# 
  4370  0001                     	;# 
  4371  0002                     	;# 
  4372  0003                     	;# 
  4373  0004                     	;# 
  4374  0005                     	;# 
  4375  0006                     	;# 
  4376  0007                     	;# 
  4377  0008                     	;# 
  4378  0009                     	;# 
  4379  000A                     	;# 
  4380  000B                     	;# 
  4381  000C                     	;# 
  4382  000D                     	;# 
  4383  000E                     	;# 
  4384  0010                     	;# 
  4385  0011                     	;# 
  4386  0012                     	;# 
  4387  0013                     	;# 
  4388  0014                     	;# 
  4389  0015                     	;# 
  4390  0015                     	;# 
  4391  0016                     	;# 
  4392  0016                     	;# 
  4393  0017                     	;# 
  4394  0018                     	;# 
  4395  0019                     	;# 
  4396  0019                     	;# 
  4397  001A                     	;# 
  4398  001B                     	;# 
  4399  001C                     	;# 
  4400  001D                     	;# 
  4401  001E                     	;# 
  4402  001F                     	;# 
  4403  008C                     	;# 
  4404  008D                     	;# 
  4405  008E                     	;# 
  4406  0090                     	;# 
  4407  0091                     	;# 
  4408  0092                     	;# 
  4409  0093                     	;# 
  4410  0094                     	;# 
  4411  0097                     	;# 
  4412  009B                     	;# 
  4413  009B                     	;# 
  4414  009C                     	;# 
  4415  009D                     	;# 
  4416  009E                     	;# 
  4417  009F                     	;# 
  4418  010C                     	;# 
  4419  010D                     	;# 
  4420  010E                     	;# 
  4421  0111                     	;# 
  4422  0112                     	;# 
  4423  0113                     	;# 
  4424  0114                     	;# 
  4425  0115                     	;# 
  4426  0116                     	;# 
  4427  0117                     	;# 
  4428  0118                     	;# 
  4429  0119                     	;# 
  4430  018C                     	;# 
  4431  018D                     	;# 
  4432  018E                     	;# 
  4433  0197                     	;# 
  4434  0199                     	;# 
  4435  0199                     	;# 
  4436  0199                     	;# 
  4437  019A                     	;# 
  4438  019A                     	;# 
  4439  019A                     	;# 
  4440  019B                     	;# 
  4441  019B                     	;# 
  4442  019B                     	;# 
  4443  019B                     	;# 
  4444  019B                     	;# 
  4445  019C                     	;# 
  4446  019C                     	;# 
  4447  019C                     	;# 
  4448  019D                     	;# 
  4449  019D                     	;# 
  4450  019D                     	;# 
  4451  019E                     	;# 
  4452  019E                     	;# 
  4453  019E                     	;# 
  4454  019F                     	;# 
  4455  019F                     	;# 
  4456  019F                     	;# 
  4457  019F                     	;# 
  4458  019F                     	;# 
  4459  020C                     	;# 
  4460  020D                     	;# 
  4461  020E                     	;# 
  4462  0211                     	;# 
  4463  0211                     	;# 
  4464  0212                     	;# 
  4465  0212                     	;# 
  4466  0213                     	;# 
  4467  0213                     	;# 
  4468  0214                     	;# 
  4469  0214                     	;# 
  4470  0215                     	;# 
  4471  0215                     	;# 
  4472  0215                     	;# 
  4473  0215                     	;# 
  4474  0216                     	;# 
  4475  0216                     	;# 
  4476  0217                     	;# 
  4477  0217                     	;# 
  4478  0219                     	;# 
  4479  021A                     	;# 
  4480  021B                     	;# 
  4481  021C                     	;# 
  4482  021D                     	;# 
  4483  021D                     	;# 
  4484  021E                     	;# 
  4485  021F                     	;# 
  4486  028C                     	;# 
  4487  028D                     	;# 
  4488  028E                     	;# 
  4489  0291                     	;# 
  4490  0291                     	;# 
  4491  0292                     	;# 
  4492  0293                     	;# 
  4493  0294                     	;# 
  4494  0295                     	;# 
  4495  0295                     	;# 
  4496  0296                     	;# 
  4497  0297                     	;# 
  4498  0298                     	;# 
  4499  029F                     	;# 
  4500  030C                     	;# 
  4501  030D                     	;# 
  4502  030E                     	;# 
  4503  0311                     	;# 
  4504  0311                     	;# 
  4505  0312                     	;# 
  4506  0313                     	;# 
  4507  0314                     	;# 
  4508  0315                     	;# 
  4509  0315                     	;# 
  4510  0316                     	;# 
  4511  0317                     	;# 
  4512  0318                     	;# 
  4513  038C                     	;# 
  4514  038D                     	;# 
  4515  038E                     	;# 
  4516  0391                     	;# 
  4517  0392                     	;# 
  4518  0393                     	;# 
  4519  0394                     	;# 
  4520  0395                     	;# 
  4521  0396                     	;# 
  4522  0397                     	;# 
  4523  0398                     	;# 
  4524  0399                     	;# 
  4525  039A                     	;# 
  4526  039C                     	;# 
  4527  039D                     	;# 
  4528  039E                     	;# 
  4529  039F                     	;# 
  4530  0411                     	;# 
  4531  0411                     	;# 
  4532  0412                     	;# 
  4533  0413                     	;# 
  4534  0414                     	;# 
  4535  0415                     	;# 
  4536  0416                     	;# 
  4537  0417                     	;# 
  4538  0418                     	;# 
  4539  0418                     	;# 
  4540  0419                     	;# 
  4541  041A                     	;# 
  4542  041B                     	;# 
  4543  041C                     	;# 
  4544  041D                     	;# 
  4545  041E                     	;# 
  4546  041F                     	;# 
  4547  0498                     	;# 
  4548  0498                     	;# 
  4549  0499                     	;# 
  4550  049A                     	;# 
  4551  049B                     	;# 
  4552  049B                     	;# 
  4553  049C                     	;# 
  4554  049D                     	;# 
  4555  049E                     	;# 
  4556  049F                     	;# 
  4557  0617                     	;# 
  4558  0618                     	;# 
  4559  0619                     	;# 
  4560  0619                     	;# 
  4561  061A                     	;# 
  4562  061B                     	;# 
  4563  061C                     	;# 
  4564  061C                     	;# 
  4565  061F                     	;# 
  4566  0691                     	;# 
  4567  0692                     	;# 
  4568  0693                     	;# 
  4569  0694                     	;# 
  4570  0695                     	;# 
  4571  0696                     	;# 
  4572  0697                     	;# 
  4573  0698                     	;# 
  4574  0699                     	;# 
  4575  0711                     	;# 
  4576  0712                     	;# 
  4577  0713                     	;# 
  4578  0714                     	;# 
  4579  0715                     	;# 
  4580  0716                     	;# 
  4581  0717                     	;# 
  4582  0718                     	;# 
  4583  0719                     	;# 
  4584  0891                     	;# 
  4585  0891                     	;# 
  4586  0891                     	;# 
  4587  0891                     	;# 
  4588  0891                     	;# 
  4589  0891                     	;# 
  4590  0892                     	;# 
  4591  0892                     	;# 
  4592  0892                     	;# 
  4593  0893                     	;# 
  4594  0893                     	;# 
  4595  0893                     	;# 
  4596  0893                     	;# 
  4597  0893                     	;# 
  4598  0893                     	;# 
  4599  0894                     	;# 
  4600  0894                     	;# 
  4601  0894                     	;# 
  4602  0895                     	;# 
  4603  0895                     	;# 
  4604  0895                     	;# 
  4605  0896                     	;# 
  4606  0896                     	;# 
  4607  0896                     	;# 
  4608  089B                     	;# 
  4609  0911                     	;# 
  4610  0912                     	;# 
  4611  0913                     	;# 
  4612  0914                     	;# 
  4613  0915                     	;# 
  4614  0916                     	;# 
  4615  0918                     	;# 
  4616  0919                     	;# 
  4617  091A                     	;# 
  4618  091B                     	;# 
  4619  091C                     	;# 
  4620  091D                     	;# 
  4621  091E                     	;# 
  4622  091F                     	;# 
  4623  0E0F                     	;# 
  4624  0E10                     	;# 
  4625  0E11                     	;# 
  4626  0E12                     	;# 
  4627  0E13                     	;# 
  4628  0E14                     	;# 
  4629  0E15                     	;# 
  4630  0E16                     	;# 
  4631  0E17                     	;# 
  4632  0E18                     	;# 
  4633  0E19                     	;# 
  4634  0E1A                     	;# 
  4635  0E1B                     	;# 
  4636  0E1C                     	;# 
  4637  0E1D                     	;# 
  4638  0E1E                     	;# 
  4639  0E1F                     	;# 
  4640  0E20                     	;# 
  4641  0E21                     	;# 
  4642  0E22                     	;# 
  4643  0E24                     	;# 
  4644  0E25                     	;# 
  4645  0E28                     	;# 
  4646  0E29                     	;# 
  4647  0E2A                     	;# 
  4648  0E2B                     	;# 
  4649  0E2C                     	;# 
  4650  0E2D                     	;# 
  4651  0E2E                     	;# 
  4652  0E2F                     	;# 
  4653  0E90                     	;# 
  4654  0E91                     	;# 
  4655  0E92                     	;# 
  4656  0E94                     	;# 
  4657  0E95                     	;# 
  4658  0E9C                     	;# 
  4659  0E9D                     	;# 
  4660  0E9E                     	;# 
  4661  0E9F                     	;# 
  4662  0EA0                     	;# 
  4663  0EA1                     	;# 
  4664  0EA2                     	;# 
  4665  0EA3                     	;# 
  4666  0EA4                     	;# 
  4667  0EA5                     	;# 
  4668  0EA6                     	;# 
  4669  0EA7                     	;# 
  4670  0F0F                     	;# 
  4671  0F10                     	;# 
  4672  0F11                     	;# 
  4673  0F12                     	;# 
  4674  0F13                     	;# 
  4675  0F14                     	;# 
  4676  0F15                     	;# 
  4677  0F16                     	;# 
  4678  0F17                     	;# 
  4679  0F18                     	;# 
  4680  0F19                     	;# 
  4681  0F1A                     	;# 
  4682  0F1B                     	;# 
  4683  0F1C                     	;# 
  4684  0F1D                     	;# 
  4685  0F1E                     	;# 
  4686  0F1F                     	;# 
  4687  0F20                     	;# 
  4688  0F21                     	;# 
  4689  0F22                     	;# 
  4690  0F23                     	;# 
  4691  0F24                     	;# 
  4692  0F25                     	;# 
  4693  0F26                     	;# 
  4694  0F27                     	;# 
  4695  0F28                     	;# 
  4696  0F29                     	;# 
  4697  0F2A                     	;# 
  4698  0F2B                     	;# 
  4699  0F2C                     	;# 
  4700  0F2D                     	;# 
  4701  0F2E                     	;# 
  4702  0F2F                     	;# 
  4703  0F30                     	;# 
  4704  0F31                     	;# 
  4705  0F32                     	;# 
  4706  0F33                     	;# 
  4707  0F34                     	;# 
  4708  0F35                     	;# 
  4709  0F36                     	;# 
  4710  0F37                     	;# 
  4711  0FE4                     	;# 
  4712  0FE5                     	;# 
  4713  0FE6                     	;# 
  4714  0FE7                     	;# 
  4715  0FE8                     	;# 
  4716  0FE9                     	;# 
  4717  0FEA                     	;# 
  4718  0FEB                     	;# 
  4719  0FED                     	;# 
  4720  0FEE                     	;# 
  4721  0FEF                     	;# 
  4722  0000                     	;# 
  4723  0001                     	;# 
  4724  0002                     	;# 
  4725  0003                     	;# 
  4726  0004                     	;# 
  4727  0005                     	;# 
  4728  0006                     	;# 
  4729  0007                     	;# 
  4730  0008                     	;# 
  4731  0009                     	;# 
  4732  000A                     	;# 
  4733  000B                     	;# 
  4734  000C                     	;# 
  4735  000D                     	;# 
  4736  000E                     	;# 
  4737  0010                     	;# 
  4738  0011                     	;# 
  4739  0012                     	;# 
  4740  0013                     	;# 
  4741  0014                     	;# 
  4742  0015                     	;# 
  4743  0015                     	;# 
  4744  0016                     	;# 
  4745  0016                     	;# 
  4746  0017                     	;# 
  4747  0018                     	;# 
  4748  0019                     	;# 
  4749  0019                     	;# 
  4750  001A                     	;# 
  4751  001B                     	;# 
  4752  001C                     	;# 
  4753  001D                     	;# 
  4754  001E                     	;# 
  4755  001F                     	;# 
  4756  008C                     	;# 
  4757  008D                     	;# 
  4758  008E                     	;# 
  4759  0090                     	;# 
  4760  0091                     	;# 
  4761  0092                     	;# 
  4762  0093                     	;# 
  4763  0094                     	;# 
  4764  0097                     	;# 
  4765  009B                     	;# 
  4766  009B                     	;# 
  4767  009C                     	;# 
  4768  009D                     	;# 
  4769  009E                     	;# 
  4770  009F                     	;# 
  4771  010C                     	;# 
  4772  010D                     	;# 
  4773  010E                     	;# 
  4774  0111                     	;# 
  4775  0112                     	;# 
  4776  0113                     	;# 
  4777  0114                     	;# 
  4778  0115                     	;# 
  4779  0116                     	;# 
  4780  0117                     	;# 
  4781  0118                     	;# 
  4782  0119                     	;# 
  4783  018C                     	;# 
  4784  018D                     	;# 
  4785  018E                     	;# 
  4786  0197                     	;# 
  4787  0199                     	;# 
  4788  0199                     	;# 
  4789  0199                     	;# 
  4790  019A                     	;# 
  4791  019A                     	;# 
  4792  019A                     	;# 
  4793  019B                     	;# 
  4794  019B                     	;# 
  4795  019B                     	;# 
  4796  019B                     	;# 
  4797  019B                     	;# 
  4798  019C                     	;# 
  4799  019C                     	;# 
  4800  019C                     	;# 
  4801  019D                     	;# 
  4802  019D                     	;# 
  4803  019D                     	;# 
  4804  019E                     	;# 
  4805  019E                     	;# 
  4806  019E                     	;# 
  4807  019F                     	;# 
  4808  019F                     	;# 
  4809  019F                     	;# 
  4810  019F                     	;# 
  4811  019F                     	;# 
  4812  020C                     	;# 
  4813  020D                     	;# 
  4814  020E                     	;# 
  4815  0211                     	;# 
  4816  0211                     	;# 
  4817  0212                     	;# 
  4818  0212                     	;# 
  4819  0213                     	;# 
  4820  0213                     	;# 
  4821  0214                     	;# 
  4822  0214                     	;# 
  4823  0215                     	;# 
  4824  0215                     	;# 
  4825  0215                     	;# 
  4826  0215                     	;# 
  4827  0216                     	;# 
  4828  0216                     	;# 
  4829  0217                     	;# 
  4830  0217                     	;# 
  4831  0219                     	;# 
  4832  021A                     	;# 
  4833  021B                     	;# 
  4834  021C                     	;# 
  4835  021D                     	;# 
  4836  021D                     	;# 
  4837  021E                     	;# 
  4838  021F                     	;# 
  4839  028C                     	;# 
  4840  028D                     	;# 
  4841  028E                     	;# 
  4842  0291                     	;# 
  4843  0291                     	;# 
  4844  0292                     	;# 
  4845  0293                     	;# 
  4846  0294                     	;# 
  4847  0295                     	;# 
  4848  0295                     	;# 
  4849  0296                     	;# 
  4850  0297                     	;# 
  4851  0298                     	;# 
  4852  029F                     	;# 
  4853  030C                     	;# 
  4854  030D                     	;# 
  4855  030E                     	;# 
  4856  0311                     	;# 
  4857  0311                     	;# 
  4858  0312                     	;# 
  4859  0313                     	;# 
  4860  0314                     	;# 
  4861  0315                     	;# 
  4862  0315                     	;# 
  4863  0316                     	;# 
  4864  0317                     	;# 
  4865  0318                     	;# 
  4866  038C                     	;# 
  4867  038D                     	;# 
  4868  038E                     	;# 
  4869  0391                     	;# 
  4870  0392                     	;# 
  4871  0393                     	;# 
  4872  0394                     	;# 
  4873  0395                     	;# 
  4874  0396                     	;# 
  4875  0397                     	;# 
  4876  0398                     	;# 
  4877  0399                     	;# 
  4878  039A                     	;# 
  4879  039C                     	;# 
  4880  039D                     	;# 
  4881  039E                     	;# 
  4882  039F                     	;# 
  4883  0411                     	;# 
  4884  0411                     	;# 
  4885  0412                     	;# 
  4886  0413                     	;# 
  4887  0414                     	;# 
  4888  0415                     	;# 
  4889  0416                     	;# 
  4890  0417                     	;# 
  4891  0418                     	;# 
  4892  0418                     	;# 
  4893  0419                     	;# 
  4894  041A                     	;# 
  4895  041B                     	;# 
  4896  041C                     	;# 
  4897  041D                     	;# 
  4898  041E                     	;# 
  4899  041F                     	;# 
  4900  0498                     	;# 
  4901  0498                     	;# 
  4902  0499                     	;# 
  4903  049A                     	;# 
  4904  049B                     	;# 
  4905  049B                     	;# 
  4906  049C                     	;# 
  4907  049D                     	;# 
  4908  049E                     	;# 
  4909  049F                     	;# 
  4910  0617                     	;# 
  4911  0618                     	;# 
  4912  0619                     	;# 
  4913  0619                     	;# 
  4914  061A                     	;# 
  4915  061B                     	;# 
  4916  061C                     	;# 
  4917  061C                     	;# 
  4918  061F                     	;# 
  4919  0691                     	;# 
  4920  0692                     	;# 
  4921  0693                     	;# 
  4922  0694                     	;# 
  4923  0695                     	;# 
  4924  0696                     	;# 
  4925  0697                     	;# 
  4926  0698                     	;# 
  4927  0699                     	;# 
  4928  0711                     	;# 
  4929  0712                     	;# 
  4930  0713                     	;# 
  4931  0714                     	;# 
  4932  0715                     	;# 
  4933  0716                     	;# 
  4934  0717                     	;# 
  4935  0718                     	;# 
  4936  0719                     	;# 
  4937  0891                     	;# 
  4938  0891                     	;# 
  4939  0891                     	;# 
  4940  0891                     	;# 
  4941  0891                     	;# 
  4942  0891                     	;# 
  4943  0892                     	;# 
  4944  0892                     	;# 
  4945  0892                     	;# 
  4946  0893                     	;# 
  4947  0893                     	;# 
  4948  0893                     	;# 
  4949  0893                     	;# 
  4950  0893                     	;# 
  4951  0893                     	;# 
  4952  0894                     	;# 
  4953  0894                     	;# 
  4954  0894                     	;# 
  4955  0895                     	;# 
  4956  0895                     	;# 
  4957  0895                     	;# 
  4958  0896                     	;# 
  4959  0896                     	;# 
  4960  0896                     	;# 
  4961  089B                     	;# 
  4962  0911                     	;# 
  4963  0912                     	;# 
  4964  0913                     	;# 
  4965  0914                     	;# 
  4966  0915                     	;# 
  4967  0916                     	;# 
  4968  0918                     	;# 
  4969  0919                     	;# 
  4970  091A                     	;# 
  4971  091B                     	;# 
  4972  091C                     	;# 
  4973  091D                     	;# 
  4974  091E                     	;# 
  4975  091F                     	;# 
  4976  0E0F                     	;# 
  4977  0E10                     	;# 
  4978  0E11                     	;# 
  4979  0E12                     	;# 
  4980  0E13                     	;# 
  4981  0E14                     	;# 
  4982  0E15                     	;# 
  4983  0E16                     	;# 
  4984  0E17                     	;# 
  4985  0E18                     	;# 
  4986  0E19                     	;# 
  4987  0E1A                     	;# 
  4988  0E1B                     	;# 
  4989  0E1C                     	;# 
  4990  0E1D                     	;# 
  4991  0E1E                     	;# 
  4992  0E1F                     	;# 
  4993  0E20                     	;# 
  4994  0E21                     	;# 
  4995  0E22                     	;# 
  4996  0E24                     	;# 
  4997  0E25                     	;# 
  4998  0E28                     	;# 
  4999  0E29                     	;# 
  5000  0E2A                     	;# 
  5001  0E2B                     	;# 
  5002  0E2C                     	;# 
  5003  0E2D                     	;# 
  5004  0E2E                     	;# 
  5005  0E2F                     	;# 
  5006  0E90                     	;# 
  5007  0E91                     	;# 
  5008  0E92                     	;# 
  5009  0E94                     	;# 
  5010  0E95                     	;# 
  5011  0E9C                     	;# 
  5012  0E9D                     	;# 
  5013  0E9E                     	;# 
  5014  0E9F                     	;# 
  5015  0EA0                     	;# 
  5016  0EA1                     	;# 
  5017  0EA2                     	;# 
  5018  0EA3                     	;# 
  5019  0EA4                     	;# 
  5020  0EA5                     	;# 
  5021  0EA6                     	;# 
  5022  0EA7                     	;# 
  5023  0F0F                     	;# 
  5024  0F10                     	;# 
  5025  0F11                     	;# 
  5026  0F12                     	;# 
  5027  0F13                     	;# 
  5028  0F14                     	;# 
  5029  0F15                     	;# 
  5030  0F16                     	;# 
  5031  0F17                     	;# 
  5032  0F18                     	;# 
  5033  0F19                     	;# 
  5034  0F1A                     	;# 
  5035  0F1B                     	;# 
  5036  0F1C                     	;# 
  5037  0F1D                     	;# 
  5038  0F1E                     	;# 
  5039  0F1F                     	;# 
  5040  0F20                     	;# 
  5041  0F21                     	;# 
  5042  0F22                     	;# 
  5043  0F23                     	;# 
  5044  0F24                     	;# 
  5045  0F25                     	;# 
  5046  0F26                     	;# 
  5047  0F27                     	;# 
  5048  0F28                     	;# 
  5049  0F29                     	;# 
  5050  0F2A                     	;# 
  5051  0F2B                     	;# 
  5052  0F2C                     	;# 
  5053  0F2D                     	;# 
  5054  0F2E                     	;# 
  5055  0F2F                     	;# 
  5056  0F30                     	;# 
  5057  0F31                     	;# 
  5058  0F32                     	;# 
  5059  0F33                     	;# 
  5060  0F34                     	;# 
  5061  0F35                     	;# 
  5062  0F36                     	;# 
  5063  0F37                     	;# 
  5064  0FE4                     	;# 
  5065  0FE5                     	;# 
  5066  0FE6                     	;# 
  5067  0FE7                     	;# 
  5068  0FE8                     	;# 
  5069  0FE9                     	;# 
  5070  0FEA                     	;# 
  5071  0FEB                     	;# 
  5072  0FED                     	;# 
  5073  0FEE                     	;# 
  5074  0FEF                     	;# 
  5075  0000                     	;# 
  5076  0001                     	;# 
  5077  0002                     	;# 
  5078  0003                     	;# 
  5079  0004                     	;# 
  5080  0005                     	;# 
  5081  0006                     	;# 
  5082  0007                     	;# 
  5083  0008                     	;# 
  5084  0009                     	;# 
  5085  000A                     	;# 
  5086  000B                     	;# 
  5087  000C                     	;# 
  5088  000D                     	;# 
  5089  000E                     	;# 
  5090  0010                     	;# 
  5091  0011                     	;# 
  5092  0012                     	;# 
  5093  0013                     	;# 
  5094  0014                     	;# 
  5095  0015                     	;# 
  5096  0015                     	;# 
  5097  0016                     	;# 
  5098  0016                     	;# 
  5099  0017                     	;# 
  5100  0018                     	;# 
  5101  0019                     	;# 
  5102  0019                     	;# 
  5103  001A                     	;# 
  5104  001B                     	;# 
  5105  001C                     	;# 
  5106  001D                     	;# 
  5107  001E                     	;# 
  5108  001F                     	;# 
  5109  008C                     	;# 
  5110  008D                     	;# 
  5111  008E                     	;# 
  5112  0090                     	;# 
  5113  0091                     	;# 
  5114  0092                     	;# 
  5115  0093                     	;# 
  5116  0094                     	;# 
  5117  0097                     	;# 
  5118  009B                     	;# 
  5119  009B                     	;# 
  5120  009C                     	;# 
  5121  009D                     	;# 
  5122  009E                     	;# 
  5123  009F                     	;# 
  5124  010C                     	;# 
  5125  010D                     	;# 
  5126  010E                     	;# 
  5127  0111                     	;# 
  5128  0112                     	;# 
  5129  0113                     	;# 
  5130  0114                     	;# 
  5131  0115                     	;# 
  5132  0116                     	;# 
  5133  0117                     	;# 
  5134  0118                     	;# 
  5135  0119                     	;# 
  5136  018C                     	;# 
  5137  018D                     	;# 
  5138  018E                     	;# 
  5139  0197                     	;# 
  5140  0199                     	;# 
  5141  0199                     	;# 
  5142  0199                     	;# 
  5143  019A                     	;# 
  5144  019A                     	;# 
  5145  019A                     	;# 
  5146  019B                     	;# 
  5147  019B                     	;# 
  5148  019B                     	;# 
  5149  019B                     	;# 
  5150  019B                     	;# 
  5151  019C                     	;# 
  5152  019C                     	;# 
  5153  019C                     	;# 
  5154  019D                     	;# 
  5155  019D                     	;# 
  5156  019D                     	;# 
  5157  019E                     	;# 
  5158  019E                     	;# 
  5159  019E                     	;# 
  5160  019F                     	;# 
  5161  019F                     	;# 
  5162  019F                     	;# 
  5163  019F                     	;# 
  5164  019F                     	;# 
  5165  020C                     	;# 
  5166  020D                     	;# 
  5167  020E                     	;# 
  5168  0211                     	;# 
  5169  0211                     	;# 
  5170  0212                     	;# 
  5171  0212                     	;# 
  5172  0213                     	;# 
  5173  0213                     	;# 
  5174  0214                     	;# 
  5175  0214                     	;# 
  5176  0215                     	;# 
  5177  0215                     	;# 
  5178  0215                     	;# 
  5179  0215                     	;# 
  5180  0216                     	;# 
  5181  0216                     	;# 
  5182  0217                     	;# 
  5183  0217                     	;# 
  5184  0219                     	;# 
  5185  021A                     	;# 
  5186  021B                     	;# 
  5187  021C                     	;# 
  5188  021D                     	;# 
  5189  021D                     	;# 
  5190  021E                     	;# 
  5191  021F                     	;# 
  5192  028C                     	;# 
  5193  028D                     	;# 
  5194  028E                     	;# 
  5195  0291                     	;# 
  5196  0291                     	;# 
  5197  0292                     	;# 
  5198  0293                     	;# 
  5199  0294                     	;# 
  5200  0295                     	;# 
  5201  0295                     	;# 
  5202  0296                     	;# 
  5203  0297                     	;# 
  5204  0298                     	;# 
  5205  029F                     	;# 
  5206  030C                     	;# 
  5207  030D                     	;# 
  5208  030E                     	;# 
  5209  0311                     	;# 
  5210  0311                     	;# 
  5211  0312                     	;# 
  5212  0313                     	;# 
  5213  0314                     	;# 
  5214  0315                     	;# 
  5215  0315                     	;# 
  5216  0316                     	;# 
  5217  0317                     	;# 
  5218  0318                     	;# 
  5219  038C                     	;# 
  5220  038D                     	;# 
  5221  038E                     	;# 
  5222  0391                     	;# 
  5223  0392                     	;# 
  5224  0393                     	;# 
  5225  0394                     	;# 
  5226  0395                     	;# 
  5227  0396                     	;# 
  5228  0397                     	;# 
  5229  0398                     	;# 
  5230  0399                     	;# 
  5231  039A                     	;# 
  5232  039C                     	;# 
  5233  039D                     	;# 
  5234  039E                     	;# 
  5235  039F                     	;# 
  5236  0411                     	;# 
  5237  0411                     	;# 
  5238  0412                     	;# 
  5239  0413                     	;# 
  5240  0414                     	;# 
  5241  0415                     	;# 
  5242  0416                     	;# 
  5243  0417                     	;# 
  5244  0418                     	;# 
  5245  0418                     	;# 
  5246  0419                     	;# 
  5247  041A                     	;# 
  5248  041B                     	;# 
  5249  041C                     	;# 
  5250  041D                     	;# 
  5251  041E                     	;# 
  5252  041F                     	;# 
  5253  0498                     	;# 
  5254  0498                     	;# 
  5255  0499                     	;# 
  5256  049A                     	;# 
  5257  049B                     	;# 
  5258  049B                     	;# 
  5259  049C                     	;# 
  5260  049D                     	;# 
  5261  049E                     	;# 
  5262  049F                     	;# 
  5263  0617                     	;# 
  5264  0618                     	;# 
  5265  0619                     	;# 
  5266  0619                     	;# 
  5267  061A                     	;# 
  5268  061B                     	;# 
  5269  061C                     	;# 
  5270  061C                     	;# 
  5271  061F                     	;# 
  5272  0691                     	;# 
  5273  0692                     	;# 
  5274  0693                     	;# 
  5275  0694                     	;# 
  5276  0695                     	;# 
  5277  0696                     	;# 
  5278  0697                     	;# 
  5279  0698                     	;# 
  5280  0699                     	;# 
  5281  0711                     	;# 
  5282  0712                     	;# 
  5283  0713                     	;# 
  5284  0714                     	;# 
  5285  0715                     	;# 
  5286  0716                     	;# 
  5287  0717                     	;# 
  5288  0718                     	;# 
  5289  0719                     	;# 
  5290  0891                     	;# 
  5291  0891                     	;# 
  5292  0891                     	;# 
  5293  0891                     	;# 
  5294  0891                     	;# 
  5295  0891                     	;# 
  5296  0892                     	;# 
  5297  0892                     	;# 
  5298  0892                     	;# 
  5299  0893                     	;# 
  5300  0893                     	;# 
  5301  0893                     	;# 
  5302  0893                     	;# 
  5303  0893                     	;# 
  5304  0893                     	;# 
  5305  0894                     	;# 
  5306  0894                     	;# 
  5307  0894                     	;# 
  5308  0895                     	;# 
  5309  0895                     	;# 
  5310  0895                     	;# 
  5311  0896                     	;# 
  5312  0896                     	;# 
  5313  0896                     	;# 
  5314  089B                     	;# 
  5315  0911                     	;# 
  5316  0912                     	;# 
  5317  0913                     	;# 
  5318  0914                     	;# 
  5319  0915                     	;# 
  5320  0916                     	;# 
  5321  0918                     	;# 
  5322  0919                     	;# 
  5323  091A                     	;# 
  5324  091B                     	;# 
  5325  091C                     	;# 
  5326  091D                     	;# 
  5327  091E                     	;# 
  5328  091F                     	;# 
  5329  0E0F                     	;# 
  5330  0E10                     	;# 
  5331  0E11                     	;# 
  5332  0E12                     	;# 
  5333  0E13                     	;# 
  5334  0E14                     	;# 
  5335  0E15                     	;# 
  5336  0E16                     	;# 
  5337  0E17                     	;# 
  5338  0E18                     	;# 
  5339  0E19                     	;# 
  5340  0E1A                     	;# 
  5341  0E1B                     	;# 
  5342  0E1C                     	;# 
  5343  0E1D                     	;# 
  5344  0E1E                     	;# 
  5345  0E1F                     	;# 
  5346  0E20                     	;# 
  5347  0E21                     	;# 
  5348  0E22                     	;# 
  5349  0E24                     	;# 
  5350  0E25                     	;# 
  5351  0E28                     	;# 
  5352  0E29                     	;# 
  5353  0E2A                     	;# 
  5354  0E2B                     	;# 
  5355  0E2C                     	;# 
  5356  0E2D                     	;# 
  5357  0E2E                     	;# 
  5358  0E2F                     	;# 
  5359  0E90                     	;# 
  5360  0E91                     	;# 
  5361  0E92                     	;# 
  5362  0E94                     	;# 
  5363  0E95                     	;# 
  5364  0E9C                     	;# 
  5365  0E9D                     	;# 
  5366  0E9E                     	;# 
  5367  0E9F                     	;# 
  5368  0EA0                     	;# 
  5369  0EA1                     	;# 
  5370  0EA2                     	;# 
  5371  0EA3                     	;# 
  5372  0EA4                     	;# 
  5373  0EA5                     	;# 
  5374  0EA6                     	;# 
  5375  0EA7                     	;# 
  5376  0F0F                     	;# 
  5377  0F10                     	;# 
  5378  0F11                     	;# 
  5379  0F12                     	;# 
  5380  0F13                     	;# 
  5381  0F14                     	;# 
  5382  0F15                     	;# 
  5383  0F16                     	;# 
  5384  0F17                     	;# 
  5385  0F18                     	;# 
  5386  0F19                     	;# 
  5387  0F1A                     	;# 
  5388  0F1B                     	;# 
  5389  0F1C                     	;# 
  5390  0F1D                     	;# 
  5391  0F1E                     	;# 
  5392  0F1F                     	;# 
  5393  0F20                     	;# 
  5394  0F21                     	;# 
  5395  0F22                     	;# 
  5396  0F23                     	;# 
  5397  0F24                     	;# 
  5398  0F25                     	;# 
  5399  0F26                     	;# 
  5400  0F27                     	;# 
  5401  0F28                     	;# 
  5402  0F29                     	;# 
  5403  0F2A                     	;# 
  5404  0F2B                     	;# 
  5405  0F2C                     	;# 
  5406  0F2D                     	;# 
  5407  0F2E                     	;# 
  5408  0F2F                     	;# 
  5409  0F30                     	;# 
  5410  0F31                     	;# 
  5411  0F32                     	;# 
  5412  0F33                     	;# 
  5413  0F34                     	;# 
  5414  0F35                     	;# 
  5415  0F36                     	;# 
  5416  0F37                     	;# 
  5417  0FE4                     	;# 
  5418  0FE5                     	;# 
  5419  0FE6                     	;# 
  5420  0FE7                     	;# 
  5421  0FE8                     	;# 
  5422  0FE9                     	;# 
  5423  0FEA                     	;# 
  5424  0FEB                     	;# 
  5425  0FED                     	;# 
  5426  0FEE                     	;# 
  5427  0FEF                     	;# 
  5428  0000                     	;# 
  5429  0001                     	;# 
  5430  0002                     	;# 
  5431  0003                     	;# 
  5432  0004                     	;# 
  5433  0005                     	;# 
  5434  0006                     	;# 
  5435  0007                     	;# 
  5436  0008                     	;# 
  5437  0009                     	;# 
  5438  000A                     	;# 
  5439  000B                     	;# 
  5440  000C                     	;# 
  5441  000D                     	;# 
  5442  000E                     	;# 
  5443  0010                     	;# 
  5444  0011                     	;# 
  5445  0012                     	;# 
  5446  0013                     	;# 
  5447  0014                     	;# 
  5448  0015                     	;# 
  5449  0015                     	;# 
  5450  0016                     	;# 
  5451  0016                     	;# 
  5452  0017                     	;# 
  5453  0018                     	;# 
  5454  0019                     	;# 
  5455  0019                     	;# 
  5456  001A                     	;# 
  5457  001B                     	;# 
  5458  001C                     	;# 
  5459  001D                     	;# 
  5460  001E                     	;# 
  5461  001F                     	;# 
  5462  008C                     	;# 
  5463  008D                     	;# 
  5464  008E                     	;# 
  5465  0090                     	;# 
  5466  0091                     	;# 
  5467  0092                     	;# 
  5468  0093                     	;# 
  5469  0094                     	;# 
  5470  0097                     	;# 
  5471  009B                     	;# 
  5472  009B                     	;# 
  5473  009C                     	;# 
  5474  009D                     	;# 
  5475  009E                     	;# 
  5476  009F                     	;# 
  5477  010C                     	;# 
  5478  010D                     	;# 
  5479  010E                     	;# 
  5480  0111                     	;# 
  5481  0112                     	;# 
  5482  0113                     	;# 
  5483  0114                     	;# 
  5484  0115                     	;# 
  5485  0116                     	;# 
  5486  0117                     	;# 
  5487  0118                     	;# 
  5488  0119                     	;# 
  5489  018C                     	;# 
  5490  018D                     	;# 
  5491  018E                     	;# 
  5492  0197                     	;# 
  5493  0199                     	;# 
  5494  0199                     	;# 
  5495  0199                     	;# 
  5496  019A                     	;# 
  5497  019A                     	;# 
  5498  019A                     	;# 
  5499  019B                     	;# 
  5500  019B                     	;# 
  5501  019B                     	;# 
  5502  019B                     	;# 
  5503  019B                     	;# 
  5504  019C                     	;# 
  5505  019C                     	;# 
  5506  019C                     	;# 
  5507  019D                     	;# 
  5508  019D                     	;# 
  5509  019D                     	;# 
  5510  019E                     	;# 
  5511  019E                     	;# 
  5512  019E                     	;# 
  5513  019F                     	;# 
  5514  019F                     	;# 
  5515  019F                     	;# 
  5516  019F                     	;# 
  5517  019F                     	;# 
  5518  020C                     	;# 
  5519  020D                     	;# 
  5520  020E                     	;# 
  5521  0211                     	;# 
  5522  0211                     	;# 
  5523  0212                     	;# 
  5524  0212                     	;# 
  5525  0213                     	;# 
  5526  0213                     	;# 
  5527  0214                     	;# 
  5528  0214                     	;# 
  5529  0215                     	;# 
  5530  0215                     	;# 
  5531  0215                     	;# 
  5532  0215                     	;# 
  5533  0216                     	;# 
  5534  0216                     	;# 
  5535  0217                     	;# 
  5536  0217                     	;# 
  5537  0219                     	;# 
  5538  021A                     	;# 
  5539  021B                     	;# 
  5540  021C                     	;# 
  5541  021D                     	;# 
  5542  021D                     	;# 
  5543  021E                     	;# 
  5544  021F                     	;# 
  5545  028C                     	;# 
  5546  028D                     	;# 
  5547  028E                     	;# 
  5548  0291                     	;# 
  5549  0291                     	;# 
  5550  0292                     	;# 
  5551  0293                     	;# 
  5552  0294                     	;# 
  5553  0295                     	;# 
  5554  0295                     	;# 
  5555  0296                     	;# 
  5556  0297                     	;# 
  5557  0298                     	;# 
  5558  029F                     	;# 
  5559  030C                     	;# 
  5560  030D                     	;# 
  5561  030E                     	;# 
  5562  0311                     	;# 
  5563  0311                     	;# 
  5564  0312                     	;# 
  5565  0313                     	;# 
  5566  0314                     	;# 
  5567  0315                     	;# 
  5568  0315                     	;# 
  5569  0316                     	;# 
  5570  0317                     	;# 
  5571  0318                     	;# 
  5572  038C                     	;# 
  5573  038D                     	;# 
  5574  038E                     	;# 
  5575  0391                     	;# 
  5576  0392                     	;# 
  5577  0393                     	;# 
  5578  0394                     	;# 
  5579  0395                     	;# 
  5580  0396                     	;# 
  5581  0397                     	;# 
  5582  0398                     	;# 
  5583  0399                     	;# 
  5584  039A                     	;# 
  5585  039C                     	;# 
  5586  039D                     	;# 
  5587  039E                     	;# 
  5588  039F                     	;# 
  5589  0411                     	;# 
  5590  0411                     	;# 
  5591  0412                     	;# 
  5592  0413                     	;# 
  5593  0414                     	;# 
  5594  0415                     	;# 
  5595  0416                     	;# 
  5596  0417                     	;# 
  5597  0418                     	;# 
  5598  0418                     	;# 
  5599  0419                     	;# 
  5600  041A                     	;# 
  5601  041B                     	;# 
  5602  041C                     	;# 
  5603  041D                     	;# 
  5604  041E                     	;# 
  5605  041F                     	;# 
  5606  0498                     	;# 
  5607  0498                     	;# 
  5608  0499                     	;# 
  5609  049A                     	;# 
  5610  049B                     	;# 
  5611  049B                     	;# 
  5612  049C                     	;# 
  5613  049D                     	;# 
  5614  049E                     	;# 
  5615  049F                     	;# 
  5616  0617                     	;# 
  5617  0618                     	;# 
  5618  0619                     	;# 
  5619  0619                     	;# 
  5620  061A                     	;# 
  5621  061B                     	;# 
  5622  061C                     	;# 
  5623  061C                     	;# 
  5624  061F                     	;# 
  5625  0691                     	;# 
  5626  0692                     	;# 
  5627  0693                     	;# 
  5628  0694                     	;# 
  5629  0695                     	;# 
  5630  0696                     	;# 
  5631  0697                     	;# 
  5632  0698                     	;# 
  5633  0699                     	;# 
  5634  0711                     	;# 
  5635  0712                     	;# 
  5636  0713                     	;# 
  5637  0714                     	;# 
  5638  0715                     	;# 
  5639  0716                     	;# 
  5640  0717                     	;# 
  5641  0718                     	;# 
  5642  0719                     	;# 
  5643  0891                     	;# 
  5644  0891                     	;# 
  5645  0891                     	;# 
  5646  0891                     	;# 
  5647  0891                     	;# 
  5648  0891                     	;# 
  5649  0892                     	;# 
  5650  0892                     	;# 
  5651  0892                     	;# 
  5652  0893                     	;# 
  5653  0893                     	;# 
  5654  0893                     	;# 
  5655  0893                     	;# 
  5656  0893                     	;# 
  5657  0893                     	;# 
  5658  0894                     	;# 
  5659  0894                     	;# 
  5660  0894                     	;# 
  5661  0895                     	;# 
  5662  0895                     	;# 
  5663  0895                     	;# 
  5664  0896                     	;# 
  5665  0896                     	;# 
  5666  0896                     	;# 
  5667  089B                     	;# 
  5668  0911                     	;# 
  5669  0912                     	;# 
  5670  0913                     	;# 
  5671  0914                     	;# 
  5672  0915                     	;# 
  5673  0916                     	;# 
  5674  0918                     	;# 
  5675  0919                     	;# 
  5676  091A                     	;# 
  5677  091B                     	;# 
  5678  091C                     	;# 
  5679  091D                     	;# 
  5680  091E                     	;# 
  5681  091F                     	;# 
  5682  0E0F                     	;# 
  5683  0E10                     	;# 
  5684  0E11                     	;# 
  5685  0E12                     	;# 
  5686  0E13                     	;# 
  5687  0E14                     	;# 
  5688  0E15                     	;# 
  5689  0E16                     	;# 
  5690  0E17                     	;# 
  5691  0E18                     	;# 
  5692  0E19                     	;# 
  5693  0E1A                     	;# 
  5694  0E1B                     	;# 
  5695  0E1C                     	;# 
  5696  0E1D                     	;# 
  5697  0E1E                     	;# 
  5698  0E1F                     	;# 
  5699  0E20                     	;# 
  5700  0E21                     	;# 
  5701  0E22                     	;# 
  5702  0E24                     	;# 
  5703  0E25                     	;# 
  5704  0E28                     	;# 
  5705  0E29                     	;# 
  5706  0E2A                     	;# 
  5707  0E2B                     	;# 
  5708  0E2C                     	;# 
  5709  0E2D                     	;# 
  5710  0E2E                     	;# 
  5711  0E2F                     	;# 
  5712  0E90                     	;# 
  5713  0E91                     	;# 
  5714  0E92                     	;# 
  5715  0E94                     	;# 
  5716  0E95                     	;# 
  5717  0E9C                     	;# 
  5718  0E9D                     	;# 
  5719  0E9E                     	;# 
  5720  0E9F                     	;# 
  5721  0EA0                     	;# 
  5722  0EA1                     	;# 
  5723  0EA2                     	;# 
  5724  0EA3                     	;# 
  5725  0EA4                     	;# 
  5726  0EA5                     	;# 
  5727  0EA6                     	;# 
  5728  0EA7                     	;# 
  5729  0F0F                     	;# 
  5730  0F10                     	;# 
  5731  0F11                     	;# 
  5732  0F12                     	;# 
  5733  0F13                     	;# 
  5734  0F14                     	;# 
  5735  0F15                     	;# 
  5736  0F16                     	;# 
  5737  0F17                     	;# 
  5738  0F18                     	;# 
  5739  0F19                     	;# 
  5740  0F1A                     	;# 
  5741  0F1B                     	;# 
  5742  0F1C                     	;# 
  5743  0F1D                     	;# 
  5744  0F1E                     	;# 
  5745  0F1F                     	;# 
  5746  0F20                     	;# 
  5747  0F21                     	;# 
  5748  0F22                     	;# 
  5749  0F23                     	;# 
  5750  0F24                     	;# 
  5751  0F25                     	;# 
  5752  0F26                     	;# 
  5753  0F27                     	;# 
  5754  0F28                     	;# 
  5755  0F29                     	;# 
  5756  0F2A                     	;# 
  5757  0F2B                     	;# 
  5758  0F2C                     	;# 
  5759  0F2D                     	;# 
  5760  0F2E                     	;# 
  5761  0F2F                     	;# 
  5762  0F30                     	;# 
  5763  0F31                     	;# 
  5764  0F32                     	;# 
  5765  0F33                     	;# 
  5766  0F34                     	;# 
  5767  0F35                     	;# 
  5768  0F36                     	;# 
  5769  0F37                     	;# 
  5770  0FE4                     	;# 
  5771  0FE5                     	;# 
  5772  0FE6                     	;# 
  5773  0FE7                     	;# 
  5774  0FE8                     	;# 
  5775  0FE9                     	;# 
  5776  0FEA                     	;# 
  5777  0FEB                     	;# 
  5778  0FED                     	;# 
  5779  0FEE                     	;# 
  5780  0FEF                     	;# 
  5781  0000                     	;# 
  5782  0001                     	;# 
  5783  0002                     	;# 
  5784  0003                     	;# 
  5785  0004                     	;# 
  5786  0005                     	;# 
  5787  0006                     	;# 
  5788  0007                     	;# 
  5789  0008                     	;# 
  5790  0009                     	;# 
  5791  000A                     	;# 
  5792  000B                     	;# 
  5793  000C                     	;# 
  5794  000D                     	;# 
  5795  000E                     	;# 
  5796  0010                     	;# 
  5797  0011                     	;# 
  5798  0012                     	;# 
  5799  0013                     	;# 
  5800  0014                     	;# 
  5801  0015                     	;# 
  5802  0015                     	;# 
  5803  0016                     	;# 
  5804  0016                     	;# 
  5805  0017                     	;# 
  5806  0018                     	;# 
  5807  0019                     	;# 
  5808  0019                     	;# 
  5809  001A                     	;# 
  5810  001B                     	;# 
  5811  001C                     	;# 
  5812  001D                     	;# 
  5813  001E                     	;# 
  5814  001F                     	;# 
  5815  008C                     	;# 
  5816  008D                     	;# 
  5817  008E                     	;# 
  5818  0090                     	;# 
  5819  0091                     	;# 
  5820  0092                     	;# 
  5821  0093                     	;# 
  5822  0094                     	;# 
  5823  0097                     	;# 
  5824  009B                     	;# 
  5825  009B                     	;# 
  5826  009C                     	;# 
  5827  009D                     	;# 
  5828  009E                     	;# 
  5829  009F                     	;# 
  5830  010C                     	;# 
  5831  010D                     	;# 
  5832  010E                     	;# 
  5833  0111                     	;# 
  5834  0112                     	;# 
  5835  0113                     	;# 
  5836  0114                     	;# 
  5837  0115                     	;# 
  5838  0116                     	;# 
  5839  0117                     	;# 
  5840  0118                     	;# 
  5841  0119                     	;# 
  5842  018C                     	;# 
  5843  018D                     	;# 
  5844  018E                     	;# 
  5845  0197                     	;# 
  5846  0199                     	;# 
  5847  0199                     	;# 
  5848  0199                     	;# 
  5849  019A                     	;# 
  5850  019A                     	;# 
  5851  019A                     	;# 
  5852  019B                     	;# 
  5853  019B                     	;# 
  5854  019B                     	;# 
  5855  019B                     	;# 
  5856  019B                     	;# 
  5857  019C                     	;# 
  5858  019C                     	;# 
  5859  019C                     	;# 
  5860  019D                     	;# 
  5861  019D                     	;# 
  5862  019D                     	;# 
  5863  019E                     	;# 
  5864  019E                     	;# 
  5865  019E                     	;# 
  5866  019F                     	;# 
  5867  019F                     	;# 
  5868  019F                     	;# 
  5869  019F                     	;# 
  5870  019F                     	;# 
  5871  020C                     	;# 
  5872  020D                     	;# 
  5873  020E                     	;# 
  5874  0211                     	;# 
  5875  0211                     	;# 
  5876  0212                     	;# 
  5877  0212                     	;# 
  5878  0213                     	;# 
  5879  0213                     	;# 
  5880  0214                     	;# 
  5881  0214                     	;# 
  5882  0215                     	;# 
  5883  0215                     	;# 
  5884  0215                     	;# 
  5885  0215                     	;# 
  5886  0216                     	;# 
  5887  0216                     	;# 
  5888  0217                     	;# 
  5889  0217                     	;# 
  5890  0219                     	;# 
  5891  021A                     	;# 
  5892  021B                     	;# 
  5893  021C                     	;# 
  5894  021D                     	;# 
  5895  021D                     	;# 
  5896  021E                     	;# 
  5897  021F                     	;# 
  5898  028C                     	;# 
  5899  028D                     	;# 
  5900  028E                     	;# 
  5901  0291                     	;# 
  5902  0291                     	;# 
  5903  0292                     	;# 
  5904  0293                     	;# 
  5905  0294                     	;# 
  5906  0295                     	;# 
  5907  0295                     	;# 
  5908  0296                     	;# 
  5909  0297                     	;# 
  5910  0298                     	;# 
  5911  029F                     	;# 
  5912  030C                     	;# 
  5913  030D                     	;# 
  5914  030E                     	;# 
  5915  0311                     	;# 
  5916  0311                     	;# 
  5917  0312                     	;# 
  5918  0313                     	;# 
  5919  0314                     	;# 
  5920  0315                     	;# 
  5921  0315                     	;# 
  5922  0316                     	;# 
  5923  0317                     	;# 
  5924  0318                     	;# 
  5925  038C                     	;# 
  5926  038D                     	;# 
  5927  038E                     	;# 
  5928  0391                     	;# 
  5929  0392                     	;# 
  5930  0393                     	;# 
  5931  0394                     	;# 
  5932  0395                     	;# 
  5933  0396                     	;# 
  5934  0397                     	;# 
  5935  0398                     	;# 
  5936  0399                     	;# 
  5937  039A                     	;# 
  5938  039C                     	;# 
  5939  039D                     	;# 
  5940  039E                     	;# 
  5941  039F                     	;# 
  5942  0411                     	;# 
  5943  0411                     	;# 
  5944  0412                     	;# 
  5945  0413                     	;# 
  5946  0414                     	;# 
  5947  0415                     	;# 
  5948  0416                     	;# 
  5949  0417                     	;# 
  5950  0418                     	;# 
  5951  0418                     	;# 
  5952  0419                     	;# 
  5953  041A                     	;# 
  5954  041B                     	;# 
  5955  041C                     	;# 
  5956  041D                     	;# 
  5957  041E                     	;# 
  5958  041F                     	;# 
  5959  0498                     	;# 
  5960  0498                     	;# 
  5961  0499                     	;# 
  5962  049A                     	;# 
  5963  049B                     	;# 
  5964  049B                     	;# 
  5965  049C                     	;# 
  5966  049D                     	;# 
  5967  049E                     	;# 
  5968  049F                     	;# 
  5969  0617                     	;# 
  5970  0618                     	;# 
  5971  0619                     	;# 
  5972  0619                     	;# 
  5973  061A                     	;# 
  5974  061B                     	;# 
  5975  061C                     	;# 
  5976  061C                     	;# 
  5977  061F                     	;# 
  5978  0691                     	;# 
  5979  0692                     	;# 
  5980  0693                     	;# 
  5981  0694                     	;# 
  5982  0695                     	;# 
  5983  0696                     	;# 
  5984  0697                     	;# 
  5985  0698                     	;# 
  5986  0699                     	;# 
  5987  0711                     	;# 
  5988  0712                     	;# 
  5989  0713                     	;# 
  5990  0714                     	;# 
  5991  0715                     	;# 
  5992  0716                     	;# 
  5993  0717                     	;# 
  5994  0718                     	;# 
  5995  0719                     	;# 
  5996  0891                     	;# 
  5997  0891                     	;# 
  5998  0891                     	;# 
  5999  0891                     	;# 
  6000  0891                     	;# 
  6001  0891                     	;# 
  6002  0892                     	;# 
  6003  0892                     	;# 
  6004  0892                     	;# 
  6005  0893                     	;# 
  6006  0893                     	;# 
  6007  0893                     	;# 
  6008  0893                     	;# 
  6009  0893                     	;# 
  6010  0893                     	;# 
  6011  0894                     	;# 
  6012  0894                     	;# 
  6013  0894                     	;# 
  6014  0895                     	;# 
  6015  0895                     	;# 
  6016  0895                     	;# 
  6017  0896                     	;# 
  6018  0896                     	;# 
  6019  0896                     	;# 
  6020  089B                     	;# 
  6021  0911                     	;# 
  6022  0912                     	;# 
  6023  0913                     	;# 
  6024  0914                     	;# 
  6025  0915                     	;# 
  6026  0916                     	;# 
  6027  0918                     	;# 
  6028  0919                     	;# 
  6029  091A                     	;# 
  6030  091B                     	;# 
  6031  091C                     	;# 
  6032  091D                     	;# 
  6033  091E                     	;# 
  6034  091F                     	;# 
  6035  0E0F                     	;# 
  6036  0E10                     	;# 
  6037  0E11                     	;# 
  6038  0E12                     	;# 
  6039  0E13                     	;# 
  6040  0E14                     	;# 
  6041  0E15                     	;# 
  6042  0E16                     	;# 
  6043  0E17                     	;# 
  6044  0E18                     	;# 
  6045  0E19                     	;# 
  6046  0E1A                     	;# 
  6047  0E1B                     	;# 
  6048  0E1C                     	;# 
  6049  0E1D                     	;# 
  6050  0E1E                     	;# 
  6051  0E1F                     	;# 
  6052  0E20                     	;# 
  6053  0E21                     	;# 
  6054  0E22                     	;# 
  6055  0E24                     	;# 
  6056  0E25                     	;# 
  6057  0E28                     	;# 
  6058  0E29                     	;# 
  6059  0E2A                     	;# 
  6060  0E2B                     	;# 
  6061  0E2C                     	;# 
  6062  0E2D                     	;# 
  6063  0E2E                     	;# 
  6064  0E2F                     	;# 
  6065  0E90                     	;# 
  6066  0E91                     	;# 
  6067  0E92                     	;# 
  6068  0E94                     	;# 
  6069  0E95                     	;# 
  6070  0E9C                     	;# 
  6071  0E9D                     	;# 
  6072  0E9E                     	;# 
  6073  0E9F                     	;# 
  6074  0EA0                     	;# 
  6075  0EA1                     	;# 
  6076  0EA2                     	;# 
  6077  0EA3                     	;# 
  6078  0EA4                     	;# 
  6079  0EA5                     	;# 
  6080  0EA6                     	;# 
  6081  0EA7                     	;# 
  6082  0F0F                     	;# 
  6083  0F10                     	;# 
  6084  0F11                     	;# 
  6085  0F12                     	;# 
  6086  0F13                     	;# 
  6087  0F14                     	;# 
  6088  0F15                     	;# 
  6089  0F16                     	;# 
  6090  0F17                     	;# 
  6091  0F18                     	;# 
  6092  0F19                     	;# 
  6093  0F1A                     	;# 
  6094  0F1B                     	;# 
  6095  0F1C                     	;# 
  6096  0F1D                     	;# 
  6097  0F1E                     	;# 
  6098  0F1F                     	;# 
  6099  0F20                     	;# 
  6100  0F21                     	;# 
  6101  0F22                     	;# 
  6102  0F23                     	;# 
  6103  0F24                     	;# 
  6104  0F25                     	;# 
  6105  0F26                     	;# 
  6106  0F27                     	;# 
  6107  0F28                     	;# 
  6108  0F29                     	;# 
  6109  0F2A                     	;# 
  6110  0F2B                     	;# 
  6111  0F2C                     	;# 
  6112  0F2D                     	;# 
  6113  0F2E                     	;# 
  6114  0F2F                     	;# 
  6115  0F30                     	;# 
  6116  0F31                     	;# 
  6117  0F32                     	;# 
  6118  0F33                     	;# 
  6119  0F34                     	;# 
  6120  0F35                     	;# 
  6121  0F36                     	;# 
  6122  0F37                     	;# 
  6123  0FE4                     	;# 
  6124  0FE5                     	;# 
  6125  0FE6                     	;# 
  6126  0FE7                     	;# 
  6127  0FE8                     	;# 
  6128  0FE9                     	;# 
  6129  0FEA                     	;# 
  6130  0FEB                     	;# 
  6131  0FED                     	;# 
  6132  0FEE                     	;# 
  6133  0FEF                     	;# 
  6134  0000                     	;# 
  6135  0001                     	;# 
  6136  0002                     	;# 
  6137  0003                     	;# 
  6138  0004                     	;# 
  6139  0005                     	;# 
  6140  0006                     	;# 
  6141  0007                     	;# 
  6142  0008                     	;# 
  6143  0009                     	;# 
  6144  000A                     	;# 
  6145  000B                     	;# 
  6146  000C                     	;# 
  6147  000D                     	;# 
  6148  000E                     	;# 
  6149  0010                     	;# 
  6150  0011                     	;# 
  6151  0012                     	;# 
  6152  0013                     	;# 
  6153  0014                     	;# 
  6154  0015                     	;# 
  6155  0015                     	;# 
  6156  0016                     	;# 
  6157  0016                     	;# 
  6158  0017                     	;# 
  6159  0018                     	;# 
  6160  0019                     	;# 
  6161  0019                     	;# 
  6162  001A                     	;# 
  6163  001B                     	;# 
  6164  001C                     	;# 
  6165  001D                     	;# 
  6166  001E                     	;# 
  6167  001F                     	;# 
  6168  008C                     	;# 
  6169  008D                     	;# 
  6170  008E                     	;# 
  6171  0090                     	;# 
  6172  0091                     	;# 
  6173  0092                     	;# 
  6174  0093                     	;# 
  6175  0094                     	;# 
  6176  0097                     	;# 
  6177  009B                     	;# 
  6178  009B                     	;# 
  6179  009C                     	;# 
  6180  009D                     	;# 
  6181  009E                     	;# 
  6182  009F                     	;# 
  6183  010C                     	;# 
  6184  010D                     	;# 
  6185  010E                     	;# 
  6186  0111                     	;# 
  6187  0112                     	;# 
  6188  0113                     	;# 
  6189  0114                     	;# 
  6190  0115                     	;# 
  6191  0116                     	;# 
  6192  0117                     	;# 
  6193  0118                     	;# 
  6194  0119                     	;# 
  6195  018C                     	;# 
  6196  018D                     	;# 
  6197  018E                     	;# 
  6198  0197                     	;# 
  6199  0199                     	;# 
  6200  0199                     	;# 
  6201  0199                     	;# 
  6202  019A                     	;# 
  6203  019A                     	;# 
  6204  019A                     	;# 
  6205  019B                     	;# 
  6206  019B                     	;# 
  6207  019B                     	;# 
  6208  019B                     	;# 
  6209  019B                     	;# 
  6210  019C                     	;# 
  6211  019C                     	;# 
  6212  019C                     	;# 
  6213  019D                     	;# 
  6214  019D                     	;# 
  6215  019D                     	;# 
  6216  019E                     	;# 
  6217  019E                     	;# 
  6218  019E                     	;# 
  6219  019F                     	;# 
  6220  019F                     	;# 
  6221  019F                     	;# 
  6222  019F                     	;# 
  6223  019F                     	;# 
  6224  020C                     	;# 
  6225  020D                     	;# 
  6226  020E                     	;# 
  6227  0211                     	;# 
  6228  0211                     	;# 
  6229  0212                     	;# 
  6230  0212                     	;# 
  6231  0213                     	;# 
  6232  0213                     	;# 
  6233  0214                     	;# 
  6234  0214                     	;# 
  6235  0215                     	;# 
  6236  0215                     	;# 
  6237  0215                     	;# 
  6238  0215                     	;# 
  6239  0216                     	;# 
  6240  0216                     	;# 
  6241  0217                     	;# 
  6242  0217                     	;# 
  6243  0219                     	;# 
  6244  021A                     	;# 
  6245  021B                     	;# 
  6246  021C                     	;# 
  6247  021D                     	;# 
  6248  021D                     	;# 
  6249  021E                     	;# 
  6250  021F                     	;# 
  6251  028C                     	;# 
  6252  028D                     	;# 
  6253  028E                     	;# 
  6254  0291                     	;# 
  6255  0291                     	;# 
  6256  0292                     	;# 
  6257  0293                     	;# 
  6258  0294                     	;# 
  6259  0295                     	;# 
  6260  0295                     	;# 
  6261  0296                     	;# 
  6262  0297                     	;# 
  6263  0298                     	;# 
  6264  029F                     	;# 
  6265  030C                     	;# 
  6266  030D                     	;# 
  6267  030E                     	;# 
  6268  0311                     	;# 
  6269  0311                     	;# 
  6270  0312                     	;# 
  6271  0313                     	;# 
  6272  0314                     	;# 
  6273  0315                     	;# 
  6274  0315                     	;# 
  6275  0316                     	;# 
  6276  0317                     	;# 
  6277  0318                     	;# 
  6278  038C                     	;# 
  6279  038D                     	;# 
  6280  038E                     	;# 
  6281  0391                     	;# 
  6282  0392                     	;# 
  6283  0393                     	;# 
  6284  0394                     	;# 
  6285  0395                     	;# 
  6286  0396                     	;# 
  6287  0397                     	;# 
  6288  0398                     	;# 
  6289  0399                     	;# 
  6290  039A                     	;# 
  6291  039C                     	;# 
  6292  039D                     	;# 
  6293  039E                     	;# 
  6294  039F                     	;# 
  6295  0411                     	;# 
  6296  0411                     	;# 
  6297  0412                     	;# 
  6298  0413                     	;# 
  6299  0414                     	;# 
  6300  0415                     	;# 
  6301  0416                     	;# 
  6302  0417                     	;# 
  6303  0418                     	;# 
  6304  0418                     	;# 
  6305  0419                     	;# 
  6306  041A                     	;# 
  6307  041B                     	;# 
  6308  041C                     	;# 
  6309  041D                     	;# 
  6310  041E                     	;# 
  6311  041F                     	;# 
  6312  0498                     	;# 
  6313  0498                     	;# 
  6314  0499                     	;# 
  6315  049A                     	;# 
  6316  049B                     	;# 
  6317  049B                     	;# 
  6318  049C                     	;# 
  6319  049D                     	;# 
  6320  049E                     	;# 
  6321  049F                     	;# 
  6322  0617                     	;# 
  6323  0618                     	;# 
  6324  0619                     	;# 
  6325  0619                     	;# 
  6326  061A                     	;# 
  6327  061B                     	;# 
  6328  061C                     	;# 
  6329  061C                     	;# 
  6330  061F                     	;# 
  6331  0691                     	;# 
  6332  0692                     	;# 
  6333  0693                     	;# 
  6334  0694                     	;# 
  6335  0695                     	;# 
  6336  0696                     	;# 
  6337  0697                     	;# 
  6338  0698                     	;# 
  6339  0699                     	;# 
  6340  0711                     	;# 
  6341  0712                     	;# 
  6342  0713                     	;# 
  6343  0714                     	;# 
  6344  0715                     	;# 
  6345  0716                     	;# 
  6346  0717                     	;# 
  6347  0718                     	;# 
  6348  0719                     	;# 
  6349  0891                     	;# 
  6350  0891                     	;# 
  6351  0891                     	;# 
  6352  0891                     	;# 
  6353  0891                     	;# 
  6354  0891                     	;# 
  6355  0892                     	;# 
  6356  0892                     	;# 
  6357  0892                     	;# 
  6358  0893                     	;# 
  6359  0893                     	;# 
  6360  0893                     	;# 
  6361  0893                     	;# 
  6362  0893                     	;# 
  6363  0893                     	;# 
  6364  0894                     	;# 
  6365  0894                     	;# 
  6366  0894                     	;# 
  6367  0895                     	;# 
  6368  0895                     	;# 
  6369  0895                     	;# 
  6370  0896                     	;# 
  6371  0896                     	;# 
  6372  0896                     	;# 
  6373  089B                     	;# 
  6374  0911                     	;# 
  6375  0912                     	;# 
  6376  0913                     	;# 
  6377  0914                     	;# 
  6378  0915                     	;# 
  6379  0916                     	;# 
  6380  0918                     	;# 
  6381  0919                     	;# 
  6382  091A                     	;# 
  6383  091B                     	;# 
  6384  091C                     	;# 
  6385  091D                     	;# 
  6386  091E                     	;# 
  6387  091F                     	;# 
  6388  0E0F                     	;# 
  6389  0E10                     	;# 
  6390  0E11                     	;# 
  6391  0E12                     	;# 
  6392  0E13                     	;# 
  6393  0E14                     	;# 
  6394  0E15                     	;# 
  6395  0E16                     	;# 
  6396  0E17                     	;# 
  6397  0E18                     	;# 
  6398  0E19                     	;# 
  6399  0E1A                     	;# 
  6400  0E1B                     	;# 
  6401  0E1C                     	;# 
  6402  0E1D                     	;# 
  6403  0E1E                     	;# 
  6404  0E1F                     	;# 
  6405  0E20                     	;# 
  6406  0E21                     	;# 
  6407  0E22                     	;# 
  6408  0E24                     	;# 
  6409  0E25                     	;# 
  6410  0E28                     	;# 
  6411  0E29                     	;# 
  6412  0E2A                     	;# 
  6413  0E2B                     	;# 
  6414  0E2C                     	;# 
  6415  0E2D                     	;# 
  6416  0E2E                     	;# 
  6417  0E2F                     	;# 
  6418  0E90                     	;# 
  6419  0E91                     	;# 
  6420  0E92                     	;# 
  6421  0E94                     	;# 
  6422  0E95                     	;# 
  6423  0E9C                     	;# 
  6424  0E9D                     	;# 
  6425  0E9E                     	;# 
  6426  0E9F                     	;# 
  6427  0EA0                     	;# 
  6428  0EA1                     	;# 
  6429  0EA2                     	;# 
  6430  0EA3                     	;# 
  6431  0EA4                     	;# 
  6432  0EA5                     	;# 
  6433  0EA6                     	;# 
  6434  0EA7                     	;# 
  6435  0F0F                     	;# 
  6436  0F10                     	;# 
  6437  0F11                     	;# 
  6438  0F12                     	;# 
  6439  0F13                     	;# 
  6440  0F14                     	;# 
  6441  0F15                     	;# 
  6442  0F16                     	;# 
  6443  0F17                     	;# 
  6444  0F18                     	;# 
  6445  0F19                     	;# 
  6446  0F1A                     	;# 
  6447  0F1B                     	;# 
  6448  0F1C                     	;# 
  6449  0F1D                     	;# 
  6450  0F1E                     	;# 
  6451  0F1F                     	;# 
  6452  0F20                     	;# 
  6453  0F21                     	;# 
  6454  0F22                     	;# 
  6455  0F23                     	;# 
  6456  0F24                     	;# 
  6457  0F25                     	;# 
  6458  0F26                     	;# 
  6459  0F27                     	;# 
  6460  0F28                     	;# 
  6461  0F29                     	;# 
  6462  0F2A                     	;# 
  6463  0F2B                     	;# 
  6464  0F2C                     	;# 
  6465  0F2D                     	;# 
  6466  0F2E                     	;# 
  6467  0F2F                     	;# 
  6468  0F30                     	;# 
  6469  0F31                     	;# 
  6470  0F32                     	;# 
  6471  0F33                     	;# 
  6472  0F34                     	;# 
  6473  0F35                     	;# 
  6474  0F36                     	;# 
  6475  0F37                     	;# 
  6476  0FE4                     	;# 
  6477  0FE5                     	;# 
  6478  0FE6                     	;# 
  6479  0FE7                     	;# 
  6480  0FE8                     	;# 
  6481  0FE9                     	;# 
  6482  0FEA                     	;# 
  6483  0FEB                     	;# 
  6484  0FED                     	;# 
  6485  0FEE                     	;# 
  6486  0FEF                     	;# 
  6487  0000                     	;# 
  6488  0001                     	;# 
  6489  0002                     	;# 
  6490  0003                     	;# 
  6491  0004                     	;# 
  6492  0005                     	;# 
  6493  0006                     	;# 
  6494  0007                     	;# 
  6495  0008                     	;# 
  6496  0009                     	;# 
  6497  000A                     	;# 
  6498  000B                     	;# 
  6499  000C                     	;# 
  6500  000D                     	;# 
  6501  000E                     	;# 
  6502  0010                     	;# 
  6503  0011                     	;# 
  6504  0012                     	;# 
  6505  0013                     	;# 
  6506  0014                     	;# 
  6507  0015                     	;# 
  6508  0015                     	;# 
  6509  0016                     	;# 
  6510  0016                     	;# 
  6511  0017                     	;# 
  6512  0018                     	;# 
  6513  0019                     	;# 
  6514  0019                     	;# 
  6515  001A                     	;# 
  6516  001B                     	;# 
  6517  001C                     	;# 
  6518  001D                     	;# 
  6519  001E                     	;# 
  6520  001F                     	;# 
  6521  008C                     	;# 
  6522  008D                     	;# 
  6523  008E                     	;# 
  6524  0090                     	;# 
  6525  0091                     	;# 
  6526  0092                     	;# 
  6527  0093                     	;# 
  6528  0094                     	;# 
  6529  0097                     	;# 
  6530  009B                     	;# 
  6531  009B                     	;# 
  6532  009C                     	;# 
  6533  009D                     	;# 
  6534  009E                     	;# 
  6535  009F                     	;# 
  6536  010C                     	;# 
  6537  010D                     	;# 
  6538  010E                     	;# 
  6539  0111                     	;# 
  6540  0112                     	;# 
  6541  0113                     	;# 
  6542  0114                     	;# 
  6543  0115                     	;# 
  6544  0116                     	;# 
  6545  0117                     	;# 
  6546  0118                     	;# 
  6547  0119                     	;# 
  6548  018C                     	;# 
  6549  018D                     	;# 
  6550  018E                     	;# 
  6551  0197                     	;# 
  6552  0199                     	;# 
  6553  0199                     	;# 
  6554  0199                     	;# 
  6555  019A                     	;# 
  6556  019A                     	;# 
  6557  019A                     	;# 
  6558  019B                     	;# 
  6559  019B                     	;# 
  6560  019B                     	;# 
  6561  019B                     	;# 
  6562  019B                     	;# 
  6563  019C                     	;# 
  6564  019C                     	;# 
  6565  019C                     	;# 
  6566  019D                     	;# 
  6567  019D                     	;# 
  6568  019D                     	;# 
  6569  019E                     	;# 
  6570  019E                     	;# 
  6571  019E                     	;# 
  6572  019F                     	;# 
  6573  019F                     	;# 
  6574  019F                     	;# 
  6575  019F                     	;# 
  6576  019F                     	;# 
  6577  020C                     	;# 
  6578  020D                     	;# 
  6579  020E                     	;# 
  6580  0211                     	;# 
  6581  0211                     	;# 
  6582  0212                     	;# 
  6583  0212                     	;# 
  6584  0213                     	;# 
  6585  0213                     	;# 
  6586  0214                     	;# 
  6587  0214                     	;# 
  6588  0215                     	;# 
  6589  0215                     	;# 
  6590  0215                     	;# 
  6591  0215                     	;# 
  6592  0216                     	;# 
  6593  0216                     	;# 
  6594  0217                     	;# 
  6595  0217                     	;# 
  6596  0219                     	;# 
  6597  021A                     	;# 
  6598  021B                     	;# 
  6599  021C                     	;# 
  6600  021D                     	;# 
  6601  021D                     	;# 
  6602  021E                     	;# 
  6603  021F                     	;# 
  6604  028C                     	;# 
  6605  028D                     	;# 
  6606  028E                     	;# 
  6607  0291                     	;# 
  6608  0291                     	;# 
  6609  0292                     	;# 
  6610  0293                     	;# 
  6611  0294                     	;# 
  6612  0295                     	;# 
  6613  0295                     	;# 
  6614  0296                     	;# 
  6615  0297                     	;# 
  6616  0298                     	;# 
  6617  029F                     	;# 
  6618  030C                     	;# 
  6619  030D                     	;# 
  6620  030E                     	;# 
  6621  0311                     	;# 
  6622  0311                     	;# 
  6623  0312                     	;# 
  6624  0313                     	;# 
  6625  0314                     	;# 
  6626  0315                     	;# 
  6627  0315                     	;# 
  6628  0316                     	;# 
  6629  0317                     	;# 
  6630  0318                     	;# 
  6631  038C                     	;# 
  6632  038D                     	;# 
  6633  038E                     	;# 
  6634  0391                     	;# 
  6635  0392                     	;# 
  6636  0393                     	;# 
  6637  0394                     	;# 
  6638  0395                     	;# 
  6639  0396                     	;# 
  6640  0397                     	;# 
  6641  0398                     	;# 
  6642  0399                     	;# 
  6643  039A                     	;# 
  6644  039C                     	;# 
  6645  039D                     	;# 
  6646  039E                     	;# 
  6647  039F                     	;# 
  6648  0411                     	;# 
  6649  0411                     	;# 
  6650  0412                     	;# 
  6651  0413                     	;# 
  6652  0414                     	;# 
  6653  0415                     	;# 
  6654  0416                     	;# 
  6655  0417                     	;# 
  6656  0418                     	;# 
  6657  0418                     	;# 
  6658  0419                     	;# 
  6659  041A                     	;# 
  6660  041B                     	;# 
  6661  041C                     	;# 
  6662  041D                     	;# 
  6663  041E                     	;# 
  6664  041F                     	;# 
  6665  0498                     	;# 
  6666  0498                     	;# 
  6667  0499                     	;# 
  6668  049A                     	;# 
  6669  049B                     	;# 
  6670  049B                     	;# 
  6671  049C                     	;# 
  6672  049D                     	;# 
  6673  049E                     	;# 
  6674  049F                     	;# 
  6675  0617                     	;# 
  6676  0618                     	;# 
  6677  0619                     	;# 
  6678  0619                     	;# 
  6679  061A                     	;# 
  6680  061B                     	;# 
  6681  061C                     	;# 
  6682  061C                     	;# 
  6683  061F                     	;# 
  6684  0691                     	;# 
  6685  0692                     	;# 
  6686  0693                     	;# 
  6687  0694                     	;# 
  6688  0695                     	;# 
  6689  0696                     	;# 
  6690  0697                     	;# 
  6691  0698                     	;# 
  6692  0699                     	;# 
  6693  0711                     	;# 
  6694  0712                     	;# 
  6695  0713                     	;# 
  6696  0714                     	;# 
  6697  0715                     	;# 
  6698  0716                     	;# 
  6699  0717                     	;# 
  6700  0718                     	;# 
  6701  0719                     	;# 
  6702  0891                     	;# 
  6703  0891                     	;# 
  6704  0891                     	;# 
  6705  0891                     	;# 
  6706  0891                     	;# 
  6707  0891                     	;# 
  6708  0892                     	;# 
  6709  0892                     	;# 
  6710  0892                     	;# 
  6711  0893                     	;# 
  6712  0893                     	;# 
  6713  0893                     	;# 
  6714  0893                     	;# 
  6715  0893                     	;# 
  6716  0893                     	;# 
  6717  0894                     	;# 
  6718  0894                     	;# 
  6719  0894                     	;# 
  6720  0895                     	;# 
  6721  0895                     	;# 
  6722  0895                     	;# 
  6723  0896                     	;# 
  6724  0896                     	;# 
  6725  0896                     	;# 
  6726  089B                     	;# 
  6727  0911                     	;# 
  6728  0912                     	;# 
  6729  0913                     	;# 
  6730  0914                     	;# 
  6731  0915                     	;# 
  6732  0916                     	;# 
  6733  0918                     	;# 
  6734  0919                     	;# 
  6735  091A                     	;# 
  6736  091B                     	;# 
  6737  091C                     	;# 
  6738  091D                     	;# 
  6739  091E                     	;# 
  6740  091F                     	;# 
  6741  0E0F                     	;# 
  6742  0E10                     	;# 
  6743  0E11                     	;# 
  6744  0E12                     	;# 
  6745  0E13                     	;# 
  6746  0E14                     	;# 
  6747  0E15                     	;# 
  6748  0E16                     	;# 
  6749  0E17                     	;# 
  6750  0E18                     	;# 
  6751  0E19                     	;# 
  6752  0E1A                     	;# 
  6753  0E1B                     	;# 
  6754  0E1C                     	;# 
  6755  0E1D                     	;# 
  6756  0E1E                     	;# 
  6757  0E1F                     	;# 
  6758  0E20                     	;# 
  6759  0E21                     	;# 
  6760  0E22                     	;# 
  6761  0E24                     	;# 
  6762  0E25                     	;# 
  6763  0E28                     	;# 
  6764  0E29                     	;# 
  6765  0E2A                     	;# 
  6766  0E2B                     	;# 
  6767  0E2C                     	;# 
  6768  0E2D                     	;# 
  6769  0E2E                     	;# 
  6770  0E2F                     	;# 
  6771  0E90                     	;# 
  6772  0E91                     	;# 
  6773  0E92                     	;# 
  6774  0E94                     	;# 
  6775  0E95                     	;# 
  6776  0E9C                     	;# 
  6777  0E9D                     	;# 
  6778  0E9E                     	;# 
  6779  0E9F                     	;# 
  6780  0EA0                     	;# 
  6781  0EA1                     	;# 
  6782  0EA2                     	;# 
  6783  0EA3                     	;# 
  6784  0EA4                     	;# 
  6785  0EA5                     	;# 
  6786  0EA6                     	;# 
  6787  0EA7                     	;# 
  6788  0F0F                     	;# 
  6789  0F10                     	;# 
  6790  0F11                     	;# 
  6791  0F12                     	;# 
  6792  0F13                     	;# 
  6793  0F14                     	;# 
  6794  0F15                     	;# 
  6795  0F16                     	;# 
  6796  0F17                     	;# 
  6797  0F18                     	;# 
  6798  0F19                     	;# 
  6799  0F1A                     	;# 
  6800  0F1B                     	;# 
  6801  0F1C                     	;# 
  6802  0F1D                     	;# 
  6803  0F1E                     	;# 
  6804  0F1F                     	;# 
  6805  0F20                     	;# 
  6806  0F21                     	;# 
  6807  0F22                     	;# 
  6808  0F23                     	;# 
  6809  0F24                     	;# 
  6810  0F25                     	;# 
  6811  0F26                     	;# 
  6812  0F27                     	;# 
  6813  0F28                     	;# 
  6814  0F29                     	;# 
  6815  0F2A                     	;# 
  6816  0F2B                     	;# 
  6817  0F2C                     	;# 
  6818  0F2D                     	;# 
  6819  0F2E                     	;# 
  6820  0F2F                     	;# 
  6821  0F30                     	;# 
  6822  0F31                     	;# 
  6823  0F32                     	;# 
  6824  0F33                     	;# 
  6825  0F34                     	;# 
  6826  0F35                     	;# 
  6827  0F36                     	;# 
  6828  0F37                     	;# 
  6829  0FE4                     	;# 
  6830  0FE5                     	;# 
  6831  0FE6                     	;# 
  6832  0FE7                     	;# 
  6833  0FE8                     	;# 
  6834  0FE9                     	;# 
  6835  0FEA                     	;# 
  6836  0FEB                     	;# 
  6837  0FED                     	;# 
  6838  0FEE                     	;# 
  6839  0FEF                     	;# 
  6840                           
  6841 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
  6842  001F                     _T2CONbits	set	31
  6843  001F                     _T2CON	set	31
  6844  001D                     _TMR2	set	29
  6845  001E                     _PR2	set	30
  6846  0013                     _PIR3bits	set	19
  6847  001B                     _T1CONbits	set	27
  6848  001B                     _T1CON	set	27
  6849  0011                     _PIR1bits	set	17
  6850  0019                     _TMR1L	set	25
  6851  001A                     _TMR1H	set	26
  6852  001C                     _T1GCON	set	28
  6853  0014                     _PIR4bits	set	20
  6854  0017                     _T0CON0bits	set	23
  6855  0017                     _T0CON0	set	23
  6856  0010                     _PIR0bits	set	16
  6857  0015                     _TMR0L	set	21
  6858  0016                     _TMR0H	set	22
  6859  0018                     _T0CON1	set	24
  6860  000D                     _PORTBbits	set	13
  6861  000E                     _PORTCbits	set	14
  6862  000C                     _PORTAbits	set	12
  6863  000B                     _INTCONbits	set	11
  6864  0014                     _PIR4	set	20
  6865  0013                     _PIR3	set	19
  6866  0012                     _PIR2	set	18
  6867  0011                     _PIR1	set	17
  6868  0010                     _PIR0	set	16
  6869  008E                     _TRISC	set	142
  6870  008D                     _TRISB	set	141
  6871  008C                     _TRISA	set	140
  6872  0093                     _PIE3bits	set	147
  6873  0091                     _PIE1bits	set	145
  6874  0094                     _PIE4bits	set	148
  6875  0090                     _PIE0bits	set	144
  6876  0097                     _WDTCON	set	151
  6877  008D                     _TRISBbits	set	141
  6878  008E                     _TRISCbits	set	142
  6879  008C                     _TRISAbits	set	140
  6880  0094                     _PIE4	set	148
  6881  0093                     _PIE3	set	147
  6882  0092                     _PIE2	set	146
  6883  0091                     _PIE1	set	145
  6884  0090                     _PIE0	set	144
  6885  010E                     _LATC	set	270
  6886  010D                     _LATB	set	269
  6887  010C                     _LATA	set	268
  6888  010D                     _LATBbits	set	269
  6889  010E                     _LATCbits	set	270
  6890  010C                     _LATAbits	set	268
  6891  018C                     _ANSELA	set	396
  6892  018D                     _ANSELB	set	397
  6893  018E                     _ANSELC	set	398
  6894  0199                     _RC1REG	set	409
  6895  019D                     _RC1STAbits	set	413
  6896  019A                     _TX1REG	set	410
  6897  019E                     _TX1STAbits	set	414
  6898  019C                     _SP1BRGH	set	412
  6899  019B                     _SP1BRGL	set	411
  6900  019E                     _TX1STA	set	414
  6901  019D                     _RC1STA	set	413
  6902  019F                     _BAUD1CON	set	415
  6903  020E                     _WPUC	set	526
  6904  020C                     _WPUA	set	524
  6905  020D                     _WPUB	set	525
  6906  028E                     _ODCONC	set	654
  6907  028D                     _ODCONB	set	653
  6908  028C                     _ODCONA	set	652
  6909  0295                     _CCPR2L	set	661
  6910  0296                     _CCPR2H	set	662
  6911  0298                     _CCP2CAP	set	664
  6912  0297                     _CCP2CON	set	663
  6913  029F                     _CCPTMRSbits	set	671
  6914  0291                     _CCPR1L	set	657
  6915  0292                     _CCPR1H	set	658
  6916  0294                     _CCP1CAP	set	660
  6917  0293                     _CCP1CON	set	659
  6918  0317                     _CCP4CONbits	set	791
  6919  0315                     _CCPR4L	set	789
  6920  0316                     _CCPR4H	set	790
  6921  0317                     _CCP4CON	set	791
  6922  030E                     _SLRCONC	set	782
  6923  030D                     _SLRCONB	set	781
  6924  030C                     _SLRCONA	set	780
  6925  0311                     _CCPR3L	set	785
  6926  0312                     _CCPR3H	set	786
  6927  0314                     _CCP3CAP	set	788
  6928  0313                     _CCP3CON	set	787
  6929  038E                     _INLVLC	set	910
  6930  038D                     _INLVLB	set	909
  6931  038C                     _INLVLA	set	908
  6932  0414                     _T3GCONbits	set	1044
  6933  0413                     _T3CONbits	set	1043
  6934  0413                     _T3CON	set	1043
  6935  0411                     _TMR3L	set	1041
  6936  0412                     _TMR3H	set	1042
  6937  0414                     _T3GCON	set	1044
  6938  061F                     _PWMTMRSbits	set	1567
  6939  0617                     _PWM5DCL	set	1559
  6940  0618                     _PWM5DCH	set	1560
  6941  0619                     _PWM5CON	set	1561
  6942  0916                     _PMD5	set	2326
  6943  0915                     _PMD4	set	2325
  6944  0914                     _PMD3	set	2324
  6945  0913                     _PMD2	set	2323
  6946  0912                     _PMD1	set	2322
  6947  0911                     _PMD0	set	2321
  6948  091E                     _OSCTUNE	set	2334
  6949  091F                     _OSCFRQ	set	2335
  6950  091D                     _OSCEN	set	2333
  6951  091B                     _OSCCON3	set	2331
  6952  0919                     _OSCCON1	set	2329
  6953  48E0                     _PLLR	set	18656
  6954  0E16                     _CCP3PPS	set	3606
  6955  0E15                     _CCP2PPS	set	3605
  6956  0E14                     _CCP1PPS	set	3604
  6957  0E24                     _RXPPS	set	3620
  6958  0E9E                     _RB6PPS	set	3742
  6959  0EA1                     _RC1PPS	set	3745
  6960  0EA4                     _RC4PPS	set	3748
  6961                           
  6962                           	psect	stringtext1
  6963  1000                     __pstringtext1:
  6964  1000                     STR_2:
  6965  1000  3445               	retlw	69	;'E'
  6966  1001  3452               	retlw	82	;'R'
  6967  1002  3452               	retlw	82	;'R'
  6968  1003  344F               	retlw	79	;'O'
  6969  1004  3452               	retlw	82	;'R'
  6970  1005  343A               	retlw	58	;':'
  6971  1006  3420               	retlw	32	;' '
  6972  1007  3449               	retlw	73	;'I'
  6973  1008  346E               	retlw	110	;'n'
  6974  1009  3476               	retlw	118	;'v'
  6975  100A  3461               	retlw	97	;'a'
  6976  100B  346C               	retlw	108	;'l'
  6977  100C  3469               	retlw	105	;'i'
  6978  100D  3464               	retlw	100	;'d'
  6979  100E  3420               	retlw	32	;' '
  6980  100F  3474               	retlw	116	;'t'
  6981  1010  3472               	retlw	114	;'r'
  6982  1011  3469               	retlw	105	;'i'
  6983  1012  3467               	retlw	103	;'g'
  6984  1013  3450               	retlw	80	;'P'
  6985  1014  3469               	retlw	105	;'i'
  6986  1015  346E               	retlw	110	;'n'
  6987  1016  3420               	retlw	32	;' '
  6988  1017  3428               	retlw	40	;'('
  6989  1018  346D               	retlw	109	;'m'
  6990  1019  3475               	retlw	117	;'u'
  6991  101A  3473               	retlw	115	;'s'
  6992  101B  3474               	retlw	116	;'t'
  6993  101C  3420               	retlw	32	;' '
  6994  101D  344E               	retlw	78	;'N'
  6995  101E  344F               	retlw	79	;'O'
  6996  101F  3454               	retlw	84	;'T'
  6997  1020  3420               	retlw	32	;' '
  6998  1021  3462               	retlw	98	;'b'
  6999  1022  3465               	retlw	101	;'e'
  7000  1023  3420               	retlw	32	;' '
  7001  1024  345B               	retlw	91	;'['
  7002  1025  3441               	retlw	65	;'A'
  7003  1026  3432               	retlw	50	;'2'
  7004  1027  342C               	retlw	44	;','
  7005  1028  3420               	retlw	32	;' '
  7006  1029  3441               	retlw	65	;'A'
  7007  102A  3433               	retlw	51	;'3'
  7008  102B  342C               	retlw	44	;','
  7009  102C  3420               	retlw	32	;' '
  7010  102D  3441               	retlw	65	;'A'
  7011  102E  3434               	retlw	52	;'4'
  7012  102F  342C               	retlw	44	;','
  7013  1030  3420               	retlw	32	;' '
  7014  1031  3443               	retlw	67	;'C'
  7015  1032  3433               	retlw	51	;'3'
  7016  1033  342C               	retlw	44	;','
  7017  1034  3420               	retlw	32	;' '
  7018  1035  3443               	retlw	67	;'C'
  7019  1036  3435               	retlw	53	;'5'
  7020  1037  345D               	retlw	93	;']'
  7021  1038  3429               	retlw	41	;')'
  7022  1039  3400               	retlw	0
  7023                           
  7024                           	psect	stringtext2
  7025  103A                     __pstringtext2:
  7026  103A                     STR_1:
  7027  103A  3445               	retlw	69	;'E'
  7028  103B  3452               	retlw	82	;'R'
  7029  103C  3452               	retlw	82	;'R'
  7030  103D  344F               	retlw	79	;'O'
  7031  103E  3452               	retlw	82	;'R'
  7032  103F  343A               	retlw	58	;':'
  7033  1040  3420               	retlw	32	;' '
  7034  1041  3449               	retlw	73	;'I'
  7035  1042  346E               	retlw	110	;'n'
  7036  1043  3476               	retlw	118	;'v'
  7037  1044  3461               	retlw	97	;'a'
  7038  1045  346C               	retlw	108	;'l'
  7039  1046  3469               	retlw	105	;'i'
  7040  1047  3464               	retlw	100	;'d'
  7041  1048  3420               	retlw	32	;' '
  7042  1049  3465               	retlw	101	;'e'
  7043  104A  3463               	retlw	99	;'c'
  7044  104B  3468               	retlw	104	;'h'
  7045  104C  346F               	retlw	111	;'o'
  7046  104D  3450               	retlw	80	;'P'
  7047  104E  3469               	retlw	105	;'i'
  7048  104F  346E               	retlw	110	;'n'
  7049  1050  3420               	retlw	32	;' '
  7050  1051  3428               	retlw	40	;'('
  7051  1052  346D               	retlw	109	;'m'
  7052  1053  3475               	retlw	117	;'u'
  7053  1054  3473               	retlw	115	;'s'
  7054  1055  3474               	retlw	116	;'t'
  7055  1056  3420               	retlw	32	;' '
  7056  1057  3462               	retlw	98	;'b'
  7057  1058  3465               	retlw	101	;'e'
  7058  1059  3420               	retlw	32	;' '
  7059  105A  345B               	retlw	91	;'['
  7060  105B  3441               	retlw	65	;'A'
  7061  105C  3432               	retlw	50	;'2'
  7062  105D  342C               	retlw	44	;','
  7063  105E  3420               	retlw	32	;' '
  7064  105F  3441               	retlw	65	;'A'
  7065  1060  3434               	retlw	52	;'4'
  7066  1061  342C               	retlw	44	;','
  7067  1062  3420               	retlw	32	;' '
  7068  1063  3443               	retlw	67	;'C'
  7069  1064  3433               	retlw	51	;'3'
  7070  1065  342C               	retlw	44	;','
  7071  1066  3420               	retlw	32	;' '
  7072  1067  3443               	retlw	67	;'C'
  7073  1068  3435               	retlw	53	;'5'
  7074  1069  345D               	retlw	93	;']'
  7075  106A  3429               	retlw	41	;')'
  7076  106B  3400               	retlw	0
  7077                           
  7078                           	psect	stringtext3
  7079  106C                     __pstringtext3:
  7080  106C                     STR_4:
  7081  106C  3453               	retlw	83	;'S'
  7082  106D  3431               	retlw	49	;'1'
  7083  106E  3420               	retlw	32	;' '
  7084  106F  3425               	retlw	37	;'%'
  7085  1070  3475               	retlw	117	;'u'
  7086  1071  3400               	retlw	0
  7087                           
  7088                           	psect	stringtext4
  7089  1072                     __pstringtext4:
  7090  1072                     STR_5:
  7091  1072  3453               	retlw	83	;'S'
  7092  1073  3432               	retlw	50	;'2'
  7093  1074  3420               	retlw	32	;' '
  7094  1075  3425               	retlw	37	;'%'
  7095  1076  3475               	retlw	117	;'u'
  7096  1077  3400               	retlw	0
  7097                           
  7098                           	psect	stringtext5
  7099  1078                     __pstringtext5:
  7100  1078                     STR_3:
  7101  1078  3453               	retlw	83	;'S'
  7102  1079  3433               	retlw	51	;'3'
  7103  107A  3420               	retlw	32	;' '
  7104  107B  3425               	retlw	37	;'%'
  7105  107C  3475               	retlw	117	;'u'
  7106  107D  3400               	retlw	0
  7107                           
  7108                           	psect	stringtext6
  7109  0000                     __pstringtext6:
  7110                           
  7111                           	psect	cinit
  7112  0092                     start_initialization:	
  7113                           ; #config settings
  7114                           
  7115  0092                     __initialization:
  7116                           
  7117                           ; Clear objects allocated to COMMON
  7118  0092  01FA               	clrf	__pbssCOMMON& (0+127)
  7119  0093  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  7120  0094  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  7121  0095  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  7122                           
  7123                           ; Clear objects allocated to BANK1
  7124  0096  30A0               	movlw	low __pbssBANK1
  7125  0097  0084               	movwf	4
  7126  0098  3000               	movlw	high __pbssBANK1
  7127  0099  0085               	movwf	5
  7128  009A  303B               	movlw	59
  7129  009B  318A  2201  3180   	fcall	clear_ram0
  7130                           
  7131                           ; Clear objects allocated to BANK2
  7132  009E  3020               	movlw	low __pbssBANK2
  7133  009F  0084               	movwf	4
  7134  00A0  3001               	movlw	high __pbssBANK2
  7135  00A1  0085               	movwf	5
  7136  00A2  3038               	movlw	56
  7137  00A3  318A  2201  3180   	fcall	clear_ram0
  7138                           
  7139                           ; Clear objects allocated to BANK3
  7140  00A6  30A0               	movlw	low __pbssBANK3
  7141  00A7  0084               	movwf	4
  7142  00A8  3001               	movlw	high __pbssBANK3
  7143  00A9  0085               	movwf	5
  7144  00AA  3020               	movlw	32
  7145  00AB  318A  2201  3180   	fcall	clear_ram0
  7146  00AE                     end_of_initialization:	
  7147                           ;End of C runtime variable initialization code
  7148                           
  7149  00AE                     __end_of__initialization:
  7150  00AE  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7151  00AF  0020               	movlb	0
  7152  00B0  3180  28B2         	ljmp	_main	;jump to C main() function
  7153                           
  7154                           	psect	bssCOMMON
  7155  007A                     __pbssCOMMON:
  7156  007A                     _eusartRxTail:
  7157  007A                     	ds	1
  7158  007B                     _eusartRxHead:
  7159  007B                     	ds	1
  7160  007C                     _eusartTxHead:
  7161  007C                     	ds	1
  7162  007D                     _CountCallBack:
  7163  007D                     	ds	1
  7164                           
  7165                           	psect	bssBANK1
  7166  00A0                     __pbssBANK1:
  7167  00A0                     _nout:
  7168  00A0                     	ds	2
  7169  00A2                     _width:
  7170  00A2                     	ds	2
  7171  00A4                     _prec:
  7172  00A4                     	ds	2
  7173  00A6                     _flags:
  7174  00A6                     	ds	2
  7175  00A8                     _timer3ReloadVal:
  7176  00A8                     	ds	2
  7177  00AA                     _dutyCycle10bit:
  7178  00AA                     	ds	2
  7179  00AC                     _ocCount:
  7180  00AC                     	ds	2
  7181  00AE                     _currFreq:
  7182  00AE                     	ds	2
  7183  00B0                     _EUSART_ErrorHandler:
  7184  00B0                     	ds	2
  7185  00B2                     _EUSART_OverrunErrorHandler:
  7186  00B2                     	ds	2
  7187  00B4                     _EUSART_FramingErrorHandler:
  7188  00B4                     	ds	2
  7189  00B6                     _EUSART_RxDefaultInterruptHandler:
  7190  00B6                     	ds	2
  7191  00B8                     _EUSART_TxDefaultInterruptHandler:
  7192  00B8                     	ds	2
  7193  00BA                     _timer1ReloadVal:
  7194  00BA                     	ds	2
  7195  00BC                     _ticksDown@ccp3$F990:
  7196  00BC                     	ds	2
  7197  00BE                     _ticksUp@ccp3$F989:
  7198  00BE                     	ds	2
  7199  00C0                     _CCP3_CallBack:
  7200  00C0                     	ds	2
  7201  00C2                     _ticksDown@ccp2$F869:
  7202  00C2                     	ds	2
  7203  00C4                     _ticksUp@ccp2$F868:
  7204  00C4                     	ds	2
  7205  00C6                     _CCP2_CallBack:
  7206  00C6                     	ds	2
  7207  00C8                     _ticksDown:
  7208  00C8                     	ds	2
  7209  00CA                     _ticksUp:
  7210  00CA                     	ds	2
  7211  00CC                     _CCP1_CallBack:
  7212  00CC                     	ds	2
  7213  00CE                     _TMR0_InterruptHandler:
  7214  00CE                     	ds	2
  7215  00D0                     _eusartRxLastError:
  7216  00D0                     	ds	1
  7217  00D1                     _eusartRxCount:
  7218  00D1                     	ds	1
  7219  00D2                     _eusartTxBufferRemaining:
  7220  00D2                     	ds	1
  7221  00D3                     _eusartTxTail:
  7222  00D3                     	ds	1
  7223  00D4                     _lastTrig@ccp3$F992:
  7224  00D4                     	ds	1
  7225  00D5                     _sameSens@ccp3$F991:
  7226  00D5                     	ds	1
  7227  00D6                     _lastTrig@ccp2$F871:
  7228  00D6                     	ds	1
  7229  00D7                     _sameSens@ccp2$F870:
  7230  00D7                     	ds	1
  7231  00D8                     _lastTrig@ccp1$F729:
  7232  00D8                     	ds	1
  7233  00D9                     _sameSens:
  7234  00D9                     	ds	1
  7235  00DA                     _lastTrig:
  7236  00DA                     	ds	1
  7237                           
  7238                           	psect	bssBANK2
  7239  0120                     __pbssBANK2:
  7240  0120                     _eusartRxStatusBuffer:
  7241  0120                     	ds	8
  7242  0128                     _eusartRxBuffer:
  7243  0128                     	ds	8
  7244  0130                     _eusartTxBuffer:
  7245  0130                     	ds	8
  7246  0138                     _micros@FRT$F1531:
  7247  0138                     	ds	4
  7248  013C                     _millis:
  7249  013C                     	ds	4
  7250  0140                     _micros:
  7251  0140                     	ds	4
  7252  0144                     _dutyCyclePerMilli:
  7253  0144                     	ds	2
  7254  0146                     _Sens3:
  7255  0146                     	ds	6
  7256  014C                     _Sens2:
  7257  014C                     	ds	6
  7258  0152                     _Sens1:
  7259  0152                     	ds	6
  7260                           
  7261                           	psect	bssBANK3
  7262  01A0                     __pbssBANK3:
  7263  01A0                     _dbuf:
  7264  01A0                     	ds	32
  7265                           
  7266                           	psect	clrtext
  7267  0A01                     clear_ram0:	
  7268                           ;	Called with FSR0 containing the base address, and
  7269                           ;	WREG with the size to clear
  7270                           
  7271  0A01  0064               	clrwdt	;clear the watchdog before getting into this loop
  7272  0A02                     clrloop0:
  7273  0A02  0180               	clrf	0	;clear RAM location pointed to by FSR
  7274  0A03  3101               	addfsr 0,1
  7275  0A04  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7276  0A05  2A02               	goto	clrloop0	;have we reached the end yet?
  7277  0A06  3400               	retlw	0	;all done for this memory range, return
  7278                           
  7279                           	psect	cstackBANK1
  7280  00DB                     __pcstackBANK1:
  7281  00DB                     ??_printf:
  7282                           
  7283                           ; 1 bytes @ 0x0
  7284  00DB                     	ds	1
  7285  00DC                     printf@ap:
  7286                           
  7287                           ; 1 bytes @ 0x1
  7288  00DC                     	ds	1
  7289  00DD                     ?_JSN_Sensor_Init:
  7290  00DD                     JSN_Sensor_Init@trigPin:	
  7291                           ; 1 bytes @ 0x2
  7292                           
  7293                           
  7294                           ; 1 bytes @ 0x2
  7295  00DD                     	ds	1
  7296  00DE                     JSN_Sensor_Init@echoPin:
  7297                           
  7298                           ; 1 bytes @ 0x3
  7299  00DE                     	ds	1
  7300  00DF                     ??_JSN_Sensor_Init:
  7301                           
  7302                           ; 1 bytes @ 0x4
  7303  00DF                     	ds	2
  7304  00E1                     JSN_Sensor_Init@Sensor:
  7305                           
  7306                           ; 1 bytes @ 0x6
  7307  00E1                     	ds	1
  7308  00E2                     ??_main:
  7309                           
  7310                           ; 1 bytes @ 0x7
  7311  00E2                     	ds	4
  7312  00E6                     main@prevMilli:
  7313                           
  7314                           ; 4 bytes @ 0xB
  7315  00E6                     	ds	4
  7316  00EA                     main@nextSens:
  7317                           
  7318                           ; 1 bytes @ 0xF
  7319  00EA                     	ds	1
  7320  00EB                     main@numSens:
  7321                           
  7322                           ; 1 bytes @ 0x10
  7323  00EB                     	ds	1
  7324  00EC                     main@currMilli:
  7325                           
  7326                           ; 4 bytes @ 0x11
  7327  00EC                     	ds	4
  7328                           
  7329                           	psect	cstackCOMMON
  7330  0070                     __pcstackCOMMON:
  7331  0070                     ?_PIC16_Init:
  7332  0070                     ?_JSN_GetLastTrig:	
  7333                           ; 1 bytes @ 0x0
  7334                           
  7335  0070                     ??_JSN_GetLastTrig:	
  7336                           ; 1 bytes @ 0x0
  7337                           
  7338  0070                     ?_SYSTEM_Initialize:	
  7339                           ; 1 bytes @ 0x0
  7340                           
  7341  0070                     ?_PMD_Initialize:	
  7342                           ; 1 bytes @ 0x0
  7343                           
  7344  0070                     ?_PIN_MANAGER_Initialize:	
  7345                           ; 1 bytes @ 0x0
  7346                           
  7347  0070                     ?_OSCILLATOR_Initialize:	
  7348                           ; 1 bytes @ 0x0
  7349                           
  7350  0070                     ?_WDT_Initialize:	
  7351                           ; 1 bytes @ 0x0
  7352                           
  7353  0070                     ?_CCP3_Initialize:	
  7354                           ; 1 bytes @ 0x0
  7355                           
  7356  0070                     ?_CCP1_Initialize:	
  7357                           ; 1 bytes @ 0x0
  7358                           
  7359  0070                     ?_TMR2_Initialize:	
  7360                           ; 1 bytes @ 0x0
  7361                           
  7362  0070                     ?_TMR0_Initialize:	
  7363                           ; 1 bytes @ 0x0
  7364                           
  7365  0070                     ?_CCP2_Initialize:	
  7366                           ; 1 bytes @ 0x0
  7367                           
  7368  0070                     ?_CCP4_Initialize:	
  7369                           ; 1 bytes @ 0x0
  7370                           
  7371  0070                     ?_TMR3_Initialize:	
  7372                           ; 1 bytes @ 0x0
  7373                           
  7374  0070                     ?_PWM5_Initialize:	
  7375                           ; 1 bytes @ 0x0
  7376                           
  7377  0070                     ?_TMR1_Initialize:	
  7378                           ; 1 bytes @ 0x0
  7379                           
  7380  0070                     ?_EUSART_Initialize:	
  7381                           ; 1 bytes @ 0x0
  7382                           
  7383  0070                     ?_TMR0_CallBack:	
  7384                           ; 1 bytes @ 0x0
  7385                           
  7386  0070                     ??_TMR0_CallBack:	
  7387                           ; 1 bytes @ 0x0
  7388                           
  7389  0070                     ?_FRT_IncMillis:	
  7390                           ; 1 bytes @ 0x0
  7391                           
  7392  0070                     ??_FRT_IncMillis:	
  7393                           ; 1 bytes @ 0x0
  7394                           
  7395  0070                     ?_FRT_IncMicros:	
  7396                           ; 1 bytes @ 0x0
  7397                           
  7398  0070                     ??_FRT_IncMicros:	
  7399                           ; 1 bytes @ 0x0
  7400                           
  7401  0070                     ?_EUSART_Receive_ISR:	
  7402                           ; 1 bytes @ 0x0
  7403                           
  7404  0070                     ?_EUSART_Transmit_ISR:	
  7405                           ; 1 bytes @ 0x0
  7406                           
  7407  0070                     ??_EUSART_Transmit_ISR:	
  7408                           ; 1 bytes @ 0x0
  7409                           
  7410  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  7411                           ; 1 bytes @ 0x0
  7412                           
  7413  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  7414                           ; 1 bytes @ 0x0
  7415                           
  7416  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  7417                           ; 1 bytes @ 0x0
  7418                           
  7419  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  7420                           ; 1 bytes @ 0x0
  7421                           
  7422  0070                     ?_EUSART_DefaultErrorHandler:	
  7423                           ; 1 bytes @ 0x0
  7424                           
  7425  0070                     ?_EUSART_RxDataHandler:	
  7426                           ; 1 bytes @ 0x0
  7427                           
  7428  0070                     ??_EUSART_RxDataHandler:	
  7429                           ; 1 bytes @ 0x0
  7430                           
  7431  0070                     ?_CCP4_CompareISR:	
  7432                           ; 1 bytes @ 0x0
  7433                           
  7434  0070                     ??_CCP4_CompareISR:	
  7435                           ; 1 bytes @ 0x0
  7436                           
  7437  0070                     ?_TMR3_ISR:	
  7438                           ; 1 bytes @ 0x0
  7439                           
  7440  0070                     ?_TMR3_Reload:	
  7441                           ; 1 bytes @ 0x0
  7442                           
  7443  0070                     ?_JSN_Sensor_Trig:	
  7444                           ; 1 bytes @ 0x0
  7445                           
  7446  0070                     ?_ReadPin:	
  7447                           ; 1 bytes @ 0x0
  7448                           
  7449  0070                     ??_ReadPin:	
  7450                           ; 1 bytes @ 0x0
  7451                           
  7452  0070                     ?_TMR0_ReadTimer:	
  7453                           ; 1 bytes @ 0x0
  7454                           
  7455  0070                     ?_TMR0_ISR:	
  7456                           ; 1 bytes @ 0x0
  7457                           
  7458  0070                     ??_TMR0_ISR:	
  7459                           ; 1 bytes @ 0x0
  7460                           
  7461  0070                     ?_TMR0_GetCallBackNum:	
  7462                           ; 1 bytes @ 0x0
  7463                           
  7464  0070                     ?_CCP1_CaptureISR:	
  7465                           ; 1 bytes @ 0x0
  7466                           
  7467  0070                     ?_CCP2_CaptureISR:	
  7468                           ; 1 bytes @ 0x0
  7469                           
  7470  0070                     ?_CCP3_CaptureISR:	
  7471                           ; 1 bytes @ 0x0
  7472                           
  7473  0070                     ?_TMR1_WriteTimer:	
  7474                           ; 1 bytes @ 0x0
  7475                           
  7476  0070                     ?_TMR1_ISR:	
  7477                           ; 1 bytes @ 0x0
  7478                           
  7479  0070                     ?_EUSART_Write:	
  7480                           ; 1 bytes @ 0x0
  7481                           
  7482  0070                     ?_putch:	
  7483                           ; 1 bytes @ 0x0
  7484                           
  7485  0070                     ?_INTERRUPT_InterruptManager:	
  7486                           ; 1 bytes @ 0x0
  7487                           
  7488  0070                     ?_TMR3_WriteTimer:	
  7489                           ; 1 bytes @ 0x0
  7490                           
  7491  0070                     ?_main:	
  7492                           ; 1 bytes @ 0x0
  7493                           
  7494  0070                     TMR1_WriteTimer@timerVal:	
  7495                           ; 2 bytes @ 0x0
  7496                           
  7497  0070                     TMR3_WriteTimer@timerVal:	
  7498                           ; 2 bytes @ 0x0
  7499                           
  7500                           
  7501                           ; 2 bytes @ 0x0
  7502  0070                     	ds	1
  7503  0071                     ??_EUSART_Receive_ISR:
  7504  0071                     ??_EUSART_DefaultErrorHandler:	
  7505                           ; 1 bytes @ 0x1
  7506                           
  7507                           
  7508                           ; 1 bytes @ 0x1
  7509  0071                     	ds	1
  7510  0072                     ??_TMR3_ISR:
  7511  0072                     ??_TMR3_Reload:	
  7512                           ; 1 bytes @ 0x2
  7513                           
  7514  0072                     ??_TMR1_WriteTimer:	
  7515                           ; 1 bytes @ 0x2
  7516                           
  7517  0072                     ??_TMR1_ISR:	
  7518                           ; 1 bytes @ 0x2
  7519                           
  7520  0072                     ??_TMR3_WriteTimer:	
  7521                           ; 1 bytes @ 0x2
  7522                           
  7523  0072                     ReadPin@pin:	
  7524                           ; 1 bytes @ 0x2
  7525                           
  7526                           
  7527                           ; 1 bytes @ 0x2
  7528  0072                     	ds	1
  7529  0073                     ?_CCP1_DefaultCallBack:
  7530  0073                     ?_CCP2_DefaultCallBack:	
  7531                           ; 1 bytes @ 0x3
  7532                           
  7533  0073                     ?_CCP3_DefaultCallBack:	
  7534                           ; 1 bytes @ 0x3
  7535                           
  7536  0073                     CCP1_DefaultCallBack@capturedValue:	
  7537                           ; 1 bytes @ 0x3
  7538                           
  7539  0073                     CCP2_DefaultCallBack@capturedValue:	
  7540                           ; 2 bytes @ 0x3
  7541                           
  7542  0073                     CCP3_DefaultCallBack@capturedValue:	
  7543                           ; 2 bytes @ 0x3
  7544                           
  7545                           
  7546                           ; 2 bytes @ 0x3
  7547  0073                     	ds	2
  7548  0075                     ??_CCP1_DefaultCallBack:
  7549  0075                     ??_CCP2_DefaultCallBack:	
  7550                           ; 1 bytes @ 0x5
  7551                           
  7552  0075                     ??_CCP3_DefaultCallBack:	
  7553                           ; 1 bytes @ 0x5
  7554                           
  7555                           
  7556                           ; 1 bytes @ 0x5
  7557  0075                     	ds	2
  7558  0077                     ??_CCP1_CaptureISR:
  7559  0077                     ??_CCP2_CaptureISR:	
  7560                           ; 1 bytes @ 0x7
  7561                           
  7562  0077                     ??_CCP3_CaptureISR:	
  7563                           ; 1 bytes @ 0x7
  7564                           
  7565                           
  7566                           ; 1 bytes @ 0x7
  7567  0077                     	ds	1
  7568  0078                     CCP1_CaptureISR@module:
  7569  0078                     CCP2_CaptureISR@module:	
  7570                           ; 2 bytes @ 0x8
  7571                           
  7572  0078                     CCP3_CaptureISR@module:	
  7573                           ; 2 bytes @ 0x8
  7574                           
  7575                           
  7576                           ; 2 bytes @ 0x8
  7577  0078                     	ds	2
  7578  007A                     ??_INTERRUPT_InterruptManager:
  7579                           
  7580                           	psect	cstackBANK0
  7581  0020                     __pcstackBANK0:	
  7582                           ; 1 bytes @ 0xA
  7583                           
  7584  0020                     ?_SetPin:
  7585  0020                     ?_WritePin:	
  7586                           ; 1 bytes @ 0x0
  7587                           
  7588  0020                     ??_PMD_Initialize:	
  7589                           ; 1 bytes @ 0x0
  7590                           
  7591  0020                     ??_PIN_MANAGER_Initialize:	
  7592                           ; 1 bytes @ 0x0
  7593                           
  7594  0020                     ??_OSCILLATOR_Initialize:	
  7595                           ; 1 bytes @ 0x0
  7596                           
  7597  0020                     ??_WDT_Initialize:	
  7598                           ; 1 bytes @ 0x0
  7599                           
  7600  0020                     ??_TMR2_Initialize:	
  7601                           ; 1 bytes @ 0x0
  7602                           
  7603  0020                     ??_CCP4_Initialize:	
  7604                           ; 1 bytes @ 0x0
  7605                           
  7606  0020                     ??_TMR3_Initialize:	
  7607                           ; 1 bytes @ 0x0
  7608                           
  7609  0020                     ??_PWM5_Initialize:	
  7610                           ; 1 bytes @ 0x0
  7611                           
  7612  0020                     ??_TMR1_Initialize:	
  7613                           ; 1 bytes @ 0x0
  7614                           
  7615  0020                     ?_TMR0_SetInterruptHandler:	
  7616                           ; 1 bytes @ 0x0
  7617                           
  7618  0020                     ?_CCP1_SetCallBack:	
  7619                           ; 1 bytes @ 0x0
  7620                           
  7621  0020                     ?_CCP2_SetCallBack:	
  7622                           ; 1 bytes @ 0x0
  7623                           
  7624  0020                     ?_CCP3_SetCallBack:	
  7625                           ; 1 bytes @ 0x0
  7626                           
  7627  0020                     ?_EUSART_SetRxInterruptHandler:	
  7628                           ; 1 bytes @ 0x0
  7629                           
  7630  0020                     ?_EUSART_SetTxInterruptHandler:	
  7631                           ; 1 bytes @ 0x0
  7632                           
  7633  0020                     ?_EUSART_SetFramingErrorHandler:	
  7634                           ; 1 bytes @ 0x0
  7635                           
  7636  0020                     ?_EUSART_SetOverrunErrorHandler:	
  7637                           ; 1 bytes @ 0x0
  7638                           
  7639  0020                     ?_EUSART_SetErrorHandler:	
  7640                           ; 1 bytes @ 0x0
  7641                           
  7642  0020                     ??_TMR0_ReadTimer:	
  7643                           ; 1 bytes @ 0x0
  7644                           
  7645  0020                     ??_TMR0_GetCallBackNum:	
  7646                           ; 1 bytes @ 0x0
  7647                           
  7648  0020                     ??_EUSART_Write:	
  7649                           ; 1 bytes @ 0x0
  7650                           
  7651  0020                     ?_strlen:	
  7652                           ; 1 bytes @ 0x0
  7653                           
  7654  0020                     ?___wmul:	
  7655                           ; 2 bytes @ 0x0
  7656                           
  7657  0020                     ?_FRT_GetMillis:	
  7658                           ; 2 bytes @ 0x0
  7659                           
  7660  0020                     ?___lmul:	
  7661                           ; 4 bytes @ 0x0
  7662                           
  7663  0020                     ?___lodiv:	
  7664                           ; 4 bytes @ 0x0
  7665                           
  7666  0020                     ?___lomod:	
  7667                           ; 8 bytes @ 0x0
  7668                           
  7669  0020                     SetPin@io:	
  7670                           ; 8 bytes @ 0x0
  7671                           
  7672  0020                     WritePin@val:	
  7673                           ; 1 bytes @ 0x0
  7674                           
  7675  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  7676                           ; 1 bytes @ 0x0
  7677                           
  7678  0020                     CCP1_SetCallBack@customCallBack:	
  7679                           ; 2 bytes @ 0x0
  7680                           
  7681  0020                     CCP2_SetCallBack@customCallBack:	
  7682                           ; 2 bytes @ 0x0
  7683                           
  7684  0020                     CCP3_SetCallBack@customCallBack:	
  7685                           ; 2 bytes @ 0x0
  7686                           
  7687  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  7688                           ; 2 bytes @ 0x0
  7689                           
  7690  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  7691                           ; 2 bytes @ 0x0
  7692                           
  7693  0020                     EUSART_SetErrorHandler@interruptHandler:	
  7694                           ; 2 bytes @ 0x0
  7695                           
  7696  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  7697                           ; 2 bytes @ 0x0
  7698                           
  7699  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  7700                           ; 2 bytes @ 0x0
  7701                           
  7702  0020                     ___wmul@multiplier:	
  7703                           ; 2 bytes @ 0x0
  7704                           
  7705  0020                     ___lmul@multiplier:	
  7706                           ; 2 bytes @ 0x0
  7707                           
  7708  0020                     ___lodiv@divisor:	
  7709                           ; 4 bytes @ 0x0
  7710                           
  7711  0020                     ___lomod@divisor:	
  7712                           ; 8 bytes @ 0x0
  7713                           
  7714                           
  7715                           ; 8 bytes @ 0x0
  7716  0020                     	ds	1
  7717  0021                     ??_SetPin:
  7718  0021                     ??_WritePin:	
  7719                           ; 1 bytes @ 0x1
  7720                           
  7721  0021                     TMR0_ReadTimer@readVal:	
  7722                           ; 1 bytes @ 0x1
  7723                           
  7724  0021                     EUSART_Write@txData:	
  7725                           ; 1 bytes @ 0x1
  7726                           
  7727                           
  7728                           ; 1 bytes @ 0x1
  7729  0021                     	ds	1
  7730  0022                     ??_CCP3_Initialize:
  7731  0022                     ??_CCP1_Initialize:	
  7732                           ; 1 bytes @ 0x2
  7733                           
  7734  0022                     ??_TMR0_Initialize:	
  7735                           ; 1 bytes @ 0x2
  7736                           
  7737  0022                     ??_CCP2_Initialize:	
  7738                           ; 1 bytes @ 0x2
  7739                           
  7740  0022                     ??_EUSART_Initialize:	
  7741                           ; 1 bytes @ 0x2
  7742                           
  7743  0022                     ??_TMR0_SetInterruptHandler:	
  7744                           ; 1 bytes @ 0x2
  7745                           
  7746  0022                     ??_CCP1_SetCallBack:	
  7747                           ; 1 bytes @ 0x2
  7748                           
  7749  0022                     ??_CCP2_SetCallBack:	
  7750                           ; 1 bytes @ 0x2
  7751                           
  7752  0022                     ??_CCP3_SetCallBack:	
  7753                           ; 1 bytes @ 0x2
  7754                           
  7755  0022                     ??_EUSART_SetRxInterruptHandler:	
  7756                           ; 1 bytes @ 0x2
  7757                           
  7758  0022                     ??_EUSART_SetTxInterruptHandler:	
  7759                           ; 1 bytes @ 0x2
  7760                           
  7761  0022                     ??_EUSART_SetFramingErrorHandler:	
  7762                           ; 1 bytes @ 0x2
  7763                           
  7764  0022                     ??_EUSART_SetOverrunErrorHandler:	
  7765                           ; 1 bytes @ 0x2
  7766                           
  7767  0022                     ??_EUSART_SetErrorHandler:	
  7768                           ; 1 bytes @ 0x2
  7769                           
  7770  0022                     ??_strlen:	
  7771                           ; 1 bytes @ 0x2
  7772                           
  7773  0022                     ??_putch:	
  7774                           ; 1 bytes @ 0x2
  7775                           
  7776  0022                     putch@txData:	
  7777                           ; 1 bytes @ 0x2
  7778                           
  7779  0022                     ___wmul@multiplicand:	
  7780                           ; 1 bytes @ 0x2
  7781                           
  7782                           
  7783                           ; 2 bytes @ 0x2
  7784  0022                     	ds	1
  7785  0023                     ??_PIC16_Init:
  7786  0023                     ??_SYSTEM_Initialize:	
  7787                           ; 1 bytes @ 0x3
  7788                           
  7789  0023                     ?_fputc:	
  7790                           ; 1 bytes @ 0x3
  7791                           
  7792  0023                     SetPin@pin:	
  7793                           ; 2 bytes @ 0x3
  7794                           
  7795  0023                     WritePin@pin:	
  7796                           ; 1 bytes @ 0x3
  7797                           
  7798  0023                     strlen@a:	
  7799                           ; 1 bytes @ 0x3
  7800                           
  7801  0023                     fputc@c:	
  7802                           ; 1 bytes @ 0x3
  7803                           
  7804                           
  7805                           ; 2 bytes @ 0x3
  7806  0023                     	ds	1
  7807  0024                     ??_FRT_GetMillis:
  7808  0024                     ??___wmul:	
  7809                           ; 1 bytes @ 0x4
  7810                           
  7811  0024                     strlen@s:	
  7812                           ; 1 bytes @ 0x4
  7813                           
  7814  0024                     ___wmul@product:	
  7815                           ; 1 bytes @ 0x4
  7816                           
  7817  0024                     ___lmul@multiplicand:	
  7818                           ; 2 bytes @ 0x4
  7819                           
  7820                           
  7821                           ; 4 bytes @ 0x4
  7822  0024                     	ds	1
  7823  0025                     fputc@fp:
  7824                           
  7825                           ; 1 bytes @ 0x5
  7826  0025                     	ds	1
  7827  0026                     ??_fputc:
  7828  0026                     ?_FRT_GetMicros:	
  7829                           ; 1 bytes @ 0x6
  7830                           
  7831                           
  7832                           ; 4 bytes @ 0x6
  7833  0026                     	ds	2
  7834  0028                     ??___lmul:
  7835  0028                     ___lmul@product:	
  7836                           ; 1 bytes @ 0x8
  7837                           
  7838  0028                     ___lodiv@dividend:	
  7839                           ; 4 bytes @ 0x8
  7840                           
  7841  0028                     ___lomod@dividend:	
  7842                           ; 8 bytes @ 0x8
  7843                           
  7844                           
  7845                           ; 8 bytes @ 0x8
  7846  0028                     	ds	2
  7847  002A                     ??_FRT_GetMicros:
  7848                           
  7849                           ; 1 bytes @ 0xA
  7850  002A                     	ds	1
  7851  002B                     ?_fputs:
  7852  002B                     fputs@fp:	
  7853                           ; 2 bytes @ 0xB
  7854                           
  7855                           
  7856                           ; 1 bytes @ 0xB
  7857  002B                     	ds	1
  7858  002C                     ??_fputs:
  7859  002C                     ?___lldiv:	
  7860                           ; 1 bytes @ 0xC
  7861                           
  7862  002C                     ___lldiv@divisor:	
  7863                           ; 4 bytes @ 0xC
  7864                           
  7865                           
  7866                           ; 4 bytes @ 0xC
  7867  002C                     	ds	3
  7868  002F                     fputs@c:
  7869                           
  7870                           ; 1 bytes @ 0xF
  7871  002F                     	ds	1
  7872  0030                     ??___lodiv:
  7873  0030                     ??___lomod:	
  7874                           ; 1 bytes @ 0x10
  7875                           
  7876  0030                     fputs@i:	
  7877                           ; 1 bytes @ 0x10
  7878                           
  7879  0030                     ___lldiv@dividend:	
  7880                           ; 2 bytes @ 0x10
  7881                           
  7882                           
  7883                           ; 4 bytes @ 0x10
  7884  0030                     	ds	1
  7885  0031                     ___lomod@counter:
  7886  0031                     ___lodiv@quotient:	
  7887                           ; 1 bytes @ 0x11
  7888                           
  7889                           
  7890                           ; 8 bytes @ 0x11
  7891  0031                     	ds	1
  7892  0032                     fputs@s:
  7893                           
  7894                           ; 1 bytes @ 0x12
  7895  0032                     	ds	1
  7896  0033                     ?_pad:
  7897  0033                     pad@buf:	
  7898                           ; 2 bytes @ 0x13
  7899                           
  7900                           
  7901                           ; 1 bytes @ 0x13
  7902  0033                     	ds	1
  7903  0034                     ??___lldiv:
  7904  0034                     pad@p:	
  7905                           ; 1 bytes @ 0x14
  7906                           
  7907                           
  7908                           ; 2 bytes @ 0x14
  7909  0034                     	ds	1
  7910  0035                     ___lldiv@quotient:
  7911                           
  7912                           ; 4 bytes @ 0x15
  7913  0035                     	ds	1
  7914  0036                     ??_pad:
  7915                           
  7916                           ; 1 bytes @ 0x16
  7917  0036                     	ds	1
  7918  0037                     pad@i:
  7919                           
  7920                           ; 2 bytes @ 0x17
  7921  0037                     	ds	1
  7922  0038                     ??_JSN_Sensor_Trig:
  7923                           
  7924                           ; 1 bytes @ 0x18
  7925  0038                     	ds	1
  7926  0039                     ___lldiv@counter:
  7927  0039                     ___lodiv@counter:	
  7928                           ; 1 bytes @ 0x19
  7929                           
  7930  0039                     pad@w:	
  7931                           ; 1 bytes @ 0x19
  7932                           
  7933                           
  7934                           ; 2 bytes @ 0x19
  7935  0039                     	ds	1
  7936  003A                     ?_JSN_Sensor_GetDistance:
  7937                           
  7938                           ; 2 bytes @ 0x1A
  7939  003A                     	ds	1
  7940  003B                     pad@fp:
  7941                           
  7942                           ; 1 bytes @ 0x1B
  7943  003B                     	ds	1
  7944  003C                     ??_JSN_Sensor_GetDistance:
  7945  003C                     ?_utoa:	
  7946                           ; 1 bytes @ 0x1C
  7947                           
  7948  003C                     JSN_Sensor_Trig@Sensor:	
  7949                           ; 2 bytes @ 0x1C
  7950                           
  7951  003C                     utoa@d:	
  7952                           ; 1 bytes @ 0x1C
  7953                           
  7954                           
  7955                           ; 8 bytes @ 0x1C
  7956  003C                     	ds	2
  7957  003E                     JSN_Sensor_GetDistance@Sensor:
  7958                           
  7959                           ; 1 bytes @ 0x1E
  7960  003E                     	ds	6
  7961  0044                     ??_utoa:
  7962                           
  7963                           ; 1 bytes @ 0x24
  7964  0044                     	ds	1
  7965  0045                     utoa@p:
  7966                           
  7967                           ; 2 bytes @ 0x25
  7968  0045                     	ds	2
  7969  0047                     utoa@fp:
  7970                           
  7971                           ; 1 bytes @ 0x27
  7972  0047                     	ds	1
  7973  0048                     utoa@w:
  7974                           
  7975                           ; 2 bytes @ 0x28
  7976  0048                     	ds	2
  7977  004A                     utoa@n:
  7978                           
  7979                           ; 8 bytes @ 0x2A
  7980  004A                     	ds	8
  7981  0052                     utoa@i:
  7982                           
  7983                           ; 2 bytes @ 0x32
  7984  0052                     	ds	2
  7985  0054                     ?_vfpfcnvrt:
  7986  0054                     vfpfcnvrt@fmt:	
  7987                           ; 2 bytes @ 0x34
  7988                           
  7989                           
  7990                           ; 1 bytes @ 0x34
  7991  0054                     	ds	1
  7992  0055                     vfpfcnvrt@ap:
  7993                           
  7994                           ; 1 bytes @ 0x35
  7995  0055                     	ds	1
  7996  0056                     ??_vfpfcnvrt:
  7997                           
  7998                           ; 1 bytes @ 0x36
  7999  0056                     	ds	5
  8000  005B                     vfpfcnvrt@llu:
  8001                           
  8002                           ; 8 bytes @ 0x3B
  8003  005B                     	ds	8
  8004  0063                     vfpfcnvrt@fp:
  8005                           
  8006                           ; 1 bytes @ 0x43
  8007  0063                     	ds	1
  8008  0064                     ?_vfprintf:
  8009  0064                     vfprintf@fmt:	
  8010                           ; 2 bytes @ 0x44
  8011                           
  8012                           
  8013                           ; 2 bytes @ 0x44
  8014  0064                     	ds	2
  8015  0066                     vfprintf@ap:
  8016                           
  8017                           ; 1 bytes @ 0x46
  8018  0066                     	ds	1
  8019  0067                     ??_vfprintf:
  8020                           
  8021                           ; 1 bytes @ 0x47
  8022  0067                     	ds	2
  8023  0069                     vfprintf@fp:
  8024                           
  8025                           ; 1 bytes @ 0x49
  8026  0069                     	ds	1
  8027  006A                     vfprintf@cfmt:
  8028                           
  8029                           ; 2 bytes @ 0x4A
  8030  006A                     	ds	2
  8031  006C                     ?_printf:
  8032  006C                     printf@fmt:	
  8033                           ; 2 bytes @ 0x4C
  8034                           
  8035                           
  8036                           ; 2 bytes @ 0x4C
  8037  006C                     	ds	4
  8038                           
  8039                           	psect	maintext
  8040  00B2                     __pmaintext:	
  8041 ;;
  8042 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  8043 ;;
  8044 ;; *************** function _main *****************
  8045 ;; Defined at:
  8046 ;;		line 147 in file "JSN_Sensor.c"
  8047 ;; Parameters:    Size  Location     Type
  8048 ;;		None
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;  currMilli       4   17[BANK1 ] unsigned long 
  8051 ;;  prevMilli       4   11[BANK1 ] unsigned long 
  8052 ;;  numSens         1   16[BANK1 ] unsigned char 
  8053 ;;  nextSens        1   15[BANK1 ] unsigned char 
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  2   64[None  ] int 
  8056 ;; Registers used:
  8057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8058 ;; Tracked objects:
  8059 ;;		On entry : B1F/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8064 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  8065 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8066 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8067 ;;Total ram usage:       14 bytes
  8068 ;; Hardware stack levels required when called: 14
  8069 ;; This function calls:
  8070 ;;		_FRT_GetMillis
  8071 ;;		_JSN_Sensor_GetDistance
  8072 ;;		_JSN_Sensor_Init
  8073 ;;		_JSN_Sensor_Trig
  8074 ;;		_PIC16_Init
  8075 ;;		_SetPin
  8076 ;;		_WritePin
  8077 ;;		_printf
  8078 ;; This function is called by:
  8079 ;;		Startup code after reset
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083  00B2                     _main:	
  8084                           ;psect for function _main
  8085                           
  8086  00B2                     l4229:	
  8087                           ;incstack = 0
  8088                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8089                           
  8090                           
  8091                           ;JSN_Sensor.c: 149:     PIC16_Init();
  8092  00B2  318B  2334  3180   	fcall	_PIC16_Init
  8093  00B5                     l4231:
  8094                           
  8095                           ;JSN_Sensor.c: 150:     uint8_t numSens = 3;
  8096  00B5  3003               	movlw	3
  8097  00B6  0021               	movlb	1	; select bank1
  8098  00B7  00E2               	movwf	??_main^(0+128)
  8099  00B8  0862               	movf	??_main^(0+128),w
  8100  00B9  00EB               	movwf	main@numSens^(0+128)
  8101                           
  8102                           ;JSN_Sensor.c: 158:     switch (numSens) {
  8103  00BA  28F3               	goto	l4239
  8104  00BB                     l4233:
  8105                           
  8106                           ;JSN_Sensor.c: 160:             if (JSN_Sensor_Init(&Sens3, B7, A2) == 0xFF)
  8107  00BB  3008               	movlw	8
  8108  00BC  00E2               	movwf	??_main^(0+128)
  8109  00BD  0862               	movf	??_main^(0+128),w
  8110  00BE  00DD               	movwf	JSN_Sensor_Init@trigPin^(0+128)
  8111  00BF  300B               	movlw	11
  8112  00C0  00E3               	movwf	(??_main+1)^(0+128)
  8113  00C1  0863               	movf	(??_main+1)^(0+128),w
  8114  00C2  00DE               	movwf	JSN_Sensor_Init@echoPin^(0+128)
  8115  00C3  3046               	movlw	(low (_Sens3| (0+256)))& (0+255)
  8116  00C4  3185  252E  3180   	fcall	_JSN_Sensor_Init
  8117  00C7  3AFF               	xorlw	255
  8118  00C8  1D03               	skipz
  8119  00C9  28CB               	goto	u1561
  8120  00CA  28CC               	goto	u1560
  8121  00CB                     u1561:
  8122  00CB  28CD               	goto	l4235
  8123  00CC                     u1560:
  8124  00CC                     l68:	
  8125                           ;JSN_Sensor.c: 161:                 while (1);
  8126                           
  8127  00CC                     l69:
  8128  00CC  28CC               	goto	l68
  8129  00CD                     l4235:
  8130                           
  8131                           ;JSN_Sensor.c: 163:             if (JSN_Sensor_Init(&Sens2, A1, C3) == 0xFF)
  8132  00CD  300A               	movlw	10
  8133  00CE  0021               	movlb	1	; select bank1
  8134  00CF  00E2               	movwf	??_main^(0+128)
  8135  00D0  0862               	movf	??_main^(0+128),w
  8136  00D1  00DD               	movwf	JSN_Sensor_Init@trigPin^(0+128)
  8137  00D2  3005               	movlw	5
  8138  00D3  00E3               	movwf	(??_main+1)^(0+128)
  8139  00D4  0863               	movf	(??_main+1)^(0+128),w
  8140  00D5  00DE               	movwf	JSN_Sensor_Init@echoPin^(0+128)
  8141  00D6  304C               	movlw	(low (_Sens2| (0+256)))& (0+255)
  8142  00D7  3185  252E  3180   	fcall	_JSN_Sensor_Init
  8143  00DA  3AFF               	xorlw	255
  8144  00DB  1D03               	skipz
  8145  00DC  28DE               	goto	u1571
  8146  00DD  28DF               	goto	u1570
  8147  00DE                     u1571:
  8148  00DE  28E0               	goto	l4237
  8149  00DF                     u1570:
  8150  00DF                     l73:	
  8151                           ;JSN_Sensor.c: 164:                 while (1);
  8152                           
  8153  00DF                     l74:
  8154  00DF  28DF               	goto	l73
  8155  00E0                     l4237:
  8156                           
  8157                           ;JSN_Sensor.c: 166:             if (JSN_Sensor_Init(&Sens1, C6, C5) == 0xFF)
  8158  00E0  3006               	movlw	6
  8159  00E1  0021               	movlb	1	; select bank1
  8160  00E2  00E2               	movwf	??_main^(0+128)
  8161  00E3  0862               	movf	??_main^(0+128),w
  8162  00E4  00DD               	movwf	JSN_Sensor_Init@trigPin^(0+128)
  8163  00E5  3003               	movlw	3
  8164  00E6  00E3               	movwf	(??_main+1)^(0+128)
  8165  00E7  0863               	movf	(??_main+1)^(0+128),w
  8166  00E8  00DE               	movwf	JSN_Sensor_Init@echoPin^(0+128)
  8167  00E9  3052               	movlw	(low (_Sens1| (0+256)))& (0+255)
  8168  00EA  3185  252E  3180   	fcall	_JSN_Sensor_Init
  8169  00ED  3AFF               	xorlw	255
  8170  00EE  1D03               	skipz
  8171  00EF  28F1               	goto	u1581
  8172  00F0  28F2               	goto	u1580
  8173  00F1                     u1581:
  8174  00F1  2903               	goto	l4241
  8175  00F2                     u1580:
  8176  00F2                     l78:	
  8177                           ;JSN_Sensor.c: 167:                 while (1);
  8178                           
  8179  00F2                     l79:
  8180  00F2  28F2               	goto	l78
  8181  00F3                     l4239:
  8182                           
  8183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8184                           ; Switch size 1, requested type "simple"
  8185                           ; Number of cases is 1, Range of values is 0 to 0
  8186                           ; switch strategies available:
  8187                           ; Name         Instructions Cycles
  8188                           ; simple_byte            4     3 (average)
  8189                           ; direct_byte            8     6 (fixed)
  8190                           ; jumptable            260     6 (fixed)
  8191                           ;	Chosen strategy is simple_byte
  8192  00F3  3000               	movlw	0
  8193  00F4  3A00               	xorlw	0	; case 0
  8194  00F5  1903               	skipnz
  8195  00F6  28F8               	goto	l4683
  8196  00F7  2903               	goto	l4241
  8197  00F8                     l4683:
  8198                           
  8199                           ; Switch size 1, requested type "simple"
  8200                           ; Number of cases is 3, Range of values is 1 to 3
  8201                           ; switch strategies available:
  8202                           ; Name         Instructions Cycles
  8203                           ; simple_byte           10     6 (average)
  8204                           ; direct_byte           15     9 (fixed)
  8205                           ; jumptable            263     9 (fixed)
  8206                           ;	Chosen strategy is simple_byte
  8207  00F8  3003               	movlw	3
  8208  00F9  3A01               	xorlw	1	; case 1
  8209  00FA  1903               	skipnz
  8210  00FB  28E0               	goto	l4237
  8211  00FC  3A03               	xorlw	3	; case 2
  8212  00FD  1903               	skipnz
  8213  00FE  28CD               	goto	l4235
  8214  00FF  3A01               	xorlw	1	; case 3
  8215  0100  1903               	skipnz
  8216  0101  28BB               	goto	l4233
  8217  0102  2903               	goto	l4241
  8218  0103                     l4241:
  8219                           
  8220                           ;JSN_Sensor.c: 172:     unsigned long prevMilli = 0;
  8221  0103  3000               	movlw	0
  8222  0104  0021               	movlb	1	; select bank1
  8223  0105  00E9               	movwf	(main@prevMilli+3)^(0+128)
  8224  0106  3000               	movlw	0
  8225  0107  00E8               	movwf	(main@prevMilli+2)^(0+128)
  8226  0108  3000               	movlw	0
  8227  0109  00E7               	movwf	(main@prevMilli+1)^(0+128)
  8228  010A  3000               	movlw	0
  8229  010B  00E6               	movwf	main@prevMilli^(0+128)
  8230  010C                     l4243:
  8231                           
  8232                           ;JSN_Sensor.c: 173:     uint8_t nextSens = 1;
  8233  010C  01EA               	clrf	main@nextSens^(0+128)
  8234  010D  0AEA               	incf	main@nextSens^(0+128),f
  8235  010E                     l4245:
  8236                           
  8237                           ;JSN_Sensor.c: 176:     SetPin(C0, 0);
  8238  010E  0020               	movlb	0	; select bank0
  8239  010F  01A0               	clrf	SetPin@io
  8240  0110  300C               	movlw	12
  8241  0111  3184  2473  3180   	fcall	_SetPin
  8242  0114                     l4247:
  8243                           
  8244                           ;JSN_Sensor.c: 177:     WritePin(C0, 0);
  8245  0114  0020               	movlb	0	; select bank0
  8246  0115  01A0               	clrf	WritePin@val
  8247  0116  300C               	movlw	12
  8248  0117  3183  23B8  3180   	fcall	_WritePin
  8249  011A                     l4249:
  8250                           
  8251                           ;JSN_Sensor.c: 179:     JSN_Sensor_Trig(&Sens3);
  8252  011A  3046               	movlw	(low (_Sens3| (0+256)))& (0+255)
  8253  011B  318F  27A7  3180   	fcall	_JSN_Sensor_Trig
  8254  011E                     l4251:
  8255                           
  8256                           ;JSN_Sensor.c: 180:     currMilli = FRT_GetMillis();
  8257  011E  318B  2301  3180   	fcall	_FRT_GetMillis
  8258  0121  0020               	movlb	0	; select bank0
  8259  0122  0823               	movf	?_FRT_GetMillis+3,w
  8260  0123  0021               	movlb	1	; select bank1
  8261  0124  00EF               	movwf	(main@currMilli+3)^(0+128)
  8262  0125  0020               	movlb	0	; select bank0
  8263  0126  0822               	movf	?_FRT_GetMillis+2,w
  8264  0127  0021               	movlb	1	; select bank1
  8265  0128  00EE               	movwf	(main@currMilli+2)^(0+128)
  8266  0129  0020               	movlb	0	; select bank0
  8267  012A  0821               	movf	?_FRT_GetMillis+1,w
  8268  012B  0021               	movlb	1	; select bank1
  8269  012C  00ED               	movwf	(main@currMilli+1)^(0+128)
  8270  012D  0020               	movlb	0	; select bank0
  8271  012E  0820               	movf	?_FRT_GetMillis,w
  8272  012F  0021               	movlb	1	; select bank1
  8273  0130  00EC               	movwf	main@currMilli^(0+128)
  8274  0131                     l4253:
  8275                           
  8276                           ;JSN_Sensor.c: 181:     prevMilli = currMilli;
  8277  0131  0021               	movlb	1	; select bank1
  8278  0132  086F               	movf	(main@currMilli+3)^(0+128),w
  8279  0133  00E9               	movwf	(main@prevMilli+3)^(0+128)
  8280  0134  086E               	movf	(main@currMilli+2)^(0+128),w
  8281  0135  00E8               	movwf	(main@prevMilli+2)^(0+128)
  8282  0136  086D               	movf	(main@currMilli+1)^(0+128),w
  8283  0137  00E7               	movwf	(main@prevMilli+1)^(0+128)
  8284  0138  086C               	movf	main@currMilli^(0+128),w
  8285  0139  00E6               	movwf	main@prevMilli^(0+128)
  8286  013A                     l4255:
  8287                           
  8288                           ;JSN_Sensor.c: 185:         currMilli = FRT_GetMillis();
  8289  013A  318B  2301  3180   	fcall	_FRT_GetMillis
  8290  013D  0020               	movlb	0	; select bank0
  8291  013E  0823               	movf	?_FRT_GetMillis+3,w
  8292  013F  0021               	movlb	1	; select bank1
  8293  0140  00EF               	movwf	(main@currMilli+3)^(0+128)
  8294  0141  0020               	movlb	0	; select bank0
  8295  0142  0822               	movf	?_FRT_GetMillis+2,w
  8296  0143  0021               	movlb	1	; select bank1
  8297  0144  00EE               	movwf	(main@currMilli+2)^(0+128)
  8298  0145  0020               	movlb	0	; select bank0
  8299  0146  0821               	movf	?_FRT_GetMillis+1,w
  8300  0147  0021               	movlb	1	; select bank1
  8301  0148  00ED               	movwf	(main@currMilli+1)^(0+128)
  8302  0149  0020               	movlb	0	; select bank0
  8303  014A  0820               	movf	?_FRT_GetMillis,w
  8304  014B  0021               	movlb	1	; select bank1
  8305  014C  00EC               	movwf	main@currMilli^(0+128)
  8306  014D                     l4257:
  8307                           
  8308                           ;JSN_Sensor.c: 188:         if ((currMilli - prevMilli) >= 50) {
  8309  014D  0866               	movf	main@prevMilli^(0+128),w
  8310  014E  026C               	subwf	main@currMilli^(0+128),w
  8311  014F  00E2               	movwf	??_main^(0+128)
  8312  0150  0867               	movf	(main@prevMilli+1)^(0+128),w
  8313  0151  3B6D               	subwfb	(main@currMilli+1)^(0+128),w
  8314  0152  00E3               	movwf	(??_main^(0+128)+1)
  8315  0153  0868               	movf	(main@prevMilli+2)^(0+128),w
  8316  0154  3B6E               	subwfb	(main@currMilli+2)^(0+128),w
  8317  0155  00E4               	movwf	(??_main^(0+128)+2)
  8318  0156  0869               	movf	(main@prevMilli+3)^(0+128),w
  8319  0157  3B6F               	subwfb	(main@currMilli+3)^(0+128),w
  8320  0158  00E5               	movwf	(??_main^(0+128)+3)
  8321  0159  0865               	movf	(??_main^(0+128)+3),w
  8322  015A  1D03               	btfss	3,2
  8323  015B  2968               	goto	u1590
  8324  015C  0864               	movf	(??_main^(0+128)+2),w
  8325  015D  1D03               	btfss	3,2
  8326  015E  2968               	goto	u1590
  8327  015F  0863               	movf	(??_main^(0+128)+1),w
  8328  0160  1D03               	btfss	3,2
  8329  0161  2968               	goto	u1590
  8330  0162  3032               	movlw	50
  8331  0163  0262               	subwf	??_main^(0+128),w
  8332  0164  1C03               	btfss	3,0
  8333  0165  2967               	goto	u1591
  8334  0166  2968               	goto	u1590
  8335  0167                     u1591:
  8336  0167  293A               	goto	l4255
  8337  0168                     u1590:
  8338  0168  29C5               	goto	l4279
  8339  0169                     l4261:
  8340                           
  8341                           ;JSN_Sensor.c: 196:                     JSN_Sensor_Trig(&Sens1);
  8342  0169  3052               	movlw	(low (_Sens1| (0+256)))& (0+255)
  8343  016A  318F  27A7  3180   	fcall	_JSN_Sensor_Trig
  8344                           
  8345                           ;JSN_Sensor.c: 198:                     printf("S3 %u", JSN_Sensor_GetDistance(&Sens3));
  8346  016D  3078               	movlw	low (STR_3| (0+32768))
  8347  016E  0020               	movlb	0	; select bank0
  8348  016F  00EC               	movwf	printf@fmt
  8349  0170  3090               	movlw	high (STR_3| (0+32768))
  8350  0171  00ED               	movwf	printf@fmt+1
  8351  0172  3046               	movlw	(low (_Sens3| (0+256)))& (0+255)
  8352  0173  318E  2682  3180   	fcall	_JSN_Sensor_GetDistance
  8353  0176  0020               	movlb	0	; select bank0
  8354  0177  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  8355  0178  00EF               	movwf	?_printf+3
  8356  0179  083A               	movf	?_JSN_Sensor_GetDistance,w
  8357  017A  00EE               	movwf	?_printf+2
  8358  017B  318B  2346  3180   	fcall	_printf
  8359  017E                     l4263:
  8360                           
  8361                           ;JSN_Sensor.c: 201:                     if (numSens > 1)
  8362  017E  3002               	movlw	2
  8363  017F  0021               	movlb	1	; select bank1
  8364  0180  026B               	subwf	main@numSens^(0+128),w
  8365  0181  1C03               	skipc
  8366  0182  2984               	goto	u1601
  8367  0183  2985               	goto	u1600
  8368  0184                     u1601:
  8369  0184  298A               	goto	l86
  8370  0185                     u1600:
  8371  0185                     l4265:
  8372                           
  8373                           ;JSN_Sensor.c: 202:                         nextSens = 2;
  8374  0185  3002               	movlw	2
  8375  0186  00E2               	movwf	??_main^(0+128)
  8376  0187  0862               	movf	??_main^(0+128),w
  8377  0188  00EA               	movwf	main@nextSens^(0+128)
  8378  0189  29D9               	goto	l4281
  8379  018A                     l86:	
  8380                           ;JSN_Sensor.c: 203:                     else
  8381                           
  8382                           
  8383                           ;JSN_Sensor.c: 204:                         nextSens = 1;
  8384  018A  0021               	movlb	1	; select bank1
  8385  018B  01EA               	clrf	main@nextSens^(0+128)
  8386  018C  0AEA               	incf	main@nextSens^(0+128),f
  8387  018D  29D9               	goto	l4281
  8388  018E                     l4267:
  8389                           
  8390                           ;JSN_Sensor.c: 210:                     JSN_Sensor_Trig(&Sens2);
  8391  018E  304C               	movlw	(low (_Sens2| (0+256)))& (0+255)
  8392  018F  318F  27A7  3180   	fcall	_JSN_Sensor_Trig
  8393                           
  8394                           ;JSN_Sensor.c: 212:                     printf("S1 %u", JSN_Sensor_GetDistance(&Sens1));
  8395  0192  306C               	movlw	low (STR_4| (0+32768))
  8396  0193  0020               	movlb	0	; select bank0
  8397  0194  00EC               	movwf	printf@fmt
  8398  0195  3090               	movlw	high (STR_4| (0+32768))
  8399  0196  00ED               	movwf	printf@fmt+1
  8400  0197  3052               	movlw	(low (_Sens1| (0+256)))& (0+255)
  8401  0198  318E  2682  3180   	fcall	_JSN_Sensor_GetDistance
  8402  019B  0020               	movlb	0	; select bank0
  8403  019C  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  8404  019D  00EF               	movwf	?_printf+3
  8405  019E  083A               	movf	?_JSN_Sensor_GetDistance,w
  8406  019F  00EE               	movwf	?_printf+2
  8407  01A0  318B  2346  3180   	fcall	_printf
  8408  01A3                     l4269:
  8409                           
  8410                           ;JSN_Sensor.c: 215:                     if (numSens > 2)
  8411  01A3  3003               	movlw	3
  8412  01A4  0021               	movlb	1	; select bank1
  8413  01A5  026B               	subwf	main@numSens^(0+128),w
  8414  01A6  1C03               	skipc
  8415  01A7  29A9               	goto	u1611
  8416  01A8  29AA               	goto	u1610
  8417  01A9                     u1611:
  8418  01A9  298A               	goto	l86
  8419  01AA                     u1610:
  8420  01AA                     l4271:
  8421                           
  8422                           ;JSN_Sensor.c: 216:                         nextSens = 3;
  8423  01AA  3003               	movlw	3
  8424  01AB  00E2               	movwf	??_main^(0+128)
  8425  01AC  0862               	movf	??_main^(0+128),w
  8426  01AD  00EA               	movwf	main@nextSens^(0+128)
  8427  01AE  29D9               	goto	l4281
  8428  01AF                     l4273:
  8429                           
  8430                           ;JSN_Sensor.c: 224:                     JSN_Sensor_Trig(&Sens3);
  8431  01AF  3046               	movlw	(low (_Sens3| (0+256)))& (0+255)
  8432  01B0  318F  27A7  3180   	fcall	_JSN_Sensor_Trig
  8433                           
  8434                           ;JSN_Sensor.c: 226:                     printf("S2 %u", JSN_Sensor_GetDistance(&Sens2));
  8435  01B3  3072               	movlw	low (STR_5| (0+32768))
  8436  01B4  0020               	movlb	0	; select bank0
  8437  01B5  00EC               	movwf	printf@fmt
  8438  01B6  3090               	movlw	high (STR_5| (0+32768))
  8439  01B7  00ED               	movwf	printf@fmt+1
  8440  01B8  304C               	movlw	(low (_Sens2| (0+256)))& (0+255)
  8441  01B9  318E  2682  3180   	fcall	_JSN_Sensor_GetDistance
  8442  01BC  0020               	movlb	0	; select bank0
  8443  01BD  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  8444  01BE  00EF               	movwf	?_printf+3
  8445  01BF  083A               	movf	?_JSN_Sensor_GetDistance,w
  8446  01C0  00EE               	movwf	?_printf+2
  8447  01C1  318B  2346  3180   	fcall	_printf
  8448  01C4  298A               	goto	l86
  8449  01C5                     l4279:
  8450  01C5  0021               	movlb	1	; select bank1
  8451  01C6  086A               	movf	main@nextSens^(0+128),w
  8452  01C7  00E2               	movwf	??_main^(0+128)
  8453  01C8  01E3               	clrf	(??_main^(0+128)+1)
  8454                           
  8455                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8456                           ; Switch size 1, requested type "simple"
  8457                           ; Number of cases is 1, Range of values is 0 to 0
  8458                           ; switch strategies available:
  8459                           ; Name         Instructions Cycles
  8460                           ; simple_byte            4     3 (average)
  8461                           ; direct_byte            8     6 (fixed)
  8462                           ; jumptable            260     6 (fixed)
  8463                           ;	Chosen strategy is simple_byte
  8464  01C9  0863               	movf	(??_main+1)^(0+128),w
  8465  01CA  3A00               	xorlw	0	; case 0
  8466  01CB  1903               	skipnz
  8467  01CC  29CE               	goto	l4685
  8468  01CD  29D9               	goto	l4281
  8469  01CE                     l4685:
  8470                           
  8471                           ; Switch size 1, requested type "simple"
  8472                           ; Number of cases is 3, Range of values is 1 to 3
  8473                           ; switch strategies available:
  8474                           ; Name         Instructions Cycles
  8475                           ; simple_byte           10     6 (average)
  8476                           ; direct_byte           15     9 (fixed)
  8477                           ; jumptable            263     9 (fixed)
  8478                           ;	Chosen strategy is simple_byte
  8479  01CE  0862               	movf	??_main^(0+128),w
  8480  01CF  3A01               	xorlw	1	; case 1
  8481  01D0  1903               	skipnz
  8482  01D1  2969               	goto	l4261
  8483  01D2  3A03               	xorlw	3	; case 2
  8484  01D3  1903               	skipnz
  8485  01D4  298E               	goto	l4267
  8486  01D5  3A01               	xorlw	1	; case 3
  8487  01D6  1903               	skipnz
  8488  01D7  29AF               	goto	l4273
  8489  01D8  29D9               	goto	l4281
  8490  01D9                     l4281:
  8491                           
  8492                           ;JSN_Sensor.c: 235:             if ((Sens1.distance < 400) ||
  8493  01D9  3001               	movlw	1
  8494  01DA  0022               	movlb	2	; select bank2
  8495  01DB  0255               	subwf	((_Sens1+1)^(0+256)+2),w
  8496  01DC  3090               	movlw	144
  8497  01DD  1903               	skipnz
  8498  01DE  0254               	subwf	(_Sens1^(0+256)+2),w
  8499  01DF  1C03               	skipc
  8500  01E0  29E2               	goto	u1621
  8501  01E1  29E3               	goto	u1620
  8502  01E2                     u1621:
  8503  01E2  29F5               	goto	l4287
  8504  01E3                     u1620:
  8505  01E3                     l4283:
  8506  01E3  3001               	movlw	1
  8507  01E4  024F               	subwf	((_Sens2+1)^(0+256)+2),w
  8508  01E5  3090               	movlw	144
  8509  01E6  1903               	skipnz
  8510  01E7  024E               	subwf	(_Sens2^(0+256)+2),w
  8511  01E8  1C03               	skipc
  8512  01E9  29EB               	goto	u1631
  8513  01EA  29EC               	goto	u1630
  8514  01EB                     u1631:
  8515  01EB  29F5               	goto	l4287
  8516  01EC                     u1630:
  8517  01EC                     l4285:
  8518  01EC  3001               	movlw	1
  8519  01ED  0249               	subwf	((_Sens3+1)^(0+256)+2),w
  8520  01EE  3090               	movlw	144
  8521  01EF  1903               	skipnz
  8522  01F0  0248               	subwf	(_Sens3^(0+256)+2),w
  8523  01F1  1803               	skipnc
  8524  01F2  29F4               	goto	u1641
  8525  01F3  29F5               	goto	u1640
  8526  01F4                     u1641:
  8527  01F4  29FD               	goto	l4289
  8528  01F5                     u1640:
  8529  01F5                     l4287:
  8530                           
  8531                           ;JSN_Sensor.c: 237:                     (Sens3.distance < 400)) {;JSN_Sensor.c: 238:    
      +                                       WritePin(C0, 1);
  8532  01F5  0020               	movlb	0	; select bank0
  8533  01F6  01A0               	clrf	WritePin@val
  8534  01F7  0AA0               	incf	WritePin@val,f
  8535  01F8  300C               	movlw	12
  8536  01F9  3183  23B8  3180   	fcall	_WritePin
  8537                           
  8538                           ;JSN_Sensor.c: 239:             }
  8539  01FC  2931               	goto	l4253
  8540  01FD                     l4289:
  8541                           
  8542                           ;JSN_Sensor.c: 241:                 WritePin(C0, 0);
  8543  01FD  0020               	movlb	0	; select bank0
  8544  01FE  01A0               	clrf	WritePin@val
  8545  01FF  300C               	movlw	12
  8546  0200  3183  23B8  3180   	fcall	_WritePin
  8547  0203  2931               	goto	l4253
  8548  0204  3180  2890         	ljmp	start
  8549  0206                     __end_of_main:
  8550                           
  8551                           	psect	text1
  8552  0B34                     __ptext1:	
  8553 ;; *************** function _PIC16_Init *****************
  8554 ;; Defined at:
  8555 ;;		line 16 in file "PIC16Xpress_DevBoard.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;		None
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;		None
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  1    wreg      void 
  8562 ;; Registers used:
  8563 ;;		wreg, status,2, status,0, pclath, cstack
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8573 ;;Total ram usage:        0 bytes
  8574 ;; Hardware stack levels used: 1
  8575 ;; Hardware stack levels required when called: 7
  8576 ;; This function calls:
  8577 ;;		_SYSTEM_Initialize
  8578 ;; This function is called by:
  8579 ;;		_main
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583  0B34                     _PIC16_Init:	
  8584                           ;psect for function _PIC16_Init
  8585                           
  8586  0B34                     l4127:	
  8587                           ;incstack = 0
  8588                           ; Regs used in _PIC16_Init: [wreg+status,2+status,0+pclath+cstack]
  8589                           
  8590                           
  8591                           ;PIC16Xpress_DevBoard.c: 18:     PIE0 = 0x00;
  8592  0B34  0021               	movlb	1	; select bank1
  8593  0B35  0190               	clrf	16	;volatile
  8594                           
  8595                           ;PIC16Xpress_DevBoard.c: 19:     PIE1 = 0x00;
  8596  0B36  0191               	clrf	17	;volatile
  8597                           
  8598                           ;PIC16Xpress_DevBoard.c: 20:     PIE2 = 0x00;
  8599  0B37  0192               	clrf	18	;volatile
  8600                           
  8601                           ;PIC16Xpress_DevBoard.c: 21:     PIE3 = 0x00;
  8602  0B38  0193               	clrf	19	;volatile
  8603                           
  8604                           ;PIC16Xpress_DevBoard.c: 22:     PIE4 = 0x00;
  8605  0B39  0194               	clrf	20	;volatile
  8606                           
  8607                           ;PIC16Xpress_DevBoard.c: 25:     PIR0 = 0x00;
  8608  0B3A  0020               	movlb	0	; select bank0
  8609  0B3B  0190               	clrf	16	;volatile
  8610                           
  8611                           ;PIC16Xpress_DevBoard.c: 26:     PIR1 = 0x00;
  8612  0B3C  0191               	clrf	17	;volatile
  8613                           
  8614                           ;PIC16Xpress_DevBoard.c: 27:     PIR2 = 0x00;
  8615  0B3D  0192               	clrf	18	;volatile
  8616                           
  8617                           ;PIC16Xpress_DevBoard.c: 28:     PIR3 = 0x00;
  8618  0B3E  0193               	clrf	19	;volatile
  8619                           
  8620                           ;PIC16Xpress_DevBoard.c: 29:     PIR4 = 0x00;
  8621  0B3F  0194               	clrf	20	;volatile
  8622  0B40                     l4129:
  8623                           
  8624                           ;PIC16Xpress_DevBoard.c: 32:     SYSTEM_Initialize();
  8625  0B40  318C  249C  318B   	fcall	_SYSTEM_Initialize
  8626  0B43                     l4131:
  8627                           
  8628                           ;PIC16Xpress_DevBoard.c: 35:     (INTCONbits.PEIE = 1);
  8629  0B43  170B               	bsf	11,6	;volatile
  8630  0B44                     l4133:
  8631                           
  8632                           ;PIC16Xpress_DevBoard.c: 36:     (INTCONbits.GIE = 1);
  8633  0B44  178B               	bsf	11,7	;volatile
  8634  0B45                     l144:
  8635  0B45  0008               	return
  8636  0B46                     __end_of_PIC16_Init:
  8637                           
  8638                           	psect	text2
  8639  0C9C                     __ptext2:	
  8640 ;; *************** function _SYSTEM_Initialize *****************
  8641 ;; Defined at:
  8642 ;;		line 15 in file "mcc.c"
  8643 ;; Parameters:    Size  Location     Type
  8644 ;;		None
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;		None
  8647 ;; Return value:  Size  Location     Type
  8648 ;;                  1    wreg      void 
  8649 ;; Registers used:
  8650 ;;		wreg, status,2, status,0, pclath, cstack
  8651 ;; Tracked objects:
  8652 ;;		On entry : 0/0
  8653 ;;		On exit  : 0/0
  8654 ;;		Unchanged: 0/0
  8655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8660 ;;Total ram usage:        0 bytes
  8661 ;; Hardware stack levels used: 1
  8662 ;; Hardware stack levels required when called: 6
  8663 ;; This function calls:
  8664 ;;		_CCP1_Initialize
  8665 ;;		_CCP2_Initialize
  8666 ;;		_CCP3_Initialize
  8667 ;;		_CCP4_Initialize
  8668 ;;		_EUSART_Initialize
  8669 ;;		_OSCILLATOR_Initialize
  8670 ;;		_PIN_MANAGER_Initialize
  8671 ;;		_PMD_Initialize
  8672 ;;		_PWM5_Initialize
  8673 ;;		_TMR0_Initialize
  8674 ;;		_TMR1_Initialize
  8675 ;;		_TMR2_Initialize
  8676 ;;		_TMR3_Initialize
  8677 ;;		_WDT_Initialize
  8678 ;; This function is called by:
  8679 ;;		_PIC16_Init
  8680 ;; This function uses a non-reentrant model
  8681 ;;
  8682                           
  8683  0C9C                     _SYSTEM_Initialize:	
  8684                           ;psect for function _SYSTEM_Initialize
  8685                           
  8686  0C9C                     l3939:	
  8687                           ;incstack = 0
  8688                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8689                           
  8690                           
  8691                           ;mcc.c: 16:     PMD_Initialize();
  8692  0C9C  318A  2292  318C   	fcall	_PMD_Initialize
  8693                           
  8694                           ;mcc.c: 17:     PIN_MANAGER_Initialize();
  8695  0C9F  318E  260A  318C   	fcall	_PIN_MANAGER_Initialize
  8696                           
  8697                           ;mcc.c: 18:     OSCILLATOR_Initialize();
  8698  0CA2  318A  22A7  318C   	fcall	_OSCILLATOR_Initialize
  8699                           
  8700                           ;mcc.c: 19:     WDT_Initialize();
  8701  0CA5  3189  21F7  318C   	fcall	_WDT_Initialize
  8702                           
  8703                           ;mcc.c: 20:     CCP3_Initialize();
  8704  0CA8  318B  23E3  318C   	fcall	_CCP3_Initialize
  8705                           
  8706                           ;mcc.c: 21:     CCP1_Initialize();
  8707  0CAB  318B  23B3  318C   	fcall	_CCP1_Initialize
  8708                           
  8709                           ;mcc.c: 22:     TMR2_Initialize();
  8710  0CAE  318A  221C  318C   	fcall	_TMR2_Initialize
  8711                           
  8712                           ;mcc.c: 23:     TMR0_Initialize();
  8713  0CB1  318B  239D  318C   	fcall	_TMR0_Initialize
  8714                           
  8715                           ;mcc.c: 24:     CCP2_Initialize();
  8716  0CB4  318B  23CB  318C   	fcall	_CCP2_Initialize
  8717                           
  8718                           ;mcc.c: 25:     CCP4_Initialize();
  8719  0CB7  318B  2312  318C   	fcall	_CCP4_Initialize
  8720  0CBA                     l3941:
  8721                           
  8722                           ;mcc.c: 26:     TMR3_Initialize();
  8723  0CBA  318A  22B3  318C   	fcall	_TMR3_Initialize
  8724  0CBD                     l3943:
  8725                           
  8726                           ;mcc.c: 27:     PWM5_Initialize();
  8727  0CBD  318A  22C0  318C   	fcall	_PWM5_Initialize
  8728  0CC0                     l3945:
  8729                           
  8730                           ;mcc.c: 28:     TMR1_Initialize();
  8731  0CC0  318B  2323  318C   	fcall	_TMR1_Initialize
  8732  0CC3                     l3947:
  8733                           
  8734                           ;mcc.c: 29:     EUSART_Initialize();
  8735  0CC3  318F  2708  318C   	fcall	_EUSART_Initialize
  8736  0CC6                     l273:
  8737  0CC6  0008               	return
  8738  0CC7                     __end_of_SYSTEM_Initialize:
  8739                           
  8740                           	psect	text3
  8741  09F7                     __ptext3:	
  8742 ;; *************** function _WDT_Initialize *****************
  8743 ;; Defined at:
  8744 ;;		line 52 in file "mcc.c"
  8745 ;; Parameters:    Size  Location     Type
  8746 ;;		None
  8747 ;; Auto vars:     Size  Location     Type
  8748 ;;		None
  8749 ;; Return value:  Size  Location     Type
  8750 ;;                  1    wreg      void 
  8751 ;; Registers used:
  8752 ;;		wreg
  8753 ;; Tracked objects:
  8754 ;;		On entry : 0/0
  8755 ;;		On exit  : 0/0
  8756 ;;		Unchanged: 0/0
  8757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8762 ;;Total ram usage:        0 bytes
  8763 ;; Hardware stack levels used: 1
  8764 ;; Hardware stack levels required when called: 4
  8765 ;; This function calls:
  8766 ;;		Nothing
  8767 ;; This function is called by:
  8768 ;;		_SYSTEM_Initialize
  8769 ;; This function uses a non-reentrant model
  8770 ;;
  8771                           
  8772  09F7                     _WDT_Initialize:	
  8773                           ;psect for function _WDT_Initialize
  8774                           
  8775  09F7                     l3563:	
  8776                           ;incstack = 0
  8777                           ; Regs used in _WDT_Initialize: [wreg]
  8778                           
  8779                           
  8780                           ;mcc.c: 54:     WDTCON = 0x16;
  8781  09F7  3016               	movlw	22
  8782  09F8  0021               	movlb	1	; select bank1
  8783  09F9  0097               	movwf	23	;volatile
  8784  09FA                     l282:
  8785  09FA  0008               	return
  8786  09FB                     __end_of_WDT_Initialize:
  8787                           
  8788                           	psect	text4
  8789  0AB3                     __ptext4:	
  8790 ;; *************** function _TMR3_Initialize *****************
  8791 ;; Defined at:
  8792 ;;		line 25 in file "tmr3.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;		None
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;		None
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  1    wreg      void 
  8799 ;; Registers used:
  8800 ;;		status,2
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8810 ;;Total ram usage:        0 bytes
  8811 ;; Hardware stack levels used: 1
  8812 ;; Hardware stack levels required when called: 4
  8813 ;; This function calls:
  8814 ;;		Nothing
  8815 ;; This function is called by:
  8816 ;;		_SYSTEM_Initialize
  8817 ;; This function uses a non-reentrant model
  8818 ;;
  8819                           
  8820  0AB3                     _TMR3_Initialize:	
  8821                           ;psect for function _TMR3_Initialize
  8822                           
  8823  0AB3                     l3643:	
  8824                           ;incstack = 0
  8825                           ; Regs used in _TMR3_Initialize: [status,2]
  8826                           
  8827                           
  8828                           ;tmr3.c: 28:     T3GCON = 0x00;
  8829  0AB3  0028               	movlb	8	; select bank8
  8830  0AB4  0194               	clrf	20	;volatile
  8831                           
  8832                           ;tmr3.c: 31:     TMR3H = 0x00;
  8833  0AB5  0192               	clrf	18	;volatile
  8834                           
  8835                           ;tmr3.c: 34:     TMR3L = 0x00;
  8836  0AB6  0191               	clrf	17	;volatile
  8837  0AB7                     l3645:
  8838                           
  8839                           ;tmr3.c: 37:     PIR3bits.TMR3IF = 0;
  8840  0AB7  0020               	movlb	0	; select bank0
  8841  0AB8  1213               	bcf	19,4	;volatile
  8842                           
  8843                           ;tmr3.c: 40:     timer3ReloadVal = 0x0000;
  8844  0AB9  0021               	movlb	1	; select bank1
  8845  0ABA  01A8               	clrf	_timer3ReloadVal^(0+128)	;volatile
  8846  0ABB  01A9               	clrf	(_timer3ReloadVal+1)^(0+128)	;volatile
  8847  0ABC                     l3647:
  8848                           
  8849                           ;tmr3.c: 43:     PIE3bits.TMR3IE = 1;
  8850  0ABC  1613               	bsf	19,4	;volatile
  8851                           
  8852                           ;tmr3.c: 46:     T3CON = 0x00;
  8853  0ABD  0028               	movlb	8	; select bank8
  8854  0ABE  0193               	clrf	19	;volatile
  8855  0ABF                     l979:
  8856  0ABF  0008               	return
  8857  0AC0                     __end_of_TMR3_Initialize:
  8858                           
  8859                           	psect	text5
  8860  0A1C                     __ptext5:	
  8861 ;; *************** function _TMR2_Initialize *****************
  8862 ;; Defined at:
  8863 ;;		line 17 in file "tmr2.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;		None
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;		None
  8868 ;; Return value:  Size  Location     Type
  8869 ;;                  1    wreg      void 
  8870 ;; Registers used:
  8871 ;;		wreg, status,2
  8872 ;; Tracked objects:
  8873 ;;		On entry : 0/0
  8874 ;;		On exit  : 0/0
  8875 ;;		Unchanged: 0/0
  8876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8881 ;;Total ram usage:        0 bytes
  8882 ;; Hardware stack levels used: 1
  8883 ;; Hardware stack levels required when called: 4
  8884 ;; This function calls:
  8885 ;;		Nothing
  8886 ;; This function is called by:
  8887 ;;		_SYSTEM_Initialize
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891  0A1C                     _TMR2_Initialize:	
  8892                           ;psect for function _TMR2_Initialize
  8893                           
  8894  0A1C                     l3597:	
  8895                           ;incstack = 0
  8896                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8897                           
  8898                           
  8899                           ;tmr2.c: 20:     PR2 = 0xF9;
  8900  0A1C  30F9               	movlw	249
  8901  0A1D  0020               	movlb	0	; select bank0
  8902  0A1E  009E               	movwf	30	;volatile
  8903  0A1F                     l3599:
  8904                           
  8905                           ;tmr2.c: 23:     TMR2 = 0x00;
  8906  0A1F  019D               	clrf	29	;volatile
  8907  0A20                     l3601:
  8908                           
  8909                           ;tmr2.c: 26:     PIR1bits.TMR2IF = 0;
  8910  0A20  1091               	bcf	17,1	;volatile
  8911  0A21                     l3603:
  8912                           
  8913                           ;tmr2.c: 29:     T2CON = 0x04;
  8914  0A21  3004               	movlw	4
  8915  0A22  009F               	movwf	31	;volatile
  8916  0A23                     l939:
  8917  0A23  0008               	return
  8918  0A24                     __end_of_TMR2_Initialize:
  8919                           
  8920                           	psect	text6
  8921  0B23                     __ptext6:	
  8922 ;; *************** function _TMR1_Initialize *****************
  8923 ;; Defined at:
  8924 ;;		line 19 in file "tmr1.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;		None
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;		None
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  1    wreg      void 
  8931 ;; Registers used:
  8932 ;;		wreg, status,2
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;Total ram usage:        0 bytes
  8943 ;; Hardware stack levels used: 1
  8944 ;; Hardware stack levels required when called: 4
  8945 ;; This function calls:
  8946 ;;		Nothing
  8947 ;; This function is called by:
  8948 ;;		_SYSTEM_Initialize
  8949 ;; This function uses a non-reentrant model
  8950 ;;
  8951                           
  8952  0B23                     _TMR1_Initialize:	
  8953                           ;psect for function _TMR1_Initialize
  8954                           
  8955  0B23                     l3661:	
  8956                           ;incstack = 0
  8957                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  8958                           
  8959                           
  8960                           ;tmr1.c: 24:     T1GCON = 0x00;
  8961  0B23  0020               	movlb	0	; select bank0
  8962  0B24  019C               	clrf	28	;volatile
  8963                           
  8964                           ;tmr1.c: 27:     TMR1H = 0x00;
  8965  0B25  019A               	clrf	26	;volatile
  8966                           
  8967                           ;tmr1.c: 30:     TMR1L = 0x00;
  8968  0B26  0199               	clrf	25	;volatile
  8969  0B27                     l3663:
  8970                           
  8971                           ;tmr1.c: 33:     PIR1bits.TMR1IF = 0;
  8972  0B27  1011               	bcf	17,0	;volatile
  8973  0B28                     l3665:
  8974                           
  8975                           ;tmr1.c: 36:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8976  0B28  081A               	movf	26,w	;volatile
  8977  0B29  0021               	movlb	1	; select bank1
  8978  0B2A  00BB               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  8979  0B2B  0020               	movlb	0	; select bank0
  8980  0B2C  0819               	movf	25,w	;volatile
  8981  0B2D  0021               	movlb	1	; select bank1
  8982  0B2E  00BA               	movwf	_timer1ReloadVal^(0+128)	;volatile
  8983  0B2F                     l3667:
  8984                           
  8985                           ;tmr1.c: 39:     PIE1bits.TMR1IE = 1;
  8986  0B2F  1411               	bsf	17,0	;volatile
  8987  0B30                     l3669:
  8988                           
  8989                           ;tmr1.c: 42:     T1CON = 0b00100001;
  8990  0B30  3021               	movlw	33
  8991  0B31  0020               	movlb	0	; select bank0
  8992  0B32  009B               	movwf	27	;volatile
  8993  0B33                     l504:
  8994  0B33  0008               	return
  8995  0B34                     __end_of_TMR1_Initialize:
  8996                           
  8997                           	psect	text7
  8998  0B9D                     __ptext7:	
  8999 ;; *************** function _TMR0_Initialize *****************
  9000 ;; Defined at:
  9001 ;;		line 19 in file "tmr0.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;		None
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;		None
  9006 ;; Return value:  Size  Location     Type
  9007 ;;                  1    wreg      void 
  9008 ;; Registers used:
  9009 ;;		wreg, status,2, status,0, pclath, cstack
  9010 ;; Tracked objects:
  9011 ;;		On entry : 0/0
  9012 ;;		On exit  : 0/0
  9013 ;;		Unchanged: 0/0
  9014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9019 ;;Total ram usage:        0 bytes
  9020 ;; Hardware stack levels used: 1
  9021 ;; Hardware stack levels required when called: 5
  9022 ;; This function calls:
  9023 ;;		_TMR0_SetInterruptHandler
  9024 ;; This function is called by:
  9025 ;;		_SYSTEM_Initialize
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029  0B9D                     _TMR0_Initialize:	
  9030                           ;psect for function _TMR0_Initialize
  9031                           
  9032  0B9D                     l3605:	
  9033                           ;incstack = 0
  9034                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9035                           
  9036                           
  9037                           ;tmr0.c: 22:     T0CON1 = 0x42;
  9038  0B9D  3042               	movlw	66
  9039  0B9E  0020               	movlb	0	; select bank0
  9040  0B9F  0098               	movwf	24	;volatile
  9041                           
  9042                           ;tmr0.c: 25:     TMR0H = 0xF9;
  9043  0BA0  30F9               	movlw	249
  9044  0BA1  0096               	movwf	22	;volatile
  9045  0BA2                     l3607:
  9046                           
  9047                           ;tmr0.c: 28:     TMR0L = 0x00;
  9048  0BA2  0195               	clrf	21	;volatile
  9049  0BA3                     l3609:
  9050                           
  9051                           ;tmr0.c: 31:     PIR0bits.TMR0IF = 0;
  9052  0BA3  1290               	bcf	16,5	;volatile
  9053  0BA4                     l3611:
  9054                           
  9055                           ;tmr0.c: 34:     PIE0bits.TMR0IE = 1;
  9056  0BA4  0021               	movlb	1	; select bank1
  9057  0BA5  1690               	bsf	16,5	;volatile
  9058  0BA6                     l3613:
  9059                           
  9060                           ;tmr0.c: 37:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  9061  0BA6  3000               	movlw	0
  9062  0BA7  0020               	movlb	0	; select bank0
  9063  0BA8  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  9064  0BA9  3000               	movlw	0
  9065  0BAA  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9066  0BAB  318A  2275  318B   	fcall	_TMR0_SetInterruptHandler
  9067  0BAE                     l3615:
  9068                           
  9069                           ;tmr0.c: 40:     T0CON0 = 0x80;
  9070  0BAE  3080               	movlw	128
  9071  0BAF  0020               	movlb	0	; select bank0
  9072  0BB0  0097               	movwf	23	;volatile
  9073  0BB1                     l3617:
  9074                           
  9075                           ;tmr0.c: 41:     CountCallBack = 0;
  9076  0BB1  01FD               	clrf	_CountCallBack	;volatile
  9077  0BB2                     l316:
  9078  0BB2  0008               	return
  9079  0BB3                     __end_of_TMR0_Initialize:
  9080                           
  9081                           	psect	text8
  9082  0A75                     __ptext8:	
  9083 ;; *************** function _TMR0_SetInterruptHandler *****************
  9084 ;; Defined at:
  9085 ;;		line 117 in file "tmr0.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9088 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  9089 ;; Auto vars:     Size  Location     Type
  9090 ;;		None
  9091 ;; Return value:  Size  Location     Type
  9092 ;;                  1    wreg      void 
  9093 ;; Registers used:
  9094 ;;		wreg
  9095 ;; Tracked objects:
  9096 ;;		On entry : 0/0
  9097 ;;		On exit  : 0/0
  9098 ;;		Unchanged: 0/0
  9099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9100 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9103 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9104 ;;Total ram usage:        2 bytes
  9105 ;; Hardware stack levels used: 1
  9106 ;; Hardware stack levels required when called: 4
  9107 ;; This function calls:
  9108 ;;		Nothing
  9109 ;; This function is called by:
  9110 ;;		_TMR0_Initialize
  9111 ;; This function uses a non-reentrant model
  9112 ;;
  9113                           
  9114  0A75                     _TMR0_SetInterruptHandler:	
  9115                           ;psect for function _TMR0_SetInterruptHandler
  9116                           
  9117  0A75                     l3357:	
  9118                           ;incstack = 0
  9119                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  9120                           
  9121                           
  9122                           ;tmr0.c: 118:     TMR0_InterruptHandler = InterruptHandler;
  9123  0A75  0020               	movlb	0	; select bank0
  9124  0A76  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  9125  0A77  0021               	movlb	1	; select bank1
  9126  0A78  00CF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  9127  0A79  0020               	movlb	0	; select bank0
  9128  0A7A  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  9129  0A7B  0021               	movlb	1	; select bank1
  9130  0A7C  00CE               	movwf	_TMR0_InterruptHandler^(0+128)
  9131  0A7D                     l341:
  9132  0A7D  0008               	return
  9133  0A7E                     __end_of_TMR0_SetInterruptHandler:
  9134                           
  9135                           	psect	text9
  9136  0AC0                     __ptext9:	
  9137 ;; *************** function _PWM5_Initialize *****************
  9138 ;; Defined at:
  9139 ;;		line 16 in file "pwm5.c"
  9140 ;; Parameters:    Size  Location     Type
  9141 ;;		None
  9142 ;; Auto vars:     Size  Location     Type
  9143 ;;		None
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  1    wreg      void 
  9146 ;; Registers used:
  9147 ;;		wreg, status,2, status,0
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/0
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9157 ;;Total ram usage:        0 bytes
  9158 ;; Hardware stack levels used: 1
  9159 ;; Hardware stack levels required when called: 4
  9160 ;; This function calls:
  9161 ;;		Nothing
  9162 ;; This function is called by:
  9163 ;;		_SYSTEM_Initialize
  9164 ;; This function uses a non-reentrant model
  9165 ;;
  9166                           
  9167  0AC0                     _PWM5_Initialize:	
  9168                           ;psect for function _PWM5_Initialize
  9169                           
  9170  0AC0                     l3649:	
  9171                           ;incstack = 0
  9172                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
  9173                           
  9174                           
  9175                           ;pwm5.c: 18:     PWM5CON = 0x80;
  9176  0AC0  3080               	movlw	128
  9177  0AC1  002C               	movlb	12	; select bank12
  9178  0AC2  0099               	movwf	25	;volatile
  9179  0AC3                     l3651:
  9180                           
  9181                           ;pwm5.c: 21:     PWM5DCH = 0x00;
  9182  0AC3  0198               	clrf	24	;volatile
  9183  0AC4                     l3653:
  9184                           
  9185                           ;pwm5.c: 24:     PWM5DCL = 0x00;
  9186  0AC4  0197               	clrf	23	;volatile
  9187  0AC5                     l3655:
  9188                           
  9189                           ;pwm5.c: 27:     PWMTMRSbits.P5TSEL = 1;
  9190  0AC5  081F               	movf	31,w	;volatile
  9191  0AC6  39FC               	andlw	-4
  9192  0AC7  3801               	iorlw	1
  9193  0AC8  009F               	movwf	31	;volatile
  9194  0AC9                     l3657:
  9195                           
  9196                           ;pwm5.c: 30:     TRISBbits.TRISB6 = 0;
  9197  0AC9  0021               	movlb	1	; select bank1
  9198  0ACA  130D               	bcf	13,6	;volatile
  9199  0ACB                     l3659:
  9200                           
  9201                           ;pwm5.c: 31:     LATBbits.LATB6 = 0;
  9202  0ACB  0022               	movlb	2	; select bank2
  9203  0ACC  130D               	bcf	13,6	;volatile
  9204  0ACD                     l923:
  9205  0ACD  0008               	return
  9206  0ACE                     __end_of_PWM5_Initialize:
  9207                           
  9208                           	psect	text10
  9209  0A92                     __ptext10:	
  9210 ;; *************** function _PMD_Initialize *****************
  9211 ;; Defined at:
  9212 ;;		line 59 in file "mcc.c"
  9213 ;; Parameters:    Size  Location     Type
  9214 ;;		None
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;		None
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  1    wreg      void 
  9219 ;; Registers used:
  9220 ;;		wreg, status,2
  9221 ;; Tracked objects:
  9222 ;;		On entry : 0/0
  9223 ;;		On exit  : 0/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9230 ;;Total ram usage:        0 bytes
  9231 ;; Hardware stack levels used: 1
  9232 ;; Hardware stack levels required when called: 4
  9233 ;; This function calls:
  9234 ;;		Nothing
  9235 ;; This function is called by:
  9236 ;;		_SYSTEM_Initialize
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240  0A92                     _PMD_Initialize:	
  9241                           ;psect for function _PMD_Initialize
  9242                           
  9243  0A92                     l3507:	
  9244                           ;incstack = 0
  9245                           ; Regs used in _PMD_Initialize: [wreg+status,2]
  9246                           
  9247                           
  9248                           ;mcc.c: 62:     PMD0 = 0x00;
  9249  0A92  0032               	movlb	18	; select bank18
  9250  0A93  0191               	clrf	17	;volatile
  9251                           
  9252                           ;mcc.c: 63:     PMD1 = 0x00;
  9253  0A94  0192               	clrf	18	;volatile
  9254  0A95                     l3509:
  9255                           
  9256                           ;mcc.c: 66:     PMD2 = 0x66;
  9257  0A95  3066               	movlw	102
  9258  0A96  0093               	movwf	19	;volatile
  9259  0A97                     l3511:
  9260                           
  9261                           ;mcc.c: 67:     PMD3 = 0x00;
  9262  0A97  0194               	clrf	20	;volatile
  9263  0A98                     l3513:
  9264                           
  9265                           ;mcc.c: 68:     PMD4 = 0x00;
  9266  0A98  0195               	clrf	21	;volatile
  9267  0A99                     l3515:
  9268                           
  9269                           ;mcc.c: 71:     PMD5 = 0x1F;
  9270  0A99  301F               	movlw	31
  9271  0A9A  0096               	movwf	22	;volatile
  9272  0A9B                     l285:
  9273  0A9B  0008               	return
  9274  0A9C                     __end_of_PMD_Initialize:
  9275                           
  9276                           	psect	text11
  9277  0E0A                     __ptext11:	
  9278 ;; *************** function _PIN_MANAGER_Initialize *****************
  9279 ;; Defined at:
  9280 ;;		line 14 in file "pin_manager.c"
  9281 ;; Parameters:    Size  Location     Type
  9282 ;;		None
  9283 ;; Auto vars:     Size  Location     Type
  9284 ;;		None
  9285 ;; Return value:  Size  Location     Type
  9286 ;;                  1    wreg      void 
  9287 ;; Registers used:
  9288 ;;		wreg, status,2
  9289 ;; Tracked objects:
  9290 ;;		On entry : 0/0
  9291 ;;		On exit  : 0/0
  9292 ;;		Unchanged: 0/0
  9293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9298 ;;Total ram usage:        0 bytes
  9299 ;; Hardware stack levels used: 1
  9300 ;; Hardware stack levels required when called: 4
  9301 ;; This function calls:
  9302 ;;		Nothing
  9303 ;; This function is called by:
  9304 ;;		_SYSTEM_Initialize
  9305 ;; This function uses a non-reentrant model
  9306 ;;
  9307                           
  9308  0E0A                     _PIN_MANAGER_Initialize:	
  9309                           ;psect for function _PIN_MANAGER_Initialize
  9310                           
  9311  0E0A                     l3517:	
  9312                           ;incstack = 0
  9313                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9314                           
  9315                           
  9316                           ;pin_manager.c: 19:     LATA = 0x00;
  9317  0E0A  0022               	movlb	2	; select bank2
  9318  0E0B  018C               	clrf	12	;volatile
  9319                           
  9320                           ;pin_manager.c: 20:     LATB = 0x00;
  9321  0E0C  018D               	clrf	13	;volatile
  9322                           
  9323                           ;pin_manager.c: 21:     LATC = 0x00;
  9324  0E0D  018E               	clrf	14	;volatile
  9325  0E0E                     l3519:
  9326                           
  9327                           ;pin_manager.c: 26:     TRISA = 0x37;
  9328  0E0E  3037               	movlw	55
  9329  0E0F  0021               	movlb	1	; select bank1
  9330  0E10  008C               	movwf	12	;volatile
  9331  0E11                     l3521:
  9332                           
  9333                           ;pin_manager.c: 27:     TRISB = 0xF0;
  9334  0E11  30F0               	movlw	240
  9335  0E12  008D               	movwf	13	;volatile
  9336  0E13                     l3523:
  9337                           
  9338                           ;pin_manager.c: 28:     TRISC = 0xEF;
  9339  0E13  30EF               	movlw	239
  9340  0E14  008E               	movwf	14	;volatile
  9341  0E15                     l3525:
  9342                           
  9343                           ;pin_manager.c: 33:     ANSELC = 0xD7;
  9344  0E15  30D7               	movlw	215
  9345  0E16  0023               	movlb	3	; select bank3
  9346  0E17  008E               	movwf	14	;volatile
  9347  0E18                     l3527:
  9348                           
  9349                           ;pin_manager.c: 34:     ANSELB = 0xD0;
  9350  0E18  30D0               	movlw	208
  9351  0E19  008D               	movwf	13	;volatile
  9352  0E1A                     l3529:
  9353                           
  9354                           ;pin_manager.c: 35:     ANSELA = 0x33;
  9355  0E1A  3033               	movlw	51
  9356  0E1B  008C               	movwf	12	;volatile
  9357                           
  9358                           ;pin_manager.c: 40:     WPUB = 0x00;
  9359  0E1C  0024               	movlb	4	; select bank4
  9360  0E1D  018D               	clrf	13	;volatile
  9361                           
  9362                           ;pin_manager.c: 41:     WPUA = 0x00;
  9363  0E1E  018C               	clrf	12	;volatile
  9364                           
  9365                           ;pin_manager.c: 42:     WPUC = 0x00;
  9366  0E1F  018E               	clrf	14	;volatile
  9367                           
  9368                           ;pin_manager.c: 47:     ODCONA = 0x00;
  9369  0E20  0025               	movlb	5	; select bank5
  9370  0E21  018C               	clrf	12	;volatile
  9371                           
  9372                           ;pin_manager.c: 48:     ODCONB = 0x00;
  9373  0E22  018D               	clrf	13	;volatile
  9374                           
  9375                           ;pin_manager.c: 49:     ODCONC = 0x00;
  9376  0E23  018E               	clrf	14	;volatile
  9377  0E24                     l3531:
  9378                           
  9379                           ;pin_manager.c: 54:     SLRCONA = 0x37;
  9380  0E24  3037               	movlw	55
  9381  0E25  0026               	movlb	6	; select bank6
  9382  0E26  008C               	movwf	12	;volatile
  9383  0E27                     l3533:
  9384                           
  9385                           ;pin_manager.c: 55:     SLRCONB = 0xF0;
  9386  0E27  30F0               	movlw	240
  9387  0E28  008D               	movwf	13	;volatile
  9388  0E29                     l3535:
  9389                           
  9390                           ;pin_manager.c: 56:     SLRCONC = 0xFF;
  9391  0E29  30FF               	movlw	255
  9392  0E2A  008E               	movwf	14	;volatile
  9393  0E2B                     l3537:
  9394                           
  9395                           ;pin_manager.c: 61:     INLVLA = 0x3F;
  9396  0E2B  303F               	movlw	63
  9397  0E2C  0027               	movlb	7	; select bank7
  9398  0E2D  008C               	movwf	12	;volatile
  9399  0E2E                     l3539:
  9400                           
  9401                           ;pin_manager.c: 62:     INLVLB = 0xF0;
  9402  0E2E  30F0               	movlw	240
  9403  0E2F  008D               	movwf	13	;volatile
  9404  0E30                     l3541:
  9405                           
  9406                           ;pin_manager.c: 63:     INLVLC = 0xFF;
  9407  0E30  30FF               	movlw	255
  9408  0E31  008E               	movwf	14	;volatile
  9409  0E32                     l3543:
  9410                           
  9411                           ;pin_manager.c: 66:     RXPPS = 0x0D;
  9412  0E32  300D               	movlw	13
  9413  0E33  003C               	movlb	28	; select bank28
  9414  0E34  00A4               	movwf	36	;volatile
  9415  0E35                     l3545:
  9416                           
  9417                           ;pin_manager.c: 67:     RC4PPS = 0x14;
  9418  0E35  3014               	movlw	20
  9419  0E36  003D               	movlb	29	; select bank29
  9420  0E37  00A4               	movwf	36	;volatile
  9421  0E38                     l3547:
  9422                           
  9423                           ;pin_manager.c: 69:     CCP1PPS = 0x15;
  9424  0E38  3015               	movlw	21
  9425  0E39  003C               	movlb	28	; select bank28
  9426  0E3A  0094               	movwf	20	;volatile
  9427  0E3B                     l3549:
  9428                           
  9429                           ;pin_manager.c: 70:     CCP2PPS = 0x13;
  9430  0E3B  3013               	movlw	19
  9431  0E3C  0095               	movwf	21	;volatile
  9432  0E3D                     l3551:
  9433                           
  9434                           ;pin_manager.c: 71:     CCP3PPS = 0x02;
  9435  0E3D  3002               	movlw	2
  9436  0E3E  0096               	movwf	22	;volatile
  9437  0E3F                     l3553:
  9438                           
  9439                           ;pin_manager.c: 73:     RC1PPS = 0x0F;
  9440  0E3F  300F               	movlw	15
  9441  0E40  003D               	movlb	29	; select bank29
  9442  0E41  00A1               	movwf	33	;volatile
  9443  0E42                     l3555:
  9444                           
  9445                           ;pin_manager.c: 74:     RB6PPS = 0x02;
  9446  0E42  3002               	movlw	2
  9447  0E43  009E               	movwf	30	;volatile
  9448  0E44                     l792:
  9449  0E44  0008               	return
  9450  0E45                     __end_of_PIN_MANAGER_Initialize:
  9451                           
  9452                           	psect	text12
  9453  0AA7                     __ptext12:	
  9454 ;; *************** function _OSCILLATOR_Initialize *****************
  9455 ;; Defined at:
  9456 ;;		line 34 in file "mcc.c"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;		None
  9459 ;; Auto vars:     Size  Location     Type
  9460 ;;		None
  9461 ;; Return value:  Size  Location     Type
  9462 ;;                  1    wreg      void 
  9463 ;; Registers used:
  9464 ;;		wreg, status,2
  9465 ;; Tracked objects:
  9466 ;;		On entry : 0/0
  9467 ;;		On exit  : 0/0
  9468 ;;		Unchanged: 0/0
  9469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9474 ;;Total ram usage:        0 bytes
  9475 ;; Hardware stack levels used: 1
  9476 ;; Hardware stack levels required when called: 4
  9477 ;; This function calls:
  9478 ;;		Nothing
  9479 ;; This function is called by:
  9480 ;;		_SYSTEM_Initialize
  9481 ;; This function uses a non-reentrant model
  9482 ;;
  9483                           
  9484  0AA7                     _OSCILLATOR_Initialize:	
  9485                           ;psect for function _OSCILLATOR_Initialize
  9486                           
  9487  0AA7                     l3557:	
  9488                           ;incstack = 0
  9489                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9490                           
  9491                           
  9492                           ;mcc.c: 36:     OSCCON1 = 0x00;
  9493  0AA7  0032               	movlb	18	; select bank18
  9494  0AA8  0199               	clrf	25	;volatile
  9495                           
  9496                           ;mcc.c: 38:     OSCCON3 = 0x00;
  9497  0AA9  019B               	clrf	27	;volatile
  9498                           
  9499                           ;mcc.c: 40:     OSCEN = 0x00;
  9500  0AAA  019D               	clrf	29	;volatile
  9501  0AAB                     l3559:
  9502                           
  9503                           ;mcc.c: 42:     OSCFRQ = 0x04;
  9504  0AAB  3004               	movlw	4
  9505  0AAC  009F               	movwf	31	;volatile
  9506  0AAD                     l3561:
  9507                           
  9508                           ;mcc.c: 44:     OSCTUNE = 0x00;
  9509  0AAD  019E               	clrf	30	;volatile
  9510  0AAE                     l276:	
  9511                           ;mcc.c: 47:     }
  9512                           
  9513                           
  9514                           ;mcc.c: 46:     while (PLLR == 0) {
  9515  0AAE  1C1C               	btfss	28,0	;volatile
  9516  0AAF  2AB1               	goto	u1271
  9517  0AB0  2AB2               	goto	u1270
  9518  0AB1                     u1271:
  9519  0AB1  2AAE               	goto	l276
  9520  0AB2                     u1270:
  9521  0AB2                     l279:
  9522  0AB2  0008               	return
  9523  0AB3                     __end_of_OSCILLATOR_Initialize:
  9524                           
  9525                           	psect	text13
  9526  0F08                     __ptext13:	
  9527 ;; *************** function _EUSART_Initialize *****************
  9528 ;; Defined at:
  9529 ;;		line 45 in file "eusart.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;		None
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;		None
  9534 ;; Return value:  Size  Location     Type
  9535 ;;                  1    wreg      void 
  9536 ;; Registers used:
  9537 ;;		wreg, status,2, status,0, pclath, cstack
  9538 ;; Tracked objects:
  9539 ;;		On entry : 0/0
  9540 ;;		On exit  : 0/0
  9541 ;;		Unchanged: 0/0
  9542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9545 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9546 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9547 ;;Total ram usage:        1 bytes
  9548 ;; Hardware stack levels used: 1
  9549 ;; Hardware stack levels required when called: 5
  9550 ;; This function calls:
  9551 ;;		_EUSART_SetErrorHandler
  9552 ;;		_EUSART_SetFramingErrorHandler
  9553 ;;		_EUSART_SetOverrunErrorHandler
  9554 ;;		_EUSART_SetRxInterruptHandler
  9555 ;;		_EUSART_SetTxInterruptHandler
  9556 ;; This function is called by:
  9557 ;;		_SYSTEM_Initialize
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           
  9561  0F08                     _EUSART_Initialize:	
  9562                           ;psect for function _EUSART_Initialize
  9563                           
  9564  0F08                     l3671:	
  9565                           ;incstack = 0
  9566                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9567                           
  9568                           
  9569                           ;eusart.c: 48:     PIE1bits.RCIE = 0;
  9570  0F08  0021               	movlb	1	; select bank1
  9571  0F09  1291               	bcf	17,5	;volatile
  9572  0F0A                     l3673:
  9573                           
  9574                           ;eusart.c: 49:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  9575  0F0A  3045               	movlw	low _EUSART_Receive_ISR
  9576  0F0B  0020               	movlb	0	; select bank0
  9577  0F0C  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  9578  0F0D  300E               	movlw	high _EUSART_Receive_ISR
  9579  0F0E  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  9580  0F0F  318A  2263  318F   	fcall	_EUSART_SetRxInterruptHandler
  9581  0F12                     l3675:
  9582                           
  9583                           ;eusart.c: 50:     PIE1bits.TXIE = 0;
  9584  0F12  0021               	movlb	1	; select bank1
  9585  0F13  1211               	bcf	17,4	;volatile
  9586                           
  9587                           ;eusart.c: 51:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  9588  0F14  3051               	movlw	low _EUSART_Transmit_ISR
  9589  0F15  0020               	movlb	0	; select bank0
  9590  0F16  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  9591  0F17  300C               	movlw	high _EUSART_Transmit_ISR
  9592  0F18  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  9593  0F19  318A  226C  318F   	fcall	_EUSART_SetTxInterruptHandler
  9594  0F1C                     l3677:
  9595                           
  9596                           ;eusart.c: 55:     BAUD1CON = 0x08;
  9597  0F1C  3008               	movlw	8
  9598  0F1D  0023               	movlb	3	; select bank3
  9599  0F1E  009F               	movwf	31	;volatile
  9600  0F1F                     l3679:
  9601                           
  9602                           ;eusart.c: 58:     RC1STA = 0x90;
  9603  0F1F  3090               	movlw	144
  9604  0F20  009D               	movwf	29	;volatile
  9605  0F21                     l3681:
  9606                           
  9607                           ;eusart.c: 61:     TX1STA = 0x24;
  9608  0F21  3024               	movlw	36
  9609  0F22  009E               	movwf	30	;volatile
  9610  0F23                     l3683:
  9611                           
  9612                           ;eusart.c: 64:     SP1BRGL = 0xA0;
  9613  0F23  30A0               	movlw	160
  9614  0F24  009B               	movwf	27	;volatile
  9615  0F25                     l3685:
  9616                           
  9617                           ;eusart.c: 67:     SP1BRGH = 0x01;
  9618  0F25  3001               	movlw	1
  9619  0F26  009C               	movwf	28	;volatile
  9620  0F27                     l3687:
  9621                           
  9622                           ;eusart.c: 70:     EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  9623  0F27  30FF               	movlw	low _EUSART_DefaultFramingErrorHandler
  9624  0F28  0020               	movlb	0	; select bank0
  9625  0F29  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  9626  0F2A  3007               	movlw	high _EUSART_DefaultFramingErrorHandler
  9627  0F2B  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  9628  0F2C  318A  2251  318F   	fcall	_EUSART_SetFramingErrorHandler
  9629  0F2F                     l3689:
  9630                           
  9631                           ;eusart.c: 71:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  9632  0F2F  30F3               	movlw	low _EUSART_DefaultOverrunErrorHandler
  9633  0F30  0020               	movlb	0	; select bank0
  9634  0F31  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  9635  0F32  3009               	movlw	high _EUSART_DefaultOverrunErrorHandler
  9636  0F33  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  9637  0F34  318A  225A  318F   	fcall	_EUSART_SetOverrunErrorHandler
  9638  0F37                     l3691:
  9639                           
  9640                           ;eusart.c: 72:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  9641  0F37  30EF               	movlw	low _EUSART_DefaultErrorHandler
  9642  0F38  0020               	movlb	0	; select bank0
  9643  0F39  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  9644  0F3A  3009               	movlw	high _EUSART_DefaultErrorHandler
  9645  0F3B  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  9646  0F3C  318A  2248  318F   	fcall	_EUSART_SetErrorHandler
  9647  0F3F                     l3693:
  9648                           
  9649                           ;eusart.c: 74:     eusartRxLastError.status = 0;
  9650  0F3F  0021               	movlb	1	; select bank1
  9651  0F40  01D0               	clrf	_eusartRxLastError^(0+128)	;volatile
  9652  0F41                     l3695:
  9653                           
  9654                           ;eusart.c: 77:     eusartTxHead = 0;
  9655  0F41  01FC               	clrf	_eusartTxHead	;volatile
  9656  0F42                     l3697:
  9657                           
  9658                           ;eusart.c: 78:     eusartTxTail = 0;
  9659  0F42  01D3               	clrf	_eusartTxTail^(0+128)	;volatile
  9660  0F43                     l3699:
  9661                           
  9662                           ;eusart.c: 79:     eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  9663  0F43  3008               	movlw	8
  9664  0F44  0020               	movlb	0	; select bank0
  9665  0F45  00A2               	movwf	??_EUSART_Initialize
  9666  0F46  0822               	movf	??_EUSART_Initialize,w
  9667  0F47  0021               	movlb	1	; select bank1
  9668  0F48  00D2               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  9669                           
  9670                           ;eusart.c: 81:     eusartRxHead = 0;
  9671  0F49  01FB               	clrf	_eusartRxHead	;volatile
  9672                           
  9673                           ;eusart.c: 82:     eusartRxTail = 0;
  9674  0F4A  01FA               	clrf	_eusartRxTail	;volatile
  9675                           
  9676                           ;eusart.c: 83:     eusartRxCount = 0;
  9677  0F4B  01D1               	clrf	_eusartRxCount^(0+128)	;volatile
  9678  0F4C                     l3701:
  9679                           
  9680                           ;eusart.c: 86:     PIE1bits.RCIE = 1;
  9681  0F4C  1691               	bsf	17,5	;volatile
  9682  0F4D                     l599:
  9683  0F4D  0008               	return
  9684  0F4E                     __end_of_EUSART_Initialize:
  9685                           
  9686                           	psect	text14
  9687  0A6C                     __ptext14:	
  9688 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  9689 ;; Defined at:
  9690 ;;		line 278 in file "eusart.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9693 ;;		 -> EUSART_Transmit_ISR(1), 
  9694 ;; Auto vars:     Size  Location     Type
  9695 ;;		None
  9696 ;; Return value:  Size  Location     Type
  9697 ;;                  1    wreg      void 
  9698 ;; Registers used:
  9699 ;;		wreg
  9700 ;; Tracked objects:
  9701 ;;		On entry : 0/0
  9702 ;;		On exit  : 0/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9705 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9708 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9709 ;;Total ram usage:        2 bytes
  9710 ;; Hardware stack levels used: 1
  9711 ;; Hardware stack levels required when called: 4
  9712 ;; This function calls:
  9713 ;;		Nothing
  9714 ;; This function is called by:
  9715 ;;		_EUSART_Initialize
  9716 ;; This function uses a non-reentrant model
  9717 ;;
  9718                           
  9719  0A6C                     _EUSART_SetTxInterruptHandler:	
  9720                           ;psect for function _EUSART_SetTxInterruptHandler
  9721                           
  9722  0A6C                     l3367:	
  9723                           ;incstack = 0
  9724                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  9725                           
  9726                           
  9727                           ;eusart.c: 279:     EUSART_TxDefaultInterruptHandler = interruptHandler;
  9728  0A6C  0020               	movlb	0	; select bank0
  9729  0A6D  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  9730  0A6E  0021               	movlb	1	; select bank1
  9731  0A6F  00B9               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
  9732  0A70  0020               	movlb	0	; select bank0
  9733  0A71  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  9734  0A72  0021               	movlb	1	; select bank1
  9735  0A73  00B8               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
  9736  0A74                     l671:
  9737  0A74  0008               	return
  9738  0A75                     __end_of_EUSART_SetTxInterruptHandler:
  9739                           
  9740                           	psect	text15
  9741  0A63                     __ptext15:	
  9742 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  9743 ;; Defined at:
  9744 ;;		line 284 in file "eusart.c"
  9745 ;; Parameters:    Size  Location     Type
  9746 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9747 ;;		 -> EUSART_Receive_ISR(1), 
  9748 ;; Auto vars:     Size  Location     Type
  9749 ;;		None
  9750 ;; Return value:  Size  Location     Type
  9751 ;;                  1    wreg      void 
  9752 ;; Registers used:
  9753 ;;		wreg
  9754 ;; Tracked objects:
  9755 ;;		On entry : 0/0
  9756 ;;		On exit  : 0/0
  9757 ;;		Unchanged: 0/0
  9758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9759 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9762 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9763 ;;Total ram usage:        2 bytes
  9764 ;; Hardware stack levels used: 1
  9765 ;; Hardware stack levels required when called: 4
  9766 ;; This function calls:
  9767 ;;		Nothing
  9768 ;; This function is called by:
  9769 ;;		_EUSART_Initialize
  9770 ;; This function uses a non-reentrant model
  9771 ;;
  9772                           
  9773  0A63                     _EUSART_SetRxInterruptHandler:	
  9774                           ;psect for function _EUSART_SetRxInterruptHandler
  9775                           
  9776  0A63                     l3365:	
  9777                           ;incstack = 0
  9778                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  9779                           
  9780                           
  9781                           ;eusart.c: 285:     EUSART_RxDefaultInterruptHandler = interruptHandler;
  9782  0A63  0020               	movlb	0	; select bank0
  9783  0A64  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  9784  0A65  0021               	movlb	1	; select bank1
  9785  0A66  00B7               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  9786  0A67  0020               	movlb	0	; select bank0
  9787  0A68  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  9788  0A69  0021               	movlb	1	; select bank1
  9789  0A6A  00B6               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  9790  0A6B                     l674:
  9791  0A6B  0008               	return
  9792  0A6C                     __end_of_EUSART_SetRxInterruptHandler:
  9793                           
  9794                           	psect	text16
  9795  0A5A                     __ptext16:	
  9796 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  9797 ;; Defined at:
  9798 ;;		line 266 in file "eusart.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9801 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  9802 ;; Auto vars:     Size  Location     Type
  9803 ;;		None
  9804 ;; Return value:  Size  Location     Type
  9805 ;;                  1    wreg      void 
  9806 ;; Registers used:
  9807 ;;		wreg
  9808 ;; Tracked objects:
  9809 ;;		On entry : 0/0
  9810 ;;		On exit  : 0/0
  9811 ;;		Unchanged: 0/0
  9812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9813 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9817 ;;Total ram usage:        2 bytes
  9818 ;; Hardware stack levels used: 1
  9819 ;; Hardware stack levels required when called: 4
  9820 ;; This function calls:
  9821 ;;		Nothing
  9822 ;; This function is called by:
  9823 ;;		_EUSART_Initialize
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827  0A5A                     _EUSART_SetOverrunErrorHandler:	
  9828                           ;psect for function _EUSART_SetOverrunErrorHandler
  9829                           
  9830  0A5A                     l3371:	
  9831                           ;incstack = 0
  9832                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  9833                           
  9834                           
  9835                           ;eusart.c: 267:     EUSART_OverrunErrorHandler = interruptHandler;
  9836  0A5A  0020               	movlb	0	; select bank0
  9837  0A5B  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  9838  0A5C  0021               	movlb	1	; select bank1
  9839  0A5D  00B3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  9840  0A5E  0020               	movlb	0	; select bank0
  9841  0A5F  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  9842  0A60  0021               	movlb	1	; select bank1
  9843  0A61  00B2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  9844  0A62                     l665:
  9845  0A62  0008               	return
  9846  0A63                     __end_of_EUSART_SetOverrunErrorHandler:
  9847                           
  9848                           	psect	text17
  9849  0A51                     __ptext17:	
  9850 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  9851 ;; Defined at:
  9852 ;;		line 260 in file "eusart.c"
  9853 ;; Parameters:    Size  Location     Type
  9854 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9855 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  9856 ;; Auto vars:     Size  Location     Type
  9857 ;;		None
  9858 ;; Return value:  Size  Location     Type
  9859 ;;                  1    wreg      void 
  9860 ;; Registers used:
  9861 ;;		wreg
  9862 ;; Tracked objects:
  9863 ;;		On entry : 0/0
  9864 ;;		On exit  : 0/0
  9865 ;;		Unchanged: 0/0
  9866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9867 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9870 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9871 ;;Total ram usage:        2 bytes
  9872 ;; Hardware stack levels used: 1
  9873 ;; Hardware stack levels required when called: 4
  9874 ;; This function calls:
  9875 ;;		Nothing
  9876 ;; This function is called by:
  9877 ;;		_EUSART_Initialize
  9878 ;; This function uses a non-reentrant model
  9879 ;;
  9880                           
  9881  0A51                     _EUSART_SetFramingErrorHandler:	
  9882                           ;psect for function _EUSART_SetFramingErrorHandler
  9883                           
  9884  0A51                     l3369:	
  9885                           ;incstack = 0
  9886                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9887                           
  9888                           
  9889                           ;eusart.c: 261:     EUSART_FramingErrorHandler = interruptHandler;
  9890  0A51  0020               	movlb	0	; select bank0
  9891  0A52  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  9892  0A53  0021               	movlb	1	; select bank1
  9893  0A54  00B5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  9894  0A55  0020               	movlb	0	; select bank0
  9895  0A56  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  9896  0A57  0021               	movlb	1	; select bank1
  9897  0A58  00B4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  9898  0A59                     l662:
  9899  0A59  0008               	return
  9900  0A5A                     __end_of_EUSART_SetFramingErrorHandler:
  9901                           
  9902                           	psect	text18
  9903  0A48                     __ptext18:	
  9904 ;; *************** function _EUSART_SetErrorHandler *****************
  9905 ;; Defined at:
  9906 ;;		line 272 in file "eusart.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9909 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9910 ;; Auto vars:     Size  Location     Type
  9911 ;;		None
  9912 ;; Return value:  Size  Location     Type
  9913 ;;                  1    wreg      void 
  9914 ;; Registers used:
  9915 ;;		wreg
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9921 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9924 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9925 ;;Total ram usage:        2 bytes
  9926 ;; Hardware stack levels used: 1
  9927 ;; Hardware stack levels required when called: 4
  9928 ;; This function calls:
  9929 ;;		Nothing
  9930 ;; This function is called by:
  9931 ;;		_EUSART_Initialize
  9932 ;; This function uses a non-reentrant model
  9933 ;;
  9934                           
  9935  0A48                     _EUSART_SetErrorHandler:	
  9936                           ;psect for function _EUSART_SetErrorHandler
  9937                           
  9938  0A48                     l3373:	
  9939                           ;incstack = 0
  9940                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9941                           
  9942                           
  9943                           ;eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  9944  0A48  0020               	movlb	0	; select bank0
  9945  0A49  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9946  0A4A  0021               	movlb	1	; select bank1
  9947  0A4B  00B1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  9948  0A4C  0020               	movlb	0	; select bank0
  9949  0A4D  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9950  0A4E  0021               	movlb	1	; select bank1
  9951  0A4F  00B0               	movwf	_EUSART_ErrorHandler^(0+128)
  9952  0A50                     l668:
  9953  0A50  0008               	return
  9954  0A51                     __end_of_EUSART_SetErrorHandler:
  9955                           
  9956                           	psect	text19
  9957  0B12                     __ptext19:	
  9958 ;; *************** function _CCP4_Initialize *****************
  9959 ;; Defined at:
  9960 ;;		line 18 in file "ccp4.c"
  9961 ;; Parameters:    Size  Location     Type
  9962 ;;		None
  9963 ;; Auto vars:     Size  Location     Type
  9964 ;;		None
  9965 ;; Return value:  Size  Location     Type
  9966 ;;                  1    wreg      void 
  9967 ;; Registers used:
  9968 ;;		wreg, status,2, status,0
  9969 ;; Tracked objects:
  9970 ;;		On entry : 0/0
  9971 ;;		On exit  : 0/0
  9972 ;;		Unchanged: 0/0
  9973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9978 ;;Total ram usage:        0 bytes
  9979 ;; Hardware stack levels used: 1
  9980 ;; Hardware stack levels required when called: 4
  9981 ;; This function calls:
  9982 ;;		Nothing
  9983 ;; This function is called by:
  9984 ;;		_SYSTEM_Initialize
  9985 ;; This function uses a non-reentrant model
  9986 ;;
  9987                           
  9988  0B12                     _CCP4_Initialize:	
  9989                           ;psect for function _CCP4_Initialize
  9990                           
  9991  0B12                     l3635:	
  9992                           ;incstack = 0
  9993                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0]
  9994                           
  9995                           
  9996                           ;ccp4.c: 21:  CCP4CON = 0x81;
  9997  0B12  3081               	movlw	129
  9998  0B13  0026               	movlb	6	; select bank6
  9999  0B14  0097               	movwf	23	;volatile
 10000                           
 10001                           ;ccp4.c: 24:  CCPR4H = 0x11;
 10002  0B15  3011               	movlw	17
 10003  0B16  0096               	movwf	22	;volatile
 10004                           
 10005                           ;ccp4.c: 25:  CCPR4L = 0xC1;
 10006  0B17  30C1               	movlw	193
 10007  0B18  0095               	movwf	21	;volatile
 10008  0B19                     l3637:
 10009                           
 10010                           ;ccp4.c: 28:  CCPTMRSbits.C4TSEL = 0x2;
 10011  0B19  0025               	movlb	5	; select bank5
 10012  0B1A  081F               	movf	31,w	;volatile
 10013  0B1B  393F               	andlw	-193
 10014  0B1C  3880               	iorlw	128
 10015  0B1D  009F               	movwf	31	;volatile
 10016  0B1E                     l3639:
 10017                           
 10018                           ;ccp4.c: 31:     PIR4bits.CCP4IF = 0;
 10019  0B1E  0020               	movlb	0	; select bank0
 10020  0B1F  1194               	bcf	20,3	;volatile
 10021  0B20                     l3641:
 10022                           
 10023                           ;ccp4.c: 34:     PIE4bits.CCP4IE = 1;
 10024  0B20  0021               	movlb	1	; select bank1
 10025  0B21  1594               	bsf	20,3	;volatile
 10026  0B22                     l899:
 10027  0B22  0008               	return
 10028  0B23                     __end_of_CCP4_Initialize:
 10029                           
 10030                           	psect	text20
 10031  0BE3                     __ptext20:	
 10032 ;; *************** function _CCP3_Initialize *****************
 10033 ;; Defined at:
 10034 ;;		line 49 in file "ccp3.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;		None
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;		None
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  1    wreg      void 
 10041 ;; Registers used:
 10042 ;;		wreg, status,2, status,0, pclath, cstack
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10052 ;;Total ram usage:        0 bytes
 10053 ;; Hardware stack levels used: 1
 10054 ;; Hardware stack levels required when called: 5
 10055 ;; This function calls:
 10056 ;;		_CCP3_SetCallBack
 10057 ;; This function is called by:
 10058 ;;		_SYSTEM_Initialize
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062  0BE3                     _CCP3_Initialize:	
 10063                           ;psect for function _CCP3_Initialize
 10064                           
 10065  0BE3                     l3565:	
 10066                           ;incstack = 0
 10067                           ; Regs used in _CCP3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10068                           
 10069                           
 10070                           ;ccp3.c: 52:  CCP3CON = 0x83;
 10071  0BE3  3083               	movlw	131
 10072  0BE4  0026               	movlb	6	; select bank6
 10073  0BE5  0093               	movwf	19	;volatile
 10074  0BE6                     l3567:
 10075                           
 10076                           ;ccp3.c: 55:  CCP3CAP = 0x00;
 10077  0BE6  0194               	clrf	20	;volatile
 10078  0BE7                     l3569:
 10079                           
 10080                           ;ccp3.c: 58:  CCPR3H = 0x00;
 10081  0BE7  0192               	clrf	18	;volatile
 10082  0BE8                     l3571:
 10083                           
 10084                           ;ccp3.c: 61:  CCPR3L = 0x00;
 10085  0BE8  0191               	clrf	17	;volatile
 10086  0BE9                     l3573:
 10087                           
 10088                           ;ccp3.c: 64:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 10089  0BE9  30CF               	movlw	low _CCP3_DefaultCallBack
 10090  0BEA  0020               	movlb	0	; select bank0
 10091  0BEB  00A0               	movwf	CCP3_SetCallBack@customCallBack
 10092  0BEC  300D               	movlw	high _CCP3_DefaultCallBack
 10093  0BED  00A1               	movwf	CCP3_SetCallBack@customCallBack+1
 10094  0BEE  318A  223F  318B   	fcall	_CCP3_SetCallBack
 10095  0BF1                     l3575:
 10096                           
 10097                           ;ccp3.c: 67:  CCPTMRSbits.C3TSEL = 0x1;
 10098  0BF1  0025               	movlb	5	; select bank5
 10099  0BF2  081F               	movf	31,w	;volatile
 10100  0BF3  39CF               	andlw	-49
 10101  0BF4  3810               	iorlw	16
 10102  0BF5  009F               	movwf	31	;volatile
 10103  0BF6                     l3577:
 10104                           
 10105                           ;ccp3.c: 70:     PIR4bits.CCP3IF = 0;
 10106  0BF6  0020               	movlb	0	; select bank0
 10107  0BF7  1114               	bcf	20,2	;volatile
 10108  0BF8                     l3579:
 10109                           
 10110                           ;ccp3.c: 73:     PIE4bits.CCP3IE = 1;
 10111  0BF8  0021               	movlb	1	; select bank1
 10112  0BF9  1514               	bsf	20,2	;volatile
 10113  0BFA                     l479:
 10114  0BFA  0008               	return
 10115  0BFB                     __end_of_CCP3_Initialize:
 10116                           
 10117                           	psect	text21
 10118  0A3F                     __ptext21:	
 10119 ;; *************** function _CCP3_SetCallBack *****************
 10120 ;; Defined at:
 10121 ;;		line 95 in file "ccp3.c"
 10122 ;; Parameters:    Size  Location     Type
 10123 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10124 ;;		 -> CCP3_DefaultCallBack(1), 
 10125 ;; Auto vars:     Size  Location     Type
 10126 ;;		None
 10127 ;; Return value:  Size  Location     Type
 10128 ;;                  1    wreg      void 
 10129 ;; Registers used:
 10130 ;;		wreg
 10131 ;; Tracked objects:
 10132 ;;		On entry : 0/0
 10133 ;;		On exit  : 0/0
 10134 ;;		Unchanged: 0/0
 10135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10139 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10140 ;;Total ram usage:        2 bytes
 10141 ;; Hardware stack levels used: 1
 10142 ;; Hardware stack levels required when called: 4
 10143 ;; This function calls:
 10144 ;;		Nothing
 10145 ;; This function is called by:
 10146 ;;		_CCP3_Initialize
 10147 ;; This function uses a non-reentrant model
 10148 ;;
 10149                           
 10150  0A3F                     _CCP3_SetCallBack:	
 10151                           ;psect for function _CCP3_SetCallBack
 10152                           
 10153  0A3F                     l3363:	
 10154                           ;incstack = 0
 10155                           ; Regs used in _CCP3_SetCallBack: [wreg]
 10156                           
 10157                           
 10158                           ;ccp3.c: 96:     CCP3_CallBack = customCallBack;
 10159  0A3F  0020               	movlb	0	; select bank0
 10160  0A40  0821               	movf	CCP3_SetCallBack@customCallBack+1,w
 10161  0A41  0021               	movlb	1	; select bank1
 10162  0A42  00C1               	movwf	(_CCP3_CallBack+1)^(0+128)
 10163  0A43  0020               	movlb	0	; select bank0
 10164  0A44  0820               	movf	CCP3_SetCallBack@customCallBack,w
 10165  0A45  0021               	movlb	1	; select bank1
 10166  0A46  00C0               	movwf	_CCP3_CallBack^(0+128)
 10167  0A47                     l485:
 10168  0A47  0008               	return
 10169  0A48                     __end_of_CCP3_SetCallBack:
 10170                           
 10171                           	psect	text22
 10172  0BCB                     __ptext22:	
 10173 ;; *************** function _CCP2_Initialize *****************
 10174 ;; Defined at:
 10175 ;;		line 49 in file "ccp2.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;		None
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;		None
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  1    wreg      void 
 10182 ;; Registers used:
 10183 ;;		wreg, status,2, status,0, pclath, cstack
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10193 ;;Total ram usage:        0 bytes
 10194 ;; Hardware stack levels used: 1
 10195 ;; Hardware stack levels required when called: 5
 10196 ;; This function calls:
 10197 ;;		_CCP2_SetCallBack
 10198 ;; This function is called by:
 10199 ;;		_SYSTEM_Initialize
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203  0BCB                     _CCP2_Initialize:	
 10204                           ;psect for function _CCP2_Initialize
 10205                           
 10206  0BCB                     l3619:	
 10207                           ;incstack = 0
 10208                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10209                           
 10210                           
 10211                           ;ccp2.c: 52:  CCP2CON = 0x83;
 10212  0BCB  3083               	movlw	131
 10213  0BCC  0025               	movlb	5	; select bank5
 10214  0BCD  0097               	movwf	23	;volatile
 10215  0BCE                     l3621:
 10216                           
 10217                           ;ccp2.c: 55:  CCP2CAP = 0x00;
 10218  0BCE  0198               	clrf	24	;volatile
 10219  0BCF                     l3623:
 10220                           
 10221                           ;ccp2.c: 58:  CCPR2H = 0x00;
 10222  0BCF  0196               	clrf	22	;volatile
 10223  0BD0                     l3625:
 10224                           
 10225                           ;ccp2.c: 61:  CCPR2L = 0x00;
 10226  0BD0  0195               	clrf	21	;volatile
 10227  0BD1                     l3627:
 10228                           
 10229                           ;ccp2.c: 64:     CCP2_SetCallBack(CCP2_DefaultCallBack);
 10230  0BD1  3094               	movlw	low _CCP2_DefaultCallBack
 10231  0BD2  0020               	movlb	0	; select bank0
 10232  0BD3  00A0               	movwf	CCP2_SetCallBack@customCallBack
 10233  0BD4  300D               	movlw	high _CCP2_DefaultCallBack
 10234  0BD5  00A1               	movwf	CCP2_SetCallBack@customCallBack+1
 10235  0BD6  318A  2236  318B   	fcall	_CCP2_SetCallBack
 10236  0BD9                     l3629:
 10237                           
 10238                           ;ccp2.c: 67:  CCPTMRSbits.C2TSEL = 0x1;
 10239  0BD9  0025               	movlb	5	; select bank5
 10240  0BDA  081F               	movf	31,w	;volatile
 10241  0BDB  39F3               	andlw	-13
 10242  0BDC  3804               	iorlw	4
 10243  0BDD  009F               	movwf	31	;volatile
 10244  0BDE                     l3631:
 10245                           
 10246                           ;ccp2.c: 70:     PIR4bits.CCP2IF = 0;
 10247  0BDE  0020               	movlb	0	; select bank0
 10248  0BDF  1094               	bcf	20,1	;volatile
 10249  0BE0                     l3633:
 10250                           
 10251                           ;ccp2.c: 73:     PIE4bits.CCP2IE = 1;
 10252  0BE0  0021               	movlb	1	; select bank1
 10253  0BE1  1494               	bsf	20,1	;volatile
 10254  0BE2                     l433:
 10255  0BE2  0008               	return
 10256  0BE3                     __end_of_CCP2_Initialize:
 10257                           
 10258                           	psect	text23
 10259  0A36                     __ptext23:	
 10260 ;; *************** function _CCP2_SetCallBack *****************
 10261 ;; Defined at:
 10262 ;;		line 95 in file "ccp2.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10265 ;;		 -> CCP2_DefaultCallBack(1), 
 10266 ;; Auto vars:     Size  Location     Type
 10267 ;;		None
 10268 ;; Return value:  Size  Location     Type
 10269 ;;                  1    wreg      void 
 10270 ;; Registers used:
 10271 ;;		wreg
 10272 ;; Tracked objects:
 10273 ;;		On entry : 0/0
 10274 ;;		On exit  : 0/0
 10275 ;;		Unchanged: 0/0
 10276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10277 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10280 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10281 ;;Total ram usage:        2 bytes
 10282 ;; Hardware stack levels used: 1
 10283 ;; Hardware stack levels required when called: 4
 10284 ;; This function calls:
 10285 ;;		Nothing
 10286 ;; This function is called by:
 10287 ;;		_CCP2_Initialize
 10288 ;; This function uses a non-reentrant model
 10289 ;;
 10290                           
 10291  0A36                     _CCP2_SetCallBack:	
 10292                           ;psect for function _CCP2_SetCallBack
 10293                           
 10294  0A36                     l3361:	
 10295                           ;incstack = 0
 10296                           ; Regs used in _CCP2_SetCallBack: [wreg]
 10297                           
 10298                           
 10299                           ;ccp2.c: 96:     CCP2_CallBack = customCallBack;
 10300  0A36  0020               	movlb	0	; select bank0
 10301  0A37  0821               	movf	CCP2_SetCallBack@customCallBack+1,w
 10302  0A38  0021               	movlb	1	; select bank1
 10303  0A39  00C7               	movwf	(_CCP2_CallBack+1)^(0+128)
 10304  0A3A  0020               	movlb	0	; select bank0
 10305  0A3B  0820               	movf	CCP2_SetCallBack@customCallBack,w
 10306  0A3C  0021               	movlb	1	; select bank1
 10307  0A3D  00C6               	movwf	_CCP2_CallBack^(0+128)
 10308  0A3E                     l439:
 10309  0A3E  0008               	return
 10310  0A3F                     __end_of_CCP2_SetCallBack:
 10311                           
 10312                           	psect	text24
 10313  0BB3                     __ptext24:	
 10314 ;; *************** function _CCP1_Initialize *****************
 10315 ;; Defined at:
 10316 ;;		line 49 in file "ccp1.c"
 10317 ;; Parameters:    Size  Location     Type
 10318 ;;		None
 10319 ;; Auto vars:     Size  Location     Type
 10320 ;;		None
 10321 ;; Return value:  Size  Location     Type
 10322 ;;                  1    wreg      void 
 10323 ;; Registers used:
 10324 ;;		wreg, status,2, status,0, pclath, cstack
 10325 ;; Tracked objects:
 10326 ;;		On entry : 0/0
 10327 ;;		On exit  : 0/0
 10328 ;;		Unchanged: 0/0
 10329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10334 ;;Total ram usage:        0 bytes
 10335 ;; Hardware stack levels used: 1
 10336 ;; Hardware stack levels required when called: 5
 10337 ;; This function calls:
 10338 ;;		_CCP1_SetCallBack
 10339 ;; This function is called by:
 10340 ;;		_SYSTEM_Initialize
 10341 ;; This function uses a non-reentrant model
 10342 ;;
 10343                           
 10344  0BB3                     _CCP1_Initialize:	
 10345                           ;psect for function _CCP1_Initialize
 10346                           
 10347  0BB3                     l3581:	
 10348                           ;incstack = 0
 10349                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10350                           
 10351                           
 10352                           ;ccp1.c: 52:  CCP1CON = 0x83;
 10353  0BB3  3083               	movlw	131
 10354  0BB4  0025               	movlb	5	; select bank5
 10355  0BB5  0093               	movwf	19	;volatile
 10356  0BB6                     l3583:
 10357                           
 10358                           ;ccp1.c: 55:  CCP1CAP = 0x00;
 10359  0BB6  0194               	clrf	20	;volatile
 10360  0BB7                     l3585:
 10361                           
 10362                           ;ccp1.c: 58:  CCPR1H = 0x00;
 10363  0BB7  0192               	clrf	18	;volatile
 10364  0BB8                     l3587:
 10365                           
 10366                           ;ccp1.c: 61:  CCPR1L = 0x00;
 10367  0BB8  0191               	clrf	17	;volatile
 10368  0BB9                     l3589:
 10369                           
 10370                           ;ccp1.c: 64:     CCP1_SetCallBack(CCP1_DefaultCallBack);
 10371  0BB9  3059               	movlw	low _CCP1_DefaultCallBack
 10372  0BBA  0020               	movlb	0	; select bank0
 10373  0BBB  00A0               	movwf	CCP1_SetCallBack@customCallBack
 10374  0BBC  300D               	movlw	high _CCP1_DefaultCallBack
 10375  0BBD  00A1               	movwf	CCP1_SetCallBack@customCallBack+1
 10376  0BBE  318A  222D  318B   	fcall	_CCP1_SetCallBack
 10377  0BC1                     l3591:
 10378                           
 10379                           ;ccp1.c: 67:  CCPTMRSbits.C1TSEL = 0x1;
 10380  0BC1  0025               	movlb	5	; select bank5
 10381  0BC2  081F               	movf	31,w	;volatile
 10382  0BC3  39FC               	andlw	-4
 10383  0BC4  3801               	iorlw	1
 10384  0BC5  009F               	movwf	31	;volatile
 10385  0BC6                     l3593:
 10386                           
 10387                           ;ccp1.c: 70:     PIR4bits.CCP1IF = 0;
 10388  0BC6  0020               	movlb	0	; select bank0
 10389  0BC7  1014               	bcf	20,0	;volatile
 10390  0BC8                     l3595:
 10391                           
 10392                           ;ccp1.c: 73:     PIE4bits.CCP1IE = 1;
 10393  0BC8  0021               	movlb	1	; select bank1
 10394  0BC9  1414               	bsf	20,0	;volatile
 10395  0BCA                     l387:
 10396  0BCA  0008               	return
 10397  0BCB                     __end_of_CCP1_Initialize:
 10398                           
 10399                           	psect	text25
 10400  0A2D                     __ptext25:	
 10401 ;; *************** function _CCP1_SetCallBack *****************
 10402 ;; Defined at:
 10403 ;;		line 95 in file "ccp1.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10406 ;;		 -> CCP1_DefaultCallBack(1), 
 10407 ;; Auto vars:     Size  Location     Type
 10408 ;;		None
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  1    wreg      void 
 10411 ;; Registers used:
 10412 ;;		wreg
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/0
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10422 ;;Total ram usage:        2 bytes
 10423 ;; Hardware stack levels used: 1
 10424 ;; Hardware stack levels required when called: 4
 10425 ;; This function calls:
 10426 ;;		Nothing
 10427 ;; This function is called by:
 10428 ;;		_CCP1_Initialize
 10429 ;; This function uses a non-reentrant model
 10430 ;;
 10431                           
 10432  0A2D                     _CCP1_SetCallBack:	
 10433                           ;psect for function _CCP1_SetCallBack
 10434                           
 10435  0A2D                     l3359:	
 10436                           ;incstack = 0
 10437                           ; Regs used in _CCP1_SetCallBack: [wreg]
 10438                           
 10439                           
 10440                           ;ccp1.c: 96:     CCP1_CallBack = customCallBack;
 10441  0A2D  0020               	movlb	0	; select bank0
 10442  0A2E  0821               	movf	CCP1_SetCallBack@customCallBack+1,w
 10443  0A2F  0021               	movlb	1	; select bank1
 10444  0A30  00CD               	movwf	(_CCP1_CallBack+1)^(0+128)
 10445  0A31  0020               	movlb	0	; select bank0
 10446  0A32  0820               	movf	CCP1_SetCallBack@customCallBack,w
 10447  0A33  0021               	movlb	1	; select bank1
 10448  0A34  00CC               	movwf	_CCP1_CallBack^(0+128)
 10449  0A35                     l393:
 10450  0A35  0008               	return
 10451  0A36                     __end_of_CCP1_SetCallBack:
 10452                           
 10453                           	psect	text26
 10454  0FA7                     __ptext26:	
 10455 ;; *************** function _JSN_Sensor_Trig *****************
 10456 ;; Defined at:
 10457 ;;		line 87 in file "JSN_Sensor.c"
 10458 ;; Parameters:    Size  Location     Type
 10459 ;;  Sensor          1    wreg     PTR struct .
 10460 ;;		 -> Sens1(6), Sens2(6), Sens3(6), 
 10461 ;; Auto vars:     Size  Location     Type
 10462 ;;  Sensor          1   28[BANK0 ] PTR struct .
 10463 ;;		 -> Sens1(6), Sens2(6), Sens3(6), 
 10464 ;; Return value:  Size  Location     Type
 10465 ;;                  1    wreg      void 
 10466 ;; Registers used:
 10467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10468 ;; Tracked objects:
 10469 ;;		On entry : 0/0
 10470 ;;		On exit  : 0/0
 10471 ;;		Unchanged: 0/0
 10472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10475 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10476 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10477 ;;Total ram usage:        5 bytes
 10478 ;; Hardware stack levels used: 1
 10479 ;; Hardware stack levels required when called: 6
 10480 ;; This function calls:
 10481 ;;		_FRT_GetMicros
 10482 ;;		_WritePin
 10483 ;; This function is called by:
 10484 ;;		_main
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488  0FA7                     _JSN_Sensor_Trig:	
 10489                           ;psect for function _JSN_Sensor_Trig
 10490                           
 10491                           
 10492                           ;incstack = 0
 10493                           ; Regs used in _JSN_Sensor_Trig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10494                           ;JSN_Sensor_Trig@Sensor stored from wreg
 10495  0FA7  0020               	movlb	0	; select bank0
 10496  0FA8  00BC               	movwf	JSN_Sensor_Trig@Sensor
 10497  0FA9                     l4109:
 10498                           
 10499                           ;JSN_Sensor.c: 88:     micros = FRT_GetMicros();
 10500  0FA9  3187  27B3  318F   	fcall	_FRT_GetMicros
 10501  0FAC  0020               	movlb	0	; select bank0
 10502  0FAD  0829               	movf	?_FRT_GetMicros+3,w
 10503  0FAE  0022               	movlb	2	; select bank2
 10504  0FAF  00C3               	movwf	(_micros+3)^(0+256)
 10505  0FB0  0020               	movlb	0	; select bank0
 10506  0FB1  0828               	movf	?_FRT_GetMicros+2,w
 10507  0FB2  0022               	movlb	2	; select bank2
 10508  0FB3  00C2               	movwf	(_micros+2)^(0+256)
 10509  0FB4  0020               	movlb	0	; select bank0
 10510  0FB5  0827               	movf	?_FRT_GetMicros+1,w
 10511  0FB6  0022               	movlb	2	; select bank2
 10512  0FB7  00C1               	movwf	(_micros+1)^(0+256)
 10513  0FB8  0020               	movlb	0	; select bank0
 10514  0FB9  0826               	movf	?_FRT_GetMicros,w
 10515  0FBA  0022               	movlb	2	; select bank2
 10516  0FBB  00C0               	movwf	_micros^(0+256)
 10517  0FBC                     l4111:
 10518                           
 10519                           ;JSN_Sensor.c: 91:     WritePin(Sensor->trigPin, 1);
 10520  0FBC  0020               	movlb	0	; select bank0
 10521  0FBD  01A0               	clrf	WritePin@val
 10522  0FBE  0AA0               	incf	WritePin@val,f
 10523  0FBF  083C               	movf	JSN_Sensor_Trig@Sensor,w
 10524  0FC0  3E04               	addlw	4
 10525  0FC1  0086               	movwf	6
 10526  0FC2  3001               	movlw	1	; select bank2/3
 10527  0FC3  0087               	movwf	7
 10528  0FC4  0801               	movf	1,w
 10529  0FC5  3183  23B8  318F   	fcall	_WritePin
 10530  0FC8                     l4113:	
 10531                           ;JSN_Sensor.c: 94:     while ((FRT_GetMicros() - micros) < 11);
 10532                           
 10533  0FC8  3187  27B3  318F   	fcall	_FRT_GetMicros
 10534  0FCB  0022               	movlb	2	; select bank2
 10535  0FCC  0840               	movf	_micros^(0+256),w
 10536  0FCD  0020               	movlb	0	; select bank0
 10537  0FCE  0226               	subwf	?_FRT_GetMicros,w
 10538  0FCF  00B8               	movwf	??_JSN_Sensor_Trig
 10539  0FD0  0022               	movlb	2	; select bank2
 10540  0FD1  0841               	movf	(_micros+1)^(0+256),w
 10541  0FD2  0020               	movlb	0	; select bank0
 10542  0FD3  3B27               	subwfb	?_FRT_GetMicros+1,w
 10543  0FD4  00B9               	movwf	??_JSN_Sensor_Trig+1
 10544  0FD5  0022               	movlb	2	; select bank2
 10545  0FD6  0842               	movf	(_micros+2)^(0+256),w
 10546  0FD7  0020               	movlb	0	; select bank0
 10547  0FD8  3B28               	subwfb	?_FRT_GetMicros+2,w
 10548  0FD9  00BA               	movwf	??_JSN_Sensor_Trig+2
 10549  0FDA  0022               	movlb	2	; select bank2
 10550  0FDB  0843               	movf	(_micros+3)^(0+256),w
 10551  0FDC  0020               	movlb	0	; select bank0
 10552  0FDD  3B29               	subwfb	?_FRT_GetMicros+3,w
 10553  0FDE  00BB               	movwf	??_JSN_Sensor_Trig+3
 10554  0FDF  083B               	movf	??_JSN_Sensor_Trig+3,w
 10555  0FE0  1D03               	btfss	3,2
 10556  0FE1  2FEE               	goto	u1470
 10557  0FE2  083A               	movf	??_JSN_Sensor_Trig+2,w
 10558  0FE3  1D03               	btfss	3,2
 10559  0FE4  2FEE               	goto	u1470
 10560  0FE5  0839               	movf	??_JSN_Sensor_Trig+1,w
 10561  0FE6  1D03               	btfss	3,2
 10562  0FE7  2FEE               	goto	u1470
 10563  0FE8  300B               	movlw	11
 10564  0FE9  0238               	subwf	??_JSN_Sensor_Trig,w
 10565  0FEA  1C03               	btfss	3,0
 10566  0FEB  2FED               	goto	u1471
 10567  0FEC  2FEE               	goto	u1470
 10568  0FED                     u1471:
 10569  0FED  2FC8               	goto	l4113
 10570  0FEE                     u1470:
 10571  0FEE                     l4115:
 10572                           
 10573                           ;JSN_Sensor.c: 97:     WritePin(Sensor->trigPin, 0);
 10574  0FEE  0020               	movlb	0	; select bank0
 10575  0FEF  01A0               	clrf	WritePin@val
 10576  0FF0  083C               	movf	JSN_Sensor_Trig@Sensor,w
 10577  0FF1  3E04               	addlw	4
 10578  0FF2  0086               	movwf	6
 10579  0FF3  3001               	movlw	1	; select bank2/3
 10580  0FF4  0087               	movwf	7
 10581  0FF5  0801               	movf	1,w
 10582  0FF6  3183  23B8  318F   	fcall	_WritePin
 10583  0FF9                     l4117:
 10584                           
 10585                           ;JSN_Sensor.c: 100:     lastTrig = Sensor;
 10586  0FF9  0020               	movlb	0	; select bank0
 10587  0FFA  083C               	movf	JSN_Sensor_Trig@Sensor,w
 10588  0FFB  00B8               	movwf	??_JSN_Sensor_Trig
 10589  0FFC  0838               	movf	??_JSN_Sensor_Trig,w
 10590  0FFD  0021               	movlb	1	; select bank1
 10591  0FFE  00DA               	movwf	_lastTrig^(0+128)
 10592  0FFF                     l54:
 10593  0FFF  0008               	return
 10594  1000                     __end_of_JSN_Sensor_Trig:
 10595                           
 10596                           	psect	text27
 10597  07B3                     __ptext27:	
 10598 ;; *************** function _FRT_GetMicros *****************
 10599 ;; Defined at:
 10600 ;;		line 32 in file "FRT.c"
 10601 ;; Parameters:    Size  Location     Type
 10602 ;;		None
 10603 ;; Auto vars:     Size  Location     Type
 10604 ;;		None
 10605 ;; Return value:  Size  Location     Type
 10606 ;;                  4    6[BANK0 ] unsigned long 
 10607 ;; Registers used:
 10608 ;;		wreg, status,2, status,0, pclath, cstack
 10609 ;; Tracked objects:
 10610 ;;		On entry : 0/0
 10611 ;;		On exit  : 0/0
 10612 ;;		Unchanged: 0/0
 10613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10614 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10616 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10617 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10618 ;;Total ram usage:       18 bytes
 10619 ;; Hardware stack levels used: 1
 10620 ;; Hardware stack levels required when called: 5
 10621 ;; This function calls:
 10622 ;;		_TMR0_GetCallBackNum
 10623 ;;		_TMR0_ReadTimer
 10624 ;;		___wmul
 10625 ;; This function is called by:
 10626 ;;		_JSN_Sensor_Trig
 10627 ;; This function uses a non-reentrant model
 10628 ;;
 10629                           
 10630  07B3                     _FRT_GetMicros:	
 10631                           ;psect for function _FRT_GetMicros
 10632                           
 10633  07B3                     l3935:	
 10634                           ;incstack = 0
 10635                           ; Regs used in _FRT_GetMicros: [wreg+status,2+status,0+pclath+cstack]
 10636                           
 10637                           
 10638                           ;FRT.c: 33:     return (micros + (250*TMR0_GetCallBackNum()) + TMR0_ReadTimer());
 10639  07B3  0022               	movlb	2	; select bank2
 10640  07B4  0838               	movf	_micros@FRT$F1531^(0+256),w
 10641  07B5  0020               	movlb	0	; select bank0
 10642  07B6  00AA               	movwf	??_FRT_GetMicros
 10643  07B7  0022               	movlb	2	; select bank2
 10644  07B8  0839               	movf	(_micros@FRT$F1531+1)^(0+256),w
 10645  07B9  0020               	movlb	0	; select bank0
 10646  07BA  00AB               	movwf	??_FRT_GetMicros+1
 10647  07BB  0022               	movlb	2	; select bank2
 10648  07BC  083A               	movf	(_micros@FRT$F1531+2)^(0+256),w
 10649  07BD  0020               	movlb	0	; select bank0
 10650  07BE  00AC               	movwf	??_FRT_GetMicros+2
 10651  07BF  0022               	movlb	2	; select bank2
 10652  07C0  083B               	movf	(_micros@FRT$F1531+3)^(0+256),w
 10653  07C1  0020               	movlb	0	; select bank0
 10654  07C2  00AD               	movwf	??_FRT_GetMicros+3
 10655  07C3  318A  2215  3187   	fcall	_TMR0_ReadTimer
 10656  07C6  0020               	movlb	0	; select bank0
 10657  07C7  00AE               	movwf	??_FRT_GetMicros+4
 10658  07C8  01AF               	clrf	??_FRT_GetMicros+5
 10659  07C9  01B0               	clrf	??_FRT_GetMicros+6
 10660  07CA  01B1               	clrf	??_FRT_GetMicros+7
 10661  07CB  3180  2002  3187   	fcall	_TMR0_GetCallBackNum
 10662  07CE  0020               	movlb	0	; select bank0
 10663  07CF  00B2               	movwf	??_FRT_GetMicros+8
 10664  07D0  01B3               	clrf	??_FRT_GetMicros+9
 10665  07D1  0832               	movf	??_FRT_GetMicros+8,w
 10666  07D2  00A0               	movwf	___wmul@multiplier
 10667  07D3  0833               	movf	??_FRT_GetMicros+9,w
 10668  07D4  00A1               	movwf	___wmul@multiplier+1
 10669  07D5  30FA               	movlw	250
 10670  07D6  00A2               	movwf	___wmul@multiplicand
 10671  07D7  3000               	movlw	0
 10672  07D8  00A3               	movwf	___wmul@multiplicand+1
 10673  07D9  318C  2431  3187   	fcall	___wmul
 10674  07DC  0020               	movlb	0	; select bank0
 10675  07DD  0820               	movf	?___wmul,w
 10676  07DE  00B4               	movwf	??_FRT_GetMicros+10
 10677  07DF  0821               	movf	?___wmul+1,w
 10678  07E0  00B5               	movwf	??_FRT_GetMicros+11
 10679  07E1  3000               	movlw	0
 10680  07E2  1BB5               	btfsc	??_FRT_GetMicros+11,7
 10681  07E3  30FF               	movlw	255
 10682  07E4  00B6               	movwf	??_FRT_GetMicros+12
 10683  07E5  00B7               	movwf	??_FRT_GetMicros+13
 10684  07E6  0834               	movf	??_FRT_GetMicros+10,w
 10685  07E7  07AE               	addwf	??_FRT_GetMicros+4,f
 10686  07E8  0835               	movf	??_FRT_GetMicros+11,w
 10687  07E9  3DAF               	addwfc	??_FRT_GetMicros+5,f
 10688  07EA  0836               	movf	??_FRT_GetMicros+12,w
 10689  07EB  3DB0               	addwfc	??_FRT_GetMicros+6,f
 10690  07EC  0837               	movf	??_FRT_GetMicros+13,w
 10691  07ED  3DB1               	addwfc	??_FRT_GetMicros+7,f
 10692  07EE  082E               	movf	??_FRT_GetMicros+4,w
 10693  07EF  07AA               	addwf	??_FRT_GetMicros,f
 10694  07F0  082F               	movf	??_FRT_GetMicros+5,w
 10695  07F1  3DAB               	addwfc	??_FRT_GetMicros+1,f
 10696  07F2  0830               	movf	??_FRT_GetMicros+6,w
 10697  07F3  3DAC               	addwfc	??_FRT_GetMicros+2,f
 10698  07F4  0831               	movf	??_FRT_GetMicros+7,w
 10699  07F5  3DAD               	addwfc	??_FRT_GetMicros+3,f
 10700  07F6  082D               	movf	??_FRT_GetMicros+3,w
 10701  07F7  00A9               	movwf	?_FRT_GetMicros+3
 10702  07F8  082C               	movf	??_FRT_GetMicros+2,w
 10703  07F9  00A8               	movwf	?_FRT_GetMicros+2
 10704  07FA  082B               	movf	??_FRT_GetMicros+1,w
 10705  07FB  00A7               	movwf	?_FRT_GetMicros+1
 10706  07FC  082A               	movf	??_FRT_GetMicros,w
 10707  07FD  00A6               	movwf	?_FRT_GetMicros
 10708  07FE                     l809:
 10709  07FE  0008               	return
 10710  07FF                     __end_of_FRT_GetMicros:
 10711                           
 10712                           	psect	text28
 10713  0C31                     __ptext28:	
 10714 ;; *************** function ___wmul *****************
 10715 ;; Defined at:
 10716 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10719 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;  product         2    4[BANK0 ] unsigned int 
 10722 ;; Return value:  Size  Location     Type
 10723 ;;                  2    0[BANK0 ] unsigned int 
 10724 ;; Registers used:
 10725 ;;		wreg, status,2, status,0
 10726 ;; Tracked objects:
 10727 ;;		On entry : 0/0
 10728 ;;		On exit  : 0/0
 10729 ;;		Unchanged: 0/0
 10730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10732 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10734 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10735 ;;Total ram usage:        6 bytes
 10736 ;; Hardware stack levels used: 1
 10737 ;; Hardware stack levels required when called: 4
 10738 ;; This function calls:
 10739 ;;		Nothing
 10740 ;; This function is called by:
 10741 ;;		_FRT_GetMicros
 10742 ;; This function uses a non-reentrant model
 10743 ;;
 10744                           
 10745  0C31                     ___wmul:	
 10746                           ;psect for function ___wmul
 10747                           
 10748  0C31                     l3743:	
 10749                           ;incstack = 0
 10750                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10751                           
 10752  0C31  0020               	movlb	0	; select bank0
 10753  0C32  01A4               	clrf	___wmul@product
 10754  0C33  01A5               	clrf	___wmul@product+1
 10755  0C34                     l3745:
 10756  0C34  1C20               	btfss	___wmul@multiplier,0
 10757  0C35  2C37               	goto	u1301
 10758  0C36  2C38               	goto	u1300
 10759  0C37                     u1301:
 10760  0C37  2C3C               	goto	l1157
 10761  0C38                     u1300:
 10762  0C38                     l3747:
 10763  0C38  0822               	movf	___wmul@multiplicand,w
 10764  0C39  07A4               	addwf	___wmul@product,f
 10765  0C3A  0823               	movf	___wmul@multiplicand+1,w
 10766  0C3B  3DA5               	addwfc	___wmul@product+1,f
 10767  0C3C                     l1157:
 10768  0C3C  3001               	movlw	1
 10769  0C3D                     u1315:
 10770  0C3D  35A2               	lslf	___wmul@multiplicand,f
 10771  0C3E  0DA3               	rlf	___wmul@multiplicand+1,f
 10772  0C3F  0B89               	decfsz	9,f
 10773  0C40  2C3D               	goto	u1315
 10774  0C41                     l3749:
 10775  0C41  3001               	movlw	1
 10776  0C42                     u1325:
 10777  0C42  36A1               	lsrf	___wmul@multiplier+1,f
 10778  0C43  0CA0               	rrf	___wmul@multiplier,f
 10779  0C44  0B89               	decfsz	9,f
 10780  0C45  2C42               	goto	u1325
 10781  0C46                     l3751:
 10782  0C46  0820               	movf	___wmul@multiplier,w
 10783  0C47  0421               	iorwf	___wmul@multiplier+1,w
 10784  0C48  1D03               	btfss	3,2
 10785  0C49  2C4B               	goto	u1331
 10786  0C4A  2C4C               	goto	u1330
 10787  0C4B                     u1331:
 10788  0C4B  2C34               	goto	l3745
 10789  0C4C                     u1330:
 10790  0C4C                     l3753:
 10791  0C4C  0825               	movf	___wmul@product+1,w
 10792  0C4D  00A1               	movwf	?___wmul+1
 10793  0C4E  0824               	movf	___wmul@product,w
 10794  0C4F  00A0               	movwf	?___wmul
 10795  0C50                     l1159:
 10796  0C50  0008               	return
 10797  0C51                     __end_of___wmul:
 10798                           
 10799                           	psect	text29
 10800  0A15                     __ptext29:	
 10801 ;; *************** function _TMR0_ReadTimer *****************
 10802 ;; Defined at:
 10803 ;;		line 62 in file "tmr0.c"
 10804 ;; Parameters:    Size  Location     Type
 10805 ;;		None
 10806 ;; Auto vars:     Size  Location     Type
 10807 ;;  readVal         1    1[BANK0 ] unsigned char 
 10808 ;; Return value:  Size  Location     Type
 10809 ;;                  1    wreg      unsigned char 
 10810 ;; Registers used:
 10811 ;;		wreg
 10812 ;; Tracked objects:
 10813 ;;		On entry : 0/0
 10814 ;;		On exit  : 0/0
 10815 ;;		Unchanged: 0/0
 10816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10819 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10820 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10821 ;;Total ram usage:        2 bytes
 10822 ;; Hardware stack levels used: 1
 10823 ;; Hardware stack levels required when called: 4
 10824 ;; This function calls:
 10825 ;;		Nothing
 10826 ;; This function is called by:
 10827 ;;		_FRT_GetMicros
 10828 ;; This function uses a non-reentrant model
 10829 ;;
 10830                           
 10831  0A15                     _TMR0_ReadTimer:	
 10832                           ;psect for function _TMR0_ReadTimer
 10833                           
 10834  0A15                     l3703:	
 10835                           ;incstack = 0
 10836                           ; Regs used in _TMR0_ReadTimer: [wreg]
 10837                           
 10838                           
 10839                           ;tmr0.c: 64:     uint8_t readVal;;tmr0.c: 67:     readVal = TMR0L;
 10840  0A15  0020               	movlb	0	; select bank0
 10841  0A16  0815               	movf	21,w	;volatile
 10842  0A17  00A0               	movwf	??_TMR0_ReadTimer
 10843  0A18  0820               	movf	??_TMR0_ReadTimer,w
 10844  0A19  00A1               	movwf	TMR0_ReadTimer@readVal
 10845                           
 10846                           ;tmr0.c: 69:     return readVal;
 10847  0A1A  0821               	movf	TMR0_ReadTimer@readVal,w
 10848  0A1B                     l325:
 10849  0A1B  0008               	return
 10850  0A1C                     __end_of_TMR0_ReadTimer:
 10851                           
 10852                           	psect	text30
 10853  0002                     __ptext30:	
 10854 ;; *************** function _TMR0_GetCallBackNum *****************
 10855 ;; Defined at:
 10856 ;;		line 130 in file "tmr0.c"
 10857 ;; Parameters:    Size  Location     Type
 10858 ;;		None
 10859 ;; Auto vars:     Size  Location     Type
 10860 ;;		None
 10861 ;; Return value:  Size  Location     Type
 10862 ;;                  1    wreg      unsigned char 
 10863 ;; Registers used:
 10864 ;;		wreg
 10865 ;; Tracked objects:
 10866 ;;		On entry : 0/0
 10867 ;;		On exit  : 0/0
 10868 ;;		Unchanged: 0/0
 10869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10874 ;;Total ram usage:        0 bytes
 10875 ;; Hardware stack levels used: 1
 10876 ;; Hardware stack levels required when called: 4
 10877 ;; This function calls:
 10878 ;;		Nothing
 10879 ;; This function is called by:
 10880 ;;		_FRT_GetMicros
 10881 ;; This function uses a non-reentrant model
 10882 ;;
 10883                           
 10884  0002                     _TMR0_GetCallBackNum:	
 10885                           ;psect for function _TMR0_GetCallBackNum
 10886                           
 10887  0002                     l3715:	
 10888                           ;incstack = 0
 10889                           ; Regs used in _TMR0_GetCallBackNum: [wreg]
 10890                           
 10891                           
 10892                           ;tmr0.c: 131:     return CountCallBack;
 10893  0002  087D               	movf	_CountCallBack,w	;volatile
 10894  0003                     l347:
 10895  0003  0008               	return
 10896  0004                     __end_of_TMR0_GetCallBackNum:
 10897                           
 10898                           	psect	text31
 10899  052E                     __ptext31:	
 10900 ;; *************** function _JSN_Sensor_Init *****************
 10901 ;; Defined at:
 10902 ;;		line 32 in file "JSN_Sensor.c"
 10903 ;; Parameters:    Size  Location     Type
 10904 ;;  Sensor          1    wreg     PTR struct .
 10905 ;;		 -> Sens1(6), Sens2(6), Sens3(6), 
 10906 ;;  trigPin         1    2[BANK1 ] enum E7144
 10907 ;;  echoPin         1    3[BANK1 ] enum E7144
 10908 ;; Auto vars:     Size  Location     Type
 10909 ;;  Sensor          1    6[BANK1 ] PTR struct .
 10910 ;;		 -> Sens1(6), Sens2(6), Sens3(6), 
 10911 ;; Return value:  Size  Location     Type
 10912 ;;                  1    wreg      unsigned char 
 10913 ;; Registers used:
 10914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10915 ;; Tracked objects:
 10916 ;;		On entry : 0/0
 10917 ;;		On exit  : 0/0
 10918 ;;		Unchanged: 0/0
 10919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10920 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10921 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10922 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10923 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10924 ;;Total ram usage:        5 bytes
 10925 ;; Hardware stack levels used: 1
 10926 ;; Hardware stack levels required when called: 13
 10927 ;; This function calls:
 10928 ;;		_SetPin
 10929 ;;		_WritePin
 10930 ;;		_printf
 10931 ;; This function is called by:
 10932 ;;		_main
 10933 ;; This function uses a non-reentrant model
 10934 ;;
 10935                           
 10936  052E                     _JSN_Sensor_Init:	
 10937                           ;psect for function _JSN_Sensor_Init
 10938                           
 10939                           
 10940                           ;incstack = 0
 10941                           ; Regs used in _JSN_Sensor_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10942                           ;JSN_Sensor_Init@Sensor stored from wreg
 10943  052E  0021               	movlb	1	; select bank1
 10944  052F  00E1               	movwf	JSN_Sensor_Init@Sensor^(0+128)
 10945  0530                     l4057:
 10946                           
 10947                           ;JSN_Sensor.c: 39:     switch (echoPin) {
 10948  0530  2D44               	goto	l4069
 10949  0531                     l28:	
 10950                           ;JSN_Sensor.c: 42:         case C3:
 10951                           
 10952  0531                     l4059:
 10953                           
 10954                           ;JSN_Sensor.c: 44:             SetPin(echoPin, 1);
 10955  0531  0020               	movlb	0	; select bank0
 10956  0532  01A0               	clrf	SetPin@io
 10957  0533  0AA0               	incf	SetPin@io,f
 10958  0534  0021               	movlb	1	; select bank1
 10959  0535  085E               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 10960  0536  3184  2473  3185   	fcall	_SetPin
 10961                           
 10962                           ;JSN_Sensor.c: 45:             break;
 10963  0539  2D72               	goto	l4081
 10964  053A                     l4061:
 10965                           
 10966                           ;JSN_Sensor.c: 47:             printf("ERROR: Invalid echoPin (must be [A2, A4, C3, C5])
      +                          ");
 10967  053A  303A               	movlw	low (STR_1| (0+32768))
 10968  053B  0020               	movlb	0	; select bank0
 10969  053C  00EC               	movwf	printf@fmt
 10970  053D  3090               	movlw	high (STR_1| (0+32768))
 10971  053E  00ED               	movwf	printf@fmt+1
 10972  053F  318B  2346  3185   	fcall	_printf
 10973  0542                     l4063:
 10974                           
 10975                           ;JSN_Sensor.c: 48:             return 0xFF;
 10976  0542  30FF               	movlw	255
 10977  0543  2DCB               	goto	l32
 10978  0544                     l4069:
 10979  0544  085E               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 10980  0545  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 10981  0546  01E0               	clrf	(??_JSN_Sensor_Init^(0+128)+1)
 10982                           
 10983                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10984                           ; Switch size 1, requested type "simple"
 10985                           ; Number of cases is 1, Range of values is 0 to 0
 10986                           ; switch strategies available:
 10987                           ; Name         Instructions Cycles
 10988                           ; simple_byte            4     3 (average)
 10989                           ; direct_byte            8     6 (fixed)
 10990                           ; jumptable            260     6 (fixed)
 10991                           ;	Chosen strategy is simple_byte
 10992  0547  0860               	movf	(??_JSN_Sensor_Init+1)^(0+128),w
 10993  0548  3A00               	xorlw	0	; case 0
 10994  0549  1903               	skipnz
 10995  054A  2D4C               	goto	l4687
 10996  054B  2D3A               	goto	l4061
 10997  054C                     l4687:
 10998                           
 10999                           ; Switch size 1, requested type "simple"
 11000                           ; Number of cases is 4, Range of values is 1 to 11
 11001                           ; switch strategies available:
 11002                           ; Name         Instructions Cycles
 11003                           ; simple_byte           13     7 (average)
 11004                           ; direct_byte           31     9 (fixed)
 11005                           ; jumptable            263     9 (fixed)
 11006                           ;	Chosen strategy is simple_byte
 11007  054C  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11008  054D  3A01               	xorlw	1	; case 1
 11009  054E  1903               	skipnz
 11010  054F  2D31               	goto	l4059
 11011  0550  3A02               	xorlw	2	; case 3
 11012  0551  1903               	skipnz
 11013  0552  2D31               	goto	l4059
 11014  0553  3A06               	xorlw	6	; case 5
 11015  0554  1903               	skipnz
 11016  0555  2D31               	goto	l4059
 11017  0556  3A0E               	xorlw	14	; case 11
 11018  0557  1903               	skipnz
 11019  0558  2D31               	goto	l28
 11020  0559  2D3A               	goto	l4061
 11021  055A                     l37:	
 11022                           ;JSN_Sensor.c: 56:         case C7:
 11023                           
 11024  055A                     l4071:
 11025                           
 11026                           ;JSN_Sensor.c: 66:             SetPin(trigPin, 0);
 11027  055A  0020               	movlb	0	; select bank0
 11028  055B  01A0               	clrf	SetPin@io
 11029  055C  0021               	movlb	1	; select bank1
 11030  055D  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 11031  055E  3184  2473  3185   	fcall	_SetPin
 11032                           
 11033                           ;JSN_Sensor.c: 67:             WritePin(trigPin, 0);
 11034  0561  0020               	movlb	0	; select bank0
 11035  0562  01A0               	clrf	WritePin@val
 11036  0563  0021               	movlb	1	; select bank1
 11037  0564  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 11038  0565  3183  23B8  3185   	fcall	_WritePin
 11039                           
 11040                           ;JSN_Sensor.c: 68:             break;
 11041  0568  2DA4               	goto	l4083
 11042  0569                     l4073:
 11043                           
 11044                           ;JSN_Sensor.c: 70:             printf("ERROR: Invalid trigPin (must NOT be [A2, A3, A4, 
      +                          C3, C5])");
 11045  0569  3000               	movlw	low (STR_2| (0+32768))
 11046  056A  0020               	movlb	0	; select bank0
 11047  056B  00EC               	movwf	printf@fmt
 11048  056C  3090               	movlw	high (STR_2| (0+32768))
 11049  056D  00ED               	movwf	printf@fmt+1
 11050  056E  318B  2346  3185   	fcall	_printf
 11051  0571  2D42               	goto	l4063
 11052  0572                     l4081:
 11053  0572  0021               	movlb	1	; select bank1
 11054  0573  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 11055  0574  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11056  0575  01E0               	clrf	(??_JSN_Sensor_Init^(0+128)+1)
 11057                           
 11058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11059                           ; Switch size 1, requested type "simple"
 11060                           ; Number of cases is 1, Range of values is 0 to 0
 11061                           ; switch strategies available:
 11062                           ; Name         Instructions Cycles
 11063                           ; simple_byte            4     3 (average)
 11064                           ; direct_byte            8     6 (fixed)
 11065                           ; jumptable            260     6 (fixed)
 11066                           ;	Chosen strategy is simple_byte
 11067  0576  0860               	movf	(??_JSN_Sensor_Init+1)^(0+128),w
 11068  0577  3A00               	xorlw	0	; case 0
 11069  0578  1903               	skipnz
 11070  0579  2D7B               	goto	l4689
 11071  057A  2D69               	goto	l4073
 11072  057B                     l4689:
 11073                           
 11074                           ; Switch size 1, requested type "simple"
 11075                           ; Number of cases is 13, Range of values is 0 to 17
 11076                           ; switch strategies available:
 11077                           ; Name         Instructions Cycles
 11078                           ; simple_byte           40    21 (average)
 11079                           ; direct_byte           42     6 (fixed)
 11080                           ; jumptable            260     6 (fixed)
 11081                           ;	Chosen strategy is simple_byte
 11082  057B  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11083  057C  3A00               	xorlw	0	; case 0
 11084  057D  1903               	skipnz
 11085  057E  2D5A               	goto	l37
 11086  057F  3A04               	xorlw	4	; case 4
 11087  0580  1903               	skipnz
 11088  0581  2D5A               	goto	l37
 11089  0582  3A02               	xorlw	2	; case 6
 11090  0583  1903               	skipnz
 11091  0584  2D5A               	goto	l37
 11092  0585  3A01               	xorlw	1	; case 7
 11093  0586  1903               	skipnz
 11094  0587  2D5A               	goto	l4071
 11095  0588  3A0F               	xorlw	15	; case 8
 11096  0589  1903               	skipnz
 11097  058A  2D5A               	goto	l4071
 11098  058B  3A01               	xorlw	1	; case 9
 11099  058C  1903               	skipnz
 11100  058D  2D5A               	goto	l4071
 11101  058E  3A03               	xorlw	3	; case 10
 11102  058F  1903               	skipnz
 11103  0590  2D5A               	goto	l4071
 11104  0591  3A06               	xorlw	6	; case 12
 11105  0592  1903               	skipnz
 11106  0593  2D5A               	goto	l4071
 11107  0594  3A01               	xorlw	1	; case 13
 11108  0595  1903               	skipnz
 11109  0596  2D5A               	goto	l4071
 11110  0597  3A03               	xorlw	3	; case 14
 11111  0598  1903               	skipnz
 11112  0599  2D5A               	goto	l4071
 11113  059A  3A01               	xorlw	1	; case 15
 11114  059B  1903               	skipnz
 11115  059C  2D5A               	goto	l4071
 11116  059D  3A1F               	xorlw	31	; case 16
 11117  059E  1903               	skipnz
 11118  059F  2D5A               	goto	l4071
 11119  05A0  3A01               	xorlw	1	; case 17
 11120  05A1  1903               	skipnz
 11121  05A2  2D5A               	goto	l4071
 11122  05A3  2D69               	goto	l4073
 11123  05A4                     l4083:
 11124                           
 11125                           ;JSN_Sensor.c: 75:     Sensor->distance = 0;
 11126  05A4  0021               	movlb	1	; select bank1
 11127  05A5  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11128  05A6  3E02               	addlw	2
 11129  05A7  0086               	movwf	6
 11130  05A8  3001               	movlw	1	; select bank2/3
 11131  05A9  0087               	movwf	7
 11132  05AA  3000               	movlw	0
 11133  05AB  3FC0               	movwi [0]fsr1
 11134  05AC  3FC1               	movwi [1]fsr1
 11135  05AD                     l4085:
 11136                           
 11137                           ;JSN_Sensor.c: 76:     Sensor->echoHighTime = 0;
 11138  05AD  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11139  05AE  0086               	movwf	6
 11140  05AF  3001               	movlw	1	; select bank2/3
 11141  05B0  0087               	movwf	7
 11142  05B1  3000               	movlw	0
 11143  05B2  3FC0               	movwi [0]fsr1
 11144  05B3  3FC1               	movwi [1]fsr1
 11145  05B4                     l4087:
 11146                           
 11147                           ;JSN_Sensor.c: 77:     Sensor->echoPin = echoPin;
 11148  05B4  085E               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 11149  05B5  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11150  05B6  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11151  05B7  3E05               	addlw	5
 11152  05B8  0086               	movwf	6
 11153  05B9  3001               	movlw	1	; select bank2/3
 11154  05BA  0087               	movwf	7
 11155  05BB  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11156  05BC  0081               	movwf	1
 11157  05BD                     l4089:
 11158                           
 11159                           ;JSN_Sensor.c: 78:     Sensor->trigPin = trigPin;
 11160  05BD  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 11161  05BE  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11162  05BF  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11163  05C0  3E04               	addlw	4
 11164  05C1  0086               	movwf	6
 11165  05C2  3001               	movlw	1	; select bank2/3
 11166  05C3  0087               	movwf	7
 11167  05C4  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11168  05C5  0081               	movwf	1
 11169  05C6                     l4091:
 11170                           
 11171                           ;JSN_Sensor.c: 80:     lastTrig = Sensor;
 11172  05C6  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11173  05C7  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11174  05C8  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11175  05C9  00DA               	movwf	_lastTrig^(0+128)
 11176  05CA                     l4093:
 11177                           
 11178                           ;JSN_Sensor.c: 82:     return 0x00;
 11179  05CA  3000               	movlw	0
 11180  05CB                     l32:
 11181  05CB  0008               	return
 11182  05CC                     __end_of_JSN_Sensor_Init:
 11183                           
 11184                           	psect	text32
 11185  0B46                     __ptext32:	
 11186 ;; *************** function _printf *****************
 11187 ;; Defined at:
 11188 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\printf.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
 11191 ;;		 -> STR_5(6), STR_4(6), STR_3(6), STR_2(58), 
 11192 ;;		 -> STR_1(50), 
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;  ret             2    0        int 
 11195 ;;  ap              1    1[BANK1 ] PTR void [1]
 11196 ;;		 -> ?_printf(2), 
 11197 ;; Return value:  Size  Location     Type
 11198 ;;                  2   76[BANK0 ] int 
 11199 ;; Registers used:
 11200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11201 ;; Tracked objects:
 11202 ;;		On entry : 0/0
 11203 ;;		On exit  : 0/0
 11204 ;;		Unchanged: 0/0
 11205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11206 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11207 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11208 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11209 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11210 ;;Total ram usage:        6 bytes
 11211 ;; Hardware stack levels used: 1
 11212 ;; Hardware stack levels required when called: 12
 11213 ;; This function calls:
 11214 ;;		_vfprintf
 11215 ;; This function is called by:
 11216 ;;		_JSN_Sensor_Init
 11217 ;;		_main
 11218 ;; This function uses a non-reentrant model
 11219 ;;
 11220                           
 11221  0B46                     _printf:	
 11222                           ;psect for function _printf
 11223                           
 11224  0B46                     l3849:	
 11225                           ;incstack = 0
 11226                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11227                           
 11228  0B46  306E               	movlw	(low ((?_printf| 0+2)))& (0+255)
 11229  0B47  0021               	movlb	1	; select bank1
 11230  0B48  00DB               	movwf	??_printf^(0+128)
 11231  0B49  085B               	movf	??_printf^(0+128),w
 11232  0B4A  00DC               	movwf	printf@ap^(0+128)
 11233  0B4B                     l3851:
 11234  0B4B  0020               	movlb	0	; select bank0
 11235  0B4C  086D               	movf	printf@fmt+1,w
 11236  0B4D  00E5               	movwf	vfprintf@fmt+1
 11237  0B4E  086C               	movf	printf@fmt,w
 11238  0B4F  00E4               	movwf	vfprintf@fmt
 11239  0B50  30DC               	movlw	(low (printf@ap| 0))& (0+255)
 11240  0B51  0021               	movlb	1	; select bank1
 11241  0B52  00DB               	movwf	??_printf^(0+128)
 11242  0B53  085B               	movf	??_printf^(0+128),w
 11243  0B54  0020               	movlb	0	; select bank0
 11244  0B55  00E6               	movwf	vfprintf@ap
 11245  0B56  3000               	movlw	0
 11246  0B57  318C  24F4  318B   	fcall	_vfprintf
 11247  0B5A                     l1620:
 11248  0B5A  0008               	return
 11249  0B5B                     __end_of_printf:
 11250                           
 11251                           	psect	text33
 11252  0CF4                     __ptext33:	
 11253 ;; *************** function _vfprintf *****************
 11254 ;; Defined at:
 11255 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;  fp              1    wreg     PTR struct _IO_FILE
 11258 ;;		 -> NULL(0), 
 11259 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
 11260 ;;		 -> STR_5(6), STR_4(6), STR_3(6), STR_2(58), 
 11261 ;;		 -> STR_1(50), 
 11262 ;;  ap              1   70[BANK0 ] PTR PTR void 
 11263 ;;		 -> printf@ap(1), 
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
 11266 ;;		 -> NULL(0), 
 11267 ;;  cfmt            2   74[BANK0 ] PTR unsigned char 
 11268 ;;		 -> STR_5(6), STR_4(6), STR_3(6), STR_2(58), 
 11269 ;;		 -> STR_1(50), 
 11270 ;; Return value:  Size  Location     Type
 11271 ;;                  2   68[BANK0 ] int 
 11272 ;; Registers used:
 11273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11274 ;; Tracked objects:
 11275 ;;		On entry : 0/0
 11276 ;;		On exit  : 0/0
 11277 ;;		Unchanged: 0/0
 11278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11279 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11280 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11281 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11282 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11283 ;;Total ram usage:        8 bytes
 11284 ;; Hardware stack levels used: 1
 11285 ;; Hardware stack levels required when called: 11
 11286 ;; This function calls:
 11287 ;;		_vfpfcnvrt
 11288 ;; This function is called by:
 11289 ;;		_printf
 11290 ;; This function uses a non-reentrant model
 11291 ;;
 11292                           
 11293  0CF4                     _vfprintf:	
 11294                           ;psect for function _vfprintf
 11295                           
 11296                           
 11297                           ;incstack = 0
 11298                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11299                           ;vfprintf@fp stored from wreg
 11300  0CF4  0020               	movlb	0	; select bank0
 11301  0CF5  00E9               	movwf	vfprintf@fp
 11302  0CF6                     l3757:
 11303                           
 11304                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 11305  0CF6  0865               	movf	vfprintf@fmt+1,w
 11306  0CF7  00EB               	movwf	vfprintf@cfmt+1
 11307  0CF8  0864               	movf	vfprintf@fmt,w
 11308  0CF9  00EA               	movwf	vfprintf@cfmt
 11309  0CFA                     l3759:
 11310                           
 11311                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 11312  0CFA  0021               	movlb	1	; select bank1
 11313  0CFB  01A0               	clrf	_nout^(0+128)
 11314  0CFC  01A1               	clrf	(_nout+1)^(0+128)
 11315                           
 11316                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11317  0CFD  2D12               	goto	l3763
 11318  0CFE                     l3761:
 11319                           
 11320                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 11321  0CFE  306A               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 11322  0CFF  00E7               	movwf	??_vfprintf
 11323  0D00  0867               	movf	??_vfprintf,w
 11324  0D01  00D4               	movwf	vfpfcnvrt@fmt
 11325  0D02  0866               	movf	vfprintf@ap,w
 11326  0D03  00E8               	movwf	??_vfprintf+1
 11327  0D04  0868               	movf	??_vfprintf+1,w
 11328  0D05  00D5               	movwf	vfpfcnvrt@ap
 11329  0D06  0869               	movf	vfprintf@fp,w
 11330  0D07  3182  22F5  318C   	fcall	_vfpfcnvrt
 11331  0D0A  0020               	movlb	0	; select bank0
 11332  0D0B  0854               	movf	?_vfpfcnvrt,w
 11333  0D0C  0021               	movlb	1	; select bank1
 11334  0D0D  07A0               	addwf	_nout^(0+128),f
 11335  0D0E  0020               	movlb	0	; select bank0
 11336  0D0F  0855               	movf	?_vfpfcnvrt+1,w
 11337  0D10  0021               	movlb	1	; select bank1
 11338  0D11  3DA1               	addwfc	(_nout+1)^(0+128),f
 11339  0D12                     l3763:
 11340                           
 11341                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11342  0D12  0020               	movlb	0	; select bank0
 11343  0D13  086A               	movf	vfprintf@cfmt,w
 11344  0D14  0084               	movwf	4
 11345  0D15  086B               	movf	vfprintf@cfmt+1,w
 11346  0D16  0085               	movwf	5
 11347  0D17  0012               	moviw fsr0++
 11348  0D18  1D03               	btfss	3,2
 11349  0D19  2D1B               	goto	u1341
 11350  0D1A  2D1C               	goto	u1340
 11351  0D1B                     u1341:
 11352  0D1B  2CFE               	goto	l3761
 11353  0D1C                     u1340:
 11354  0D1C                     l3765:
 11355                           
 11356                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 11357  0D1C  0021               	movlb	1	; select bank1
 11358  0D1D  0821               	movf	(_nout+1)^(0+128),w
 11359  0D1E  0020               	movlb	0	; select bank0
 11360  0D1F  00E5               	movwf	?_vfprintf+1
 11361  0D20  0021               	movlb	1	; select bank1
 11362  0D21  0820               	movf	_nout^(0+128),w
 11363  0D22  0020               	movlb	0	; select bank0
 11364  0D23  00E4               	movwf	?_vfprintf
 11365  0D24                     l1677:
 11366  0D24  0008               	return
 11367  0D25                     __end_of_vfprintf:
 11368                           
 11369                           	psect	text34
 11370  02F5                     __ptext34:	
 11371 ;; *************** function _vfpfcnvrt *****************
 11372 ;; Defined at:
 11373 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;  fp              1    wreg     PTR struct _IO_FILE
 11376 ;;		 -> NULL(0), 
 11377 ;;  fmt             1   52[BANK0 ] PTR PTR unsigned char 
 11378 ;;		 -> vfprintf@cfmt(2), 
 11379 ;;  ap              1   53[BANK0 ] PTR PTR void 
 11380 ;;		 -> printf@ap(1), 
 11381 ;; Auto vars:     Size  Location     Type
 11382 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
 11383 ;;		 -> NULL(0), 
 11384 ;;  llu             8   59[BANK0 ] unsigned long long 
 11385 ;;  ll              8    0        long long 
 11386 ;;  f               4    0        long long 
 11387 ;;  ct              3    0        unsigned char [3]
 11388 ;;  vp              2    0        PTR void 
 11389 ;;  i               2    0        int 
 11390 ;;  done            2    0        int 
 11391 ;;  cp              2    0        PTR unsigned char 
 11392 ;;  c               1    0        unsigned char 
 11393 ;; Return value:  Size  Location     Type
 11394 ;;                  2   52[BANK0 ] int 
 11395 ;; Registers used:
 11396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11397 ;; Tracked objects:
 11398 ;;		On entry : 0/0
 11399 ;;		On exit  : 0/0
 11400 ;;		Unchanged: 0/0
 11401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11402 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11403 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11404 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11405 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11406 ;;Total ram usage:       16 bytes
 11407 ;; Hardware stack levels used: 1
 11408 ;; Hardware stack levels required when called: 10
 11409 ;; This function calls:
 11410 ;;		_fputc
 11411 ;;		_utoa
 11412 ;; This function is called by:
 11413 ;;		_vfprintf
 11414 ;; This function uses a non-reentrant model
 11415 ;;
 11416                           
 11417  02F5                     _vfpfcnvrt:	
 11418                           ;psect for function _vfpfcnvrt
 11419                           
 11420                           
 11421                           ;incstack = 0
 11422                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11423                           ;vfpfcnvrt@fp stored from wreg
 11424  02F5  0020               	movlb	0	; select bank0
 11425  02F6  00E3               	movwf	vfpfcnvrt@fp
 11426  02F7                     l3375:
 11427                           
 11428                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 11429  02F7  0854               	movf	vfpfcnvrt@fmt,w
 11430  02F8  0086               	movwf	6
 11431  02F9  0187               	clrf	7
 11432  02FA  3F40               	moviw [0]fsr1
 11433  02FB  00D6               	movwf	??_vfpfcnvrt
 11434  02FC  3F41               	moviw [1]fsr1
 11435  02FD  00D7               	movwf	??_vfpfcnvrt+1
 11436  02FE  0856               	movf	??_vfpfcnvrt,w
 11437  02FF  0084               	movwf	4
 11438  0300  0857               	movf	??_vfpfcnvrt+1,w
 11439  0301  0085               	movwf	5
 11440  0302  0012               	moviw fsr0++
 11441  0303  3A25               	xorlw	37
 11442  0304  1D03               	btfss	3,2
 11443  0305  2B07               	goto	u1241
 11444  0306  2B08               	goto	u1240
 11445  0307                     u1241:
 11446  0307  2B94               	goto	l3409
 11447  0308                     u1240:
 11448  0308                     l3377:
 11449                           
 11450                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 11451  0308  0854               	movf	vfpfcnvrt@fmt,w
 11452  0309  0086               	movwf	6
 11453  030A  0187               	clrf	7
 11454  030B  3001               	movlw	1
 11455  030C  0781               	addwf	1,f
 11456  030D  3141               	addfsr 1,1
 11457  030E  1803               	skipnc
 11458  030F  0A81               	incf	1,f
 11459  0310                     l3379:
 11460                           
 11461                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 11462  0310  0021               	movlb	1	; select bank1
 11463  0311  01A2               	clrf	_width^(0+128)
 11464  0312  01A3               	clrf	(_width+1)^(0+128)
 11465  0313  01A6               	clrf	_flags^(0+128)
 11466  0314  01A7               	clrf	(_flags+1)^(0+128)
 11467  0315                     l3381:
 11468                           
 11469                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 11470  0315  30FF               	movlw	255
 11471  0316  00A4               	movwf	_prec^(0+128)
 11472  0317  30FF               	movlw	255
 11473  0318  00A5               	movwf	(_prec^(0+128)+1)
 11474  0319                     l3383:
 11475                           
 11476                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
 11477  0319  0020               	movlb	0	; select bank0
 11478  031A  0854               	movf	vfpfcnvrt@fmt,w
 11479  031B  0086               	movwf	6
 11480  031C  0187               	clrf	7
 11481  031D  3F40               	moviw [0]fsr1
 11482  031E  00D6               	movwf	??_vfpfcnvrt
 11483  031F  3F41               	moviw [1]fsr1
 11484  0320  00D7               	movwf	??_vfpfcnvrt+1
 11485  0321  0856               	movf	??_vfpfcnvrt,w
 11486  0322  0084               	movwf	4
 11487  0323  0857               	movf	??_vfpfcnvrt+1,w
 11488  0324  0085               	movwf	5
 11489  0325  0012               	moviw fsr0++
 11490  0326  3A75               	xorlw	117
 11491  0327  1D03               	btfss	3,2
 11492  0328  2B2A               	goto	u1251
 11493  0329  2B2B               	goto	u1250
 11494  032A                     u1251:
 11495  032A  2B5F               	goto	l3393
 11496  032B                     u1250:
 11497  032B                     l3385:
 11498                           
 11499                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
 11500  032B  0854               	movf	vfpfcnvrt@fmt,w
 11501  032C  0086               	movwf	6
 11502  032D  0187               	clrf	7
 11503  032E  3001               	movlw	1
 11504  032F  0781               	addwf	1,f
 11505  0330  3141               	addfsr 1,1
 11506  0331  1803               	skipnc
 11507  0332  0A81               	incf	1,f
 11508  0333                     l3387:
 11509                           
 11510                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 11511  0333  0855               	movf	vfpfcnvrt@ap,w
 11512  0334  0086               	movwf	6
 11513  0335  0187               	clrf	7
 11514  0336  0801               	movf	1,w
 11515  0337  0084               	movwf	4
 11516  0338  0185               	clrf	5
 11517  0339  3002               	movlw	2
 11518  033A  0781               	addwf	1,f
 11519  033B  3F00               	moviw [0]fsr0
 11520  033C  00DB               	movwf	vfpfcnvrt@llu
 11521  033D  3F01               	moviw [1]fsr0
 11522  033E  00DC               	movwf	vfpfcnvrt@llu+1
 11523  033F  01DD               	clrf	vfpfcnvrt@llu+2
 11524  0340  01DE               	clrf	vfpfcnvrt@llu+3
 11525  0341  01DF               	clrf	vfpfcnvrt@llu+4
 11526  0342  01E0               	clrf	vfpfcnvrt@llu+5
 11527  0343  01E1               	clrf	vfpfcnvrt@llu+6
 11528  0344  01E2               	clrf	vfpfcnvrt@llu+7
 11529  0345                     l3389:
 11530                           
 11531                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
 11532  0345  085B               	movf	vfpfcnvrt@llu,w
 11533  0346  00BC               	movwf	utoa@d
 11534  0347  085C               	movf	vfpfcnvrt@llu+1,w
 11535  0348  00BD               	movwf	utoa@d+1
 11536  0349  085D               	movf	vfpfcnvrt@llu+2,w
 11537  034A  00BE               	movwf	utoa@d+2
 11538  034B  085E               	movf	vfpfcnvrt@llu+3,w
 11539  034C  00BF               	movwf	utoa@d+3
 11540  034D  085F               	movf	vfpfcnvrt@llu+4,w
 11541  034E  00C0               	movwf	utoa@d+4
 11542  034F  0860               	movf	vfpfcnvrt@llu+5,w
 11543  0350  00C1               	movwf	utoa@d+5
 11544  0351  0861               	movf	vfpfcnvrt@llu+6,w
 11545  0352  00C2               	movwf	utoa@d+6
 11546  0353  0862               	movf	vfpfcnvrt@llu+7,w
 11547  0354  00C3               	movwf	utoa@d+7
 11548  0355  0863               	movf	vfpfcnvrt@fp,w
 11549  0356  3182  2206  3182   	fcall	_utoa
 11550  0359  0020               	movlb	0	; select bank0
 11551  035A  083D               	movf	?_utoa+1,w
 11552  035B  00D5               	movwf	?_vfpfcnvrt+1
 11553  035C  083C               	movf	?_utoa,w
 11554  035D  00D4               	movwf	?_vfpfcnvrt
 11555  035E  2BB7               	goto	l1670
 11556  035F                     l3393:
 11557                           
 11558                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 11559  035F  0854               	movf	vfpfcnvrt@fmt,w
 11560  0360  0086               	movwf	6
 11561  0361  0187               	clrf	7
 11562  0362  3F40               	moviw [0]fsr1
 11563  0363  00D6               	movwf	??_vfpfcnvrt
 11564  0364  3F41               	moviw [1]fsr1
 11565  0365  00D7               	movwf	??_vfpfcnvrt+1
 11566  0366  0856               	movf	??_vfpfcnvrt,w
 11567  0367  0084               	movwf	4
 11568  0368  0857               	movf	??_vfpfcnvrt+1,w
 11569  0369  0085               	movwf	5
 11570  036A  0012               	moviw fsr0++
 11571  036B  3A25               	xorlw	37
 11572  036C  1D03               	btfss	3,2
 11573  036D  2B6F               	goto	u1261
 11574  036E  2B70               	goto	u1260
 11575  036F                     u1261:
 11576  036F  2B89               	goto	l3403
 11577  0370                     u1260:
 11578  0370                     l3395:
 11579                           
 11580                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 11581  0370  0854               	movf	vfpfcnvrt@fmt,w
 11582  0371  0086               	movwf	6
 11583  0372  0187               	clrf	7
 11584  0373  3001               	movlw	1
 11585  0374  0781               	addwf	1,f
 11586  0375  3141               	addfsr 1,1
 11587  0376  1803               	skipnc
 11588  0377  0A81               	incf	1,f
 11589  0378                     l3397:
 11590                           
 11591                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 11592  0378  3025               	movlw	37
 11593  0379  00A3               	movwf	fputc@c
 11594  037A  3000               	movlw	0
 11595  037B  00A4               	movwf	fputc@c+1
 11596  037C  0863               	movf	vfpfcnvrt@fp,w
 11597  037D  00D6               	movwf	??_vfpfcnvrt
 11598  037E  0856               	movf	??_vfpfcnvrt,w
 11599  037F  00A5               	movwf	fputc@fp
 11600  0380  318E  26C5  3182   	fcall	_fputc
 11601  0383                     l3399:
 11602                           
 11603                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 11604  0383  3001               	movlw	1
 11605  0384  0020               	movlb	0	; select bank0
 11606  0385  00D4               	movwf	?_vfpfcnvrt
 11607  0386  3000               	movlw	0
 11608  0387  00D5               	movwf	?_vfpfcnvrt+1
 11609  0388  2BB7               	goto	l1670
 11610  0389                     l3403:
 11611                           
 11612                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 11613  0389  0854               	movf	vfpfcnvrt@fmt,w
 11614  038A  0086               	movwf	6
 11615  038B  0187               	clrf	7
 11616  038C  3001               	movlw	1
 11617  038D  0781               	addwf	1,f
 11618  038E  3141               	addfsr 1,1
 11619  038F  1803               	skipnc
 11620  0390  0A81               	incf	1,f
 11621  0391                     l3405:
 11622                           
 11623                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 11624  0391  01D4               	clrf	?_vfpfcnvrt
 11625  0392  01D5               	clrf	?_vfpfcnvrt+1
 11626  0393  2BB7               	goto	l1670
 11627  0394                     l3409:
 11628                           
 11629                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 11630  0394  0854               	movf	vfpfcnvrt@fmt,w
 11631  0395  0086               	movwf	6
 11632  0396  0187               	clrf	7
 11633  0397  3F40               	moviw [0]fsr1
 11634  0398  00D6               	movwf	??_vfpfcnvrt
 11635  0399  3F41               	moviw [1]fsr1
 11636  039A  00D7               	movwf	??_vfpfcnvrt+1
 11637  039B  0856               	movf	??_vfpfcnvrt,w
 11638  039C  0084               	movwf	4
 11639  039D  0857               	movf	??_vfpfcnvrt+1,w
 11640  039E  0085               	movwf	5
 11641  039F  0800               	movf	0,w	;code access
 11642  03A0  00D8               	movwf	??_vfpfcnvrt+2
 11643  03A1  01D9               	clrf	??_vfpfcnvrt+3
 11644  03A2  0858               	movf	??_vfpfcnvrt+2,w
 11645  03A3  00A3               	movwf	fputc@c
 11646  03A4  0859               	movf	??_vfpfcnvrt+3,w
 11647  03A5  00A4               	movwf	fputc@c+1
 11648  03A6  0863               	movf	vfpfcnvrt@fp,w
 11649  03A7  00DA               	movwf	??_vfpfcnvrt+4
 11650  03A8  085A               	movf	??_vfpfcnvrt+4,w
 11651  03A9  00A5               	movwf	fputc@fp
 11652  03AA  318E  26C5  3182   	fcall	_fputc
 11653  03AD                     l3411:
 11654                           
 11655                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 11656  03AD  0020               	movlb	0	; select bank0
 11657  03AE  0854               	movf	vfpfcnvrt@fmt,w
 11658  03AF  0086               	movwf	6
 11659  03B0  0187               	clrf	7
 11660  03B1  3001               	movlw	1
 11661  03B2  0781               	addwf	1,f
 11662  03B3  3141               	addfsr 1,1
 11663  03B4  1803               	skipnc
 11664  03B5  0A81               	incf	1,f
 11665  03B6  2B83               	goto	l3399
 11666  03B7                     l1670:
 11667  03B7  0008               	return
 11668  03B8                     __end_of_vfpfcnvrt:
 11669                           
 11670                           	psect	text35
 11671  0206                     __ptext35:	
 11672 ;; *************** function _utoa *****************
 11673 ;; Defined at:
 11674 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11675 ;; Parameters:    Size  Location     Type
 11676 ;;  fp              1    wreg     PTR struct _IO_FILE
 11677 ;;		 -> NULL(0), 
 11678 ;;  d               8   28[BANK0 ] unsigned long long 
 11679 ;; Auto vars:     Size  Location     Type
 11680 ;;  fp              1   39[BANK0 ] PTR struct _IO_FILE
 11681 ;;		 -> NULL(0), 
 11682 ;;  n               8   42[BANK0 ] unsigned long long 
 11683 ;;  i               2   50[BANK0 ] int 
 11684 ;;  w               2   40[BANK0 ] int 
 11685 ;;  p               2   37[BANK0 ] int 
 11686 ;; Return value:  Size  Location     Type
 11687 ;;                  2   28[BANK0 ] int 
 11688 ;; Registers used:
 11689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11690 ;; Tracked objects:
 11691 ;;		On entry : 0/0
 11692 ;;		On exit  : 0/0
 11693 ;;		Unchanged: 0/0
 11694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11695 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11696 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11697 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11698 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11699 ;;Total ram usage:       24 bytes
 11700 ;; Hardware stack levels used: 1
 11701 ;; Hardware stack levels required when called: 9
 11702 ;; This function calls:
 11703 ;;		___lodiv
 11704 ;;		___lomod
 11705 ;;		_pad
 11706 ;; This function is called by:
 11707 ;;		_vfpfcnvrt
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711  0206                     _utoa:	
 11712                           ;psect for function _utoa
 11713                           
 11714                           
 11715                           ;incstack = 0
 11716                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11717                           ;utoa@fp stored from wreg
 11718  0206  0020               	movlb	0	; select bank0
 11719  0207  00C7               	movwf	utoa@fp
 11720  0208                     l3321:
 11721                           
 11722                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
 11723  0208  0021               	movlb	1	; select bank1
 11724  0209  1BA5               	btfsc	(_prec+1)^(0+128),7
 11725  020A  2A0C               	goto	u1171
 11726  020B  2A0D               	goto	u1170
 11727  020C                     u1171:
 11728  020C  2A11               	goto	l1653
 11729  020D                     u1170:
 11730  020D                     l3323:
 11731                           
 11732                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
 11733  020D  30FD               	movlw	253
 11734  020E  05A6               	andwf	_flags^(0+128),f
 11735  020F  30FF               	movlw	255
 11736  0210  05A7               	andwf	(_flags+1)^(0+128),f
 11737  0211                     l1653:	
 11738                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 623:     }
 11739                           
 11740                           
 11741                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
 11742  0211  0825               	movf	(_prec+1)^(0+128),w
 11743  0212  3A80               	xorlw	128
 11744  0213  0020               	movlb	0	; select bank0
 11745  0214  00C4               	movwf	??_utoa
 11746  0215  3080               	movlw	128
 11747  0216  0244               	subwf	??_utoa,w
 11748  0217  1D03               	skipz
 11749  0218  2A1C               	goto	u1185
 11750  0219  3001               	movlw	1
 11751  021A  0021               	movlb	1	; select bank1
 11752  021B  0224               	subwf	_prec^(0+128),w
 11753  021C                     u1185:
 11754  021C  1803               	skipnc
 11755  021D  2A1F               	goto	u1181
 11756  021E  2A20               	goto	u1180
 11757  021F                     u1181:
 11758  021F  2A26               	goto	l3327
 11759  0220                     u1180:
 11760  0220                     l3325:
 11761  0220  3001               	movlw	1
 11762  0221  0020               	movlb	0	; select bank0
 11763  0222  00C5               	movwf	utoa@p
 11764  0223  3000               	movlw	0
 11765  0224  00C6               	movwf	utoa@p+1
 11766  0225  2A2E               	goto	l1657
 11767  0226                     l3327:
 11768  0226  0021               	movlb	1	; select bank1
 11769  0227  0825               	movf	(_prec+1)^(0+128),w
 11770  0228  0020               	movlb	0	; select bank0
 11771  0229  00C6               	movwf	utoa@p+1
 11772  022A  0021               	movlb	1	; select bank1
 11773  022B  0824               	movf	_prec^(0+128),w
 11774  022C  0020               	movlb	0	; select bank0
 11775  022D  00C5               	movwf	utoa@p
 11776  022E                     l1657:
 11777                           
 11778                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
 11779  022E  0021               	movlb	1	; select bank1
 11780  022F  0823               	movf	(_width+1)^(0+128),w
 11781  0230  0020               	movlb	0	; select bank0
 11782  0231  00C9               	movwf	utoa@w+1
 11783  0232  0021               	movlb	1	; select bank1
 11784  0233  0822               	movf	_width^(0+128),w
 11785  0234  0020               	movlb	0	; select bank0
 11786  0235  00C8               	movwf	utoa@w
 11787  0236                     l3329:
 11788                           
 11789                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 628:     n = d;
 11790  0236  083C               	movf	utoa@d,w
 11791  0237  00CA               	movwf	utoa@n
 11792  0238  083D               	movf	utoa@d+1,w
 11793  0239  00CB               	movwf	utoa@n+1
 11794  023A  083E               	movf	utoa@d+2,w
 11795  023B  00CC               	movwf	utoa@n+2
 11796  023C  083F               	movf	utoa@d+3,w
 11797  023D  00CD               	movwf	utoa@n+3
 11798  023E  0840               	movf	utoa@d+4,w
 11799  023F  00CE               	movwf	utoa@n+4
 11800  0240  0841               	movf	utoa@d+5,w
 11801  0241  00CF               	movwf	utoa@n+5
 11802  0242  0842               	movf	utoa@d+6,w
 11803  0243  00D0               	movwf	utoa@n+6
 11804  0244  0843               	movf	utoa@d+7,w
 11805  0245  00D1               	movwf	utoa@n+7
 11806                           
 11807                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
 11808  0246  301F               	movlw	31
 11809  0247  00D2               	movwf	utoa@i
 11810  0248  3000               	movlw	0
 11811  0249  00D3               	movwf	utoa@i+1
 11812  024A                     l3331:
 11813                           
 11814                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
 11815  024A  0023               	movlb	3	; select bank3
 11816  024B  01BF               	clrf	(_dbuf^(0+384)+31)
 11817                           
 11818                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11819  024C  2AAE               	goto	l3343
 11820  024D                     l3333:
 11821                           
 11822                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 632:         --i;
 11823  024D  30FF               	movlw	255
 11824  024E  0020               	movlb	0	; select bank0
 11825  024F  07D2               	addwf	utoa@i,f
 11826  0250  30FF               	movlw	255
 11827  0251  3DD3               	addwfc	utoa@i+1,f
 11828  0252                     l3335:
 11829                           
 11830                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
 11831  0252  300A               	movlw	10
 11832  0253  00A0               	movwf	___lomod@divisor
 11833  0254  01A1               	clrf	___lomod@divisor+1
 11834  0255  01A2               	clrf	___lomod@divisor+2
 11835  0256  01A3               	clrf	___lomod@divisor+3
 11836  0257  01A4               	clrf	___lomod@divisor+4
 11837  0258  01A5               	clrf	___lomod@divisor+5
 11838  0259  01A6               	clrf	___lomod@divisor+6
 11839  025A  01A7               	clrf	___lomod@divisor+7
 11840  025B  084A               	movf	utoa@n,w
 11841  025C  00A8               	movwf	___lomod@dividend
 11842  025D  084B               	movf	utoa@n+1,w
 11843  025E  00A9               	movwf	___lomod@dividend+1
 11844  025F  084C               	movf	utoa@n+2,w
 11845  0260  00AA               	movwf	___lomod@dividend+2
 11846  0261  084D               	movf	utoa@n+3,w
 11847  0262  00AB               	movwf	___lomod@dividend+3
 11848  0263  084E               	movf	utoa@n+4,w
 11849  0264  00AC               	movwf	___lomod@dividend+4
 11850  0265  084F               	movf	utoa@n+5,w
 11851  0266  00AD               	movwf	___lomod@dividend+5
 11852  0267  0850               	movf	utoa@n+6,w
 11853  0268  00AE               	movwf	___lomod@dividend+6
 11854  0269  0851               	movf	utoa@n+7,w
 11855  026A  00AF               	movwf	___lomod@dividend+7
 11856  026B  3186  26E7  3182   	fcall	___lomod
 11857  026E  0020               	movlb	0	; select bank0
 11858  026F  0820               	movf	?___lomod,w
 11859  0270  3E30               	addlw	48
 11860  0271  00C4               	movwf	??_utoa
 11861  0272  0852               	movf	utoa@i,w
 11862  0273  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11863  0274  0086               	movwf	6
 11864  0275  3001               	movlw	1	; select bank3/4
 11865  0276  0087               	movwf	7
 11866  0277  0844               	movf	??_utoa,w
 11867  0278  0081               	movwf	1
 11868  0279                     l3337:
 11869                           
 11870                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 634:         --p;
 11871  0279  30FF               	movlw	255
 11872  027A  07C5               	addwf	utoa@p,f
 11873  027B  30FF               	movlw	255
 11874  027C  3DC6               	addwfc	utoa@p+1,f
 11875  027D                     l3339:
 11876                           
 11877                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 635:         --w;
 11878  027D  30FF               	movlw	255
 11879  027E  07C8               	addwf	utoa@w,f
 11880  027F  30FF               	movlw	255
 11881  0280  3DC9               	addwfc	utoa@w+1,f
 11882  0281                     l3341:
 11883                           
 11884                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
 11885  0281  300A               	movlw	10
 11886  0282  00A0               	movwf	___lodiv@divisor
 11887  0283  01A1               	clrf	___lodiv@divisor+1
 11888  0284  01A2               	clrf	___lodiv@divisor+2
 11889  0285  01A3               	clrf	___lodiv@divisor+3
 11890  0286  01A4               	clrf	___lodiv@divisor+4
 11891  0287  01A5               	clrf	___lodiv@divisor+5
 11892  0288  01A6               	clrf	___lodiv@divisor+6
 11893  0289  01A7               	clrf	___lodiv@divisor+7
 11894  028A  084A               	movf	utoa@n,w
 11895  028B  00A8               	movwf	___lodiv@dividend
 11896  028C  084B               	movf	utoa@n+1,w
 11897  028D  00A9               	movwf	___lodiv@dividend+1
 11898  028E  084C               	movf	utoa@n+2,w
 11899  028F  00AA               	movwf	___lodiv@dividend+2
 11900  0290  084D               	movf	utoa@n+3,w
 11901  0291  00AB               	movwf	___lodiv@dividend+3
 11902  0292  084E               	movf	utoa@n+4,w
 11903  0293  00AC               	movwf	___lodiv@dividend+4
 11904  0294  084F               	movf	utoa@n+5,w
 11905  0295  00AD               	movwf	___lodiv@dividend+5
 11906  0296  0850               	movf	utoa@n+6,w
 11907  0297  00AE               	movwf	___lodiv@dividend+6
 11908  0298  0851               	movf	utoa@n+7,w
 11909  0299  00AF               	movwf	___lodiv@dividend+7
 11910  029A  3186  2663  3182   	fcall	___lodiv
 11911  029D  0020               	movlb	0	; select bank0
 11912  029E  0820               	movf	?___lodiv,w
 11913  029F  00CA               	movwf	utoa@n
 11914  02A0  0821               	movf	?___lodiv+1,w
 11915  02A1  00CB               	movwf	utoa@n+1
 11916  02A2  0822               	movf	?___lodiv+2,w
 11917  02A3  00CC               	movwf	utoa@n+2
 11918  02A4  0823               	movf	?___lodiv+3,w
 11919  02A5  00CD               	movwf	utoa@n+3
 11920  02A6  0824               	movf	?___lodiv+4,w
 11921  02A7  00CE               	movwf	utoa@n+4
 11922  02A8  0825               	movf	?___lodiv+5,w
 11923  02A9  00CF               	movwf	utoa@n+5
 11924  02AA  0826               	movf	?___lodiv+6,w
 11925  02AB  00D0               	movwf	utoa@n+6
 11926  02AC  0827               	movf	?___lodiv+7,w
 11927  02AD  00D1               	movwf	utoa@n+7
 11928  02AE                     l3343:
 11929                           
 11930                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11931  02AE  0020               	movlb	0	; select bank0
 11932  02AF  0852               	movf	utoa@i,w
 11933  02B0  0453               	iorwf	utoa@i+1,w
 11934  02B1  1903               	btfsc	3,2
 11935  02B2  2AB4               	goto	u1191
 11936  02B3  2AB5               	goto	u1190
 11937  02B4                     u1191:
 11938  02B4  2AE1               	goto	l3353
 11939  02B5                     u1190:
 11940  02B5                     l3345:
 11941  02B5  084A               	movf	utoa@n,w
 11942  02B6  044B               	iorwf	utoa@n+1,w
 11943  02B7  044C               	iorwf	utoa@n+2,w
 11944  02B8  044D               	iorwf	utoa@n+3,w
 11945  02B9  044E               	iorwf	utoa@n+4,w
 11946  02BA  044F               	iorwf	utoa@n+5,w
 11947  02BB  0450               	iorwf	utoa@n+6,w
 11948  02BC  0451               	iorwf	utoa@n+7,w
 11949  02BD  1D03               	skipz
 11950  02BE  2AC0               	goto	u1201
 11951  02BF  2AC1               	goto	u1200
 11952  02C0                     u1201:
 11953  02C0  2A4D               	goto	l3333
 11954  02C1                     u1200:
 11955  02C1                     l3347:
 11956  02C1  0846               	movf	utoa@p+1,w
 11957  02C2  3A80               	xorlw	128
 11958  02C3  00C4               	movwf	??_utoa
 11959  02C4  3080               	movlw	128
 11960  02C5  0244               	subwf	??_utoa,w
 11961  02C6  1D03               	skipz
 11962  02C7  2ACA               	goto	u1215
 11963  02C8  3001               	movlw	1
 11964  02C9  0245               	subwf	utoa@p,w
 11965  02CA                     u1215:
 11966  02CA  1803               	skipnc
 11967  02CB  2ACD               	goto	u1211
 11968  02CC  2ACE               	goto	u1210
 11969  02CD                     u1211:
 11970  02CD  2A4D               	goto	l3333
 11971  02CE                     u1210:
 11972  02CE                     l3349:
 11973  02CE  0020               	movlb	0	; select bank0
 11974  02CF  0849               	movf	utoa@w+1,w
 11975  02D0  3A80               	xorlw	128
 11976  02D1  00C4               	movwf	??_utoa
 11977  02D2  3080               	movlw	128
 11978  02D3  0244               	subwf	??_utoa,w
 11979  02D4  1D03               	skipz
 11980  02D5  2AD8               	goto	u1225
 11981  02D6  3001               	movlw	1
 11982  02D7  0248               	subwf	utoa@w,w
 11983  02D8                     u1225:
 11984  02D8  1C03               	skipc
 11985  02D9  2ADB               	goto	u1221
 11986  02DA  2ADC               	goto	u1220
 11987  02DB                     u1221:
 11988  02DB  2AE1               	goto	l3353
 11989  02DC                     u1220:
 11990  02DC                     l3351:
 11991  02DC  0021               	movlb	1	; select bank1
 11992  02DD  18A6               	btfsc	_flags^(0+128),1
 11993  02DE  2AE0               	goto	u1231
 11994  02DF  2AE1               	goto	u1230
 11995  02E0                     u1231:
 11996  02E0  2A4D               	goto	l3333
 11997  02E1                     u1230:
 11998  02E1                     l3353:
 11999                           
 12000                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
 12001  02E1  0020               	movlb	0	; select bank0
 12002  02E2  0852               	movf	utoa@i,w
 12003  02E3  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12004  02E4  00C4               	movwf	??_utoa
 12005  02E5  0844               	movf	??_utoa,w
 12006  02E6  00B3               	movwf	pad@buf
 12007  02E7  0849               	movf	utoa@w+1,w
 12008  02E8  00B5               	movwf	pad@p+1
 12009  02E9  0848               	movf	utoa@w,w
 12010  02EA  00B4               	movwf	pad@p
 12011  02EB  0847               	movf	utoa@fp,w
 12012  02EC  318F  274E  3182   	fcall	_pad
 12013  02EF  0020               	movlb	0	; select bank0
 12014  02F0  0834               	movf	?_pad+1,w
 12015  02F1  00BD               	movwf	?_utoa+1
 12016  02F2  0833               	movf	?_pad,w
 12017  02F3  00BC               	movwf	?_utoa
 12018  02F4                     l1665:
 12019  02F4  0008               	return
 12020  02F5                     __end_of_utoa:
 12021                           
 12022                           	psect	text36
 12023  0F4E                     __ptext36:	
 12024 ;; *************** function _pad *****************
 12025 ;; Defined at:
 12026 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12027 ;; Parameters:    Size  Location     Type
 12028 ;;  fp              1    wreg     PTR struct _IO_FILE
 12029 ;;		 -> NULL(0), 
 12030 ;;  buf             1   19[BANK0 ] PTR unsigned char 
 12031 ;;		 -> dbuf(32), 
 12032 ;;  p               2   20[BANK0 ] int 
 12033 ;; Auto vars:     Size  Location     Type
 12034 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 12035 ;;		 -> NULL(0), 
 12036 ;;  w               2   25[BANK0 ] int 
 12037 ;;  i               2   23[BANK0 ] int 
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  2   19[BANK0 ] int 
 12040 ;; Registers used:
 12041 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12042 ;; Tracked objects:
 12043 ;;		On entry : 0/0
 12044 ;;		On exit  : 0/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12047 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12048 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12049 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12050 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12051 ;;Total ram usage:        9 bytes
 12052 ;; Hardware stack levels used: 1
 12053 ;; Hardware stack levels required when called: 8
 12054 ;; This function calls:
 12055 ;;		_fputc
 12056 ;;		_fputs
 12057 ;;		_strlen
 12058 ;; This function is called by:
 12059 ;;		_utoa
 12060 ;; This function uses a non-reentrant model
 12061 ;;
 12062                           
 12063  0F4E                     _pad:	
 12064                           ;psect for function _pad
 12065                           
 12066                           
 12067                           ;incstack = 0
 12068                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12069                           ;pad@fp stored from wreg
 12070  0F4E  0020               	movlb	0	; select bank0
 12071  0F4F  00BB               	movwf	pad@fp
 12072  0F50                     l3301:
 12073                           
 12074                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12075  0F50  0021               	movlb	1	; select bank1
 12076  0F51  1C26               	btfss	_flags^(0+128),0
 12077  0F52  2F54               	goto	u1131
 12078  0F53  2F55               	goto	u1130
 12079  0F54                     u1131:
 12080  0F54  2F5E               	goto	l3305
 12081  0F55                     u1130:
 12082  0F55                     l3303:
 12083                           
 12084                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12085  0F55  0020               	movlb	0	; select bank0
 12086  0F56  083B               	movf	pad@fp,w
 12087  0F57  00B6               	movwf	??_pad
 12088  0F58  0836               	movf	??_pad,w
 12089  0F59  00AB               	movwf	fputs@fp
 12090  0F5A  0833               	movf	pad@buf,w
 12091  0F5B  318C  2473  318F   	fcall	_fputs
 12092  0F5E                     l3305:
 12093                           
 12094                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12095  0F5E  0020               	movlb	0	; select bank0
 12096  0F5F  1BB5               	btfsc	pad@p+1,7
 12097  0F60  2F62               	goto	u1141
 12098  0F61  2F63               	goto	u1140
 12099  0F62                     u1141:
 12100  0F62  2F68               	goto	l3309
 12101  0F63                     u1140:
 12102  0F63                     l3307:
 12103  0F63  0835               	movf	pad@p+1,w
 12104  0F64  00BA               	movwf	pad@w+1
 12105  0F65  0834               	movf	pad@p,w
 12106  0F66  00B9               	movwf	pad@w
 12107  0F67  2F6A               	goto	l1645
 12108  0F68                     l3309:
 12109  0F68  01B9               	clrf	pad@w
 12110  0F69  01BA               	clrf	pad@w+1
 12111  0F6A                     l1645:
 12112                           
 12113                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12114  0F6A  01B7               	clrf	pad@i
 12115  0F6B  01B8               	clrf	pad@i+1
 12116                           
 12117                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12118  0F6C  2F7E               	goto	l3315
 12119  0F6D                     l3311:
 12120                           
 12121                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12122  0F6D  3020               	movlw	32
 12123  0F6E  0020               	movlb	0	; select bank0
 12124  0F6F  00A3               	movwf	fputc@c
 12125  0F70  3000               	movlw	0
 12126  0F71  00A4               	movwf	fputc@c+1
 12127  0F72  083B               	movf	pad@fp,w
 12128  0F73  00B6               	movwf	??_pad
 12129  0F74  0836               	movf	??_pad,w
 12130  0F75  00A5               	movwf	fputc@fp
 12131  0F76  318E  26C5  318F   	fcall	_fputc
 12132  0F79                     l3313:
 12133                           
 12134                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12135  0F79  3001               	movlw	1
 12136  0F7A  0020               	movlb	0	; select bank0
 12137  0F7B  07B7               	addwf	pad@i,f
 12138  0F7C  3000               	movlw	0
 12139  0F7D  3DB8               	addwfc	pad@i+1,f
 12140  0F7E                     l3315:
 12141                           
 12142                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12143  0F7E  0838               	movf	pad@i+1,w
 12144  0F7F  3A80               	xorlw	128
 12145  0F80  00B6               	movwf	??_pad
 12146  0F81  083A               	movf	pad@w+1,w
 12147  0F82  3A80               	xorlw	128
 12148  0F83  0236               	subwf	??_pad,w
 12149  0F84  1D03               	skipz
 12150  0F85  2F88               	goto	u1155
 12151  0F86  0839               	movf	pad@w,w
 12152  0F87  0237               	subwf	pad@i,w
 12153  0F88                     u1155:
 12154  0F88  1C03               	skipc
 12155  0F89  2F8B               	goto	u1151
 12156  0F8A  2F8C               	goto	u1150
 12157  0F8B                     u1151:
 12158  0F8B  2F6D               	goto	l3311
 12159  0F8C                     u1150:
 12160  0F8C                     l1648:
 12161                           
 12162                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12163  0F8C  0021               	movlb	1	; select bank1
 12164  0F8D  1826               	btfsc	_flags^(0+128),0
 12165  0F8E  2F90               	goto	u1161
 12166  0F8F  2F91               	goto	u1160
 12167  0F90                     u1161:
 12168  0F90  2F9A               	goto	l1649
 12169  0F91                     u1160:
 12170  0F91                     l3317:
 12171                           
 12172                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12173  0F91  0020               	movlb	0	; select bank0
 12174  0F92  083B               	movf	pad@fp,w
 12175  0F93  00B6               	movwf	??_pad
 12176  0F94  0836               	movf	??_pad,w
 12177  0F95  00AB               	movwf	fputs@fp
 12178  0F96  0833               	movf	pad@buf,w
 12179  0F97  318C  2473  318F   	fcall	_fputs
 12180  0F9A                     l1649:	
 12181                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 92:     }
 12182                           
 12183                           
 12184                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12185  0F9A  0020               	movlb	0	; select bank0
 12186  0F9B  0833               	movf	pad@buf,w
 12187  0F9C  318C  2416  318F   	fcall	_strlen
 12188  0F9F  0020               	movlb	0	; select bank0
 12189  0FA0  0839               	movf	pad@w,w
 12190  0FA1  0720               	addwf	?_strlen,w
 12191  0FA2  00B3               	movwf	?_pad
 12192  0FA3  083A               	movf	pad@w+1,w
 12193  0FA4  3D21               	addwfc	?_strlen+1,w
 12194  0FA5  00B4               	movwf	?_pad+1
 12195  0FA6                     l1650:
 12196  0FA6  0008               	return
 12197  0FA7                     __end_of_pad:
 12198                           
 12199                           	psect	text37
 12200  0C16                     __ptext37:	
 12201 ;; *************** function _strlen *****************
 12202 ;; Defined at:
 12203 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
 12204 ;; Parameters:    Size  Location     Type
 12205 ;;  s               1    wreg     PTR const unsigned char 
 12206 ;;		 -> dbuf(32), 
 12207 ;; Auto vars:     Size  Location     Type
 12208 ;;  s               1    4[BANK0 ] PTR const unsigned char 
 12209 ;;		 -> dbuf(32), 
 12210 ;;  a               1    3[BANK0 ] PTR const unsigned char 
 12211 ;;		 -> dbuf(32), 
 12212 ;; Return value:  Size  Location     Type
 12213 ;;                  2    0[BANK0 ] unsigned int 
 12214 ;; Registers used:
 12215 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12216 ;; Tracked objects:
 12217 ;;		On entry : 0/0
 12218 ;;		On exit  : 0/0
 12219 ;;		Unchanged: 0/0
 12220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12221 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12223 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12224 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12225 ;;Total ram usage:        5 bytes
 12226 ;; Hardware stack levels used: 1
 12227 ;; Hardware stack levels required when called: 4
 12228 ;; This function calls:
 12229 ;;		Nothing
 12230 ;; This function is called by:
 12231 ;;		_pad
 12232 ;; This function uses a non-reentrant model
 12233 ;;
 12234                           
 12235  0C16                     _strlen:	
 12236                           ;psect for function _strlen
 12237                           
 12238                           
 12239                           ;incstack = 0
 12240                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 12241                           ;strlen@s stored from wreg
 12242  0C16  0020               	movlb	0	; select bank0
 12243  0C17  00A4               	movwf	strlen@s
 12244  0C18                     l3253:
 12245  0C18  0824               	movf	strlen@s,w
 12246  0C19  00A2               	movwf	??_strlen
 12247  0C1A  0822               	movf	??_strlen,w
 12248  0C1B  00A3               	movwf	strlen@a
 12249  0C1C  2C21               	goto	l3257
 12250  0C1D                     l3255:
 12251  0C1D  3001               	movlw	1
 12252  0C1E  00A2               	movwf	??_strlen
 12253  0C1F  0822               	movf	??_strlen,w
 12254  0C20  07A4               	addwf	strlen@s,f
 12255  0C21                     l3257:
 12256  0C21  0824               	movf	strlen@s,w
 12257  0C22  0086               	movwf	6
 12258  0C23  3001               	movlw	1	; select bank2/3
 12259  0C24  0087               	movwf	7
 12260  0C25  0801               	movf	1,w
 12261  0C26  1D03               	btfss	3,2
 12262  0C27  2C29               	goto	u1031
 12263  0C28  2C2A               	goto	u1030
 12264  0C29                     u1031:
 12265  0C29  2C1D               	goto	l3255
 12266  0C2A                     u1030:
 12267  0C2A                     l3259:
 12268  0C2A  0823               	movf	strlen@a,w
 12269  0C2B  0224               	subwf	strlen@s,w
 12270  0C2C  00A0               	movwf	?_strlen
 12271  0C2D  01A1               	clrf	?_strlen+1
 12272  0C2E  1BA0               	btfsc	?_strlen,7
 12273  0C2F  03A1               	decf	?_strlen+1,f
 12274  0C30                     l1703:
 12275  0C30  0008               	return
 12276  0C31                     __end_of_strlen:
 12277                           
 12278                           	psect	text38
 12279  0C73                     __ptext38:	
 12280 ;; *************** function _fputs *****************
 12281 ;; Defined at:
 12282 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
 12283 ;; Parameters:    Size  Location     Type
 12284 ;;  s               1    wreg     PTR const unsigned char 
 12285 ;;		 -> dbuf(32), 
 12286 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
 12287 ;;		 -> NULL(0), 
 12288 ;; Auto vars:     Size  Location     Type
 12289 ;;  s               1   18[BANK0 ] PTR const unsigned char 
 12290 ;;		 -> dbuf(32), 
 12291 ;;  i               2   16[BANK0 ] int 
 12292 ;;  c               1   15[BANK0 ] unsigned char 
 12293 ;; Return value:  Size  Location     Type
 12294 ;;                  2   11[BANK0 ] int 
 12295 ;; Registers used:
 12296 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12297 ;; Tracked objects:
 12298 ;;		On entry : 0/0
 12299 ;;		On exit  : 0/0
 12300 ;;		Unchanged: 0/0
 12301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12302 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12303 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12304 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12305 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12306 ;;Total ram usage:        8 bytes
 12307 ;; Hardware stack levels used: 1
 12308 ;; Hardware stack levels required when called: 7
 12309 ;; This function calls:
 12310 ;;		_fputc
 12311 ;; This function is called by:
 12312 ;;		_pad
 12313 ;; This function uses a non-reentrant model
 12314 ;;
 12315                           
 12316  0C73                     _fputs:	
 12317                           ;psect for function _fputs
 12318                           
 12319                           
 12320                           ;incstack = 0
 12321                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12322                           ;fputs@s stored from wreg
 12323  0C73  0020               	movlb	0	; select bank0
 12324  0C74  00B2               	movwf	fputs@s
 12325  0C75                     l3245:
 12326  0C75  01B0               	clrf	fputs@i
 12327  0C76  01B1               	clrf	fputs@i+1
 12328  0C77  2C8B               	goto	l3251
 12329  0C78                     l3247:
 12330  0C78  082F               	movf	fputs@c,w
 12331  0C79  00AC               	movwf	??_fputs
 12332  0C7A  01AD               	clrf	??_fputs+1
 12333  0C7B  082C               	movf	??_fputs,w
 12334  0C7C  00A3               	movwf	fputc@c
 12335  0C7D  082D               	movf	??_fputs+1,w
 12336  0C7E  00A4               	movwf	fputc@c+1
 12337  0C7F  082B               	movf	fputs@fp,w
 12338  0C80  00AE               	movwf	??_fputs+2
 12339  0C81  082E               	movf	??_fputs+2,w
 12340  0C82  00A5               	movwf	fputc@fp
 12341  0C83  318E  26C5  318C   	fcall	_fputc
 12342  0C86                     l3249:
 12343  0C86  3001               	movlw	1
 12344  0C87  0020               	movlb	0	; select bank0
 12345  0C88  07B0               	addwf	fputs@i,f
 12346  0C89  3000               	movlw	0
 12347  0C8A  3DB1               	addwfc	fputs@i+1,f
 12348  0C8B                     l3251:
 12349  0C8B  0830               	movf	fputs@i,w
 12350  0C8C  0732               	addwf	fputs@s,w
 12351  0C8D  00AC               	movwf	??_fputs
 12352  0C8E  082C               	movf	??_fputs,w
 12353  0C8F  0086               	movwf	6
 12354  0C90  3001               	movlw	1	; select bank2/3
 12355  0C91  0087               	movwf	7
 12356  0C92  0801               	movf	1,w
 12357  0C93  00AD               	movwf	??_fputs+1
 12358  0C94  082D               	movf	??_fputs+1,w
 12359  0C95  00AF               	movwf	fputs@c
 12360  0C96  082F               	movf	fputs@c,w
 12361  0C97  1D03               	btfss	3,2
 12362  0C98  2C9A               	goto	u1021
 12363  0C99  2C9B               	goto	u1020
 12364  0C9A                     u1021:
 12365  0C9A  2C78               	goto	l3247
 12366  0C9B                     u1020:
 12367  0C9B                     l1697:
 12368  0C9B  0008               	return
 12369  0C9C                     __end_of_fputs:
 12370                           
 12371                           	psect	text39
 12372  0EC5                     __ptext39:	
 12373 ;; *************** function _fputc *****************
 12374 ;; Defined at:
 12375 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
 12376 ;; Parameters:    Size  Location     Type
 12377 ;;  c               2    3[BANK0 ] int 
 12378 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
 12379 ;;		 -> NULL(0), 
 12380 ;; Auto vars:     Size  Location     Type
 12381 ;;		None
 12382 ;; Return value:  Size  Location     Type
 12383 ;;                  2    3[BANK0 ] int 
 12384 ;; Registers used:
 12385 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12386 ;; Tracked objects:
 12387 ;;		On entry : 0/0
 12388 ;;		On exit  : 0/0
 12389 ;;		Unchanged: 0/0
 12390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12391 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12393 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12394 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12395 ;;Total ram usage:        8 bytes
 12396 ;; Hardware stack levels used: 1
 12397 ;; Hardware stack levels required when called: 6
 12398 ;; This function calls:
 12399 ;;		_putch
 12400 ;; This function is called by:
 12401 ;;		_pad
 12402 ;;		_vfpfcnvrt
 12403 ;;		_fputs
 12404 ;; This function uses a non-reentrant model
 12405 ;;
 12406                           
 12407  0EC5                     _fputc:	
 12408                           ;psect for function _fputc
 12409                           
 12410  0EC5                     l3231:	
 12411                           ;incstack = 0
 12412                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12413                           
 12414  0EC5  0020               	movlb	0	; select bank0
 12415  0EC6  0825               	movf	fputc@fp,w
 12416  0EC7  1903               	btfsc	3,2
 12417  0EC8  2ECA               	goto	u981
 12418  0EC9  2ECB               	goto	u980
 12419  0ECA                     u981:
 12420  0ECA  2ED0               	goto	l3235
 12421  0ECB                     u980:
 12422  0ECB                     l3233:
 12423  0ECB  0825               	movf	fputc@fp,w
 12424  0ECC  1D03               	btfss	3,2
 12425  0ECD  2ECF               	goto	u991
 12426  0ECE  2ED0               	goto	u990
 12427  0ECF                     u991:
 12428  0ECF  2ED5               	goto	l3237
 12429  0ED0                     u990:
 12430  0ED0                     l3235:
 12431  0ED0  0823               	movf	fputc@c,w
 12432  0ED1  318A  220E  318E   	fcall	_putch
 12433  0ED4  2F07               	goto	l1689
 12434  0ED5                     l3237:
 12435  0ED5  0825               	movf	fputc@fp,w
 12436  0ED6  3E08               	addlw	8
 12437  0ED7  0086               	movwf	6
 12438  0ED8  0187               	clrf	7
 12439  0ED9  0016               	moviw fsr1++
 12440  0EDA  0401               	iorwf	1,w
 12441  0EDB  1903               	btfsc	3,2
 12442  0EDC  2EDE               	goto	u1001
 12443  0EDD  2EDF               	goto	u1000
 12444  0EDE                     u1001:
 12445  0EDE  2EFD               	goto	l3241
 12446  0EDF                     u1000:
 12447  0EDF                     l3239:
 12448  0EDF  0825               	movf	fputc@fp,w
 12449  0EE0  3E08               	addlw	8
 12450  0EE1  0086               	movwf	6
 12451  0EE2  0187               	clrf	7
 12452  0EE3  3F40               	moviw [0]fsr1
 12453  0EE4  00A6               	movwf	??_fputc
 12454  0EE5  3F41               	moviw [1]fsr1
 12455  0EE6  00A7               	movwf	??_fputc+1
 12456  0EE7  0825               	movf	fputc@fp,w
 12457  0EE8  3E02               	addlw	2
 12458  0EE9  0086               	movwf	6
 12459  0EEA  0187               	clrf	7
 12460  0EEB  3F40               	moviw [0]fsr1
 12461  0EEC  00A8               	movwf	??_fputc+2
 12462  0EED  3F41               	moviw [1]fsr1
 12463  0EEE  00A9               	movwf	??_fputc+3
 12464  0EEF  0829               	movf	??_fputc+3,w
 12465  0EF0  3A80               	xorlw	128
 12466  0EF1  00AA               	movwf	??_fputc+4
 12467  0EF2  0827               	movf	??_fputc+1,w
 12468  0EF3  3A80               	xorlw	128
 12469  0EF4  022A               	subwf	??_fputc+4,w
 12470  0EF5  1D03               	skipz
 12471  0EF6  2EF9               	goto	u1015
 12472  0EF7  0826               	movf	??_fputc,w
 12473  0EF8  0228               	subwf	??_fputc+2,w
 12474  0EF9                     u1015:
 12475  0EF9  1803               	skipnc
 12476  0EFA  2EFC               	goto	u1011
 12477  0EFB  2EFD               	goto	u1010
 12478  0EFC                     u1011:
 12479  0EFC  2F07               	goto	l1689
 12480  0EFD                     u1010:
 12481  0EFD                     l3241:
 12482  0EFD  0020               	movlb	0	; select bank0
 12483  0EFE  0825               	movf	fputc@fp,w
 12484  0EFF  3E02               	addlw	2
 12485  0F00  0086               	movwf	6
 12486  0F01  0187               	clrf	7
 12487  0F02  3001               	movlw	1
 12488  0F03  0781               	addwf	1,f
 12489  0F04  3141               	addfsr 1,1
 12490  0F05  1803               	skipnc
 12491  0F06  0A81               	incf	1,f
 12492  0F07                     l1689:
 12493  0F07  0008               	return
 12494  0F08                     __end_of_fputc:
 12495                           
 12496                           	psect	text40
 12497  0A0E                     __ptext40:	
 12498 ;; *************** function _putch *****************
 12499 ;; Defined at:
 12500 ;;		line 174 in file "eusart.c"
 12501 ;; Parameters:    Size  Location     Type
 12502 ;;  txData          1    wreg     unsigned char 
 12503 ;; Auto vars:     Size  Location     Type
 12504 ;;  txData          1    2[BANK0 ] unsigned char 
 12505 ;; Return value:  Size  Location     Type
 12506 ;;                  1    wreg      void 
 12507 ;; Registers used:
 12508 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12509 ;; Tracked objects:
 12510 ;;		On entry : 0/0
 12511 ;;		On exit  : 0/0
 12512 ;;		Unchanged: 0/0
 12513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12515 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12517 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12518 ;;Total ram usage:        1 bytes
 12519 ;; Hardware stack levels used: 1
 12520 ;; Hardware stack levels required when called: 5
 12521 ;; This function calls:
 12522 ;;		_EUSART_Write
 12523 ;; This function is called by:
 12524 ;;		_fputc
 12525 ;; This function uses a non-reentrant model
 12526 ;;
 12527                           
 12528  0A0E                     _putch:	
 12529                           ;psect for function _putch
 12530                           
 12531                           
 12532                           ;incstack = 0
 12533                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12534                           ;putch@txData stored from wreg
 12535  0A0E  0020               	movlb	0	; select bank0
 12536  0A0F  00A2               	movwf	putch@txData
 12537  0A10                     l3229:
 12538                           
 12539                           ;eusart.c: 174: void putch(char txData);eusart.c: 175: {;eusart.c: 176:     EUSART_Write
      +                          (txData);
 12540  0A10  0822               	movf	putch@txData,w
 12541  0A11  318C  24C7  318A   	fcall	_EUSART_Write
 12542  0A14                     l633:
 12543  0A14  0008               	return
 12544  0A15                     __end_of_putch:
 12545                           
 12546                           	psect	text41
 12547  0CC7                     __ptext41:	
 12548 ;; *************** function _EUSART_Write *****************
 12549 ;; Defined at:
 12550 ;;		line 142 in file "eusart.c"
 12551 ;; Parameters:    Size  Location     Type
 12552 ;;  txData          1    wreg     unsigned char 
 12553 ;; Auto vars:     Size  Location     Type
 12554 ;;  txData          1    1[BANK0 ] unsigned char 
 12555 ;; Return value:  Size  Location     Type
 12556 ;;                  1    wreg      void 
 12557 ;; Registers used:
 12558 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12559 ;; Tracked objects:
 12560 ;;		On entry : 0/0
 12561 ;;		On exit  : 0/0
 12562 ;;		Unchanged: 0/0
 12563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12565 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12566 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12567 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12568 ;;Total ram usage:        2 bytes
 12569 ;; Hardware stack levels used: 1
 12570 ;; Hardware stack levels required when called: 4
 12571 ;; This function calls:
 12572 ;;		Nothing
 12573 ;; This function is called by:
 12574 ;;		_putch
 12575 ;; This function uses a non-reentrant model
 12576 ;;
 12577                           
 12578  0CC7                     _EUSART_Write:	
 12579                           ;psect for function _EUSART_Write
 12580                           
 12581                           
 12582                           ;incstack = 0
 12583                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 12584                           ;EUSART_Write@txData stored from wreg
 12585  0CC7  0020               	movlb	0	; select bank0
 12586  0CC8  00A1               	movwf	EUSART_Write@txData
 12587  0CC9                     l3211:
 12588  0CC9                     l3213:	
 12589                           ;eusart.c: 142: void EUSART_Write(uint8_t txData);eusart.c: 143: {;eusart.c: 144:     wh
      +                          ile(0 == eusartTxBufferRemaining)
 12590                           
 12591                           
 12592                           ;eusart.c: 144:     while(0 == eusartTxBufferRemaining)
 12593  0CC9  0021               	movlb	1	; select bank1
 12594  0CCA  0852               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 12595  0CCB  1903               	btfsc	3,2
 12596  0CCC  2CCE               	goto	u951
 12597  0CCD  2CCF               	goto	u950
 12598  0CCE                     u951:
 12599  0CCE  2CC9               	goto	l3213
 12600  0CCF                     u950:
 12601  0CCF                     l623:
 12602                           
 12603                           ;eusart.c: 148:     if(0 == PIE1bits.TXIE)
 12604  0CCF  1A11               	btfsc	17,4	;volatile
 12605  0CD0  2CD2               	goto	u961
 12606  0CD1  2CD3               	goto	u960
 12607  0CD2                     u961:
 12608  0CD2  2CD8               	goto	l624
 12609  0CD3                     u960:
 12610  0CD3                     l3215:
 12611                           
 12612                           ;eusart.c: 149:     {;eusart.c: 150:         TX1REG = txData;
 12613  0CD3  0020               	movlb	0	; select bank0
 12614  0CD4  0821               	movf	EUSART_Write@txData,w
 12615  0CD5  0023               	movlb	3	; select bank3
 12616  0CD6  009A               	movwf	26	;volatile
 12617                           
 12618                           ;eusart.c: 151:     }
 12619  0CD7  2CF1               	goto	l3227
 12620  0CD8                     l624:	
 12621                           ;eusart.c: 152:     else
 12622                           
 12623                           
 12624                           ;eusart.c: 153:     {;eusart.c: 154:         PIE1bits.TXIE = 0;
 12625  0CD8  1211               	bcf	17,4	;volatile
 12626  0CD9                     l3217:
 12627                           
 12628                           ;eusart.c: 155:         eusartTxBuffer[eusartTxHead++] = txData;
 12629  0CD9  0020               	movlb	0	; select bank0
 12630  0CDA  0821               	movf	EUSART_Write@txData,w
 12631  0CDB  00A0               	movwf	??_EUSART_Write
 12632  0CDC  087C               	movf	_eusartTxHead,w
 12633  0CDD  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 12634  0CDE  0086               	movwf	6
 12635  0CDF  3001               	movlw	1	; select bank2/3
 12636  0CE0  0087               	movwf	7
 12637  0CE1  0820               	movf	??_EUSART_Write,w
 12638  0CE2  0081               	movwf	1
 12639  0CE3                     l3219:
 12640  0CE3  3001               	movlw	1
 12641  0CE4  00A0               	movwf	??_EUSART_Write
 12642  0CE5  0820               	movf	??_EUSART_Write,w
 12643  0CE6  07FC               	addwf	_eusartTxHead,f	;volatile
 12644  0CE7                     l3221:
 12645                           
 12646                           ;eusart.c: 156:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 12647  0CE7  3008               	movlw	8
 12648  0CE8  027C               	subwf	_eusartTxHead,w	;volatile
 12649  0CE9  1C03               	skipc
 12650  0CEA  2CEC               	goto	u971
 12651  0CEB  2CED               	goto	u970
 12652  0CEC                     u971:
 12653  0CEC  2CEE               	goto	l3225
 12654  0CED                     u970:
 12655  0CED                     l3223:
 12656                           
 12657                           ;eusart.c: 157:         {;eusart.c: 158:             eusartTxHead = 0;
 12658  0CED  01FC               	clrf	_eusartTxHead	;volatile
 12659  0CEE                     l3225:
 12660                           
 12661                           ;eusart.c: 160:         eusartTxBufferRemaining--;
 12662  0CEE  3001               	movlw	1
 12663  0CEF  0021               	movlb	1	; select bank1
 12664  0CF0  02D2               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 12665  0CF1                     l3227:
 12666                           
 12667                           ;eusart.c: 162:     PIE1bits.TXIE = 1;
 12668  0CF1  0021               	movlb	1	; select bank1
 12669  0CF2  1611               	bsf	17,4	;volatile
 12670  0CF3                     l627:
 12671  0CF3  0008               	return
 12672  0CF4                     __end_of_EUSART_Write:
 12673                           
 12674                           	psect	text42
 12675  06E7                     __ptext42:	
 12676 ;; *************** function ___lomod *****************
 12677 ;; Defined at:
 12678 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lomod.c"
 12679 ;; Parameters:    Size  Location     Type
 12680 ;;  divisor         8    0[BANK0 ] unsigned long long 
 12681 ;;  dividend        8    8[BANK0 ] unsigned long long 
 12682 ;; Auto vars:     Size  Location     Type
 12683 ;;  counter         1   17[BANK0 ] unsigned char 
 12684 ;; Return value:  Size  Location     Type
 12685 ;;                  8    0[BANK0 ] unsigned long long 
 12686 ;; Registers used:
 12687 ;;		wreg, status,2, status,0
 12688 ;; Tracked objects:
 12689 ;;		On entry : 0/0
 12690 ;;		On exit  : 0/0
 12691 ;;		Unchanged: 0/0
 12692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12693 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12694 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12695 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12696 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12697 ;;Total ram usage:       18 bytes
 12698 ;; Hardware stack levels used: 1
 12699 ;; Hardware stack levels required when called: 4
 12700 ;; This function calls:
 12701 ;;		Nothing
 12702 ;; This function is called by:
 12703 ;;		_utoa
 12704 ;; This function uses a non-reentrant model
 12705 ;;
 12706                           
 12707  06E7                     ___lomod:	
 12708                           ;psect for function ___lomod
 12709                           
 12710  06E7                     l3285:	
 12711                           ;incstack = 0
 12712                           ; Regs used in ___lomod: [wreg+status,2+status,0]
 12713                           
 12714  06E7  0020               	movlb	0	; select bank0
 12715  06E8  0820               	movf	___lomod@divisor,w
 12716  06E9  0421               	iorwf	___lomod@divisor+1,w
 12717  06EA  0422               	iorwf	___lomod@divisor+2,w
 12718  06EB  0423               	iorwf	___lomod@divisor+3,w
 12719  06EC  0424               	iorwf	___lomod@divisor+4,w
 12720  06ED  0425               	iorwf	___lomod@divisor+5,w
 12721  06EE  0426               	iorwf	___lomod@divisor+6,w
 12722  06EF  0427               	iorwf	___lomod@divisor+7,w
 12723  06F0  1903               	skipnz
 12724  06F1  2EF3               	goto	u1091
 12725  06F2  2EF4               	goto	u1090
 12726  06F3                     u1091:
 12727  06F3  2F47               	goto	l1400
 12728  06F4                     u1090:
 12729  06F4                     l3287:
 12730  06F4  01B1               	clrf	___lomod@counter
 12731  06F5  0AB1               	incf	___lomod@counter,f
 12732  06F6  2F03               	goto	l3293
 12733  06F7                     l3289:
 12734  06F7  35A0               	lslf	___lomod@divisor,f
 12735  06F8  0DA1               	rlf	___lomod@divisor+1,f
 12736  06F9  0DA2               	rlf	___lomod@divisor+2,f
 12737  06FA  0DA3               	rlf	___lomod@divisor+3,f
 12738  06FB  0DA4               	rlf	___lomod@divisor+4,f
 12739  06FC  0DA5               	rlf	___lomod@divisor+5,f
 12740  06FD  0DA6               	rlf	___lomod@divisor+6,f
 12741  06FE  0DA7               	rlf	___lomod@divisor+7,f
 12742  06FF                     l3291:
 12743  06FF  3001               	movlw	1
 12744  0700  00B0               	movwf	??___lomod
 12745  0701  0830               	movf	??___lomod,w
 12746  0702  07B1               	addwf	___lomod@counter,f
 12747  0703                     l3293:
 12748  0703  1FA7               	btfss	___lomod@divisor+7,7
 12749  0704  2F06               	goto	u1101
 12750  0705  2F07               	goto	u1100
 12751  0706                     u1101:
 12752  0706  2EF7               	goto	l3289
 12753  0707                     u1100:
 12754  0707                     l3295:
 12755  0707  0827               	movf	___lomod@divisor+7,w
 12756  0708  022F               	subwf	___lomod@dividend+7,w
 12757  0709  1D03               	skipz
 12758  070A  2F25               	goto	u1115
 12759  070B  0826               	movf	___lomod@divisor+6,w
 12760  070C  022E               	subwf	___lomod@dividend+6,w
 12761  070D  1D03               	skipz
 12762  070E  2F25               	goto	u1115
 12763  070F  0825               	movf	___lomod@divisor+5,w
 12764  0710  022D               	subwf	___lomod@dividend+5,w
 12765  0711  1D03               	skipz
 12766  0712  2F25               	goto	u1115
 12767  0713  0824               	movf	___lomod@divisor+4,w
 12768  0714  022C               	subwf	___lomod@dividend+4,w
 12769  0715  1D03               	skipz
 12770  0716  2F25               	goto	u1115
 12771  0717  0823               	movf	___lomod@divisor+3,w
 12772  0718  022B               	subwf	___lomod@dividend+3,w
 12773  0719  1D03               	skipz
 12774  071A  2F25               	goto	u1115
 12775  071B  0822               	movf	___lomod@divisor+2,w
 12776  071C  022A               	subwf	___lomod@dividend+2,w
 12777  071D  1D03               	skipz
 12778  071E  2F25               	goto	u1115
 12779  071F  0821               	movf	___lomod@divisor+1,w
 12780  0720  0229               	subwf	___lomod@dividend+1,w
 12781  0721  1D03               	skipz
 12782  0722  2F25               	goto	u1115
 12783  0723  0820               	movf	___lomod@divisor,w
 12784  0724  0228               	subwf	___lomod@dividend,w
 12785  0725                     u1115:
 12786  0725  1C03               	skipc
 12787  0726  2F28               	goto	u1111
 12788  0727  2F29               	goto	u1110
 12789  0728                     u1111:
 12790  0728  2F39               	goto	l3299
 12791  0729                     u1110:
 12792  0729                     l3297:
 12793  0729  0820               	movf	___lomod@divisor,w
 12794  072A  02A8               	subwf	___lomod@dividend,f
 12795  072B  0821               	movf	___lomod@divisor+1,w
 12796  072C  3BA9               	subwfb	___lomod@dividend+1,f
 12797  072D  0822               	movf	___lomod@divisor+2,w
 12798  072E  3BAA               	subwfb	___lomod@dividend+2,f
 12799  072F  0823               	movf	___lomod@divisor+3,w
 12800  0730  3BAB               	subwfb	___lomod@dividend+3,f
 12801  0731  0824               	movf	___lomod@divisor+4,w
 12802  0732  3BAC               	subwfb	___lomod@dividend+4,f
 12803  0733  0825               	movf	___lomod@divisor+5,w
 12804  0734  3BAD               	subwfb	___lomod@dividend+5,f
 12805  0735  0826               	movf	___lomod@divisor+6,w
 12806  0736  3BAE               	subwfb	___lomod@dividend+6,f
 12807  0737  0827               	movf	___lomod@divisor+7,w
 12808  0738  3BAF               	subwfb	___lomod@dividend+7,f
 12809  0739                     l3299:
 12810  0739  36A7               	lsrf	___lomod@divisor+7,f
 12811  073A  0CA6               	rrf	___lomod@divisor+6,f
 12812  073B  0CA5               	rrf	___lomod@divisor+5,f
 12813  073C  0CA4               	rrf	___lomod@divisor+4,f
 12814  073D  0CA3               	rrf	___lomod@divisor+3,f
 12815  073E  0CA2               	rrf	___lomod@divisor+2,f
 12816  073F  0CA1               	rrf	___lomod@divisor+1,f
 12817  0740  0CA0               	rrf	___lomod@divisor,f
 12818  0741  3001               	movlw	1
 12819  0742  02B1               	subwf	___lomod@counter,f
 12820  0743  1D03               	btfss	3,2
 12821  0744  2F46               	goto	u1121
 12822  0745  2F47               	goto	u1120
 12823  0746                     u1121:
 12824  0746  2F07               	goto	l3295
 12825  0747                     u1120:
 12826  0747                     l1400:
 12827  0747  0828               	movf	___lomod@dividend,w
 12828  0748  00A0               	movwf	?___lomod
 12829  0749  0829               	movf	___lomod@dividend+1,w
 12830  074A  00A1               	movwf	?___lomod+1
 12831  074B  082A               	movf	___lomod@dividend+2,w
 12832  074C  00A2               	movwf	?___lomod+2
 12833  074D  082B               	movf	___lomod@dividend+3,w
 12834  074E  00A3               	movwf	?___lomod+3
 12835  074F  082C               	movf	___lomod@dividend+4,w
 12836  0750  00A4               	movwf	?___lomod+4
 12837  0751  082D               	movf	___lomod@dividend+5,w
 12838  0752  00A5               	movwf	?___lomod+5
 12839  0753  082E               	movf	___lomod@dividend+6,w
 12840  0754  00A6               	movwf	?___lomod+6
 12841  0755  082F               	movf	___lomod@dividend+7,w
 12842  0756  00A7               	movwf	?___lomod+7
 12843  0757                     l1407:
 12844  0757  0008               	return
 12845  0758                     __end_of___lomod:
 12846                           
 12847                           	psect	text43
 12848  0663                     __ptext43:	
 12849 ;; *************** function ___lodiv *****************
 12850 ;; Defined at:
 12851 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lodiv.c"
 12852 ;; Parameters:    Size  Location     Type
 12853 ;;  divisor         8    0[BANK0 ] unsigned long long 
 12854 ;;  dividend        8    8[BANK0 ] unsigned long long 
 12855 ;; Auto vars:     Size  Location     Type
 12856 ;;  quotient        8   17[BANK0 ] unsigned long long 
 12857 ;;  counter         1   25[BANK0 ] unsigned char 
 12858 ;; Return value:  Size  Location     Type
 12859 ;;                  8    0[BANK0 ] unsigned long long 
 12860 ;; Registers used:
 12861 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12862 ;; Tracked objects:
 12863 ;;		On entry : 0/0
 12864 ;;		On exit  : 0/0
 12865 ;;		Unchanged: 0/0
 12866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12867 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12868 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12869 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12870 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12871 ;;Total ram usage:       26 bytes
 12872 ;; Hardware stack levels used: 1
 12873 ;; Hardware stack levels required when called: 4
 12874 ;; This function calls:
 12875 ;;		Nothing
 12876 ;; This function is called by:
 12877 ;;		_utoa
 12878 ;; This function uses a non-reentrant model
 12879 ;;
 12880                           
 12881  0663                     ___lodiv:	
 12882                           ;psect for function ___lodiv
 12883                           
 12884  0663                     l3263:	
 12885                           ;incstack = 0
 12886                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 12887                           
 12888  0663  3031               	movlw	low ___lodiv@quotient
 12889  0664  0086               	movwf	6
 12890  0665  3000               	movlw	high ___lodiv@quotient
 12891  0666  0087               	movwf	7
 12892  0667  3008               	movlw	8
 12893  0668  0020               	movlb	0	; select bank0
 12894  0669  00B0               	movwf	??___lodiv
 12895  066A  3000               	movlw	0
 12896  066B                     u1040:
 12897  066B  001E               	movwi fsr1++
 12898  066C  0BB0               	decfsz	??___lodiv,f
 12899  066D  2E6B               	goto	u1040
 12900  066E                     l3265:
 12901  066E  0820               	movf	___lodiv@divisor,w
 12902  066F  0421               	iorwf	___lodiv@divisor+1,w
 12903  0670  0422               	iorwf	___lodiv@divisor+2,w
 12904  0671  0423               	iorwf	___lodiv@divisor+3,w
 12905  0672  0424               	iorwf	___lodiv@divisor+4,w
 12906  0673  0425               	iorwf	___lodiv@divisor+5,w
 12907  0674  0426               	iorwf	___lodiv@divisor+6,w
 12908  0675  0427               	iorwf	___lodiv@divisor+7,w
 12909  0676  1903               	skipnz
 12910  0677  2E79               	goto	u1051
 12911  0678  2E7A               	goto	u1050
 12912  0679                     u1051:
 12913  0679  2ED6               	goto	l1390
 12914  067A                     u1050:
 12915  067A                     l3267:
 12916  067A  01B9               	clrf	___lodiv@counter
 12917  067B  0AB9               	incf	___lodiv@counter,f
 12918  067C  2E89               	goto	l3273
 12919  067D                     l3269:
 12920  067D  35A0               	lslf	___lodiv@divisor,f
 12921  067E  0DA1               	rlf	___lodiv@divisor+1,f
 12922  067F  0DA2               	rlf	___lodiv@divisor+2,f
 12923  0680  0DA3               	rlf	___lodiv@divisor+3,f
 12924  0681  0DA4               	rlf	___lodiv@divisor+4,f
 12925  0682  0DA5               	rlf	___lodiv@divisor+5,f
 12926  0683  0DA6               	rlf	___lodiv@divisor+6,f
 12927  0684  0DA7               	rlf	___lodiv@divisor+7,f
 12928  0685                     l3271:
 12929  0685  3001               	movlw	1
 12930  0686  00B0               	movwf	??___lodiv
 12931  0687  0830               	movf	??___lodiv,w
 12932  0688  07B9               	addwf	___lodiv@counter,f
 12933  0689                     l3273:
 12934  0689  1FA7               	btfss	___lodiv@divisor+7,7
 12935  068A  2E8C               	goto	u1061
 12936  068B  2E8D               	goto	u1060
 12937  068C                     u1061:
 12938  068C  2E7D               	goto	l3269
 12939  068D                     u1060:
 12940  068D                     l3275:
 12941  068D  35B1               	lslf	___lodiv@quotient,f
 12942  068E  0DB2               	rlf	___lodiv@quotient+1,f
 12943  068F  0DB3               	rlf	___lodiv@quotient+2,f
 12944  0690  0DB4               	rlf	___lodiv@quotient+3,f
 12945  0691  0DB5               	rlf	___lodiv@quotient+4,f
 12946  0692  0DB6               	rlf	___lodiv@quotient+5,f
 12947  0693  0DB7               	rlf	___lodiv@quotient+6,f
 12948  0694  0DB8               	rlf	___lodiv@quotient+7,f
 12949  0695                     l3277:
 12950  0695  0827               	movf	___lodiv@divisor+7,w
 12951  0696  022F               	subwf	___lodiv@dividend+7,w
 12952  0697  1D03               	skipz
 12953  0698  2EB3               	goto	u1075
 12954  0699  0826               	movf	___lodiv@divisor+6,w
 12955  069A  022E               	subwf	___lodiv@dividend+6,w
 12956  069B  1D03               	skipz
 12957  069C  2EB3               	goto	u1075
 12958  069D  0825               	movf	___lodiv@divisor+5,w
 12959  069E  022D               	subwf	___lodiv@dividend+5,w
 12960  069F  1D03               	skipz
 12961  06A0  2EB3               	goto	u1075
 12962  06A1  0824               	movf	___lodiv@divisor+4,w
 12963  06A2  022C               	subwf	___lodiv@dividend+4,w
 12964  06A3  1D03               	skipz
 12965  06A4  2EB3               	goto	u1075
 12966  06A5  0823               	movf	___lodiv@divisor+3,w
 12967  06A6  022B               	subwf	___lodiv@dividend+3,w
 12968  06A7  1D03               	skipz
 12969  06A8  2EB3               	goto	u1075
 12970  06A9  0822               	movf	___lodiv@divisor+2,w
 12971  06AA  022A               	subwf	___lodiv@dividend+2,w
 12972  06AB  1D03               	skipz
 12973  06AC  2EB3               	goto	u1075
 12974  06AD  0821               	movf	___lodiv@divisor+1,w
 12975  06AE  0229               	subwf	___lodiv@dividend+1,w
 12976  06AF  1D03               	skipz
 12977  06B0  2EB3               	goto	u1075
 12978  06B1  0820               	movf	___lodiv@divisor,w
 12979  06B2  0228               	subwf	___lodiv@dividend,w
 12980  06B3                     u1075:
 12981  06B3  1C03               	skipc
 12982  06B4  2EB6               	goto	u1071
 12983  06B5  2EB7               	goto	u1070
 12984  06B6                     u1071:
 12985  06B6  2EC8               	goto	l3283
 12986  06B7                     u1070:
 12987  06B7                     l3279:
 12988  06B7  0820               	movf	___lodiv@divisor,w
 12989  06B8  02A8               	subwf	___lodiv@dividend,f
 12990  06B9  0821               	movf	___lodiv@divisor+1,w
 12991  06BA  3BA9               	subwfb	___lodiv@dividend+1,f
 12992  06BB  0822               	movf	___lodiv@divisor+2,w
 12993  06BC  3BAA               	subwfb	___lodiv@dividend+2,f
 12994  06BD  0823               	movf	___lodiv@divisor+3,w
 12995  06BE  3BAB               	subwfb	___lodiv@dividend+3,f
 12996  06BF  0824               	movf	___lodiv@divisor+4,w
 12997  06C0  3BAC               	subwfb	___lodiv@dividend+4,f
 12998  06C1  0825               	movf	___lodiv@divisor+5,w
 12999  06C2  3BAD               	subwfb	___lodiv@dividend+5,f
 13000  06C3  0826               	movf	___lodiv@divisor+6,w
 13001  06C4  3BAE               	subwfb	___lodiv@dividend+6,f
 13002  06C5  0827               	movf	___lodiv@divisor+7,w
 13003  06C6  3BAF               	subwfb	___lodiv@dividend+7,f
 13004  06C7                     l3281:
 13005  06C7  1431               	bsf	___lodiv@quotient,0
 13006  06C8                     l3283:
 13007  06C8  36A7               	lsrf	___lodiv@divisor+7,f
 13008  06C9  0CA6               	rrf	___lodiv@divisor+6,f
 13009  06CA  0CA5               	rrf	___lodiv@divisor+5,f
 13010  06CB  0CA4               	rrf	___lodiv@divisor+4,f
 13011  06CC  0CA3               	rrf	___lodiv@divisor+3,f
 13012  06CD  0CA2               	rrf	___lodiv@divisor+2,f
 13013  06CE  0CA1               	rrf	___lodiv@divisor+1,f
 13014  06CF  0CA0               	rrf	___lodiv@divisor,f
 13015  06D0  3001               	movlw	1
 13016  06D1  02B9               	subwf	___lodiv@counter,f
 13017  06D2  1D03               	btfss	3,2
 13018  06D3  2ED5               	goto	u1081
 13019  06D4  2ED6               	goto	u1080
 13020  06D5                     u1081:
 13021  06D5  2E8D               	goto	l3275
 13022  06D6                     u1080:
 13023  06D6                     l1390:
 13024  06D6  0831               	movf	___lodiv@quotient,w
 13025  06D7  00A0               	movwf	?___lodiv
 13026  06D8  0832               	movf	___lodiv@quotient+1,w
 13027  06D9  00A1               	movwf	?___lodiv+1
 13028  06DA  0833               	movf	___lodiv@quotient+2,w
 13029  06DB  00A2               	movwf	?___lodiv+2
 13030  06DC  0834               	movf	___lodiv@quotient+3,w
 13031  06DD  00A3               	movwf	?___lodiv+3
 13032  06DE  0835               	movf	___lodiv@quotient+4,w
 13033  06DF  00A4               	movwf	?___lodiv+4
 13034  06E0  0836               	movf	___lodiv@quotient+5,w
 13035  06E1  00A5               	movwf	?___lodiv+5
 13036  06E2  0837               	movf	___lodiv@quotient+6,w
 13037  06E3  00A6               	movwf	?___lodiv+6
 13038  06E4  0838               	movf	___lodiv@quotient+7,w
 13039  06E5  00A7               	movwf	?___lodiv+7
 13040  06E6                     l1397:
 13041  06E6  0008               	return
 13042  06E7                     __end_of___lodiv:
 13043                           
 13044                           	psect	text44
 13045  03B8                     __ptext44:	
 13046 ;; *************** function _WritePin *****************
 13047 ;; Defined at:
 13048 ;;		line 148 in file "PIC16Xpress_DevBoard.c"
 13049 ;; Parameters:    Size  Location     Type
 13050 ;;  pin             1    wreg     enum E7144
 13051 ;;  val             1    0[BANK0 ] unsigned char 
 13052 ;; Auto vars:     Size  Location     Type
 13053 ;;  pin             1    3[BANK0 ] enum E7144
 13054 ;; Return value:  Size  Location     Type
 13055 ;;                  1    wreg      unsigned char 
 13056 ;; Registers used:
 13057 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13058 ;; Tracked objects:
 13059 ;;		On entry : 0/0
 13060 ;;		On exit  : 0/0
 13061 ;;		Unchanged: 0/0
 13062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13063 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13064 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13065 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13066 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13067 ;;Total ram usage:        4 bytes
 13068 ;; Hardware stack levels used: 1
 13069 ;; Hardware stack levels required when called: 4
 13070 ;; This function calls:
 13071 ;;		Nothing
 13072 ;; This function is called by:
 13073 ;;		_JSN_Sensor_Init
 13074 ;;		_JSN_Sensor_Trig
 13075 ;;		_main
 13076 ;;		_SpeakerTone_Init
 13077 ;; This function uses a non-reentrant model
 13078 ;;
 13079                           
 13080  03B8                     _WritePin:	
 13081                           ;psect for function _WritePin
 13082                           
 13083                           
 13084                           ;incstack = 0
 13085                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
 13086                           ;WritePin@pin stored from wreg
 13087  03B8  0020               	movlb	0	; select bank0
 13088  03B9  00A3               	movwf	WritePin@pin
 13089  03BA                     l3855:
 13090                           
 13091                           ;PIC16Xpress_DevBoard.c: 149:     switch(pin) {
 13092  03BA  2C32               	goto	l3927
 13093  03BB                     l3857:
 13094                           
 13095                           ;PIC16Xpress_DevBoard.c: 151:             LATAbits.LATA5 = val;
 13096  03BB  0C20               	rrf	WritePin@val,w
 13097  03BC  0022               	movlb	2	; select bank2
 13098  03BD  1C03               	skipc
 13099  03BE  128C               	bcf	12,5	;volatile
 13100  03BF  1803               	skipnc
 13101  03C0  168C               	bsf	12,5	;volatile
 13102  03C1  2C72               	goto	l197
 13103  03C2                     l3861:
 13104                           
 13105                           ;PIC16Xpress_DevBoard.c: 154:             LATAbits.LATA4 = val;
 13106  03C2  0C20               	rrf	WritePin@val,w
 13107  03C3  0022               	movlb	2	; select bank2
 13108  03C4  1C03               	skipc
 13109  03C5  120C               	bcf	12,4	;volatile
 13110  03C6  1803               	skipnc
 13111  03C7  160C               	bsf	12,4	;volatile
 13112  03C8  2C72               	goto	l197
 13113  03C9                     l3865:
 13114                           
 13115                           ;PIC16Xpress_DevBoard.c: 159:             LATCbits.LATC5 = val;
 13116  03C9  0C20               	rrf	WritePin@val,w
 13117  03CA  0022               	movlb	2	; select bank2
 13118  03CB  1C03               	skipc
 13119  03CC  128E               	bcf	14,5	;volatile
 13120  03CD  1803               	skipnc
 13121  03CE  168E               	bsf	14,5	;volatile
 13122  03CF  2C72               	goto	l197
 13123  03D0                     l3869:
 13124                           
 13125                           ;PIC16Xpress_DevBoard.c: 162:             LATCbits.LATC4 = val;
 13126  03D0  0C20               	rrf	WritePin@val,w
 13127  03D1  0022               	movlb	2	; select bank2
 13128  03D2  1C03               	skipc
 13129  03D3  120E               	bcf	14,4	;volatile
 13130  03D4  1803               	skipnc
 13131  03D5  160E               	bsf	14,4	;volatile
 13132  03D6  2C72               	goto	l197
 13133  03D7                     l3873:
 13134                           
 13135                           ;PIC16Xpress_DevBoard.c: 165:             LATCbits.LATC3 = val;
 13136  03D7  0C20               	rrf	WritePin@val,w
 13137  03D8  0022               	movlb	2	; select bank2
 13138  03D9  1C03               	skipc
 13139  03DA  118E               	bcf	14,3	;volatile
 13140  03DB  1803               	skipnc
 13141  03DC  158E               	bsf	14,3	;volatile
 13142  03DD  2C72               	goto	l197
 13143  03DE                     l3877:
 13144                           
 13145                           ;PIC16Xpress_DevBoard.c: 168:             LATCbits.LATC6 = val;
 13146  03DE  0C20               	rrf	WritePin@val,w
 13147  03DF  0022               	movlb	2	; select bank2
 13148  03E0  1C03               	skipc
 13149  03E1  130E               	bcf	14,6	;volatile
 13150  03E2  1803               	skipnc
 13151  03E3  170E               	bsf	14,6	;volatile
 13152  03E4  2C72               	goto	l197
 13153  03E5                     l3881:
 13154                           
 13155                           ;PIC16Xpress_DevBoard.c: 171:             LATCbits.LATC7 = val;
 13156  03E5  0C20               	rrf	WritePin@val,w
 13157  03E6  0022               	movlb	2	; select bank2
 13158  03E7  1C03               	skipc
 13159  03E8  138E               	bcf	14,7	;volatile
 13160  03E9  1803               	skipnc
 13161  03EA  178E               	bsf	14,7	;volatile
 13162  03EB  2C72               	goto	l197
 13163  03EC                     l3885:
 13164                           
 13165                           ;PIC16Xpress_DevBoard.c: 174:             LATBbits.LATB7 = val;
 13166  03EC  0C20               	rrf	WritePin@val,w
 13167  03ED  0022               	movlb	2	; select bank2
 13168  03EE  1C03               	skipc
 13169  03EF  138D               	bcf	13,7	;volatile
 13170  03F0  1803               	skipnc
 13171  03F1  178D               	bsf	13,7	;volatile
 13172  03F2  2C72               	goto	l197
 13173  03F3                     l3889:
 13174                           
 13175                           ;PIC16Xpress_DevBoard.c: 177:             LATAbits.LATA0 = val;
 13176  03F3  0C20               	rrf	WritePin@val,w
 13177  03F4  0022               	movlb	2	; select bank2
 13178  03F5  1C03               	skipc
 13179  03F6  100C               	bcf	12,0	;volatile
 13180  03F7  1803               	skipnc
 13181  03F8  140C               	bsf	12,0	;volatile
 13182  03F9  2C72               	goto	l197
 13183  03FA                     l3893:
 13184                           
 13185                           ;PIC16Xpress_DevBoard.c: 180:             LATAbits.LATA1 = val;
 13186  03FA  0C20               	rrf	WritePin@val,w
 13187  03FB  0022               	movlb	2	; select bank2
 13188  03FC  1C03               	skipc
 13189  03FD  108C               	bcf	12,1	;volatile
 13190  03FE  1803               	skipnc
 13191  03FF  148C               	bsf	12,1	;volatile
 13192  0400  2C72               	goto	l197
 13193  0401                     l3897:
 13194                           
 13195                           ;PIC16Xpress_DevBoard.c: 183:             LATAbits.LATA2 = val;
 13196  0401  0C20               	rrf	WritePin@val,w
 13197  0402  0022               	movlb	2	; select bank2
 13198  0403  1C03               	skipc
 13199  0404  110C               	bcf	12,2	;volatile
 13200  0405  1803               	skipnc
 13201  0406  150C               	bsf	12,2	;volatile
 13202  0407  2C72               	goto	l197
 13203  0408                     l3901:
 13204                           
 13205                           ;PIC16Xpress_DevBoard.c: 186:             LATCbits.LATC0 = val;
 13206  0408  0C20               	rrf	WritePin@val,w
 13207  0409  0022               	movlb	2	; select bank2
 13208  040A  1C03               	skipc
 13209  040B  100E               	bcf	14,0	;volatile
 13210  040C  1803               	skipnc
 13211  040D  140E               	bsf	14,0	;volatile
 13212  040E  2C72               	goto	l197
 13213  040F                     l3905:
 13214                           
 13215                           ;PIC16Xpress_DevBoard.c: 189:             LATCbits.LATC1 = val;
 13216  040F  0C20               	rrf	WritePin@val,w
 13217  0410  0022               	movlb	2	; select bank2
 13218  0411  1C03               	skipc
 13219  0412  108E               	bcf	14,1	;volatile
 13220  0413  1803               	skipnc
 13221  0414  148E               	bsf	14,1	;volatile
 13222  0415  2C72               	goto	l197
 13223  0416                     l3909:
 13224                           
 13225                           ;PIC16Xpress_DevBoard.c: 192:             LATCbits.LATC2 = val;
 13226  0416  0C20               	rrf	WritePin@val,w
 13227  0417  0022               	movlb	2	; select bank2
 13228  0418  1C03               	skipc
 13229  0419  110E               	bcf	14,2	;volatile
 13230  041A  1803               	skipnc
 13231  041B  150E               	bsf	14,2	;volatile
 13232  041C  2C72               	goto	l197
 13233  041D                     l3913:
 13234                           
 13235                           ;PIC16Xpress_DevBoard.c: 195:             LATBbits.LATB4 = val;
 13236  041D  0C20               	rrf	WritePin@val,w
 13237  041E  0022               	movlb	2	; select bank2
 13238  041F  1C03               	skipc
 13239  0420  120D               	bcf	13,4	;volatile
 13240  0421  1803               	skipnc
 13241  0422  160D               	bsf	13,4	;volatile
 13242  0423  2C72               	goto	l197
 13243  0424                     l3917:
 13244                           
 13245                           ;PIC16Xpress_DevBoard.c: 198:             LATBbits.LATB5 = val;
 13246  0424  0C20               	rrf	WritePin@val,w
 13247  0425  0022               	movlb	2	; select bank2
 13248  0426  1C03               	skipc
 13249  0427  128D               	bcf	13,5	;volatile
 13250  0428  1803               	skipnc
 13251  0429  168D               	bsf	13,5	;volatile
 13252  042A  2C72               	goto	l197
 13253  042B                     l3921:
 13254                           
 13255                           ;PIC16Xpress_DevBoard.c: 201:             LATBbits.LATB6 = val;
 13256  042B  0C20               	rrf	WritePin@val,w
 13257  042C  0022               	movlb	2	; select bank2
 13258  042D  1C03               	skipc
 13259  042E  130D               	bcf	13,6	;volatile
 13260  042F  1803               	skipnc
 13261  0430  170D               	bsf	13,6	;volatile
 13262  0431  2C72               	goto	l197
 13263  0432                     l3927:
 13264  0432  0823               	movf	WritePin@pin,w
 13265  0433  00A1               	movwf	??_WritePin
 13266  0434  01A2               	clrf	??_WritePin+1
 13267                           
 13268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13269                           ; Switch size 1, requested type "simple"
 13270                           ; Number of cases is 1, Range of values is 0 to 0
 13271                           ; switch strategies available:
 13272                           ; Name         Instructions Cycles
 13273                           ; simple_byte            4     3 (average)
 13274                           ; direct_byte            8     6 (fixed)
 13275                           ; jumptable            260     6 (fixed)
 13276                           ;	Chosen strategy is simple_byte
 13277  0435  0822               	movf	??_WritePin+1,w
 13278  0436  3A00               	xorlw	0	; case 0
 13279  0437  1903               	skipnz
 13280  0438  2C3A               	goto	l4691
 13281  0439  2C72               	goto	l197
 13282  043A                     l4691:
 13283                           
 13284                           ; Switch size 1, requested type "simple"
 13285                           ; Number of cases is 18, Range of values is 0 to 17
 13286                           ; switch strategies available:
 13287                           ; Name         Instructions Cycles
 13288                           ; direct_byte           42     6 (fixed)
 13289                           ; simple_byte           55    28 (average)
 13290                           ; jumptable            260     6 (fixed)
 13291                           ;	Chosen strategy is simple_byte
 13292  043A  0821               	movf	??_WritePin,w
 13293  043B  3A00               	xorlw	0	; case 0
 13294  043C  1903               	skipnz
 13295  043D  2BBB               	goto	l3857
 13296  043E  3A01               	xorlw	1	; case 1
 13297  043F  1903               	skipnz
 13298  0440  2BC2               	goto	l3861
 13299  0441  3A03               	xorlw	3	; case 2
 13300  0442  1903               	skipnz
 13301  0443  2C72               	goto	l197
 13302  0444  3A01               	xorlw	1	; case 3
 13303  0445  1903               	skipnz
 13304  0446  2BC9               	goto	l3865
 13305  0447  3A07               	xorlw	7	; case 4
 13306  0448  1903               	skipnz
 13307  0449  2BD0               	goto	l3869
 13308  044A  3A01               	xorlw	1	; case 5
 13309  044B  1903               	skipnz
 13310  044C  2BD7               	goto	l3873
 13311  044D  3A03               	xorlw	3	; case 6
 13312  044E  1903               	skipnz
 13313  044F  2BDE               	goto	l3877
 13314  0450  3A01               	xorlw	1	; case 7
 13315  0451  1903               	skipnz
 13316  0452  2BE5               	goto	l3881
 13317  0453  3A0F               	xorlw	15	; case 8
 13318  0454  1903               	skipnz
 13319  0455  2BEC               	goto	l3885
 13320  0456  3A01               	xorlw	1	; case 9
 13321  0457  1903               	skipnz
 13322  0458  2BF3               	goto	l3889
 13323  0459  3A03               	xorlw	3	; case 10
 13324  045A  1903               	skipnz
 13325  045B  2BFA               	goto	l3893
 13326  045C  3A01               	xorlw	1	; case 11
 13327  045D  1903               	skipnz
 13328  045E  2C01               	goto	l3897
 13329  045F  3A07               	xorlw	7	; case 12
 13330  0460  1903               	skipnz
 13331  0461  2C08               	goto	l3901
 13332  0462  3A01               	xorlw	1	; case 13
 13333  0463  1903               	skipnz
 13334  0464  2C0F               	goto	l3905
 13335  0465  3A03               	xorlw	3	; case 14
 13336  0466  1903               	skipnz
 13337  0467  2C16               	goto	l3909
 13338  0468  3A01               	xorlw	1	; case 15
 13339  0469  1903               	skipnz
 13340  046A  2C1D               	goto	l3913
 13341  046B  3A1F               	xorlw	31	; case 16
 13342  046C  1903               	skipnz
 13343  046D  2C24               	goto	l3917
 13344  046E  3A01               	xorlw	1	; case 17
 13345  046F  1903               	skipnz
 13346  0470  2C2B               	goto	l3921
 13347  0471  2C72               	goto	l197
 13348  0472                     l197:
 13349  0472  0008               	return
 13350  0473                     __end_of_WritePin:
 13351                           
 13352                           	psect	text45
 13353  0473                     __ptext45:	
 13354 ;; *************** function _SetPin *****************
 13355 ;; Defined at:
 13356 ;;		line 41 in file "PIC16Xpress_DevBoard.c"
 13357 ;; Parameters:    Size  Location     Type
 13358 ;;  pin             1    wreg     enum E7144
 13359 ;;  io              1    0[BANK0 ] unsigned char 
 13360 ;; Auto vars:     Size  Location     Type
 13361 ;;  pin             1    3[BANK0 ] enum E7144
 13362 ;; Return value:  Size  Location     Type
 13363 ;;                  1    wreg      unsigned char 
 13364 ;; Registers used:
 13365 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13366 ;; Tracked objects:
 13367 ;;		On entry : 0/0
 13368 ;;		On exit  : 0/0
 13369 ;;		Unchanged: 0/0
 13370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13371 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13372 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13373 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13374 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13375 ;;Total ram usage:        4 bytes
 13376 ;; Hardware stack levels used: 1
 13377 ;; Hardware stack levels required when called: 4
 13378 ;; This function calls:
 13379 ;;		Nothing
 13380 ;; This function is called by:
 13381 ;;		_JSN_Sensor_Init
 13382 ;;		_main
 13383 ;;		_SpeakerTone_Init
 13384 ;; This function uses a non-reentrant model
 13385 ;;
 13386                           
 13387  0473                     _SetPin:	
 13388                           ;psect for function _SetPin
 13389                           
 13390                           
 13391                           ;incstack = 0
 13392                           ; Regs used in _SetPin: [wreg-fsr0h+status,2+status,0]
 13393                           ;SetPin@pin stored from wreg
 13394  0473  0020               	movlb	0	; select bank0
 13395  0474  00A3               	movwf	SetPin@pin
 13396  0475                     l3769:
 13397                           
 13398                           ;PIC16Xpress_DevBoard.c: 42:     switch(pin) {
 13399  0475  2CED               	goto	l3841
 13400  0476                     l3771:
 13401                           
 13402                           ;PIC16Xpress_DevBoard.c: 44:             TRISAbits.TRISA5 = io;
 13403  0476  0C20               	rrf	SetPin@io,w
 13404  0477  0021               	movlb	1	; select bank1
 13405  0478  1C03               	skipc
 13406  0479  128C               	bcf	12,5	;volatile
 13407  047A  1803               	skipnc
 13408  047B  168C               	bsf	12,5	;volatile
 13409  047C  2D2D               	goto	l149
 13410  047D                     l3775:
 13411                           
 13412                           ;PIC16Xpress_DevBoard.c: 47:             TRISAbits.TRISA4 = io;
 13413  047D  0C20               	rrf	SetPin@io,w
 13414  047E  0021               	movlb	1	; select bank1
 13415  047F  1C03               	skipc
 13416  0480  120C               	bcf	12,4	;volatile
 13417  0481  1803               	skipnc
 13418  0482  160C               	bsf	12,4	;volatile
 13419  0483  2D2D               	goto	l149
 13420  0484                     l3779:
 13421                           
 13422                           ;PIC16Xpress_DevBoard.c: 52:             TRISCbits.TRISC5 = io;
 13423  0484  0C20               	rrf	SetPin@io,w
 13424  0485  0021               	movlb	1	; select bank1
 13425  0486  1C03               	skipc
 13426  0487  128E               	bcf	14,5	;volatile
 13427  0488  1803               	skipnc
 13428  0489  168E               	bsf	14,5	;volatile
 13429  048A  2D2D               	goto	l149
 13430  048B                     l3783:
 13431                           
 13432                           ;PIC16Xpress_DevBoard.c: 55:             TRISCbits.TRISC4 = io;
 13433  048B  0C20               	rrf	SetPin@io,w
 13434  048C  0021               	movlb	1	; select bank1
 13435  048D  1C03               	skipc
 13436  048E  120E               	bcf	14,4	;volatile
 13437  048F  1803               	skipnc
 13438  0490  160E               	bsf	14,4	;volatile
 13439  0491  2D2D               	goto	l149
 13440  0492                     l3787:
 13441                           
 13442                           ;PIC16Xpress_DevBoard.c: 58:             TRISCbits.TRISC3 = io;
 13443  0492  0C20               	rrf	SetPin@io,w
 13444  0493  0021               	movlb	1	; select bank1
 13445  0494  1C03               	skipc
 13446  0495  118E               	bcf	14,3	;volatile
 13447  0496  1803               	skipnc
 13448  0497  158E               	bsf	14,3	;volatile
 13449  0498  2D2D               	goto	l149
 13450  0499                     l3791:
 13451                           
 13452                           ;PIC16Xpress_DevBoard.c: 61:             TRISCbits.TRISC6 = io;
 13453  0499  0C20               	rrf	SetPin@io,w
 13454  049A  0021               	movlb	1	; select bank1
 13455  049B  1C03               	skipc
 13456  049C  130E               	bcf	14,6	;volatile
 13457  049D  1803               	skipnc
 13458  049E  170E               	bsf	14,6	;volatile
 13459  049F  2D2D               	goto	l149
 13460  04A0                     l3795:
 13461                           
 13462                           ;PIC16Xpress_DevBoard.c: 64:             TRISCbits.TRISC7 = io;
 13463  04A0  0C20               	rrf	SetPin@io,w
 13464  04A1  0021               	movlb	1	; select bank1
 13465  04A2  1C03               	skipc
 13466  04A3  138E               	bcf	14,7	;volatile
 13467  04A4  1803               	skipnc
 13468  04A5  178E               	bsf	14,7	;volatile
 13469  04A6  2D2D               	goto	l149
 13470  04A7                     l3799:
 13471                           
 13472                           ;PIC16Xpress_DevBoard.c: 67:             TRISBbits.TRISB7 = io;
 13473  04A7  0C20               	rrf	SetPin@io,w
 13474  04A8  0021               	movlb	1	; select bank1
 13475  04A9  1C03               	skipc
 13476  04AA  138D               	bcf	13,7	;volatile
 13477  04AB  1803               	skipnc
 13478  04AC  178D               	bsf	13,7	;volatile
 13479  04AD  2D2D               	goto	l149
 13480  04AE                     l3803:
 13481                           
 13482                           ;PIC16Xpress_DevBoard.c: 70:             TRISAbits.TRISA0 = io;
 13483  04AE  0C20               	rrf	SetPin@io,w
 13484  04AF  0021               	movlb	1	; select bank1
 13485  04B0  1C03               	skipc
 13486  04B1  100C               	bcf	12,0	;volatile
 13487  04B2  1803               	skipnc
 13488  04B3  140C               	bsf	12,0	;volatile
 13489  04B4  2D2D               	goto	l149
 13490  04B5                     l3807:
 13491                           
 13492                           ;PIC16Xpress_DevBoard.c: 73:             TRISAbits.TRISA1 = io;
 13493  04B5  0C20               	rrf	SetPin@io,w
 13494  04B6  0021               	movlb	1	; select bank1
 13495  04B7  1C03               	skipc
 13496  04B8  108C               	bcf	12,1	;volatile
 13497  04B9  1803               	skipnc
 13498  04BA  148C               	bsf	12,1	;volatile
 13499  04BB  2D2D               	goto	l149
 13500  04BC                     l3811:
 13501                           
 13502                           ;PIC16Xpress_DevBoard.c: 76:             TRISAbits.TRISA2 = io;
 13503  04BC  0C20               	rrf	SetPin@io,w
 13504  04BD  0021               	movlb	1	; select bank1
 13505  04BE  1C03               	skipc
 13506  04BF  110C               	bcf	12,2	;volatile
 13507  04C0  1803               	skipnc
 13508  04C1  150C               	bsf	12,2	;volatile
 13509  04C2  2D2D               	goto	l149
 13510  04C3                     l3815:
 13511                           
 13512                           ;PIC16Xpress_DevBoard.c: 79:             TRISCbits.TRISC0 = io;
 13513  04C3  0C20               	rrf	SetPin@io,w
 13514  04C4  0021               	movlb	1	; select bank1
 13515  04C5  1C03               	skipc
 13516  04C6  100E               	bcf	14,0	;volatile
 13517  04C7  1803               	skipnc
 13518  04C8  140E               	bsf	14,0	;volatile
 13519  04C9  2D2D               	goto	l149
 13520  04CA                     l3819:
 13521                           
 13522                           ;PIC16Xpress_DevBoard.c: 82:             TRISCbits.TRISC1 = io;
 13523  04CA  0C20               	rrf	SetPin@io,w
 13524  04CB  0021               	movlb	1	; select bank1
 13525  04CC  1C03               	skipc
 13526  04CD  108E               	bcf	14,1	;volatile
 13527  04CE  1803               	skipnc
 13528  04CF  148E               	bsf	14,1	;volatile
 13529  04D0  2D2D               	goto	l149
 13530  04D1                     l3823:
 13531                           
 13532                           ;PIC16Xpress_DevBoard.c: 85:             TRISCbits.TRISC2 = io;
 13533  04D1  0C20               	rrf	SetPin@io,w
 13534  04D2  0021               	movlb	1	; select bank1
 13535  04D3  1C03               	skipc
 13536  04D4  110E               	bcf	14,2	;volatile
 13537  04D5  1803               	skipnc
 13538  04D6  150E               	bsf	14,2	;volatile
 13539  04D7  2D2D               	goto	l149
 13540  04D8                     l3827:
 13541                           
 13542                           ;PIC16Xpress_DevBoard.c: 88:             TRISBbits.TRISB4 = io;
 13543  04D8  0C20               	rrf	SetPin@io,w
 13544  04D9  0021               	movlb	1	; select bank1
 13545  04DA  1C03               	skipc
 13546  04DB  120D               	bcf	13,4	;volatile
 13547  04DC  1803               	skipnc
 13548  04DD  160D               	bsf	13,4	;volatile
 13549  04DE  2D2D               	goto	l149
 13550  04DF                     l3831:
 13551                           
 13552                           ;PIC16Xpress_DevBoard.c: 91:             TRISBbits.TRISB5 = io;
 13553  04DF  0C20               	rrf	SetPin@io,w
 13554  04E0  0021               	movlb	1	; select bank1
 13555  04E1  1C03               	skipc
 13556  04E2  128D               	bcf	13,5	;volatile
 13557  04E3  1803               	skipnc
 13558  04E4  168D               	bsf	13,5	;volatile
 13559  04E5  2D2D               	goto	l149
 13560  04E6                     l3835:
 13561                           
 13562                           ;PIC16Xpress_DevBoard.c: 94:             TRISBbits.TRISB6 = io;
 13563  04E6  0C20               	rrf	SetPin@io,w
 13564  04E7  0021               	movlb	1	; select bank1
 13565  04E8  1C03               	skipc
 13566  04E9  130D               	bcf	13,6	;volatile
 13567  04EA  1803               	skipnc
 13568  04EB  170D               	bsf	13,6	;volatile
 13569  04EC  2D2D               	goto	l149
 13570  04ED                     l3841:
 13571  04ED  0823               	movf	SetPin@pin,w
 13572  04EE  00A1               	movwf	??_SetPin
 13573  04EF  01A2               	clrf	??_SetPin+1
 13574                           
 13575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13576                           ; Switch size 1, requested type "simple"
 13577                           ; Number of cases is 1, Range of values is 0 to 0
 13578                           ; switch strategies available:
 13579                           ; Name         Instructions Cycles
 13580                           ; simple_byte            4     3 (average)
 13581                           ; direct_byte            8     6 (fixed)
 13582                           ; jumptable            260     6 (fixed)
 13583                           ;	Chosen strategy is simple_byte
 13584  04F0  0822               	movf	??_SetPin+1,w
 13585  04F1  3A00               	xorlw	0	; case 0
 13586  04F2  1903               	skipnz
 13587  04F3  2CF5               	goto	l4693
 13588  04F4  2D2D               	goto	l149
 13589  04F5                     l4693:
 13590                           
 13591                           ; Switch size 1, requested type "simple"
 13592                           ; Number of cases is 18, Range of values is 0 to 17
 13593                           ; switch strategies available:
 13594                           ; Name         Instructions Cycles
 13595                           ; direct_byte           42     6 (fixed)
 13596                           ; simple_byte           55    28 (average)
 13597                           ; jumptable            260     6 (fixed)
 13598                           ;	Chosen strategy is simple_byte
 13599  04F5  0821               	movf	??_SetPin,w
 13600  04F6  3A00               	xorlw	0	; case 0
 13601  04F7  1903               	skipnz
 13602  04F8  2C76               	goto	l3771
 13603  04F9  3A01               	xorlw	1	; case 1
 13604  04FA  1903               	skipnz
 13605  04FB  2C7D               	goto	l3775
 13606  04FC  3A03               	xorlw	3	; case 2
 13607  04FD  1903               	skipnz
 13608  04FE  2D2D               	goto	l149
 13609  04FF  3A01               	xorlw	1	; case 3
 13610  0500  1903               	skipnz
 13611  0501  2C84               	goto	l3779
 13612  0502  3A07               	xorlw	7	; case 4
 13613  0503  1903               	skipnz
 13614  0504  2C8B               	goto	l3783
 13615  0505  3A01               	xorlw	1	; case 5
 13616  0506  1903               	skipnz
 13617  0507  2C92               	goto	l3787
 13618  0508  3A03               	xorlw	3	; case 6
 13619  0509  1903               	skipnz
 13620  050A  2C99               	goto	l3791
 13621  050B  3A01               	xorlw	1	; case 7
 13622  050C  1903               	skipnz
 13623  050D  2CA0               	goto	l3795
 13624  050E  3A0F               	xorlw	15	; case 8
 13625  050F  1903               	skipnz
 13626  0510  2CA7               	goto	l3799
 13627  0511  3A01               	xorlw	1	; case 9
 13628  0512  1903               	skipnz
 13629  0513  2CAE               	goto	l3803
 13630  0514  3A03               	xorlw	3	; case 10
 13631  0515  1903               	skipnz
 13632  0516  2CB5               	goto	l3807
 13633  0517  3A01               	xorlw	1	; case 11
 13634  0518  1903               	skipnz
 13635  0519  2CBC               	goto	l3811
 13636  051A  3A07               	xorlw	7	; case 12
 13637  051B  1903               	skipnz
 13638  051C  2CC3               	goto	l3815
 13639  051D  3A01               	xorlw	1	; case 13
 13640  051E  1903               	skipnz
 13641  051F  2CCA               	goto	l3819
 13642  0520  3A03               	xorlw	3	; case 14
 13643  0521  1903               	skipnz
 13644  0522  2CD1               	goto	l3823
 13645  0523  3A01               	xorlw	1	; case 15
 13646  0524  1903               	skipnz
 13647  0525  2CD8               	goto	l3827
 13648  0526  3A1F               	xorlw	31	; case 16
 13649  0527  1903               	skipnz
 13650  0528  2CDF               	goto	l3831
 13651  0529  3A01               	xorlw	1	; case 17
 13652  052A  1903               	skipnz
 13653  052B  2CE6               	goto	l3835
 13654  052C  2D2D               	goto	l149
 13655  052D                     l149:
 13656  052D  0008               	return
 13657  052E                     __end_of_SetPin:
 13658                           
 13659                           	psect	text46
 13660  0E82                     __ptext46:	
 13661 ;; *************** function _JSN_Sensor_GetDistance *****************
 13662 ;; Defined at:
 13663 ;;		line 106 in file "JSN_Sensor.c"
 13664 ;; Parameters:    Size  Location     Type
 13665 ;;  Sensor          1    wreg     PTR struct .
 13666 ;;		 -> Sens1(6), Sens2(6), Sens3(6), 
 13667 ;; Auto vars:     Size  Location     Type
 13668 ;;  Sensor          1   30[BANK0 ] PTR struct .
 13669 ;;		 -> Sens1(6), Sens2(6), Sens3(6), 
 13670 ;; Return value:  Size  Location     Type
 13671 ;;                  2   26[BANK0 ] unsigned int 
 13672 ;; Registers used:
 13673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13674 ;; Tracked objects:
 13675 ;;		On entry : 0/0
 13676 ;;		On exit  : 0/0
 13677 ;;		Unchanged: 0/0
 13678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13679 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13680 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13681 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13682 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13683 ;;Total ram usage:        5 bytes
 13684 ;; Hardware stack levels used: 1
 13685 ;; Hardware stack levels required when called: 5
 13686 ;; This function calls:
 13687 ;;		___lldiv
 13688 ;;		___lmul
 13689 ;; This function is called by:
 13690 ;;		_main
 13691 ;; This function uses a non-reentrant model
 13692 ;;
 13693                           
 13694  0E82                     _JSN_Sensor_GetDistance:	
 13695                           ;psect for function _JSN_Sensor_GetDistance
 13696                           
 13697                           
 13698                           ;incstack = 0
 13699                           ; Regs used in _JSN_Sensor_GetDistance: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13700                           ;JSN_Sensor_GetDistance@Sensor stored from wreg
 13701  0E82  0020               	movlb	0	; select bank0
 13702  0E83  00BE               	movwf	JSN_Sensor_GetDistance@Sensor
 13703  0E84                     l4121:
 13704                           
 13705                           ;JSN_Sensor.c: 111:     Sensor->distance = (unsigned int) (((uint32_t) Sensor->echoHighT
      +                          ime *
 13706  0E84  3000               	movlw	0
 13707  0E85  00AF               	movwf	___lldiv@divisor+3
 13708  0E86  3000               	movlw	0
 13709  0E87  00AE               	movwf	___lldiv@divisor+2
 13710  0E88  3007               	movlw	7
 13711  0E89  00AD               	movwf	___lldiv@divisor+1
 13712  0E8A  30D0               	movlw	208
 13713  0E8B  00AC               	movwf	___lldiv@divisor
 13714  0E8C  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 13715  0E8D  0086               	movwf	6
 13716  0E8E  3001               	movlw	1	; select bank2/3
 13717  0E8F  0087               	movwf	7
 13718  0E90  3F40               	moviw [0]fsr1
 13719  0E91  00BC               	movwf	??_JSN_Sensor_GetDistance
 13720  0E92  3F41               	moviw [1]fsr1
 13721  0E93  00BD               	movwf	??_JSN_Sensor_GetDistance+1
 13722  0E94  083C               	movf	??_JSN_Sensor_GetDistance,w
 13723  0E95  00A0               	movwf	___lmul@multiplier
 13724  0E96  083D               	movf	??_JSN_Sensor_GetDistance+1,w
 13725  0E97  00A1               	movwf	___lmul@multiplier+1
 13726  0E98  01A2               	clrf	___lmul@multiplier+2
 13727  0E99  01A3               	clrf	___lmul@multiplier+3
 13728  0E9A  3000               	movlw	0
 13729  0E9B  00A7               	movwf	___lmul@multiplicand+3
 13730  0E9C  3000               	movlw	0
 13731  0E9D  00A6               	movwf	___lmul@multiplicand+2
 13732  0E9E  3001               	movlw	1
 13733  0E9F  00A5               	movwf	___lmul@multiplicand+1
 13734  0EA0  3057               	movlw	87
 13735  0EA1  00A4               	movwf	___lmul@multiplicand
 13736  0EA2  318D  2525  318E   	fcall	___lmul
 13737  0EA5  0020               	movlb	0	; select bank0
 13738  0EA6  0823               	movf	?___lmul+3,w
 13739  0EA7  00B3               	movwf	___lldiv@dividend+3
 13740  0EA8  0822               	movf	?___lmul+2,w
 13741  0EA9  00B2               	movwf	___lldiv@dividend+2
 13742  0EAA  0821               	movf	?___lmul+1,w
 13743  0EAB  00B1               	movwf	___lldiv@dividend+1
 13744  0EAC  0820               	movf	?___lmul,w
 13745  0EAD  00B0               	movwf	___lldiv@dividend
 13746  0EAE  3187  2758  318E   	fcall	___lldiv
 13747  0EB1  0020               	movlb	0	; select bank0
 13748  0EB2  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 13749  0EB3  3E02               	addlw	2
 13750  0EB4  0086               	movwf	6
 13751  0EB5  3001               	movlw	1	; select bank2/3
 13752  0EB6  0087               	movwf	7
 13753  0EB7  082C               	movf	?___lldiv,w
 13754  0EB8  3FC0               	movwi [0]fsr1
 13755  0EB9  082D               	movf	?___lldiv+1,w
 13756  0EBA  3FC1               	movwi [1]fsr1
 13757  0EBB                     l4123:
 13758                           
 13759                           ;JSN_Sensor.c: 113:     return Sensor->distance;
 13760  0EBB  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 13761  0EBC  3E02               	addlw	2
 13762  0EBD  0086               	movwf	6
 13763  0EBE  3001               	movlw	1	; select bank2/3
 13764  0EBF  0087               	movwf	7
 13765  0EC0  3F40               	moviw [0]fsr1
 13766  0EC1  00BA               	movwf	?_JSN_Sensor_GetDistance
 13767  0EC2  3F41               	moviw [1]fsr1
 13768  0EC3  00BB               	movwf	?_JSN_Sensor_GetDistance+1
 13769  0EC4                     l57:
 13770  0EC4  0008               	return
 13771  0EC5                     __end_of_JSN_Sensor_GetDistance:
 13772                           
 13773                           	psect	text47
 13774  0D25                     __ptext47:	
 13775 ;; *************** function ___lmul *****************
 13776 ;; Defined at:
 13777 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul32.c"
 13778 ;; Parameters:    Size  Location     Type
 13779 ;;  multiplier      4    0[BANK0 ] unsigned long 
 13780 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 13781 ;; Auto vars:     Size  Location     Type
 13782 ;;  product         4    8[BANK0 ] unsigned long 
 13783 ;; Return value:  Size  Location     Type
 13784 ;;                  4    0[BANK0 ] unsigned long 
 13785 ;; Registers used:
 13786 ;;		wreg, status,2, status,0
 13787 ;; Tracked objects:
 13788 ;;		On entry : 0/0
 13789 ;;		On exit  : 0/0
 13790 ;;		Unchanged: 0/0
 13791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13792 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13793 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13795 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13796 ;;Total ram usage:       12 bytes
 13797 ;; Hardware stack levels used: 1
 13798 ;; Hardware stack levels required when called: 4
 13799 ;; This function calls:
 13800 ;;		Nothing
 13801 ;; This function is called by:
 13802 ;;		_JSN_Sensor_GetDistance
 13803 ;;		_MotorControl_SetIntensity
 13804 ;; This function uses a non-reentrant model
 13805 ;;
 13806                           
 13807  0D25                     ___lmul:	
 13808                           ;psect for function ___lmul
 13809                           
 13810  0D25                     l4019:	
 13811                           ;incstack = 0
 13812                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13813                           
 13814  0D25  3000               	movlw	0
 13815  0D26  0020               	movlb	0	; select bank0
 13816  0D27  00AB               	movwf	___lmul@product+3
 13817  0D28  3000               	movlw	0
 13818  0D29  00AA               	movwf	___lmul@product+2
 13819  0D2A  3000               	movlw	0
 13820  0D2B  00A9               	movwf	___lmul@product+1
 13821  0D2C  3000               	movlw	0
 13822  0D2D  00A8               	movwf	___lmul@product
 13823  0D2E                     l4021:
 13824  0D2E  1C20               	btfss	___lmul@multiplier,0
 13825  0D2F  2D31               	goto	u1361
 13826  0D30  2D32               	goto	u1360
 13827  0D31                     u1361:
 13828  0D31  2D3A               	goto	l4025
 13829  0D32                     u1360:
 13830  0D32                     l4023:
 13831  0D32  0824               	movf	___lmul@multiplicand,w
 13832  0D33  07A8               	addwf	___lmul@product,f
 13833  0D34  0825               	movf	___lmul@multiplicand+1,w
 13834  0D35  3DA9               	addwfc	___lmul@product+1,f
 13835  0D36  0826               	movf	___lmul@multiplicand+2,w
 13836  0D37  3DAA               	addwfc	___lmul@product+2,f
 13837  0D38  0827               	movf	___lmul@multiplicand+3,w
 13838  0D39  3DAB               	addwfc	___lmul@product+3,f
 13839  0D3A                     l4025:
 13840  0D3A  3001               	movlw	1
 13841  0D3B                     u1375:
 13842  0D3B  35A4               	lslf	___lmul@multiplicand,f
 13843  0D3C  0DA5               	rlf	___lmul@multiplicand+1,f
 13844  0D3D  0DA6               	rlf	___lmul@multiplicand+2,f
 13845  0D3E  0DA7               	rlf	___lmul@multiplicand+3,f
 13846  0D3F  0B89               	decfsz	9,f
 13847  0D40  2D3B               	goto	u1375
 13848  0D41                     l4027:
 13849  0D41  3001               	movlw	1
 13850  0D42                     u1385:
 13851  0D42  36A3               	lsrf	___lmul@multiplier+3,f
 13852  0D43  0CA2               	rrf	___lmul@multiplier+2,f
 13853  0D44  0CA1               	rrf	___lmul@multiplier+1,f
 13854  0D45  0CA0               	rrf	___lmul@multiplier,f
 13855  0D46  0B89               	decfsz	9,f
 13856  0D47  2D42               	goto	u1385
 13857  0D48  0823               	movf	___lmul@multiplier+3,w
 13858  0D49  0422               	iorwf	___lmul@multiplier+2,w
 13859  0D4A  0421               	iorwf	___lmul@multiplier+1,w
 13860  0D4B  0420               	iorwf	___lmul@multiplier,w
 13861  0D4C  1D03               	skipz
 13862  0D4D  2D4F               	goto	u1391
 13863  0D4E  2D50               	goto	u1390
 13864  0D4F                     u1391:
 13865  0D4F  2D2E               	goto	l4021
 13866  0D50                     u1390:
 13867  0D50                     l4029:
 13868  0D50  082B               	movf	___lmul@product+3,w
 13869  0D51  00A3               	movwf	?___lmul+3
 13870  0D52  082A               	movf	___lmul@product+2,w
 13871  0D53  00A2               	movwf	?___lmul+2
 13872  0D54  0829               	movf	___lmul@product+1,w
 13873  0D55  00A1               	movwf	?___lmul+1
 13874  0D56  0828               	movf	___lmul@product,w
 13875  0D57  00A0               	movwf	?___lmul
 13876  0D58                     l1171:
 13877  0D58  0008               	return
 13878  0D59                     __end_of___lmul:
 13879                           
 13880                           	psect	text48
 13881  0758                     __ptext48:	
 13882 ;; *************** function ___lldiv *****************
 13883 ;; Defined at:
 13884 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\__lldiv.c"
 13885 ;; Parameters:    Size  Location     Type
 13886 ;;  divisor         4   12[BANK0 ] unsigned long 
 13887 ;;  dividend        4   16[BANK0 ] unsigned long 
 13888 ;; Auto vars:     Size  Location     Type
 13889 ;;  quotient        4   21[BANK0 ] unsigned long 
 13890 ;;  counter         1   25[BANK0 ] unsigned char 
 13891 ;; Return value:  Size  Location     Type
 13892 ;;                  4   12[BANK0 ] unsigned long 
 13893 ;; Registers used:
 13894 ;;		wreg, status,2, status,0
 13895 ;; Tracked objects:
 13896 ;;		On entry : 0/0
 13897 ;;		On exit  : 0/0
 13898 ;;		Unchanged: 0/0
 13899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13900 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13901 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13902 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13903 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13904 ;;Total ram usage:       14 bytes
 13905 ;; Hardware stack levels used: 1
 13906 ;; Hardware stack levels required when called: 4
 13907 ;; This function calls:
 13908 ;;		Nothing
 13909 ;; This function is called by:
 13910 ;;		_JSN_Sensor_GetDistance
 13911 ;;		_SpeakerTone_SetFrequency
 13912 ;;		_MotorControl_SetIntensity
 13913 ;; This function uses a non-reentrant model
 13914 ;;
 13915                           
 13916  0758                     ___lldiv:	
 13917                           ;psect for function ___lldiv
 13918                           
 13919  0758                     l4033:	
 13920                           ;incstack = 0
 13921                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 13922                           
 13923  0758  3000               	movlw	0
 13924  0759  0020               	movlb	0	; select bank0
 13925  075A  00B8               	movwf	___lldiv@quotient+3
 13926  075B  3000               	movlw	0
 13927  075C  00B7               	movwf	___lldiv@quotient+2
 13928  075D  3000               	movlw	0
 13929  075E  00B6               	movwf	___lldiv@quotient+1
 13930  075F  3000               	movlw	0
 13931  0760  00B5               	movwf	___lldiv@quotient
 13932  0761  082F               	movf	___lldiv@divisor+3,w
 13933  0762  042E               	iorwf	___lldiv@divisor+2,w
 13934  0763  042D               	iorwf	___lldiv@divisor+1,w
 13935  0764  042C               	iorwf	___lldiv@divisor,w
 13936  0765  1903               	skipnz
 13937  0766  2F68               	goto	u1401
 13938  0767  2F69               	goto	u1400
 13939  0768                     u1401:
 13940  0768  2FAA               	goto	l4053
 13941  0769                     u1400:
 13942  0769                     l4035:
 13943  0769  01B9               	clrf	___lldiv@counter
 13944  076A  0AB9               	incf	___lldiv@counter,f
 13945  076B  2F77               	goto	l4039
 13946  076C                     l4037:
 13947  076C  3001               	movlw	1
 13948  076D                     u1415:
 13949  076D  35AC               	lslf	___lldiv@divisor,f
 13950  076E  0DAD               	rlf	___lldiv@divisor+1,f
 13951  076F  0DAE               	rlf	___lldiv@divisor+2,f
 13952  0770  0DAF               	rlf	___lldiv@divisor+3,f
 13953  0771  0B89               	decfsz	9,f
 13954  0772  2F6D               	goto	u1415
 13955  0773  3001               	movlw	1
 13956  0774  00B4               	movwf	??___lldiv
 13957  0775  0834               	movf	??___lldiv,w
 13958  0776  07B9               	addwf	___lldiv@counter,f
 13959  0777                     l4039:
 13960  0777  1FAF               	btfss	___lldiv@divisor+3,7
 13961  0778  2F7A               	goto	u1421
 13962  0779  2F7B               	goto	u1420
 13963  077A                     u1421:
 13964  077A  2F6C               	goto	l4037
 13965  077B                     u1420:
 13966  077B                     l4041:
 13967  077B  3001               	movlw	1
 13968  077C                     u1435:
 13969  077C  35B5               	lslf	___lldiv@quotient,f
 13970  077D  0DB6               	rlf	___lldiv@quotient+1,f
 13971  077E  0DB7               	rlf	___lldiv@quotient+2,f
 13972  077F  0DB8               	rlf	___lldiv@quotient+3,f
 13973  0780  0B89               	decfsz	9,f
 13974  0781  2F7C               	goto	u1435
 13975  0782                     l4043:
 13976  0782  082F               	movf	___lldiv@divisor+3,w
 13977  0783  0233               	subwf	___lldiv@dividend+3,w
 13978  0784  1D03               	skipz
 13979  0785  2F90               	goto	u1445
 13980  0786  082E               	movf	___lldiv@divisor+2,w
 13981  0787  0232               	subwf	___lldiv@dividend+2,w
 13982  0788  1D03               	skipz
 13983  0789  2F90               	goto	u1445
 13984  078A  082D               	movf	___lldiv@divisor+1,w
 13985  078B  0231               	subwf	___lldiv@dividend+1,w
 13986  078C  1D03               	skipz
 13987  078D  2F90               	goto	u1445
 13988  078E  082C               	movf	___lldiv@divisor,w
 13989  078F  0230               	subwf	___lldiv@dividend,w
 13990  0790                     u1445:
 13991  0790  1C03               	skipc
 13992  0791  2F93               	goto	u1441
 13993  0792  2F94               	goto	u1440
 13994  0793                     u1441:
 13995  0793  2F9D               	goto	l4049
 13996  0794                     u1440:
 13997  0794                     l4045:
 13998  0794  082C               	movf	___lldiv@divisor,w
 13999  0795  02B0               	subwf	___lldiv@dividend,f
 14000  0796  082D               	movf	___lldiv@divisor+1,w
 14001  0797  3BB1               	subwfb	___lldiv@dividend+1,f
 14002  0798  082E               	movf	___lldiv@divisor+2,w
 14003  0799  3BB2               	subwfb	___lldiv@dividend+2,f
 14004  079A  082F               	movf	___lldiv@divisor+3,w
 14005  079B  3BB3               	subwfb	___lldiv@dividend+3,f
 14006  079C                     l4047:
 14007  079C  1435               	bsf	___lldiv@quotient,0
 14008  079D                     l4049:
 14009  079D  3001               	movlw	1
 14010  079E                     u1455:
 14011  079E  36AF               	lsrf	___lldiv@divisor+3,f
 14012  079F  0CAE               	rrf	___lldiv@divisor+2,f
 14013  07A0  0CAD               	rrf	___lldiv@divisor+1,f
 14014  07A1  0CAC               	rrf	___lldiv@divisor,f
 14015  07A2  0B89               	decfsz	9,f
 14016  07A3  2F9E               	goto	u1455
 14017  07A4                     l4051:
 14018  07A4  3001               	movlw	1
 14019  07A5  02B9               	subwf	___lldiv@counter,f
 14020  07A6  1D03               	btfss	3,2
 14021  07A7  2FA9               	goto	u1461
 14022  07A8  2FAA               	goto	u1460
 14023  07A9                     u1461:
 14024  07A9  2F7B               	goto	l4041
 14025  07AA                     u1460:
 14026  07AA                     l4053:
 14027  07AA  0838               	movf	___lldiv@quotient+3,w
 14028  07AB  00AF               	movwf	?___lldiv+3
 14029  07AC  0837               	movf	___lldiv@quotient+2,w
 14030  07AD  00AE               	movwf	?___lldiv+2
 14031  07AE  0836               	movf	___lldiv@quotient+1,w
 14032  07AF  00AD               	movwf	?___lldiv+1
 14033  07B0  0835               	movf	___lldiv@quotient,w
 14034  07B1  00AC               	movwf	?___lldiv
 14035  07B2                     l1193:
 14036  07B2  0008               	return
 14037  07B3                     __end_of___lldiv:
 14038                           
 14039                           	psect	text49
 14040  0B01                     __ptext49:	
 14041 ;; *************** function _FRT_GetMillis *****************
 14042 ;; Defined at:
 14043 ;;		line 26 in file "FRT.c"
 14044 ;; Parameters:    Size  Location     Type
 14045 ;;		None
 14046 ;; Auto vars:     Size  Location     Type
 14047 ;;		None
 14048 ;; Return value:  Size  Location     Type
 14049 ;;                  4    0[BANK0 ] unsigned long 
 14050 ;; Registers used:
 14051 ;;		wreg
 14052 ;; Tracked objects:
 14053 ;;		On entry : 0/0
 14054 ;;		On exit  : 0/0
 14055 ;;		Unchanged: 0/0
 14056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14057 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14060 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14061 ;;Total ram usage:        4 bytes
 14062 ;; Hardware stack levels used: 1
 14063 ;; Hardware stack levels required when called: 4
 14064 ;; This function calls:
 14065 ;;		Nothing
 14066 ;; This function is called by:
 14067 ;;		_main
 14068 ;; This function uses a non-reentrant model
 14069 ;;
 14070                           
 14071  0B01                     _FRT_GetMillis:	
 14072                           ;psect for function _FRT_GetMillis
 14073                           
 14074  0B01                     l4135:	
 14075                           ;incstack = 0
 14076                           ; Regs used in _FRT_GetMillis: [wreg]
 14077                           
 14078                           
 14079                           ;FRT.c: 27:     return millis;
 14080  0B01  0022               	movlb	2	; select bank2
 14081  0B02  083F               	movf	(_millis+3)^(0+256),w
 14082  0B03  0020               	movlb	0	; select bank0
 14083  0B04  00A3               	movwf	?_FRT_GetMillis+3
 14084  0B05  0022               	movlb	2	; select bank2
 14085  0B06  083E               	movf	(_millis+2)^(0+256),w
 14086  0B07  0020               	movlb	0	; select bank0
 14087  0B08  00A2               	movwf	?_FRT_GetMillis+2
 14088  0B09  0022               	movlb	2	; select bank2
 14089  0B0A  083D               	movf	(_millis+1)^(0+256),w
 14090  0B0B  0020               	movlb	0	; select bank0
 14091  0B0C  00A1               	movwf	?_FRT_GetMillis+1
 14092  0B0D  0022               	movlb	2	; select bank2
 14093  0B0E  083C               	movf	_millis^(0+256),w
 14094  0B0F  0020               	movlb	0	; select bank0
 14095  0B10  00A0               	movwf	?_FRT_GetMillis
 14096  0B11                     l806:
 14097  0B11  0008               	return
 14098  0B12                     __end_of_FRT_GetMillis:
 14099                           
 14100                           	psect	intentry
 14101  0004                     __pintentry:	
 14102 ;; *************** function _INTERRUPT_InterruptManager *****************
 14103 ;; Defined at:
 14104 ;;		line 16 in file "interrupt_manager.c"
 14105 ;; Parameters:    Size  Location     Type
 14106 ;;		None
 14107 ;; Auto vars:     Size  Location     Type
 14108 ;;		None
 14109 ;; Return value:  Size  Location     Type
 14110 ;;                  1    wreg      void 
 14111 ;; Registers used:
 14112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14113 ;; Tracked objects:
 14114 ;;		On entry : 0/0
 14115 ;;		On exit  : 0/0
 14116 ;;		Unchanged: 0/0
 14117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14122 ;;Total ram usage:        0 bytes
 14123 ;; Hardware stack levels used: 1
 14124 ;; Hardware stack levels required when called: 3
 14125 ;; This function calls:
 14126 ;;		Absolute function
 14127 ;;		_CCP1_CaptureISR
 14128 ;;		_CCP2_CaptureISR
 14129 ;;		_CCP3_CaptureISR
 14130 ;;		_CCP4_CompareISR
 14131 ;;		_EUSART_Receive_ISR
 14132 ;;		_EUSART_Transmit_ISR
 14133 ;;		_TMR0_ISR
 14134 ;;		_TMR1_ISR
 14135 ;;		_TMR3_ISR
 14136 ;; This function is called by:
 14137 ;;		Interrupt level 1
 14138 ;; This function uses a non-reentrant model
 14139 ;;
 14140                           
 14141  0004                     _INTERRUPT_InterruptManager:
 14142                           
 14143                           ;incstack = 0
 14144  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 14145                           
 14146                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14147  0005  3180               	pagesel	$
 14148  0006                     i1l4311:
 14149                           
 14150                           ;interrupt_manager.c: 19:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 14151  0006  0021               	movlb	1	; select bank1
 14152  0007  1E90               	btfss	16,5	;volatile
 14153  0008  280A               	goto	u165_21
 14154  0009  280B               	goto	u165_20
 14155  000A                     u165_21:
 14156  000A  2814               	goto	i1l715
 14157  000B                     u165_20:
 14158  000B                     i1l4313:
 14159  000B  0020               	movlb	0	; select bank0
 14160  000C  1E90               	btfss	16,5	;volatile
 14161  000D  280F               	goto	u166_21
 14162  000E  2810               	goto	u166_20
 14163  000F                     u166_21:
 14164  000F  2814               	goto	i1l715
 14165  0010                     u166_20:
 14166  0010                     i1l4315:
 14167                           
 14168                           ;interrupt_manager.c: 20:     {;interrupt_manager.c: 21:         TMR0_ISR();
 14169  0010  318A  22CE  3180   	fcall	_TMR0_ISR
 14170                           
 14171                           ;interrupt_manager.c: 22:     }
 14172  0013  288E               	goto	i1l733
 14173  0014                     i1l715:	
 14174                           ;interrupt_manager.c: 23:     else if(INTCONbits.PEIE == 1)
 14175                           
 14176  0014  1F0B               	btfss	11,6	;volatile
 14177  0015  2817               	goto	u167_21
 14178  0016  2818               	goto	u167_20
 14179  0017                     u167_21:
 14180  0017  288E               	goto	i1l733
 14181  0018                     u167_20:
 14182  0018                     i1l4317:
 14183                           
 14184                           ;interrupt_manager.c: 24:     {;interrupt_manager.c: 25:         if(PIE4bits.CCP4IE == 1
      +                           && PIR4bits.CCP4IF == 1)
 14185  0018  0021               	movlb	1	; select bank1
 14186  0019  1D94               	btfss	20,3	;volatile
 14187  001A  281C               	goto	u168_21
 14188  001B  281D               	goto	u168_20
 14189  001C                     u168_21:
 14190  001C  2826               	goto	i1l718
 14191  001D                     u168_20:
 14192  001D                     i1l4319:
 14193  001D  0020               	movlb	0	; select bank0
 14194  001E  1D94               	btfss	20,3	;volatile
 14195  001F  2821               	goto	u169_21
 14196  0020  2822               	goto	u169_20
 14197  0021                     u169_21:
 14198  0021  2826               	goto	i1l718
 14199  0022                     u169_20:
 14200  0022                     i1l4321:
 14201                           
 14202                           ;interrupt_manager.c: 26:         {;interrupt_manager.c: 27:             CCP4_CompareISR
      +                          ();
 14203  0022  3189  21EC  3180   	fcall	_CCP4_CompareISR
 14204                           
 14205                           ;interrupt_manager.c: 28:         }
 14206  0025  288E               	goto	i1l733
 14207  0026                     i1l718:	
 14208                           ;interrupt_manager.c: 29:         else if(PIE3bits.TMR3IE == 1 && PIR3bits.TMR3IF == 1)
 14209                           
 14210  0026  0021               	movlb	1	; select bank1
 14211  0027  1E13               	btfss	19,4	;volatile
 14212  0028  282A               	goto	u170_21
 14213  0029  282B               	goto	u170_20
 14214  002A                     u170_21:
 14215  002A  2834               	goto	i1l720
 14216  002B                     u170_20:
 14217  002B                     i1l4323:
 14218  002B  0020               	movlb	0	; select bank0
 14219  002C  1E13               	btfss	19,4	;volatile
 14220  002D  282F               	goto	u171_21
 14221  002E  2830               	goto	u171_20
 14222  002F                     u171_21:
 14223  002F  2834               	goto	i1l720
 14224  0030                     u171_20:
 14225  0030                     i1l4325:
 14226                           
 14227                           ;interrupt_manager.c: 30:         {;interrupt_manager.c: 31:             TMR3_ISR();
 14228  0030  3189  21FB  3180   	fcall	_TMR3_ISR
 14229                           
 14230                           ;interrupt_manager.c: 32:         }
 14231  0033  288E               	goto	i1l733
 14232  0034                     i1l720:	
 14233                           ;interrupt_manager.c: 33:         else if(PIE4bits.CCP1IE == 1 && PIR4bits.CCP1IF == 1)
 14234                           
 14235  0034  0021               	movlb	1	; select bank1
 14236  0035  1C14               	btfss	20,0	;volatile
 14237  0036  2838               	goto	u172_21
 14238  0037  2839               	goto	u172_20
 14239  0038                     u172_21:
 14240  0038  2842               	goto	i1l722
 14241  0039                     u172_20:
 14242  0039                     i1l4327:
 14243  0039  0020               	movlb	0	; select bank0
 14244  003A  1C14               	btfss	20,0	;volatile
 14245  003B  283D               	goto	u173_21
 14246  003C  283E               	goto	u173_20
 14247  003D                     u173_21:
 14248  003D  2842               	goto	i1l722
 14249  003E                     u173_20:
 14250  003E                     i1l4329:
 14251                           
 14252                           ;interrupt_manager.c: 34:         {;interrupt_manager.c: 35:             CCP1_CaptureISR
      +                          ();
 14253  003E  318B  235B  3180   	fcall	_CCP1_CaptureISR
 14254                           
 14255                           ;interrupt_manager.c: 36:         }
 14256  0041  288E               	goto	i1l733
 14257  0042                     i1l722:	
 14258                           ;interrupt_manager.c: 37:         else if(PIE4bits.CCP3IE == 1 && PIR4bits.CCP3IF == 1)
 14259                           
 14260  0042  0021               	movlb	1	; select bank1
 14261  0043  1D14               	btfss	20,2	;volatile
 14262  0044  2846               	goto	u174_21
 14263  0045  2847               	goto	u174_20
 14264  0046                     u174_21:
 14265  0046  2850               	goto	i1l724
 14266  0047                     u174_20:
 14267  0047                     i1l4331:
 14268  0047  0020               	movlb	0	; select bank0
 14269  0048  1D14               	btfss	20,2	;volatile
 14270  0049  284B               	goto	u175_21
 14271  004A  284C               	goto	u175_20
 14272  004B                     u175_21:
 14273  004B  2850               	goto	i1l724
 14274  004C                     u175_20:
 14275  004C                     i1l4333:
 14276                           
 14277                           ;interrupt_manager.c: 38:         {;interrupt_manager.c: 39:             CCP3_CaptureISR
      +                          ();
 14278  004C  318B  2387  3180   	fcall	_CCP3_CaptureISR
 14279                           
 14280                           ;interrupt_manager.c: 40:         }
 14281  004F  288E               	goto	i1l733
 14282  0050                     i1l724:	
 14283                           ;interrupt_manager.c: 41:         else if(PIE4bits.CCP2IE == 1 && PIR4bits.CCP2IF == 1)
 14284                           
 14285  0050  0021               	movlb	1	; select bank1
 14286  0051  1C94               	btfss	20,1	;volatile
 14287  0052  2854               	goto	u176_21
 14288  0053  2855               	goto	u176_20
 14289  0054                     u176_21:
 14290  0054  285E               	goto	i1l726
 14291  0055                     u176_20:
 14292  0055                     i1l4335:
 14293  0055  0020               	movlb	0	; select bank0
 14294  0056  1C94               	btfss	20,1	;volatile
 14295  0057  2859               	goto	u177_21
 14296  0058  285A               	goto	u177_20
 14297  0059                     u177_21:
 14298  0059  285E               	goto	i1l726
 14299  005A                     u177_20:
 14300  005A                     i1l4337:
 14301                           
 14302                           ;interrupt_manager.c: 42:         {;interrupt_manager.c: 43:             CCP2_CaptureISR
      +                          ();
 14303  005A  318B  2371  3180   	fcall	_CCP2_CaptureISR
 14304                           
 14305                           ;interrupt_manager.c: 44:         }
 14306  005D  288E               	goto	i1l733
 14307  005E                     i1l726:	
 14308                           ;interrupt_manager.c: 45:         else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 14309                           
 14310  005E  0021               	movlb	1	; select bank1
 14311  005F  1C11               	btfss	17,0	;volatile
 14312  0060  2862               	goto	u178_21
 14313  0061  2863               	goto	u178_20
 14314  0062                     u178_21:
 14315  0062  286C               	goto	i1l728
 14316  0063                     u178_20:
 14317  0063                     i1l4339:
 14318  0063  0020               	movlb	0	; select bank0
 14319  0064  1C11               	btfss	17,0	;volatile
 14320  0065  2867               	goto	u179_21
 14321  0066  2868               	goto	u179_20
 14322  0067                     u179_21:
 14323  0067  286C               	goto	i1l728
 14324  0068                     u179_20:
 14325  0068                     i1l4341:
 14326                           
 14327                           ;interrupt_manager.c: 46:         {;interrupt_manager.c: 47:             TMR1_ISR();
 14328  0068  318A  229C  3180   	fcall	_TMR1_ISR
 14329                           
 14330                           ;interrupt_manager.c: 48:         }
 14331  006B  288E               	goto	i1l733
 14332  006C                     i1l728:	
 14333                           ;interrupt_manager.c: 49:         else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 14334                           
 14335  006C  0021               	movlb	1	; select bank1
 14336  006D  1E91               	btfss	17,5	;volatile
 14337  006E  2870               	goto	u180_21
 14338  006F  2871               	goto	u180_20
 14339  0070                     u180_21:
 14340  0070  287D               	goto	i1l730
 14341  0071                     u180_20:
 14342  0071                     i1l4343:
 14343  0071  0020               	movlb	0	; select bank0
 14344  0072  1E91               	btfss	17,5	;volatile
 14345  0073  2875               	goto	u181_21
 14346  0074  2876               	goto	u181_20
 14347  0075                     u181_21:
 14348  0075  287D               	goto	i1l730
 14349  0076                     u181_20:
 14350  0076                     i1l4345:
 14351                           
 14352                           ;interrupt_manager.c: 50:         {;interrupt_manager.c: 51:             EUSART_RxDefaul
      +                          tInterruptHandler();
 14353  0076  0021               	movlb	1	; select bank1
 14354  0077  0837               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 14355  0078  008A               	movwf	10
 14356  0079  0836               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 14357  007A  000A               	callw
 14358  007B  3180               	pagesel	$
 14359                           
 14360                           ;interrupt_manager.c: 52:         }
 14361  007C  288E               	goto	i1l733
 14362  007D                     i1l730:	
 14363                           ;interrupt_manager.c: 53:         else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 14364                           
 14365  007D  0021               	movlb	1	; select bank1
 14366  007E  1E11               	btfss	17,4	;volatile
 14367  007F  2881               	goto	u182_21
 14368  0080  2882               	goto	u182_20
 14369  0081                     u182_21:
 14370  0081  288E               	goto	i1l727
 14371  0082                     u182_20:
 14372  0082                     i1l4347:
 14373  0082  0020               	movlb	0	; select bank0
 14374  0083  1E11               	btfss	17,4	;volatile
 14375  0084  2886               	goto	u183_21
 14376  0085  2887               	goto	u183_20
 14377  0086                     u183_21:
 14378  0086  288E               	goto	i1l727
 14379  0087                     u183_20:
 14380  0087                     i1l4349:
 14381                           
 14382                           ;interrupt_manager.c: 54:         {;interrupt_manager.c: 55:             EUSART_TxDefaul
      +                          tInterruptHandler();
 14383  0087  0021               	movlb	1	; select bank1
 14384  0088  0839               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 14385  0089  008A               	movwf	10
 14386  008A  0838               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 14387  008B  000A               	callw
 14388  008C  3180               	pagesel	$
 14389  008D  288E               	goto	i1l733
 14390  008E                     i1l727:
 14391  008E                     i1l733:
 14392  008E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 14393  008F  0009               	retfie
 14394  0090                     __end_of_INTERRUPT_InterruptManager:
 14395                           
 14396                           	psect	text51
 14397  09FB                     __ptext51:	
 14398 ;; *************** function _TMR3_ISR *****************
 14399 ;; Defined at:
 14400 ;;		line 129 in file "tmr3.c"
 14401 ;; Parameters:    Size  Location     Type
 14402 ;;		None
 14403 ;; Auto vars:     Size  Location     Type
 14404 ;;		None
 14405 ;; Return value:  Size  Location     Type
 14406 ;;                  1    wreg      void 
 14407 ;; Registers used:
 14408 ;;		wreg, status,2, status,0, pclath, cstack
 14409 ;; Tracked objects:
 14410 ;;		On entry : 0/0
 14411 ;;		On exit  : 0/0
 14412 ;;		Unchanged: 0/0
 14413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14418 ;;Total ram usage:        0 bytes
 14419 ;; Hardware stack levels used: 1
 14420 ;; Hardware stack levels required when called: 2
 14421 ;; This function calls:
 14422 ;;		_TMR3_Reload
 14423 ;; This function is called by:
 14424 ;;		_INTERRUPT_InterruptManager
 14425 ;; This function uses a non-reentrant model
 14426 ;;
 14427                           
 14428  09FB                     _TMR3_ISR:	
 14429                           ;psect for function _TMR3_ISR
 14430                           
 14431  09FB                     i1l4225:	
 14432                           ;incstack = 0
 14433                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 14434                           
 14435                           
 14436                           ;tmr3.c: 132:     PIR3bits.TMR3IF = 0;
 14437  09FB  0020               	movlb	0	; select bank0
 14438  09FC  1213               	bcf	19,4	;volatile
 14439  09FD                     i1l4227:
 14440                           
 14441                           ;tmr3.c: 133:     TMR3_Reload();
 14442  09FD  318A  2224  3189   	fcall	_TMR3_Reload
 14443  0A00                     i1l1005:
 14444  0A00  0008               	return
 14445  0A01                     __end_of_TMR3_ISR:
 14446                           
 14447                           	psect	text52
 14448  0A24                     __ptext52:	
 14449 ;; *************** function _TMR3_Reload *****************
 14450 ;; Defined at:
 14451 ;;		line 108 in file "tmr3.c"
 14452 ;; Parameters:    Size  Location     Type
 14453 ;;		None
 14454 ;; Auto vars:     Size  Location     Type
 14455 ;;		None
 14456 ;; Return value:  Size  Location     Type
 14457 ;;                  1    wreg      void 
 14458 ;; Registers used:
 14459 ;;		wreg, status,2, status,0, pclath, cstack
 14460 ;; Tracked objects:
 14461 ;;		On entry : 0/0
 14462 ;;		On exit  : 0/0
 14463 ;;		Unchanged: 0/0
 14464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14469 ;;Total ram usage:        0 bytes
 14470 ;; Hardware stack levels used: 1
 14471 ;; Hardware stack levels required when called: 1
 14472 ;; This function calls:
 14473 ;;		_TMR3_WriteTimer
 14474 ;; This function is called by:
 14475 ;;		_TMR3_ISR
 14476 ;;		_SpeakerTone_Off
 14477 ;; This function uses a non-reentrant model
 14478 ;;
 14479                           
 14480  0A24                     _TMR3_Reload:	
 14481                           ;psect for function _TMR3_Reload
 14482                           
 14483  0A24                     i1l4017:	
 14484                           ;incstack = 0
 14485                           ; Regs used in _TMR3_Reload: [wreg+status,2+status,0+pclath+cstack]
 14486                           
 14487                           
 14488                           ;tmr3.c: 110:     TMR3_WriteTimer(timer3ReloadVal);
 14489  0A24  0021               	movlb	1	; select bank1
 14490  0A25  0829               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
 14491  0A26  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 14492  0A27  0828               	movf	_timer3ReloadVal^(0+128),w	;volatile
 14493  0A28  00F0               	movwf	TMR3_WriteTimer@timerVal
 14494  0A29  318A  22F0  318A   	fcall	_TMR3_WriteTimer
 14495  0A2C                     i1l996:
 14496  0A2C  0008               	return
 14497  0A2D                     __end_of_TMR3_Reload:
 14498                           
 14499                           	psect	text53
 14500  0AF0                     __ptext53:	
 14501 ;; *************** function _TMR3_WriteTimer *****************
 14502 ;; Defined at:
 14503 ;;		line 84 in file "tmr3.c"
 14504 ;; Parameters:    Size  Location     Type
 14505 ;;  timerVal        2    0[COMMON] unsigned short 
 14506 ;; Auto vars:     Size  Location     Type
 14507 ;;		None
 14508 ;; Return value:  Size  Location     Type
 14509 ;;                  1    wreg      void 
 14510 ;; Registers used:
 14511 ;;		wreg, status,2
 14512 ;; Tracked objects:
 14513 ;;		On entry : 0/0
 14514 ;;		On exit  : 0/0
 14515 ;;		Unchanged: 0/0
 14516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14520 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14521 ;;Total ram usage:        2 bytes
 14522 ;; Hardware stack levels used: 1
 14523 ;; This function calls:
 14524 ;;		Nothing
 14525 ;; This function is called by:
 14526 ;;		_TMR3_Reload
 14527 ;; This function uses a non-reentrant model
 14528 ;;
 14529                           
 14530  0AF0                     _TMR3_WriteTimer:	
 14531                           ;psect for function _TMR3_WriteTimer
 14532                           
 14533  0AF0                     i1l3729:	
 14534                           ;incstack = 0
 14535                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 14536                           
 14537                           
 14538                           ;tmr3.c: 84: void TMR3_WriteTimer(uint16_t timerVal);tmr3.c: 85: {;tmr3.c: 86:     if (T
      +                          3CONbits.T3SYNC == 1)
 14539  0AF0  0028               	movlb	8	; select bank8
 14540  0AF1  1D13               	btfss	19,2	;volatile
 14541  0AF2  2AF4               	goto	u129_21
 14542  0AF3  2AF5               	goto	u129_20
 14543  0AF4                     u129_21:
 14544  0AF4  2AFC               	goto	i1l3739
 14545  0AF5                     u129_20:
 14546  0AF5                     i1l3731:
 14547                           
 14548                           ;tmr3.c: 87:     {;tmr3.c: 89:         T3CONbits.TMR3ON = 0;
 14549  0AF5  1013               	bcf	19,0	;volatile
 14550  0AF6                     i1l3733:
 14551                           
 14552                           ;tmr3.c: 92:         TMR3H = (uint8_t)(timerVal >> 8);
 14553  0AF6  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14554  0AF7  0092               	movwf	18	;volatile
 14555  0AF8                     i1l3735:
 14556                           
 14557                           ;tmr3.c: 93:         TMR3L = (uint8_t)timerVal;
 14558  0AF8  0870               	movf	TMR3_WriteTimer@timerVal,w
 14559  0AF9  0091               	movwf	17	;volatile
 14560  0AFA                     i1l3737:
 14561                           
 14562                           ;tmr3.c: 96:         T3CONbits.TMR3ON =1;
 14563  0AFA  1413               	bsf	19,0	;volatile
 14564                           
 14565                           ;tmr3.c: 97:     }
 14566  0AFB  2B00               	goto	i1l993
 14567  0AFC                     i1l3739:
 14568                           
 14569                           ;tmr3.c: 99:     {;tmr3.c: 101:         TMR3H = (uint8_t)(timerVal >> 8);
 14570  0AFC  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14571  0AFD  0092               	movwf	18	;volatile
 14572  0AFE                     i1l3741:
 14573                           
 14574                           ;tmr3.c: 102:         TMR3L = (uint8_t)timerVal;
 14575  0AFE  0870               	movf	TMR3_WriteTimer@timerVal,w
 14576  0AFF  0091               	movwf	17	;volatile
 14577  0B00                     i1l993:
 14578  0B00  0008               	return
 14579  0B01                     __end_of_TMR3_WriteTimer:
 14580                           
 14581                           	psect	text54
 14582  0A9C                     __ptext54:	
 14583 ;; *************** function _TMR1_ISR *****************
 14584 ;; Defined at:
 14585 ;;		line 111 in file "tmr1.c"
 14586 ;; Parameters:    Size  Location     Type
 14587 ;;		None
 14588 ;; Auto vars:     Size  Location     Type
 14589 ;;		None
 14590 ;; Return value:  Size  Location     Type
 14591 ;;                  1    wreg      void 
 14592 ;; Registers used:
 14593 ;;		wreg, status,2, status,0, pclath, cstack
 14594 ;; Tracked objects:
 14595 ;;		On entry : 0/0
 14596 ;;		On exit  : 0/0
 14597 ;;		Unchanged: 0/0
 14598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14603 ;;Total ram usage:        0 bytes
 14604 ;; Hardware stack levels used: 1
 14605 ;; Hardware stack levels required when called: 1
 14606 ;; This function calls:
 14607 ;;		_TMR1_WriteTimer
 14608 ;; This function is called by:
 14609 ;;		_INTERRUPT_InterruptManager
 14610 ;; This function uses a non-reentrant model
 14611 ;;
 14612                           
 14613  0A9C                     _TMR1_ISR:	
 14614                           ;psect for function _TMR1_ISR
 14615                           
 14616  0A9C                     i1l4165:	
 14617                           ;incstack = 0
 14618                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 14619                           
 14620                           
 14621                           ;tmr1.c: 114:     PIR1bits.TMR1IF = 0;
 14622  0A9C  0020               	movlb	0	; select bank0
 14623  0A9D  1011               	bcf	17,0	;volatile
 14624  0A9E                     i1l4167:
 14625                           
 14626                           ;tmr1.c: 115:     TMR1_WriteTimer(timer1ReloadVal);
 14627  0A9E  0021               	movlb	1	; select bank1
 14628  0A9F  083B               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 14629  0AA0  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 14630  0AA1  083A               	movf	_timer1ReloadVal^(0+128),w	;volatile
 14631  0AA2  00F0               	movwf	TMR1_WriteTimer@timerVal
 14632  0AA3  318A  22DF  318A   	fcall	_TMR1_WriteTimer
 14633  0AA6                     i1l524:
 14634  0AA6  0008               	return
 14635  0AA7                     __end_of_TMR1_ISR:
 14636                           
 14637                           	psect	text55
 14638  0ADF                     __ptext55:	
 14639 ;; *************** function _TMR1_WriteTimer *****************
 14640 ;; Defined at:
 14641 ;;		line 80 in file "tmr1.c"
 14642 ;; Parameters:    Size  Location     Type
 14643 ;;  timerVal        2    0[COMMON] unsigned short 
 14644 ;; Auto vars:     Size  Location     Type
 14645 ;;		None
 14646 ;; Return value:  Size  Location     Type
 14647 ;;                  1    wreg      void 
 14648 ;; Registers used:
 14649 ;;		wreg, status,2
 14650 ;; Tracked objects:
 14651 ;;		On entry : 0/0
 14652 ;;		On exit  : 0/0
 14653 ;;		Unchanged: 0/0
 14654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14659 ;;Total ram usage:        2 bytes
 14660 ;; Hardware stack levels used: 1
 14661 ;; This function calls:
 14662 ;;		Nothing
 14663 ;; This function is called by:
 14664 ;;		_TMR1_ISR
 14665 ;;		_TMR1_Reload
 14666 ;; This function uses a non-reentrant model
 14667 ;;
 14668                           
 14669  0ADF                     _TMR1_WriteTimer:	
 14670                           ;psect for function _TMR1_WriteTimer
 14671                           
 14672  0ADF                     i1l3999:	
 14673                           ;incstack = 0
 14674                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 14675                           
 14676                           
 14677                           ;tmr1.c: 80: void TMR1_WriteTimer(uint16_t timerVal);tmr1.c: 81: {;tmr1.c: 82:     if (T
      +                          1CONbits.T1SYNC == 1)
 14678  0ADF  0020               	movlb	0	; select bank0
 14679  0AE0  1D1B               	btfss	27,2	;volatile
 14680  0AE1  2AE3               	goto	u135_21
 14681  0AE2  2AE4               	goto	u135_20
 14682  0AE3                     u135_21:
 14683  0AE3  2AEB               	goto	i1l4009
 14684  0AE4                     u135_20:
 14685  0AE4                     i1l4001:
 14686                           
 14687                           ;tmr1.c: 83:     {;tmr1.c: 85:         T1CONbits.TMR1ON = 0;
 14688  0AE4  101B               	bcf	27,0	;volatile
 14689  0AE5                     i1l4003:
 14690                           
 14691                           ;tmr1.c: 88:         TMR1H = (uint8_t)(timerVal >> 8);
 14692  0AE5  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 14693  0AE6  009A               	movwf	26	;volatile
 14694  0AE7                     i1l4005:
 14695                           
 14696                           ;tmr1.c: 89:         TMR1L = (uint8_t)timerVal;
 14697  0AE7  0870               	movf	TMR1_WriteTimer@timerVal,w
 14698  0AE8  0099               	movwf	25	;volatile
 14699  0AE9                     i1l4007:
 14700                           
 14701                           ;tmr1.c: 92:         T1CONbits.TMR1ON =1;
 14702  0AE9  141B               	bsf	27,0	;volatile
 14703                           
 14704                           ;tmr1.c: 93:     }
 14705  0AEA  2AEF               	goto	i1l518
 14706  0AEB                     i1l4009:
 14707                           
 14708                           ;tmr1.c: 95:     {;tmr1.c: 97:         TMR1H = (uint8_t)(timerVal >> 8);
 14709  0AEB  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 14710  0AEC  009A               	movwf	26	;volatile
 14711  0AED                     i1l4011:
 14712                           
 14713                           ;tmr1.c: 98:         TMR1L = (uint8_t)timerVal;
 14714  0AED  0870               	movf	TMR1_WriteTimer@timerVal,w
 14715  0AEE  0099               	movwf	25	;volatile
 14716  0AEF                     i1l518:
 14717  0AEF  0008               	return
 14718  0AF0                     __end_of_TMR1_WriteTimer:
 14719                           
 14720                           	psect	text56
 14721  0ACE                     __ptext56:	
 14722 ;; *************** function _TMR0_ISR *****************
 14723 ;; Defined at:
 14724 ;;		line 90 in file "tmr0.c"
 14725 ;; Parameters:    Size  Location     Type
 14726 ;;		None
 14727 ;; Auto vars:     Size  Location     Type
 14728 ;;		None
 14729 ;; Return value:  Size  Location     Type
 14730 ;;                  1    wreg      void 
 14731 ;; Registers used:
 14732 ;;		wreg, status,2, status,0, pclath, cstack
 14733 ;; Tracked objects:
 14734 ;;		On entry : 0/0
 14735 ;;		On exit  : 0/0
 14736 ;;		Unchanged: 0/0
 14737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14742 ;;Total ram usage:        1 bytes
 14743 ;; Hardware stack levels used: 1
 14744 ;; Hardware stack levels required when called: 2
 14745 ;; This function calls:
 14746 ;;		_TMR0_CallBack
 14747 ;; This function is called by:
 14748 ;;		_INTERRUPT_InterruptManager
 14749 ;; This function uses a non-reentrant model
 14750 ;;
 14751                           
 14752  0ACE                     _TMR0_ISR:	
 14753                           ;psect for function _TMR0_ISR
 14754                           
 14755  0ACE                     i1l4139:	
 14756                           ;incstack = 0
 14757                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 14758                           
 14759                           
 14760                           ;tmr0.c: 93:     PIR0bits.TMR0IF = 0;
 14761  0ACE  0020               	movlb	0	; select bank0
 14762  0ACF  1290               	bcf	16,5	;volatile
 14763  0AD0                     i1l4141:
 14764                           
 14765                           ;tmr0.c: 95:     if (++CountCallBack >= 4)
 14766  0AD0  3001               	movlw	1
 14767  0AD1  00F0               	movwf	??_TMR0_ISR
 14768  0AD2  0870               	movf	??_TMR0_ISR,w
 14769  0AD3  07FD               	addwf	_CountCallBack,f	;volatile
 14770  0AD4  3004               	movlw	4
 14771  0AD5  027D               	subwf	_CountCallBack,w	;volatile
 14772  0AD6  1C03               	skipc
 14773  0AD7  2AD9               	goto	u148_21
 14774  0AD8  2ADA               	goto	u148_20
 14775  0AD9                     u148_21:
 14776  0AD9  2ADE               	goto	i1l335
 14777  0ADA                     u148_20:
 14778  0ADA                     i1l4143:
 14779                           
 14780                           ;tmr0.c: 96:     {;tmr0.c: 98:         TMR0_CallBack();
 14781  0ADA  318A  2207  318A   	fcall	_TMR0_CallBack
 14782  0ADD                     i1l4145:
 14783                           
 14784                           ;tmr0.c: 101:         CountCallBack = 0;
 14785  0ADD  01FD               	clrf	_CountCallBack	;volatile
 14786  0ADE                     i1l335:
 14787  0ADE  0008               	return
 14788  0ADF                     __end_of_TMR0_ISR:
 14789                           
 14790                           	psect	text57
 14791  0A07                     __ptext57:	
 14792 ;; *************** function _TMR0_CallBack *****************
 14793 ;; Defined at:
 14794 ;;		line 109 in file "tmr0.c"
 14795 ;; Parameters:    Size  Location     Type
 14796 ;;		None
 14797 ;; Auto vars:     Size  Location     Type
 14798 ;;		None
 14799 ;; Return value:  Size  Location     Type
 14800 ;;                  1    wreg      void 
 14801 ;; Registers used:
 14802 ;;		wreg, status,2, status,0, pclath, cstack
 14803 ;; Tracked objects:
 14804 ;;		On entry : 0/0
 14805 ;;		On exit  : 0/0
 14806 ;;		Unchanged: 0/0
 14807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14812 ;;Total ram usage:        0 bytes
 14813 ;; Hardware stack levels used: 1
 14814 ;; Hardware stack levels required when called: 1
 14815 ;; This function calls:
 14816 ;;		_FRT_IncMicros
 14817 ;;		_FRT_IncMillis
 14818 ;; This function is called by:
 14819 ;;		_TMR0_ISR
 14820 ;; This function uses a non-reentrant model
 14821 ;;
 14822                           
 14823  0A07                     _TMR0_CallBack:	
 14824                           ;psect for function _TMR0_CallBack
 14825                           
 14826  0A07                     i1l3949:	
 14827                           ;incstack = 0
 14828                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 14829                           
 14830                           
 14831                           ;tmr0.c: 111:     FRT_IncMillis();
 14832  0A07  318A  2288  318A   	fcall	_FRT_IncMillis
 14833                           
 14834                           ;tmr0.c: 112:     FRT_IncMicros();
 14835  0A0A  318A  227E  318A   	fcall	_FRT_IncMicros
 14836  0A0D                     i1l338:
 14837  0A0D  0008               	return
 14838  0A0E                     __end_of_TMR0_CallBack:
 14839                           
 14840                           	psect	text58
 14841  0A88                     __ptext58:	
 14842 ;; *************** function _FRT_IncMillis *****************
 14843 ;; Defined at:
 14844 ;;		line 38 in file "FRT.c"
 14845 ;; Parameters:    Size  Location     Type
 14846 ;;		None
 14847 ;; Auto vars:     Size  Location     Type
 14848 ;;		None
 14849 ;; Return value:  Size  Location     Type
 14850 ;;                  1    wreg      void 
 14851 ;; Registers used:
 14852 ;;		wreg
 14853 ;; Tracked objects:
 14854 ;;		On entry : 0/0
 14855 ;;		On exit  : 0/0
 14856 ;;		Unchanged: 0/0
 14857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14862 ;;Total ram usage:        0 bytes
 14863 ;; Hardware stack levels used: 1
 14864 ;; This function calls:
 14865 ;;		Nothing
 14866 ;; This function is called by:
 14867 ;;		_TMR0_CallBack
 14868 ;; This function uses a non-reentrant model
 14869 ;;
 14870                           
 14871  0A88                     _FRT_IncMillis:	
 14872                           ;psect for function _FRT_IncMillis
 14873                           
 14874  0A88                     i1l3707:	
 14875                           ;incstack = 0
 14876                           ; Regs used in _FRT_IncMillis: [wreg]
 14877                           
 14878                           
 14879                           ;FRT.c: 39:     millis ++;
 14880  0A88  3001               	movlw	1
 14881  0A89  0022               	movlb	2	; select bank2
 14882  0A8A  07BC               	addwf	_millis^(0+256),f
 14883  0A8B  3000               	movlw	0
 14884  0A8C  3DBD               	addwfc	(_millis+1)^(0+256),f
 14885  0A8D  3000               	movlw	0
 14886  0A8E  3DBE               	addwfc	(_millis+2)^(0+256),f
 14887  0A8F  3000               	movlw	0
 14888  0A90  3DBF               	addwfc	(_millis+3)^(0+256),f
 14889  0A91                     i1l812:
 14890  0A91  0008               	return
 14891  0A92                     __end_of_FRT_IncMillis:
 14892                           
 14893                           	psect	text59
 14894  0A7E                     __ptext59:	
 14895 ;; *************** function _FRT_IncMicros *****************
 14896 ;; Defined at:
 14897 ;;		line 45 in file "FRT.c"
 14898 ;; Parameters:    Size  Location     Type
 14899 ;;		None
 14900 ;; Auto vars:     Size  Location     Type
 14901 ;;		None
 14902 ;; Return value:  Size  Location     Type
 14903 ;;                  1    wreg      void 
 14904 ;; Registers used:
 14905 ;;		wreg
 14906 ;; Tracked objects:
 14907 ;;		On entry : 0/0
 14908 ;;		On exit  : 0/0
 14909 ;;		Unchanged: 0/0
 14910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14915 ;;Total ram usage:        0 bytes
 14916 ;; Hardware stack levels used: 1
 14917 ;; This function calls:
 14918 ;;		Nothing
 14919 ;; This function is called by:
 14920 ;;		_TMR0_CallBack
 14921 ;; This function uses a non-reentrant model
 14922 ;;
 14923                           
 14924  0A7E                     _FRT_IncMicros:	
 14925                           ;psect for function _FRT_IncMicros
 14926                           
 14927  0A7E                     i1l3711:	
 14928                           ;incstack = 0
 14929                           ; Regs used in _FRT_IncMicros: [wreg]
 14930                           
 14931                           
 14932                           ;FRT.c: 46:     micros += 1000;
 14933  0A7E  30E8               	movlw	232
 14934  0A7F  0022               	movlb	2	; select bank2
 14935  0A80  07B8               	addwf	_micros@FRT$F1531^(0+256),f
 14936  0A81  3003               	movlw	3
 14937  0A82  3DB9               	addwfc	(_micros@FRT$F1531+1)^(0+256),f
 14938  0A83  3000               	movlw	0
 14939  0A84  3DBA               	addwfc	(_micros@FRT$F1531+2)^(0+256),f
 14940  0A85  3000               	movlw	0
 14941  0A86  3DBB               	addwfc	(_micros@FRT$F1531+3)^(0+256),f
 14942  0A87                     i1l815:
 14943  0A87  0008               	return
 14944  0A88                     __end_of_FRT_IncMicros:
 14945                           
 14946                           	psect	text60
 14947  0C51                     __ptext60:	
 14948 ;; *************** function _EUSART_Transmit_ISR *****************
 14949 ;; Defined at:
 14950 ;;		line 181 in file "eusart.c"
 14951 ;; Parameters:    Size  Location     Type
 14952 ;;		None
 14953 ;; Auto vars:     Size  Location     Type
 14954 ;;		None
 14955 ;; Return value:  Size  Location     Type
 14956 ;;                  1    wreg      void 
 14957 ;; Registers used:
 14958 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14959 ;; Tracked objects:
 14960 ;;		On entry : 0/0
 14961 ;;		On exit  : 0/0
 14962 ;;		Unchanged: 0/0
 14963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14968 ;;Total ram usage:        1 bytes
 14969 ;; Hardware stack levels used: 1
 14970 ;; This function calls:
 14971 ;;		Nothing
 14972 ;; This function is called by:
 14973 ;;		_EUSART_Initialize
 14974 ;;		_INTERRUPT_InterruptManager
 14975 ;; This function uses a non-reentrant model
 14976 ;;
 14977                           
 14978  0C51                     _EUSART_Transmit_ISR:	
 14979                           ;psect for function _EUSART_Transmit_ISR
 14980                           
 14981  0C51                     i1l4191:	
 14982                           ;incstack = 0
 14983                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 14984                           
 14985                           
 14986                           ;eusart.c: 185:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 14987  0C51  3008               	movlw	8
 14988  0C52  0021               	movlb	1	; select bank1
 14989  0C53  0252               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 14990  0C54  1803               	skipnc
 14991  0C55  2C57               	goto	u151_21
 14992  0C56  2C58               	goto	u151_20
 14993  0C57                     u151_21:
 14994  0C57  2C71               	goto	i1l636
 14995  0C58                     u151_20:
 14996  0C58                     i1l4193:
 14997                           
 14998                           ;eusart.c: 186:     {;eusart.c: 187:         TX1REG = eusartTxBuffer[eusartTxTail++];
 14999  0C58  0853               	movf	_eusartTxTail^(0+128),w
 15000  0C59  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 15001  0C5A  0086               	movwf	6
 15002  0C5B  3001               	movlw	1	; select bank2/3
 15003  0C5C  0087               	movwf	7
 15004  0C5D  0801               	movf	1,w
 15005  0C5E  0023               	movlb	3	; select bank3
 15006  0C5F  009A               	movwf	26	;volatile
 15007  0C60                     i1l4195:
 15008  0C60  3001               	movlw	1
 15009  0C61  00F0               	movwf	??_EUSART_Transmit_ISR
 15010  0C62  0870               	movf	??_EUSART_Transmit_ISR,w
 15011  0C63  0021               	movlb	1	; select bank1
 15012  0C64  07D3               	addwf	_eusartTxTail^(0+128),f	;volatile
 15013  0C65                     i1l4197:
 15014                           
 15015                           ;eusart.c: 188:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 15016  0C65  3008               	movlw	8
 15017  0C66  0253               	subwf	_eusartTxTail^(0+128),w	;volatile
 15018  0C67  1C03               	skipc
 15019  0C68  2C6A               	goto	u152_21
 15020  0C69  2C6B               	goto	u152_20
 15021  0C6A                     u152_21:
 15022  0C6A  2C6C               	goto	i1l4201
 15023  0C6B                     u152_20:
 15024  0C6B                     i1l4199:
 15025                           
 15026                           ;eusart.c: 189:         {;eusart.c: 190:             eusartTxTail = 0;
 15027  0C6B  01D3               	clrf	_eusartTxTail^(0+128)	;volatile
 15028  0C6C                     i1l4201:
 15029                           
 15030                           ;eusart.c: 192:         eusartTxBufferRemaining++;
 15031  0C6C  3001               	movlw	1
 15032  0C6D  00F0               	movwf	??_EUSART_Transmit_ISR
 15033  0C6E  0870               	movf	??_EUSART_Transmit_ISR,w
 15034  0C6F  07D2               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 15035                           
 15036                           ;eusart.c: 193:     }
 15037  0C70  2C72               	goto	i1l639
 15038  0C71                     i1l636:	
 15039                           ;eusart.c: 194:     else
 15040                           
 15041                           
 15042                           ;eusart.c: 195:     {;eusart.c: 196:         PIE1bits.TXIE = 0;
 15043  0C71  1211               	bcf	17,4	;volatile
 15044  0C72                     i1l639:
 15045  0C72  0008               	return
 15046  0C73                     __end_of_EUSART_Transmit_ISR:
 15047                           
 15048                           	psect	text61
 15049  0E45                     __ptext61:	
 15050 ;; *************** function _EUSART_Receive_ISR *****************
 15051 ;; Defined at:
 15052 ;;		line 202 in file "eusart.c"
 15053 ;; Parameters:    Size  Location     Type
 15054 ;;		None
 15055 ;; Auto vars:     Size  Location     Type
 15056 ;;		None
 15057 ;; Return value:  Size  Location     Type
 15058 ;;                  1    wreg      void 
 15059 ;; Registers used:
 15060 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15061 ;; Tracked objects:
 15062 ;;		On entry : 0/0
 15063 ;;		On exit  : 0/0
 15064 ;;		Unchanged: 0/0
 15065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15070 ;;Total ram usage:        0 bytes
 15071 ;; Hardware stack levels used: 1
 15072 ;; Hardware stack levels required when called: 2
 15073 ;; This function calls:
 15074 ;;		Absolute function
 15075 ;;		_EUSART_DefaultErrorHandler
 15076 ;;		_EUSART_DefaultFramingErrorHandler
 15077 ;;		_EUSART_DefaultOverrunErrorHandler
 15078 ;;		_EUSART_RxDataHandler
 15079 ;; This function is called by:
 15080 ;;		_EUSART_Initialize
 15081 ;;		_INTERRUPT_InterruptManager
 15082 ;; This function uses a non-reentrant model
 15083 ;;
 15084                           
 15085  0E45                     _EUSART_Receive_ISR:	
 15086                           ;psect for function _EUSART_Receive_ISR
 15087                           
 15088  0E45                     i1l4203:	
 15089                           ;incstack = 0
 15090                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15091                           
 15092                           
 15093                           ;eusart.c: 205:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 15094  0E45  087B               	movf	_eusartRxHead,w	;volatile
 15095  0E46  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15096  0E47  0086               	movwf	6
 15097  0E48  3001               	movlw	1	; select bank2/3
 15098  0E49  0087               	movwf	7
 15099  0E4A  0181               	clrf	1
 15100  0E4B                     i1l4205:
 15101                           
 15102                           ;eusart.c: 207:     if(RC1STAbits.FERR){
 15103  0E4B  0023               	movlb	3	; select bank3
 15104  0E4C  1D1D               	btfss	29,2	;volatile
 15105  0E4D  2E4F               	goto	u153_21
 15106  0E4E  2E50               	goto	u153_20
 15107  0E4F                     u153_21:
 15108  0E4F  2E5C               	goto	i1l4211
 15109  0E50                     u153_20:
 15110  0E50                     i1l4207:
 15111                           
 15112                           ;eusart.c: 208:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 15113  0E50  087B               	movf	_eusartRxHead,w	;volatile
 15114  0E51  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15115  0E52  0086               	movwf	6
 15116  0E53  3001               	movlw	1	; select bank2/3
 15117  0E54  0087               	movwf	7
 15118  0E55  1481               	bsf	1,1
 15119  0E56                     i1l4209:
 15120                           
 15121                           ;eusart.c: 209:         EUSART_FramingErrorHandler();
 15122  0E56  0021               	movlb	1	; select bank1
 15123  0E57  0835               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 15124  0E58  008A               	movwf	10
 15125  0E59  0834               	movf	_EUSART_FramingErrorHandler^(0+128),w
 15126  0E5A  000A               	callw
 15127  0E5B  318E               	pagesel	$
 15128  0E5C                     i1l4211:
 15129                           
 15130                           ;eusart.c: 212:     if(RC1STAbits.OERR){
 15131  0E5C  0023               	movlb	3	; select bank3
 15132  0E5D  1C9D               	btfss	29,1	;volatile
 15133  0E5E  2E60               	goto	u154_21
 15134  0E5F  2E61               	goto	u154_20
 15135  0E60                     u154_21:
 15136  0E60  2E6D               	goto	i1l4217
 15137  0E61                     u154_20:
 15138  0E61                     i1l4213:
 15139                           
 15140                           ;eusart.c: 213:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 15141  0E61  087B               	movf	_eusartRxHead,w	;volatile
 15142  0E62  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15143  0E63  0086               	movwf	6
 15144  0E64  3001               	movlw	1	; select bank2/3
 15145  0E65  0087               	movwf	7
 15146  0E66  1501               	bsf	1,2
 15147  0E67                     i1l4215:
 15148                           
 15149                           ;eusart.c: 214:         EUSART_OverrunErrorHandler();
 15150  0E67  0021               	movlb	1	; select bank1
 15151  0E68  0833               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 15152  0E69  008A               	movwf	10
 15153  0E6A  0832               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 15154  0E6B  000A               	callw
 15155  0E6C  318E               	pagesel	$
 15156  0E6D                     i1l4217:
 15157                           
 15158                           ;eusart.c: 217:     if(eusartRxStatusBuffer[eusartRxHead].status){
 15159  0E6D  087B               	movf	_eusartRxHead,w	;volatile
 15160  0E6E  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15161  0E6F  0086               	movwf	6
 15162  0E70  3001               	movlw	1	; select bank2/3
 15163  0E71  0087               	movwf	7
 15164  0E72  0801               	movf	1,w
 15165  0E73  1903               	btfsc	3,2
 15166  0E74  2E76               	goto	u155_21
 15167  0E75  2E77               	goto	u155_20
 15168  0E76                     u155_21:
 15169  0E76  2E7E               	goto	i1l4221
 15170  0E77                     u155_20:
 15171  0E77                     i1l4219:
 15172                           
 15173                           ;eusart.c: 218:         EUSART_ErrorHandler();
 15174  0E77  0021               	movlb	1	; select bank1
 15175  0E78  0831               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 15176  0E79  008A               	movwf	10
 15177  0E7A  0830               	movf	_EUSART_ErrorHandler^(0+128),w
 15178  0E7B  000A               	callw
 15179  0E7C  318E               	pagesel	$
 15180                           
 15181                           ;eusart.c: 219:     } else {
 15182  0E7D  2E81               	goto	i1l646
 15183  0E7E                     i1l4221:
 15184                           
 15185                           ;eusart.c: 220:         EUSART_RxDataHandler();
 15186  0E7E  318B  23FB  318E   	fcall	_EUSART_RxDataHandler
 15187  0E81                     i1l646:
 15188  0E81  0008               	return
 15189  0E82                     __end_of_EUSART_Receive_ISR:
 15190                           
 15191                           	psect	text62
 15192  09F3                     __ptext62:	
 15193 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 15194 ;; Defined at:
 15195 ;;		line 244 in file "eusart.c"
 15196 ;; Parameters:    Size  Location     Type
 15197 ;;		None
 15198 ;; Auto vars:     Size  Location     Type
 15199 ;;		None
 15200 ;; Return value:  Size  Location     Type
 15201 ;;                  1    wreg      void 
 15202 ;; Registers used:
 15203 ;;		None
 15204 ;; Tracked objects:
 15205 ;;		On entry : 0/0
 15206 ;;		On exit  : 0/0
 15207 ;;		Unchanged: 0/0
 15208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15213 ;;Total ram usage:        0 bytes
 15214 ;; Hardware stack levels used: 1
 15215 ;; This function calls:
 15216 ;;		Nothing
 15217 ;; This function is called by:
 15218 ;;		_EUSART_Initialize
 15219 ;;		_EUSART_Receive_ISR
 15220 ;; This function uses a non-reentrant model
 15221 ;;
 15222                           
 15223  09F3                     _EUSART_DefaultOverrunErrorHandler:	
 15224                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 15225                           
 15226  09F3                     i1l4013:	
 15227                           ;incstack = 0
 15228                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 15229                           
 15230                           
 15231                           ;eusart.c: 247:     RC1STAbits.CREN = 0;
 15232  09F3  0023               	movlb	3	; select bank3
 15233  09F4  121D               	bcf	29,4	;volatile
 15234                           
 15235                           ;eusart.c: 248:     RC1STAbits.CREN = 1;
 15236  09F5  161D               	bsf	29,4	;volatile
 15237  09F6                     i1l656:
 15238  09F6  0008               	return
 15239  09F7                     __end_of_EUSART_DefaultOverrunErrorHandler:
 15240                           
 15241                           	psect	text63
 15242  07FF                     __ptext63:	
 15243 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 15244 ;; Defined at:
 15245 ;;		line 240 in file "eusart.c"
 15246 ;; Parameters:    Size  Location     Type
 15247 ;;		None
 15248 ;; Auto vars:     Size  Location     Type
 15249 ;;		None
 15250 ;; Return value:  Size  Location     Type
 15251 ;;                  1    wreg      void 
 15252 ;; Registers used:
 15253 ;;		None
 15254 ;; Tracked objects:
 15255 ;;		On entry : 0/0
 15256 ;;		On exit  : 0/0
 15257 ;;		Unchanged: 0/0
 15258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15263 ;;Total ram usage:        0 bytes
 15264 ;; Hardware stack levels used: 1
 15265 ;; This function calls:
 15266 ;;		Nothing
 15267 ;; This function is called by:
 15268 ;;		_EUSART_Initialize
 15269 ;;		_EUSART_Receive_ISR
 15270 ;; This function uses a non-reentrant model
 15271 ;;
 15272                           
 15273  07FF                     _EUSART_DefaultFramingErrorHandler:	
 15274                           ;psect for function _EUSART_DefaultFramingErrorHandler
 15275                           
 15276  07FF                     i1l653:	
 15277                           ;incstack = 0
 15278                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 15279                           
 15280  07FF  0008               	return
 15281  0800                     __end_of_EUSART_DefaultFramingErrorHandler:
 15282                           
 15283                           	psect	text64
 15284  09EF                     __ptext64:	
 15285 ;; *************** function _EUSART_DefaultErrorHandler *****************
 15286 ;; Defined at:
 15287 ;;		line 254 in file "eusart.c"
 15288 ;; Parameters:    Size  Location     Type
 15289 ;;		None
 15290 ;; Auto vars:     Size  Location     Type
 15291 ;;		None
 15292 ;; Return value:  Size  Location     Type
 15293 ;;                  1    wreg      void 
 15294 ;; Registers used:
 15295 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15296 ;; Tracked objects:
 15297 ;;		On entry : 0/0
 15298 ;;		On exit  : 0/0
 15299 ;;		Unchanged: 0/0
 15300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15305 ;;Total ram usage:        0 bytes
 15306 ;; Hardware stack levels used: 1
 15307 ;; Hardware stack levels required when called: 1
 15308 ;; This function calls:
 15309 ;;		_EUSART_RxDataHandler
 15310 ;; This function is called by:
 15311 ;;		_EUSART_Initialize
 15312 ;;		_EUSART_Receive_ISR
 15313 ;; This function uses a non-reentrant model
 15314 ;;
 15315                           
 15316  09EF                     _EUSART_DefaultErrorHandler:	
 15317                           ;psect for function _EUSART_DefaultErrorHandler
 15318                           
 15319  09EF                     i1l4015:	
 15320                           ;incstack = 0
 15321                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 15322                           
 15323                           
 15324                           ;eusart.c: 255:     EUSART_RxDataHandler();
 15325  09EF  318B  23FB  3189   	fcall	_EUSART_RxDataHandler
 15326  09F2                     i1l659:
 15327  09F2  0008               	return
 15328  09F3                     __end_of_EUSART_DefaultErrorHandler:
 15329                           
 15330                           	psect	text65
 15331  0BFB                     __ptext65:	
 15332 ;; *************** function _EUSART_RxDataHandler *****************
 15333 ;; Defined at:
 15334 ;;		line 228 in file "eusart.c"
 15335 ;; Parameters:    Size  Location     Type
 15336 ;;		None
 15337 ;; Auto vars:     Size  Location     Type
 15338 ;;		None
 15339 ;; Return value:  Size  Location     Type
 15340 ;;                  1    wreg      void 
 15341 ;; Registers used:
 15342 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15343 ;; Tracked objects:
 15344 ;;		On entry : 0/0
 15345 ;;		On exit  : 0/0
 15346 ;;		Unchanged: 0/0
 15347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15351 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15352 ;;Total ram usage:        1 bytes
 15353 ;; Hardware stack levels used: 1
 15354 ;; This function calls:
 15355 ;;		Nothing
 15356 ;; This function is called by:
 15357 ;;		_EUSART_Receive_ISR
 15358 ;;		_EUSART_DefaultErrorHandler
 15359 ;; This function uses a non-reentrant model
 15360 ;;
 15361                           
 15362  0BFB                     _EUSART_RxDataHandler:	
 15363                           ;psect for function _EUSART_RxDataHandler
 15364                           
 15365  0BFB                     i1l3719:	
 15366                           ;incstack = 0
 15367                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 15368                           
 15369                           
 15370                           ;eusart.c: 230:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 15371  0BFB  0023               	movlb	3	; select bank3
 15372  0BFC  0819               	movf	25,w	;volatile
 15373  0BFD  00F0               	movwf	??_EUSART_RxDataHandler
 15374  0BFE  087B               	movf	_eusartRxHead,w
 15375  0BFF  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 15376  0C00  0086               	movwf	6
 15377  0C01  3001               	movlw	1	; select bank2/3
 15378  0C02  0087               	movwf	7
 15379  0C03  0870               	movf	??_EUSART_RxDataHandler,w
 15380  0C04  0081               	movwf	1
 15381  0C05                     i1l3721:
 15382  0C05  3001               	movlw	1
 15383  0C06  00F0               	movwf	??_EUSART_RxDataHandler
 15384  0C07  0870               	movf	??_EUSART_RxDataHandler,w
 15385  0C08  07FB               	addwf	_eusartRxHead,f	;volatile
 15386  0C09                     i1l3723:
 15387                           
 15388                           ;eusart.c: 231:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 15389  0C09  3008               	movlw	8
 15390  0C0A  027B               	subwf	_eusartRxHead,w	;volatile
 15391  0C0B  1C03               	skipc
 15392  0C0C  2C0E               	goto	u128_21
 15393  0C0D  2C0F               	goto	u128_20
 15394  0C0E                     u128_21:
 15395  0C0E  2C10               	goto	i1l3727
 15396  0C0F                     u128_20:
 15397  0C0F                     i1l3725:
 15398                           
 15399                           ;eusart.c: 232:     {;eusart.c: 233:         eusartRxHead = 0;
 15400  0C0F  01FB               	clrf	_eusartRxHead	;volatile
 15401  0C10                     i1l3727:
 15402                           
 15403                           ;eusart.c: 235:     eusartRxCount++;
 15404  0C10  3001               	movlw	1
 15405  0C11  00F0               	movwf	??_EUSART_RxDataHandler
 15406  0C12  0870               	movf	??_EUSART_RxDataHandler,w
 15407  0C13  0021               	movlb	1	; select bank1
 15408  0C14  07D1               	addwf	_eusartRxCount^(0+128),f	;volatile
 15409  0C15                     i1l650:
 15410  0C15  0008               	return
 15411  0C16                     __end_of_EUSART_RxDataHandler:
 15412                           
 15413                           	psect	text66
 15414  09EC                     __ptext66:	
 15415 ;; *************** function _CCP4_CompareISR *****************
 15416 ;; Defined at:
 15417 ;;		line 60 in file "ccp4.c"
 15418 ;; Parameters:    Size  Location     Type
 15419 ;;		None
 15420 ;; Auto vars:     Size  Location     Type
 15421 ;;		None
 15422 ;; Return value:  Size  Location     Type
 15423 ;;                  1    wreg      void 
 15424 ;; Registers used:
 15425 ;;		None
 15426 ;; Tracked objects:
 15427 ;;		On entry : 0/0
 15428 ;;		On exit  : 0/0
 15429 ;;		Unchanged: 0/0
 15430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15435 ;;Total ram usage:        0 bytes
 15436 ;; Hardware stack levels used: 1
 15437 ;; This function calls:
 15438 ;;		Nothing
 15439 ;; This function is called by:
 15440 ;;		_INTERRUPT_InterruptManager
 15441 ;; This function uses a non-reentrant model
 15442 ;;
 15443                           
 15444  09EC                     _CCP4_CompareISR:	
 15445                           ;psect for function _CCP4_CompareISR
 15446                           
 15447  09EC                     i1l4223:	
 15448                           ;incstack = 0
 15449                           ; Regs used in _CCP4_CompareISR: []
 15450                           
 15451                           
 15452                           ;ccp4.c: 63:     PIR4bits.CCP4IF = 0;
 15453  09EC  0020               	movlb	0	; select bank0
 15454  09ED  1194               	bcf	20,3	;volatile
 15455  09EE                     i1l908:
 15456  09EE  0008               	return
 15457  09EF                     __end_of_CCP4_CompareISR:
 15458                           
 15459                           	psect	text67
 15460  0B87                     __ptext67:	
 15461 ;; *************** function _CCP3_CaptureISR *****************
 15462 ;; Defined at:
 15463 ;;		line 78 in file "ccp3.c"
 15464 ;; Parameters:    Size  Location     Type
 15465 ;;		None
 15466 ;; Auto vars:     Size  Location     Type
 15467 ;;  module          2    8[COMMON] struct CCPR3Reg_tag
 15468 ;; Return value:  Size  Location     Type
 15469 ;;                  1    wreg      void 
 15470 ;; Registers used:
 15471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15472 ;; Tracked objects:
 15473 ;;		On entry : 0/0
 15474 ;;		On exit  : 0/0
 15475 ;;		Unchanged: 0/0
 15476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15478 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15480 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15481 ;;Total ram usage:        3 bytes
 15482 ;; Hardware stack levels used: 1
 15483 ;; Hardware stack levels required when called: 2
 15484 ;; This function calls:
 15485 ;;		Absolute function
 15486 ;;		_CCP3_DefaultCallBack
 15487 ;; This function is called by:
 15488 ;;		_INTERRUPT_InterruptManager
 15489 ;; This function uses a non-reentrant model
 15490 ;;
 15491                           
 15492  0B87                     _CCP3_CaptureISR:	
 15493                           ;psect for function _CCP3_CaptureISR
 15494                           
 15495  0B87                     i1l4159:	
 15496                           ;incstack = 0
 15497                           ; Regs used in _CCP3_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15498                           
 15499                           
 15500                           ;ccp3.c: 80:     CCP3_PERIOD_REG_T module;;ccp3.c: 83:     PIR4bits.CCP3IF = 0;
 15501  0B87  0020               	movlb	0	; select bank0
 15502  0B88  1114               	bcf	20,2	;volatile
 15503  0B89                     i1l4161:
 15504                           
 15505                           ;ccp3.c: 86:     module.ccpr3l = CCPR3L;
 15506  0B89  0026               	movlb	6	; select bank6
 15507  0B8A  0811               	movf	17,w	;volatile
 15508  0B8B  00F7               	movwf	??_CCP3_CaptureISR
 15509  0B8C  0877               	movf	??_CCP3_CaptureISR,w
 15510  0B8D  00F8               	movwf	CCP3_CaptureISR@module
 15511                           
 15512                           ;ccp3.c: 87:     module.ccpr3h = CCPR3H;
 15513  0B8E  0812               	movf	18,w	;volatile
 15514  0B8F  00F7               	movwf	??_CCP3_CaptureISR
 15515  0B90  0877               	movf	??_CCP3_CaptureISR,w
 15516  0B91  00F9               	movwf	CCP3_CaptureISR@module+1
 15517  0B92                     i1l4163:
 15518                           
 15519                           ;ccp3.c: 90:     CCP3_CallBack(module.ccpr3_16Bit);
 15520  0B92  0879               	movf	CCP3_CaptureISR@module+1,w
 15521  0B93  00F4               	movwf	CCP3_DefaultCallBack@capturedValue+1
 15522  0B94  0878               	movf	CCP3_CaptureISR@module,w
 15523  0B95  00F3               	movwf	CCP3_DefaultCallBack@capturedValue
 15524  0B96  0021               	movlb	1	; select bank1
 15525  0B97  0841               	movf	(_CCP3_CallBack+1)^(0+128),w
 15526  0B98  008A               	movwf	10
 15527  0B99  0840               	movf	_CCP3_CallBack^(0+128),w
 15528  0B9A  000A               	callw
 15529  0B9B  318B               	pagesel	$
 15530  0B9C                     i1l482:
 15531  0B9C  0008               	return
 15532  0B9D                     __end_of_CCP3_CaptureISR:
 15533                           
 15534                           	psect	text68
 15535  0DCF                     __ptext68:	
 15536 ;; *************** function _CCP3_DefaultCallBack *****************
 15537 ;; Defined at:
 15538 ;;		line 29 in file "ccp3.c"
 15539 ;; Parameters:    Size  Location     Type
 15540 ;;  capturedValu    2    3[COMMON] unsigned short 
 15541 ;; Auto vars:     Size  Location     Type
 15542 ;;		None
 15543 ;; Return value:  Size  Location     Type
 15544 ;;                  1    wreg      void 
 15545 ;; Registers used:
 15546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15547 ;; Tracked objects:
 15548 ;;		On entry : 0/0
 15549 ;;		On exit  : 0/0
 15550 ;;		Unchanged: 0/0
 15551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15552 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15555 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15556 ;;Total ram usage:        4 bytes
 15557 ;; Hardware stack levels used: 1
 15558 ;; Hardware stack levels required when called: 1
 15559 ;; This function calls:
 15560 ;;		_JSN_GetLastTrig
 15561 ;;		_ReadPin
 15562 ;; This function is called by:
 15563 ;;		_CCP3_Initialize
 15564 ;;		_CCP3_CaptureISR
 15565 ;; This function uses a non-reentrant model
 15566 ;;
 15567                           
 15568  0DCF                     _CCP3_DefaultCallBack:	
 15569                           ;psect for function _CCP3_DefaultCallBack
 15570                           
 15571  0DCF                     i1l3983:	
 15572                           ;incstack = 0
 15573                           ; Regs used in _CCP3_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15574                           
 15575                           
 15576                           ;ccp3.c: 29: static void CCP3_DefaultCallBack(uint16_t capturedValue);ccp3.c: 30: {;ccp3
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 15577  0DCF  3189  21E9  318D   	fcall	_JSN_GetLastTrig
 15578  0DD2  00F5               	movwf	??_CCP3_DefaultCallBack
 15579  0DD3  0875               	movf	??_CCP3_DefaultCallBack,w
 15580  0DD4  0021               	movlb	1	; select bank1
 15581  0DD5  00D4               	movwf	_lastTrig@ccp3$F992^(0+128)
 15582                           
 15583                           ;ccp3.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 15584  0DD6  2DF1               	goto	i1l3993
 15585  0DD7                     i1l3985:
 15586                           
 15587                           ;ccp3.c: 35:             ticksUp = capturedValue;
 15588  0DD7  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 15589  0DD8  0021               	movlb	1	; select bank1
 15590  0DD9  00BF               	movwf	(_ticksUp@ccp3$F989+1)^(0+128)
 15591  0DDA  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 15592  0DDB  00BE               	movwf	_ticksUp@ccp3$F989^(0+128)
 15593                           
 15594                           ;ccp3.c: 36:             break;
 15595  0DDC  2E09               	goto	i1l476
 15596  0DDD                     i1l3987:
 15597                           
 15598                           ;ccp3.c: 39:             ticksDown = capturedValue;
 15599  0DDD  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 15600  0DDE  0021               	movlb	1	; select bank1
 15601  0DDF  00BD               	movwf	(_ticksDown@ccp3$F990+1)^(0+128)
 15602  0DE0  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 15603  0DE1  00BC               	movwf	_ticksDown@ccp3$F990^(0+128)
 15604  0DE2                     i1l3989:
 15605                           
 15606                           ;ccp3.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 15607  0DE2  083E               	movf	_ticksUp@ccp3$F989^(0+128),w
 15608  0DE3  023C               	subwf	_ticksDown@ccp3$F990^(0+128),w
 15609  0DE4  00F5               	movwf	??_CCP3_DefaultCallBack
 15610  0DE5  083F               	movf	(_ticksUp@ccp3$F989+1)^(0+128),w
 15611  0DE6  3B3D               	subwfb	(_ticksDown@ccp3$F990+1)^(0+128),w
 15612  0DE7  00F6               	movwf	??_CCP3_DefaultCallBack+1
 15613  0DE8  0854               	movf	_lastTrig@ccp3$F992^(0+128),w
 15614  0DE9  0086               	movwf	6
 15615  0DEA  3001               	movlw	1	; select bank2/3
 15616  0DEB  0087               	movwf	7
 15617  0DEC  0875               	movf	??_CCP3_DefaultCallBack,w
 15618  0DED  3FC0               	movwi [0]fsr1
 15619  0DEE  0876               	movf	??_CCP3_DefaultCallBack+1,w
 15620  0DEF  3FC1               	movwi [1]fsr1
 15621                           
 15622                           ;ccp3.c: 43:             break;
 15623  0DF0  2E09               	goto	i1l476
 15624  0DF1                     i1l3993:
 15625  0DF1  0854               	movf	_lastTrig@ccp3$F992^(0+128),w
 15626  0DF2  3E05               	addlw	5
 15627  0DF3  0086               	movwf	6
 15628  0DF4  3001               	movlw	1	; select bank2/3
 15629  0DF5  0087               	movwf	7
 15630  0DF6  0801               	movf	1,w
 15631  0DF7  3185  25CC  318D   	fcall	_ReadPin
 15632  0DFA  00F5               	movwf	??_CCP3_DefaultCallBack
 15633  0DFB  01F6               	clrf	??_CCP3_DefaultCallBack+1
 15634                           
 15635                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15636                           ; Switch size 1, requested type "simple"
 15637                           ; Number of cases is 1, Range of values is 0 to 0
 15638                           ; switch strategies available:
 15639                           ; Name         Instructions Cycles
 15640                           ; simple_byte            4     3 (average)
 15641                           ; direct_byte            8     6 (fixed)
 15642                           ; jumptable            260     6 (fixed)
 15643                           ;	Chosen strategy is simple_byte
 15644  0DFC  0876               	movf	??_CCP3_DefaultCallBack+1,w
 15645  0DFD  3A00               	xorlw	0	; case 0
 15646  0DFE  1903               	skipnz
 15647  0DFF  2E01               	goto	i1l4695
 15648  0E00  2E09               	goto	i1l476
 15649  0E01                     i1l4695:
 15650                           
 15651                           ; Switch size 1, requested type "simple"
 15652                           ; Number of cases is 2, Range of values is 0 to 1
 15653                           ; switch strategies available:
 15654                           ; Name         Instructions Cycles
 15655                           ; simple_byte            7     4 (average)
 15656                           ; direct_byte           10     6 (fixed)
 15657                           ; jumptable            260     6 (fixed)
 15658                           ;	Chosen strategy is simple_byte
 15659  0E01  0875               	movf	??_CCP3_DefaultCallBack,w
 15660  0E02  3A00               	xorlw	0	; case 0
 15661  0E03  1903               	skipnz
 15662  0E04  2DDD               	goto	i1l3987
 15663  0E05  3A01               	xorlw	1	; case 1
 15664  0E06  1903               	skipnz
 15665  0E07  2DD7               	goto	i1l3985
 15666  0E08  2E09               	goto	i1l476
 15667  0E09                     i1l476:
 15668  0E09  0008               	return
 15669  0E0A                     __end_of_CCP3_DefaultCallBack:
 15670                           
 15671                           	psect	text69
 15672  0B71                     __ptext69:	
 15673 ;; *************** function _CCP2_CaptureISR *****************
 15674 ;; Defined at:
 15675 ;;		line 78 in file "ccp2.c"
 15676 ;; Parameters:    Size  Location     Type
 15677 ;;		None
 15678 ;; Auto vars:     Size  Location     Type
 15679 ;;  module          2    8[COMMON] struct CCPR2Reg_tag
 15680 ;; Return value:  Size  Location     Type
 15681 ;;                  1    wreg      void 
 15682 ;; Registers used:
 15683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15684 ;; Tracked objects:
 15685 ;;		On entry : 0/0
 15686 ;;		On exit  : 0/0
 15687 ;;		Unchanged: 0/0
 15688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15690 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15692 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15693 ;;Total ram usage:        3 bytes
 15694 ;; Hardware stack levels used: 1
 15695 ;; Hardware stack levels required when called: 2
 15696 ;; This function calls:
 15697 ;;		Absolute function
 15698 ;;		_CCP2_DefaultCallBack
 15699 ;; This function is called by:
 15700 ;;		_INTERRUPT_InterruptManager
 15701 ;; This function uses a non-reentrant model
 15702 ;;
 15703                           
 15704  0B71                     _CCP2_CaptureISR:	
 15705                           ;psect for function _CCP2_CaptureISR
 15706                           
 15707  0B71                     i1l4153:	
 15708                           ;incstack = 0
 15709                           ; Regs used in _CCP2_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15710                           
 15711                           
 15712                           ;ccp2.c: 80:     CCP2_PERIOD_REG_T module;;ccp2.c: 83:     PIR4bits.CCP2IF = 0;
 15713  0B71  0020               	movlb	0	; select bank0
 15714  0B72  1094               	bcf	20,1	;volatile
 15715  0B73                     i1l4155:
 15716                           
 15717                           ;ccp2.c: 86:     module.ccpr2l = CCPR2L;
 15718  0B73  0025               	movlb	5	; select bank5
 15719  0B74  0815               	movf	21,w	;volatile
 15720  0B75  00F7               	movwf	??_CCP2_CaptureISR
 15721  0B76  0877               	movf	??_CCP2_CaptureISR,w
 15722  0B77  00F8               	movwf	CCP2_CaptureISR@module
 15723                           
 15724                           ;ccp2.c: 87:     module.ccpr2h = CCPR2H;
 15725  0B78  0816               	movf	22,w	;volatile
 15726  0B79  00F7               	movwf	??_CCP2_CaptureISR
 15727  0B7A  0877               	movf	??_CCP2_CaptureISR,w
 15728  0B7B  00F9               	movwf	CCP2_CaptureISR@module+1
 15729  0B7C                     i1l4157:
 15730                           
 15731                           ;ccp2.c: 90:     CCP2_CallBack(module.ccpr2_16Bit);
 15732  0B7C  0879               	movf	CCP2_CaptureISR@module+1,w
 15733  0B7D  00F4               	movwf	CCP2_DefaultCallBack@capturedValue+1
 15734  0B7E  0878               	movf	CCP2_CaptureISR@module,w
 15735  0B7F  00F3               	movwf	CCP2_DefaultCallBack@capturedValue
 15736  0B80  0021               	movlb	1	; select bank1
 15737  0B81  0847               	movf	(_CCP2_CallBack+1)^(0+128),w
 15738  0B82  008A               	movwf	10
 15739  0B83  0846               	movf	_CCP2_CallBack^(0+128),w
 15740  0B84  000A               	callw
 15741  0B85  318B               	pagesel	$
 15742  0B86                     i1l436:
 15743  0B86  0008               	return
 15744  0B87                     __end_of_CCP2_CaptureISR:
 15745                           
 15746                           	psect	text70
 15747  0D94                     __ptext70:	
 15748 ;; *************** function _CCP2_DefaultCallBack *****************
 15749 ;; Defined at:
 15750 ;;		line 29 in file "ccp2.c"
 15751 ;; Parameters:    Size  Location     Type
 15752 ;;  capturedValu    2    3[COMMON] unsigned short 
 15753 ;; Auto vars:     Size  Location     Type
 15754 ;;		None
 15755 ;; Return value:  Size  Location     Type
 15756 ;;                  1    wreg      void 
 15757 ;; Registers used:
 15758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15759 ;; Tracked objects:
 15760 ;;		On entry : 0/0
 15761 ;;		On exit  : 0/0
 15762 ;;		Unchanged: 0/0
 15763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15766 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15767 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15768 ;;Total ram usage:        4 bytes
 15769 ;; Hardware stack levels used: 1
 15770 ;; Hardware stack levels required when called: 1
 15771 ;; This function calls:
 15772 ;;		_JSN_GetLastTrig
 15773 ;;		_ReadPin
 15774 ;; This function is called by:
 15775 ;;		_CCP2_Initialize
 15776 ;;		_CCP2_CaptureISR
 15777 ;; This function uses a non-reentrant model
 15778 ;;
 15779                           
 15780  0D94                     _CCP2_DefaultCallBack:	
 15781                           ;psect for function _CCP2_DefaultCallBack
 15782                           
 15783  0D94                     i1l3967:	
 15784                           ;incstack = 0
 15785                           ; Regs used in _CCP2_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15786                           
 15787                           
 15788                           ;ccp2.c: 29: static void CCP2_DefaultCallBack(uint16_t capturedValue);ccp2.c: 30: {;ccp2
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 15789  0D94  3189  21E9  318D   	fcall	_JSN_GetLastTrig
 15790  0D97  00F5               	movwf	??_CCP2_DefaultCallBack
 15791  0D98  0875               	movf	??_CCP2_DefaultCallBack,w
 15792  0D99  0021               	movlb	1	; select bank1
 15793  0D9A  00D6               	movwf	_lastTrig@ccp2$F871^(0+128)
 15794                           
 15795                           ;ccp2.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 15796  0D9B  2DB6               	goto	i1l3977
 15797  0D9C                     i1l3969:
 15798                           
 15799                           ;ccp2.c: 35:             ticksUp = capturedValue;
 15800  0D9C  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 15801  0D9D  0021               	movlb	1	; select bank1
 15802  0D9E  00C5               	movwf	(_ticksUp@ccp2$F868+1)^(0+128)
 15803  0D9F  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 15804  0DA0  00C4               	movwf	_ticksUp@ccp2$F868^(0+128)
 15805                           
 15806                           ;ccp2.c: 36:             break;
 15807  0DA1  2DCE               	goto	i1l430
 15808  0DA2                     i1l3971:
 15809                           
 15810                           ;ccp2.c: 39:             ticksDown = capturedValue;
 15811  0DA2  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 15812  0DA3  0021               	movlb	1	; select bank1
 15813  0DA4  00C3               	movwf	(_ticksDown@ccp2$F869+1)^(0+128)
 15814  0DA5  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 15815  0DA6  00C2               	movwf	_ticksDown@ccp2$F869^(0+128)
 15816  0DA7                     i1l3973:
 15817                           
 15818                           ;ccp2.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 15819  0DA7  0844               	movf	_ticksUp@ccp2$F868^(0+128),w
 15820  0DA8  0242               	subwf	_ticksDown@ccp2$F869^(0+128),w
 15821  0DA9  00F5               	movwf	??_CCP2_DefaultCallBack
 15822  0DAA  0845               	movf	(_ticksUp@ccp2$F868+1)^(0+128),w
 15823  0DAB  3B43               	subwfb	(_ticksDown@ccp2$F869+1)^(0+128),w
 15824  0DAC  00F6               	movwf	??_CCP2_DefaultCallBack+1
 15825  0DAD  0856               	movf	_lastTrig@ccp2$F871^(0+128),w
 15826  0DAE  0086               	movwf	6
 15827  0DAF  3001               	movlw	1	; select bank2/3
 15828  0DB0  0087               	movwf	7
 15829  0DB1  0875               	movf	??_CCP2_DefaultCallBack,w
 15830  0DB2  3FC0               	movwi [0]fsr1
 15831  0DB3  0876               	movf	??_CCP2_DefaultCallBack+1,w
 15832  0DB4  3FC1               	movwi [1]fsr1
 15833                           
 15834                           ;ccp2.c: 43:             break;
 15835  0DB5  2DCE               	goto	i1l430
 15836  0DB6                     i1l3977:
 15837  0DB6  0856               	movf	_lastTrig@ccp2$F871^(0+128),w
 15838  0DB7  3E05               	addlw	5
 15839  0DB8  0086               	movwf	6
 15840  0DB9  3001               	movlw	1	; select bank2/3
 15841  0DBA  0087               	movwf	7
 15842  0DBB  0801               	movf	1,w
 15843  0DBC  3185  25CC  318D   	fcall	_ReadPin
 15844  0DBF  00F5               	movwf	??_CCP2_DefaultCallBack
 15845  0DC0  01F6               	clrf	??_CCP2_DefaultCallBack+1
 15846                           
 15847                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15848                           ; Switch size 1, requested type "simple"
 15849                           ; Number of cases is 1, Range of values is 0 to 0
 15850                           ; switch strategies available:
 15851                           ; Name         Instructions Cycles
 15852                           ; simple_byte            4     3 (average)
 15853                           ; direct_byte            8     6 (fixed)
 15854                           ; jumptable            260     6 (fixed)
 15855                           ;	Chosen strategy is simple_byte
 15856  0DC1  0876               	movf	??_CCP2_DefaultCallBack+1,w
 15857  0DC2  3A00               	xorlw	0	; case 0
 15858  0DC3  1903               	skipnz
 15859  0DC4  2DC6               	goto	i1l4697
 15860  0DC5  2DCE               	goto	i1l430
 15861  0DC6                     i1l4697:
 15862                           
 15863                           ; Switch size 1, requested type "simple"
 15864                           ; Number of cases is 2, Range of values is 0 to 1
 15865                           ; switch strategies available:
 15866                           ; Name         Instructions Cycles
 15867                           ; simple_byte            7     4 (average)
 15868                           ; direct_byte           10     6 (fixed)
 15869                           ; jumptable            260     6 (fixed)
 15870                           ;	Chosen strategy is simple_byte
 15871  0DC6  0875               	movf	??_CCP2_DefaultCallBack,w
 15872  0DC7  3A00               	xorlw	0	; case 0
 15873  0DC8  1903               	skipnz
 15874  0DC9  2DA2               	goto	i1l3971
 15875  0DCA  3A01               	xorlw	1	; case 1
 15876  0DCB  1903               	skipnz
 15877  0DCC  2D9C               	goto	i1l3969
 15878  0DCD  2DCE               	goto	i1l430
 15879  0DCE                     i1l430:
 15880  0DCE  0008               	return
 15881  0DCF                     __end_of_CCP2_DefaultCallBack:
 15882                           
 15883                           	psect	text71
 15884  0B5B                     __ptext71:	
 15885 ;; *************** function _CCP1_CaptureISR *****************
 15886 ;; Defined at:
 15887 ;;		line 78 in file "ccp1.c"
 15888 ;; Parameters:    Size  Location     Type
 15889 ;;		None
 15890 ;; Auto vars:     Size  Location     Type
 15891 ;;  module          2    8[COMMON] struct CCPR1Reg_tag
 15892 ;; Return value:  Size  Location     Type
 15893 ;;                  1    wreg      void 
 15894 ;; Registers used:
 15895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15896 ;; Tracked objects:
 15897 ;;		On entry : 0/0
 15898 ;;		On exit  : 0/0
 15899 ;;		Unchanged: 0/0
 15900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15902 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15904 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15905 ;;Total ram usage:        3 bytes
 15906 ;; Hardware stack levels used: 1
 15907 ;; Hardware stack levels required when called: 2
 15908 ;; This function calls:
 15909 ;;		Absolute function
 15910 ;;		_CCP1_DefaultCallBack
 15911 ;; This function is called by:
 15912 ;;		_INTERRUPT_InterruptManager
 15913 ;; This function uses a non-reentrant model
 15914 ;;
 15915                           
 15916  0B5B                     _CCP1_CaptureISR:	
 15917                           ;psect for function _CCP1_CaptureISR
 15918                           
 15919  0B5B                     i1l4147:	
 15920                           ;incstack = 0
 15921                           ; Regs used in _CCP1_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15922                           
 15923                           
 15924                           ;ccp1.c: 80:     CCP1_PERIOD_REG_T module;;ccp1.c: 83:     PIR4bits.CCP1IF = 0;
 15925  0B5B  0020               	movlb	0	; select bank0
 15926  0B5C  1014               	bcf	20,0	;volatile
 15927  0B5D                     i1l4149:
 15928                           
 15929                           ;ccp1.c: 86:     module.ccpr1l = CCPR1L;
 15930  0B5D  0025               	movlb	5	; select bank5
 15931  0B5E  0811               	movf	17,w	;volatile
 15932  0B5F  00F7               	movwf	??_CCP1_CaptureISR
 15933  0B60  0877               	movf	??_CCP1_CaptureISR,w
 15934  0B61  00F8               	movwf	CCP1_CaptureISR@module
 15935                           
 15936                           ;ccp1.c: 87:     module.ccpr1h = CCPR1H;
 15937  0B62  0812               	movf	18,w	;volatile
 15938  0B63  00F7               	movwf	??_CCP1_CaptureISR
 15939  0B64  0877               	movf	??_CCP1_CaptureISR,w
 15940  0B65  00F9               	movwf	CCP1_CaptureISR@module+1
 15941  0B66                     i1l4151:
 15942                           
 15943                           ;ccp1.c: 90:     CCP1_CallBack(module.ccpr1_16Bit);
 15944  0B66  0879               	movf	CCP1_CaptureISR@module+1,w
 15945  0B67  00F4               	movwf	CCP1_DefaultCallBack@capturedValue+1
 15946  0B68  0878               	movf	CCP1_CaptureISR@module,w
 15947  0B69  00F3               	movwf	CCP1_DefaultCallBack@capturedValue
 15948  0B6A  0021               	movlb	1	; select bank1
 15949  0B6B  084D               	movf	(_CCP1_CallBack+1)^(0+128),w
 15950  0B6C  008A               	movwf	10
 15951  0B6D  084C               	movf	_CCP1_CallBack^(0+128),w
 15952  0B6E  000A               	callw
 15953  0B6F  318B               	pagesel	$
 15954  0B70                     i1l390:
 15955  0B70  0008               	return
 15956  0B71                     __end_of_CCP1_CaptureISR:
 15957                           
 15958                           	psect	text72
 15959  0D59                     __ptext72:	
 15960 ;; *************** function _CCP1_DefaultCallBack *****************
 15961 ;; Defined at:
 15962 ;;		line 29 in file "ccp1.c"
 15963 ;; Parameters:    Size  Location     Type
 15964 ;;  capturedValu    2    3[COMMON] unsigned short 
 15965 ;; Auto vars:     Size  Location     Type
 15966 ;;		None
 15967 ;; Return value:  Size  Location     Type
 15968 ;;                  1    wreg      void 
 15969 ;; Registers used:
 15970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15971 ;; Tracked objects:
 15972 ;;		On entry : 0/0
 15973 ;;		On exit  : 0/0
 15974 ;;		Unchanged: 0/0
 15975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15978 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15979 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15980 ;;Total ram usage:        4 bytes
 15981 ;; Hardware stack levels used: 1
 15982 ;; Hardware stack levels required when called: 1
 15983 ;; This function calls:
 15984 ;;		_JSN_GetLastTrig
 15985 ;;		_ReadPin
 15986 ;; This function is called by:
 15987 ;;		_CCP1_Initialize
 15988 ;;		_CCP1_CaptureISR
 15989 ;; This function uses a non-reentrant model
 15990 ;;
 15991                           
 15992  0D59                     _CCP1_DefaultCallBack:	
 15993                           ;psect for function _CCP1_DefaultCallBack
 15994                           
 15995  0D59                     i1l3951:	
 15996                           ;incstack = 0
 15997                           ; Regs used in _CCP1_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15998                           
 15999                           
 16000                           ;ccp1.c: 29: static void CCP1_DefaultCallBack(uint16_t capturedValue);ccp1.c: 30: {;ccp1
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 16001  0D59  3189  21E9  318D   	fcall	_JSN_GetLastTrig
 16002  0D5C  00F5               	movwf	??_CCP1_DefaultCallBack
 16003  0D5D  0875               	movf	??_CCP1_DefaultCallBack,w
 16004  0D5E  0021               	movlb	1	; select bank1
 16005  0D5F  00D8               	movwf	_lastTrig@ccp1$F729^(0+128)
 16006                           
 16007                           ;ccp1.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 16008  0D60  2D7B               	goto	i1l3961
 16009  0D61                     i1l3953:
 16010                           
 16011                           ;ccp1.c: 35:             ticksUp = capturedValue;
 16012  0D61  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 16013  0D62  0021               	movlb	1	; select bank1
 16014  0D63  00CB               	movwf	(_ticksUp+1)^(0+128)
 16015  0D64  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 16016  0D65  00CA               	movwf	_ticksUp^(0+128)
 16017                           
 16018                           ;ccp1.c: 36:             break;
 16019  0D66  2D93               	goto	i1l384
 16020  0D67                     i1l3955:
 16021                           
 16022                           ;ccp1.c: 39:             ticksDown = capturedValue;
 16023  0D67  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 16024  0D68  0021               	movlb	1	; select bank1
 16025  0D69  00C9               	movwf	(_ticksDown+1)^(0+128)
 16026  0D6A  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 16027  0D6B  00C8               	movwf	_ticksDown^(0+128)
 16028  0D6C                     i1l3957:
 16029                           
 16030                           ;ccp1.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 16031  0D6C  084A               	movf	_ticksUp^(0+128),w
 16032  0D6D  0248               	subwf	_ticksDown^(0+128),w
 16033  0D6E  00F5               	movwf	??_CCP1_DefaultCallBack
 16034  0D6F  084B               	movf	(_ticksUp+1)^(0+128),w
 16035  0D70  3B49               	subwfb	(_ticksDown+1)^(0+128),w
 16036  0D71  00F6               	movwf	??_CCP1_DefaultCallBack+1
 16037  0D72  0858               	movf	_lastTrig@ccp1$F729^(0+128),w
 16038  0D73  0086               	movwf	6
 16039  0D74  3001               	movlw	1	; select bank2/3
 16040  0D75  0087               	movwf	7
 16041  0D76  0875               	movf	??_CCP1_DefaultCallBack,w
 16042  0D77  3FC0               	movwi [0]fsr1
 16043  0D78  0876               	movf	??_CCP1_DefaultCallBack+1,w
 16044  0D79  3FC1               	movwi [1]fsr1
 16045                           
 16046                           ;ccp1.c: 43:             break;
 16047  0D7A  2D93               	goto	i1l384
 16048  0D7B                     i1l3961:
 16049  0D7B  0858               	movf	_lastTrig@ccp1$F729^(0+128),w
 16050  0D7C  3E05               	addlw	5
 16051  0D7D  0086               	movwf	6
 16052  0D7E  3001               	movlw	1	; select bank2/3
 16053  0D7F  0087               	movwf	7
 16054  0D80  0801               	movf	1,w
 16055  0D81  3185  25CC  318D   	fcall	_ReadPin
 16056  0D84  00F5               	movwf	??_CCP1_DefaultCallBack
 16057  0D85  01F6               	clrf	??_CCP1_DefaultCallBack+1
 16058                           
 16059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16060                           ; Switch size 1, requested type "simple"
 16061                           ; Number of cases is 1, Range of values is 0 to 0
 16062                           ; switch strategies available:
 16063                           ; Name         Instructions Cycles
 16064                           ; simple_byte            4     3 (average)
 16065                           ; direct_byte            8     6 (fixed)
 16066                           ; jumptable            260     6 (fixed)
 16067                           ;	Chosen strategy is simple_byte
 16068  0D86  0876               	movf	??_CCP1_DefaultCallBack+1,w
 16069  0D87  3A00               	xorlw	0	; case 0
 16070  0D88  1903               	skipnz
 16071  0D89  2D8B               	goto	i1l4699
 16072  0D8A  2D93               	goto	i1l384
 16073  0D8B                     i1l4699:
 16074                           
 16075                           ; Switch size 1, requested type "simple"
 16076                           ; Number of cases is 2, Range of values is 0 to 1
 16077                           ; switch strategies available:
 16078                           ; Name         Instructions Cycles
 16079                           ; simple_byte            7     4 (average)
 16080                           ; direct_byte           10     6 (fixed)
 16081                           ; jumptable            260     6 (fixed)
 16082                           ;	Chosen strategy is simple_byte
 16083  0D8B  0875               	movf	??_CCP1_DefaultCallBack,w
 16084  0D8C  3A00               	xorlw	0	; case 0
 16085  0D8D  1903               	skipnz
 16086  0D8E  2D67               	goto	i1l3955
 16087  0D8F  3A01               	xorlw	1	; case 1
 16088  0D90  1903               	skipnz
 16089  0D91  2D61               	goto	i1l3953
 16090  0D92  2D93               	goto	i1l384
 16091  0D93                     i1l384:
 16092  0D93  0008               	return
 16093  0D94                     __end_of_CCP1_DefaultCallBack:
 16094                           
 16095                           	psect	text73
 16096  05CC                     __ptext73:	
 16097 ;; *************** function _ReadPin *****************
 16098 ;; Defined at:
 16099 ;;		line 103 in file "PIC16Xpress_DevBoard.c"
 16100 ;; Parameters:    Size  Location     Type
 16101 ;;  pin             1    wreg     enum E7144
 16102 ;; Auto vars:     Size  Location     Type
 16103 ;;  pin             1    2[COMMON] enum E7144
 16104 ;; Return value:  Size  Location     Type
 16105 ;;                  1    wreg      unsigned char 
 16106 ;; Registers used:
 16107 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 16108 ;; Tracked objects:
 16109 ;;		On entry : 0/0
 16110 ;;		On exit  : 0/0
 16111 ;;		Unchanged: 0/0
 16112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16114 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16116 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16117 ;;Total ram usage:        3 bytes
 16118 ;; Hardware stack levels used: 1
 16119 ;; This function calls:
 16120 ;;		Nothing
 16121 ;; This function is called by:
 16122 ;;		_CCP1_DefaultCallBack
 16123 ;;		_CCP2_DefaultCallBack
 16124 ;;		_CCP3_DefaultCallBack
 16125 ;; This function uses a non-reentrant model
 16126 ;;
 16127                           
 16128  05CC                     _ReadPin:	
 16129                           ;psect for function _ReadPin
 16130                           
 16131                           
 16132                           ;incstack = 0
 16133                           ; Regs used in _ReadPin: [wreg-fsr0h+status,2+status,0]
 16134                           ;ReadPin@pin stored from wreg
 16135  05CC  00F2               	movwf	ReadPin@pin
 16136  05CD                     i1l3421:
 16137                           
 16138                           ;PIC16Xpress_DevBoard.c: 104:     switch(pin) {
 16139  05CD  2E22               	goto	i1l3501
 16140  05CE                     i1l3423:
 16141                           
 16142                           ;PIC16Xpress_DevBoard.c: 106:             return PORTAbits.RA5;
 16143  05CE  0020               	movlb	0	; select bank0
 16144  05CF  0E0C               	swapf	12,w	;volatile
 16145  05D0  0C89               	rrf	9,f
 16146  05D1  3901               	andlw	1
 16147  05D2  2E62               	goto	i1l173
 16148  05D3                     i1l3427:
 16149                           
 16150                           ;PIC16Xpress_DevBoard.c: 108:             return PORTAbits.RA4;
 16151  05D3  0020               	movlb	0	; select bank0
 16152  05D4  0E0C               	swapf	12,w	;volatile
 16153  05D5  3901               	andlw	1
 16154  05D6  2E62               	goto	i1l173
 16155  05D7                     i1l3431:
 16156                           
 16157                           ;PIC16Xpress_DevBoard.c: 110:             return 0xFF;
 16158  05D7  30FF               	movlw	255
 16159  05D8  2E62               	goto	i1l173
 16160  05D9                     i1l3435:
 16161                           
 16162                           ;PIC16Xpress_DevBoard.c: 112:             return PORTCbits.RC5;
 16163  05D9  0020               	movlb	0	; select bank0
 16164  05DA  0E0E               	swapf	14,w	;volatile
 16165  05DB  0C89               	rrf	9,f
 16166  05DC  3901               	andlw	1
 16167  05DD  2E62               	goto	i1l173
 16168  05DE                     i1l3439:
 16169                           
 16170                           ;PIC16Xpress_DevBoard.c: 114:             return PORTCbits.RC4;
 16171  05DE  0020               	movlb	0	; select bank0
 16172  05DF  0E0E               	swapf	14,w	;volatile
 16173  05E0  3901               	andlw	1
 16174  05E1  2E62               	goto	i1l173
 16175  05E2                     i1l3443:
 16176                           
 16177                           ;PIC16Xpress_DevBoard.c: 116:             return PORTCbits.RC3;
 16178  05E2  0020               	movlb	0	; select bank0
 16179  05E3  0C0E               	rrf	14,w	;volatile
 16180  05E4  00F0               	movwf	??_ReadPin
 16181  05E5  0CF0               	rrf	??_ReadPin,f
 16182  05E6  0C70               	rrf	??_ReadPin,w
 16183  05E7  3901               	andlw	1
 16184  05E8  2E62               	goto	i1l173
 16185  05E9                     i1l3447:
 16186                           
 16187                           ;PIC16Xpress_DevBoard.c: 118:             return PORTCbits.RC6;
 16188  05E9  0020               	movlb	0	; select bank0
 16189  05EA  0E0E               	swapf	14,w	;volatile
 16190  05EB  0C89               	rrf	9,f
 16191  05EC  0C89               	rrf	9,f
 16192  05ED  3901               	andlw	1
 16193  05EE  2E62               	goto	i1l173
 16194  05EF                     i1l3451:
 16195                           
 16196                           ;PIC16Xpress_DevBoard.c: 120:             return PORTCbits.RC7;
 16197  05EF  0020               	movlb	0	; select bank0
 16198  05F0  0D0E               	rlf	14,w	;volatile
 16199  05F1  0D0E               	rlf	14,w	;volatile
 16200  05F2  3901               	andlw	1
 16201  05F3  2E62               	goto	i1l173
 16202  05F4                     i1l3455:
 16203                           
 16204                           ;PIC16Xpress_DevBoard.c: 122:             return PORTBbits.RB7;
 16205  05F4  0020               	movlb	0	; select bank0
 16206  05F5  0D0D               	rlf	13,w	;volatile
 16207  05F6  0D0D               	rlf	13,w	;volatile
 16208  05F7  3901               	andlw	1
 16209  05F8  2E62               	goto	i1l173
 16210  05F9                     i1l3459:
 16211                           
 16212                           ;PIC16Xpress_DevBoard.c: 124:             return PORTAbits.RA0;
 16213  05F9  0020               	movlb	0	; select bank0
 16214  05FA  080C               	movf	12,w	;volatile
 16215  05FB  3901               	andlw	1
 16216  05FC  2E62               	goto	i1l173
 16217  05FD                     i1l3463:
 16218                           
 16219                           ;PIC16Xpress_DevBoard.c: 126:             return PORTAbits.RA1;
 16220  05FD  0020               	movlb	0	; select bank0
 16221  05FE  0C0C               	rrf	12,w	;volatile
 16222  05FF  3901               	andlw	1
 16223  0600  2E62               	goto	i1l173
 16224  0601                     i1l3467:
 16225                           
 16226                           ;PIC16Xpress_DevBoard.c: 128:             return PORTAbits.RA2;
 16227  0601  0020               	movlb	0	; select bank0
 16228  0602  0C0C               	rrf	12,w	;volatile
 16229  0603  0C89               	rrf	9,f
 16230  0604  3901               	andlw	1
 16231  0605  2E62               	goto	i1l173
 16232  0606                     i1l3471:
 16233                           
 16234                           ;PIC16Xpress_DevBoard.c: 130:             return PORTCbits.RC0;
 16235  0606  0020               	movlb	0	; select bank0
 16236  0607  080E               	movf	14,w	;volatile
 16237  0608  3901               	andlw	1
 16238  0609  2E62               	goto	i1l173
 16239  060A                     i1l3475:
 16240                           
 16241                           ;PIC16Xpress_DevBoard.c: 132:             return PORTCbits.RC1;
 16242  060A  0020               	movlb	0	; select bank0
 16243  060B  0C0E               	rrf	14,w	;volatile
 16244  060C  3901               	andlw	1
 16245  060D  2E62               	goto	i1l173
 16246  060E                     i1l3479:
 16247                           
 16248                           ;PIC16Xpress_DevBoard.c: 134:             return PORTCbits.RC2;
 16249  060E  0020               	movlb	0	; select bank0
 16250  060F  0C0E               	rrf	14,w	;volatile
 16251  0610  0C89               	rrf	9,f
 16252  0611  3901               	andlw	1
 16253  0612  2E62               	goto	i1l173
 16254  0613                     i1l3483:
 16255                           
 16256                           ;PIC16Xpress_DevBoard.c: 136:             return PORTBbits.RB4;
 16257  0613  0020               	movlb	0	; select bank0
 16258  0614  0E0D               	swapf	13,w	;volatile
 16259  0615  3901               	andlw	1
 16260  0616  2E62               	goto	i1l173
 16261  0617                     i1l3487:
 16262                           
 16263                           ;PIC16Xpress_DevBoard.c: 138:             return PORTBbits.RB5;
 16264  0617  0020               	movlb	0	; select bank0
 16265  0618  0E0D               	swapf	13,w	;volatile
 16266  0619  0C89               	rrf	9,f
 16267  061A  3901               	andlw	1
 16268  061B  2E62               	goto	i1l173
 16269  061C                     i1l3491:
 16270                           
 16271                           ;PIC16Xpress_DevBoard.c: 140:             return PORTBbits.RB6;
 16272  061C  0020               	movlb	0	; select bank0
 16273  061D  0E0D               	swapf	13,w	;volatile
 16274  061E  0C89               	rrf	9,f
 16275  061F  0C89               	rrf	9,f
 16276  0620  3901               	andlw	1
 16277  0621  2E62               	goto	i1l173
 16278  0622                     i1l3501:
 16279  0622  0872               	movf	ReadPin@pin,w
 16280  0623  00F0               	movwf	??_ReadPin
 16281  0624  01F1               	clrf	??_ReadPin+1
 16282                           
 16283                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16284                           ; Switch size 1, requested type "simple"
 16285                           ; Number of cases is 1, Range of values is 0 to 0
 16286                           ; switch strategies available:
 16287                           ; Name         Instructions Cycles
 16288                           ; simple_byte            4     3 (average)
 16289                           ; direct_byte            8     6 (fixed)
 16290                           ; jumptable            260     6 (fixed)
 16291                           ;	Chosen strategy is simple_byte
 16292  0625  0871               	movf	??_ReadPin+1,w
 16293  0626  3A00               	xorlw	0	; case 0
 16294  0627  1903               	skipnz
 16295  0628  2E2A               	goto	i1l4701
 16296  0629  2DD7               	goto	i1l3431
 16297  062A                     i1l4701:
 16298                           
 16299                           ; Switch size 1, requested type "simple"
 16300                           ; Number of cases is 18, Range of values is 0 to 17
 16301                           ; switch strategies available:
 16302                           ; Name         Instructions Cycles
 16303                           ; direct_byte           42     6 (fixed)
 16304                           ; simple_byte           55    28 (average)
 16305                           ; jumptable            260     6 (fixed)
 16306                           ;	Chosen strategy is simple_byte
 16307  062A  0870               	movf	??_ReadPin,w
 16308  062B  3A00               	xorlw	0	; case 0
 16309  062C  1903               	skipnz
 16310  062D  2DCE               	goto	i1l3423
 16311  062E  3A01               	xorlw	1	; case 1
 16312  062F  1903               	skipnz
 16313  0630  2DD3               	goto	i1l3427
 16314  0631  3A03               	xorlw	3	; case 2
 16315  0632  1903               	skipnz
 16316  0633  2DD7               	goto	i1l3431
 16317  0634  3A01               	xorlw	1	; case 3
 16318  0635  1903               	skipnz
 16319  0636  2DD9               	goto	i1l3435
 16320  0637  3A07               	xorlw	7	; case 4
 16321  0638  1903               	skipnz
 16322  0639  2DDE               	goto	i1l3439
 16323  063A  3A01               	xorlw	1	; case 5
 16324  063B  1903               	skipnz
 16325  063C  2DE2               	goto	i1l3443
 16326  063D  3A03               	xorlw	3	; case 6
 16327  063E  1903               	skipnz
 16328  063F  2DE9               	goto	i1l3447
 16329  0640  3A01               	xorlw	1	; case 7
 16330  0641  1903               	skipnz
 16331  0642  2DEF               	goto	i1l3451
 16332  0643  3A0F               	xorlw	15	; case 8
 16333  0644  1903               	skipnz
 16334  0645  2DF4               	goto	i1l3455
 16335  0646  3A01               	xorlw	1	; case 9
 16336  0647  1903               	skipnz
 16337  0648  2DF9               	goto	i1l3459
 16338  0649  3A03               	xorlw	3	; case 10
 16339  064A  1903               	skipnz
 16340  064B  2DFD               	goto	i1l3463
 16341  064C  3A01               	xorlw	1	; case 11
 16342  064D  1903               	skipnz
 16343  064E  2E01               	goto	i1l3467
 16344  064F  3A07               	xorlw	7	; case 12
 16345  0650  1903               	skipnz
 16346  0651  2E06               	goto	i1l3471
 16347  0652  3A01               	xorlw	1	; case 13
 16348  0653  1903               	skipnz
 16349  0654  2E0A               	goto	i1l3475
 16350  0655  3A03               	xorlw	3	; case 14
 16351  0656  1903               	skipnz
 16352  0657  2E0E               	goto	i1l3479
 16353  0658  3A01               	xorlw	1	; case 15
 16354  0659  1903               	skipnz
 16355  065A  2E13               	goto	i1l3483
 16356  065B  3A1F               	xorlw	31	; case 16
 16357  065C  1903               	skipnz
 16358  065D  2E17               	goto	i1l3487
 16359  065E  3A01               	xorlw	1	; case 17
 16360  065F  1903               	skipnz
 16361  0660  2E1C               	goto	i1l3491
 16362  0661  2DD7               	goto	i1l3431
 16363  0662                     i1l173:
 16364  0662  0008               	return
 16365  0663                     __end_of_ReadPin:
 16366                           
 16367                           	psect	text74
 16368  09E9                     __ptext74:	
 16369 ;; *************** function _JSN_GetLastTrig *****************
 16370 ;; Defined at:
 16371 ;;		line 118 in file "JSN_Sensor.c"
 16372 ;; Parameters:    Size  Location     Type
 16373 ;;		None
 16374 ;; Auto vars:     Size  Location     Type
 16375 ;;		None
 16376 ;; Return value:  Size  Location     Type
 16377 ;;                  1    wreg      PTR struct .
 16378 ;; Registers used:
 16379 ;;		wreg
 16380 ;; Tracked objects:
 16381 ;;		On entry : 0/0
 16382 ;;		On exit  : 0/0
 16383 ;;		Unchanged: 0/0
 16384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16389 ;;Total ram usage:        0 bytes
 16390 ;; Hardware stack levels used: 1
 16391 ;; This function calls:
 16392 ;;		Nothing
 16393 ;; This function is called by:
 16394 ;;		_CCP1_DefaultCallBack
 16395 ;;		_CCP2_DefaultCallBack
 16396 ;;		_CCP3_DefaultCallBack
 16397 ;; This function uses a non-reentrant model
 16398 ;;
 16399                           
 16400  09E9                     _JSN_GetLastTrig:	
 16401                           ;psect for function _JSN_GetLastTrig
 16402                           
 16403  09E9                     i1l3417:	
 16404                           ;incstack = 0
 16405                           ; Regs used in _JSN_GetLastTrig: [wreg]
 16406                           
 16407                           
 16408                           ;JSN_Sensor.c: 119:     return lastTrig;
 16409  09E9  0021               	movlb	1	; select bank1
 16410  09EA  085A               	movf	_lastTrig^(0+128),w
 16411  09EB                     i1l60:
 16412  09EB  0008               	return
 16413  09EC                     __end_of_JSN_GetLastTrig:
 16414  007E                     btemp	set	126	;btemp
 16415  007E                     int$flags	set	126
 16416  007E                     wtemp0	set	126
 16417                           
 16418                           	psect	idloc
 16419                           
 16420                           ;Config register IDLOC0 @ 0x8000
 16421                           ;	unspecified, using default values
 16422  8000                     	org	32768
 16423  8000  3FFF               	dw	16383
 16424                           
 16425                           ;Config register IDLOC1 @ 0x8001
 16426                           ;	unspecified, using default values
 16427  8001                     	org	32769
 16428  8001  3FFF               	dw	16383
 16429                           
 16430                           ;Config register IDLOC2 @ 0x8002
 16431                           ;	unspecified, using default values
 16432  8002                     	org	32770
 16433  8002  3FFF               	dw	16383
 16434                           
 16435                           ;Config register IDLOC3 @ 0x8003
 16436                           ;	unspecified, using default values
 16437  8003                     	org	32771
 16438  8003  3FFF               	dw	16383
 16439                           
 16440                           	psect	config
 16441                           
 16442                           ;Config register CONFIG1 @ 0x8007
 16443                           ;	FEXTOSC External Oscillator mode Selection bits
 16444                           ;	FEXTOSC = OFF, Oscillator not enabled
 16445                           ;	Power-up default value for COSC bits
 16446                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 16447                           ;	Clock Out Enable bit
 16448                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 16449                           ;	Clock Switch Enable bit
 16450                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16451                           ;	Fail-Safe Clock Monitor Enable
 16452                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 16453  8007                     	org	32775
 16454  8007  3F8C               	dw	16268
 16455                           
 16456                           ;Config register CONFIG2 @ 0x8008
 16457                           ;	Master Clear Enable bit
 16458                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 16459                           ;	Power-up Timer Enable bit
 16460                           ;	PWRTE = OFF, PWRT disabled
 16461                           ;	Watchdog Timer Enable bits
 16462                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 16463                           ;	Low-power BOR enable bit
 16464                           ;	LPBOREN = OFF, ULPBOR disabled
 16465                           ;	Brown-out Reset Enable bits
 16466                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 16467                           ;	Brown-out Reset Voltage selection bit
 16468                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 16469                           ;	PPSLOCK bit One-Way Set Enable bit
 16470                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 16471                           ;	Stack Overflow/Underflow Reset Enable bit
 16472                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 16473                           ;	Debugger enable bit
 16474                           ;	DEBUG = OFF, Background debugger disabled
 16475  8008                     	org	32776
 16476  8008  3FF3               	dw	16371
 16477                           
 16478                           ;Config register CONFIG3 @ 0x8009
 16479                           ;	User NVM self-write protection bits
 16480                           ;	WRT = OFF, Write protection off
 16481                           ;	Low Voltage Programming Enable bit
 16482                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 16483  8009                     	org	32777
 16484  8009  3FFF               	dw	16383
 16485                           
 16486                           ;Config register CONFIG4 @ 0x800A
 16487                           ;	User NVM Program Memory Code Protection bit
 16488                           ;	CP = OFF, User NVM code protection disabled
 16489                           ;	Data NVM Memory Code Protection bit
 16490                           ;	CPD = OFF, Data NVM code protection disabled
 16491  800A                     	org	32778
 16492  800A  3FFF               	dw	16383

Data Sizes:
    Strings     126
    Constant    0
    Data        0
    BSS         151
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     80      80
    BANK1            80     21      80
    BANK2            80      0      56
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sameSens@ccp3$F991	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sameSens@ccp2$F870	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sameSens	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2377$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    S2377$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[58]), 
		 -> STR_1(CODE[50]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 58
		 -> STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[58]), 
		 -> STR_1(CODE[50]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[58]), 
		 -> STR_1(CODE[50]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP3_DefaultCallBack(), 

    lastTrig@ccp3$F992	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK2[6]), Sens2(BANK2[6]), Sens3(BANK2[6]), 

    CCP2_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP2_DefaultCallBack(), 

    CCP2_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP2_DefaultCallBack(), 

    lastTrig@ccp2$F871	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK2[6]), Sens2(BANK2[6]), Sens3(BANK2[6]), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP1_DefaultCallBack(), 

    lastTrig@ccp1$F729	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK2[6]), Sens2(BANK2[6]), Sens3(BANK2[6]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    sp__JSN_GetLastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK2[6]), Sens2(BANK2[6]), Sens3(BANK2[6]), 

    JSN_Sensor_GetDistance@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK2[6]), Sens2(BANK2[6]), Sens3(BANK2[6]), 

    JSN_Sensor_Trig@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK2[6]), Sens2(BANK2[6]), Sens3(BANK2[6]), 

    lastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK2[6]), Sens2(BANK2[6]), Sens3(BANK2[6]), 

    JSN_Sensor_Init@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK2[6]), Sens2(BANK2[6]), Sens3(BANK2[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _INTERRUPT_InterruptManager->_CCP2_CaptureISR
    _INTERRUPT_InterruptManager->_CCP3_CaptureISR
    _TMR3_Reload->_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _CCP3_CaptureISR->_CCP3_DefaultCallBack
    _CCP3_DefaultCallBack->_ReadPin
    _CCP2_CaptureISR->_CCP2_DefaultCallBack
    _CCP2_DefaultCallBack->_ReadPin
    _CCP1_CaptureISR->_CCP1_DefaultCallBack
    _CCP1_DefaultCallBack->_ReadPin

Critical Paths under _main in BANK0

    _main->_printf
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _CCP3_Initialize->_CCP3_SetCallBack
    _CCP2_Initialize->_CCP2_SetCallBack
    _CCP1_Initialize->_CCP1_SetCallBack
    _JSN_Sensor_Trig->_FRT_GetMicros
    _FRT_GetMicros->___wmul
    _JSN_Sensor_Init->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _JSN_Sensor_GetDistance->___lldiv
    ___lldiv->___lmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_JSN_Sensor_Init
    _JSN_Sensor_Init->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   19086
                                              7 BANK1     14    14      0
                      _FRT_GetMillis
             _JSN_Sensor_GetDistance
                    _JSN_Sensor_Init
                    _JSN_Sensor_Trig
                         _PIC16_Init
                             _SetPin
                           _WritePin
                             _printf
 ---------------------------------------------------------------------------------
 (1) _PIC16_Init                                           0     0      0     882
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     882
                    _CCP1_Initialize
                    _CCP2_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Initialize                                    1     1      0     490
                                              2 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP3_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP2_Initialize                                      0     0      0      98
                   _CCP2_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP2_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP1_Initialize                                      0     0      0      98
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP1_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Trig                                      5     5      0    1393
                                             24 BANK0      5     5      0
                      _FRT_GetMicros
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _FRT_GetMicros                                       18    14      4     267
                                              6 BANK0     18    14      4
                _TMR0_GetCallBackNum
                     _TMR0_ReadTimer
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
                _TMR0_GetCallBackNum (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR0_ReadTimer                                       2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _TMR0_GetCallBackNum                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Init                                      5     3      2    8131
                                              2 BANK1      5     3      2
                             _SetPin
                           _WritePin
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5684
                                             76 BANK0      4     0      4
                                              0 BANK1      2     2      0
             _JSN_Sensor_GetDistance (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5250
                                             68 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    4923
                                             52 BANK0     16    14      2
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                24    16      8    3578
                                             28 BANK0     24    16      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2554
                                             19 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                             11 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     834
                                              3 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      66
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             18     2     16     311
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             26    10     16     314
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _WritePin                                             4     3      1     928
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetPin                                               4     3      1     700
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_GetDistance                               5     3      2    1179
                                             26 BANK0      5     3      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     396
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _FRT_GetMillis                                        4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0     902
                   Absolute function *
                    _CCP1_CaptureISR
                    _CCP2_CaptureISR
                    _CCP3_CaptureISR
                    _CCP4_CompareISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR3_ISR                                            0     0      0     164
                        _TMR3_Reload
 ---------------------------------------------------------------------------------
 (13) _TMR3_Reload                                         0     0      0     164
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR3_WriteTimer                                     2     0      2     164
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            1     1      0       0
                                              0 COMMON     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR0_CallBack                                       0     0      0       0
                      _FRT_IncMicros
                      _FRT_IncMillis
 ---------------------------------------------------------------------------------
 (14) _FRT_IncMillis                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _FRT_IncMicros                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _CCP4_CompareISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CCP3_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP3_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (12) _CCP2_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP2_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP2_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (12) _CCP1_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP1_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP1_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (14) _ReadPin                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (14) _JSN_GetLastTrig                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FRT_GetMillis
   _JSN_Sensor_GetDistance
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _JSN_Sensor_Init
     _SetPin
     _WritePin
     _printf
       _JSN_Sensor_GetDistance (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _fputc
             _putch
               _EUSART_Write
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
   _JSN_Sensor_Trig
     _FRT_GetMicros
       _TMR0_GetCallBackNum
       _TMR0_ReadTimer
       ___wmul
         _TMR0_GetCallBackNum (ARG)
     _WritePin
   _PIC16_Init
     _SYSTEM_Initialize
       _CCP1_Initialize
         _CCP1_SetCallBack
       _CCP2_Initialize
         _CCP2_SetCallBack
       _CCP3_Initialize
         _CCP3_SetCallBack
       _CCP4_Initialize
       _EUSART_Initialize
         _EUSART_SetErrorHandler
         _EUSART_SetFramingErrorHandler
         _EUSART_SetOverrunErrorHandler
         _EUSART_SetRxInterruptHandler
         _EUSART_SetTxInterruptHandler
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _PWM5_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR1_Initialize
       _TMR2_Initialize
       _TMR3_Initialize
       _WDT_Initialize
   _SetPin
   _WritePin
   _printf

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _CCP1_CaptureISR *
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP2_CaptureISR *
     Absolute function(Fake) *
     _CCP2_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP3_CaptureISR *
     Absolute function(Fake) *
     _CCP3_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP4_CompareISR *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     _TMR0_CallBack
       _FRT_IncMicros
       _FRT_IncMillis
   _TMR1_ISR *
     _TMR1_WriteTimer
   _TMR3_ISR *
     _TMR3_Reload
       _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     15      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      38       9       70.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     106      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     106      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Feb 17 16:52:57 2022

                              _CCP4_Initialize 0B12                  ?_EUSART_SetRxInterruptHandler 0020  
                       ??_CCP3_DefaultCallBack 0075                                             l32 05CB  
                                           l28 0531                                             l37 055A  
                                           l54 0FFF                                             l57 0EC4  
                                           l73 00DF                                             l74 00DF  
                                           l68 00CC                                             l69 00CC  
                                           l86 018A                                             l78 00F2  
                                           l79 00F2                            ___wmul@multiplicand 0022  
                      __end_of_CCP1_Initialize 0BCB                                            l144 0B45  
                                          l316 0BB2                                            l149 052D  
                                          l325 0A1B                                            l341 0A7D  
                                          l504 0B33                                            l433 0BE2  
                                          l273 0CC6                                            l282 09FA  
                                          l347 0003                                            l276 0AAE  
                                          l197 0472                                            l285 0A9B  
                                          l623 0CCF                                            l439 0A3E  
                                          l279 0AB2                                            l624 0CD8  
                                          l633 0A14                                            l393 0A35  
                                          l627 0CF3                                            l387 0BCA  
                                          l485 0A47                                            l806 0B11  
                                          l662 0A59                                            l479 0BFA  
                                          l671 0A74                                            l809 07FE  
                                          l665 0A62                                            l674 0A6B  
                                          l923 0ACD                                            l668 0A50  
                                          l599 0F4D                                            l792 0E44  
                                          l939 0A23                                            l899 0B22  
                                          l979 0ABF                                            _PR2 001E  
                                          u950 0CCF                                            u951 0CCE  
                                          u960 0CD3                                            u961 0CD2  
                                          u970 0CED                                            u971 0CEC  
                                          u980 0ECB                                            u981 0ECA  
                                          u990 0ED0                                            u991 0ECF  
                              _timer1ReloadVal 00BA                         ??_EUSART_RxDataHandler 0070  
                                          _pad 0F4E                 ?_EUSART_SetFramingErrorHandler 0020  
                              _TMR2_Initialize 0A1C                                            wreg 0009  
                                         l1400 0747                                           l1171 0D58  
                                         l1157 0C3C                   JSN_Sensor_GetDistance@Sensor 003E  
                                         l1407 0757                                           l1159 0C50  
                                         l1193 07B2                                           l3211 0CC9  
                              _timer3ReloadVal 00A8                                           l1620 0B5A  
                                         l4021 0D2E                                           l3221 0CE7  
                                         l3213 0CC9                                           l3301 0F50  
                                         l1390 06D6                                           l4023 0D32  
                                         l3223 0CED                                           l3215 0CD3  
                                         l3231 0EC5                                           l1703 0C30  
                                         l3311 0F6D                                           l3303 0F55  
                                         l4111 0FBC                                           l4041 077B  
                                         l4033 0758                                           l4025 0D3A  
                                         l4121 0E84                                           l3225 0CEE  
                                         l3217 0CD9                                           l3241 0EFD  
                                         l3233 0ECB                                           l3313 0F79  
                                         l3305 0F5E                                           l3321 0208  
                                         l4113 0FC8                                           l1650 0FA6  
                                         l4051 07A4                                           l4043 0782  
                                         l4035 0769                                           l4027 0D41  
                                         l4019 0D25                                           l4123 0EBB  
                                         l3219 0CE3                                           l3227 0CF1  
                                         l3235 0ED0                                           l3251 0C8B  
                                         l3315 0F7E                                           l3307 0F63  
                                         l3331 024A                                           l3323 020D  
                                         l3411 03AD                                           l3403 0389  
                                         l4115 0FEE                                           l4131 0B43  
                                         l4045 0794                                           l4037 076C  
                                         l4053 07AA                                           l4029 0D50  
                                         l1397 06E6                                           l3229 0A10  
                                         l3237 0ED5                                           l3245 0C75  
                                         l3253 0C18                                           l3317 0F91  
                                         l1645 0F6A                                           l3309 0F68  
                                         l3341 0281                                           l3333 024D  
                                         l3325 0220                                           l1653 0211  
                                         l3405 0391                                           l4061 053A  
                                         l4117 0FF9                                           l4109 0FA9  
                                         l4133 0B44                                           l1670 03B7  
                                         l4135 0B01                                           l4047 079C  
                                         l4039 0777                                           l3271 0685  
                                         l3263 0663                                           l3239 0EDF  
                                         l3247 0C78                                           l3255 0C1D  
                                         l3351 02DC                                           l3335 0252  
                                         l3343 02AE                                           l3327 0226  
                                         l4071 055A                                           l4063 0542  
                                         l3511 0A97                                           l4127 0B34  
                                         l4231 00B5                                           l1648 0F8C  
                                         l4049 079D                                           l3281 06C7  
                                         l3273 0689                                           l3265 066E  
                                         l3249 0C86                                           l3257 0C21  
                                         l1649 0F9A                                           l1665 02F4  
                                         l3345 02B5                                           l3353 02E1  
                                         l3337 0279                                           l3329 0236  
                                         l1657 022E                                           l3409 0394  
                                         l4073 0569                                           l4081 0572  
                                         l4057 0530                                           l3361 0A36  
                                         l3521 0E11                                           l3513 0A98  
                                         l3601 0A20                                           l4129 0B40  
                                         l4241 0103                                           l4233 00BB  
                                         l3283 06C8                                           l3275 068D  
                                         l3267 067A                                           l3291 06FF  
                                         l3259 0C2A                                           l3347 02C1  
                                         l3339 027D                                           l4091 05C6  
                                         l4083 05A4                                           l4059 0531  
                                         l3363 0A3F                                           l3371 0A5A  
                                         l3531 0E24                                           l3523 0E13  
                                         l3515 0A99                                           l3507 0A92  
                                         l3611 0BA4                                           l3603 0A21  
                                         l4251 011E                                           l4243 010C  
                                         l4235 00CD                                           l3277 0695  
                                         l3269 067D                                           l3293 0703  
                                         l3285 06E7                                           l3349 02CE  
                                         l3381 0315                                           l1677 0D24  
                                         l4093 05CA                                           l4085 05AD  
                                         l4069 0544                                           l3621 0BCE  
                                         l3373 0A48                                           l3365 0A63  
                                         l3701 0F4C                                           l3541 0E30  
                                         l3533 0E27                                           l3525 0E15  
                                         l3517 0E0A                                           l3509 0A95  
                                         l3357 0A75                                           l3613 0BA6  
                                         l3605 0B9D                                           l4261 0169  
                                         l4253 0131                                           l4245 010E  
                                         l4237 00E0                                           l4229 00B2  
                                         l3279 06B7                                           l3295 0707  
                                         l3287 06F4                                           l3383 0319  
                                         l3375 02F7                                           l4087 05B4  
                                         l3703 0A15                                           l3359 0A2D  
                                         l3631 0BDE                                           l3623 0BCF  
                                         l3367 0A6C                                           l3551 0E3D  
                                         l3543 0E32                                           l3535 0E29  
                                         l3527 0E18                                           l3519 0E0E  
                                         l3615 0BAE                                           l3607 0BA2  
                                         l4271 01AA                                           l4263 017E  
                                         l4255 013A                                           l4247 0114  
                                         l4239 00F3                                           l3297 0729  
                                         l3289 06F7                                           l1689 0F07  
                                         l1697 0C9B                                           l3385 032B  
                                         l3393 035F                                           l3377 0308  
                                         l4089 05BD                                           l3633 0BE0  
                                         l3625 0BD0                                           l3641 0B20  
                                         l3369 0A51                                           l3561 0AAD  
                                         l3553 0E3F                                           l3545 0E35  
                                         l3537 0E2B                                           l3529 0E1A  
                                         l3617 0BB1                                           l3609 0BA3  
                                         l4273 01AF                                           l4281 01D9  
                                         l4265 0185                                           l4257 014D  
                                         l4249 011A                                           l3811 04BC  
                                         l3803 04AE                                           l3299 0739  
                                         l3395 0370                                           l3387 0333  
                                         l3379 0310                                           l3715 0002  
                                         l3627 0BD1                                           l3619 0BCB  
                                         l3571 0BE8                                           l3635 0B12  
                                         l3555 0E42                                           l3547 0E38  
                                         l3539 0E2E                                           l3651 0AC3  
                                         l3643 0AB3                                           l3563 09F7  
                                         l4283 01E3                                           l4267 018E  
                                         l3901 0408                                           l3397 0378  
                                         l3389 0345                                           l3581 0BB3  
                                         l3629 0BD9                                           l3573 0BE9  
                                         l3565 0BE3                                           l3637 0B19  
                                         l3557 0AA7                                           l3549 0E3B  
                                         l3653 0AC4                                           l3661 0B23  
                                         l3645 0AB7                                           l4285 01EC  
                                         l4269 01A3                                           ?_pad 0033  
                                         l3831 04DF                                           l3823 04D1  
                                         l3815 04C3                                           l3807 04B5  
                                         l3399 0383                                           l3751 0C46  
                                         l3743 0C31                                           l3591 0BC1  
                                         l3583 0BB6                                           l3575 0BF1  
                                         l3567 0BE6                                           l3639 0B1E  
                                         l3671 0F08                                           l3559 0AAB  
                                         l3655 0AC5                                           l3663 0B27  
                                         l3647 0ABC                                           l4287 01F5  
                                         l4279 01C5                                           l3841 04ED  
                                         l3921 042B                                           l3913 041D  
                                         l3905 040F                                           l3761 0CFE  
                                         l3753 0C4C                                           l3745 0C34  
                                         l3593 0BC6                                           l3585 0BB7  
                                         l3577 0BF6                                           l3569 0BE7  
                                         l3681 0F21                                           l3673 0F0A  
                                         l3657 0AC9                                           l3649 0AC0  
                                         l3665 0B28                                           l4289 01FD  
                                         l3835 04E6                                           l3827 04D8  
                                         l3819 04CA                                           l3771 0476  
                                         l3763 0D12                                           l3851 0B4B  
                                         l3747 0C38                                           l3595 0BC8  
                                         l3587 0BB8                                           l3579 0BF8  
                                         l3691 0F37                                           l3683 0F23  
                                         l3675 0F12                                           l3659 0ACB  
                                         l3667 0B2F                                           l3917 0424  
                                         l3909 0416                                           l3861 03C2  
                                         l3765 0D1C                                           l3757 0CF6  
                                         l3749 0C41                                           l3589 0BB9  
                                         l3693 0F3F                                           l3685 0F25  
                                         l3677 0F1C                                           l3669 0B30  
                                         l3597 0A1C                                           l3941 0CBA  
                                         l3791 0499                                           l3783 048B  
                                         l3775 047D                                           l3927 0432  
                                         l3855 03BA                                           l3759 0CFA  
                                         l3935 07B3                                           l3695 0F41  
                                         l3687 0F27                                           l3679 0F1F  
                                         l3599 0A1F                                           l3943 0CBD  
                                         l3769 0475                                           l3881 03E5  
                                         l3873 03D7                                           l3865 03C9  
                                         l3857 03BB                                           l3849 0B46  
                                         l3697 0F42                                           l3689 0F2F  
                                         l3945 0CC0                                           l3795 04A0  
                                         l3787 0492                                           l3779 0484  
                                         l4691 043A                                           l3699 0F43  
                                         l3947 0CC3                                           l3939 0C9C  
                                         l4683 00F8                                           l4693 04F5  
                                         l3893 03FA                                           l3885 03EC  
                                         l3877 03DE                                           l3869 03D0  
                                         l4685 01CE                                           l3799 04A7  
                                         l4687 054C                                           l3897 0401  
                                         l3889 03F3                                           l4689 057B  
                                         STR_1 103A                                           STR_2 1000  
                                         STR_3 1078                                           STR_4 106C  
                                         STR_5 1072                                           u1000 0EDF  
                                         u1001 0EDE                                           u1010 0EFD  
                                         u1011 0EFC                                           u1100 0707  
                                         u1020 0C9B                                           u1101 0706  
                                         u1021 0C9A                                           u1110 0729  
                                         u1030 0C2A                                           u1111 0728  
                                         u1015 0EF9                                           u1031 0C29  
                                         u1040 066B                                           u1120 0747  
                                         u1200 02C1                                           u1121 0746  
                                         u1201 02C0                                           u1050 067A  
                                         u1130 0F55                                           u1210 02CE  
                                         u1051 0679                                           u1115 0725  
                                         u1131 0F54                                           u1211 02CD  
                                         u1060 068D                                           u1140 0F63  
                                         u1220 02DC                                           u1300 0C38  
                                         u1061 068C                                           u1141 0F62  
                                         u1221 02DB                                           u1301 0C37  
                                         u1070 06B7                                           u1150 0F8C  
                                         u1230 02E1                                           u1071 06B6  
                                         u1151 0F8B                                           u1231 02E0  
                                         u1215 02CA                                           u1400 0769  
                                         u1080 06D6                                           u1160 0F91  
                                         u1240 0308                                           u1401 0768  
                                         u1081 06D5                                           u1161 0F90  
                                         u1225 02D8                                           u1241 0307  
                                         u1090 06F4                                           u1170 020D  
                                         u1250 032B                                           u1330 0C4C  
                                         u1075 06B3                                           u1091 06F3  
                                         u1155 0F88                                           u1171 020C  
                                         u1251 032A                                           u1331 0C4B  
                                         u1315 0C3D                                           u1420 077B  
                                         u1180 0220                                           u1260 0370  
                                         u1340 0D1C                                           u1421 077A  
                                         u1181 021F                                           u1261 036F  
                                         u1341 0D1B                                           u1325 0C42  
                                         _LATA 010C                                           u1190 02B5  
                                         u1270 0AB2                                           _LATB 010D  
                                         u1415 076D                                           u1191 02B4  
                                         u1271 0AB1                                           _LATC 010E  
                                         u1440 0794                                           u1360 0D32  
                                         u1600 0185                                           u1441 0793  
                                         u1361 0D31                                           u1185 021C  
                                         u1601 0184                                           u1610 01AA  
                                         u1435 077C                                           u1611 01A9  
                                         u1460 07AA                                           u1620 01E3  
                                         u1461 07A9                                           u1445 0790  
                                         u1621 01E2                                           u1390 0D50  
                                         u1470 0FEE                                           u1630 01EC  
                                         u1455 079E                                           u1391 0D4F  
                                         u1375 0D3B                                           u1471 0FED  
                                         u1631 01EB                                           u1640 01F5  
                                         u1560 00CC                                           u1385 0D42  
                                         u1641 01F4                                           u1561 00CB  
                                         u1570 00DF                                           u1571 00DE  
                                         u1580 00F2                                           u1581 00F1  
                                         u1590 0168                                           _PIE0 0090  
                                         u1591 0167                                           _PIE1 0091  
                                         _PIE2 0092                                           _PIE3 0093  
                                         _PIE4 0094                                           _PMD0 0911  
                                         _PMD1 0912                                           _PMD2 0913  
                                         _PMD3 0914                                           _PMD4 0915  
                                         _PMD5 0916                                           i1l60 09EB  
                                         _PIR0 0010                                           _PIR1 0011  
                                         _PIR2 0012                                           _PIR3 0013  
                                         _PIR4 0014                                           _PLLR 48E0  
                                         _TMR2 001D                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                         _dbuf 01A0                        __end_of_CCP2_Initialize 0BE3  
                                         _main 00B2                                    main@numSens 00EB  
                                         _prec 00A4                                           _nout 00A0  
                                         pad@i 0037                                           pad@p 0034  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 0039                                           btemp 007E  
                                         _utoa 0206                                     ReadPin@pin 0072  
                                         start 0090                                _TMR3_Initialize 0AB3  
                              _PWM5_Initialize 0AC0                       __end_of_CCP1_SetCallBack 0A36  
                        ??_TMR0_GetCallBackNum 0020                               ?_CCP1_CaptureISR 0070  
                              __end_of_ReadPin 0663                        __end_of_CCP4_CompareISR 09EF  
                                        ??_pad 0036                        __end_of_TMR0_Initialize 0BB3  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0AB3  
                      __end_of_CCP3_Initialize 0BFB                                          ?_main 0070  
                              __end_of___lldiv 07B3                                          ?_utoa 003C  
                              __end_of___lodiv 06E7                                          _T1CON 001B  
                                        _T2CON 001F                                          _T3CON 0413  
                              __end_of___lomod 0758                                          i1l173 0662  
                                        i1l430 0DCE                                          i1l335 0ADE  
                                        i1l338 0A0D                                          i1l436 0B86  
                                        i1l524 0AA6                                          i1l390 0B70  
                                        i1l518 0AEF                                          i1l384 0D93  
                                        i1l720 0034                                          i1l482 0B9C  
                                        i1l650 0C15                                          i1l730 007D  
                                        i1l722 0042                                          i1l715 0014  
                                        i1l476 0E09                                          i1l636 0C71  
                                        i1l812 0A91                                          i1l724 0050  
                                        i1l653 07FF                                          i1l733 008E  
                                        i1l646 0E81                                          i1l726 005E  
                                        i1l718 0026                                          i1l639 0C72  
                                        i1l815 0A87                                          i1l727 008E  
                                        i1l656 09F6                                          i1l728 006C  
                                        i1l659 09F2                                          i1l908 09EE  
                                        i1l993 0B00                                          i1l996 0A2C  
                                        _OSCEN 091D                                   vfpfcnvrt@fmt 0054  
                                        _TMR0H 0016                                   vfpfcnvrt@llu 005B  
                                        _TMR1H 001A                                          _TMR0L 0015  
                                        _TMR3H 0412                                          _TMR1L 0019  
                                        _TMR3L 0411                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _RXPPS 0E24                            ___lmul@multiplicand 0024  
                    ?_TMR0_SetInterruptHandler 0020                                          _Sens1 0152  
                                        _Sens2 014C                                          _Sens3 0146  
                             __end_of_TMR0_ISR 0ADF                               __end_of_TMR1_ISR 0AA7  
                             __end_of_TMR3_ISR 0A01                                   main@nextSens 00EA  
                             ?_CCP2_CaptureISR 0070                                          _flags 00A6  
                               _WDT_Initialize 09F7                                          _fputc 0EC5  
                                        _fputs 0C73                                          pad@fp 003B  
                                        _width 00A2                                          _putch 0A0E  
                      __end_of_TMR1_Initialize 0B34                                          pclath 000A  
                                        utoa@d 003C                                          utoa@i 0052  
                                        utoa@n 004A                                          utoa@p 0045  
                                        utoa@w 0048                                          status 0003  
                      __end_of_CCP4_Initialize 0B23                                          wtemp0 007E  
                             ___lodiv@dividend 0028                                _TMR1_WriteTimer 0ADF  
                     __end_of_CCP2_SetCallBack 0A3F                                __initialization 0092  
                             ?_CCP3_CaptureISR 0070                                   __end_of_main 0206  
                                 __end_of_utoa 02F5                                 ??_EUSART_Write 0020  
                      __end_of_TMR2_Initialize 0A24                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0022                                         ??_main 00E2  
                             ?_CCP1_Initialize 0070                                         ??_utoa 0044  
                             ___lodiv@quotient 0031                         __end_of_WDT_Initialize 09FB  
                              _JSN_GetLastTrig 09E9      __end_of_EUSART_DefaultFramingErrorHandler 0800  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 07FF                     _EUSART_OverrunErrorHandler 00B2  
                                       ?_fputc 0023                                         ?_fputs 002B  
                                       _CCPR1H 0292                                         _CCPR2H 0296  
                                       _CCPR3H 0312                                         _CCPR1L 0291  
                                       _CCPR4H 0316                                         _CCPR2L 0295  
                                       _CCPR3L 0311                                         _CCPR4L 0315  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _T0CON0 0017                                         _T0CON1 0018  
                                       _T1GCON 001C                                         _T3GCON 0414  
                                       _RC1REG 0199                               __end_of_WritePin 0473  
                                       _RC1PPS 0EA1                                         _RC1STA 019D  
                                       i1l1005 0A00                        TMR1_WriteTimer@timerVal 0070  
                                       _RC4PPS 0EA4                                         _RB6PPS 0E9E  
                                       i1l4001 0AE4                                         _ODCONA 028C  
                                       _ODCONB 028D                                         i1l4011 0AED  
                                       i1l4003 0AE5                                         _ODCONC 028E  
                                       i1l4013 09F3                                         i1l4005 0AE7  
                                       i1l4015 09EF                                         i1l4007 0AE9  
                                       i1l4201 0C6C                                         i1l4009 0AEB  
                                       i1l4017 0A24                                         i1l4211 0E5C  
                                       i1l4203 0E45                                         i1l3501 0622  
                                       i1l3421 05CD                                         i1l4221 0E7E  
                                       i1l4213 0E61                                         i1l4205 0E4B  
                                       i1l4141 0AD0                                         i1l3431 05D7  
                                       i1l3423 05CE                                         i1l4151 0B66  
                                       i1l4223 09EC                                         i1l4215 0E67  
                                       i1l4207 0E50                                         i1l4143 0ADA  
                                       i1l4311 0006                                         i1l3417 09E9  
                                       i1l4153 0B71                                         i1l4161 0B89  
                                       i1l4217 0E6D                                         i1l4209 0E56  
                                       i1l4145 0ADD                                         i1l4225 09FB  
                                       i1l4321 0022                                         i1l4313 000B  
                                       i1l3451 05EF                                         i1l3443 05E2  
                                       i1l3435 05D9                                         i1l3427 05D3  
                                       i1l4147 0B5B                                         i1l4155 0B73  
                                       i1l4163 0B92                                         i1l4219 0E77  
                                       i1l4139 0ACE                                         i1l4227 09FD  
                                       i1l4331 0047                                         i1l4323 002B  
                                       i1l4315 0010                        __end_of_PWM5_Initialize 0ACE  
                      __end_of_TMR3_Initialize 0AC0                                         i1l4149 0B5D  
                                       i1l4157 0B7C                                         i1l4165 0A9C  
                                       i1l4341 0068                                         i1l4333 004C  
                                       i1l4325 0030                                         i1l4317 0018  
                                       i1l3471 0606                                         i1l3463 05FD  
                                       i1l3455 05F4                                         i1l3447 05E9  
                                       i1l3439 05DE                                         i1l4159 0B87  
                                       i1l4191 0C51                                         i1l3711 0A7E  
                                       i1l4167 0A9E                                         i1l4343 0071  
                                       i1l4335 0055                                         i1l4327 0039  
                                       i1l4319 001D                                         i1l3721 0C05  
                                       i1l4193 0C58                                         i1l4345 0076  
                                       i1l4337 005A                                         i1l4329 003E  
                                       i1l3491 061C                                         i1l3483 0613  
                                       i1l3475 060A                                         i1l3467 0601  
                                       i1l3459 05F9                                         i1l3723 0C09  
                                       i1l4195 0C60                                         i1l3707 0A88  
                                       i1l3731 0AF5                                         i1l4347 0082  
                                       i1l4339 0063                                         i1l4701 062A  
                                       i1l3725 0C0F                                         i1l4197 0C65  
                                       i1l3741 0AFE                                         i1l3733 0AF6  
                                       i1l4349 0087                                         i1l3487 0617  
                                       i1l3479 060E                                         i1l3727 0C10  
                                       i1l3719 0BFB                                         i1l4199 0C6B  
                                       i1l3735 0AF8                                         i1l3737 0AFA  
                                       i1l3729 0AF0                                         i1l3739 0AFC  
                                       i1l3951 0D59                                         i1l3953 0D61  
                                       i1l3961 0D7B                                         i1l3955 0D67  
                                       i1l3971 0DA2                                         i1l3957 0D6C  
                                       i1l3973 0DA7                                         i1l3949 0A07  
                                       i1l3967 0D94                                         i1l4695 0E01  
                                       i1l3983 0DCF                                         i1l4697 0DC6  
                                       i1l3969 0D9C                                         i1l3977 0DB6  
                                       i1l3985 0DD7                                         i1l3993 0DF1  
                                       i1l4699 0D8B                                         i1l3987 0DDD  
                                       i1l3989 0DE2                                         i1l3999 0ADF  
                                       u151_20 0C58                                         u135_20 0AE4  
                                       u151_21 0C57                                         u135_21 0AE3  
                                       u128_20 0C0F                                         u152_20 0C6B  
                                       u128_21 0C0E                                         u152_21 0C6A  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         u153_20 0E50  
                                       u129_20 0AF5                                         u153_21 0E4F  
                                       u129_21 0AF4                                         u154_20 0E61  
                                       u170_20 002B                                         u154_21 0E60  
                                       u170_21 002A                                         u155_20 0E77  
                                       u171_20 0030                                         u155_21 0E76  
                                       u171_21 002F                                         u148_20 0ADA  
                                       u180_20 0071                                         u172_20 0039  
                                       u148_21 0AD9                                         u180_21 0070  
                                       u172_21 0038                                         u181_20 0076  
                                       u173_20 003E                                         u165_20 000B  
                                       u181_21 0075                                         u173_21 003D  
                                       u165_21 000A                                         u182_20 0082  
                                       u174_20 0047                                         u166_20 0010  
                                       u182_21 0081                                         u174_21 0046  
                                       u166_21 000F                                         u183_20 0087  
                                       u175_20 004C                                         u167_20 0018  
                                       u183_21 0086                                         u175_21 004B  
                                       u167_21 0017                                         u176_20 0055  
                                       u168_20 001D                                         u176_21 0054  
                                       u168_21 001C                                         u177_20 005A  
                                       u169_20 0022                                         u177_21 0059  
                                       u169_21 0021                                         u178_20 0063  
                                       u178_21 0062                                         u179_20 0068  
                                       u179_21 0067                                  main@currMilli 00EC  
                                       _OSCFRQ 091F                                         _TX1REG 019A  
                                       _WDTCON 0097                                         _TX1STA 019E  
                             ?_CCP2_Initialize 0070                              ??_JSN_Sensor_Init 00DF  
                                    ??_ReadPin 0070                                _TMR3_WriteTimer 0AF0  
                            ??_JSN_Sensor_Trig 0038                                  _CCP1_CallBack 00CC  
                     __end_of_CCP3_SetCallBack 0A48                                         _SetPin 0473  
                                _CCP2_CallBack 00C6                                   vfprintf@cfmt 006A  
                                       ___lmul 0D25                                         ___wmul 0C31  
                                    ??___lldiv 0034                               ?_CCP4_CompareISR 0070  
                                    ??___lodiv 0030                                      ??___lomod 0030  
                                 ?_TMR3_Reload 0070                                  _CCP3_CallBack 00C0  
                          _EUSART_Transmit_ISR 0C51                               ?_TMR0_Initialize 0070  
                                       _micros 0140                                         _millis 013C  
                           _lastTrig@ccp1$F729 00D8                             _lastTrig@ccp2$F871 00D6  
                           _lastTrig@ccp3$F992 00D4                                         _printf 0B46  
                                       pad@buf 0033                                  main@prevMilli 00E6  
                             ?_CCP3_Initialize 0070                                         _strlen 0C16  
                                       fputc@c 0023                                 _PMD_Initialize 0A92  
                                       fputs@c 002F                                         fputs@i 0030  
                                       fputs@s 0032              CCP2_DefaultCallBack@capturedValue 0073  
                              ?_WDT_Initialize 0070                          __end_of_TMR0_CallBack 0A0E  
                             __end_of_vfprintf 0D25                                         utoa@fp 0047  
     TMR0_SetInterruptHandler@InterruptHandler 0020                        __end_of_TMR1_WriteTimer 0AF0  
                         ?_EUSART_Transmit_ISR 0070                               ?_TMR1_Initialize 0070  
                            _SYSTEM_Initialize 0C9C                        __end_of__initialization 00AE  
                             ?_CCP4_Initialize 0070                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 0A75                   _EUSART_SetTxInterruptHandler 0A6C  
                                 ??_PIC16_Init 0023                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0023                                      ?_TMR0_ISR 0070  
                                    ?_TMR1_ISR 0070                                      ?_TMR3_ISR 0070  
                                __end_of_fputc 0F08                                  __end_of_fputs 0C9C  
                                __end_of_putch 0A15                               ?_TMR2_Initialize 0070  
                       __end_of_PMD_Initialize 0A9C                        __end_of_JSN_GetLastTrig 09EC  
                        CCP3_CaptureISR@module 0078                           _eusartRxStatusBuffer 0120  
               CCP3_SetCallBack@customCallBack 0020                ??_EUSART_SetOverrunErrorHandler 0022  
                           __end_of_PIC16_Init 0B46                                        ??_fputc 0026  
                    __end_of_SYSTEM_Initialize 0CC7                                        ??_fputs 002C  
                        ??_EUSART_Transmit_ISR 0070                        __end_of_TMR3_WriteTimer 0B01  
                                      ??_putch 0022                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                                     __pbssBANK3 01A0  
                         __end_of_EUSART_Write 0CF4                               ?_PWM5_Initialize 0070  
                             ?_TMR3_Initialize 0070                       ??_JSN_Sensor_GetDistance 003C  
                                      ?_SetPin 0020                              ?_CCP1_SetCallBack 0020  
                                   __pmaintext 00B2                  ?_EUSART_SetTxInterruptHandler 0020  
             _EUSART_TxDefaultInterruptHandler 00B8               __end_of_TMR0_SetInterruptHandler 0A7E  
                                      ?___lmul 0020                                        ?___wmul 0020  
                                _FRT_GetMicros 07B3                                     ??_TMR0_ISR 0070  
                                   ??_TMR1_ISR 0072                                  _FRT_GetMillis 0B01  
                                   ??_TMR3_ISR 0072                             ??_CCP1_SetCallBack 0022  
                                   __pintentry 0004                                        _CCP1CAP 0294  
                                      _CCP2CAP 0298                                        _CCP3CAP 0314  
                                      _CCP1CON 0293                                        _CCP2CON 0297  
                                      _CCP3CON 0313                                        _CCP4CON 0317  
                                      _CCP1PPS 0E14                                        _CCP2PPS 0E15  
                                      _CCP3PPS 0E16                                 ___lmul@product 0028  
                                _FRT_IncMicros 0A7E                   ??_EUSART_DefaultErrorHandler 0071  
                                _FRT_IncMillis 0A88                                        ?_printf 006C  
                              ?_PMD_Initialize 0070                                      ?_WritePin 0020  
                                      ?_strlen 0020                                  _eusartRxCount 00D1  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                                      _OSCCON1 0919                                        _OSCCON3 091B  
                                      _OSCTUNE 091E                                        _PWM5DCH 0618  
                                      _PWM5DCL 0617                                        _PWM5CON 0619  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                       ??_EUSART_SetErrorHandler 0022  
                             ?_TMR1_WriteTimer 0070                               ___lomod@dividend 0028  
            CCP1_DefaultCallBack@capturedValue 0073                    __end_of_TMR0_GetCallBackNum 0004  
                             _micros@FRT$F1531 0138                              _dutyCyclePerMilli 0144  
                                      _ReadPin 05CC                              ?_CCP2_SetCallBack 0020  
                               ?_FRT_GetMicros 0026                                 ?_FRT_GetMillis 0020  
                                      ___lldiv 0758                                        ___lodiv 0663  
                           ??_CCP2_SetCallBack 0022                                        ___lomod 06E7  
                                    ?_vfprintf 0064                                 ?_FRT_IncMicros 0070  
                               ?_FRT_IncMillis 0070                                        _ocCount 00AC  
                                   ??_WritePin 0021                                        __ptext1 0B34  
                                      __ptext2 0C9C                                        __ptext3 09F7  
                                      __ptext4 0AB3                                        __ptext5 0A1C  
                                      __ptext6 0B23                                        __ptext7 0B9D  
                                      __ptext8 0A75                                        __ptext9 0AC0  
                             ?_JSN_GetLastTrig 0070                                      _T1CONbits 001B  
                        _OSCILLATOR_Initialize 0AA7                                      _T2CONbits 001F  
                                    _T3CONbits 0413                             _sameSens@ccp2$F870 00D7  
                           _sameSens@ccp3$F991 00D5                       ??_PIN_MANAGER_Initialize 0020  
                                      _ticksUp 00CA                                _JSN_Sensor_Init 052E  
                              _JSN_Sensor_Trig 0FA7                                        clrloop0 0A02  
                         end_of_initialization 00AE                               ?_TMR3_WriteTimer 0070  
        __end_of_EUSART_SetOverrunErrorHandler 0A63                  _EUSART_SetOverrunErrorHandler 0A5A  
                                      fputc@fp 0025                                        fputs@fp 002B  
                            _EUSART_Initialize 0F08                                ___lldiv@divisor 002C  
                              ___lldiv@counter 0039                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 03B8                              ?_CCP3_SetCallBack 0020  
                        TMR0_ReadTimer@readVal 0021                   __end_of_CCP1_DefaultCallBack 0D94  
                           ??_CCP3_SetCallBack 0022                                     ??_vfprintf 0067  
                               _TMR0_ReadTimer 0A15                                        strlen@a 0023  
                                      strlen@s 0024                            ??_EUSART_Initialize 0022  
                             ??_WDT_Initialize 0020                 ??_EUSART_SetTxInterruptHandler 0022  
                     _TMR0_SetInterruptHandler 0A75                                      _PORTAbits 000C  
                                    _PORTBbits 000D                                      _PORTCbits 000E  
                                    _TRISAbits 008C                                      _TRISBbits 008D  
                                    _TRISCbits 008E                      __end_of_EUSART_Initialize 0F4E  
                                  _CCP4CONbits 0317                                ??_FRT_GetMicros 002A  
                              ??_FRT_GetMillis 0024                         __end_of_TMR0_ReadTimer 0A1C  
                              ??_FRT_IncMicros 0070                                 __end_of_SetPin 052E  
                              ??_FRT_IncMillis 0070                                 __end_of___lmul 0D59  
           __end_of_EUSART_DefaultErrorHandler 09F3                     _EUSART_DefaultErrorHandler 09EF  
                                  vfpfcnvrt@ap 0055                                    vfpfcnvrt@fp 0063  
                               __end_of___wmul 0C51                                   _EUSART_Write 0CC7  
                      __end_of_JSN_Sensor_Init 05CC                         _JSN_Sensor_GetDistance 0E82  
                       ?_OSCILLATOR_Initialize 0070                        __end_of_JSN_Sensor_Trig 1000  
                 __end_of_CCP2_DefaultCallBack 0DCF                                 __end_of_printf 0B5B  
                               __end_of_strlen 0C31                            start_initialization 0092  
                              ___lodiv@divisor 0020                                ___lodiv@counter 0039  
               CCP2_SetCallBack@customCallBack 0020                                      SetPin@pin 0023  
                                  __end_of_pad 0FA7                              ??_CCP1_CaptureISR 0077  
 EUSART_SetRxInterruptHandler@interruptHandler 0020   EUSART_SetTxInterruptHandler@interruptHandler 0020  
                                  putch@txData 0022                              _ticksUp@ccp2$F868 00C4  
                            _ticksUp@ccp3$F989 00BE                 ?_EUSART_SetOverrunErrorHandler 0020  
                                     ??_SetPin 0021                                    vfprintf@fmt 0064  
                   _EUSART_FramingErrorHandler 00B4                               ??_PMD_Initialize 0020  
                              ?_TMR0_ReadTimer 0070                                       ??___lmul 0028  
                                     ??___wmul 0024                              ??_CCP2_CaptureISR 0077  
                       _EUSART_SetErrorHandler 0A48                         JSN_Sensor_Init@echoPin 00DE  
                                  _CCPTMRSbits 029F                                       ??_printf 00DB  
                                     ??_strlen 0022                          CCP1_CaptureISR@module 0078  
                  __end_of_EUSART_Transmit_ISR 0C73                                    __pbssCOMMON 007A  
                                    ___latbits 0002                         JSN_Sensor_Init@trigPin 00DD  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00DB  
                            ??_CCP3_CaptureISR 0077                   __end_of_CCP3_DefaultCallBack 0E0A  
                         _CCP1_DefaultCallBack 0D59                     __end_of_EUSART_Receive_ISR 0E82  
             _EUSART_RxDefaultInterruptHandler 00B6                          _TMR0_InterruptHandler 00CE  
                            ??_CCP1_Initialize 0022                                 _dutyCycle10bit 00AA  
                                     ?_ReadPin 0070                                    WritePin@pin 0023  
                                  WritePin@val 0020                   __end_of_EUSART_RxDataHandler 0C16  
                       _PIN_MANAGER_Initialize 0E0A              CCP3_DefaultCallBack@capturedValue 0073  
                                     ?___lldiv 002C                                       ?___lodiv 0020  
                                     ?___lomod 0020                                   _eusartRxHead 007B  
                                 _eusartTxHead 007C                                   _eusartRxTail 007A  
                                 _eusartTxTail 00D3                   ??_INTERRUPT_InterruptManager 007A  
                             ?_JSN_Sensor_Init 00DD                               ?_JSN_Sensor_Trig 0070  
                      _eusartTxBufferRemaining 00D2                                ___lomod@divisor 0020  
                                     _BAUD1CON 019F                              ??_CCP2_Initialize 0022  
                              ___lomod@counter 0031                                  _TMR0_CallBack 0A07  
                        ?_CCP1_DefaultCallBack 0073                              ??_CCP4_CompareISR 0070  
                               _eusartRxBuffer 0128                              ??_TMR0_Initialize 0022  
                               _eusartTxBuffer 0130                                 ___wmul@product 0024  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0020  
                                     _LATBbits 010D                                       _LATCbits 010E  
                                    clear_ram0 0A01                              ??_CCP3_Initialize 0022  
                                     _PIE0bits 0090                                       _PIE1bits 0091  
                                     _PIE3bits 0093                                       _PIE4bits 0094  
                            _eusartRxLastError 00D0                           _CCP2_DefaultCallBack 0D94  
                   ??_TMR0_SetInterruptHandler 0022                                       _PIR0bits 0010  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0022  
                                    _ticksDown 00C8                                       _PIR3bits 0013  
                                     _PIR4bits 0014                                       _TMR0_ISR 0ACE  
    __end_of_EUSART_DefaultOverrunErrorHandler 09F7            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 09F3  
                                     _TMR1_ISR 0A9C                                  ??_TMR3_Reload 0072  
                                     _TMR3_ISR 09FB                                      _vfpfcnvrt 02F5  
                            ??_TMR1_Initialize 0020                              ___wmul@multiplier 0020  
                            ??_CCP4_Initialize 0020                                 ?_TMR0_CallBack 0070  
                            ___lmul@multiplier 0020                                       SetPin@io 0020  
                            ??_TMR2_Initialize 0020                          ?_CCP2_DefaultCallBack 0073  
                        JSN_Sensor_Init@Sensor 00E1                                     vfprintf@ap 0066  
                                   vfprintf@fp 0069                        ?_JSN_Sensor_GetDistance 003A  
                      ??_OSCILLATOR_Initialize 0020                            _EUSART_ErrorHandler 00B0  
                         _CCP3_DefaultCallBack 0DCF                    ?_EUSART_DefaultErrorHandler 0070  
                                   ?_vfpfcnvrt 0054                                _CCP1_CaptureISR 0B5B  
                                     _WritePin 03B8                              ??_PWM5_Initialize 0020  
                            ??_TMR3_Initialize 0020                            __end_of_TMR3_Reload 0A2D  
                                   _T0CON0bits 0017                               _CCP1_SetCallBack 0A2D  
                         _EUSART_RxDataHandler 0BFB                 CCP1_SetCallBack@customCallBack 0020  
                                     __ptext10 0A92                                       __ptext11 0E0A  
                                     __ptext20 0BE3                                       __ptext12 0AA7  
                                     __ptext21 0A3F                                       __ptext13 0F08  
                                     __ptext30 0002                                       __ptext22 0BCB  
                                     __ptext14 0A6C                                       __ptext31 052E  
                                     __ptext23 0A36                                       __ptext15 0A63  
                                     __ptext40 0A0E                                       __ptext32 0B46  
                                     __ptext24 0BB3                                       __ptext16 0A5A  
                                     __ptext41 0CC7                                       __ptext33 0CF4  
                                     __ptext25 0A2D                                       __ptext17 0A51  
                                     __ptext42 06E7                                       __ptext34 02F5  
                                     __ptext26 0FA7                                       __ptext18 0A48  
                                     __ptext51 09FB                                       __ptext43 0663  
                                     __ptext35 0206                                       __ptext27 07B3  
                                     __ptext19 0B12                                       __ptext60 0C51  
                                     __ptext52 0A24                                       __ptext44 03B8  
                                     __ptext36 0F4E                                       __ptext28 0C31  
                                     __ptext61 0E45                                       __ptext53 0AF0  
                                     __ptext45 0473                                       __ptext37 0C16  
                                     __ptext29 0A15                                       __ptext70 0D94  
                                     __ptext62 09F3                                       __ptext54 0A9C  
                                     __ptext46 0E82                                       __ptext38 0C73  
                                     __ptext71 0B5B                                       __ptext63 07FF  
                                     __ptext55 0ADF                                       __ptext47 0D25  
                                     __ptext39 0EC5                                       __ptext72 0D59  
                                     __ptext64 09EF                                       __ptext56 0ACE  
                                     __ptext48 0758                                       __ptext73 05CC  
                                     __ptext65 0BFB                                       __ptext57 0A07  
                                     __ptext49 0B01                                       __ptext74 09E9  
                                     __ptext66 09EC                                       __ptext58 0A88  
                                     __ptext67 0B87                                       __ptext59 0A7E  
                                     __ptext68 0DCF                                       __ptext69 0B71  
                       ??_CCP1_DefaultCallBack 0075                                     _T3GCONbits 0414  
                      TMR3_WriteTimer@timerVal 0070                                       _currFreq 00AE  
                                     _lastTrig 00DA                                _CCP2_CaptureISR 0B71  
                             ??_TMR0_ReadTimer 0020                                       _sameSens 00D9  
                 _TMR0_DefaultInterruptHandler 0000                        ?_EUSART_SetErrorHandler 0020  
                          _ticksDown@ccp2$F869 00C2                            _ticksDown@ccp3$F990 00BC  
                                   _PIC16_Init 0B34                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0020                 __end_of_JSN_Sensor_GetDistance 0EC5  
                        __end_of_FRT_GetMicros 07FF                          __end_of_FRT_GetMillis 0B12  
                                     int$flags 007E                          ?_CCP3_DefaultCallBack 0073  
                                     _vfprintf 0CF4             __end_of_INTERRUPT_InterruptManager 0090  
                   _INTERRUPT_InterruptManager 0004                          __end_of_FRT_IncMicros 0A88  
                        __end_of_FRT_IncMillis 0A92                                      printf@fmt 006C  
        __end_of_EUSART_SetFramingErrorHandler 0A5A                  _EUSART_SetFramingErrorHandler 0A51  
                            ??_TMR1_WriteTimer 0072                                _CCP3_CaptureISR 0B87  
                                   _INTCONbits 000B                                ??_TMR0_CallBack 0070  
                             _CCP2_SetCallBack 0A36                          ?_EUSART_RxDataHandler 0070  
                              _CCP1_Initialize 0BB3                                       intlevel1 0000  
                                _CountCallBack 007D                               ___lldiv@dividend 0030  
                      ?_PIN_MANAGER_Initialize 0070                         ??_CCP2_DefaultCallBack 0075  
               __end_of_EUSART_SetErrorHandler 0A51                              ??_JSN_GetLastTrig 0070  
         __end_of_EUSART_SetRxInterruptHandler 0A6C                   _EUSART_SetRxInterruptHandler 0A63  
                      __end_of_CCP1_CaptureISR 0B71                                _CCP2_Initialize 0BCB  
                                     printf@ap 00DC                             _EUSART_Receive_ISR 0E45  
EUSART_SetFramingErrorHandler@interruptHandler 0020                                    _TMR3_Reload 0A24  
                                  ??_vfpfcnvrt 0056                              ??_TMR3_WriteTimer 0072  
                                __pstringtext1 1000                                  __pstringtext2 103A  
                                __pstringtext3 106C                                  __pstringtext4 1072  
                                __pstringtext5 1078                                  __pstringtext6 0000  
                        CCP2_CaptureISR@module 0078                                _CCP4_CompareISR 09EC  
                          ?_EUSART_Receive_ISR 0070                               ___lldiv@quotient 0035  
                              _TMR0_Initialize 0B9D                               _CCP3_SetCallBack 0A3F  
                      __end_of_CCP2_CaptureISR 0B87                            _TMR0_GetCallBackNum 0002  
                              _CCP3_Initialize 0BE3                                     _TX1STAbits 019E  
                           EUSART_Write@txData 0021                 __end_of_PIN_MANAGER_Initialize 0E45  
                                  _PWMTMRSbits 061F                           ??_EUSART_Receive_ISR 0071  
                        JSN_Sensor_Trig@Sensor 003C                                _TMR1_Initialize 0B23  
                                  ?_PIC16_Init 0070                           ?_TMR0_GetCallBackNum 0070  
                      __end_of_CCP3_CaptureISR 0B9D  
