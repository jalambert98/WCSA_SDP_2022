

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Feb 15 13:09:40 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2,group=3
    50                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text37,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text38,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text39,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	intentry,global,class=CODE,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,delta=2
    90                           	psect	text73,local,class=CODE,merge=1,delta=2
    91                           	psect	text74,local,class=CODE,merge=1,delta=2
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    94                           	dabs	1,0x7E,2
    95  0000                     
    96                           ; Version 2.40
    97                           ; Generated 19/01/2022 GMT
    98                           ; 
    99                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   100                           ; All rights reserved.
   101                           ; 
   102                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   103                           ; 
   104                           ; Redistribution and use in source and binary forms, with or without modification, are
   105                           ; permitted provided that the following conditions are met:
   106                           ; 
   107                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   108                           ;        conditions and the following disclaimer.
   109                           ; 
   110                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   111                           ;        of conditions and the following disclaimer in the documentation and/or other
   112                           ;        materials provided with the distribution. Publication is not required when
   113                           ;        this file is used in an embedded application.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC16F18345 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0090                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0097                     	;# 
   174  009B                     	;# 
   175  009B                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  010C                     	;# 
   181  010D                     	;# 
   182  010E                     	;# 
   183  0111                     	;# 
   184  0112                     	;# 
   185  0113                     	;# 
   186  0114                     	;# 
   187  0115                     	;# 
   188  0116                     	;# 
   189  0117                     	;# 
   190  0118                     	;# 
   191  0119                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  018E                     	;# 
   195  0197                     	;# 
   196  0199                     	;# 
   197  0199                     	;# 
   198  0199                     	;# 
   199  019A                     	;# 
   200  019A                     	;# 
   201  019A                     	;# 
   202  019B                     	;# 
   203  019B                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019B                     	;# 
   207  019C                     	;# 
   208  019C                     	;# 
   209  019C                     	;# 
   210  019D                     	;# 
   211  019D                     	;# 
   212  019D                     	;# 
   213  019E                     	;# 
   214  019E                     	;# 
   215  019E                     	;# 
   216  019F                     	;# 
   217  019F                     	;# 
   218  019F                     	;# 
   219  019F                     	;# 
   220  019F                     	;# 
   221  020C                     	;# 
   222  020D                     	;# 
   223  020E                     	;# 
   224  0211                     	;# 
   225  0211                     	;# 
   226  0212                     	;# 
   227  0212                     	;# 
   228  0213                     	;# 
   229  0213                     	;# 
   230  0214                     	;# 
   231  0214                     	;# 
   232  0215                     	;# 
   233  0215                     	;# 
   234  0215                     	;# 
   235  0215                     	;# 
   236  0216                     	;# 
   237  0216                     	;# 
   238  0217                     	;# 
   239  0217                     	;# 
   240  0219                     	;# 
   241  021A                     	;# 
   242  021B                     	;# 
   243  021C                     	;# 
   244  021D                     	;# 
   245  021D                     	;# 
   246  021E                     	;# 
   247  021F                     	;# 
   248  028C                     	;# 
   249  028D                     	;# 
   250  028E                     	;# 
   251  0291                     	;# 
   252  0291                     	;# 
   253  0292                     	;# 
   254  0293                     	;# 
   255  0294                     	;# 
   256  0295                     	;# 
   257  0295                     	;# 
   258  0296                     	;# 
   259  0297                     	;# 
   260  0298                     	;# 
   261  029F                     	;# 
   262  030C                     	;# 
   263  030D                     	;# 
   264  030E                     	;# 
   265  0311                     	;# 
   266  0311                     	;# 
   267  0312                     	;# 
   268  0313                     	;# 
   269  0314                     	;# 
   270  0315                     	;# 
   271  0315                     	;# 
   272  0316                     	;# 
   273  0317                     	;# 
   274  0318                     	;# 
   275  038C                     	;# 
   276  038D                     	;# 
   277  038E                     	;# 
   278  0391                     	;# 
   279  0392                     	;# 
   280  0393                     	;# 
   281  0394                     	;# 
   282  0395                     	;# 
   283  0396                     	;# 
   284  0397                     	;# 
   285  0398                     	;# 
   286  0399                     	;# 
   287  039A                     	;# 
   288  039C                     	;# 
   289  039D                     	;# 
   290  039E                     	;# 
   291  039F                     	;# 
   292  0411                     	;# 
   293  0411                     	;# 
   294  0412                     	;# 
   295  0413                     	;# 
   296  0414                     	;# 
   297  0415                     	;# 
   298  0416                     	;# 
   299  0417                     	;# 
   300  0418                     	;# 
   301  0418                     	;# 
   302  0419                     	;# 
   303  041A                     	;# 
   304  041B                     	;# 
   305  041C                     	;# 
   306  041D                     	;# 
   307  041E                     	;# 
   308  041F                     	;# 
   309  0498                     	;# 
   310  0498                     	;# 
   311  0499                     	;# 
   312  049A                     	;# 
   313  049B                     	;# 
   314  049B                     	;# 
   315  049C                     	;# 
   316  049D                     	;# 
   317  049E                     	;# 
   318  049F                     	;# 
   319  0617                     	;# 
   320  0618                     	;# 
   321  0619                     	;# 
   322  0619                     	;# 
   323  061A                     	;# 
   324  061B                     	;# 
   325  061C                     	;# 
   326  061C                     	;# 
   327  061F                     	;# 
   328  0691                     	;# 
   329  0692                     	;# 
   330  0693                     	;# 
   331  0694                     	;# 
   332  0695                     	;# 
   333  0696                     	;# 
   334  0697                     	;# 
   335  0698                     	;# 
   336  0699                     	;# 
   337  0711                     	;# 
   338  0712                     	;# 
   339  0713                     	;# 
   340  0714                     	;# 
   341  0715                     	;# 
   342  0716                     	;# 
   343  0717                     	;# 
   344  0718                     	;# 
   345  0719                     	;# 
   346  0891                     	;# 
   347  0891                     	;# 
   348  0891                     	;# 
   349  0891                     	;# 
   350  0891                     	;# 
   351  0891                     	;# 
   352  0892                     	;# 
   353  0892                     	;# 
   354  0892                     	;# 
   355  0893                     	;# 
   356  0893                     	;# 
   357  0893                     	;# 
   358  0893                     	;# 
   359  0893                     	;# 
   360  0893                     	;# 
   361  0894                     	;# 
   362  0894                     	;# 
   363  0894                     	;# 
   364  0895                     	;# 
   365  0895                     	;# 
   366  0895                     	;# 
   367  0896                     	;# 
   368  0896                     	;# 
   369  0896                     	;# 
   370  089B                     	;# 
   371  0911                     	;# 
   372  0912                     	;# 
   373  0913                     	;# 
   374  0914                     	;# 
   375  0915                     	;# 
   376  0916                     	;# 
   377  0918                     	;# 
   378  0919                     	;# 
   379  091A                     	;# 
   380  091B                     	;# 
   381  091C                     	;# 
   382  091D                     	;# 
   383  091E                     	;# 
   384  091F                     	;# 
   385  0E0F                     	;# 
   386  0E10                     	;# 
   387  0E11                     	;# 
   388  0E12                     	;# 
   389  0E13                     	;# 
   390  0E14                     	;# 
   391  0E15                     	;# 
   392  0E16                     	;# 
   393  0E17                     	;# 
   394  0E18                     	;# 
   395  0E19                     	;# 
   396  0E1A                     	;# 
   397  0E1B                     	;# 
   398  0E1C                     	;# 
   399  0E1D                     	;# 
   400  0E1E                     	;# 
   401  0E1F                     	;# 
   402  0E20                     	;# 
   403  0E21                     	;# 
   404  0E22                     	;# 
   405  0E24                     	;# 
   406  0E25                     	;# 
   407  0E28                     	;# 
   408  0E29                     	;# 
   409  0E2A                     	;# 
   410  0E2B                     	;# 
   411  0E2C                     	;# 
   412  0E2D                     	;# 
   413  0E2E                     	;# 
   414  0E2F                     	;# 
   415  0E90                     	;# 
   416  0E91                     	;# 
   417  0E92                     	;# 
   418  0E94                     	;# 
   419  0E95                     	;# 
   420  0E9C                     	;# 
   421  0E9D                     	;# 
   422  0E9E                     	;# 
   423  0E9F                     	;# 
   424  0EA0                     	;# 
   425  0EA1                     	;# 
   426  0EA2                     	;# 
   427  0EA3                     	;# 
   428  0EA4                     	;# 
   429  0EA5                     	;# 
   430  0EA6                     	;# 
   431  0EA7                     	;# 
   432  0F0F                     	;# 
   433  0F10                     	;# 
   434  0F11                     	;# 
   435  0F12                     	;# 
   436  0F13                     	;# 
   437  0F14                     	;# 
   438  0F15                     	;# 
   439  0F16                     	;# 
   440  0F17                     	;# 
   441  0F18                     	;# 
   442  0F19                     	;# 
   443  0F1A                     	;# 
   444  0F1B                     	;# 
   445  0F1C                     	;# 
   446  0F1D                     	;# 
   447  0F1E                     	;# 
   448  0F1F                     	;# 
   449  0F20                     	;# 
   450  0F21                     	;# 
   451  0F22                     	;# 
   452  0F23                     	;# 
   453  0F24                     	;# 
   454  0F25                     	;# 
   455  0F26                     	;# 
   456  0F27                     	;# 
   457  0F28                     	;# 
   458  0F29                     	;# 
   459  0F2A                     	;# 
   460  0F2B                     	;# 
   461  0F2C                     	;# 
   462  0F2D                     	;# 
   463  0F2E                     	;# 
   464  0F2F                     	;# 
   465  0F30                     	;# 
   466  0F31                     	;# 
   467  0F32                     	;# 
   468  0F33                     	;# 
   469  0F34                     	;# 
   470  0F35                     	;# 
   471  0F36                     	;# 
   472  0F37                     	;# 
   473  0FE4                     	;# 
   474  0FE5                     	;# 
   475  0FE6                     	;# 
   476  0FE7                     	;# 
   477  0FE8                     	;# 
   478  0FE9                     	;# 
   479  0FEA                     	;# 
   480  0FEB                     	;# 
   481  0FED                     	;# 
   482  0FEE                     	;# 
   483  0FEF                     	;# 
   484  0000                     	;# 
   485  0001                     	;# 
   486  0002                     	;# 
   487  0003                     	;# 
   488  0004                     	;# 
   489  0005                     	;# 
   490  0006                     	;# 
   491  0007                     	;# 
   492  0008                     	;# 
   493  0009                     	;# 
   494  000A                     	;# 
   495  000B                     	;# 
   496  000C                     	;# 
   497  000D                     	;# 
   498  000E                     	;# 
   499  0010                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0013                     	;# 
   503  0014                     	;# 
   504  0015                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0016                     	;# 
   508  0017                     	;# 
   509  0018                     	;# 
   510  0019                     	;# 
   511  0019                     	;# 
   512  001A                     	;# 
   513  001B                     	;# 
   514  001C                     	;# 
   515  001D                     	;# 
   516  001E                     	;# 
   517  001F                     	;# 
   518  008C                     	;# 
   519  008D                     	;# 
   520  008E                     	;# 
   521  0090                     	;# 
   522  0091                     	;# 
   523  0092                     	;# 
   524  0093                     	;# 
   525  0094                     	;# 
   526  0097                     	;# 
   527  009B                     	;# 
   528  009B                     	;# 
   529  009C                     	;# 
   530  009D                     	;# 
   531  009E                     	;# 
   532  009F                     	;# 
   533  010C                     	;# 
   534  010D                     	;# 
   535  010E                     	;# 
   536  0111                     	;# 
   537  0112                     	;# 
   538  0113                     	;# 
   539  0114                     	;# 
   540  0115                     	;# 
   541  0116                     	;# 
   542  0117                     	;# 
   543  0118                     	;# 
   544  0119                     	;# 
   545  018C                     	;# 
   546  018D                     	;# 
   547  018E                     	;# 
   548  0197                     	;# 
   549  0199                     	;# 
   550  0199                     	;# 
   551  0199                     	;# 
   552  019A                     	;# 
   553  019A                     	;# 
   554  019A                     	;# 
   555  019B                     	;# 
   556  019B                     	;# 
   557  019B                     	;# 
   558  019B                     	;# 
   559  019B                     	;# 
   560  019C                     	;# 
   561  019C                     	;# 
   562  019C                     	;# 
   563  019D                     	;# 
   564  019D                     	;# 
   565  019D                     	;# 
   566  019E                     	;# 
   567  019E                     	;# 
   568  019E                     	;# 
   569  019F                     	;# 
   570  019F                     	;# 
   571  019F                     	;# 
   572  019F                     	;# 
   573  019F                     	;# 
   574  020C                     	;# 
   575  020D                     	;# 
   576  020E                     	;# 
   577  0211                     	;# 
   578  0211                     	;# 
   579  0212                     	;# 
   580  0212                     	;# 
   581  0213                     	;# 
   582  0213                     	;# 
   583  0214                     	;# 
   584  0214                     	;# 
   585  0215                     	;# 
   586  0215                     	;# 
   587  0215                     	;# 
   588  0215                     	;# 
   589  0216                     	;# 
   590  0216                     	;# 
   591  0217                     	;# 
   592  0217                     	;# 
   593  0219                     	;# 
   594  021A                     	;# 
   595  021B                     	;# 
   596  021C                     	;# 
   597  021D                     	;# 
   598  021D                     	;# 
   599  021E                     	;# 
   600  021F                     	;# 
   601  028C                     	;# 
   602  028D                     	;# 
   603  028E                     	;# 
   604  0291                     	;# 
   605  0291                     	;# 
   606  0292                     	;# 
   607  0293                     	;# 
   608  0294                     	;# 
   609  0295                     	;# 
   610  0295                     	;# 
   611  0296                     	;# 
   612  0297                     	;# 
   613  0298                     	;# 
   614  029F                     	;# 
   615  030C                     	;# 
   616  030D                     	;# 
   617  030E                     	;# 
   618  0311                     	;# 
   619  0311                     	;# 
   620  0312                     	;# 
   621  0313                     	;# 
   622  0314                     	;# 
   623  0315                     	;# 
   624  0315                     	;# 
   625  0316                     	;# 
   626  0317                     	;# 
   627  0318                     	;# 
   628  038C                     	;# 
   629  038D                     	;# 
   630  038E                     	;# 
   631  0391                     	;# 
   632  0392                     	;# 
   633  0393                     	;# 
   634  0394                     	;# 
   635  0395                     	;# 
   636  0396                     	;# 
   637  0397                     	;# 
   638  0398                     	;# 
   639  0399                     	;# 
   640  039A                     	;# 
   641  039C                     	;# 
   642  039D                     	;# 
   643  039E                     	;# 
   644  039F                     	;# 
   645  0411                     	;# 
   646  0411                     	;# 
   647  0412                     	;# 
   648  0413                     	;# 
   649  0414                     	;# 
   650  0415                     	;# 
   651  0416                     	;# 
   652  0417                     	;# 
   653  0418                     	;# 
   654  0418                     	;# 
   655  0419                     	;# 
   656  041A                     	;# 
   657  041B                     	;# 
   658  041C                     	;# 
   659  041D                     	;# 
   660  041E                     	;# 
   661  041F                     	;# 
   662  0498                     	;# 
   663  0498                     	;# 
   664  0499                     	;# 
   665  049A                     	;# 
   666  049B                     	;# 
   667  049B                     	;# 
   668  049C                     	;# 
   669  049D                     	;# 
   670  049E                     	;# 
   671  049F                     	;# 
   672  0617                     	;# 
   673  0618                     	;# 
   674  0619                     	;# 
   675  0619                     	;# 
   676  061A                     	;# 
   677  061B                     	;# 
   678  061C                     	;# 
   679  061C                     	;# 
   680  061F                     	;# 
   681  0691                     	;# 
   682  0692                     	;# 
   683  0693                     	;# 
   684  0694                     	;# 
   685  0695                     	;# 
   686  0696                     	;# 
   687  0697                     	;# 
   688  0698                     	;# 
   689  0699                     	;# 
   690  0711                     	;# 
   691  0712                     	;# 
   692  0713                     	;# 
   693  0714                     	;# 
   694  0715                     	;# 
   695  0716                     	;# 
   696  0717                     	;# 
   697  0718                     	;# 
   698  0719                     	;# 
   699  0891                     	;# 
   700  0891                     	;# 
   701  0891                     	;# 
   702  0891                     	;# 
   703  0891                     	;# 
   704  0891                     	;# 
   705  0892                     	;# 
   706  0892                     	;# 
   707  0892                     	;# 
   708  0893                     	;# 
   709  0893                     	;# 
   710  0893                     	;# 
   711  0893                     	;# 
   712  0893                     	;# 
   713  0893                     	;# 
   714  0894                     	;# 
   715  0894                     	;# 
   716  0894                     	;# 
   717  0895                     	;# 
   718  0895                     	;# 
   719  0895                     	;# 
   720  0896                     	;# 
   721  0896                     	;# 
   722  0896                     	;# 
   723  089B                     	;# 
   724  0911                     	;# 
   725  0912                     	;# 
   726  0913                     	;# 
   727  0914                     	;# 
   728  0915                     	;# 
   729  0916                     	;# 
   730  0918                     	;# 
   731  0919                     	;# 
   732  091A                     	;# 
   733  091B                     	;# 
   734  091C                     	;# 
   735  091D                     	;# 
   736  091E                     	;# 
   737  091F                     	;# 
   738  0E0F                     	;# 
   739  0E10                     	;# 
   740  0E11                     	;# 
   741  0E12                     	;# 
   742  0E13                     	;# 
   743  0E14                     	;# 
   744  0E15                     	;# 
   745  0E16                     	;# 
   746  0E17                     	;# 
   747  0E18                     	;# 
   748  0E19                     	;# 
   749  0E1A                     	;# 
   750  0E1B                     	;# 
   751  0E1C                     	;# 
   752  0E1D                     	;# 
   753  0E1E                     	;# 
   754  0E1F                     	;# 
   755  0E20                     	;# 
   756  0E21                     	;# 
   757  0E22                     	;# 
   758  0E24                     	;# 
   759  0E25                     	;# 
   760  0E28                     	;# 
   761  0E29                     	;# 
   762  0E2A                     	;# 
   763  0E2B                     	;# 
   764  0E2C                     	;# 
   765  0E2D                     	;# 
   766  0E2E                     	;# 
   767  0E2F                     	;# 
   768  0E90                     	;# 
   769  0E91                     	;# 
   770  0E92                     	;# 
   771  0E94                     	;# 
   772  0E95                     	;# 
   773  0E9C                     	;# 
   774  0E9D                     	;# 
   775  0E9E                     	;# 
   776  0E9F                     	;# 
   777  0EA0                     	;# 
   778  0EA1                     	;# 
   779  0EA2                     	;# 
   780  0EA3                     	;# 
   781  0EA4                     	;# 
   782  0EA5                     	;# 
   783  0EA6                     	;# 
   784  0EA7                     	;# 
   785  0F0F                     	;# 
   786  0F10                     	;# 
   787  0F11                     	;# 
   788  0F12                     	;# 
   789  0F13                     	;# 
   790  0F14                     	;# 
   791  0F15                     	;# 
   792  0F16                     	;# 
   793  0F17                     	;# 
   794  0F18                     	;# 
   795  0F19                     	;# 
   796  0F1A                     	;# 
   797  0F1B                     	;# 
   798  0F1C                     	;# 
   799  0F1D                     	;# 
   800  0F1E                     	;# 
   801  0F1F                     	;# 
   802  0F20                     	;# 
   803  0F21                     	;# 
   804  0F22                     	;# 
   805  0F23                     	;# 
   806  0F24                     	;# 
   807  0F25                     	;# 
   808  0F26                     	;# 
   809  0F27                     	;# 
   810  0F28                     	;# 
   811  0F29                     	;# 
   812  0F2A                     	;# 
   813  0F2B                     	;# 
   814  0F2C                     	;# 
   815  0F2D                     	;# 
   816  0F2E                     	;# 
   817  0F2F                     	;# 
   818  0F30                     	;# 
   819  0F31                     	;# 
   820  0F32                     	;# 
   821  0F33                     	;# 
   822  0F34                     	;# 
   823  0F35                     	;# 
   824  0F36                     	;# 
   825  0F37                     	;# 
   826  0FE4                     	;# 
   827  0FE5                     	;# 
   828  0FE6                     	;# 
   829  0FE7                     	;# 
   830  0FE8                     	;# 
   831  0FE9                     	;# 
   832  0FEA                     	;# 
   833  0FEB                     	;# 
   834  0FED                     	;# 
   835  0FEE                     	;# 
   836  0FEF                     	;# 
   837  0000                     	;# 
   838  0001                     	;# 
   839  0002                     	;# 
   840  0003                     	;# 
   841  0004                     	;# 
   842  0005                     	;# 
   843  0006                     	;# 
   844  0007                     	;# 
   845  0008                     	;# 
   846  0009                     	;# 
   847  000A                     	;# 
   848  000B                     	;# 
   849  000C                     	;# 
   850  000D                     	;# 
   851  000E                     	;# 
   852  0010                     	;# 
   853  0011                     	;# 
   854  0012                     	;# 
   855  0013                     	;# 
   856  0014                     	;# 
   857  0015                     	;# 
   858  0015                     	;# 
   859  0016                     	;# 
   860  0016                     	;# 
   861  0017                     	;# 
   862  0018                     	;# 
   863  0019                     	;# 
   864  0019                     	;# 
   865  001A                     	;# 
   866  001B                     	;# 
   867  001C                     	;# 
   868  001D                     	;# 
   869  001E                     	;# 
   870  001F                     	;# 
   871  008C                     	;# 
   872  008D                     	;# 
   873  008E                     	;# 
   874  0090                     	;# 
   875  0091                     	;# 
   876  0092                     	;# 
   877  0093                     	;# 
   878  0094                     	;# 
   879  0097                     	;# 
   880  009B                     	;# 
   881  009B                     	;# 
   882  009C                     	;# 
   883  009D                     	;# 
   884  009E                     	;# 
   885  009F                     	;# 
   886  010C                     	;# 
   887  010D                     	;# 
   888  010E                     	;# 
   889  0111                     	;# 
   890  0112                     	;# 
   891  0113                     	;# 
   892  0114                     	;# 
   893  0115                     	;# 
   894  0116                     	;# 
   895  0117                     	;# 
   896  0118                     	;# 
   897  0119                     	;# 
   898  018C                     	;# 
   899  018D                     	;# 
   900  018E                     	;# 
   901  0197                     	;# 
   902  0199                     	;# 
   903  0199                     	;# 
   904  0199                     	;# 
   905  019A                     	;# 
   906  019A                     	;# 
   907  019A                     	;# 
   908  019B                     	;# 
   909  019B                     	;# 
   910  019B                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019C                     	;# 
   914  019C                     	;# 
   915  019C                     	;# 
   916  019D                     	;# 
   917  019D                     	;# 
   918  019D                     	;# 
   919  019E                     	;# 
   920  019E                     	;# 
   921  019E                     	;# 
   922  019F                     	;# 
   923  019F                     	;# 
   924  019F                     	;# 
   925  019F                     	;# 
   926  019F                     	;# 
   927  020C                     	;# 
   928  020D                     	;# 
   929  020E                     	;# 
   930  0211                     	;# 
   931  0211                     	;# 
   932  0212                     	;# 
   933  0212                     	;# 
   934  0213                     	;# 
   935  0213                     	;# 
   936  0214                     	;# 
   937  0214                     	;# 
   938  0215                     	;# 
   939  0215                     	;# 
   940  0215                     	;# 
   941  0215                     	;# 
   942  0216                     	;# 
   943  0216                     	;# 
   944  0217                     	;# 
   945  0217                     	;# 
   946  0219                     	;# 
   947  021A                     	;# 
   948  021B                     	;# 
   949  021C                     	;# 
   950  021D                     	;# 
   951  021D                     	;# 
   952  021E                     	;# 
   953  021F                     	;# 
   954  028C                     	;# 
   955  028D                     	;# 
   956  028E                     	;# 
   957  0291                     	;# 
   958  0291                     	;# 
   959  0292                     	;# 
   960  0293                     	;# 
   961  0294                     	;# 
   962  0295                     	;# 
   963  0295                     	;# 
   964  0296                     	;# 
   965  0297                     	;# 
   966  0298                     	;# 
   967  029F                     	;# 
   968  030C                     	;# 
   969  030D                     	;# 
   970  030E                     	;# 
   971  0311                     	;# 
   972  0311                     	;# 
   973  0312                     	;# 
   974  0313                     	;# 
   975  0314                     	;# 
   976  0315                     	;# 
   977  0315                     	;# 
   978  0316                     	;# 
   979  0317                     	;# 
   980  0318                     	;# 
   981  038C                     	;# 
   982  038D                     	;# 
   983  038E                     	;# 
   984  0391                     	;# 
   985  0392                     	;# 
   986  0393                     	;# 
   987  0394                     	;# 
   988  0395                     	;# 
   989  0396                     	;# 
   990  0397                     	;# 
   991  0398                     	;# 
   992  0399                     	;# 
   993  039A                     	;# 
   994  039C                     	;# 
   995  039D                     	;# 
   996  039E                     	;# 
   997  039F                     	;# 
   998  0411                     	;# 
   999  0411                     	;# 
  1000  0412                     	;# 
  1001  0413                     	;# 
  1002  0414                     	;# 
  1003  0415                     	;# 
  1004  0416                     	;# 
  1005  0417                     	;# 
  1006  0418                     	;# 
  1007  0418                     	;# 
  1008  0419                     	;# 
  1009  041A                     	;# 
  1010  041B                     	;# 
  1011  041C                     	;# 
  1012  041D                     	;# 
  1013  041E                     	;# 
  1014  041F                     	;# 
  1015  0498                     	;# 
  1016  0498                     	;# 
  1017  0499                     	;# 
  1018  049A                     	;# 
  1019  049B                     	;# 
  1020  049B                     	;# 
  1021  049C                     	;# 
  1022  049D                     	;# 
  1023  049E                     	;# 
  1024  049F                     	;# 
  1025  0617                     	;# 
  1026  0618                     	;# 
  1027  0619                     	;# 
  1028  0619                     	;# 
  1029  061A                     	;# 
  1030  061B                     	;# 
  1031  061C                     	;# 
  1032  061C                     	;# 
  1033  061F                     	;# 
  1034  0691                     	;# 
  1035  0692                     	;# 
  1036  0693                     	;# 
  1037  0694                     	;# 
  1038  0695                     	;# 
  1039  0696                     	;# 
  1040  0697                     	;# 
  1041  0698                     	;# 
  1042  0699                     	;# 
  1043  0711                     	;# 
  1044  0712                     	;# 
  1045  0713                     	;# 
  1046  0714                     	;# 
  1047  0715                     	;# 
  1048  0716                     	;# 
  1049  0717                     	;# 
  1050  0718                     	;# 
  1051  0719                     	;# 
  1052  0891                     	;# 
  1053  0891                     	;# 
  1054  0891                     	;# 
  1055  0891                     	;# 
  1056  0891                     	;# 
  1057  0891                     	;# 
  1058  0892                     	;# 
  1059  0892                     	;# 
  1060  0892                     	;# 
  1061  0893                     	;# 
  1062  0893                     	;# 
  1063  0893                     	;# 
  1064  0893                     	;# 
  1065  0893                     	;# 
  1066  0893                     	;# 
  1067  0894                     	;# 
  1068  0894                     	;# 
  1069  0894                     	;# 
  1070  0895                     	;# 
  1071  0895                     	;# 
  1072  0895                     	;# 
  1073  0896                     	;# 
  1074  0896                     	;# 
  1075  0896                     	;# 
  1076  089B                     	;# 
  1077  0911                     	;# 
  1078  0912                     	;# 
  1079  0913                     	;# 
  1080  0914                     	;# 
  1081  0915                     	;# 
  1082  0916                     	;# 
  1083  0918                     	;# 
  1084  0919                     	;# 
  1085  091A                     	;# 
  1086  091B                     	;# 
  1087  091C                     	;# 
  1088  091D                     	;# 
  1089  091E                     	;# 
  1090  091F                     	;# 
  1091  0E0F                     	;# 
  1092  0E10                     	;# 
  1093  0E11                     	;# 
  1094  0E12                     	;# 
  1095  0E13                     	;# 
  1096  0E14                     	;# 
  1097  0E15                     	;# 
  1098  0E16                     	;# 
  1099  0E17                     	;# 
  1100  0E18                     	;# 
  1101  0E19                     	;# 
  1102  0E1A                     	;# 
  1103  0E1B                     	;# 
  1104  0E1C                     	;# 
  1105  0E1D                     	;# 
  1106  0E1E                     	;# 
  1107  0E1F                     	;# 
  1108  0E20                     	;# 
  1109  0E21                     	;# 
  1110  0E22                     	;# 
  1111  0E24                     	;# 
  1112  0E25                     	;# 
  1113  0E28                     	;# 
  1114  0E29                     	;# 
  1115  0E2A                     	;# 
  1116  0E2B                     	;# 
  1117  0E2C                     	;# 
  1118  0E2D                     	;# 
  1119  0E2E                     	;# 
  1120  0E2F                     	;# 
  1121  0E90                     	;# 
  1122  0E91                     	;# 
  1123  0E92                     	;# 
  1124  0E94                     	;# 
  1125  0E95                     	;# 
  1126  0E9C                     	;# 
  1127  0E9D                     	;# 
  1128  0E9E                     	;# 
  1129  0E9F                     	;# 
  1130  0EA0                     	;# 
  1131  0EA1                     	;# 
  1132  0EA2                     	;# 
  1133  0EA3                     	;# 
  1134  0EA4                     	;# 
  1135  0EA5                     	;# 
  1136  0EA6                     	;# 
  1137  0EA7                     	;# 
  1138  0F0F                     	;# 
  1139  0F10                     	;# 
  1140  0F11                     	;# 
  1141  0F12                     	;# 
  1142  0F13                     	;# 
  1143  0F14                     	;# 
  1144  0F15                     	;# 
  1145  0F16                     	;# 
  1146  0F17                     	;# 
  1147  0F18                     	;# 
  1148  0F19                     	;# 
  1149  0F1A                     	;# 
  1150  0F1B                     	;# 
  1151  0F1C                     	;# 
  1152  0F1D                     	;# 
  1153  0F1E                     	;# 
  1154  0F1F                     	;# 
  1155  0F20                     	;# 
  1156  0F21                     	;# 
  1157  0F22                     	;# 
  1158  0F23                     	;# 
  1159  0F24                     	;# 
  1160  0F25                     	;# 
  1161  0F26                     	;# 
  1162  0F27                     	;# 
  1163  0F28                     	;# 
  1164  0F29                     	;# 
  1165  0F2A                     	;# 
  1166  0F2B                     	;# 
  1167  0F2C                     	;# 
  1168  0F2D                     	;# 
  1169  0F2E                     	;# 
  1170  0F2F                     	;# 
  1171  0F30                     	;# 
  1172  0F31                     	;# 
  1173  0F32                     	;# 
  1174  0F33                     	;# 
  1175  0F34                     	;# 
  1176  0F35                     	;# 
  1177  0F36                     	;# 
  1178  0F37                     	;# 
  1179  0FE4                     	;# 
  1180  0FE5                     	;# 
  1181  0FE6                     	;# 
  1182  0FE7                     	;# 
  1183  0FE8                     	;# 
  1184  0FE9                     	;# 
  1185  0FEA                     	;# 
  1186  0FEB                     	;# 
  1187  0FED                     	;# 
  1188  0FEE                     	;# 
  1189  0FEF                     	;# 
  1190  0000                     	;# 
  1191  0001                     	;# 
  1192  0002                     	;# 
  1193  0003                     	;# 
  1194  0004                     	;# 
  1195  0005                     	;# 
  1196  0006                     	;# 
  1197  0007                     	;# 
  1198  0008                     	;# 
  1199  0009                     	;# 
  1200  000A                     	;# 
  1201  000B                     	;# 
  1202  000C                     	;# 
  1203  000D                     	;# 
  1204  000E                     	;# 
  1205  0010                     	;# 
  1206  0011                     	;# 
  1207  0012                     	;# 
  1208  0013                     	;# 
  1209  0014                     	;# 
  1210  0015                     	;# 
  1211  0015                     	;# 
  1212  0016                     	;# 
  1213  0016                     	;# 
  1214  0017                     	;# 
  1215  0018                     	;# 
  1216  0019                     	;# 
  1217  0019                     	;# 
  1218  001A                     	;# 
  1219  001B                     	;# 
  1220  001C                     	;# 
  1221  001D                     	;# 
  1222  001E                     	;# 
  1223  001F                     	;# 
  1224  008C                     	;# 
  1225  008D                     	;# 
  1226  008E                     	;# 
  1227  0090                     	;# 
  1228  0091                     	;# 
  1229  0092                     	;# 
  1230  0093                     	;# 
  1231  0094                     	;# 
  1232  0097                     	;# 
  1233  009B                     	;# 
  1234  009B                     	;# 
  1235  009C                     	;# 
  1236  009D                     	;# 
  1237  009E                     	;# 
  1238  009F                     	;# 
  1239  010C                     	;# 
  1240  010D                     	;# 
  1241  010E                     	;# 
  1242  0111                     	;# 
  1243  0112                     	;# 
  1244  0113                     	;# 
  1245  0114                     	;# 
  1246  0115                     	;# 
  1247  0116                     	;# 
  1248  0117                     	;# 
  1249  0118                     	;# 
  1250  0119                     	;# 
  1251  018C                     	;# 
  1252  018D                     	;# 
  1253  018E                     	;# 
  1254  0197                     	;# 
  1255  0199                     	;# 
  1256  0199                     	;# 
  1257  0199                     	;# 
  1258  019A                     	;# 
  1259  019A                     	;# 
  1260  019A                     	;# 
  1261  019B                     	;# 
  1262  019B                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019C                     	;# 
  1267  019C                     	;# 
  1268  019C                     	;# 
  1269  019D                     	;# 
  1270  019D                     	;# 
  1271  019D                     	;# 
  1272  019E                     	;# 
  1273  019E                     	;# 
  1274  019E                     	;# 
  1275  019F                     	;# 
  1276  019F                     	;# 
  1277  019F                     	;# 
  1278  019F                     	;# 
  1279  019F                     	;# 
  1280  020C                     	;# 
  1281  020D                     	;# 
  1282  020E                     	;# 
  1283  0211                     	;# 
  1284  0211                     	;# 
  1285  0212                     	;# 
  1286  0212                     	;# 
  1287  0213                     	;# 
  1288  0213                     	;# 
  1289  0214                     	;# 
  1290  0214                     	;# 
  1291  0215                     	;# 
  1292  0215                     	;# 
  1293  0215                     	;# 
  1294  0215                     	;# 
  1295  0216                     	;# 
  1296  0216                     	;# 
  1297  0217                     	;# 
  1298  0217                     	;# 
  1299  0219                     	;# 
  1300  021A                     	;# 
  1301  021B                     	;# 
  1302  021C                     	;# 
  1303  021D                     	;# 
  1304  021D                     	;# 
  1305  021E                     	;# 
  1306  021F                     	;# 
  1307  028C                     	;# 
  1308  028D                     	;# 
  1309  028E                     	;# 
  1310  0291                     	;# 
  1311  0291                     	;# 
  1312  0292                     	;# 
  1313  0293                     	;# 
  1314  0294                     	;# 
  1315  0295                     	;# 
  1316  0295                     	;# 
  1317  0296                     	;# 
  1318  0297                     	;# 
  1319  0298                     	;# 
  1320  029F                     	;# 
  1321  030C                     	;# 
  1322  030D                     	;# 
  1323  030E                     	;# 
  1324  0311                     	;# 
  1325  0311                     	;# 
  1326  0312                     	;# 
  1327  0313                     	;# 
  1328  0314                     	;# 
  1329  0315                     	;# 
  1330  0315                     	;# 
  1331  0316                     	;# 
  1332  0317                     	;# 
  1333  0318                     	;# 
  1334  038C                     	;# 
  1335  038D                     	;# 
  1336  038E                     	;# 
  1337  0391                     	;# 
  1338  0392                     	;# 
  1339  0393                     	;# 
  1340  0394                     	;# 
  1341  0395                     	;# 
  1342  0396                     	;# 
  1343  0397                     	;# 
  1344  0398                     	;# 
  1345  0399                     	;# 
  1346  039A                     	;# 
  1347  039C                     	;# 
  1348  039D                     	;# 
  1349  039E                     	;# 
  1350  039F                     	;# 
  1351  0411                     	;# 
  1352  0411                     	;# 
  1353  0412                     	;# 
  1354  0413                     	;# 
  1355  0414                     	;# 
  1356  0415                     	;# 
  1357  0416                     	;# 
  1358  0417                     	;# 
  1359  0418                     	;# 
  1360  0418                     	;# 
  1361  0419                     	;# 
  1362  041A                     	;# 
  1363  041B                     	;# 
  1364  041C                     	;# 
  1365  041D                     	;# 
  1366  041E                     	;# 
  1367  041F                     	;# 
  1368  0498                     	;# 
  1369  0498                     	;# 
  1370  0499                     	;# 
  1371  049A                     	;# 
  1372  049B                     	;# 
  1373  049B                     	;# 
  1374  049C                     	;# 
  1375  049D                     	;# 
  1376  049E                     	;# 
  1377  049F                     	;# 
  1378  0617                     	;# 
  1379  0618                     	;# 
  1380  0619                     	;# 
  1381  0619                     	;# 
  1382  061A                     	;# 
  1383  061B                     	;# 
  1384  061C                     	;# 
  1385  061C                     	;# 
  1386  061F                     	;# 
  1387  0691                     	;# 
  1388  0692                     	;# 
  1389  0693                     	;# 
  1390  0694                     	;# 
  1391  0695                     	;# 
  1392  0696                     	;# 
  1393  0697                     	;# 
  1394  0698                     	;# 
  1395  0699                     	;# 
  1396  0711                     	;# 
  1397  0712                     	;# 
  1398  0713                     	;# 
  1399  0714                     	;# 
  1400  0715                     	;# 
  1401  0716                     	;# 
  1402  0717                     	;# 
  1403  0718                     	;# 
  1404  0719                     	;# 
  1405  0891                     	;# 
  1406  0891                     	;# 
  1407  0891                     	;# 
  1408  0891                     	;# 
  1409  0891                     	;# 
  1410  0891                     	;# 
  1411  0892                     	;# 
  1412  0892                     	;# 
  1413  0892                     	;# 
  1414  0893                     	;# 
  1415  0893                     	;# 
  1416  0893                     	;# 
  1417  0893                     	;# 
  1418  0893                     	;# 
  1419  0893                     	;# 
  1420  0894                     	;# 
  1421  0894                     	;# 
  1422  0894                     	;# 
  1423  0895                     	;# 
  1424  0895                     	;# 
  1425  0895                     	;# 
  1426  0896                     	;# 
  1427  0896                     	;# 
  1428  0896                     	;# 
  1429  089B                     	;# 
  1430  0911                     	;# 
  1431  0912                     	;# 
  1432  0913                     	;# 
  1433  0914                     	;# 
  1434  0915                     	;# 
  1435  0916                     	;# 
  1436  0918                     	;# 
  1437  0919                     	;# 
  1438  091A                     	;# 
  1439  091B                     	;# 
  1440  091C                     	;# 
  1441  091D                     	;# 
  1442  091E                     	;# 
  1443  091F                     	;# 
  1444  0E0F                     	;# 
  1445  0E10                     	;# 
  1446  0E11                     	;# 
  1447  0E12                     	;# 
  1448  0E13                     	;# 
  1449  0E14                     	;# 
  1450  0E15                     	;# 
  1451  0E16                     	;# 
  1452  0E17                     	;# 
  1453  0E18                     	;# 
  1454  0E19                     	;# 
  1455  0E1A                     	;# 
  1456  0E1B                     	;# 
  1457  0E1C                     	;# 
  1458  0E1D                     	;# 
  1459  0E1E                     	;# 
  1460  0E1F                     	;# 
  1461  0E20                     	;# 
  1462  0E21                     	;# 
  1463  0E22                     	;# 
  1464  0E24                     	;# 
  1465  0E25                     	;# 
  1466  0E28                     	;# 
  1467  0E29                     	;# 
  1468  0E2A                     	;# 
  1469  0E2B                     	;# 
  1470  0E2C                     	;# 
  1471  0E2D                     	;# 
  1472  0E2E                     	;# 
  1473  0E2F                     	;# 
  1474  0E90                     	;# 
  1475  0E91                     	;# 
  1476  0E92                     	;# 
  1477  0E94                     	;# 
  1478  0E95                     	;# 
  1479  0E9C                     	;# 
  1480  0E9D                     	;# 
  1481  0E9E                     	;# 
  1482  0E9F                     	;# 
  1483  0EA0                     	;# 
  1484  0EA1                     	;# 
  1485  0EA2                     	;# 
  1486  0EA3                     	;# 
  1487  0EA4                     	;# 
  1488  0EA5                     	;# 
  1489  0EA6                     	;# 
  1490  0EA7                     	;# 
  1491  0F0F                     	;# 
  1492  0F10                     	;# 
  1493  0F11                     	;# 
  1494  0F12                     	;# 
  1495  0F13                     	;# 
  1496  0F14                     	;# 
  1497  0F15                     	;# 
  1498  0F16                     	;# 
  1499  0F17                     	;# 
  1500  0F18                     	;# 
  1501  0F19                     	;# 
  1502  0F1A                     	;# 
  1503  0F1B                     	;# 
  1504  0F1C                     	;# 
  1505  0F1D                     	;# 
  1506  0F1E                     	;# 
  1507  0F1F                     	;# 
  1508  0F20                     	;# 
  1509  0F21                     	;# 
  1510  0F22                     	;# 
  1511  0F23                     	;# 
  1512  0F24                     	;# 
  1513  0F25                     	;# 
  1514  0F26                     	;# 
  1515  0F27                     	;# 
  1516  0F28                     	;# 
  1517  0F29                     	;# 
  1518  0F2A                     	;# 
  1519  0F2B                     	;# 
  1520  0F2C                     	;# 
  1521  0F2D                     	;# 
  1522  0F2E                     	;# 
  1523  0F2F                     	;# 
  1524  0F30                     	;# 
  1525  0F31                     	;# 
  1526  0F32                     	;# 
  1527  0F33                     	;# 
  1528  0F34                     	;# 
  1529  0F35                     	;# 
  1530  0F36                     	;# 
  1531  0F37                     	;# 
  1532  0FE4                     	;# 
  1533  0FE5                     	;# 
  1534  0FE6                     	;# 
  1535  0FE7                     	;# 
  1536  0FE8                     	;# 
  1537  0FE9                     	;# 
  1538  0FEA                     	;# 
  1539  0FEB                     	;# 
  1540  0FED                     	;# 
  1541  0FEE                     	;# 
  1542  0FEF                     	;# 
  1543  0000                     	;# 
  1544  0001                     	;# 
  1545  0002                     	;# 
  1546  0003                     	;# 
  1547  0004                     	;# 
  1548  0005                     	;# 
  1549  0006                     	;# 
  1550  0007                     	;# 
  1551  0008                     	;# 
  1552  0009                     	;# 
  1553  000A                     	;# 
  1554  000B                     	;# 
  1555  000C                     	;# 
  1556  000D                     	;# 
  1557  000E                     	;# 
  1558  0010                     	;# 
  1559  0011                     	;# 
  1560  0012                     	;# 
  1561  0013                     	;# 
  1562  0014                     	;# 
  1563  0015                     	;# 
  1564  0015                     	;# 
  1565  0016                     	;# 
  1566  0016                     	;# 
  1567  0017                     	;# 
  1568  0018                     	;# 
  1569  0019                     	;# 
  1570  0019                     	;# 
  1571  001A                     	;# 
  1572  001B                     	;# 
  1573  001C                     	;# 
  1574  001D                     	;# 
  1575  001E                     	;# 
  1576  001F                     	;# 
  1577  008C                     	;# 
  1578  008D                     	;# 
  1579  008E                     	;# 
  1580  0090                     	;# 
  1581  0091                     	;# 
  1582  0092                     	;# 
  1583  0093                     	;# 
  1584  0094                     	;# 
  1585  0097                     	;# 
  1586  009B                     	;# 
  1587  009B                     	;# 
  1588  009C                     	;# 
  1589  009D                     	;# 
  1590  009E                     	;# 
  1591  009F                     	;# 
  1592  010C                     	;# 
  1593  010D                     	;# 
  1594  010E                     	;# 
  1595  0111                     	;# 
  1596  0112                     	;# 
  1597  0113                     	;# 
  1598  0114                     	;# 
  1599  0115                     	;# 
  1600  0116                     	;# 
  1601  0117                     	;# 
  1602  0118                     	;# 
  1603  0119                     	;# 
  1604  018C                     	;# 
  1605  018D                     	;# 
  1606  018E                     	;# 
  1607  0197                     	;# 
  1608  0199                     	;# 
  1609  0199                     	;# 
  1610  0199                     	;# 
  1611  019A                     	;# 
  1612  019A                     	;# 
  1613  019A                     	;# 
  1614  019B                     	;# 
  1615  019B                     	;# 
  1616  019B                     	;# 
  1617  019B                     	;# 
  1618  019B                     	;# 
  1619  019C                     	;# 
  1620  019C                     	;# 
  1621  019C                     	;# 
  1622  019D                     	;# 
  1623  019D                     	;# 
  1624  019D                     	;# 
  1625  019E                     	;# 
  1626  019E                     	;# 
  1627  019E                     	;# 
  1628  019F                     	;# 
  1629  019F                     	;# 
  1630  019F                     	;# 
  1631  019F                     	;# 
  1632  019F                     	;# 
  1633  020C                     	;# 
  1634  020D                     	;# 
  1635  020E                     	;# 
  1636  0211                     	;# 
  1637  0211                     	;# 
  1638  0212                     	;# 
  1639  0212                     	;# 
  1640  0213                     	;# 
  1641  0213                     	;# 
  1642  0214                     	;# 
  1643  0214                     	;# 
  1644  0215                     	;# 
  1645  0215                     	;# 
  1646  0215                     	;# 
  1647  0215                     	;# 
  1648  0216                     	;# 
  1649  0216                     	;# 
  1650  0217                     	;# 
  1651  0217                     	;# 
  1652  0219                     	;# 
  1653  021A                     	;# 
  1654  021B                     	;# 
  1655  021C                     	;# 
  1656  021D                     	;# 
  1657  021D                     	;# 
  1658  021E                     	;# 
  1659  021F                     	;# 
  1660  028C                     	;# 
  1661  028D                     	;# 
  1662  028E                     	;# 
  1663  0291                     	;# 
  1664  0291                     	;# 
  1665  0292                     	;# 
  1666  0293                     	;# 
  1667  0294                     	;# 
  1668  0295                     	;# 
  1669  0295                     	;# 
  1670  0296                     	;# 
  1671  0297                     	;# 
  1672  0298                     	;# 
  1673  029F                     	;# 
  1674  030C                     	;# 
  1675  030D                     	;# 
  1676  030E                     	;# 
  1677  0311                     	;# 
  1678  0311                     	;# 
  1679  0312                     	;# 
  1680  0313                     	;# 
  1681  0314                     	;# 
  1682  0315                     	;# 
  1683  0315                     	;# 
  1684  0316                     	;# 
  1685  0317                     	;# 
  1686  0318                     	;# 
  1687  038C                     	;# 
  1688  038D                     	;# 
  1689  038E                     	;# 
  1690  0391                     	;# 
  1691  0392                     	;# 
  1692  0393                     	;# 
  1693  0394                     	;# 
  1694  0395                     	;# 
  1695  0396                     	;# 
  1696  0397                     	;# 
  1697  0398                     	;# 
  1698  0399                     	;# 
  1699  039A                     	;# 
  1700  039C                     	;# 
  1701  039D                     	;# 
  1702  039E                     	;# 
  1703  039F                     	;# 
  1704  0411                     	;# 
  1705  0411                     	;# 
  1706  0412                     	;# 
  1707  0413                     	;# 
  1708  0414                     	;# 
  1709  0415                     	;# 
  1710  0416                     	;# 
  1711  0417                     	;# 
  1712  0418                     	;# 
  1713  0418                     	;# 
  1714  0419                     	;# 
  1715  041A                     	;# 
  1716  041B                     	;# 
  1717  041C                     	;# 
  1718  041D                     	;# 
  1719  041E                     	;# 
  1720  041F                     	;# 
  1721  0498                     	;# 
  1722  0498                     	;# 
  1723  0499                     	;# 
  1724  049A                     	;# 
  1725  049B                     	;# 
  1726  049B                     	;# 
  1727  049C                     	;# 
  1728  049D                     	;# 
  1729  049E                     	;# 
  1730  049F                     	;# 
  1731  0617                     	;# 
  1732  0618                     	;# 
  1733  0619                     	;# 
  1734  0619                     	;# 
  1735  061A                     	;# 
  1736  061B                     	;# 
  1737  061C                     	;# 
  1738  061C                     	;# 
  1739  061F                     	;# 
  1740  0691                     	;# 
  1741  0692                     	;# 
  1742  0693                     	;# 
  1743  0694                     	;# 
  1744  0695                     	;# 
  1745  0696                     	;# 
  1746  0697                     	;# 
  1747  0698                     	;# 
  1748  0699                     	;# 
  1749  0711                     	;# 
  1750  0712                     	;# 
  1751  0713                     	;# 
  1752  0714                     	;# 
  1753  0715                     	;# 
  1754  0716                     	;# 
  1755  0717                     	;# 
  1756  0718                     	;# 
  1757  0719                     	;# 
  1758  0891                     	;# 
  1759  0891                     	;# 
  1760  0891                     	;# 
  1761  0891                     	;# 
  1762  0891                     	;# 
  1763  0891                     	;# 
  1764  0892                     	;# 
  1765  0892                     	;# 
  1766  0892                     	;# 
  1767  0893                     	;# 
  1768  0893                     	;# 
  1769  0893                     	;# 
  1770  0893                     	;# 
  1771  0893                     	;# 
  1772  0893                     	;# 
  1773  0894                     	;# 
  1774  0894                     	;# 
  1775  0894                     	;# 
  1776  0895                     	;# 
  1777  0895                     	;# 
  1778  0895                     	;# 
  1779  0896                     	;# 
  1780  0896                     	;# 
  1781  0896                     	;# 
  1782  089B                     	;# 
  1783  0911                     	;# 
  1784  0912                     	;# 
  1785  0913                     	;# 
  1786  0914                     	;# 
  1787  0915                     	;# 
  1788  0916                     	;# 
  1789  0918                     	;# 
  1790  0919                     	;# 
  1791  091A                     	;# 
  1792  091B                     	;# 
  1793  091C                     	;# 
  1794  091D                     	;# 
  1795  091E                     	;# 
  1796  091F                     	;# 
  1797  0E0F                     	;# 
  1798  0E10                     	;# 
  1799  0E11                     	;# 
  1800  0E12                     	;# 
  1801  0E13                     	;# 
  1802  0E14                     	;# 
  1803  0E15                     	;# 
  1804  0E16                     	;# 
  1805  0E17                     	;# 
  1806  0E18                     	;# 
  1807  0E19                     	;# 
  1808  0E1A                     	;# 
  1809  0E1B                     	;# 
  1810  0E1C                     	;# 
  1811  0E1D                     	;# 
  1812  0E1E                     	;# 
  1813  0E1F                     	;# 
  1814  0E20                     	;# 
  1815  0E21                     	;# 
  1816  0E22                     	;# 
  1817  0E24                     	;# 
  1818  0E25                     	;# 
  1819  0E28                     	;# 
  1820  0E29                     	;# 
  1821  0E2A                     	;# 
  1822  0E2B                     	;# 
  1823  0E2C                     	;# 
  1824  0E2D                     	;# 
  1825  0E2E                     	;# 
  1826  0E2F                     	;# 
  1827  0E90                     	;# 
  1828  0E91                     	;# 
  1829  0E92                     	;# 
  1830  0E94                     	;# 
  1831  0E95                     	;# 
  1832  0E9C                     	;# 
  1833  0E9D                     	;# 
  1834  0E9E                     	;# 
  1835  0E9F                     	;# 
  1836  0EA0                     	;# 
  1837  0EA1                     	;# 
  1838  0EA2                     	;# 
  1839  0EA3                     	;# 
  1840  0EA4                     	;# 
  1841  0EA5                     	;# 
  1842  0EA6                     	;# 
  1843  0EA7                     	;# 
  1844  0F0F                     	;# 
  1845  0F10                     	;# 
  1846  0F11                     	;# 
  1847  0F12                     	;# 
  1848  0F13                     	;# 
  1849  0F14                     	;# 
  1850  0F15                     	;# 
  1851  0F16                     	;# 
  1852  0F17                     	;# 
  1853  0F18                     	;# 
  1854  0F19                     	;# 
  1855  0F1A                     	;# 
  1856  0F1B                     	;# 
  1857  0F1C                     	;# 
  1858  0F1D                     	;# 
  1859  0F1E                     	;# 
  1860  0F1F                     	;# 
  1861  0F20                     	;# 
  1862  0F21                     	;# 
  1863  0F22                     	;# 
  1864  0F23                     	;# 
  1865  0F24                     	;# 
  1866  0F25                     	;# 
  1867  0F26                     	;# 
  1868  0F27                     	;# 
  1869  0F28                     	;# 
  1870  0F29                     	;# 
  1871  0F2A                     	;# 
  1872  0F2B                     	;# 
  1873  0F2C                     	;# 
  1874  0F2D                     	;# 
  1875  0F2E                     	;# 
  1876  0F2F                     	;# 
  1877  0F30                     	;# 
  1878  0F31                     	;# 
  1879  0F32                     	;# 
  1880  0F33                     	;# 
  1881  0F34                     	;# 
  1882  0F35                     	;# 
  1883  0F36                     	;# 
  1884  0F37                     	;# 
  1885  0FE4                     	;# 
  1886  0FE5                     	;# 
  1887  0FE6                     	;# 
  1888  0FE7                     	;# 
  1889  0FE8                     	;# 
  1890  0FE9                     	;# 
  1891  0FEA                     	;# 
  1892  0FEB                     	;# 
  1893  0FED                     	;# 
  1894  0FEE                     	;# 
  1895  0FEF                     	;# 
  1896  0000                     	;# 
  1897  0001                     	;# 
  1898  0002                     	;# 
  1899  0003                     	;# 
  1900  0004                     	;# 
  1901  0005                     	;# 
  1902  0006                     	;# 
  1903  0007                     	;# 
  1904  0008                     	;# 
  1905  0009                     	;# 
  1906  000A                     	;# 
  1907  000B                     	;# 
  1908  000C                     	;# 
  1909  000D                     	;# 
  1910  000E                     	;# 
  1911  0010                     	;# 
  1912  0011                     	;# 
  1913  0012                     	;# 
  1914  0013                     	;# 
  1915  0014                     	;# 
  1916  0015                     	;# 
  1917  0015                     	;# 
  1918  0016                     	;# 
  1919  0016                     	;# 
  1920  0017                     	;# 
  1921  0018                     	;# 
  1922  0019                     	;# 
  1923  0019                     	;# 
  1924  001A                     	;# 
  1925  001B                     	;# 
  1926  001C                     	;# 
  1927  001D                     	;# 
  1928  001E                     	;# 
  1929  001F                     	;# 
  1930  008C                     	;# 
  1931  008D                     	;# 
  1932  008E                     	;# 
  1933  0090                     	;# 
  1934  0091                     	;# 
  1935  0092                     	;# 
  1936  0093                     	;# 
  1937  0094                     	;# 
  1938  0097                     	;# 
  1939  009B                     	;# 
  1940  009B                     	;# 
  1941  009C                     	;# 
  1942  009D                     	;# 
  1943  009E                     	;# 
  1944  009F                     	;# 
  1945  010C                     	;# 
  1946  010D                     	;# 
  1947  010E                     	;# 
  1948  0111                     	;# 
  1949  0112                     	;# 
  1950  0113                     	;# 
  1951  0114                     	;# 
  1952  0115                     	;# 
  1953  0116                     	;# 
  1954  0117                     	;# 
  1955  0118                     	;# 
  1956  0119                     	;# 
  1957  018C                     	;# 
  1958  018D                     	;# 
  1959  018E                     	;# 
  1960  0197                     	;# 
  1961  0199                     	;# 
  1962  0199                     	;# 
  1963  0199                     	;# 
  1964  019A                     	;# 
  1965  019A                     	;# 
  1966  019A                     	;# 
  1967  019B                     	;# 
  1968  019B                     	;# 
  1969  019B                     	;# 
  1970  019B                     	;# 
  1971  019B                     	;# 
  1972  019C                     	;# 
  1973  019C                     	;# 
  1974  019C                     	;# 
  1975  019D                     	;# 
  1976  019D                     	;# 
  1977  019D                     	;# 
  1978  019E                     	;# 
  1979  019E                     	;# 
  1980  019E                     	;# 
  1981  019F                     	;# 
  1982  019F                     	;# 
  1983  019F                     	;# 
  1984  019F                     	;# 
  1985  019F                     	;# 
  1986  020C                     	;# 
  1987  020D                     	;# 
  1988  020E                     	;# 
  1989  0211                     	;# 
  1990  0211                     	;# 
  1991  0212                     	;# 
  1992  0212                     	;# 
  1993  0213                     	;# 
  1994  0213                     	;# 
  1995  0214                     	;# 
  1996  0214                     	;# 
  1997  0215                     	;# 
  1998  0215                     	;# 
  1999  0215                     	;# 
  2000  0215                     	;# 
  2001  0216                     	;# 
  2002  0216                     	;# 
  2003  0217                     	;# 
  2004  0217                     	;# 
  2005  0219                     	;# 
  2006  021A                     	;# 
  2007  021B                     	;# 
  2008  021C                     	;# 
  2009  021D                     	;# 
  2010  021D                     	;# 
  2011  021E                     	;# 
  2012  021F                     	;# 
  2013  028C                     	;# 
  2014  028D                     	;# 
  2015  028E                     	;# 
  2016  0291                     	;# 
  2017  0291                     	;# 
  2018  0292                     	;# 
  2019  0293                     	;# 
  2020  0294                     	;# 
  2021  0295                     	;# 
  2022  0295                     	;# 
  2023  0296                     	;# 
  2024  0297                     	;# 
  2025  0298                     	;# 
  2026  029F                     	;# 
  2027  030C                     	;# 
  2028  030D                     	;# 
  2029  030E                     	;# 
  2030  0311                     	;# 
  2031  0311                     	;# 
  2032  0312                     	;# 
  2033  0313                     	;# 
  2034  0314                     	;# 
  2035  0315                     	;# 
  2036  0315                     	;# 
  2037  0316                     	;# 
  2038  0317                     	;# 
  2039  0318                     	;# 
  2040  038C                     	;# 
  2041  038D                     	;# 
  2042  038E                     	;# 
  2043  0391                     	;# 
  2044  0392                     	;# 
  2045  0393                     	;# 
  2046  0394                     	;# 
  2047  0395                     	;# 
  2048  0396                     	;# 
  2049  0397                     	;# 
  2050  0398                     	;# 
  2051  0399                     	;# 
  2052  039A                     	;# 
  2053  039C                     	;# 
  2054  039D                     	;# 
  2055  039E                     	;# 
  2056  039F                     	;# 
  2057  0411                     	;# 
  2058  0411                     	;# 
  2059  0412                     	;# 
  2060  0413                     	;# 
  2061  0414                     	;# 
  2062  0415                     	;# 
  2063  0416                     	;# 
  2064  0417                     	;# 
  2065  0418                     	;# 
  2066  0418                     	;# 
  2067  0419                     	;# 
  2068  041A                     	;# 
  2069  041B                     	;# 
  2070  041C                     	;# 
  2071  041D                     	;# 
  2072  041E                     	;# 
  2073  041F                     	;# 
  2074  0498                     	;# 
  2075  0498                     	;# 
  2076  0499                     	;# 
  2077  049A                     	;# 
  2078  049B                     	;# 
  2079  049B                     	;# 
  2080  049C                     	;# 
  2081  049D                     	;# 
  2082  049E                     	;# 
  2083  049F                     	;# 
  2084  0617                     	;# 
  2085  0618                     	;# 
  2086  0619                     	;# 
  2087  0619                     	;# 
  2088  061A                     	;# 
  2089  061B                     	;# 
  2090  061C                     	;# 
  2091  061C                     	;# 
  2092  061F                     	;# 
  2093  0691                     	;# 
  2094  0692                     	;# 
  2095  0693                     	;# 
  2096  0694                     	;# 
  2097  0695                     	;# 
  2098  0696                     	;# 
  2099  0697                     	;# 
  2100  0698                     	;# 
  2101  0699                     	;# 
  2102  0711                     	;# 
  2103  0712                     	;# 
  2104  0713                     	;# 
  2105  0714                     	;# 
  2106  0715                     	;# 
  2107  0716                     	;# 
  2108  0717                     	;# 
  2109  0718                     	;# 
  2110  0719                     	;# 
  2111  0891                     	;# 
  2112  0891                     	;# 
  2113  0891                     	;# 
  2114  0891                     	;# 
  2115  0891                     	;# 
  2116  0891                     	;# 
  2117  0892                     	;# 
  2118  0892                     	;# 
  2119  0892                     	;# 
  2120  0893                     	;# 
  2121  0893                     	;# 
  2122  0893                     	;# 
  2123  0893                     	;# 
  2124  0893                     	;# 
  2125  0893                     	;# 
  2126  0894                     	;# 
  2127  0894                     	;# 
  2128  0894                     	;# 
  2129  0895                     	;# 
  2130  0895                     	;# 
  2131  0895                     	;# 
  2132  0896                     	;# 
  2133  0896                     	;# 
  2134  0896                     	;# 
  2135  089B                     	;# 
  2136  0911                     	;# 
  2137  0912                     	;# 
  2138  0913                     	;# 
  2139  0914                     	;# 
  2140  0915                     	;# 
  2141  0916                     	;# 
  2142  0918                     	;# 
  2143  0919                     	;# 
  2144  091A                     	;# 
  2145  091B                     	;# 
  2146  091C                     	;# 
  2147  091D                     	;# 
  2148  091E                     	;# 
  2149  091F                     	;# 
  2150  0E0F                     	;# 
  2151  0E10                     	;# 
  2152  0E11                     	;# 
  2153  0E12                     	;# 
  2154  0E13                     	;# 
  2155  0E14                     	;# 
  2156  0E15                     	;# 
  2157  0E16                     	;# 
  2158  0E17                     	;# 
  2159  0E18                     	;# 
  2160  0E19                     	;# 
  2161  0E1A                     	;# 
  2162  0E1B                     	;# 
  2163  0E1C                     	;# 
  2164  0E1D                     	;# 
  2165  0E1E                     	;# 
  2166  0E1F                     	;# 
  2167  0E20                     	;# 
  2168  0E21                     	;# 
  2169  0E22                     	;# 
  2170  0E24                     	;# 
  2171  0E25                     	;# 
  2172  0E28                     	;# 
  2173  0E29                     	;# 
  2174  0E2A                     	;# 
  2175  0E2B                     	;# 
  2176  0E2C                     	;# 
  2177  0E2D                     	;# 
  2178  0E2E                     	;# 
  2179  0E2F                     	;# 
  2180  0E90                     	;# 
  2181  0E91                     	;# 
  2182  0E92                     	;# 
  2183  0E94                     	;# 
  2184  0E95                     	;# 
  2185  0E9C                     	;# 
  2186  0E9D                     	;# 
  2187  0E9E                     	;# 
  2188  0E9F                     	;# 
  2189  0EA0                     	;# 
  2190  0EA1                     	;# 
  2191  0EA2                     	;# 
  2192  0EA3                     	;# 
  2193  0EA4                     	;# 
  2194  0EA5                     	;# 
  2195  0EA6                     	;# 
  2196  0EA7                     	;# 
  2197  0F0F                     	;# 
  2198  0F10                     	;# 
  2199  0F11                     	;# 
  2200  0F12                     	;# 
  2201  0F13                     	;# 
  2202  0F14                     	;# 
  2203  0F15                     	;# 
  2204  0F16                     	;# 
  2205  0F17                     	;# 
  2206  0F18                     	;# 
  2207  0F19                     	;# 
  2208  0F1A                     	;# 
  2209  0F1B                     	;# 
  2210  0F1C                     	;# 
  2211  0F1D                     	;# 
  2212  0F1E                     	;# 
  2213  0F1F                     	;# 
  2214  0F20                     	;# 
  2215  0F21                     	;# 
  2216  0F22                     	;# 
  2217  0F23                     	;# 
  2218  0F24                     	;# 
  2219  0F25                     	;# 
  2220  0F26                     	;# 
  2221  0F27                     	;# 
  2222  0F28                     	;# 
  2223  0F29                     	;# 
  2224  0F2A                     	;# 
  2225  0F2B                     	;# 
  2226  0F2C                     	;# 
  2227  0F2D                     	;# 
  2228  0F2E                     	;# 
  2229  0F2F                     	;# 
  2230  0F30                     	;# 
  2231  0F31                     	;# 
  2232  0F32                     	;# 
  2233  0F33                     	;# 
  2234  0F34                     	;# 
  2235  0F35                     	;# 
  2236  0F36                     	;# 
  2237  0F37                     	;# 
  2238  0FE4                     	;# 
  2239  0FE5                     	;# 
  2240  0FE6                     	;# 
  2241  0FE7                     	;# 
  2242  0FE8                     	;# 
  2243  0FE9                     	;# 
  2244  0FEA                     	;# 
  2245  0FEB                     	;# 
  2246  0FED                     	;# 
  2247  0FEE                     	;# 
  2248  0FEF                     	;# 
  2249  0000                     	;# 
  2250  0001                     	;# 
  2251  0002                     	;# 
  2252  0003                     	;# 
  2253  0004                     	;# 
  2254  0005                     	;# 
  2255  0006                     	;# 
  2256  0007                     	;# 
  2257  0008                     	;# 
  2258  0009                     	;# 
  2259  000A                     	;# 
  2260  000B                     	;# 
  2261  000C                     	;# 
  2262  000D                     	;# 
  2263  000E                     	;# 
  2264  0010                     	;# 
  2265  0011                     	;# 
  2266  0012                     	;# 
  2267  0013                     	;# 
  2268  0014                     	;# 
  2269  0015                     	;# 
  2270  0015                     	;# 
  2271  0016                     	;# 
  2272  0016                     	;# 
  2273  0017                     	;# 
  2274  0018                     	;# 
  2275  0019                     	;# 
  2276  0019                     	;# 
  2277  001A                     	;# 
  2278  001B                     	;# 
  2279  001C                     	;# 
  2280  001D                     	;# 
  2281  001E                     	;# 
  2282  001F                     	;# 
  2283  008C                     	;# 
  2284  008D                     	;# 
  2285  008E                     	;# 
  2286  0090                     	;# 
  2287  0091                     	;# 
  2288  0092                     	;# 
  2289  0093                     	;# 
  2290  0094                     	;# 
  2291  0097                     	;# 
  2292  009B                     	;# 
  2293  009B                     	;# 
  2294  009C                     	;# 
  2295  009D                     	;# 
  2296  009E                     	;# 
  2297  009F                     	;# 
  2298  010C                     	;# 
  2299  010D                     	;# 
  2300  010E                     	;# 
  2301  0111                     	;# 
  2302  0112                     	;# 
  2303  0113                     	;# 
  2304  0114                     	;# 
  2305  0115                     	;# 
  2306  0116                     	;# 
  2307  0117                     	;# 
  2308  0118                     	;# 
  2309  0119                     	;# 
  2310  018C                     	;# 
  2311  018D                     	;# 
  2312  018E                     	;# 
  2313  0197                     	;# 
  2314  0199                     	;# 
  2315  0199                     	;# 
  2316  0199                     	;# 
  2317  019A                     	;# 
  2318  019A                     	;# 
  2319  019A                     	;# 
  2320  019B                     	;# 
  2321  019B                     	;# 
  2322  019B                     	;# 
  2323  019B                     	;# 
  2324  019B                     	;# 
  2325  019C                     	;# 
  2326  019C                     	;# 
  2327  019C                     	;# 
  2328  019D                     	;# 
  2329  019D                     	;# 
  2330  019D                     	;# 
  2331  019E                     	;# 
  2332  019E                     	;# 
  2333  019E                     	;# 
  2334  019F                     	;# 
  2335  019F                     	;# 
  2336  019F                     	;# 
  2337  019F                     	;# 
  2338  019F                     	;# 
  2339  020C                     	;# 
  2340  020D                     	;# 
  2341  020E                     	;# 
  2342  0211                     	;# 
  2343  0211                     	;# 
  2344  0212                     	;# 
  2345  0212                     	;# 
  2346  0213                     	;# 
  2347  0213                     	;# 
  2348  0214                     	;# 
  2349  0214                     	;# 
  2350  0215                     	;# 
  2351  0215                     	;# 
  2352  0215                     	;# 
  2353  0215                     	;# 
  2354  0216                     	;# 
  2355  0216                     	;# 
  2356  0217                     	;# 
  2357  0217                     	;# 
  2358  0219                     	;# 
  2359  021A                     	;# 
  2360  021B                     	;# 
  2361  021C                     	;# 
  2362  021D                     	;# 
  2363  021D                     	;# 
  2364  021E                     	;# 
  2365  021F                     	;# 
  2366  028C                     	;# 
  2367  028D                     	;# 
  2368  028E                     	;# 
  2369  0291                     	;# 
  2370  0291                     	;# 
  2371  0292                     	;# 
  2372  0293                     	;# 
  2373  0294                     	;# 
  2374  0295                     	;# 
  2375  0295                     	;# 
  2376  0296                     	;# 
  2377  0297                     	;# 
  2378  0298                     	;# 
  2379  029F                     	;# 
  2380  030C                     	;# 
  2381  030D                     	;# 
  2382  030E                     	;# 
  2383  0311                     	;# 
  2384  0311                     	;# 
  2385  0312                     	;# 
  2386  0313                     	;# 
  2387  0314                     	;# 
  2388  0315                     	;# 
  2389  0315                     	;# 
  2390  0316                     	;# 
  2391  0317                     	;# 
  2392  0318                     	;# 
  2393  038C                     	;# 
  2394  038D                     	;# 
  2395  038E                     	;# 
  2396  0391                     	;# 
  2397  0392                     	;# 
  2398  0393                     	;# 
  2399  0394                     	;# 
  2400  0395                     	;# 
  2401  0396                     	;# 
  2402  0397                     	;# 
  2403  0398                     	;# 
  2404  0399                     	;# 
  2405  039A                     	;# 
  2406  039C                     	;# 
  2407  039D                     	;# 
  2408  039E                     	;# 
  2409  039F                     	;# 
  2410  0411                     	;# 
  2411  0411                     	;# 
  2412  0412                     	;# 
  2413  0413                     	;# 
  2414  0414                     	;# 
  2415  0415                     	;# 
  2416  0416                     	;# 
  2417  0417                     	;# 
  2418  0418                     	;# 
  2419  0418                     	;# 
  2420  0419                     	;# 
  2421  041A                     	;# 
  2422  041B                     	;# 
  2423  041C                     	;# 
  2424  041D                     	;# 
  2425  041E                     	;# 
  2426  041F                     	;# 
  2427  0498                     	;# 
  2428  0498                     	;# 
  2429  0499                     	;# 
  2430  049A                     	;# 
  2431  049B                     	;# 
  2432  049B                     	;# 
  2433  049C                     	;# 
  2434  049D                     	;# 
  2435  049E                     	;# 
  2436  049F                     	;# 
  2437  0617                     	;# 
  2438  0618                     	;# 
  2439  0619                     	;# 
  2440  0619                     	;# 
  2441  061A                     	;# 
  2442  061B                     	;# 
  2443  061C                     	;# 
  2444  061C                     	;# 
  2445  061F                     	;# 
  2446  0691                     	;# 
  2447  0692                     	;# 
  2448  0693                     	;# 
  2449  0694                     	;# 
  2450  0695                     	;# 
  2451  0696                     	;# 
  2452  0697                     	;# 
  2453  0698                     	;# 
  2454  0699                     	;# 
  2455  0711                     	;# 
  2456  0712                     	;# 
  2457  0713                     	;# 
  2458  0714                     	;# 
  2459  0715                     	;# 
  2460  0716                     	;# 
  2461  0717                     	;# 
  2462  0718                     	;# 
  2463  0719                     	;# 
  2464  0891                     	;# 
  2465  0891                     	;# 
  2466  0891                     	;# 
  2467  0891                     	;# 
  2468  0891                     	;# 
  2469  0891                     	;# 
  2470  0892                     	;# 
  2471  0892                     	;# 
  2472  0892                     	;# 
  2473  0893                     	;# 
  2474  0893                     	;# 
  2475  0893                     	;# 
  2476  0893                     	;# 
  2477  0893                     	;# 
  2478  0893                     	;# 
  2479  0894                     	;# 
  2480  0894                     	;# 
  2481  0894                     	;# 
  2482  0895                     	;# 
  2483  0895                     	;# 
  2484  0895                     	;# 
  2485  0896                     	;# 
  2486  0896                     	;# 
  2487  0896                     	;# 
  2488  089B                     	;# 
  2489  0911                     	;# 
  2490  0912                     	;# 
  2491  0913                     	;# 
  2492  0914                     	;# 
  2493  0915                     	;# 
  2494  0916                     	;# 
  2495  0918                     	;# 
  2496  0919                     	;# 
  2497  091A                     	;# 
  2498  091B                     	;# 
  2499  091C                     	;# 
  2500  091D                     	;# 
  2501  091E                     	;# 
  2502  091F                     	;# 
  2503  0E0F                     	;# 
  2504  0E10                     	;# 
  2505  0E11                     	;# 
  2506  0E12                     	;# 
  2507  0E13                     	;# 
  2508  0E14                     	;# 
  2509  0E15                     	;# 
  2510  0E16                     	;# 
  2511  0E17                     	;# 
  2512  0E18                     	;# 
  2513  0E19                     	;# 
  2514  0E1A                     	;# 
  2515  0E1B                     	;# 
  2516  0E1C                     	;# 
  2517  0E1D                     	;# 
  2518  0E1E                     	;# 
  2519  0E1F                     	;# 
  2520  0E20                     	;# 
  2521  0E21                     	;# 
  2522  0E22                     	;# 
  2523  0E24                     	;# 
  2524  0E25                     	;# 
  2525  0E28                     	;# 
  2526  0E29                     	;# 
  2527  0E2A                     	;# 
  2528  0E2B                     	;# 
  2529  0E2C                     	;# 
  2530  0E2D                     	;# 
  2531  0E2E                     	;# 
  2532  0E2F                     	;# 
  2533  0E90                     	;# 
  2534  0E91                     	;# 
  2535  0E92                     	;# 
  2536  0E94                     	;# 
  2537  0E95                     	;# 
  2538  0E9C                     	;# 
  2539  0E9D                     	;# 
  2540  0E9E                     	;# 
  2541  0E9F                     	;# 
  2542  0EA0                     	;# 
  2543  0EA1                     	;# 
  2544  0EA2                     	;# 
  2545  0EA3                     	;# 
  2546  0EA4                     	;# 
  2547  0EA5                     	;# 
  2548  0EA6                     	;# 
  2549  0EA7                     	;# 
  2550  0F0F                     	;# 
  2551  0F10                     	;# 
  2552  0F11                     	;# 
  2553  0F12                     	;# 
  2554  0F13                     	;# 
  2555  0F14                     	;# 
  2556  0F15                     	;# 
  2557  0F16                     	;# 
  2558  0F17                     	;# 
  2559  0F18                     	;# 
  2560  0F19                     	;# 
  2561  0F1A                     	;# 
  2562  0F1B                     	;# 
  2563  0F1C                     	;# 
  2564  0F1D                     	;# 
  2565  0F1E                     	;# 
  2566  0F1F                     	;# 
  2567  0F20                     	;# 
  2568  0F21                     	;# 
  2569  0F22                     	;# 
  2570  0F23                     	;# 
  2571  0F24                     	;# 
  2572  0F25                     	;# 
  2573  0F26                     	;# 
  2574  0F27                     	;# 
  2575  0F28                     	;# 
  2576  0F29                     	;# 
  2577  0F2A                     	;# 
  2578  0F2B                     	;# 
  2579  0F2C                     	;# 
  2580  0F2D                     	;# 
  2581  0F2E                     	;# 
  2582  0F2F                     	;# 
  2583  0F30                     	;# 
  2584  0F31                     	;# 
  2585  0F32                     	;# 
  2586  0F33                     	;# 
  2587  0F34                     	;# 
  2588  0F35                     	;# 
  2589  0F36                     	;# 
  2590  0F37                     	;# 
  2591  0FE4                     	;# 
  2592  0FE5                     	;# 
  2593  0FE6                     	;# 
  2594  0FE7                     	;# 
  2595  0FE8                     	;# 
  2596  0FE9                     	;# 
  2597  0FEA                     	;# 
  2598  0FEB                     	;# 
  2599  0FED                     	;# 
  2600  0FEE                     	;# 
  2601  0FEF                     	;# 
  2602  0000                     	;# 
  2603  0001                     	;# 
  2604  0002                     	;# 
  2605  0003                     	;# 
  2606  0004                     	;# 
  2607  0005                     	;# 
  2608  0006                     	;# 
  2609  0007                     	;# 
  2610  0008                     	;# 
  2611  0009                     	;# 
  2612  000A                     	;# 
  2613  000B                     	;# 
  2614  000C                     	;# 
  2615  000D                     	;# 
  2616  000E                     	;# 
  2617  0010                     	;# 
  2618  0011                     	;# 
  2619  0012                     	;# 
  2620  0013                     	;# 
  2621  0014                     	;# 
  2622  0015                     	;# 
  2623  0015                     	;# 
  2624  0016                     	;# 
  2625  0016                     	;# 
  2626  0017                     	;# 
  2627  0018                     	;# 
  2628  0019                     	;# 
  2629  0019                     	;# 
  2630  001A                     	;# 
  2631  001B                     	;# 
  2632  001C                     	;# 
  2633  001D                     	;# 
  2634  001E                     	;# 
  2635  001F                     	;# 
  2636  008C                     	;# 
  2637  008D                     	;# 
  2638  008E                     	;# 
  2639  0090                     	;# 
  2640  0091                     	;# 
  2641  0092                     	;# 
  2642  0093                     	;# 
  2643  0094                     	;# 
  2644  0097                     	;# 
  2645  009B                     	;# 
  2646  009B                     	;# 
  2647  009C                     	;# 
  2648  009D                     	;# 
  2649  009E                     	;# 
  2650  009F                     	;# 
  2651  010C                     	;# 
  2652  010D                     	;# 
  2653  010E                     	;# 
  2654  0111                     	;# 
  2655  0112                     	;# 
  2656  0113                     	;# 
  2657  0114                     	;# 
  2658  0115                     	;# 
  2659  0116                     	;# 
  2660  0117                     	;# 
  2661  0118                     	;# 
  2662  0119                     	;# 
  2663  018C                     	;# 
  2664  018D                     	;# 
  2665  018E                     	;# 
  2666  0197                     	;# 
  2667  0199                     	;# 
  2668  0199                     	;# 
  2669  0199                     	;# 
  2670  019A                     	;# 
  2671  019A                     	;# 
  2672  019A                     	;# 
  2673  019B                     	;# 
  2674  019B                     	;# 
  2675  019B                     	;# 
  2676  019B                     	;# 
  2677  019B                     	;# 
  2678  019C                     	;# 
  2679  019C                     	;# 
  2680  019C                     	;# 
  2681  019D                     	;# 
  2682  019D                     	;# 
  2683  019D                     	;# 
  2684  019E                     	;# 
  2685  019E                     	;# 
  2686  019E                     	;# 
  2687  019F                     	;# 
  2688  019F                     	;# 
  2689  019F                     	;# 
  2690  019F                     	;# 
  2691  019F                     	;# 
  2692  020C                     	;# 
  2693  020D                     	;# 
  2694  020E                     	;# 
  2695  0211                     	;# 
  2696  0211                     	;# 
  2697  0212                     	;# 
  2698  0212                     	;# 
  2699  0213                     	;# 
  2700  0213                     	;# 
  2701  0214                     	;# 
  2702  0214                     	;# 
  2703  0215                     	;# 
  2704  0215                     	;# 
  2705  0215                     	;# 
  2706  0215                     	;# 
  2707  0216                     	;# 
  2708  0216                     	;# 
  2709  0217                     	;# 
  2710  0217                     	;# 
  2711  0219                     	;# 
  2712  021A                     	;# 
  2713  021B                     	;# 
  2714  021C                     	;# 
  2715  021D                     	;# 
  2716  021D                     	;# 
  2717  021E                     	;# 
  2718  021F                     	;# 
  2719  028C                     	;# 
  2720  028D                     	;# 
  2721  028E                     	;# 
  2722  0291                     	;# 
  2723  0291                     	;# 
  2724  0292                     	;# 
  2725  0293                     	;# 
  2726  0294                     	;# 
  2727  0295                     	;# 
  2728  0295                     	;# 
  2729  0296                     	;# 
  2730  0297                     	;# 
  2731  0298                     	;# 
  2732  029F                     	;# 
  2733  030C                     	;# 
  2734  030D                     	;# 
  2735  030E                     	;# 
  2736  0311                     	;# 
  2737  0311                     	;# 
  2738  0312                     	;# 
  2739  0313                     	;# 
  2740  0314                     	;# 
  2741  0315                     	;# 
  2742  0315                     	;# 
  2743  0316                     	;# 
  2744  0317                     	;# 
  2745  0318                     	;# 
  2746  038C                     	;# 
  2747  038D                     	;# 
  2748  038E                     	;# 
  2749  0391                     	;# 
  2750  0392                     	;# 
  2751  0393                     	;# 
  2752  0394                     	;# 
  2753  0395                     	;# 
  2754  0396                     	;# 
  2755  0397                     	;# 
  2756  0398                     	;# 
  2757  0399                     	;# 
  2758  039A                     	;# 
  2759  039C                     	;# 
  2760  039D                     	;# 
  2761  039E                     	;# 
  2762  039F                     	;# 
  2763  0411                     	;# 
  2764  0411                     	;# 
  2765  0412                     	;# 
  2766  0413                     	;# 
  2767  0414                     	;# 
  2768  0415                     	;# 
  2769  0416                     	;# 
  2770  0417                     	;# 
  2771  0418                     	;# 
  2772  0418                     	;# 
  2773  0419                     	;# 
  2774  041A                     	;# 
  2775  041B                     	;# 
  2776  041C                     	;# 
  2777  041D                     	;# 
  2778  041E                     	;# 
  2779  041F                     	;# 
  2780  0498                     	;# 
  2781  0498                     	;# 
  2782  0499                     	;# 
  2783  049A                     	;# 
  2784  049B                     	;# 
  2785  049B                     	;# 
  2786  049C                     	;# 
  2787  049D                     	;# 
  2788  049E                     	;# 
  2789  049F                     	;# 
  2790  0617                     	;# 
  2791  0618                     	;# 
  2792  0619                     	;# 
  2793  0619                     	;# 
  2794  061A                     	;# 
  2795  061B                     	;# 
  2796  061C                     	;# 
  2797  061C                     	;# 
  2798  061F                     	;# 
  2799  0691                     	;# 
  2800  0692                     	;# 
  2801  0693                     	;# 
  2802  0694                     	;# 
  2803  0695                     	;# 
  2804  0696                     	;# 
  2805  0697                     	;# 
  2806  0698                     	;# 
  2807  0699                     	;# 
  2808  0711                     	;# 
  2809  0712                     	;# 
  2810  0713                     	;# 
  2811  0714                     	;# 
  2812  0715                     	;# 
  2813  0716                     	;# 
  2814  0717                     	;# 
  2815  0718                     	;# 
  2816  0719                     	;# 
  2817  0891                     	;# 
  2818  0891                     	;# 
  2819  0891                     	;# 
  2820  0891                     	;# 
  2821  0891                     	;# 
  2822  0891                     	;# 
  2823  0892                     	;# 
  2824  0892                     	;# 
  2825  0892                     	;# 
  2826  0893                     	;# 
  2827  0893                     	;# 
  2828  0893                     	;# 
  2829  0893                     	;# 
  2830  0893                     	;# 
  2831  0893                     	;# 
  2832  0894                     	;# 
  2833  0894                     	;# 
  2834  0894                     	;# 
  2835  0895                     	;# 
  2836  0895                     	;# 
  2837  0895                     	;# 
  2838  0896                     	;# 
  2839  0896                     	;# 
  2840  0896                     	;# 
  2841  089B                     	;# 
  2842  0911                     	;# 
  2843  0912                     	;# 
  2844  0913                     	;# 
  2845  0914                     	;# 
  2846  0915                     	;# 
  2847  0916                     	;# 
  2848  0918                     	;# 
  2849  0919                     	;# 
  2850  091A                     	;# 
  2851  091B                     	;# 
  2852  091C                     	;# 
  2853  091D                     	;# 
  2854  091E                     	;# 
  2855  091F                     	;# 
  2856  0E0F                     	;# 
  2857  0E10                     	;# 
  2858  0E11                     	;# 
  2859  0E12                     	;# 
  2860  0E13                     	;# 
  2861  0E14                     	;# 
  2862  0E15                     	;# 
  2863  0E16                     	;# 
  2864  0E17                     	;# 
  2865  0E18                     	;# 
  2866  0E19                     	;# 
  2867  0E1A                     	;# 
  2868  0E1B                     	;# 
  2869  0E1C                     	;# 
  2870  0E1D                     	;# 
  2871  0E1E                     	;# 
  2872  0E1F                     	;# 
  2873  0E20                     	;# 
  2874  0E21                     	;# 
  2875  0E22                     	;# 
  2876  0E24                     	;# 
  2877  0E25                     	;# 
  2878  0E28                     	;# 
  2879  0E29                     	;# 
  2880  0E2A                     	;# 
  2881  0E2B                     	;# 
  2882  0E2C                     	;# 
  2883  0E2D                     	;# 
  2884  0E2E                     	;# 
  2885  0E2F                     	;# 
  2886  0E90                     	;# 
  2887  0E91                     	;# 
  2888  0E92                     	;# 
  2889  0E94                     	;# 
  2890  0E95                     	;# 
  2891  0E9C                     	;# 
  2892  0E9D                     	;# 
  2893  0E9E                     	;# 
  2894  0E9F                     	;# 
  2895  0EA0                     	;# 
  2896  0EA1                     	;# 
  2897  0EA2                     	;# 
  2898  0EA3                     	;# 
  2899  0EA4                     	;# 
  2900  0EA5                     	;# 
  2901  0EA6                     	;# 
  2902  0EA7                     	;# 
  2903  0F0F                     	;# 
  2904  0F10                     	;# 
  2905  0F11                     	;# 
  2906  0F12                     	;# 
  2907  0F13                     	;# 
  2908  0F14                     	;# 
  2909  0F15                     	;# 
  2910  0F16                     	;# 
  2911  0F17                     	;# 
  2912  0F18                     	;# 
  2913  0F19                     	;# 
  2914  0F1A                     	;# 
  2915  0F1B                     	;# 
  2916  0F1C                     	;# 
  2917  0F1D                     	;# 
  2918  0F1E                     	;# 
  2919  0F1F                     	;# 
  2920  0F20                     	;# 
  2921  0F21                     	;# 
  2922  0F22                     	;# 
  2923  0F23                     	;# 
  2924  0F24                     	;# 
  2925  0F25                     	;# 
  2926  0F26                     	;# 
  2927  0F27                     	;# 
  2928  0F28                     	;# 
  2929  0F29                     	;# 
  2930  0F2A                     	;# 
  2931  0F2B                     	;# 
  2932  0F2C                     	;# 
  2933  0F2D                     	;# 
  2934  0F2E                     	;# 
  2935  0F2F                     	;# 
  2936  0F30                     	;# 
  2937  0F31                     	;# 
  2938  0F32                     	;# 
  2939  0F33                     	;# 
  2940  0F34                     	;# 
  2941  0F35                     	;# 
  2942  0F36                     	;# 
  2943  0F37                     	;# 
  2944  0FE4                     	;# 
  2945  0FE5                     	;# 
  2946  0FE6                     	;# 
  2947  0FE7                     	;# 
  2948  0FE8                     	;# 
  2949  0FE9                     	;# 
  2950  0FEA                     	;# 
  2951  0FEB                     	;# 
  2952  0FED                     	;# 
  2953  0FEE                     	;# 
  2954  0FEF                     	;# 
  2955  0000                     	;# 
  2956  0001                     	;# 
  2957  0002                     	;# 
  2958  0003                     	;# 
  2959  0004                     	;# 
  2960  0005                     	;# 
  2961  0006                     	;# 
  2962  0007                     	;# 
  2963  0008                     	;# 
  2964  0009                     	;# 
  2965  000A                     	;# 
  2966  000B                     	;# 
  2967  000C                     	;# 
  2968  000D                     	;# 
  2969  000E                     	;# 
  2970  0010                     	;# 
  2971  0011                     	;# 
  2972  0012                     	;# 
  2973  0013                     	;# 
  2974  0014                     	;# 
  2975  0015                     	;# 
  2976  0015                     	;# 
  2977  0016                     	;# 
  2978  0016                     	;# 
  2979  0017                     	;# 
  2980  0018                     	;# 
  2981  0019                     	;# 
  2982  0019                     	;# 
  2983  001A                     	;# 
  2984  001B                     	;# 
  2985  001C                     	;# 
  2986  001D                     	;# 
  2987  001E                     	;# 
  2988  001F                     	;# 
  2989  008C                     	;# 
  2990  008D                     	;# 
  2991  008E                     	;# 
  2992  0090                     	;# 
  2993  0091                     	;# 
  2994  0092                     	;# 
  2995  0093                     	;# 
  2996  0094                     	;# 
  2997  0097                     	;# 
  2998  009B                     	;# 
  2999  009B                     	;# 
  3000  009C                     	;# 
  3001  009D                     	;# 
  3002  009E                     	;# 
  3003  009F                     	;# 
  3004  010C                     	;# 
  3005  010D                     	;# 
  3006  010E                     	;# 
  3007  0111                     	;# 
  3008  0112                     	;# 
  3009  0113                     	;# 
  3010  0114                     	;# 
  3011  0115                     	;# 
  3012  0116                     	;# 
  3013  0117                     	;# 
  3014  0118                     	;# 
  3015  0119                     	;# 
  3016  018C                     	;# 
  3017  018D                     	;# 
  3018  018E                     	;# 
  3019  0197                     	;# 
  3020  0199                     	;# 
  3021  0199                     	;# 
  3022  0199                     	;# 
  3023  019A                     	;# 
  3024  019A                     	;# 
  3025  019A                     	;# 
  3026  019B                     	;# 
  3027  019B                     	;# 
  3028  019B                     	;# 
  3029  019B                     	;# 
  3030  019B                     	;# 
  3031  019C                     	;# 
  3032  019C                     	;# 
  3033  019C                     	;# 
  3034  019D                     	;# 
  3035  019D                     	;# 
  3036  019D                     	;# 
  3037  019E                     	;# 
  3038  019E                     	;# 
  3039  019E                     	;# 
  3040  019F                     	;# 
  3041  019F                     	;# 
  3042  019F                     	;# 
  3043  019F                     	;# 
  3044  019F                     	;# 
  3045  020C                     	;# 
  3046  020D                     	;# 
  3047  020E                     	;# 
  3048  0211                     	;# 
  3049  0211                     	;# 
  3050  0212                     	;# 
  3051  0212                     	;# 
  3052  0213                     	;# 
  3053  0213                     	;# 
  3054  0214                     	;# 
  3055  0214                     	;# 
  3056  0215                     	;# 
  3057  0215                     	;# 
  3058  0215                     	;# 
  3059  0215                     	;# 
  3060  0216                     	;# 
  3061  0216                     	;# 
  3062  0217                     	;# 
  3063  0217                     	;# 
  3064  0219                     	;# 
  3065  021A                     	;# 
  3066  021B                     	;# 
  3067  021C                     	;# 
  3068  021D                     	;# 
  3069  021D                     	;# 
  3070  021E                     	;# 
  3071  021F                     	;# 
  3072  028C                     	;# 
  3073  028D                     	;# 
  3074  028E                     	;# 
  3075  0291                     	;# 
  3076  0291                     	;# 
  3077  0292                     	;# 
  3078  0293                     	;# 
  3079  0294                     	;# 
  3080  0295                     	;# 
  3081  0295                     	;# 
  3082  0296                     	;# 
  3083  0297                     	;# 
  3084  0298                     	;# 
  3085  029F                     	;# 
  3086  030C                     	;# 
  3087  030D                     	;# 
  3088  030E                     	;# 
  3089  0311                     	;# 
  3090  0311                     	;# 
  3091  0312                     	;# 
  3092  0313                     	;# 
  3093  0314                     	;# 
  3094  0315                     	;# 
  3095  0315                     	;# 
  3096  0316                     	;# 
  3097  0317                     	;# 
  3098  0318                     	;# 
  3099  038C                     	;# 
  3100  038D                     	;# 
  3101  038E                     	;# 
  3102  0391                     	;# 
  3103  0392                     	;# 
  3104  0393                     	;# 
  3105  0394                     	;# 
  3106  0395                     	;# 
  3107  0396                     	;# 
  3108  0397                     	;# 
  3109  0398                     	;# 
  3110  0399                     	;# 
  3111  039A                     	;# 
  3112  039C                     	;# 
  3113  039D                     	;# 
  3114  039E                     	;# 
  3115  039F                     	;# 
  3116  0411                     	;# 
  3117  0411                     	;# 
  3118  0412                     	;# 
  3119  0413                     	;# 
  3120  0414                     	;# 
  3121  0415                     	;# 
  3122  0416                     	;# 
  3123  0417                     	;# 
  3124  0418                     	;# 
  3125  0418                     	;# 
  3126  0419                     	;# 
  3127  041A                     	;# 
  3128  041B                     	;# 
  3129  041C                     	;# 
  3130  041D                     	;# 
  3131  041E                     	;# 
  3132  041F                     	;# 
  3133  0498                     	;# 
  3134  0498                     	;# 
  3135  0499                     	;# 
  3136  049A                     	;# 
  3137  049B                     	;# 
  3138  049B                     	;# 
  3139  049C                     	;# 
  3140  049D                     	;# 
  3141  049E                     	;# 
  3142  049F                     	;# 
  3143  0617                     	;# 
  3144  0618                     	;# 
  3145  0619                     	;# 
  3146  0619                     	;# 
  3147  061A                     	;# 
  3148  061B                     	;# 
  3149  061C                     	;# 
  3150  061C                     	;# 
  3151  061F                     	;# 
  3152  0691                     	;# 
  3153  0692                     	;# 
  3154  0693                     	;# 
  3155  0694                     	;# 
  3156  0695                     	;# 
  3157  0696                     	;# 
  3158  0697                     	;# 
  3159  0698                     	;# 
  3160  0699                     	;# 
  3161  0711                     	;# 
  3162  0712                     	;# 
  3163  0713                     	;# 
  3164  0714                     	;# 
  3165  0715                     	;# 
  3166  0716                     	;# 
  3167  0717                     	;# 
  3168  0718                     	;# 
  3169  0719                     	;# 
  3170  0891                     	;# 
  3171  0891                     	;# 
  3172  0891                     	;# 
  3173  0891                     	;# 
  3174  0891                     	;# 
  3175  0891                     	;# 
  3176  0892                     	;# 
  3177  0892                     	;# 
  3178  0892                     	;# 
  3179  0893                     	;# 
  3180  0893                     	;# 
  3181  0893                     	;# 
  3182  0893                     	;# 
  3183  0893                     	;# 
  3184  0893                     	;# 
  3185  0894                     	;# 
  3186  0894                     	;# 
  3187  0894                     	;# 
  3188  0895                     	;# 
  3189  0895                     	;# 
  3190  0895                     	;# 
  3191  0896                     	;# 
  3192  0896                     	;# 
  3193  0896                     	;# 
  3194  089B                     	;# 
  3195  0911                     	;# 
  3196  0912                     	;# 
  3197  0913                     	;# 
  3198  0914                     	;# 
  3199  0915                     	;# 
  3200  0916                     	;# 
  3201  0918                     	;# 
  3202  0919                     	;# 
  3203  091A                     	;# 
  3204  091B                     	;# 
  3205  091C                     	;# 
  3206  091D                     	;# 
  3207  091E                     	;# 
  3208  091F                     	;# 
  3209  0E0F                     	;# 
  3210  0E10                     	;# 
  3211  0E11                     	;# 
  3212  0E12                     	;# 
  3213  0E13                     	;# 
  3214  0E14                     	;# 
  3215  0E15                     	;# 
  3216  0E16                     	;# 
  3217  0E17                     	;# 
  3218  0E18                     	;# 
  3219  0E19                     	;# 
  3220  0E1A                     	;# 
  3221  0E1B                     	;# 
  3222  0E1C                     	;# 
  3223  0E1D                     	;# 
  3224  0E1E                     	;# 
  3225  0E1F                     	;# 
  3226  0E20                     	;# 
  3227  0E21                     	;# 
  3228  0E22                     	;# 
  3229  0E24                     	;# 
  3230  0E25                     	;# 
  3231  0E28                     	;# 
  3232  0E29                     	;# 
  3233  0E2A                     	;# 
  3234  0E2B                     	;# 
  3235  0E2C                     	;# 
  3236  0E2D                     	;# 
  3237  0E2E                     	;# 
  3238  0E2F                     	;# 
  3239  0E90                     	;# 
  3240  0E91                     	;# 
  3241  0E92                     	;# 
  3242  0E94                     	;# 
  3243  0E95                     	;# 
  3244  0E9C                     	;# 
  3245  0E9D                     	;# 
  3246  0E9E                     	;# 
  3247  0E9F                     	;# 
  3248  0EA0                     	;# 
  3249  0EA1                     	;# 
  3250  0EA2                     	;# 
  3251  0EA3                     	;# 
  3252  0EA4                     	;# 
  3253  0EA5                     	;# 
  3254  0EA6                     	;# 
  3255  0EA7                     	;# 
  3256  0F0F                     	;# 
  3257  0F10                     	;# 
  3258  0F11                     	;# 
  3259  0F12                     	;# 
  3260  0F13                     	;# 
  3261  0F14                     	;# 
  3262  0F15                     	;# 
  3263  0F16                     	;# 
  3264  0F17                     	;# 
  3265  0F18                     	;# 
  3266  0F19                     	;# 
  3267  0F1A                     	;# 
  3268  0F1B                     	;# 
  3269  0F1C                     	;# 
  3270  0F1D                     	;# 
  3271  0F1E                     	;# 
  3272  0F1F                     	;# 
  3273  0F20                     	;# 
  3274  0F21                     	;# 
  3275  0F22                     	;# 
  3276  0F23                     	;# 
  3277  0F24                     	;# 
  3278  0F25                     	;# 
  3279  0F26                     	;# 
  3280  0F27                     	;# 
  3281  0F28                     	;# 
  3282  0F29                     	;# 
  3283  0F2A                     	;# 
  3284  0F2B                     	;# 
  3285  0F2C                     	;# 
  3286  0F2D                     	;# 
  3287  0F2E                     	;# 
  3288  0F2F                     	;# 
  3289  0F30                     	;# 
  3290  0F31                     	;# 
  3291  0F32                     	;# 
  3292  0F33                     	;# 
  3293  0F34                     	;# 
  3294  0F35                     	;# 
  3295  0F36                     	;# 
  3296  0F37                     	;# 
  3297  0FE4                     	;# 
  3298  0FE5                     	;# 
  3299  0FE6                     	;# 
  3300  0FE7                     	;# 
  3301  0FE8                     	;# 
  3302  0FE9                     	;# 
  3303  0FEA                     	;# 
  3304  0FEB                     	;# 
  3305  0FED                     	;# 
  3306  0FEE                     	;# 
  3307  0FEF                     	;# 
  3308  0000                     	;# 
  3309  0001                     	;# 
  3310  0002                     	;# 
  3311  0003                     	;# 
  3312  0004                     	;# 
  3313  0005                     	;# 
  3314  0006                     	;# 
  3315  0007                     	;# 
  3316  0008                     	;# 
  3317  0009                     	;# 
  3318  000A                     	;# 
  3319  000B                     	;# 
  3320  000C                     	;# 
  3321  000D                     	;# 
  3322  000E                     	;# 
  3323  0010                     	;# 
  3324  0011                     	;# 
  3325  0012                     	;# 
  3326  0013                     	;# 
  3327  0014                     	;# 
  3328  0015                     	;# 
  3329  0015                     	;# 
  3330  0016                     	;# 
  3331  0016                     	;# 
  3332  0017                     	;# 
  3333  0018                     	;# 
  3334  0019                     	;# 
  3335  0019                     	;# 
  3336  001A                     	;# 
  3337  001B                     	;# 
  3338  001C                     	;# 
  3339  001D                     	;# 
  3340  001E                     	;# 
  3341  001F                     	;# 
  3342  008C                     	;# 
  3343  008D                     	;# 
  3344  008E                     	;# 
  3345  0090                     	;# 
  3346  0091                     	;# 
  3347  0092                     	;# 
  3348  0093                     	;# 
  3349  0094                     	;# 
  3350  0097                     	;# 
  3351  009B                     	;# 
  3352  009B                     	;# 
  3353  009C                     	;# 
  3354  009D                     	;# 
  3355  009E                     	;# 
  3356  009F                     	;# 
  3357  010C                     	;# 
  3358  010D                     	;# 
  3359  010E                     	;# 
  3360  0111                     	;# 
  3361  0112                     	;# 
  3362  0113                     	;# 
  3363  0114                     	;# 
  3364  0115                     	;# 
  3365  0116                     	;# 
  3366  0117                     	;# 
  3367  0118                     	;# 
  3368  0119                     	;# 
  3369  018C                     	;# 
  3370  018D                     	;# 
  3371  018E                     	;# 
  3372  0197                     	;# 
  3373  0199                     	;# 
  3374  0199                     	;# 
  3375  0199                     	;# 
  3376  019A                     	;# 
  3377  019A                     	;# 
  3378  019A                     	;# 
  3379  019B                     	;# 
  3380  019B                     	;# 
  3381  019B                     	;# 
  3382  019B                     	;# 
  3383  019B                     	;# 
  3384  019C                     	;# 
  3385  019C                     	;# 
  3386  019C                     	;# 
  3387  019D                     	;# 
  3388  019D                     	;# 
  3389  019D                     	;# 
  3390  019E                     	;# 
  3391  019E                     	;# 
  3392  019E                     	;# 
  3393  019F                     	;# 
  3394  019F                     	;# 
  3395  019F                     	;# 
  3396  019F                     	;# 
  3397  019F                     	;# 
  3398  020C                     	;# 
  3399  020D                     	;# 
  3400  020E                     	;# 
  3401  0211                     	;# 
  3402  0211                     	;# 
  3403  0212                     	;# 
  3404  0212                     	;# 
  3405  0213                     	;# 
  3406  0213                     	;# 
  3407  0214                     	;# 
  3408  0214                     	;# 
  3409  0215                     	;# 
  3410  0215                     	;# 
  3411  0215                     	;# 
  3412  0215                     	;# 
  3413  0216                     	;# 
  3414  0216                     	;# 
  3415  0217                     	;# 
  3416  0217                     	;# 
  3417  0219                     	;# 
  3418  021A                     	;# 
  3419  021B                     	;# 
  3420  021C                     	;# 
  3421  021D                     	;# 
  3422  021D                     	;# 
  3423  021E                     	;# 
  3424  021F                     	;# 
  3425  028C                     	;# 
  3426  028D                     	;# 
  3427  028E                     	;# 
  3428  0291                     	;# 
  3429  0291                     	;# 
  3430  0292                     	;# 
  3431  0293                     	;# 
  3432  0294                     	;# 
  3433  0295                     	;# 
  3434  0295                     	;# 
  3435  0296                     	;# 
  3436  0297                     	;# 
  3437  0298                     	;# 
  3438  029F                     	;# 
  3439  030C                     	;# 
  3440  030D                     	;# 
  3441  030E                     	;# 
  3442  0311                     	;# 
  3443  0311                     	;# 
  3444  0312                     	;# 
  3445  0313                     	;# 
  3446  0314                     	;# 
  3447  0315                     	;# 
  3448  0315                     	;# 
  3449  0316                     	;# 
  3450  0317                     	;# 
  3451  0318                     	;# 
  3452  038C                     	;# 
  3453  038D                     	;# 
  3454  038E                     	;# 
  3455  0391                     	;# 
  3456  0392                     	;# 
  3457  0393                     	;# 
  3458  0394                     	;# 
  3459  0395                     	;# 
  3460  0396                     	;# 
  3461  0397                     	;# 
  3462  0398                     	;# 
  3463  0399                     	;# 
  3464  039A                     	;# 
  3465  039C                     	;# 
  3466  039D                     	;# 
  3467  039E                     	;# 
  3468  039F                     	;# 
  3469  0411                     	;# 
  3470  0411                     	;# 
  3471  0412                     	;# 
  3472  0413                     	;# 
  3473  0414                     	;# 
  3474  0415                     	;# 
  3475  0416                     	;# 
  3476  0417                     	;# 
  3477  0418                     	;# 
  3478  0418                     	;# 
  3479  0419                     	;# 
  3480  041A                     	;# 
  3481  041B                     	;# 
  3482  041C                     	;# 
  3483  041D                     	;# 
  3484  041E                     	;# 
  3485  041F                     	;# 
  3486  0498                     	;# 
  3487  0498                     	;# 
  3488  0499                     	;# 
  3489  049A                     	;# 
  3490  049B                     	;# 
  3491  049B                     	;# 
  3492  049C                     	;# 
  3493  049D                     	;# 
  3494  049E                     	;# 
  3495  049F                     	;# 
  3496  0617                     	;# 
  3497  0618                     	;# 
  3498  0619                     	;# 
  3499  0619                     	;# 
  3500  061A                     	;# 
  3501  061B                     	;# 
  3502  061C                     	;# 
  3503  061C                     	;# 
  3504  061F                     	;# 
  3505  0691                     	;# 
  3506  0692                     	;# 
  3507  0693                     	;# 
  3508  0694                     	;# 
  3509  0695                     	;# 
  3510  0696                     	;# 
  3511  0697                     	;# 
  3512  0698                     	;# 
  3513  0699                     	;# 
  3514  0711                     	;# 
  3515  0712                     	;# 
  3516  0713                     	;# 
  3517  0714                     	;# 
  3518  0715                     	;# 
  3519  0716                     	;# 
  3520  0717                     	;# 
  3521  0718                     	;# 
  3522  0719                     	;# 
  3523  0891                     	;# 
  3524  0891                     	;# 
  3525  0891                     	;# 
  3526  0891                     	;# 
  3527  0891                     	;# 
  3528  0891                     	;# 
  3529  0892                     	;# 
  3530  0892                     	;# 
  3531  0892                     	;# 
  3532  0893                     	;# 
  3533  0893                     	;# 
  3534  0893                     	;# 
  3535  0893                     	;# 
  3536  0893                     	;# 
  3537  0893                     	;# 
  3538  0894                     	;# 
  3539  0894                     	;# 
  3540  0894                     	;# 
  3541  0895                     	;# 
  3542  0895                     	;# 
  3543  0895                     	;# 
  3544  0896                     	;# 
  3545  0896                     	;# 
  3546  0896                     	;# 
  3547  089B                     	;# 
  3548  0911                     	;# 
  3549  0912                     	;# 
  3550  0913                     	;# 
  3551  0914                     	;# 
  3552  0915                     	;# 
  3553  0916                     	;# 
  3554  0918                     	;# 
  3555  0919                     	;# 
  3556  091A                     	;# 
  3557  091B                     	;# 
  3558  091C                     	;# 
  3559  091D                     	;# 
  3560  091E                     	;# 
  3561  091F                     	;# 
  3562  0E0F                     	;# 
  3563  0E10                     	;# 
  3564  0E11                     	;# 
  3565  0E12                     	;# 
  3566  0E13                     	;# 
  3567  0E14                     	;# 
  3568  0E15                     	;# 
  3569  0E16                     	;# 
  3570  0E17                     	;# 
  3571  0E18                     	;# 
  3572  0E19                     	;# 
  3573  0E1A                     	;# 
  3574  0E1B                     	;# 
  3575  0E1C                     	;# 
  3576  0E1D                     	;# 
  3577  0E1E                     	;# 
  3578  0E1F                     	;# 
  3579  0E20                     	;# 
  3580  0E21                     	;# 
  3581  0E22                     	;# 
  3582  0E24                     	;# 
  3583  0E25                     	;# 
  3584  0E28                     	;# 
  3585  0E29                     	;# 
  3586  0E2A                     	;# 
  3587  0E2B                     	;# 
  3588  0E2C                     	;# 
  3589  0E2D                     	;# 
  3590  0E2E                     	;# 
  3591  0E2F                     	;# 
  3592  0E90                     	;# 
  3593  0E91                     	;# 
  3594  0E92                     	;# 
  3595  0E94                     	;# 
  3596  0E95                     	;# 
  3597  0E9C                     	;# 
  3598  0E9D                     	;# 
  3599  0E9E                     	;# 
  3600  0E9F                     	;# 
  3601  0EA0                     	;# 
  3602  0EA1                     	;# 
  3603  0EA2                     	;# 
  3604  0EA3                     	;# 
  3605  0EA4                     	;# 
  3606  0EA5                     	;# 
  3607  0EA6                     	;# 
  3608  0EA7                     	;# 
  3609  0F0F                     	;# 
  3610  0F10                     	;# 
  3611  0F11                     	;# 
  3612  0F12                     	;# 
  3613  0F13                     	;# 
  3614  0F14                     	;# 
  3615  0F15                     	;# 
  3616  0F16                     	;# 
  3617  0F17                     	;# 
  3618  0F18                     	;# 
  3619  0F19                     	;# 
  3620  0F1A                     	;# 
  3621  0F1B                     	;# 
  3622  0F1C                     	;# 
  3623  0F1D                     	;# 
  3624  0F1E                     	;# 
  3625  0F1F                     	;# 
  3626  0F20                     	;# 
  3627  0F21                     	;# 
  3628  0F22                     	;# 
  3629  0F23                     	;# 
  3630  0F24                     	;# 
  3631  0F25                     	;# 
  3632  0F26                     	;# 
  3633  0F27                     	;# 
  3634  0F28                     	;# 
  3635  0F29                     	;# 
  3636  0F2A                     	;# 
  3637  0F2B                     	;# 
  3638  0F2C                     	;# 
  3639  0F2D                     	;# 
  3640  0F2E                     	;# 
  3641  0F2F                     	;# 
  3642  0F30                     	;# 
  3643  0F31                     	;# 
  3644  0F32                     	;# 
  3645  0F33                     	;# 
  3646  0F34                     	;# 
  3647  0F35                     	;# 
  3648  0F36                     	;# 
  3649  0F37                     	;# 
  3650  0FE4                     	;# 
  3651  0FE5                     	;# 
  3652  0FE6                     	;# 
  3653  0FE7                     	;# 
  3654  0FE8                     	;# 
  3655  0FE9                     	;# 
  3656  0FEA                     	;# 
  3657  0FEB                     	;# 
  3658  0FED                     	;# 
  3659  0FEE                     	;# 
  3660  0FEF                     	;# 
  3661  0000                     	;# 
  3662  0001                     	;# 
  3663  0002                     	;# 
  3664  0003                     	;# 
  3665  0004                     	;# 
  3666  0005                     	;# 
  3667  0006                     	;# 
  3668  0007                     	;# 
  3669  0008                     	;# 
  3670  0009                     	;# 
  3671  000A                     	;# 
  3672  000B                     	;# 
  3673  000C                     	;# 
  3674  000D                     	;# 
  3675  000E                     	;# 
  3676  0010                     	;# 
  3677  0011                     	;# 
  3678  0012                     	;# 
  3679  0013                     	;# 
  3680  0014                     	;# 
  3681  0015                     	;# 
  3682  0015                     	;# 
  3683  0016                     	;# 
  3684  0016                     	;# 
  3685  0017                     	;# 
  3686  0018                     	;# 
  3687  0019                     	;# 
  3688  0019                     	;# 
  3689  001A                     	;# 
  3690  001B                     	;# 
  3691  001C                     	;# 
  3692  001D                     	;# 
  3693  001E                     	;# 
  3694  001F                     	;# 
  3695  008C                     	;# 
  3696  008D                     	;# 
  3697  008E                     	;# 
  3698  0090                     	;# 
  3699  0091                     	;# 
  3700  0092                     	;# 
  3701  0093                     	;# 
  3702  0094                     	;# 
  3703  0097                     	;# 
  3704  009B                     	;# 
  3705  009B                     	;# 
  3706  009C                     	;# 
  3707  009D                     	;# 
  3708  009E                     	;# 
  3709  009F                     	;# 
  3710  010C                     	;# 
  3711  010D                     	;# 
  3712  010E                     	;# 
  3713  0111                     	;# 
  3714  0112                     	;# 
  3715  0113                     	;# 
  3716  0114                     	;# 
  3717  0115                     	;# 
  3718  0116                     	;# 
  3719  0117                     	;# 
  3720  0118                     	;# 
  3721  0119                     	;# 
  3722  018C                     	;# 
  3723  018D                     	;# 
  3724  018E                     	;# 
  3725  0197                     	;# 
  3726  0199                     	;# 
  3727  0199                     	;# 
  3728  0199                     	;# 
  3729  019A                     	;# 
  3730  019A                     	;# 
  3731  019A                     	;# 
  3732  019B                     	;# 
  3733  019B                     	;# 
  3734  019B                     	;# 
  3735  019B                     	;# 
  3736  019B                     	;# 
  3737  019C                     	;# 
  3738  019C                     	;# 
  3739  019C                     	;# 
  3740  019D                     	;# 
  3741  019D                     	;# 
  3742  019D                     	;# 
  3743  019E                     	;# 
  3744  019E                     	;# 
  3745  019E                     	;# 
  3746  019F                     	;# 
  3747  019F                     	;# 
  3748  019F                     	;# 
  3749  019F                     	;# 
  3750  019F                     	;# 
  3751  020C                     	;# 
  3752  020D                     	;# 
  3753  020E                     	;# 
  3754  0211                     	;# 
  3755  0211                     	;# 
  3756  0212                     	;# 
  3757  0212                     	;# 
  3758  0213                     	;# 
  3759  0213                     	;# 
  3760  0214                     	;# 
  3761  0214                     	;# 
  3762  0215                     	;# 
  3763  0215                     	;# 
  3764  0215                     	;# 
  3765  0215                     	;# 
  3766  0216                     	;# 
  3767  0216                     	;# 
  3768  0217                     	;# 
  3769  0217                     	;# 
  3770  0219                     	;# 
  3771  021A                     	;# 
  3772  021B                     	;# 
  3773  021C                     	;# 
  3774  021D                     	;# 
  3775  021D                     	;# 
  3776  021E                     	;# 
  3777  021F                     	;# 
  3778  028C                     	;# 
  3779  028D                     	;# 
  3780  028E                     	;# 
  3781  0291                     	;# 
  3782  0291                     	;# 
  3783  0292                     	;# 
  3784  0293                     	;# 
  3785  0294                     	;# 
  3786  0295                     	;# 
  3787  0295                     	;# 
  3788  0296                     	;# 
  3789  0297                     	;# 
  3790  0298                     	;# 
  3791  029F                     	;# 
  3792  030C                     	;# 
  3793  030D                     	;# 
  3794  030E                     	;# 
  3795  0311                     	;# 
  3796  0311                     	;# 
  3797  0312                     	;# 
  3798  0313                     	;# 
  3799  0314                     	;# 
  3800  0315                     	;# 
  3801  0315                     	;# 
  3802  0316                     	;# 
  3803  0317                     	;# 
  3804  0318                     	;# 
  3805  038C                     	;# 
  3806  038D                     	;# 
  3807  038E                     	;# 
  3808  0391                     	;# 
  3809  0392                     	;# 
  3810  0393                     	;# 
  3811  0394                     	;# 
  3812  0395                     	;# 
  3813  0396                     	;# 
  3814  0397                     	;# 
  3815  0398                     	;# 
  3816  0399                     	;# 
  3817  039A                     	;# 
  3818  039C                     	;# 
  3819  039D                     	;# 
  3820  039E                     	;# 
  3821  039F                     	;# 
  3822  0411                     	;# 
  3823  0411                     	;# 
  3824  0412                     	;# 
  3825  0413                     	;# 
  3826  0414                     	;# 
  3827  0415                     	;# 
  3828  0416                     	;# 
  3829  0417                     	;# 
  3830  0418                     	;# 
  3831  0418                     	;# 
  3832  0419                     	;# 
  3833  041A                     	;# 
  3834  041B                     	;# 
  3835  041C                     	;# 
  3836  041D                     	;# 
  3837  041E                     	;# 
  3838  041F                     	;# 
  3839  0498                     	;# 
  3840  0498                     	;# 
  3841  0499                     	;# 
  3842  049A                     	;# 
  3843  049B                     	;# 
  3844  049B                     	;# 
  3845  049C                     	;# 
  3846  049D                     	;# 
  3847  049E                     	;# 
  3848  049F                     	;# 
  3849  0617                     	;# 
  3850  0618                     	;# 
  3851  0619                     	;# 
  3852  0619                     	;# 
  3853  061A                     	;# 
  3854  061B                     	;# 
  3855  061C                     	;# 
  3856  061C                     	;# 
  3857  061F                     	;# 
  3858  0691                     	;# 
  3859  0692                     	;# 
  3860  0693                     	;# 
  3861  0694                     	;# 
  3862  0695                     	;# 
  3863  0696                     	;# 
  3864  0697                     	;# 
  3865  0698                     	;# 
  3866  0699                     	;# 
  3867  0711                     	;# 
  3868  0712                     	;# 
  3869  0713                     	;# 
  3870  0714                     	;# 
  3871  0715                     	;# 
  3872  0716                     	;# 
  3873  0717                     	;# 
  3874  0718                     	;# 
  3875  0719                     	;# 
  3876  0891                     	;# 
  3877  0891                     	;# 
  3878  0891                     	;# 
  3879  0891                     	;# 
  3880  0891                     	;# 
  3881  0891                     	;# 
  3882  0892                     	;# 
  3883  0892                     	;# 
  3884  0892                     	;# 
  3885  0893                     	;# 
  3886  0893                     	;# 
  3887  0893                     	;# 
  3888  0893                     	;# 
  3889  0893                     	;# 
  3890  0893                     	;# 
  3891  0894                     	;# 
  3892  0894                     	;# 
  3893  0894                     	;# 
  3894  0895                     	;# 
  3895  0895                     	;# 
  3896  0895                     	;# 
  3897  0896                     	;# 
  3898  0896                     	;# 
  3899  0896                     	;# 
  3900  089B                     	;# 
  3901  0911                     	;# 
  3902  0912                     	;# 
  3903  0913                     	;# 
  3904  0914                     	;# 
  3905  0915                     	;# 
  3906  0916                     	;# 
  3907  0918                     	;# 
  3908  0919                     	;# 
  3909  091A                     	;# 
  3910  091B                     	;# 
  3911  091C                     	;# 
  3912  091D                     	;# 
  3913  091E                     	;# 
  3914  091F                     	;# 
  3915  0E0F                     	;# 
  3916  0E10                     	;# 
  3917  0E11                     	;# 
  3918  0E12                     	;# 
  3919  0E13                     	;# 
  3920  0E14                     	;# 
  3921  0E15                     	;# 
  3922  0E16                     	;# 
  3923  0E17                     	;# 
  3924  0E18                     	;# 
  3925  0E19                     	;# 
  3926  0E1A                     	;# 
  3927  0E1B                     	;# 
  3928  0E1C                     	;# 
  3929  0E1D                     	;# 
  3930  0E1E                     	;# 
  3931  0E1F                     	;# 
  3932  0E20                     	;# 
  3933  0E21                     	;# 
  3934  0E22                     	;# 
  3935  0E24                     	;# 
  3936  0E25                     	;# 
  3937  0E28                     	;# 
  3938  0E29                     	;# 
  3939  0E2A                     	;# 
  3940  0E2B                     	;# 
  3941  0E2C                     	;# 
  3942  0E2D                     	;# 
  3943  0E2E                     	;# 
  3944  0E2F                     	;# 
  3945  0E90                     	;# 
  3946  0E91                     	;# 
  3947  0E92                     	;# 
  3948  0E94                     	;# 
  3949  0E95                     	;# 
  3950  0E9C                     	;# 
  3951  0E9D                     	;# 
  3952  0E9E                     	;# 
  3953  0E9F                     	;# 
  3954  0EA0                     	;# 
  3955  0EA1                     	;# 
  3956  0EA2                     	;# 
  3957  0EA3                     	;# 
  3958  0EA4                     	;# 
  3959  0EA5                     	;# 
  3960  0EA6                     	;# 
  3961  0EA7                     	;# 
  3962  0F0F                     	;# 
  3963  0F10                     	;# 
  3964  0F11                     	;# 
  3965  0F12                     	;# 
  3966  0F13                     	;# 
  3967  0F14                     	;# 
  3968  0F15                     	;# 
  3969  0F16                     	;# 
  3970  0F17                     	;# 
  3971  0F18                     	;# 
  3972  0F19                     	;# 
  3973  0F1A                     	;# 
  3974  0F1B                     	;# 
  3975  0F1C                     	;# 
  3976  0F1D                     	;# 
  3977  0F1E                     	;# 
  3978  0F1F                     	;# 
  3979  0F20                     	;# 
  3980  0F21                     	;# 
  3981  0F22                     	;# 
  3982  0F23                     	;# 
  3983  0F24                     	;# 
  3984  0F25                     	;# 
  3985  0F26                     	;# 
  3986  0F27                     	;# 
  3987  0F28                     	;# 
  3988  0F29                     	;# 
  3989  0F2A                     	;# 
  3990  0F2B                     	;# 
  3991  0F2C                     	;# 
  3992  0F2D                     	;# 
  3993  0F2E                     	;# 
  3994  0F2F                     	;# 
  3995  0F30                     	;# 
  3996  0F31                     	;# 
  3997  0F32                     	;# 
  3998  0F33                     	;# 
  3999  0F34                     	;# 
  4000  0F35                     	;# 
  4001  0F36                     	;# 
  4002  0F37                     	;# 
  4003  0FE4                     	;# 
  4004  0FE5                     	;# 
  4005  0FE6                     	;# 
  4006  0FE7                     	;# 
  4007  0FE8                     	;# 
  4008  0FE9                     	;# 
  4009  0FEA                     	;# 
  4010  0FEB                     	;# 
  4011  0FED                     	;# 
  4012  0FEE                     	;# 
  4013  0FEF                     	;# 
  4014  0000                     	;# 
  4015  0001                     	;# 
  4016  0002                     	;# 
  4017  0003                     	;# 
  4018  0004                     	;# 
  4019  0005                     	;# 
  4020  0006                     	;# 
  4021  0007                     	;# 
  4022  0008                     	;# 
  4023  0009                     	;# 
  4024  000A                     	;# 
  4025  000B                     	;# 
  4026  000C                     	;# 
  4027  000D                     	;# 
  4028  000E                     	;# 
  4029  0010                     	;# 
  4030  0011                     	;# 
  4031  0012                     	;# 
  4032  0013                     	;# 
  4033  0014                     	;# 
  4034  0015                     	;# 
  4035  0015                     	;# 
  4036  0016                     	;# 
  4037  0016                     	;# 
  4038  0017                     	;# 
  4039  0018                     	;# 
  4040  0019                     	;# 
  4041  0019                     	;# 
  4042  001A                     	;# 
  4043  001B                     	;# 
  4044  001C                     	;# 
  4045  001D                     	;# 
  4046  001E                     	;# 
  4047  001F                     	;# 
  4048  008C                     	;# 
  4049  008D                     	;# 
  4050  008E                     	;# 
  4051  0090                     	;# 
  4052  0091                     	;# 
  4053  0092                     	;# 
  4054  0093                     	;# 
  4055  0094                     	;# 
  4056  0097                     	;# 
  4057  009B                     	;# 
  4058  009B                     	;# 
  4059  009C                     	;# 
  4060  009D                     	;# 
  4061  009E                     	;# 
  4062  009F                     	;# 
  4063  010C                     	;# 
  4064  010D                     	;# 
  4065  010E                     	;# 
  4066  0111                     	;# 
  4067  0112                     	;# 
  4068  0113                     	;# 
  4069  0114                     	;# 
  4070  0115                     	;# 
  4071  0116                     	;# 
  4072  0117                     	;# 
  4073  0118                     	;# 
  4074  0119                     	;# 
  4075  018C                     	;# 
  4076  018D                     	;# 
  4077  018E                     	;# 
  4078  0197                     	;# 
  4079  0199                     	;# 
  4080  0199                     	;# 
  4081  0199                     	;# 
  4082  019A                     	;# 
  4083  019A                     	;# 
  4084  019A                     	;# 
  4085  019B                     	;# 
  4086  019B                     	;# 
  4087  019B                     	;# 
  4088  019B                     	;# 
  4089  019B                     	;# 
  4090  019C                     	;# 
  4091  019C                     	;# 
  4092  019C                     	;# 
  4093  019D                     	;# 
  4094  019D                     	;# 
  4095  019D                     	;# 
  4096  019E                     	;# 
  4097  019E                     	;# 
  4098  019E                     	;# 
  4099  019F                     	;# 
  4100  019F                     	;# 
  4101  019F                     	;# 
  4102  019F                     	;# 
  4103  019F                     	;# 
  4104  020C                     	;# 
  4105  020D                     	;# 
  4106  020E                     	;# 
  4107  0211                     	;# 
  4108  0211                     	;# 
  4109  0212                     	;# 
  4110  0212                     	;# 
  4111  0213                     	;# 
  4112  0213                     	;# 
  4113  0214                     	;# 
  4114  0214                     	;# 
  4115  0215                     	;# 
  4116  0215                     	;# 
  4117  0215                     	;# 
  4118  0215                     	;# 
  4119  0216                     	;# 
  4120  0216                     	;# 
  4121  0217                     	;# 
  4122  0217                     	;# 
  4123  0219                     	;# 
  4124  021A                     	;# 
  4125  021B                     	;# 
  4126  021C                     	;# 
  4127  021D                     	;# 
  4128  021D                     	;# 
  4129  021E                     	;# 
  4130  021F                     	;# 
  4131  028C                     	;# 
  4132  028D                     	;# 
  4133  028E                     	;# 
  4134  0291                     	;# 
  4135  0291                     	;# 
  4136  0292                     	;# 
  4137  0293                     	;# 
  4138  0294                     	;# 
  4139  0295                     	;# 
  4140  0295                     	;# 
  4141  0296                     	;# 
  4142  0297                     	;# 
  4143  0298                     	;# 
  4144  029F                     	;# 
  4145  030C                     	;# 
  4146  030D                     	;# 
  4147  030E                     	;# 
  4148  0311                     	;# 
  4149  0311                     	;# 
  4150  0312                     	;# 
  4151  0313                     	;# 
  4152  0314                     	;# 
  4153  0315                     	;# 
  4154  0315                     	;# 
  4155  0316                     	;# 
  4156  0317                     	;# 
  4157  0318                     	;# 
  4158  038C                     	;# 
  4159  038D                     	;# 
  4160  038E                     	;# 
  4161  0391                     	;# 
  4162  0392                     	;# 
  4163  0393                     	;# 
  4164  0394                     	;# 
  4165  0395                     	;# 
  4166  0396                     	;# 
  4167  0397                     	;# 
  4168  0398                     	;# 
  4169  0399                     	;# 
  4170  039A                     	;# 
  4171  039C                     	;# 
  4172  039D                     	;# 
  4173  039E                     	;# 
  4174  039F                     	;# 
  4175  0411                     	;# 
  4176  0411                     	;# 
  4177  0412                     	;# 
  4178  0413                     	;# 
  4179  0414                     	;# 
  4180  0415                     	;# 
  4181  0416                     	;# 
  4182  0417                     	;# 
  4183  0418                     	;# 
  4184  0418                     	;# 
  4185  0419                     	;# 
  4186  041A                     	;# 
  4187  041B                     	;# 
  4188  041C                     	;# 
  4189  041D                     	;# 
  4190  041E                     	;# 
  4191  041F                     	;# 
  4192  0498                     	;# 
  4193  0498                     	;# 
  4194  0499                     	;# 
  4195  049A                     	;# 
  4196  049B                     	;# 
  4197  049B                     	;# 
  4198  049C                     	;# 
  4199  049D                     	;# 
  4200  049E                     	;# 
  4201  049F                     	;# 
  4202  0617                     	;# 
  4203  0618                     	;# 
  4204  0619                     	;# 
  4205  0619                     	;# 
  4206  061A                     	;# 
  4207  061B                     	;# 
  4208  061C                     	;# 
  4209  061C                     	;# 
  4210  061F                     	;# 
  4211  0691                     	;# 
  4212  0692                     	;# 
  4213  0693                     	;# 
  4214  0694                     	;# 
  4215  0695                     	;# 
  4216  0696                     	;# 
  4217  0697                     	;# 
  4218  0698                     	;# 
  4219  0699                     	;# 
  4220  0711                     	;# 
  4221  0712                     	;# 
  4222  0713                     	;# 
  4223  0714                     	;# 
  4224  0715                     	;# 
  4225  0716                     	;# 
  4226  0717                     	;# 
  4227  0718                     	;# 
  4228  0719                     	;# 
  4229  0891                     	;# 
  4230  0891                     	;# 
  4231  0891                     	;# 
  4232  0891                     	;# 
  4233  0891                     	;# 
  4234  0891                     	;# 
  4235  0892                     	;# 
  4236  0892                     	;# 
  4237  0892                     	;# 
  4238  0893                     	;# 
  4239  0893                     	;# 
  4240  0893                     	;# 
  4241  0893                     	;# 
  4242  0893                     	;# 
  4243  0893                     	;# 
  4244  0894                     	;# 
  4245  0894                     	;# 
  4246  0894                     	;# 
  4247  0895                     	;# 
  4248  0895                     	;# 
  4249  0895                     	;# 
  4250  0896                     	;# 
  4251  0896                     	;# 
  4252  0896                     	;# 
  4253  089B                     	;# 
  4254  0911                     	;# 
  4255  0912                     	;# 
  4256  0913                     	;# 
  4257  0914                     	;# 
  4258  0915                     	;# 
  4259  0916                     	;# 
  4260  0918                     	;# 
  4261  0919                     	;# 
  4262  091A                     	;# 
  4263  091B                     	;# 
  4264  091C                     	;# 
  4265  091D                     	;# 
  4266  091E                     	;# 
  4267  091F                     	;# 
  4268  0E0F                     	;# 
  4269  0E10                     	;# 
  4270  0E11                     	;# 
  4271  0E12                     	;# 
  4272  0E13                     	;# 
  4273  0E14                     	;# 
  4274  0E15                     	;# 
  4275  0E16                     	;# 
  4276  0E17                     	;# 
  4277  0E18                     	;# 
  4278  0E19                     	;# 
  4279  0E1A                     	;# 
  4280  0E1B                     	;# 
  4281  0E1C                     	;# 
  4282  0E1D                     	;# 
  4283  0E1E                     	;# 
  4284  0E1F                     	;# 
  4285  0E20                     	;# 
  4286  0E21                     	;# 
  4287  0E22                     	;# 
  4288  0E24                     	;# 
  4289  0E25                     	;# 
  4290  0E28                     	;# 
  4291  0E29                     	;# 
  4292  0E2A                     	;# 
  4293  0E2B                     	;# 
  4294  0E2C                     	;# 
  4295  0E2D                     	;# 
  4296  0E2E                     	;# 
  4297  0E2F                     	;# 
  4298  0E90                     	;# 
  4299  0E91                     	;# 
  4300  0E92                     	;# 
  4301  0E94                     	;# 
  4302  0E95                     	;# 
  4303  0E9C                     	;# 
  4304  0E9D                     	;# 
  4305  0E9E                     	;# 
  4306  0E9F                     	;# 
  4307  0EA0                     	;# 
  4308  0EA1                     	;# 
  4309  0EA2                     	;# 
  4310  0EA3                     	;# 
  4311  0EA4                     	;# 
  4312  0EA5                     	;# 
  4313  0EA6                     	;# 
  4314  0EA7                     	;# 
  4315  0F0F                     	;# 
  4316  0F10                     	;# 
  4317  0F11                     	;# 
  4318  0F12                     	;# 
  4319  0F13                     	;# 
  4320  0F14                     	;# 
  4321  0F15                     	;# 
  4322  0F16                     	;# 
  4323  0F17                     	;# 
  4324  0F18                     	;# 
  4325  0F19                     	;# 
  4326  0F1A                     	;# 
  4327  0F1B                     	;# 
  4328  0F1C                     	;# 
  4329  0F1D                     	;# 
  4330  0F1E                     	;# 
  4331  0F1F                     	;# 
  4332  0F20                     	;# 
  4333  0F21                     	;# 
  4334  0F22                     	;# 
  4335  0F23                     	;# 
  4336  0F24                     	;# 
  4337  0F25                     	;# 
  4338  0F26                     	;# 
  4339  0F27                     	;# 
  4340  0F28                     	;# 
  4341  0F29                     	;# 
  4342  0F2A                     	;# 
  4343  0F2B                     	;# 
  4344  0F2C                     	;# 
  4345  0F2D                     	;# 
  4346  0F2E                     	;# 
  4347  0F2F                     	;# 
  4348  0F30                     	;# 
  4349  0F31                     	;# 
  4350  0F32                     	;# 
  4351  0F33                     	;# 
  4352  0F34                     	;# 
  4353  0F35                     	;# 
  4354  0F36                     	;# 
  4355  0F37                     	;# 
  4356  0FE4                     	;# 
  4357  0FE5                     	;# 
  4358  0FE6                     	;# 
  4359  0FE7                     	;# 
  4360  0FE8                     	;# 
  4361  0FE9                     	;# 
  4362  0FEA                     	;# 
  4363  0FEB                     	;# 
  4364  0FED                     	;# 
  4365  0FEE                     	;# 
  4366  0FEF                     	;# 
  4367  0000                     	;# 
  4368  0001                     	;# 
  4369  0002                     	;# 
  4370  0003                     	;# 
  4371  0004                     	;# 
  4372  0005                     	;# 
  4373  0006                     	;# 
  4374  0007                     	;# 
  4375  0008                     	;# 
  4376  0009                     	;# 
  4377  000A                     	;# 
  4378  000B                     	;# 
  4379  000C                     	;# 
  4380  000D                     	;# 
  4381  000E                     	;# 
  4382  0010                     	;# 
  4383  0011                     	;# 
  4384  0012                     	;# 
  4385  0013                     	;# 
  4386  0014                     	;# 
  4387  0015                     	;# 
  4388  0015                     	;# 
  4389  0016                     	;# 
  4390  0016                     	;# 
  4391  0017                     	;# 
  4392  0018                     	;# 
  4393  0019                     	;# 
  4394  0019                     	;# 
  4395  001A                     	;# 
  4396  001B                     	;# 
  4397  001C                     	;# 
  4398  001D                     	;# 
  4399  001E                     	;# 
  4400  001F                     	;# 
  4401  008C                     	;# 
  4402  008D                     	;# 
  4403  008E                     	;# 
  4404  0090                     	;# 
  4405  0091                     	;# 
  4406  0092                     	;# 
  4407  0093                     	;# 
  4408  0094                     	;# 
  4409  0097                     	;# 
  4410  009B                     	;# 
  4411  009B                     	;# 
  4412  009C                     	;# 
  4413  009D                     	;# 
  4414  009E                     	;# 
  4415  009F                     	;# 
  4416  010C                     	;# 
  4417  010D                     	;# 
  4418  010E                     	;# 
  4419  0111                     	;# 
  4420  0112                     	;# 
  4421  0113                     	;# 
  4422  0114                     	;# 
  4423  0115                     	;# 
  4424  0116                     	;# 
  4425  0117                     	;# 
  4426  0118                     	;# 
  4427  0119                     	;# 
  4428  018C                     	;# 
  4429  018D                     	;# 
  4430  018E                     	;# 
  4431  0197                     	;# 
  4432  0199                     	;# 
  4433  0199                     	;# 
  4434  0199                     	;# 
  4435  019A                     	;# 
  4436  019A                     	;# 
  4437  019A                     	;# 
  4438  019B                     	;# 
  4439  019B                     	;# 
  4440  019B                     	;# 
  4441  019B                     	;# 
  4442  019B                     	;# 
  4443  019C                     	;# 
  4444  019C                     	;# 
  4445  019C                     	;# 
  4446  019D                     	;# 
  4447  019D                     	;# 
  4448  019D                     	;# 
  4449  019E                     	;# 
  4450  019E                     	;# 
  4451  019E                     	;# 
  4452  019F                     	;# 
  4453  019F                     	;# 
  4454  019F                     	;# 
  4455  019F                     	;# 
  4456  019F                     	;# 
  4457  020C                     	;# 
  4458  020D                     	;# 
  4459  020E                     	;# 
  4460  0211                     	;# 
  4461  0211                     	;# 
  4462  0212                     	;# 
  4463  0212                     	;# 
  4464  0213                     	;# 
  4465  0213                     	;# 
  4466  0214                     	;# 
  4467  0214                     	;# 
  4468  0215                     	;# 
  4469  0215                     	;# 
  4470  0215                     	;# 
  4471  0215                     	;# 
  4472  0216                     	;# 
  4473  0216                     	;# 
  4474  0217                     	;# 
  4475  0217                     	;# 
  4476  0219                     	;# 
  4477  021A                     	;# 
  4478  021B                     	;# 
  4479  021C                     	;# 
  4480  021D                     	;# 
  4481  021D                     	;# 
  4482  021E                     	;# 
  4483  021F                     	;# 
  4484  028C                     	;# 
  4485  028D                     	;# 
  4486  028E                     	;# 
  4487  0291                     	;# 
  4488  0291                     	;# 
  4489  0292                     	;# 
  4490  0293                     	;# 
  4491  0294                     	;# 
  4492  0295                     	;# 
  4493  0295                     	;# 
  4494  0296                     	;# 
  4495  0297                     	;# 
  4496  0298                     	;# 
  4497  029F                     	;# 
  4498  030C                     	;# 
  4499  030D                     	;# 
  4500  030E                     	;# 
  4501  0311                     	;# 
  4502  0311                     	;# 
  4503  0312                     	;# 
  4504  0313                     	;# 
  4505  0314                     	;# 
  4506  0315                     	;# 
  4507  0315                     	;# 
  4508  0316                     	;# 
  4509  0317                     	;# 
  4510  0318                     	;# 
  4511  038C                     	;# 
  4512  038D                     	;# 
  4513  038E                     	;# 
  4514  0391                     	;# 
  4515  0392                     	;# 
  4516  0393                     	;# 
  4517  0394                     	;# 
  4518  0395                     	;# 
  4519  0396                     	;# 
  4520  0397                     	;# 
  4521  0398                     	;# 
  4522  0399                     	;# 
  4523  039A                     	;# 
  4524  039C                     	;# 
  4525  039D                     	;# 
  4526  039E                     	;# 
  4527  039F                     	;# 
  4528  0411                     	;# 
  4529  0411                     	;# 
  4530  0412                     	;# 
  4531  0413                     	;# 
  4532  0414                     	;# 
  4533  0415                     	;# 
  4534  0416                     	;# 
  4535  0417                     	;# 
  4536  0418                     	;# 
  4537  0418                     	;# 
  4538  0419                     	;# 
  4539  041A                     	;# 
  4540  041B                     	;# 
  4541  041C                     	;# 
  4542  041D                     	;# 
  4543  041E                     	;# 
  4544  041F                     	;# 
  4545  0498                     	;# 
  4546  0498                     	;# 
  4547  0499                     	;# 
  4548  049A                     	;# 
  4549  049B                     	;# 
  4550  049B                     	;# 
  4551  049C                     	;# 
  4552  049D                     	;# 
  4553  049E                     	;# 
  4554  049F                     	;# 
  4555  0617                     	;# 
  4556  0618                     	;# 
  4557  0619                     	;# 
  4558  0619                     	;# 
  4559  061A                     	;# 
  4560  061B                     	;# 
  4561  061C                     	;# 
  4562  061C                     	;# 
  4563  061F                     	;# 
  4564  0691                     	;# 
  4565  0692                     	;# 
  4566  0693                     	;# 
  4567  0694                     	;# 
  4568  0695                     	;# 
  4569  0696                     	;# 
  4570  0697                     	;# 
  4571  0698                     	;# 
  4572  0699                     	;# 
  4573  0711                     	;# 
  4574  0712                     	;# 
  4575  0713                     	;# 
  4576  0714                     	;# 
  4577  0715                     	;# 
  4578  0716                     	;# 
  4579  0717                     	;# 
  4580  0718                     	;# 
  4581  0719                     	;# 
  4582  0891                     	;# 
  4583  0891                     	;# 
  4584  0891                     	;# 
  4585  0891                     	;# 
  4586  0891                     	;# 
  4587  0891                     	;# 
  4588  0892                     	;# 
  4589  0892                     	;# 
  4590  0892                     	;# 
  4591  0893                     	;# 
  4592  0893                     	;# 
  4593  0893                     	;# 
  4594  0893                     	;# 
  4595  0893                     	;# 
  4596  0893                     	;# 
  4597  0894                     	;# 
  4598  0894                     	;# 
  4599  0894                     	;# 
  4600  0895                     	;# 
  4601  0895                     	;# 
  4602  0895                     	;# 
  4603  0896                     	;# 
  4604  0896                     	;# 
  4605  0896                     	;# 
  4606  089B                     	;# 
  4607  0911                     	;# 
  4608  0912                     	;# 
  4609  0913                     	;# 
  4610  0914                     	;# 
  4611  0915                     	;# 
  4612  0916                     	;# 
  4613  0918                     	;# 
  4614  0919                     	;# 
  4615  091A                     	;# 
  4616  091B                     	;# 
  4617  091C                     	;# 
  4618  091D                     	;# 
  4619  091E                     	;# 
  4620  091F                     	;# 
  4621  0E0F                     	;# 
  4622  0E10                     	;# 
  4623  0E11                     	;# 
  4624  0E12                     	;# 
  4625  0E13                     	;# 
  4626  0E14                     	;# 
  4627  0E15                     	;# 
  4628  0E16                     	;# 
  4629  0E17                     	;# 
  4630  0E18                     	;# 
  4631  0E19                     	;# 
  4632  0E1A                     	;# 
  4633  0E1B                     	;# 
  4634  0E1C                     	;# 
  4635  0E1D                     	;# 
  4636  0E1E                     	;# 
  4637  0E1F                     	;# 
  4638  0E20                     	;# 
  4639  0E21                     	;# 
  4640  0E22                     	;# 
  4641  0E24                     	;# 
  4642  0E25                     	;# 
  4643  0E28                     	;# 
  4644  0E29                     	;# 
  4645  0E2A                     	;# 
  4646  0E2B                     	;# 
  4647  0E2C                     	;# 
  4648  0E2D                     	;# 
  4649  0E2E                     	;# 
  4650  0E2F                     	;# 
  4651  0E90                     	;# 
  4652  0E91                     	;# 
  4653  0E92                     	;# 
  4654  0E94                     	;# 
  4655  0E95                     	;# 
  4656  0E9C                     	;# 
  4657  0E9D                     	;# 
  4658  0E9E                     	;# 
  4659  0E9F                     	;# 
  4660  0EA0                     	;# 
  4661  0EA1                     	;# 
  4662  0EA2                     	;# 
  4663  0EA3                     	;# 
  4664  0EA4                     	;# 
  4665  0EA5                     	;# 
  4666  0EA6                     	;# 
  4667  0EA7                     	;# 
  4668  0F0F                     	;# 
  4669  0F10                     	;# 
  4670  0F11                     	;# 
  4671  0F12                     	;# 
  4672  0F13                     	;# 
  4673  0F14                     	;# 
  4674  0F15                     	;# 
  4675  0F16                     	;# 
  4676  0F17                     	;# 
  4677  0F18                     	;# 
  4678  0F19                     	;# 
  4679  0F1A                     	;# 
  4680  0F1B                     	;# 
  4681  0F1C                     	;# 
  4682  0F1D                     	;# 
  4683  0F1E                     	;# 
  4684  0F1F                     	;# 
  4685  0F20                     	;# 
  4686  0F21                     	;# 
  4687  0F22                     	;# 
  4688  0F23                     	;# 
  4689  0F24                     	;# 
  4690  0F25                     	;# 
  4691  0F26                     	;# 
  4692  0F27                     	;# 
  4693  0F28                     	;# 
  4694  0F29                     	;# 
  4695  0F2A                     	;# 
  4696  0F2B                     	;# 
  4697  0F2C                     	;# 
  4698  0F2D                     	;# 
  4699  0F2E                     	;# 
  4700  0F2F                     	;# 
  4701  0F30                     	;# 
  4702  0F31                     	;# 
  4703  0F32                     	;# 
  4704  0F33                     	;# 
  4705  0F34                     	;# 
  4706  0F35                     	;# 
  4707  0F36                     	;# 
  4708  0F37                     	;# 
  4709  0FE4                     	;# 
  4710  0FE5                     	;# 
  4711  0FE6                     	;# 
  4712  0FE7                     	;# 
  4713  0FE8                     	;# 
  4714  0FE9                     	;# 
  4715  0FEA                     	;# 
  4716  0FEB                     	;# 
  4717  0FED                     	;# 
  4718  0FEE                     	;# 
  4719  0FEF                     	;# 
  4720  0000                     	;# 
  4721  0001                     	;# 
  4722  0002                     	;# 
  4723  0003                     	;# 
  4724  0004                     	;# 
  4725  0005                     	;# 
  4726  0006                     	;# 
  4727  0007                     	;# 
  4728  0008                     	;# 
  4729  0009                     	;# 
  4730  000A                     	;# 
  4731  000B                     	;# 
  4732  000C                     	;# 
  4733  000D                     	;# 
  4734  000E                     	;# 
  4735  0010                     	;# 
  4736  0011                     	;# 
  4737  0012                     	;# 
  4738  0013                     	;# 
  4739  0014                     	;# 
  4740  0015                     	;# 
  4741  0015                     	;# 
  4742  0016                     	;# 
  4743  0016                     	;# 
  4744  0017                     	;# 
  4745  0018                     	;# 
  4746  0019                     	;# 
  4747  0019                     	;# 
  4748  001A                     	;# 
  4749  001B                     	;# 
  4750  001C                     	;# 
  4751  001D                     	;# 
  4752  001E                     	;# 
  4753  001F                     	;# 
  4754  008C                     	;# 
  4755  008D                     	;# 
  4756  008E                     	;# 
  4757  0090                     	;# 
  4758  0091                     	;# 
  4759  0092                     	;# 
  4760  0093                     	;# 
  4761  0094                     	;# 
  4762  0097                     	;# 
  4763  009B                     	;# 
  4764  009B                     	;# 
  4765  009C                     	;# 
  4766  009D                     	;# 
  4767  009E                     	;# 
  4768  009F                     	;# 
  4769  010C                     	;# 
  4770  010D                     	;# 
  4771  010E                     	;# 
  4772  0111                     	;# 
  4773  0112                     	;# 
  4774  0113                     	;# 
  4775  0114                     	;# 
  4776  0115                     	;# 
  4777  0116                     	;# 
  4778  0117                     	;# 
  4779  0118                     	;# 
  4780  0119                     	;# 
  4781  018C                     	;# 
  4782  018D                     	;# 
  4783  018E                     	;# 
  4784  0197                     	;# 
  4785  0199                     	;# 
  4786  0199                     	;# 
  4787  0199                     	;# 
  4788  019A                     	;# 
  4789  019A                     	;# 
  4790  019A                     	;# 
  4791  019B                     	;# 
  4792  019B                     	;# 
  4793  019B                     	;# 
  4794  019B                     	;# 
  4795  019B                     	;# 
  4796  019C                     	;# 
  4797  019C                     	;# 
  4798  019C                     	;# 
  4799  019D                     	;# 
  4800  019D                     	;# 
  4801  019D                     	;# 
  4802  019E                     	;# 
  4803  019E                     	;# 
  4804  019E                     	;# 
  4805  019F                     	;# 
  4806  019F                     	;# 
  4807  019F                     	;# 
  4808  019F                     	;# 
  4809  019F                     	;# 
  4810  020C                     	;# 
  4811  020D                     	;# 
  4812  020E                     	;# 
  4813  0211                     	;# 
  4814  0211                     	;# 
  4815  0212                     	;# 
  4816  0212                     	;# 
  4817  0213                     	;# 
  4818  0213                     	;# 
  4819  0214                     	;# 
  4820  0214                     	;# 
  4821  0215                     	;# 
  4822  0215                     	;# 
  4823  0215                     	;# 
  4824  0215                     	;# 
  4825  0216                     	;# 
  4826  0216                     	;# 
  4827  0217                     	;# 
  4828  0217                     	;# 
  4829  0219                     	;# 
  4830  021A                     	;# 
  4831  021B                     	;# 
  4832  021C                     	;# 
  4833  021D                     	;# 
  4834  021D                     	;# 
  4835  021E                     	;# 
  4836  021F                     	;# 
  4837  028C                     	;# 
  4838  028D                     	;# 
  4839  028E                     	;# 
  4840  0291                     	;# 
  4841  0291                     	;# 
  4842  0292                     	;# 
  4843  0293                     	;# 
  4844  0294                     	;# 
  4845  0295                     	;# 
  4846  0295                     	;# 
  4847  0296                     	;# 
  4848  0297                     	;# 
  4849  0298                     	;# 
  4850  029F                     	;# 
  4851  030C                     	;# 
  4852  030D                     	;# 
  4853  030E                     	;# 
  4854  0311                     	;# 
  4855  0311                     	;# 
  4856  0312                     	;# 
  4857  0313                     	;# 
  4858  0314                     	;# 
  4859  0315                     	;# 
  4860  0315                     	;# 
  4861  0316                     	;# 
  4862  0317                     	;# 
  4863  0318                     	;# 
  4864  038C                     	;# 
  4865  038D                     	;# 
  4866  038E                     	;# 
  4867  0391                     	;# 
  4868  0392                     	;# 
  4869  0393                     	;# 
  4870  0394                     	;# 
  4871  0395                     	;# 
  4872  0396                     	;# 
  4873  0397                     	;# 
  4874  0398                     	;# 
  4875  0399                     	;# 
  4876  039A                     	;# 
  4877  039C                     	;# 
  4878  039D                     	;# 
  4879  039E                     	;# 
  4880  039F                     	;# 
  4881  0411                     	;# 
  4882  0411                     	;# 
  4883  0412                     	;# 
  4884  0413                     	;# 
  4885  0414                     	;# 
  4886  0415                     	;# 
  4887  0416                     	;# 
  4888  0417                     	;# 
  4889  0418                     	;# 
  4890  0418                     	;# 
  4891  0419                     	;# 
  4892  041A                     	;# 
  4893  041B                     	;# 
  4894  041C                     	;# 
  4895  041D                     	;# 
  4896  041E                     	;# 
  4897  041F                     	;# 
  4898  0498                     	;# 
  4899  0498                     	;# 
  4900  0499                     	;# 
  4901  049A                     	;# 
  4902  049B                     	;# 
  4903  049B                     	;# 
  4904  049C                     	;# 
  4905  049D                     	;# 
  4906  049E                     	;# 
  4907  049F                     	;# 
  4908  0617                     	;# 
  4909  0618                     	;# 
  4910  0619                     	;# 
  4911  0619                     	;# 
  4912  061A                     	;# 
  4913  061B                     	;# 
  4914  061C                     	;# 
  4915  061C                     	;# 
  4916  061F                     	;# 
  4917  0691                     	;# 
  4918  0692                     	;# 
  4919  0693                     	;# 
  4920  0694                     	;# 
  4921  0695                     	;# 
  4922  0696                     	;# 
  4923  0697                     	;# 
  4924  0698                     	;# 
  4925  0699                     	;# 
  4926  0711                     	;# 
  4927  0712                     	;# 
  4928  0713                     	;# 
  4929  0714                     	;# 
  4930  0715                     	;# 
  4931  0716                     	;# 
  4932  0717                     	;# 
  4933  0718                     	;# 
  4934  0719                     	;# 
  4935  0891                     	;# 
  4936  0891                     	;# 
  4937  0891                     	;# 
  4938  0891                     	;# 
  4939  0891                     	;# 
  4940  0891                     	;# 
  4941  0892                     	;# 
  4942  0892                     	;# 
  4943  0892                     	;# 
  4944  0893                     	;# 
  4945  0893                     	;# 
  4946  0893                     	;# 
  4947  0893                     	;# 
  4948  0893                     	;# 
  4949  0893                     	;# 
  4950  0894                     	;# 
  4951  0894                     	;# 
  4952  0894                     	;# 
  4953  0895                     	;# 
  4954  0895                     	;# 
  4955  0895                     	;# 
  4956  0896                     	;# 
  4957  0896                     	;# 
  4958  0896                     	;# 
  4959  089B                     	;# 
  4960  0911                     	;# 
  4961  0912                     	;# 
  4962  0913                     	;# 
  4963  0914                     	;# 
  4964  0915                     	;# 
  4965  0916                     	;# 
  4966  0918                     	;# 
  4967  0919                     	;# 
  4968  091A                     	;# 
  4969  091B                     	;# 
  4970  091C                     	;# 
  4971  091D                     	;# 
  4972  091E                     	;# 
  4973  091F                     	;# 
  4974  0E0F                     	;# 
  4975  0E10                     	;# 
  4976  0E11                     	;# 
  4977  0E12                     	;# 
  4978  0E13                     	;# 
  4979  0E14                     	;# 
  4980  0E15                     	;# 
  4981  0E16                     	;# 
  4982  0E17                     	;# 
  4983  0E18                     	;# 
  4984  0E19                     	;# 
  4985  0E1A                     	;# 
  4986  0E1B                     	;# 
  4987  0E1C                     	;# 
  4988  0E1D                     	;# 
  4989  0E1E                     	;# 
  4990  0E1F                     	;# 
  4991  0E20                     	;# 
  4992  0E21                     	;# 
  4993  0E22                     	;# 
  4994  0E24                     	;# 
  4995  0E25                     	;# 
  4996  0E28                     	;# 
  4997  0E29                     	;# 
  4998  0E2A                     	;# 
  4999  0E2B                     	;# 
  5000  0E2C                     	;# 
  5001  0E2D                     	;# 
  5002  0E2E                     	;# 
  5003  0E2F                     	;# 
  5004  0E90                     	;# 
  5005  0E91                     	;# 
  5006  0E92                     	;# 
  5007  0E94                     	;# 
  5008  0E95                     	;# 
  5009  0E9C                     	;# 
  5010  0E9D                     	;# 
  5011  0E9E                     	;# 
  5012  0E9F                     	;# 
  5013  0EA0                     	;# 
  5014  0EA1                     	;# 
  5015  0EA2                     	;# 
  5016  0EA3                     	;# 
  5017  0EA4                     	;# 
  5018  0EA5                     	;# 
  5019  0EA6                     	;# 
  5020  0EA7                     	;# 
  5021  0F0F                     	;# 
  5022  0F10                     	;# 
  5023  0F11                     	;# 
  5024  0F12                     	;# 
  5025  0F13                     	;# 
  5026  0F14                     	;# 
  5027  0F15                     	;# 
  5028  0F16                     	;# 
  5029  0F17                     	;# 
  5030  0F18                     	;# 
  5031  0F19                     	;# 
  5032  0F1A                     	;# 
  5033  0F1B                     	;# 
  5034  0F1C                     	;# 
  5035  0F1D                     	;# 
  5036  0F1E                     	;# 
  5037  0F1F                     	;# 
  5038  0F20                     	;# 
  5039  0F21                     	;# 
  5040  0F22                     	;# 
  5041  0F23                     	;# 
  5042  0F24                     	;# 
  5043  0F25                     	;# 
  5044  0F26                     	;# 
  5045  0F27                     	;# 
  5046  0F28                     	;# 
  5047  0F29                     	;# 
  5048  0F2A                     	;# 
  5049  0F2B                     	;# 
  5050  0F2C                     	;# 
  5051  0F2D                     	;# 
  5052  0F2E                     	;# 
  5053  0F2F                     	;# 
  5054  0F30                     	;# 
  5055  0F31                     	;# 
  5056  0F32                     	;# 
  5057  0F33                     	;# 
  5058  0F34                     	;# 
  5059  0F35                     	;# 
  5060  0F36                     	;# 
  5061  0F37                     	;# 
  5062  0FE4                     	;# 
  5063  0FE5                     	;# 
  5064  0FE6                     	;# 
  5065  0FE7                     	;# 
  5066  0FE8                     	;# 
  5067  0FE9                     	;# 
  5068  0FEA                     	;# 
  5069  0FEB                     	;# 
  5070  0FED                     	;# 
  5071  0FEE                     	;# 
  5072  0FEF                     	;# 
  5073  0000                     	;# 
  5074  0001                     	;# 
  5075  0002                     	;# 
  5076  0003                     	;# 
  5077  0004                     	;# 
  5078  0005                     	;# 
  5079  0006                     	;# 
  5080  0007                     	;# 
  5081  0008                     	;# 
  5082  0009                     	;# 
  5083  000A                     	;# 
  5084  000B                     	;# 
  5085  000C                     	;# 
  5086  000D                     	;# 
  5087  000E                     	;# 
  5088  0010                     	;# 
  5089  0011                     	;# 
  5090  0012                     	;# 
  5091  0013                     	;# 
  5092  0014                     	;# 
  5093  0015                     	;# 
  5094  0015                     	;# 
  5095  0016                     	;# 
  5096  0016                     	;# 
  5097  0017                     	;# 
  5098  0018                     	;# 
  5099  0019                     	;# 
  5100  0019                     	;# 
  5101  001A                     	;# 
  5102  001B                     	;# 
  5103  001C                     	;# 
  5104  001D                     	;# 
  5105  001E                     	;# 
  5106  001F                     	;# 
  5107  008C                     	;# 
  5108  008D                     	;# 
  5109  008E                     	;# 
  5110  0090                     	;# 
  5111  0091                     	;# 
  5112  0092                     	;# 
  5113  0093                     	;# 
  5114  0094                     	;# 
  5115  0097                     	;# 
  5116  009B                     	;# 
  5117  009B                     	;# 
  5118  009C                     	;# 
  5119  009D                     	;# 
  5120  009E                     	;# 
  5121  009F                     	;# 
  5122  010C                     	;# 
  5123  010D                     	;# 
  5124  010E                     	;# 
  5125  0111                     	;# 
  5126  0112                     	;# 
  5127  0113                     	;# 
  5128  0114                     	;# 
  5129  0115                     	;# 
  5130  0116                     	;# 
  5131  0117                     	;# 
  5132  0118                     	;# 
  5133  0119                     	;# 
  5134  018C                     	;# 
  5135  018D                     	;# 
  5136  018E                     	;# 
  5137  0197                     	;# 
  5138  0199                     	;# 
  5139  0199                     	;# 
  5140  0199                     	;# 
  5141  019A                     	;# 
  5142  019A                     	;# 
  5143  019A                     	;# 
  5144  019B                     	;# 
  5145  019B                     	;# 
  5146  019B                     	;# 
  5147  019B                     	;# 
  5148  019B                     	;# 
  5149  019C                     	;# 
  5150  019C                     	;# 
  5151  019C                     	;# 
  5152  019D                     	;# 
  5153  019D                     	;# 
  5154  019D                     	;# 
  5155  019E                     	;# 
  5156  019E                     	;# 
  5157  019E                     	;# 
  5158  019F                     	;# 
  5159  019F                     	;# 
  5160  019F                     	;# 
  5161  019F                     	;# 
  5162  019F                     	;# 
  5163  020C                     	;# 
  5164  020D                     	;# 
  5165  020E                     	;# 
  5166  0211                     	;# 
  5167  0211                     	;# 
  5168  0212                     	;# 
  5169  0212                     	;# 
  5170  0213                     	;# 
  5171  0213                     	;# 
  5172  0214                     	;# 
  5173  0214                     	;# 
  5174  0215                     	;# 
  5175  0215                     	;# 
  5176  0215                     	;# 
  5177  0215                     	;# 
  5178  0216                     	;# 
  5179  0216                     	;# 
  5180  0217                     	;# 
  5181  0217                     	;# 
  5182  0219                     	;# 
  5183  021A                     	;# 
  5184  021B                     	;# 
  5185  021C                     	;# 
  5186  021D                     	;# 
  5187  021D                     	;# 
  5188  021E                     	;# 
  5189  021F                     	;# 
  5190  028C                     	;# 
  5191  028D                     	;# 
  5192  028E                     	;# 
  5193  0291                     	;# 
  5194  0291                     	;# 
  5195  0292                     	;# 
  5196  0293                     	;# 
  5197  0294                     	;# 
  5198  0295                     	;# 
  5199  0295                     	;# 
  5200  0296                     	;# 
  5201  0297                     	;# 
  5202  0298                     	;# 
  5203  029F                     	;# 
  5204  030C                     	;# 
  5205  030D                     	;# 
  5206  030E                     	;# 
  5207  0311                     	;# 
  5208  0311                     	;# 
  5209  0312                     	;# 
  5210  0313                     	;# 
  5211  0314                     	;# 
  5212  0315                     	;# 
  5213  0315                     	;# 
  5214  0316                     	;# 
  5215  0317                     	;# 
  5216  0318                     	;# 
  5217  038C                     	;# 
  5218  038D                     	;# 
  5219  038E                     	;# 
  5220  0391                     	;# 
  5221  0392                     	;# 
  5222  0393                     	;# 
  5223  0394                     	;# 
  5224  0395                     	;# 
  5225  0396                     	;# 
  5226  0397                     	;# 
  5227  0398                     	;# 
  5228  0399                     	;# 
  5229  039A                     	;# 
  5230  039C                     	;# 
  5231  039D                     	;# 
  5232  039E                     	;# 
  5233  039F                     	;# 
  5234  0411                     	;# 
  5235  0411                     	;# 
  5236  0412                     	;# 
  5237  0413                     	;# 
  5238  0414                     	;# 
  5239  0415                     	;# 
  5240  0416                     	;# 
  5241  0417                     	;# 
  5242  0418                     	;# 
  5243  0418                     	;# 
  5244  0419                     	;# 
  5245  041A                     	;# 
  5246  041B                     	;# 
  5247  041C                     	;# 
  5248  041D                     	;# 
  5249  041E                     	;# 
  5250  041F                     	;# 
  5251  0498                     	;# 
  5252  0498                     	;# 
  5253  0499                     	;# 
  5254  049A                     	;# 
  5255  049B                     	;# 
  5256  049B                     	;# 
  5257  049C                     	;# 
  5258  049D                     	;# 
  5259  049E                     	;# 
  5260  049F                     	;# 
  5261  0617                     	;# 
  5262  0618                     	;# 
  5263  0619                     	;# 
  5264  0619                     	;# 
  5265  061A                     	;# 
  5266  061B                     	;# 
  5267  061C                     	;# 
  5268  061C                     	;# 
  5269  061F                     	;# 
  5270  0691                     	;# 
  5271  0692                     	;# 
  5272  0693                     	;# 
  5273  0694                     	;# 
  5274  0695                     	;# 
  5275  0696                     	;# 
  5276  0697                     	;# 
  5277  0698                     	;# 
  5278  0699                     	;# 
  5279  0711                     	;# 
  5280  0712                     	;# 
  5281  0713                     	;# 
  5282  0714                     	;# 
  5283  0715                     	;# 
  5284  0716                     	;# 
  5285  0717                     	;# 
  5286  0718                     	;# 
  5287  0719                     	;# 
  5288  0891                     	;# 
  5289  0891                     	;# 
  5290  0891                     	;# 
  5291  0891                     	;# 
  5292  0891                     	;# 
  5293  0891                     	;# 
  5294  0892                     	;# 
  5295  0892                     	;# 
  5296  0892                     	;# 
  5297  0893                     	;# 
  5298  0893                     	;# 
  5299  0893                     	;# 
  5300  0893                     	;# 
  5301  0893                     	;# 
  5302  0893                     	;# 
  5303  0894                     	;# 
  5304  0894                     	;# 
  5305  0894                     	;# 
  5306  0895                     	;# 
  5307  0895                     	;# 
  5308  0895                     	;# 
  5309  0896                     	;# 
  5310  0896                     	;# 
  5311  0896                     	;# 
  5312  089B                     	;# 
  5313  0911                     	;# 
  5314  0912                     	;# 
  5315  0913                     	;# 
  5316  0914                     	;# 
  5317  0915                     	;# 
  5318  0916                     	;# 
  5319  0918                     	;# 
  5320  0919                     	;# 
  5321  091A                     	;# 
  5322  091B                     	;# 
  5323  091C                     	;# 
  5324  091D                     	;# 
  5325  091E                     	;# 
  5326  091F                     	;# 
  5327  0E0F                     	;# 
  5328  0E10                     	;# 
  5329  0E11                     	;# 
  5330  0E12                     	;# 
  5331  0E13                     	;# 
  5332  0E14                     	;# 
  5333  0E15                     	;# 
  5334  0E16                     	;# 
  5335  0E17                     	;# 
  5336  0E18                     	;# 
  5337  0E19                     	;# 
  5338  0E1A                     	;# 
  5339  0E1B                     	;# 
  5340  0E1C                     	;# 
  5341  0E1D                     	;# 
  5342  0E1E                     	;# 
  5343  0E1F                     	;# 
  5344  0E20                     	;# 
  5345  0E21                     	;# 
  5346  0E22                     	;# 
  5347  0E24                     	;# 
  5348  0E25                     	;# 
  5349  0E28                     	;# 
  5350  0E29                     	;# 
  5351  0E2A                     	;# 
  5352  0E2B                     	;# 
  5353  0E2C                     	;# 
  5354  0E2D                     	;# 
  5355  0E2E                     	;# 
  5356  0E2F                     	;# 
  5357  0E90                     	;# 
  5358  0E91                     	;# 
  5359  0E92                     	;# 
  5360  0E94                     	;# 
  5361  0E95                     	;# 
  5362  0E9C                     	;# 
  5363  0E9D                     	;# 
  5364  0E9E                     	;# 
  5365  0E9F                     	;# 
  5366  0EA0                     	;# 
  5367  0EA1                     	;# 
  5368  0EA2                     	;# 
  5369  0EA3                     	;# 
  5370  0EA4                     	;# 
  5371  0EA5                     	;# 
  5372  0EA6                     	;# 
  5373  0EA7                     	;# 
  5374  0F0F                     	;# 
  5375  0F10                     	;# 
  5376  0F11                     	;# 
  5377  0F12                     	;# 
  5378  0F13                     	;# 
  5379  0F14                     	;# 
  5380  0F15                     	;# 
  5381  0F16                     	;# 
  5382  0F17                     	;# 
  5383  0F18                     	;# 
  5384  0F19                     	;# 
  5385  0F1A                     	;# 
  5386  0F1B                     	;# 
  5387  0F1C                     	;# 
  5388  0F1D                     	;# 
  5389  0F1E                     	;# 
  5390  0F1F                     	;# 
  5391  0F20                     	;# 
  5392  0F21                     	;# 
  5393  0F22                     	;# 
  5394  0F23                     	;# 
  5395  0F24                     	;# 
  5396  0F25                     	;# 
  5397  0F26                     	;# 
  5398  0F27                     	;# 
  5399  0F28                     	;# 
  5400  0F29                     	;# 
  5401  0F2A                     	;# 
  5402  0F2B                     	;# 
  5403  0F2C                     	;# 
  5404  0F2D                     	;# 
  5405  0F2E                     	;# 
  5406  0F2F                     	;# 
  5407  0F30                     	;# 
  5408  0F31                     	;# 
  5409  0F32                     	;# 
  5410  0F33                     	;# 
  5411  0F34                     	;# 
  5412  0F35                     	;# 
  5413  0F36                     	;# 
  5414  0F37                     	;# 
  5415  0FE4                     	;# 
  5416  0FE5                     	;# 
  5417  0FE6                     	;# 
  5418  0FE7                     	;# 
  5419  0FE8                     	;# 
  5420  0FE9                     	;# 
  5421  0FEA                     	;# 
  5422  0FEB                     	;# 
  5423  0FED                     	;# 
  5424  0FEE                     	;# 
  5425  0FEF                     	;# 
  5426  0000                     	;# 
  5427  0001                     	;# 
  5428  0002                     	;# 
  5429  0003                     	;# 
  5430  0004                     	;# 
  5431  0005                     	;# 
  5432  0006                     	;# 
  5433  0007                     	;# 
  5434  0008                     	;# 
  5435  0009                     	;# 
  5436  000A                     	;# 
  5437  000B                     	;# 
  5438  000C                     	;# 
  5439  000D                     	;# 
  5440  000E                     	;# 
  5441  0010                     	;# 
  5442  0011                     	;# 
  5443  0012                     	;# 
  5444  0013                     	;# 
  5445  0014                     	;# 
  5446  0015                     	;# 
  5447  0015                     	;# 
  5448  0016                     	;# 
  5449  0016                     	;# 
  5450  0017                     	;# 
  5451  0018                     	;# 
  5452  0019                     	;# 
  5453  0019                     	;# 
  5454  001A                     	;# 
  5455  001B                     	;# 
  5456  001C                     	;# 
  5457  001D                     	;# 
  5458  001E                     	;# 
  5459  001F                     	;# 
  5460  008C                     	;# 
  5461  008D                     	;# 
  5462  008E                     	;# 
  5463  0090                     	;# 
  5464  0091                     	;# 
  5465  0092                     	;# 
  5466  0093                     	;# 
  5467  0094                     	;# 
  5468  0097                     	;# 
  5469  009B                     	;# 
  5470  009B                     	;# 
  5471  009C                     	;# 
  5472  009D                     	;# 
  5473  009E                     	;# 
  5474  009F                     	;# 
  5475  010C                     	;# 
  5476  010D                     	;# 
  5477  010E                     	;# 
  5478  0111                     	;# 
  5479  0112                     	;# 
  5480  0113                     	;# 
  5481  0114                     	;# 
  5482  0115                     	;# 
  5483  0116                     	;# 
  5484  0117                     	;# 
  5485  0118                     	;# 
  5486  0119                     	;# 
  5487  018C                     	;# 
  5488  018D                     	;# 
  5489  018E                     	;# 
  5490  0197                     	;# 
  5491  0199                     	;# 
  5492  0199                     	;# 
  5493  0199                     	;# 
  5494  019A                     	;# 
  5495  019A                     	;# 
  5496  019A                     	;# 
  5497  019B                     	;# 
  5498  019B                     	;# 
  5499  019B                     	;# 
  5500  019B                     	;# 
  5501  019B                     	;# 
  5502  019C                     	;# 
  5503  019C                     	;# 
  5504  019C                     	;# 
  5505  019D                     	;# 
  5506  019D                     	;# 
  5507  019D                     	;# 
  5508  019E                     	;# 
  5509  019E                     	;# 
  5510  019E                     	;# 
  5511  019F                     	;# 
  5512  019F                     	;# 
  5513  019F                     	;# 
  5514  019F                     	;# 
  5515  019F                     	;# 
  5516  020C                     	;# 
  5517  020D                     	;# 
  5518  020E                     	;# 
  5519  0211                     	;# 
  5520  0211                     	;# 
  5521  0212                     	;# 
  5522  0212                     	;# 
  5523  0213                     	;# 
  5524  0213                     	;# 
  5525  0214                     	;# 
  5526  0214                     	;# 
  5527  0215                     	;# 
  5528  0215                     	;# 
  5529  0215                     	;# 
  5530  0215                     	;# 
  5531  0216                     	;# 
  5532  0216                     	;# 
  5533  0217                     	;# 
  5534  0217                     	;# 
  5535  0219                     	;# 
  5536  021A                     	;# 
  5537  021B                     	;# 
  5538  021C                     	;# 
  5539  021D                     	;# 
  5540  021D                     	;# 
  5541  021E                     	;# 
  5542  021F                     	;# 
  5543  028C                     	;# 
  5544  028D                     	;# 
  5545  028E                     	;# 
  5546  0291                     	;# 
  5547  0291                     	;# 
  5548  0292                     	;# 
  5549  0293                     	;# 
  5550  0294                     	;# 
  5551  0295                     	;# 
  5552  0295                     	;# 
  5553  0296                     	;# 
  5554  0297                     	;# 
  5555  0298                     	;# 
  5556  029F                     	;# 
  5557  030C                     	;# 
  5558  030D                     	;# 
  5559  030E                     	;# 
  5560  0311                     	;# 
  5561  0311                     	;# 
  5562  0312                     	;# 
  5563  0313                     	;# 
  5564  0314                     	;# 
  5565  0315                     	;# 
  5566  0315                     	;# 
  5567  0316                     	;# 
  5568  0317                     	;# 
  5569  0318                     	;# 
  5570  038C                     	;# 
  5571  038D                     	;# 
  5572  038E                     	;# 
  5573  0391                     	;# 
  5574  0392                     	;# 
  5575  0393                     	;# 
  5576  0394                     	;# 
  5577  0395                     	;# 
  5578  0396                     	;# 
  5579  0397                     	;# 
  5580  0398                     	;# 
  5581  0399                     	;# 
  5582  039A                     	;# 
  5583  039C                     	;# 
  5584  039D                     	;# 
  5585  039E                     	;# 
  5586  039F                     	;# 
  5587  0411                     	;# 
  5588  0411                     	;# 
  5589  0412                     	;# 
  5590  0413                     	;# 
  5591  0414                     	;# 
  5592  0415                     	;# 
  5593  0416                     	;# 
  5594  0417                     	;# 
  5595  0418                     	;# 
  5596  0418                     	;# 
  5597  0419                     	;# 
  5598  041A                     	;# 
  5599  041B                     	;# 
  5600  041C                     	;# 
  5601  041D                     	;# 
  5602  041E                     	;# 
  5603  041F                     	;# 
  5604  0498                     	;# 
  5605  0498                     	;# 
  5606  0499                     	;# 
  5607  049A                     	;# 
  5608  049B                     	;# 
  5609  049B                     	;# 
  5610  049C                     	;# 
  5611  049D                     	;# 
  5612  049E                     	;# 
  5613  049F                     	;# 
  5614  0617                     	;# 
  5615  0618                     	;# 
  5616  0619                     	;# 
  5617  0619                     	;# 
  5618  061A                     	;# 
  5619  061B                     	;# 
  5620  061C                     	;# 
  5621  061C                     	;# 
  5622  061F                     	;# 
  5623  0691                     	;# 
  5624  0692                     	;# 
  5625  0693                     	;# 
  5626  0694                     	;# 
  5627  0695                     	;# 
  5628  0696                     	;# 
  5629  0697                     	;# 
  5630  0698                     	;# 
  5631  0699                     	;# 
  5632  0711                     	;# 
  5633  0712                     	;# 
  5634  0713                     	;# 
  5635  0714                     	;# 
  5636  0715                     	;# 
  5637  0716                     	;# 
  5638  0717                     	;# 
  5639  0718                     	;# 
  5640  0719                     	;# 
  5641  0891                     	;# 
  5642  0891                     	;# 
  5643  0891                     	;# 
  5644  0891                     	;# 
  5645  0891                     	;# 
  5646  0891                     	;# 
  5647  0892                     	;# 
  5648  0892                     	;# 
  5649  0892                     	;# 
  5650  0893                     	;# 
  5651  0893                     	;# 
  5652  0893                     	;# 
  5653  0893                     	;# 
  5654  0893                     	;# 
  5655  0893                     	;# 
  5656  0894                     	;# 
  5657  0894                     	;# 
  5658  0894                     	;# 
  5659  0895                     	;# 
  5660  0895                     	;# 
  5661  0895                     	;# 
  5662  0896                     	;# 
  5663  0896                     	;# 
  5664  0896                     	;# 
  5665  089B                     	;# 
  5666  0911                     	;# 
  5667  0912                     	;# 
  5668  0913                     	;# 
  5669  0914                     	;# 
  5670  0915                     	;# 
  5671  0916                     	;# 
  5672  0918                     	;# 
  5673  0919                     	;# 
  5674  091A                     	;# 
  5675  091B                     	;# 
  5676  091C                     	;# 
  5677  091D                     	;# 
  5678  091E                     	;# 
  5679  091F                     	;# 
  5680  0E0F                     	;# 
  5681  0E10                     	;# 
  5682  0E11                     	;# 
  5683  0E12                     	;# 
  5684  0E13                     	;# 
  5685  0E14                     	;# 
  5686  0E15                     	;# 
  5687  0E16                     	;# 
  5688  0E17                     	;# 
  5689  0E18                     	;# 
  5690  0E19                     	;# 
  5691  0E1A                     	;# 
  5692  0E1B                     	;# 
  5693  0E1C                     	;# 
  5694  0E1D                     	;# 
  5695  0E1E                     	;# 
  5696  0E1F                     	;# 
  5697  0E20                     	;# 
  5698  0E21                     	;# 
  5699  0E22                     	;# 
  5700  0E24                     	;# 
  5701  0E25                     	;# 
  5702  0E28                     	;# 
  5703  0E29                     	;# 
  5704  0E2A                     	;# 
  5705  0E2B                     	;# 
  5706  0E2C                     	;# 
  5707  0E2D                     	;# 
  5708  0E2E                     	;# 
  5709  0E2F                     	;# 
  5710  0E90                     	;# 
  5711  0E91                     	;# 
  5712  0E92                     	;# 
  5713  0E94                     	;# 
  5714  0E95                     	;# 
  5715  0E9C                     	;# 
  5716  0E9D                     	;# 
  5717  0E9E                     	;# 
  5718  0E9F                     	;# 
  5719  0EA0                     	;# 
  5720  0EA1                     	;# 
  5721  0EA2                     	;# 
  5722  0EA3                     	;# 
  5723  0EA4                     	;# 
  5724  0EA5                     	;# 
  5725  0EA6                     	;# 
  5726  0EA7                     	;# 
  5727  0F0F                     	;# 
  5728  0F10                     	;# 
  5729  0F11                     	;# 
  5730  0F12                     	;# 
  5731  0F13                     	;# 
  5732  0F14                     	;# 
  5733  0F15                     	;# 
  5734  0F16                     	;# 
  5735  0F17                     	;# 
  5736  0F18                     	;# 
  5737  0F19                     	;# 
  5738  0F1A                     	;# 
  5739  0F1B                     	;# 
  5740  0F1C                     	;# 
  5741  0F1D                     	;# 
  5742  0F1E                     	;# 
  5743  0F1F                     	;# 
  5744  0F20                     	;# 
  5745  0F21                     	;# 
  5746  0F22                     	;# 
  5747  0F23                     	;# 
  5748  0F24                     	;# 
  5749  0F25                     	;# 
  5750  0F26                     	;# 
  5751  0F27                     	;# 
  5752  0F28                     	;# 
  5753  0F29                     	;# 
  5754  0F2A                     	;# 
  5755  0F2B                     	;# 
  5756  0F2C                     	;# 
  5757  0F2D                     	;# 
  5758  0F2E                     	;# 
  5759  0F2F                     	;# 
  5760  0F30                     	;# 
  5761  0F31                     	;# 
  5762  0F32                     	;# 
  5763  0F33                     	;# 
  5764  0F34                     	;# 
  5765  0F35                     	;# 
  5766  0F36                     	;# 
  5767  0F37                     	;# 
  5768  0FE4                     	;# 
  5769  0FE5                     	;# 
  5770  0FE6                     	;# 
  5771  0FE7                     	;# 
  5772  0FE8                     	;# 
  5773  0FE9                     	;# 
  5774  0FEA                     	;# 
  5775  0FEB                     	;# 
  5776  0FED                     	;# 
  5777  0FEE                     	;# 
  5778  0FEF                     	;# 
  5779  0000                     	;# 
  5780  0001                     	;# 
  5781  0002                     	;# 
  5782  0003                     	;# 
  5783  0004                     	;# 
  5784  0005                     	;# 
  5785  0006                     	;# 
  5786  0007                     	;# 
  5787  0008                     	;# 
  5788  0009                     	;# 
  5789  000A                     	;# 
  5790  000B                     	;# 
  5791  000C                     	;# 
  5792  000D                     	;# 
  5793  000E                     	;# 
  5794  0010                     	;# 
  5795  0011                     	;# 
  5796  0012                     	;# 
  5797  0013                     	;# 
  5798  0014                     	;# 
  5799  0015                     	;# 
  5800  0015                     	;# 
  5801  0016                     	;# 
  5802  0016                     	;# 
  5803  0017                     	;# 
  5804  0018                     	;# 
  5805  0019                     	;# 
  5806  0019                     	;# 
  5807  001A                     	;# 
  5808  001B                     	;# 
  5809  001C                     	;# 
  5810  001D                     	;# 
  5811  001E                     	;# 
  5812  001F                     	;# 
  5813  008C                     	;# 
  5814  008D                     	;# 
  5815  008E                     	;# 
  5816  0090                     	;# 
  5817  0091                     	;# 
  5818  0092                     	;# 
  5819  0093                     	;# 
  5820  0094                     	;# 
  5821  0097                     	;# 
  5822  009B                     	;# 
  5823  009B                     	;# 
  5824  009C                     	;# 
  5825  009D                     	;# 
  5826  009E                     	;# 
  5827  009F                     	;# 
  5828  010C                     	;# 
  5829  010D                     	;# 
  5830  010E                     	;# 
  5831  0111                     	;# 
  5832  0112                     	;# 
  5833  0113                     	;# 
  5834  0114                     	;# 
  5835  0115                     	;# 
  5836  0116                     	;# 
  5837  0117                     	;# 
  5838  0118                     	;# 
  5839  0119                     	;# 
  5840  018C                     	;# 
  5841  018D                     	;# 
  5842  018E                     	;# 
  5843  0197                     	;# 
  5844  0199                     	;# 
  5845  0199                     	;# 
  5846  0199                     	;# 
  5847  019A                     	;# 
  5848  019A                     	;# 
  5849  019A                     	;# 
  5850  019B                     	;# 
  5851  019B                     	;# 
  5852  019B                     	;# 
  5853  019B                     	;# 
  5854  019B                     	;# 
  5855  019C                     	;# 
  5856  019C                     	;# 
  5857  019C                     	;# 
  5858  019D                     	;# 
  5859  019D                     	;# 
  5860  019D                     	;# 
  5861  019E                     	;# 
  5862  019E                     	;# 
  5863  019E                     	;# 
  5864  019F                     	;# 
  5865  019F                     	;# 
  5866  019F                     	;# 
  5867  019F                     	;# 
  5868  019F                     	;# 
  5869  020C                     	;# 
  5870  020D                     	;# 
  5871  020E                     	;# 
  5872  0211                     	;# 
  5873  0211                     	;# 
  5874  0212                     	;# 
  5875  0212                     	;# 
  5876  0213                     	;# 
  5877  0213                     	;# 
  5878  0214                     	;# 
  5879  0214                     	;# 
  5880  0215                     	;# 
  5881  0215                     	;# 
  5882  0215                     	;# 
  5883  0215                     	;# 
  5884  0216                     	;# 
  5885  0216                     	;# 
  5886  0217                     	;# 
  5887  0217                     	;# 
  5888  0219                     	;# 
  5889  021A                     	;# 
  5890  021B                     	;# 
  5891  021C                     	;# 
  5892  021D                     	;# 
  5893  021D                     	;# 
  5894  021E                     	;# 
  5895  021F                     	;# 
  5896  028C                     	;# 
  5897  028D                     	;# 
  5898  028E                     	;# 
  5899  0291                     	;# 
  5900  0291                     	;# 
  5901  0292                     	;# 
  5902  0293                     	;# 
  5903  0294                     	;# 
  5904  0295                     	;# 
  5905  0295                     	;# 
  5906  0296                     	;# 
  5907  0297                     	;# 
  5908  0298                     	;# 
  5909  029F                     	;# 
  5910  030C                     	;# 
  5911  030D                     	;# 
  5912  030E                     	;# 
  5913  0311                     	;# 
  5914  0311                     	;# 
  5915  0312                     	;# 
  5916  0313                     	;# 
  5917  0314                     	;# 
  5918  0315                     	;# 
  5919  0315                     	;# 
  5920  0316                     	;# 
  5921  0317                     	;# 
  5922  0318                     	;# 
  5923  038C                     	;# 
  5924  038D                     	;# 
  5925  038E                     	;# 
  5926  0391                     	;# 
  5927  0392                     	;# 
  5928  0393                     	;# 
  5929  0394                     	;# 
  5930  0395                     	;# 
  5931  0396                     	;# 
  5932  0397                     	;# 
  5933  0398                     	;# 
  5934  0399                     	;# 
  5935  039A                     	;# 
  5936  039C                     	;# 
  5937  039D                     	;# 
  5938  039E                     	;# 
  5939  039F                     	;# 
  5940  0411                     	;# 
  5941  0411                     	;# 
  5942  0412                     	;# 
  5943  0413                     	;# 
  5944  0414                     	;# 
  5945  0415                     	;# 
  5946  0416                     	;# 
  5947  0417                     	;# 
  5948  0418                     	;# 
  5949  0418                     	;# 
  5950  0419                     	;# 
  5951  041A                     	;# 
  5952  041B                     	;# 
  5953  041C                     	;# 
  5954  041D                     	;# 
  5955  041E                     	;# 
  5956  041F                     	;# 
  5957  0498                     	;# 
  5958  0498                     	;# 
  5959  0499                     	;# 
  5960  049A                     	;# 
  5961  049B                     	;# 
  5962  049B                     	;# 
  5963  049C                     	;# 
  5964  049D                     	;# 
  5965  049E                     	;# 
  5966  049F                     	;# 
  5967  0617                     	;# 
  5968  0618                     	;# 
  5969  0619                     	;# 
  5970  0619                     	;# 
  5971  061A                     	;# 
  5972  061B                     	;# 
  5973  061C                     	;# 
  5974  061C                     	;# 
  5975  061F                     	;# 
  5976  0691                     	;# 
  5977  0692                     	;# 
  5978  0693                     	;# 
  5979  0694                     	;# 
  5980  0695                     	;# 
  5981  0696                     	;# 
  5982  0697                     	;# 
  5983  0698                     	;# 
  5984  0699                     	;# 
  5985  0711                     	;# 
  5986  0712                     	;# 
  5987  0713                     	;# 
  5988  0714                     	;# 
  5989  0715                     	;# 
  5990  0716                     	;# 
  5991  0717                     	;# 
  5992  0718                     	;# 
  5993  0719                     	;# 
  5994  0891                     	;# 
  5995  0891                     	;# 
  5996  0891                     	;# 
  5997  0891                     	;# 
  5998  0891                     	;# 
  5999  0891                     	;# 
  6000  0892                     	;# 
  6001  0892                     	;# 
  6002  0892                     	;# 
  6003  0893                     	;# 
  6004  0893                     	;# 
  6005  0893                     	;# 
  6006  0893                     	;# 
  6007  0893                     	;# 
  6008  0893                     	;# 
  6009  0894                     	;# 
  6010  0894                     	;# 
  6011  0894                     	;# 
  6012  0895                     	;# 
  6013  0895                     	;# 
  6014  0895                     	;# 
  6015  0896                     	;# 
  6016  0896                     	;# 
  6017  0896                     	;# 
  6018  089B                     	;# 
  6019  0911                     	;# 
  6020  0912                     	;# 
  6021  0913                     	;# 
  6022  0914                     	;# 
  6023  0915                     	;# 
  6024  0916                     	;# 
  6025  0918                     	;# 
  6026  0919                     	;# 
  6027  091A                     	;# 
  6028  091B                     	;# 
  6029  091C                     	;# 
  6030  091D                     	;# 
  6031  091E                     	;# 
  6032  091F                     	;# 
  6033  0E0F                     	;# 
  6034  0E10                     	;# 
  6035  0E11                     	;# 
  6036  0E12                     	;# 
  6037  0E13                     	;# 
  6038  0E14                     	;# 
  6039  0E15                     	;# 
  6040  0E16                     	;# 
  6041  0E17                     	;# 
  6042  0E18                     	;# 
  6043  0E19                     	;# 
  6044  0E1A                     	;# 
  6045  0E1B                     	;# 
  6046  0E1C                     	;# 
  6047  0E1D                     	;# 
  6048  0E1E                     	;# 
  6049  0E1F                     	;# 
  6050  0E20                     	;# 
  6051  0E21                     	;# 
  6052  0E22                     	;# 
  6053  0E24                     	;# 
  6054  0E25                     	;# 
  6055  0E28                     	;# 
  6056  0E29                     	;# 
  6057  0E2A                     	;# 
  6058  0E2B                     	;# 
  6059  0E2C                     	;# 
  6060  0E2D                     	;# 
  6061  0E2E                     	;# 
  6062  0E2F                     	;# 
  6063  0E90                     	;# 
  6064  0E91                     	;# 
  6065  0E92                     	;# 
  6066  0E94                     	;# 
  6067  0E95                     	;# 
  6068  0E9C                     	;# 
  6069  0E9D                     	;# 
  6070  0E9E                     	;# 
  6071  0E9F                     	;# 
  6072  0EA0                     	;# 
  6073  0EA1                     	;# 
  6074  0EA2                     	;# 
  6075  0EA3                     	;# 
  6076  0EA4                     	;# 
  6077  0EA5                     	;# 
  6078  0EA6                     	;# 
  6079  0EA7                     	;# 
  6080  0F0F                     	;# 
  6081  0F10                     	;# 
  6082  0F11                     	;# 
  6083  0F12                     	;# 
  6084  0F13                     	;# 
  6085  0F14                     	;# 
  6086  0F15                     	;# 
  6087  0F16                     	;# 
  6088  0F17                     	;# 
  6089  0F18                     	;# 
  6090  0F19                     	;# 
  6091  0F1A                     	;# 
  6092  0F1B                     	;# 
  6093  0F1C                     	;# 
  6094  0F1D                     	;# 
  6095  0F1E                     	;# 
  6096  0F1F                     	;# 
  6097  0F20                     	;# 
  6098  0F21                     	;# 
  6099  0F22                     	;# 
  6100  0F23                     	;# 
  6101  0F24                     	;# 
  6102  0F25                     	;# 
  6103  0F26                     	;# 
  6104  0F27                     	;# 
  6105  0F28                     	;# 
  6106  0F29                     	;# 
  6107  0F2A                     	;# 
  6108  0F2B                     	;# 
  6109  0F2C                     	;# 
  6110  0F2D                     	;# 
  6111  0F2E                     	;# 
  6112  0F2F                     	;# 
  6113  0F30                     	;# 
  6114  0F31                     	;# 
  6115  0F32                     	;# 
  6116  0F33                     	;# 
  6117  0F34                     	;# 
  6118  0F35                     	;# 
  6119  0F36                     	;# 
  6120  0F37                     	;# 
  6121  0FE4                     	;# 
  6122  0FE5                     	;# 
  6123  0FE6                     	;# 
  6124  0FE7                     	;# 
  6125  0FE8                     	;# 
  6126  0FE9                     	;# 
  6127  0FEA                     	;# 
  6128  0FEB                     	;# 
  6129  0FED                     	;# 
  6130  0FEE                     	;# 
  6131  0FEF                     	;# 
  6132  0000                     	;# 
  6133  0001                     	;# 
  6134  0002                     	;# 
  6135  0003                     	;# 
  6136  0004                     	;# 
  6137  0005                     	;# 
  6138  0006                     	;# 
  6139  0007                     	;# 
  6140  0008                     	;# 
  6141  0009                     	;# 
  6142  000A                     	;# 
  6143  000B                     	;# 
  6144  000C                     	;# 
  6145  000D                     	;# 
  6146  000E                     	;# 
  6147  0010                     	;# 
  6148  0011                     	;# 
  6149  0012                     	;# 
  6150  0013                     	;# 
  6151  0014                     	;# 
  6152  0015                     	;# 
  6153  0015                     	;# 
  6154  0016                     	;# 
  6155  0016                     	;# 
  6156  0017                     	;# 
  6157  0018                     	;# 
  6158  0019                     	;# 
  6159  0019                     	;# 
  6160  001A                     	;# 
  6161  001B                     	;# 
  6162  001C                     	;# 
  6163  001D                     	;# 
  6164  001E                     	;# 
  6165  001F                     	;# 
  6166  008C                     	;# 
  6167  008D                     	;# 
  6168  008E                     	;# 
  6169  0090                     	;# 
  6170  0091                     	;# 
  6171  0092                     	;# 
  6172  0093                     	;# 
  6173  0094                     	;# 
  6174  0097                     	;# 
  6175  009B                     	;# 
  6176  009B                     	;# 
  6177  009C                     	;# 
  6178  009D                     	;# 
  6179  009E                     	;# 
  6180  009F                     	;# 
  6181  010C                     	;# 
  6182  010D                     	;# 
  6183  010E                     	;# 
  6184  0111                     	;# 
  6185  0112                     	;# 
  6186  0113                     	;# 
  6187  0114                     	;# 
  6188  0115                     	;# 
  6189  0116                     	;# 
  6190  0117                     	;# 
  6191  0118                     	;# 
  6192  0119                     	;# 
  6193  018C                     	;# 
  6194  018D                     	;# 
  6195  018E                     	;# 
  6196  0197                     	;# 
  6197  0199                     	;# 
  6198  0199                     	;# 
  6199  0199                     	;# 
  6200  019A                     	;# 
  6201  019A                     	;# 
  6202  019A                     	;# 
  6203  019B                     	;# 
  6204  019B                     	;# 
  6205  019B                     	;# 
  6206  019B                     	;# 
  6207  019B                     	;# 
  6208  019C                     	;# 
  6209  019C                     	;# 
  6210  019C                     	;# 
  6211  019D                     	;# 
  6212  019D                     	;# 
  6213  019D                     	;# 
  6214  019E                     	;# 
  6215  019E                     	;# 
  6216  019E                     	;# 
  6217  019F                     	;# 
  6218  019F                     	;# 
  6219  019F                     	;# 
  6220  019F                     	;# 
  6221  019F                     	;# 
  6222  020C                     	;# 
  6223  020D                     	;# 
  6224  020E                     	;# 
  6225  0211                     	;# 
  6226  0211                     	;# 
  6227  0212                     	;# 
  6228  0212                     	;# 
  6229  0213                     	;# 
  6230  0213                     	;# 
  6231  0214                     	;# 
  6232  0214                     	;# 
  6233  0215                     	;# 
  6234  0215                     	;# 
  6235  0215                     	;# 
  6236  0215                     	;# 
  6237  0216                     	;# 
  6238  0216                     	;# 
  6239  0217                     	;# 
  6240  0217                     	;# 
  6241  0219                     	;# 
  6242  021A                     	;# 
  6243  021B                     	;# 
  6244  021C                     	;# 
  6245  021D                     	;# 
  6246  021D                     	;# 
  6247  021E                     	;# 
  6248  021F                     	;# 
  6249  028C                     	;# 
  6250  028D                     	;# 
  6251  028E                     	;# 
  6252  0291                     	;# 
  6253  0291                     	;# 
  6254  0292                     	;# 
  6255  0293                     	;# 
  6256  0294                     	;# 
  6257  0295                     	;# 
  6258  0295                     	;# 
  6259  0296                     	;# 
  6260  0297                     	;# 
  6261  0298                     	;# 
  6262  029F                     	;# 
  6263  030C                     	;# 
  6264  030D                     	;# 
  6265  030E                     	;# 
  6266  0311                     	;# 
  6267  0311                     	;# 
  6268  0312                     	;# 
  6269  0313                     	;# 
  6270  0314                     	;# 
  6271  0315                     	;# 
  6272  0315                     	;# 
  6273  0316                     	;# 
  6274  0317                     	;# 
  6275  0318                     	;# 
  6276  038C                     	;# 
  6277  038D                     	;# 
  6278  038E                     	;# 
  6279  0391                     	;# 
  6280  0392                     	;# 
  6281  0393                     	;# 
  6282  0394                     	;# 
  6283  0395                     	;# 
  6284  0396                     	;# 
  6285  0397                     	;# 
  6286  0398                     	;# 
  6287  0399                     	;# 
  6288  039A                     	;# 
  6289  039C                     	;# 
  6290  039D                     	;# 
  6291  039E                     	;# 
  6292  039F                     	;# 
  6293  0411                     	;# 
  6294  0411                     	;# 
  6295  0412                     	;# 
  6296  0413                     	;# 
  6297  0414                     	;# 
  6298  0415                     	;# 
  6299  0416                     	;# 
  6300  0417                     	;# 
  6301  0418                     	;# 
  6302  0418                     	;# 
  6303  0419                     	;# 
  6304  041A                     	;# 
  6305  041B                     	;# 
  6306  041C                     	;# 
  6307  041D                     	;# 
  6308  041E                     	;# 
  6309  041F                     	;# 
  6310  0498                     	;# 
  6311  0498                     	;# 
  6312  0499                     	;# 
  6313  049A                     	;# 
  6314  049B                     	;# 
  6315  049B                     	;# 
  6316  049C                     	;# 
  6317  049D                     	;# 
  6318  049E                     	;# 
  6319  049F                     	;# 
  6320  0617                     	;# 
  6321  0618                     	;# 
  6322  0619                     	;# 
  6323  0619                     	;# 
  6324  061A                     	;# 
  6325  061B                     	;# 
  6326  061C                     	;# 
  6327  061C                     	;# 
  6328  061F                     	;# 
  6329  0691                     	;# 
  6330  0692                     	;# 
  6331  0693                     	;# 
  6332  0694                     	;# 
  6333  0695                     	;# 
  6334  0696                     	;# 
  6335  0697                     	;# 
  6336  0698                     	;# 
  6337  0699                     	;# 
  6338  0711                     	;# 
  6339  0712                     	;# 
  6340  0713                     	;# 
  6341  0714                     	;# 
  6342  0715                     	;# 
  6343  0716                     	;# 
  6344  0717                     	;# 
  6345  0718                     	;# 
  6346  0719                     	;# 
  6347  0891                     	;# 
  6348  0891                     	;# 
  6349  0891                     	;# 
  6350  0891                     	;# 
  6351  0891                     	;# 
  6352  0891                     	;# 
  6353  0892                     	;# 
  6354  0892                     	;# 
  6355  0892                     	;# 
  6356  0893                     	;# 
  6357  0893                     	;# 
  6358  0893                     	;# 
  6359  0893                     	;# 
  6360  0893                     	;# 
  6361  0893                     	;# 
  6362  0894                     	;# 
  6363  0894                     	;# 
  6364  0894                     	;# 
  6365  0895                     	;# 
  6366  0895                     	;# 
  6367  0895                     	;# 
  6368  0896                     	;# 
  6369  0896                     	;# 
  6370  0896                     	;# 
  6371  089B                     	;# 
  6372  0911                     	;# 
  6373  0912                     	;# 
  6374  0913                     	;# 
  6375  0914                     	;# 
  6376  0915                     	;# 
  6377  0916                     	;# 
  6378  0918                     	;# 
  6379  0919                     	;# 
  6380  091A                     	;# 
  6381  091B                     	;# 
  6382  091C                     	;# 
  6383  091D                     	;# 
  6384  091E                     	;# 
  6385  091F                     	;# 
  6386  0E0F                     	;# 
  6387  0E10                     	;# 
  6388  0E11                     	;# 
  6389  0E12                     	;# 
  6390  0E13                     	;# 
  6391  0E14                     	;# 
  6392  0E15                     	;# 
  6393  0E16                     	;# 
  6394  0E17                     	;# 
  6395  0E18                     	;# 
  6396  0E19                     	;# 
  6397  0E1A                     	;# 
  6398  0E1B                     	;# 
  6399  0E1C                     	;# 
  6400  0E1D                     	;# 
  6401  0E1E                     	;# 
  6402  0E1F                     	;# 
  6403  0E20                     	;# 
  6404  0E21                     	;# 
  6405  0E22                     	;# 
  6406  0E24                     	;# 
  6407  0E25                     	;# 
  6408  0E28                     	;# 
  6409  0E29                     	;# 
  6410  0E2A                     	;# 
  6411  0E2B                     	;# 
  6412  0E2C                     	;# 
  6413  0E2D                     	;# 
  6414  0E2E                     	;# 
  6415  0E2F                     	;# 
  6416  0E90                     	;# 
  6417  0E91                     	;# 
  6418  0E92                     	;# 
  6419  0E94                     	;# 
  6420  0E95                     	;# 
  6421  0E9C                     	;# 
  6422  0E9D                     	;# 
  6423  0E9E                     	;# 
  6424  0E9F                     	;# 
  6425  0EA0                     	;# 
  6426  0EA1                     	;# 
  6427  0EA2                     	;# 
  6428  0EA3                     	;# 
  6429  0EA4                     	;# 
  6430  0EA5                     	;# 
  6431  0EA6                     	;# 
  6432  0EA7                     	;# 
  6433  0F0F                     	;# 
  6434  0F10                     	;# 
  6435  0F11                     	;# 
  6436  0F12                     	;# 
  6437  0F13                     	;# 
  6438  0F14                     	;# 
  6439  0F15                     	;# 
  6440  0F16                     	;# 
  6441  0F17                     	;# 
  6442  0F18                     	;# 
  6443  0F19                     	;# 
  6444  0F1A                     	;# 
  6445  0F1B                     	;# 
  6446  0F1C                     	;# 
  6447  0F1D                     	;# 
  6448  0F1E                     	;# 
  6449  0F1F                     	;# 
  6450  0F20                     	;# 
  6451  0F21                     	;# 
  6452  0F22                     	;# 
  6453  0F23                     	;# 
  6454  0F24                     	;# 
  6455  0F25                     	;# 
  6456  0F26                     	;# 
  6457  0F27                     	;# 
  6458  0F28                     	;# 
  6459  0F29                     	;# 
  6460  0F2A                     	;# 
  6461  0F2B                     	;# 
  6462  0F2C                     	;# 
  6463  0F2D                     	;# 
  6464  0F2E                     	;# 
  6465  0F2F                     	;# 
  6466  0F30                     	;# 
  6467  0F31                     	;# 
  6468  0F32                     	;# 
  6469  0F33                     	;# 
  6470  0F34                     	;# 
  6471  0F35                     	;# 
  6472  0F36                     	;# 
  6473  0F37                     	;# 
  6474  0FE4                     	;# 
  6475  0FE5                     	;# 
  6476  0FE6                     	;# 
  6477  0FE7                     	;# 
  6478  0FE8                     	;# 
  6479  0FE9                     	;# 
  6480  0FEA                     	;# 
  6481  0FEB                     	;# 
  6482  0FED                     	;# 
  6483  0FEE                     	;# 
  6484  0FEF                     	;# 
  6485  0000                     	;# 
  6486  0001                     	;# 
  6487  0002                     	;# 
  6488  0003                     	;# 
  6489  0004                     	;# 
  6490  0005                     	;# 
  6491  0006                     	;# 
  6492  0007                     	;# 
  6493  0008                     	;# 
  6494  0009                     	;# 
  6495  000A                     	;# 
  6496  000B                     	;# 
  6497  000C                     	;# 
  6498  000D                     	;# 
  6499  000E                     	;# 
  6500  0010                     	;# 
  6501  0011                     	;# 
  6502  0012                     	;# 
  6503  0013                     	;# 
  6504  0014                     	;# 
  6505  0015                     	;# 
  6506  0015                     	;# 
  6507  0016                     	;# 
  6508  0016                     	;# 
  6509  0017                     	;# 
  6510  0018                     	;# 
  6511  0019                     	;# 
  6512  0019                     	;# 
  6513  001A                     	;# 
  6514  001B                     	;# 
  6515  001C                     	;# 
  6516  001D                     	;# 
  6517  001E                     	;# 
  6518  001F                     	;# 
  6519  008C                     	;# 
  6520  008D                     	;# 
  6521  008E                     	;# 
  6522  0090                     	;# 
  6523  0091                     	;# 
  6524  0092                     	;# 
  6525  0093                     	;# 
  6526  0094                     	;# 
  6527  0097                     	;# 
  6528  009B                     	;# 
  6529  009B                     	;# 
  6530  009C                     	;# 
  6531  009D                     	;# 
  6532  009E                     	;# 
  6533  009F                     	;# 
  6534  010C                     	;# 
  6535  010D                     	;# 
  6536  010E                     	;# 
  6537  0111                     	;# 
  6538  0112                     	;# 
  6539  0113                     	;# 
  6540  0114                     	;# 
  6541  0115                     	;# 
  6542  0116                     	;# 
  6543  0117                     	;# 
  6544  0118                     	;# 
  6545  0119                     	;# 
  6546  018C                     	;# 
  6547  018D                     	;# 
  6548  018E                     	;# 
  6549  0197                     	;# 
  6550  0199                     	;# 
  6551  0199                     	;# 
  6552  0199                     	;# 
  6553  019A                     	;# 
  6554  019A                     	;# 
  6555  019A                     	;# 
  6556  019B                     	;# 
  6557  019B                     	;# 
  6558  019B                     	;# 
  6559  019B                     	;# 
  6560  019B                     	;# 
  6561  019C                     	;# 
  6562  019C                     	;# 
  6563  019C                     	;# 
  6564  019D                     	;# 
  6565  019D                     	;# 
  6566  019D                     	;# 
  6567  019E                     	;# 
  6568  019E                     	;# 
  6569  019E                     	;# 
  6570  019F                     	;# 
  6571  019F                     	;# 
  6572  019F                     	;# 
  6573  019F                     	;# 
  6574  019F                     	;# 
  6575  020C                     	;# 
  6576  020D                     	;# 
  6577  020E                     	;# 
  6578  0211                     	;# 
  6579  0211                     	;# 
  6580  0212                     	;# 
  6581  0212                     	;# 
  6582  0213                     	;# 
  6583  0213                     	;# 
  6584  0214                     	;# 
  6585  0214                     	;# 
  6586  0215                     	;# 
  6587  0215                     	;# 
  6588  0215                     	;# 
  6589  0215                     	;# 
  6590  0216                     	;# 
  6591  0216                     	;# 
  6592  0217                     	;# 
  6593  0217                     	;# 
  6594  0219                     	;# 
  6595  021A                     	;# 
  6596  021B                     	;# 
  6597  021C                     	;# 
  6598  021D                     	;# 
  6599  021D                     	;# 
  6600  021E                     	;# 
  6601  021F                     	;# 
  6602  028C                     	;# 
  6603  028D                     	;# 
  6604  028E                     	;# 
  6605  0291                     	;# 
  6606  0291                     	;# 
  6607  0292                     	;# 
  6608  0293                     	;# 
  6609  0294                     	;# 
  6610  0295                     	;# 
  6611  0295                     	;# 
  6612  0296                     	;# 
  6613  0297                     	;# 
  6614  0298                     	;# 
  6615  029F                     	;# 
  6616  030C                     	;# 
  6617  030D                     	;# 
  6618  030E                     	;# 
  6619  0311                     	;# 
  6620  0311                     	;# 
  6621  0312                     	;# 
  6622  0313                     	;# 
  6623  0314                     	;# 
  6624  0315                     	;# 
  6625  0315                     	;# 
  6626  0316                     	;# 
  6627  0317                     	;# 
  6628  0318                     	;# 
  6629  038C                     	;# 
  6630  038D                     	;# 
  6631  038E                     	;# 
  6632  0391                     	;# 
  6633  0392                     	;# 
  6634  0393                     	;# 
  6635  0394                     	;# 
  6636  0395                     	;# 
  6637  0396                     	;# 
  6638  0397                     	;# 
  6639  0398                     	;# 
  6640  0399                     	;# 
  6641  039A                     	;# 
  6642  039C                     	;# 
  6643  039D                     	;# 
  6644  039E                     	;# 
  6645  039F                     	;# 
  6646  0411                     	;# 
  6647  0411                     	;# 
  6648  0412                     	;# 
  6649  0413                     	;# 
  6650  0414                     	;# 
  6651  0415                     	;# 
  6652  0416                     	;# 
  6653  0417                     	;# 
  6654  0418                     	;# 
  6655  0418                     	;# 
  6656  0419                     	;# 
  6657  041A                     	;# 
  6658  041B                     	;# 
  6659  041C                     	;# 
  6660  041D                     	;# 
  6661  041E                     	;# 
  6662  041F                     	;# 
  6663  0498                     	;# 
  6664  0498                     	;# 
  6665  0499                     	;# 
  6666  049A                     	;# 
  6667  049B                     	;# 
  6668  049B                     	;# 
  6669  049C                     	;# 
  6670  049D                     	;# 
  6671  049E                     	;# 
  6672  049F                     	;# 
  6673  0617                     	;# 
  6674  0618                     	;# 
  6675  0619                     	;# 
  6676  0619                     	;# 
  6677  061A                     	;# 
  6678  061B                     	;# 
  6679  061C                     	;# 
  6680  061C                     	;# 
  6681  061F                     	;# 
  6682  0691                     	;# 
  6683  0692                     	;# 
  6684  0693                     	;# 
  6685  0694                     	;# 
  6686  0695                     	;# 
  6687  0696                     	;# 
  6688  0697                     	;# 
  6689  0698                     	;# 
  6690  0699                     	;# 
  6691  0711                     	;# 
  6692  0712                     	;# 
  6693  0713                     	;# 
  6694  0714                     	;# 
  6695  0715                     	;# 
  6696  0716                     	;# 
  6697  0717                     	;# 
  6698  0718                     	;# 
  6699  0719                     	;# 
  6700  0891                     	;# 
  6701  0891                     	;# 
  6702  0891                     	;# 
  6703  0891                     	;# 
  6704  0891                     	;# 
  6705  0891                     	;# 
  6706  0892                     	;# 
  6707  0892                     	;# 
  6708  0892                     	;# 
  6709  0893                     	;# 
  6710  0893                     	;# 
  6711  0893                     	;# 
  6712  0893                     	;# 
  6713  0893                     	;# 
  6714  0893                     	;# 
  6715  0894                     	;# 
  6716  0894                     	;# 
  6717  0894                     	;# 
  6718  0895                     	;# 
  6719  0895                     	;# 
  6720  0895                     	;# 
  6721  0896                     	;# 
  6722  0896                     	;# 
  6723  0896                     	;# 
  6724  089B                     	;# 
  6725  0911                     	;# 
  6726  0912                     	;# 
  6727  0913                     	;# 
  6728  0914                     	;# 
  6729  0915                     	;# 
  6730  0916                     	;# 
  6731  0918                     	;# 
  6732  0919                     	;# 
  6733  091A                     	;# 
  6734  091B                     	;# 
  6735  091C                     	;# 
  6736  091D                     	;# 
  6737  091E                     	;# 
  6738  091F                     	;# 
  6739  0E0F                     	;# 
  6740  0E10                     	;# 
  6741  0E11                     	;# 
  6742  0E12                     	;# 
  6743  0E13                     	;# 
  6744  0E14                     	;# 
  6745  0E15                     	;# 
  6746  0E16                     	;# 
  6747  0E17                     	;# 
  6748  0E18                     	;# 
  6749  0E19                     	;# 
  6750  0E1A                     	;# 
  6751  0E1B                     	;# 
  6752  0E1C                     	;# 
  6753  0E1D                     	;# 
  6754  0E1E                     	;# 
  6755  0E1F                     	;# 
  6756  0E20                     	;# 
  6757  0E21                     	;# 
  6758  0E22                     	;# 
  6759  0E24                     	;# 
  6760  0E25                     	;# 
  6761  0E28                     	;# 
  6762  0E29                     	;# 
  6763  0E2A                     	;# 
  6764  0E2B                     	;# 
  6765  0E2C                     	;# 
  6766  0E2D                     	;# 
  6767  0E2E                     	;# 
  6768  0E2F                     	;# 
  6769  0E90                     	;# 
  6770  0E91                     	;# 
  6771  0E92                     	;# 
  6772  0E94                     	;# 
  6773  0E95                     	;# 
  6774  0E9C                     	;# 
  6775  0E9D                     	;# 
  6776  0E9E                     	;# 
  6777  0E9F                     	;# 
  6778  0EA0                     	;# 
  6779  0EA1                     	;# 
  6780  0EA2                     	;# 
  6781  0EA3                     	;# 
  6782  0EA4                     	;# 
  6783  0EA5                     	;# 
  6784  0EA6                     	;# 
  6785  0EA7                     	;# 
  6786  0F0F                     	;# 
  6787  0F10                     	;# 
  6788  0F11                     	;# 
  6789  0F12                     	;# 
  6790  0F13                     	;# 
  6791  0F14                     	;# 
  6792  0F15                     	;# 
  6793  0F16                     	;# 
  6794  0F17                     	;# 
  6795  0F18                     	;# 
  6796  0F19                     	;# 
  6797  0F1A                     	;# 
  6798  0F1B                     	;# 
  6799  0F1C                     	;# 
  6800  0F1D                     	;# 
  6801  0F1E                     	;# 
  6802  0F1F                     	;# 
  6803  0F20                     	;# 
  6804  0F21                     	;# 
  6805  0F22                     	;# 
  6806  0F23                     	;# 
  6807  0F24                     	;# 
  6808  0F25                     	;# 
  6809  0F26                     	;# 
  6810  0F27                     	;# 
  6811  0F28                     	;# 
  6812  0F29                     	;# 
  6813  0F2A                     	;# 
  6814  0F2B                     	;# 
  6815  0F2C                     	;# 
  6816  0F2D                     	;# 
  6817  0F2E                     	;# 
  6818  0F2F                     	;# 
  6819  0F30                     	;# 
  6820  0F31                     	;# 
  6821  0F32                     	;# 
  6822  0F33                     	;# 
  6823  0F34                     	;# 
  6824  0F35                     	;# 
  6825  0F36                     	;# 
  6826  0F37                     	;# 
  6827  0FE4                     	;# 
  6828  0FE5                     	;# 
  6829  0FE6                     	;# 
  6830  0FE7                     	;# 
  6831  0FE8                     	;# 
  6832  0FE9                     	;# 
  6833  0FEA                     	;# 
  6834  0FEB                     	;# 
  6835  0FED                     	;# 
  6836  0FEE                     	;# 
  6837  0FEF                     	;# 
  6838                           
  6839 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
  6840  001F                     _T2CONbits	set	31
  6841  001F                     _T2CON	set	31
  6842  001D                     _TMR2	set	29
  6843  001E                     _PR2	set	30
  6844  0013                     _PIR3bits	set	19
  6845  001B                     _T1CONbits	set	27
  6846  001B                     _T1CON	set	27
  6847  0011                     _PIR1bits	set	17
  6848  0019                     _TMR1L	set	25
  6849  001A                     _TMR1H	set	26
  6850  001C                     _T1GCON	set	28
  6851  0014                     _PIR4bits	set	20
  6852  0017                     _T0CON0bits	set	23
  6853  0017                     _T0CON0	set	23
  6854  0010                     _PIR0bits	set	16
  6855  0015                     _TMR0L	set	21
  6856  0016                     _TMR0H	set	22
  6857  0018                     _T0CON1	set	24
  6858  000D                     _PORTBbits	set	13
  6859  000E                     _PORTCbits	set	14
  6860  000C                     _PORTAbits	set	12
  6861  000B                     _INTCONbits	set	11
  6862  0014                     _PIR4	set	20
  6863  0013                     _PIR3	set	19
  6864  0012                     _PIR2	set	18
  6865  0011                     _PIR1	set	17
  6866  0010                     _PIR0	set	16
  6867  008E                     _TRISC	set	142
  6868  008D                     _TRISB	set	141
  6869  008C                     _TRISA	set	140
  6870  0093                     _PIE3bits	set	147
  6871  0091                     _PIE1bits	set	145
  6872  0094                     _PIE4bits	set	148
  6873  0090                     _PIE0bits	set	144
  6874  0097                     _WDTCON	set	151
  6875  008D                     _TRISBbits	set	141
  6876  008E                     _TRISCbits	set	142
  6877  008C                     _TRISAbits	set	140
  6878  0094                     _PIE4	set	148
  6879  0093                     _PIE3	set	147
  6880  0092                     _PIE2	set	146
  6881  0091                     _PIE1	set	145
  6882  0090                     _PIE0	set	144
  6883  010E                     _LATC	set	270
  6884  010D                     _LATB	set	269
  6885  010C                     _LATA	set	268
  6886  010D                     _LATBbits	set	269
  6887  010E                     _LATCbits	set	270
  6888  010C                     _LATAbits	set	268
  6889  018C                     _ANSELA	set	396
  6890  018D                     _ANSELB	set	397
  6891  018E                     _ANSELC	set	398
  6892  0199                     _RC1REG	set	409
  6893  019D                     _RC1STAbits	set	413
  6894  019A                     _TX1REG	set	410
  6895  019E                     _TX1STAbits	set	414
  6896  019C                     _SP1BRGH	set	412
  6897  019B                     _SP1BRGL	set	411
  6898  019E                     _TX1STA	set	414
  6899  019D                     _RC1STA	set	413
  6900  019F                     _BAUD1CON	set	415
  6901  020E                     _WPUC	set	526
  6902  020C                     _WPUA	set	524
  6903  020D                     _WPUB	set	525
  6904  028E                     _ODCONC	set	654
  6905  028D                     _ODCONB	set	653
  6906  028C                     _ODCONA	set	652
  6907  0295                     _CCPR2L	set	661
  6908  0296                     _CCPR2H	set	662
  6909  0298                     _CCP2CAP	set	664
  6910  0297                     _CCP2CON	set	663
  6911  029F                     _CCPTMRSbits	set	671
  6912  0291                     _CCPR1L	set	657
  6913  0292                     _CCPR1H	set	658
  6914  0294                     _CCP1CAP	set	660
  6915  0293                     _CCP1CON	set	659
  6916  0317                     _CCP4CONbits	set	791
  6917  0315                     _CCPR4L	set	789
  6918  0316                     _CCPR4H	set	790
  6919  0317                     _CCP4CON	set	791
  6920  030E                     _SLRCONC	set	782
  6921  030D                     _SLRCONB	set	781
  6922  030C                     _SLRCONA	set	780
  6923  0311                     _CCPR3L	set	785
  6924  0312                     _CCPR3H	set	786
  6925  0314                     _CCP3CAP	set	788
  6926  0313                     _CCP3CON	set	787
  6927  038E                     _INLVLC	set	910
  6928  038D                     _INLVLB	set	909
  6929  038C                     _INLVLA	set	908
  6930  0414                     _T3GCONbits	set	1044
  6931  0413                     _T3CONbits	set	1043
  6932  0413                     _T3CON	set	1043
  6933  0411                     _TMR3L	set	1041
  6934  0412                     _TMR3H	set	1042
  6935  0414                     _T3GCON	set	1044
  6936  061F                     _PWMTMRSbits	set	1567
  6937  0617                     _PWM5DCL	set	1559
  6938  0618                     _PWM5DCH	set	1560
  6939  0619                     _PWM5CON	set	1561
  6940  0916                     _PMD5	set	2326
  6941  0915                     _PMD4	set	2325
  6942  0914                     _PMD3	set	2324
  6943  0913                     _PMD2	set	2323
  6944  0912                     _PMD1	set	2322
  6945  0911                     _PMD0	set	2321
  6946  091E                     _OSCTUNE	set	2334
  6947  091F                     _OSCFRQ	set	2335
  6948  091D                     _OSCEN	set	2333
  6949  091B                     _OSCCON3	set	2331
  6950  0919                     _OSCCON1	set	2329
  6951  48E0                     _PLLR	set	18656
  6952  0E16                     _CCP3PPS	set	3606
  6953  0E15                     _CCP2PPS	set	3605
  6954  0E14                     _CCP1PPS	set	3604
  6955  0E24                     _RXPPS	set	3620
  6956  0E9E                     _RB6PPS	set	3742
  6957  0EA1                     _RC1PPS	set	3745
  6958  0EA4                     _RC4PPS	set	3748
  6959                           
  6960                           	psect	stringtext1
  6961  1000                     __pstringtext1:
  6962  1000                     STR_2:
  6963  1000  3445               	retlw	69	;'E'
  6964  1001  3452               	retlw	82	;'R'
  6965  1002  3452               	retlw	82	;'R'
  6966  1003  344F               	retlw	79	;'O'
  6967  1004  3452               	retlw	82	;'R'
  6968  1005  343A               	retlw	58	;':'
  6969  1006  3420               	retlw	32	;' '
  6970  1007  3449               	retlw	73	;'I'
  6971  1008  346E               	retlw	110	;'n'
  6972  1009  3476               	retlw	118	;'v'
  6973  100A  3461               	retlw	97	;'a'
  6974  100B  346C               	retlw	108	;'l'
  6975  100C  3469               	retlw	105	;'i'
  6976  100D  3464               	retlw	100	;'d'
  6977  100E  3420               	retlw	32	;' '
  6978  100F  3474               	retlw	116	;'t'
  6979  1010  3472               	retlw	114	;'r'
  6980  1011  3469               	retlw	105	;'i'
  6981  1012  3467               	retlw	103	;'g'
  6982  1013  3450               	retlw	80	;'P'
  6983  1014  3469               	retlw	105	;'i'
  6984  1015  346E               	retlw	110	;'n'
  6985  1016  3420               	retlw	32	;' '
  6986  1017  3428               	retlw	40	;'('
  6987  1018  346D               	retlw	109	;'m'
  6988  1019  3475               	retlw	117	;'u'
  6989  101A  3473               	retlw	115	;'s'
  6990  101B  3474               	retlw	116	;'t'
  6991  101C  3420               	retlw	32	;' '
  6992  101D  344E               	retlw	78	;'N'
  6993  101E  344F               	retlw	79	;'O'
  6994  101F  3454               	retlw	84	;'T'
  6995  1020  3420               	retlw	32	;' '
  6996  1021  3462               	retlw	98	;'b'
  6997  1022  3465               	retlw	101	;'e'
  6998  1023  3420               	retlw	32	;' '
  6999  1024  345B               	retlw	91	;'['
  7000  1025  3441               	retlw	65	;'A'
  7001  1026  3432               	retlw	50	;'2'
  7002  1027  342C               	retlw	44	;','
  7003  1028  3420               	retlw	32	;' '
  7004  1029  3441               	retlw	65	;'A'
  7005  102A  3433               	retlw	51	;'3'
  7006  102B  342C               	retlw	44	;','
  7007  102C  3420               	retlw	32	;' '
  7008  102D  3441               	retlw	65	;'A'
  7009  102E  3434               	retlw	52	;'4'
  7010  102F  342C               	retlw	44	;','
  7011  1030  3420               	retlw	32	;' '
  7012  1031  3443               	retlw	67	;'C'
  7013  1032  3433               	retlw	51	;'3'
  7014  1033  342C               	retlw	44	;','
  7015  1034  3420               	retlw	32	;' '
  7016  1035  3443               	retlw	67	;'C'
  7017  1036  3435               	retlw	53	;'5'
  7018  1037  345D               	retlw	93	;']'
  7019  1038  3429               	retlw	41	;')'
  7020  1039  3400               	retlw	0
  7021                           
  7022                           	psect	stringtext2
  7023  103A                     __pstringtext2:
  7024  103A                     STR_1:
  7025  103A  3445               	retlw	69	;'E'
  7026  103B  3452               	retlw	82	;'R'
  7027  103C  3452               	retlw	82	;'R'
  7028  103D  344F               	retlw	79	;'O'
  7029  103E  3452               	retlw	82	;'R'
  7030  103F  343A               	retlw	58	;':'
  7031  1040  3420               	retlw	32	;' '
  7032  1041  3449               	retlw	73	;'I'
  7033  1042  346E               	retlw	110	;'n'
  7034  1043  3476               	retlw	118	;'v'
  7035  1044  3461               	retlw	97	;'a'
  7036  1045  346C               	retlw	108	;'l'
  7037  1046  3469               	retlw	105	;'i'
  7038  1047  3464               	retlw	100	;'d'
  7039  1048  3420               	retlw	32	;' '
  7040  1049  3465               	retlw	101	;'e'
  7041  104A  3463               	retlw	99	;'c'
  7042  104B  3468               	retlw	104	;'h'
  7043  104C  346F               	retlw	111	;'o'
  7044  104D  3450               	retlw	80	;'P'
  7045  104E  3469               	retlw	105	;'i'
  7046  104F  346E               	retlw	110	;'n'
  7047  1050  3420               	retlw	32	;' '
  7048  1051  3428               	retlw	40	;'('
  7049  1052  346D               	retlw	109	;'m'
  7050  1053  3475               	retlw	117	;'u'
  7051  1054  3473               	retlw	115	;'s'
  7052  1055  3474               	retlw	116	;'t'
  7053  1056  3420               	retlw	32	;' '
  7054  1057  3462               	retlw	98	;'b'
  7055  1058  3465               	retlw	101	;'e'
  7056  1059  3420               	retlw	32	;' '
  7057  105A  345B               	retlw	91	;'['
  7058  105B  3441               	retlw	65	;'A'
  7059  105C  3432               	retlw	50	;'2'
  7060  105D  342C               	retlw	44	;','
  7061  105E  3420               	retlw	32	;' '
  7062  105F  3441               	retlw	65	;'A'
  7063  1060  3434               	retlw	52	;'4'
  7064  1061  342C               	retlw	44	;','
  7065  1062  3420               	retlw	32	;' '
  7066  1063  3443               	retlw	67	;'C'
  7067  1064  3433               	retlw	51	;'3'
  7068  1065  342C               	retlw	44	;','
  7069  1066  3420               	retlw	32	;' '
  7070  1067  3443               	retlw	67	;'C'
  7071  1068  3435               	retlw	53	;'5'
  7072  1069  345D               	retlw	93	;']'
  7073  106A  3429               	retlw	41	;')'
  7074  106B  3400               	retlw	0
  7075                           
  7076                           	psect	stringtext3
  7077  106C                     __pstringtext3:
  7078  106C                     STR_3:
  7079  106C  3425               	retlw	37	;'%'
  7080  106D  3475               	retlw	117	;'u'
  7081  106E  3400               	retlw	0
  7082                           
  7083                           	psect	stringtext4
  7084  0000                     __pstringtext4:
  7085  106C                     
  7086                           	psect	cinit
  7087  0092                     start_initialization:	
  7088                           ; #config settings
  7089                           
  7090  0092                     __initialization:
  7091                           
  7092                           ; Clear objects allocated to COMMON
  7093  0092  01FA               	clrf	__pbssCOMMON& (0+127)
  7094  0093  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  7095  0094  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  7096  0095  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  7097                           
  7098                           ; Clear objects allocated to BANK1
  7099  0096  30A0               	movlw	low __pbssBANK1
  7100  0097  0084               	movwf	4
  7101  0098  3000               	movlw	high __pbssBANK1
  7102  0099  0085               	movwf	5
  7103  009A  303B               	movlw	59
  7104  009B  318A  2229  3180   	fcall	clear_ram0
  7105                           
  7106                           ; Clear objects allocated to BANK2
  7107  009E  3020               	movlw	low __pbssBANK2
  7108  009F  0084               	movwf	4
  7109  00A0  3001               	movlw	high __pbssBANK2
  7110  00A1  0085               	movwf	5
  7111  00A2  3038               	movlw	56
  7112  00A3  318A  2229  3180   	fcall	clear_ram0
  7113                           
  7114                           ; Clear objects allocated to BANK3
  7115  00A6  30A0               	movlw	low __pbssBANK3
  7116  00A7  0084               	movwf	4
  7117  00A8  3001               	movlw	high __pbssBANK3
  7118  00A9  0085               	movwf	5
  7119  00AA  3020               	movlw	32
  7120  00AB  318A  2229  3180   	fcall	clear_ram0
  7121  00AE                     end_of_initialization:	
  7122                           ;End of C runtime variable initialization code
  7123                           
  7124  00AE                     __end_of__initialization:
  7125  00AE  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7126  00AF  0020               	movlb	0
  7127  00B0  3180  28B2         	ljmp	_main	;jump to C main() function
  7128                           
  7129                           	psect	bssCOMMON
  7130  007A                     __pbssCOMMON:
  7131  007A                     _eusartRxTail:
  7132  007A                     	ds	1
  7133  007B                     _eusartRxHead:
  7134  007B                     	ds	1
  7135  007C                     _eusartTxHead:
  7136  007C                     	ds	1
  7137  007D                     _CountCallBack:
  7138  007D                     	ds	1
  7139                           
  7140                           	psect	bssBANK1
  7141  00A0                     __pbssBANK1:
  7142  00A0                     _nout:
  7143  00A0                     	ds	2
  7144  00A2                     _width:
  7145  00A2                     	ds	2
  7146  00A4                     _prec:
  7147  00A4                     	ds	2
  7148  00A6                     _flags:
  7149  00A6                     	ds	2
  7150  00A8                     _timer3ReloadVal:
  7151  00A8                     	ds	2
  7152  00AA                     _dutyCycle10bit:
  7153  00AA                     	ds	2
  7154  00AC                     _ocCount:
  7155  00AC                     	ds	2
  7156  00AE                     _currFreq:
  7157  00AE                     	ds	2
  7158  00B0                     _EUSART_ErrorHandler:
  7159  00B0                     	ds	2
  7160  00B2                     _EUSART_OverrunErrorHandler:
  7161  00B2                     	ds	2
  7162  00B4                     _EUSART_FramingErrorHandler:
  7163  00B4                     	ds	2
  7164  00B6                     _EUSART_RxDefaultInterruptHandler:
  7165  00B6                     	ds	2
  7166  00B8                     _EUSART_TxDefaultInterruptHandler:
  7167  00B8                     	ds	2
  7168  00BA                     _timer1ReloadVal:
  7169  00BA                     	ds	2
  7170  00BC                     _ticksDown@ccp3$F989:
  7171  00BC                     	ds	2
  7172  00BE                     _ticksUp@ccp3$F988:
  7173  00BE                     	ds	2
  7174  00C0                     _CCP3_CallBack:
  7175  00C0                     	ds	2
  7176  00C2                     _ticksDown@ccp2$F868:
  7177  00C2                     	ds	2
  7178  00C4                     _ticksUp@ccp2$F867:
  7179  00C4                     	ds	2
  7180  00C6                     _CCP2_CallBack:
  7181  00C6                     	ds	2
  7182  00C8                     _ticksDown:
  7183  00C8                     	ds	2
  7184  00CA                     _ticksUp:
  7185  00CA                     	ds	2
  7186  00CC                     _CCP1_CallBack:
  7187  00CC                     	ds	2
  7188  00CE                     _TMR0_InterruptHandler:
  7189  00CE                     	ds	2
  7190  00D0                     _eusartRxLastError:
  7191  00D0                     	ds	1
  7192  00D1                     _eusartRxCount:
  7193  00D1                     	ds	1
  7194  00D2                     _eusartTxBufferRemaining:
  7195  00D2                     	ds	1
  7196  00D3                     _eusartTxTail:
  7197  00D3                     	ds	1
  7198  00D4                     _lastTrig@ccp3$F991:
  7199  00D4                     	ds	1
  7200  00D5                     _sameSens@ccp3$F990:
  7201  00D5                     	ds	1
  7202  00D6                     _lastTrig@ccp2$F870:
  7203  00D6                     	ds	1
  7204  00D7                     _sameSens@ccp2$F869:
  7205  00D7                     	ds	1
  7206  00D8                     _lastTrig@ccp1$F728:
  7207  00D8                     	ds	1
  7208  00D9                     _sameSens:
  7209  00D9                     	ds	1
  7210  00DA                     _lastTrig:
  7211  00DA                     	ds	1
  7212                           
  7213                           	psect	bssBANK2
  7214  0120                     __pbssBANK2:
  7215  0120                     _eusartRxStatusBuffer:
  7216  0120                     	ds	8
  7217  0128                     _eusartRxBuffer:
  7218  0128                     	ds	8
  7219  0130                     _eusartTxBuffer:
  7220  0130                     	ds	8
  7221  0138                     _micros@FRT$F1530:
  7222  0138                     	ds	4
  7223  013C                     _millis:
  7224  013C                     	ds	4
  7225  0140                     _micros:
  7226  0140                     	ds	4
  7227  0144                     _dutyCyclePerMilli:
  7228  0144                     	ds	2
  7229  0146                     _Sens3:
  7230  0146                     	ds	6
  7231  014C                     _Sens2:
  7232  014C                     	ds	6
  7233  0152                     _Sens1:
  7234  0152                     	ds	6
  7235                           
  7236                           	psect	bssBANK3
  7237  01A0                     __pbssBANK3:
  7238  01A0                     _dbuf:
  7239  01A0                     	ds	32
  7240                           
  7241                           	psect	clrtext
  7242  0A29                     clear_ram0:	
  7243                           ;	Called with FSR0 containing the base address, and
  7244                           ;	WREG with the size to clear
  7245                           
  7246  0A29  0064               	clrwdt	;clear the watchdog before getting into this loop
  7247  0A2A                     clrloop0:
  7248  0A2A  0180               	clrf	0	;clear RAM location pointed to by FSR
  7249  0A2B  3101               	addfsr 0,1
  7250  0A2C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7251  0A2D  2A2A               	goto	clrloop0	;have we reached the end yet?
  7252  0A2E  3400               	retlw	0	;all done for this memory range, return
  7253                           
  7254                           	psect	cstackBANK1
  7255  00DB                     __pcstackBANK1:
  7256  00DB                     ??_printf:
  7257                           
  7258                           ; 1 bytes @ 0x0
  7259  00DB                     	ds	1
  7260  00DC                     printf@ap:
  7261                           
  7262                           ; 1 bytes @ 0x1
  7263  00DC                     	ds	1
  7264  00DD                     ?_JSN_Sensor_Init:
  7265  00DD                     JSN_Sensor_Init@trigPin:	
  7266                           ; 1 bytes @ 0x2
  7267                           
  7268                           
  7269                           ; 1 bytes @ 0x2
  7270  00DD                     	ds	1
  7271  00DE                     JSN_Sensor_Init@echoPin:
  7272                           
  7273                           ; 1 bytes @ 0x3
  7274  00DE                     	ds	1
  7275  00DF                     ??_JSN_Sensor_Init:
  7276                           
  7277                           ; 1 bytes @ 0x4
  7278  00DF                     	ds	2
  7279  00E1                     JSN_Sensor_Init@Sensor:
  7280                           
  7281                           ; 1 bytes @ 0x6
  7282  00E1                     	ds	1
  7283  00E2                     ??_main:
  7284                           
  7285                           ; 1 bytes @ 0x7
  7286  00E2                     	ds	4
  7287  00E6                     main@prevMilli:
  7288                           
  7289                           ; 4 bytes @ 0xB
  7290  00E6                     	ds	4
  7291  00EA                     main@nextSens:
  7292                           
  7293                           ; 1 bytes @ 0xF
  7294  00EA                     	ds	1
  7295  00EB                     main@currMilli:
  7296                           
  7297                           ; 4 bytes @ 0x10
  7298  00EB                     	ds	4
  7299                           
  7300                           	psect	cstackCOMMON
  7301  0070                     __pcstackCOMMON:
  7302  0070                     ?_PIC16_Init:
  7303  0070                     ?_JSN_GetLastTrig:	
  7304                           ; 1 bytes @ 0x0
  7305                           
  7306  0070                     ??_JSN_GetLastTrig:	
  7307                           ; 1 bytes @ 0x0
  7308                           
  7309  0070                     ?_SYSTEM_Initialize:	
  7310                           ; 1 bytes @ 0x0
  7311                           
  7312  0070                     ?_PMD_Initialize:	
  7313                           ; 1 bytes @ 0x0
  7314                           
  7315  0070                     ?_PIN_MANAGER_Initialize:	
  7316                           ; 1 bytes @ 0x0
  7317                           
  7318  0070                     ?_OSCILLATOR_Initialize:	
  7319                           ; 1 bytes @ 0x0
  7320                           
  7321  0070                     ?_WDT_Initialize:	
  7322                           ; 1 bytes @ 0x0
  7323                           
  7324  0070                     ?_CCP3_Initialize:	
  7325                           ; 1 bytes @ 0x0
  7326                           
  7327  0070                     ?_CCP1_Initialize:	
  7328                           ; 1 bytes @ 0x0
  7329                           
  7330  0070                     ?_TMR2_Initialize:	
  7331                           ; 1 bytes @ 0x0
  7332                           
  7333  0070                     ?_TMR0_Initialize:	
  7334                           ; 1 bytes @ 0x0
  7335                           
  7336  0070                     ?_CCP2_Initialize:	
  7337                           ; 1 bytes @ 0x0
  7338                           
  7339  0070                     ?_CCP4_Initialize:	
  7340                           ; 1 bytes @ 0x0
  7341                           
  7342  0070                     ?_TMR3_Initialize:	
  7343                           ; 1 bytes @ 0x0
  7344                           
  7345  0070                     ?_PWM5_Initialize:	
  7346                           ; 1 bytes @ 0x0
  7347                           
  7348  0070                     ?_TMR1_Initialize:	
  7349                           ; 1 bytes @ 0x0
  7350                           
  7351  0070                     ?_EUSART_Initialize:	
  7352                           ; 1 bytes @ 0x0
  7353                           
  7354  0070                     ?_TMR0_CallBack:	
  7355                           ; 1 bytes @ 0x0
  7356                           
  7357  0070                     ??_TMR0_CallBack:	
  7358                           ; 1 bytes @ 0x0
  7359                           
  7360  0070                     ?_FRT_IncMillis:	
  7361                           ; 1 bytes @ 0x0
  7362                           
  7363  0070                     ??_FRT_IncMillis:	
  7364                           ; 1 bytes @ 0x0
  7365                           
  7366  0070                     ?_FRT_IncMicros:	
  7367                           ; 1 bytes @ 0x0
  7368                           
  7369  0070                     ??_FRT_IncMicros:	
  7370                           ; 1 bytes @ 0x0
  7371                           
  7372  0070                     ?_EUSART_Receive_ISR:	
  7373                           ; 1 bytes @ 0x0
  7374                           
  7375  0070                     ?_EUSART_Transmit_ISR:	
  7376                           ; 1 bytes @ 0x0
  7377                           
  7378  0070                     ??_EUSART_Transmit_ISR:	
  7379                           ; 1 bytes @ 0x0
  7380                           
  7381  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  7382                           ; 1 bytes @ 0x0
  7383                           
  7384  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  7385                           ; 1 bytes @ 0x0
  7386                           
  7387  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  7388                           ; 1 bytes @ 0x0
  7389                           
  7390  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  7391                           ; 1 bytes @ 0x0
  7392                           
  7393  0070                     ?_EUSART_DefaultErrorHandler:	
  7394                           ; 1 bytes @ 0x0
  7395                           
  7396  0070                     ?_EUSART_RxDataHandler:	
  7397                           ; 1 bytes @ 0x0
  7398                           
  7399  0070                     ??_EUSART_RxDataHandler:	
  7400                           ; 1 bytes @ 0x0
  7401                           
  7402  0070                     ?_CCP4_CompareISR:	
  7403                           ; 1 bytes @ 0x0
  7404                           
  7405  0070                     ??_CCP4_CompareISR:	
  7406                           ; 1 bytes @ 0x0
  7407                           
  7408  0070                     ?_TMR3_ISR:	
  7409                           ; 1 bytes @ 0x0
  7410                           
  7411  0070                     ?_TMR3_Reload:	
  7412                           ; 1 bytes @ 0x0
  7413                           
  7414  0070                     ?_JSN_Sensor_Trig:	
  7415                           ; 1 bytes @ 0x0
  7416                           
  7417  0070                     ?_ReadPin:	
  7418                           ; 1 bytes @ 0x0
  7419                           
  7420  0070                     ??_ReadPin:	
  7421                           ; 1 bytes @ 0x0
  7422                           
  7423  0070                     ?_TMR0_ReadTimer:	
  7424                           ; 1 bytes @ 0x0
  7425                           
  7426  0070                     ?_TMR0_ISR:	
  7427                           ; 1 bytes @ 0x0
  7428                           
  7429  0070                     ??_TMR0_ISR:	
  7430                           ; 1 bytes @ 0x0
  7431                           
  7432  0070                     ?_TMR0_GetCallBackNum:	
  7433                           ; 1 bytes @ 0x0
  7434                           
  7435  0070                     ?_CCP1_CaptureISR:	
  7436                           ; 1 bytes @ 0x0
  7437                           
  7438  0070                     ?_CCP2_CaptureISR:	
  7439                           ; 1 bytes @ 0x0
  7440                           
  7441  0070                     ?_CCP3_CaptureISR:	
  7442                           ; 1 bytes @ 0x0
  7443                           
  7444  0070                     ?_TMR1_WriteTimer:	
  7445                           ; 1 bytes @ 0x0
  7446                           
  7447  0070                     ?_TMR1_ISR:	
  7448                           ; 1 bytes @ 0x0
  7449                           
  7450  0070                     ?_EUSART_Write:	
  7451                           ; 1 bytes @ 0x0
  7452                           
  7453  0070                     ?_putch:	
  7454                           ; 1 bytes @ 0x0
  7455                           
  7456  0070                     ?_INTERRUPT_InterruptManager:	
  7457                           ; 1 bytes @ 0x0
  7458                           
  7459  0070                     ?_TMR3_WriteTimer:	
  7460                           ; 1 bytes @ 0x0
  7461                           
  7462  0070                     ?_main:	
  7463                           ; 1 bytes @ 0x0
  7464                           
  7465  0070                     TMR1_WriteTimer@timerVal:	
  7466                           ; 2 bytes @ 0x0
  7467                           
  7468  0070                     TMR3_WriteTimer@timerVal:	
  7469                           ; 2 bytes @ 0x0
  7470                           
  7471                           
  7472                           ; 2 bytes @ 0x0
  7473  0070                     	ds	1
  7474  0071                     ??_EUSART_Receive_ISR:
  7475  0071                     ??_EUSART_DefaultErrorHandler:	
  7476                           ; 1 bytes @ 0x1
  7477                           
  7478                           
  7479                           ; 1 bytes @ 0x1
  7480  0071                     	ds	1
  7481  0072                     ??_TMR3_ISR:
  7482  0072                     ??_TMR3_Reload:	
  7483                           ; 1 bytes @ 0x2
  7484                           
  7485  0072                     ??_TMR1_WriteTimer:	
  7486                           ; 1 bytes @ 0x2
  7487                           
  7488  0072                     ??_TMR1_ISR:	
  7489                           ; 1 bytes @ 0x2
  7490                           
  7491  0072                     ??_TMR3_WriteTimer:	
  7492                           ; 1 bytes @ 0x2
  7493                           
  7494  0072                     ReadPin@pin:	
  7495                           ; 1 bytes @ 0x2
  7496                           
  7497                           
  7498                           ; 1 bytes @ 0x2
  7499  0072                     	ds	1
  7500  0073                     ?_CCP1_DefaultCallBack:
  7501  0073                     ?_CCP2_DefaultCallBack:	
  7502                           ; 1 bytes @ 0x3
  7503                           
  7504  0073                     ?_CCP3_DefaultCallBack:	
  7505                           ; 1 bytes @ 0x3
  7506                           
  7507  0073                     CCP1_DefaultCallBack@capturedValue:	
  7508                           ; 1 bytes @ 0x3
  7509                           
  7510  0073                     CCP2_DefaultCallBack@capturedValue:	
  7511                           ; 2 bytes @ 0x3
  7512                           
  7513  0073                     CCP3_DefaultCallBack@capturedValue:	
  7514                           ; 2 bytes @ 0x3
  7515                           
  7516                           
  7517                           ; 2 bytes @ 0x3
  7518  0073                     	ds	2
  7519  0075                     ??_CCP1_DefaultCallBack:
  7520  0075                     ??_CCP2_DefaultCallBack:	
  7521                           ; 1 bytes @ 0x5
  7522                           
  7523  0075                     ??_CCP3_DefaultCallBack:	
  7524                           ; 1 bytes @ 0x5
  7525                           
  7526                           
  7527                           ; 1 bytes @ 0x5
  7528  0075                     	ds	2
  7529  0077                     ??_CCP1_CaptureISR:
  7530  0077                     ??_CCP2_CaptureISR:	
  7531                           ; 1 bytes @ 0x7
  7532                           
  7533  0077                     ??_CCP3_CaptureISR:	
  7534                           ; 1 bytes @ 0x7
  7535                           
  7536                           
  7537                           ; 1 bytes @ 0x7
  7538  0077                     	ds	1
  7539  0078                     CCP1_CaptureISR@module:
  7540  0078                     CCP2_CaptureISR@module:	
  7541                           ; 2 bytes @ 0x8
  7542                           
  7543  0078                     CCP3_CaptureISR@module:	
  7544                           ; 2 bytes @ 0x8
  7545                           
  7546                           
  7547                           ; 2 bytes @ 0x8
  7548  0078                     	ds	2
  7549  007A                     ??_INTERRUPT_InterruptManager:
  7550                           
  7551                           	psect	cstackBANK0
  7552  0020                     __pcstackBANK0:	
  7553                           ; 1 bytes @ 0xA
  7554                           
  7555  0020                     ?_SetPin:
  7556  0020                     ?_WritePin:	
  7557                           ; 1 bytes @ 0x0
  7558                           
  7559  0020                     ??_PMD_Initialize:	
  7560                           ; 1 bytes @ 0x0
  7561                           
  7562  0020                     ??_PIN_MANAGER_Initialize:	
  7563                           ; 1 bytes @ 0x0
  7564                           
  7565  0020                     ??_OSCILLATOR_Initialize:	
  7566                           ; 1 bytes @ 0x0
  7567                           
  7568  0020                     ??_WDT_Initialize:	
  7569                           ; 1 bytes @ 0x0
  7570                           
  7571  0020                     ??_TMR2_Initialize:	
  7572                           ; 1 bytes @ 0x0
  7573                           
  7574  0020                     ??_CCP4_Initialize:	
  7575                           ; 1 bytes @ 0x0
  7576                           
  7577  0020                     ??_TMR3_Initialize:	
  7578                           ; 1 bytes @ 0x0
  7579                           
  7580  0020                     ??_PWM5_Initialize:	
  7581                           ; 1 bytes @ 0x0
  7582                           
  7583  0020                     ??_TMR1_Initialize:	
  7584                           ; 1 bytes @ 0x0
  7585                           
  7586  0020                     ?_TMR0_SetInterruptHandler:	
  7587                           ; 1 bytes @ 0x0
  7588                           
  7589  0020                     ?_CCP1_SetCallBack:	
  7590                           ; 1 bytes @ 0x0
  7591                           
  7592  0020                     ?_CCP2_SetCallBack:	
  7593                           ; 1 bytes @ 0x0
  7594                           
  7595  0020                     ?_CCP3_SetCallBack:	
  7596                           ; 1 bytes @ 0x0
  7597                           
  7598  0020                     ?_EUSART_SetRxInterruptHandler:	
  7599                           ; 1 bytes @ 0x0
  7600                           
  7601  0020                     ?_EUSART_SetTxInterruptHandler:	
  7602                           ; 1 bytes @ 0x0
  7603                           
  7604  0020                     ?_EUSART_SetFramingErrorHandler:	
  7605                           ; 1 bytes @ 0x0
  7606                           
  7607  0020                     ?_EUSART_SetOverrunErrorHandler:	
  7608                           ; 1 bytes @ 0x0
  7609                           
  7610  0020                     ?_EUSART_SetErrorHandler:	
  7611                           ; 1 bytes @ 0x0
  7612                           
  7613  0020                     ??_TMR0_ReadTimer:	
  7614                           ; 1 bytes @ 0x0
  7615                           
  7616  0020                     ??_TMR0_GetCallBackNum:	
  7617                           ; 1 bytes @ 0x0
  7618                           
  7619  0020                     ??_EUSART_Write:	
  7620                           ; 1 bytes @ 0x0
  7621                           
  7622  0020                     ?_strlen:	
  7623                           ; 1 bytes @ 0x0
  7624                           
  7625  0020                     ?___wmul:	
  7626                           ; 2 bytes @ 0x0
  7627                           
  7628  0020                     ?_FRT_GetMillis:	
  7629                           ; 2 bytes @ 0x0
  7630                           
  7631  0020                     ?___lmul:	
  7632                           ; 4 bytes @ 0x0
  7633                           
  7634  0020                     ?___lodiv:	
  7635                           ; 4 bytes @ 0x0
  7636                           
  7637  0020                     ?___lomod:	
  7638                           ; 8 bytes @ 0x0
  7639                           
  7640  0020                     SetPin@io:	
  7641                           ; 8 bytes @ 0x0
  7642                           
  7643  0020                     WritePin@val:	
  7644                           ; 1 bytes @ 0x0
  7645                           
  7646  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  7647                           ; 1 bytes @ 0x0
  7648                           
  7649  0020                     CCP1_SetCallBack@customCallBack:	
  7650                           ; 2 bytes @ 0x0
  7651                           
  7652  0020                     CCP2_SetCallBack@customCallBack:	
  7653                           ; 2 bytes @ 0x0
  7654                           
  7655  0020                     CCP3_SetCallBack@customCallBack:	
  7656                           ; 2 bytes @ 0x0
  7657                           
  7658  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  7659                           ; 2 bytes @ 0x0
  7660                           
  7661  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  7662                           ; 2 bytes @ 0x0
  7663                           
  7664  0020                     EUSART_SetErrorHandler@interruptHandler:	
  7665                           ; 2 bytes @ 0x0
  7666                           
  7667  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  7668                           ; 2 bytes @ 0x0
  7669                           
  7670  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  7671                           ; 2 bytes @ 0x0
  7672                           
  7673  0020                     ___wmul@multiplier:	
  7674                           ; 2 bytes @ 0x0
  7675                           
  7676  0020                     ___lmul@multiplier:	
  7677                           ; 2 bytes @ 0x0
  7678                           
  7679  0020                     ___lodiv@divisor:	
  7680                           ; 4 bytes @ 0x0
  7681                           
  7682  0020                     ___lomod@divisor:	
  7683                           ; 8 bytes @ 0x0
  7684                           
  7685                           
  7686                           ; 8 bytes @ 0x0
  7687  0020                     	ds	1
  7688  0021                     ??_SetPin:
  7689  0021                     ??_WritePin:	
  7690                           ; 1 bytes @ 0x1
  7691                           
  7692  0021                     TMR0_ReadTimer@readVal:	
  7693                           ; 1 bytes @ 0x1
  7694                           
  7695  0021                     EUSART_Write@txData:	
  7696                           ; 1 bytes @ 0x1
  7697                           
  7698                           
  7699                           ; 1 bytes @ 0x1
  7700  0021                     	ds	1
  7701  0022                     ??_CCP3_Initialize:
  7702  0022                     ??_CCP1_Initialize:	
  7703                           ; 1 bytes @ 0x2
  7704                           
  7705  0022                     ??_TMR0_Initialize:	
  7706                           ; 1 bytes @ 0x2
  7707                           
  7708  0022                     ??_CCP2_Initialize:	
  7709                           ; 1 bytes @ 0x2
  7710                           
  7711  0022                     ??_EUSART_Initialize:	
  7712                           ; 1 bytes @ 0x2
  7713                           
  7714  0022                     ??_TMR0_SetInterruptHandler:	
  7715                           ; 1 bytes @ 0x2
  7716                           
  7717  0022                     ??_CCP1_SetCallBack:	
  7718                           ; 1 bytes @ 0x2
  7719                           
  7720  0022                     ??_CCP2_SetCallBack:	
  7721                           ; 1 bytes @ 0x2
  7722                           
  7723  0022                     ??_CCP3_SetCallBack:	
  7724                           ; 1 bytes @ 0x2
  7725                           
  7726  0022                     ??_EUSART_SetRxInterruptHandler:	
  7727                           ; 1 bytes @ 0x2
  7728                           
  7729  0022                     ??_EUSART_SetTxInterruptHandler:	
  7730                           ; 1 bytes @ 0x2
  7731                           
  7732  0022                     ??_EUSART_SetFramingErrorHandler:	
  7733                           ; 1 bytes @ 0x2
  7734                           
  7735  0022                     ??_EUSART_SetOverrunErrorHandler:	
  7736                           ; 1 bytes @ 0x2
  7737                           
  7738  0022                     ??_EUSART_SetErrorHandler:	
  7739                           ; 1 bytes @ 0x2
  7740                           
  7741  0022                     ??_strlen:	
  7742                           ; 1 bytes @ 0x2
  7743                           
  7744  0022                     ??_putch:	
  7745                           ; 1 bytes @ 0x2
  7746                           
  7747  0022                     putch@txData:	
  7748                           ; 1 bytes @ 0x2
  7749                           
  7750  0022                     ___wmul@multiplicand:	
  7751                           ; 1 bytes @ 0x2
  7752                           
  7753                           
  7754                           ; 2 bytes @ 0x2
  7755  0022                     	ds	1
  7756  0023                     ??_PIC16_Init:
  7757  0023                     ??_SYSTEM_Initialize:	
  7758                           ; 1 bytes @ 0x3
  7759                           
  7760  0023                     ?_fputc:	
  7761                           ; 1 bytes @ 0x3
  7762                           
  7763  0023                     SetPin@pin:	
  7764                           ; 2 bytes @ 0x3
  7765                           
  7766  0023                     WritePin@pin:	
  7767                           ; 1 bytes @ 0x3
  7768                           
  7769  0023                     strlen@a:	
  7770                           ; 1 bytes @ 0x3
  7771                           
  7772  0023                     fputc@c:	
  7773                           ; 1 bytes @ 0x3
  7774                           
  7775                           
  7776                           ; 2 bytes @ 0x3
  7777  0023                     	ds	1
  7778  0024                     ??_FRT_GetMillis:
  7779  0024                     ??___wmul:	
  7780                           ; 1 bytes @ 0x4
  7781                           
  7782  0024                     strlen@s:	
  7783                           ; 1 bytes @ 0x4
  7784                           
  7785  0024                     ___wmul@product:	
  7786                           ; 1 bytes @ 0x4
  7787                           
  7788  0024                     ___lmul@multiplicand:	
  7789                           ; 2 bytes @ 0x4
  7790                           
  7791                           
  7792                           ; 4 bytes @ 0x4
  7793  0024                     	ds	1
  7794  0025                     fputc@fp:
  7795                           
  7796                           ; 1 bytes @ 0x5
  7797  0025                     	ds	1
  7798  0026                     ??_fputc:
  7799  0026                     ?_FRT_GetMicros:	
  7800                           ; 1 bytes @ 0x6
  7801                           
  7802                           
  7803                           ; 4 bytes @ 0x6
  7804  0026                     	ds	2
  7805  0028                     ??___lmul:
  7806  0028                     ___lmul@product:	
  7807                           ; 1 bytes @ 0x8
  7808                           
  7809  0028                     ___lodiv@dividend:	
  7810                           ; 4 bytes @ 0x8
  7811                           
  7812  0028                     ___lomod@dividend:	
  7813                           ; 8 bytes @ 0x8
  7814                           
  7815                           
  7816                           ; 8 bytes @ 0x8
  7817  0028                     	ds	2
  7818  002A                     ??_FRT_GetMicros:
  7819                           
  7820                           ; 1 bytes @ 0xA
  7821  002A                     	ds	1
  7822  002B                     ?_fputs:
  7823  002B                     fputs@fp:	
  7824                           ; 2 bytes @ 0xB
  7825                           
  7826                           
  7827                           ; 1 bytes @ 0xB
  7828  002B                     	ds	1
  7829  002C                     ??_fputs:
  7830  002C                     ?___lldiv:	
  7831                           ; 1 bytes @ 0xC
  7832                           
  7833  002C                     ___lldiv@divisor:	
  7834                           ; 4 bytes @ 0xC
  7835                           
  7836                           
  7837                           ; 4 bytes @ 0xC
  7838  002C                     	ds	3
  7839  002F                     fputs@c:
  7840                           
  7841                           ; 1 bytes @ 0xF
  7842  002F                     	ds	1
  7843  0030                     ??___lodiv:
  7844  0030                     ??___lomod:	
  7845                           ; 1 bytes @ 0x10
  7846                           
  7847  0030                     fputs@i:	
  7848                           ; 1 bytes @ 0x10
  7849                           
  7850  0030                     ___lldiv@dividend:	
  7851                           ; 2 bytes @ 0x10
  7852                           
  7853                           
  7854                           ; 4 bytes @ 0x10
  7855  0030                     	ds	1
  7856  0031                     ___lomod@counter:
  7857  0031                     ___lodiv@quotient:	
  7858                           ; 1 bytes @ 0x11
  7859                           
  7860                           
  7861                           ; 8 bytes @ 0x11
  7862  0031                     	ds	1
  7863  0032                     fputs@s:
  7864                           
  7865                           ; 1 bytes @ 0x12
  7866  0032                     	ds	1
  7867  0033                     ?_pad:
  7868  0033                     pad@buf:	
  7869                           ; 2 bytes @ 0x13
  7870                           
  7871                           
  7872                           ; 1 bytes @ 0x13
  7873  0033                     	ds	1
  7874  0034                     ??___lldiv:
  7875  0034                     pad@p:	
  7876                           ; 1 bytes @ 0x14
  7877                           
  7878                           
  7879                           ; 2 bytes @ 0x14
  7880  0034                     	ds	1
  7881  0035                     ___lldiv@quotient:
  7882                           
  7883                           ; 4 bytes @ 0x15
  7884  0035                     	ds	1
  7885  0036                     ??_pad:
  7886                           
  7887                           ; 1 bytes @ 0x16
  7888  0036                     	ds	1
  7889  0037                     pad@i:
  7890                           
  7891                           ; 2 bytes @ 0x17
  7892  0037                     	ds	1
  7893  0038                     ??_JSN_Sensor_Trig:
  7894                           
  7895                           ; 1 bytes @ 0x18
  7896  0038                     	ds	1
  7897  0039                     ___lldiv@counter:
  7898  0039                     ___lodiv@counter:	
  7899                           ; 1 bytes @ 0x19
  7900                           
  7901  0039                     pad@w:	
  7902                           ; 1 bytes @ 0x19
  7903                           
  7904                           
  7905                           ; 2 bytes @ 0x19
  7906  0039                     	ds	1
  7907  003A                     ?_JSN_Sensor_GetDistance:
  7908                           
  7909                           ; 2 bytes @ 0x1A
  7910  003A                     	ds	1
  7911  003B                     pad@fp:
  7912                           
  7913                           ; 1 bytes @ 0x1B
  7914  003B                     	ds	1
  7915  003C                     ??_JSN_Sensor_GetDistance:
  7916  003C                     ?_utoa:	
  7917                           ; 1 bytes @ 0x1C
  7918                           
  7919  003C                     JSN_Sensor_Trig@Sensor:	
  7920                           ; 2 bytes @ 0x1C
  7921                           
  7922  003C                     utoa@d:	
  7923                           ; 1 bytes @ 0x1C
  7924                           
  7925                           
  7926                           ; 8 bytes @ 0x1C
  7927  003C                     	ds	2
  7928  003E                     JSN_Sensor_GetDistance@Sensor:
  7929                           
  7930                           ; 1 bytes @ 0x1E
  7931  003E                     	ds	6
  7932  0044                     ??_utoa:
  7933                           
  7934                           ; 1 bytes @ 0x24
  7935  0044                     	ds	1
  7936  0045                     utoa@p:
  7937                           
  7938                           ; 2 bytes @ 0x25
  7939  0045                     	ds	2
  7940  0047                     utoa@fp:
  7941                           
  7942                           ; 1 bytes @ 0x27
  7943  0047                     	ds	1
  7944  0048                     utoa@w:
  7945                           
  7946                           ; 2 bytes @ 0x28
  7947  0048                     	ds	2
  7948  004A                     utoa@n:
  7949                           
  7950                           ; 8 bytes @ 0x2A
  7951  004A                     	ds	8
  7952  0052                     utoa@i:
  7953                           
  7954                           ; 2 bytes @ 0x32
  7955  0052                     	ds	2
  7956  0054                     ?_vfpfcnvrt:
  7957  0054                     vfpfcnvrt@fmt:	
  7958                           ; 2 bytes @ 0x34
  7959                           
  7960                           
  7961                           ; 1 bytes @ 0x34
  7962  0054                     	ds	1
  7963  0055                     vfpfcnvrt@ap:
  7964                           
  7965                           ; 1 bytes @ 0x35
  7966  0055                     	ds	1
  7967  0056                     ??_vfpfcnvrt:
  7968                           
  7969                           ; 1 bytes @ 0x36
  7970  0056                     	ds	5
  7971  005B                     vfpfcnvrt@llu:
  7972                           
  7973                           ; 8 bytes @ 0x3B
  7974  005B                     	ds	8
  7975  0063                     vfpfcnvrt@fp:
  7976                           
  7977                           ; 1 bytes @ 0x43
  7978  0063                     	ds	1
  7979  0064                     ?_vfprintf:
  7980  0064                     vfprintf@fmt:	
  7981                           ; 2 bytes @ 0x44
  7982                           
  7983                           
  7984                           ; 2 bytes @ 0x44
  7985  0064                     	ds	2
  7986  0066                     vfprintf@ap:
  7987                           
  7988                           ; 1 bytes @ 0x46
  7989  0066                     	ds	1
  7990  0067                     ??_vfprintf:
  7991                           
  7992                           ; 1 bytes @ 0x47
  7993  0067                     	ds	2
  7994  0069                     vfprintf@fp:
  7995                           
  7996                           ; 1 bytes @ 0x49
  7997  0069                     	ds	1
  7998  006A                     vfprintf@cfmt:
  7999                           
  8000                           ; 2 bytes @ 0x4A
  8001  006A                     	ds	2
  8002  006C                     ?_printf:
  8003  006C                     printf@fmt:	
  8004                           ; 2 bytes @ 0x4C
  8005                           
  8006                           
  8007                           ; 2 bytes @ 0x4C
  8008  006C                     	ds	4
  8009                           
  8010                           	psect	maintext
  8011  00B2                     __pmaintext:	
  8012 ;;
  8013 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  8014 ;;
  8015 ;; *************** function _main *****************
  8016 ;; Defined at:
  8017 ;;		line 140 in file "JSN_Sensor.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;		None
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;  currMilli       4   16[BANK1 ] unsigned long 
  8022 ;;  prevMilli       4   11[BANK1 ] unsigned long 
  8023 ;;  nextSens        1   15[BANK1 ] unsigned char 
  8024 ;; Return value:  Size  Location     Type
  8025 ;;                  2   64[None  ] int 
  8026 ;; Registers used:
  8027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8028 ;; Tracked objects:
  8029 ;;		On entry : B1F/0
  8030 ;;		On exit  : 0/0
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8036 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  8037 ;;Total ram usage:       13 bytes
  8038 ;; Hardware stack levels required when called: 14
  8039 ;; This function calls:
  8040 ;;		_FRT_GetMillis
  8041 ;;		_JSN_Sensor_GetDistance
  8042 ;;		_JSN_Sensor_Init
  8043 ;;		_JSN_Sensor_Trig
  8044 ;;		_PIC16_Init
  8045 ;;		_SetPin
  8046 ;;		_WritePin
  8047 ;;		_printf
  8048 ;; This function is called by:
  8049 ;;		Startup code after reset
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053  00B2                     _main:	
  8054                           ;psect for function _main
  8055                           
  8056  00B2                     l4172:	
  8057                           ;incstack = 0
  8058                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8059                           
  8060                           
  8061                           ;JSN_Sensor.c: 142:     PIC16_Init();
  8062  00B2  318B  235C  3180   	fcall	_PIC16_Init
  8063  00B5                     l4174:
  8064                           
  8065                           ;JSN_Sensor.c: 148:     if (JSN_Sensor_Init(&Sens1, C6, C5) == 0xFF)
  8066  00B5  3006               	movlw	6
  8067  00B6  0021               	movlb	1	; select bank1
  8068  00B7  00E2               	movwf	??_main^(0+128)
  8069  00B8  0862               	movf	??_main^(0+128),w
  8070  00B9  00DD               	movwf	JSN_Sensor_Init@trigPin^(0+128)
  8071  00BA  3003               	movlw	3
  8072  00BB  00E3               	movwf	(??_main+1)^(0+128)
  8073  00BC  0863               	movf	(??_main+1)^(0+128),w
  8074  00BD  00DE               	movwf	JSN_Sensor_Init@echoPin^(0+128)
  8075  00BE  3052               	movlw	(low (_Sens1| (0+256)))& (0+255)
  8076  00BF  3185  2503  3180   	fcall	_JSN_Sensor_Init
  8077  00C2  3AFF               	xorlw	255
  8078  00C3  1D03               	skipz
  8079  00C4  28C6               	goto	u1531
  8080  00C5  28C7               	goto	u1530
  8081  00C6                     u1531:
  8082  00C6  28C8               	goto	l4176
  8083  00C7                     u1530:
  8084  00C7                     l66:	
  8085                           ;JSN_Sensor.c: 149:         while (1);
  8086                           
  8087  00C7                     l67:
  8088  00C7  28C7               	goto	l66
  8089  00C8                     l4176:
  8090                           
  8091                           ;JSN_Sensor.c: 150:     if (JSN_Sensor_Init(&Sens2, A1, C3) == 0xFF)
  8092  00C8  300A               	movlw	10
  8093  00C9  0021               	movlb	1	; select bank1
  8094  00CA  00E2               	movwf	??_main^(0+128)
  8095  00CB  0862               	movf	??_main^(0+128),w
  8096  00CC  00DD               	movwf	JSN_Sensor_Init@trigPin^(0+128)
  8097  00CD  3005               	movlw	5
  8098  00CE  00E3               	movwf	(??_main+1)^(0+128)
  8099  00CF  0863               	movf	(??_main+1)^(0+128),w
  8100  00D0  00DE               	movwf	JSN_Sensor_Init@echoPin^(0+128)
  8101  00D1  304C               	movlw	(low (_Sens2| (0+256)))& (0+255)
  8102  00D2  3185  2503  3180   	fcall	_JSN_Sensor_Init
  8103  00D5  3AFF               	xorlw	255
  8104  00D6  1D03               	skipz
  8105  00D7  28D9               	goto	u1541
  8106  00D8  28DA               	goto	u1540
  8107  00D9                     u1541:
  8108  00D9  28DB               	goto	l4178
  8109  00DA                     u1540:
  8110  00DA                     l70:	
  8111                           ;JSN_Sensor.c: 151:         while (1);
  8112                           
  8113  00DA                     l71:
  8114  00DA  28DA               	goto	l70
  8115  00DB                     l4178:
  8116                           
  8117                           ;JSN_Sensor.c: 152:     if (JSN_Sensor_Init(&Sens3, B7, A2) == 0xFF)
  8118  00DB  3008               	movlw	8
  8119  00DC  0021               	movlb	1	; select bank1
  8120  00DD  00E2               	movwf	??_main^(0+128)
  8121  00DE  0862               	movf	??_main^(0+128),w
  8122  00DF  00DD               	movwf	JSN_Sensor_Init@trigPin^(0+128)
  8123  00E0  300B               	movlw	11
  8124  00E1  00E3               	movwf	(??_main+1)^(0+128)
  8125  00E2  0863               	movf	(??_main+1)^(0+128),w
  8126  00E3  00DE               	movwf	JSN_Sensor_Init@echoPin^(0+128)
  8127  00E4  3046               	movlw	(low (_Sens3| (0+256)))& (0+255)
  8128  00E5  3185  2503  3180   	fcall	_JSN_Sensor_Init
  8129  00E8  3AFF               	xorlw	255
  8130  00E9  1D03               	skipz
  8131  00EA  28EC               	goto	u1551
  8132  00EB  28ED               	goto	u1550
  8133  00EC                     u1551:
  8134  00EC  28EE               	goto	l4180
  8135  00ED                     u1550:
  8136  00ED                     l74:	
  8137                           ;JSN_Sensor.c: 153:         while (1);
  8138                           
  8139  00ED                     l75:
  8140  00ED  28ED               	goto	l74
  8141  00EE                     l4180:
  8142                           
  8143                           ;JSN_Sensor.c: 157:     unsigned long prevMilli = 0;
  8144  00EE  3000               	movlw	0
  8145  00EF  0021               	movlb	1	; select bank1
  8146  00F0  00E9               	movwf	(main@prevMilli+3)^(0+128)
  8147  00F1  3000               	movlw	0
  8148  00F2  00E8               	movwf	(main@prevMilli+2)^(0+128)
  8149  00F3  3000               	movlw	0
  8150  00F4  00E7               	movwf	(main@prevMilli+1)^(0+128)
  8151  00F5  3000               	movlw	0
  8152  00F6  00E6               	movwf	main@prevMilli^(0+128)
  8153  00F7                     l4182:
  8154                           
  8155                           ;JSN_Sensor.c: 158:     uint8_t nextSens = 1;
  8156  00F7  01EA               	clrf	main@nextSens^(0+128)
  8157  00F8  0AEA               	incf	main@nextSens^(0+128),f
  8158  00F9                     l4184:
  8159                           
  8160                           ;JSN_Sensor.c: 161:     SetPin(C0, 0);
  8161  00F9  0020               	movlb	0	; select bank0
  8162  00FA  01A0               	clrf	SetPin@io
  8163  00FB  300C               	movlw	12
  8164  00FC  3184  2448  3180   	fcall	_SetPin
  8165  00FF                     l4186:
  8166                           
  8167                           ;JSN_Sensor.c: 162:     WritePin(C0, 0);
  8168  00FF  0020               	movlb	0	; select bank0
  8169  0100  01A0               	clrf	WritePin@val
  8170  0101  300C               	movlw	12
  8171  0102  3183  238D  3180   	fcall	_WritePin
  8172  0105                     l4188:
  8173                           
  8174                           ;JSN_Sensor.c: 164:     JSN_Sensor_Trig(&Sens3);
  8175  0105  3046               	movlw	(low (_Sens3| (0+256)))& (0+255)
  8176  0106  3187  2788  3180   	fcall	_JSN_Sensor_Trig
  8177  0109                     l4190:
  8178                           
  8179                           ;JSN_Sensor.c: 165:     currMilli = FRT_GetMillis();
  8180  0109  318B  2329  3180   	fcall	_FRT_GetMillis
  8181  010C  0020               	movlb	0	; select bank0
  8182  010D  0823               	movf	?_FRT_GetMillis+3,w
  8183  010E  0021               	movlb	1	; select bank1
  8184  010F  00EE               	movwf	(main@currMilli+3)^(0+128)
  8185  0110  0020               	movlb	0	; select bank0
  8186  0111  0822               	movf	?_FRT_GetMillis+2,w
  8187  0112  0021               	movlb	1	; select bank1
  8188  0113  00ED               	movwf	(main@currMilli+2)^(0+128)
  8189  0114  0020               	movlb	0	; select bank0
  8190  0115  0821               	movf	?_FRT_GetMillis+1,w
  8191  0116  0021               	movlb	1	; select bank1
  8192  0117  00EC               	movwf	(main@currMilli+1)^(0+128)
  8193  0118  0020               	movlb	0	; select bank0
  8194  0119  0820               	movf	?_FRT_GetMillis,w
  8195  011A  0021               	movlb	1	; select bank1
  8196  011B  00EB               	movwf	main@currMilli^(0+128)
  8197  011C                     l4192:
  8198                           
  8199                           ;JSN_Sensor.c: 166:     prevMilli = currMilli;
  8200  011C  0021               	movlb	1	; select bank1
  8201  011D  086E               	movf	(main@currMilli+3)^(0+128),w
  8202  011E  00E9               	movwf	(main@prevMilli+3)^(0+128)
  8203  011F  086D               	movf	(main@currMilli+2)^(0+128),w
  8204  0120  00E8               	movwf	(main@prevMilli+2)^(0+128)
  8205  0121  086C               	movf	(main@currMilli+1)^(0+128),w
  8206  0122  00E7               	movwf	(main@prevMilli+1)^(0+128)
  8207  0123  086B               	movf	main@currMilli^(0+128),w
  8208  0124  00E6               	movwf	main@prevMilli^(0+128)
  8209  0125                     l4194:
  8210                           
  8211                           ;JSN_Sensor.c: 170:         currMilli = FRT_GetMillis();
  8212  0125  318B  2329  3180   	fcall	_FRT_GetMillis
  8213  0128  0020               	movlb	0	; select bank0
  8214  0129  0823               	movf	?_FRT_GetMillis+3,w
  8215  012A  0021               	movlb	1	; select bank1
  8216  012B  00EE               	movwf	(main@currMilli+3)^(0+128)
  8217  012C  0020               	movlb	0	; select bank0
  8218  012D  0822               	movf	?_FRT_GetMillis+2,w
  8219  012E  0021               	movlb	1	; select bank1
  8220  012F  00ED               	movwf	(main@currMilli+2)^(0+128)
  8221  0130  0020               	movlb	0	; select bank0
  8222  0131  0821               	movf	?_FRT_GetMillis+1,w
  8223  0132  0021               	movlb	1	; select bank1
  8224  0133  00EC               	movwf	(main@currMilli+1)^(0+128)
  8225  0134  0020               	movlb	0	; select bank0
  8226  0135  0820               	movf	?_FRT_GetMillis,w
  8227  0136  0021               	movlb	1	; select bank1
  8228  0137  00EB               	movwf	main@currMilli^(0+128)
  8229  0138                     l4196:
  8230                           
  8231                           ;JSN_Sensor.c: 173:         if ((currMilli - prevMilli) >= 50) {
  8232  0138  0866               	movf	main@prevMilli^(0+128),w
  8233  0139  026B               	subwf	main@currMilli^(0+128),w
  8234  013A  00E2               	movwf	??_main^(0+128)
  8235  013B  0867               	movf	(main@prevMilli+1)^(0+128),w
  8236  013C  3B6C               	subwfb	(main@currMilli+1)^(0+128),w
  8237  013D  00E3               	movwf	(??_main^(0+128)+1)
  8238  013E  0868               	movf	(main@prevMilli+2)^(0+128),w
  8239  013F  3B6D               	subwfb	(main@currMilli+2)^(0+128),w
  8240  0140  00E4               	movwf	(??_main^(0+128)+2)
  8241  0141  0869               	movf	(main@prevMilli+3)^(0+128),w
  8242  0142  3B6E               	subwfb	(main@currMilli+3)^(0+128),w
  8243  0143  00E5               	movwf	(??_main^(0+128)+3)
  8244  0144  0865               	movf	(??_main^(0+128)+3),w
  8245  0145  1D03               	btfss	3,2
  8246  0146  2953               	goto	u1560
  8247  0147  0864               	movf	(??_main^(0+128)+2),w
  8248  0148  1D03               	btfss	3,2
  8249  0149  2953               	goto	u1560
  8250  014A  0863               	movf	(??_main^(0+128)+1),w
  8251  014B  1D03               	btfss	3,2
  8252  014C  2953               	goto	u1560
  8253  014D  3032               	movlw	50
  8254  014E  0262               	subwf	??_main^(0+128),w
  8255  014F  1C03               	btfss	3,0
  8256  0150  2952               	goto	u1561
  8257  0151  2953               	goto	u1560
  8258  0152                     u1561:
  8259  0152  2925               	goto	l4194
  8260  0153                     u1560:
  8261  0153  29A3               	goto	l4212
  8262  0154                     l4200:
  8263                           
  8264                           ;JSN_Sensor.c: 181:                     JSN_Sensor_Trig(&Sens1);
  8265  0154  3052               	movlw	(low (_Sens1| (0+256)))& (0+255)
  8266  0155  3187  2788  3180   	fcall	_JSN_Sensor_Trig
  8267                           
  8268                           ;JSN_Sensor.c: 182:                     printf("%u", JSN_Sensor_GetDistance(&Sens3));
  8269  0158  306C               	movlw	low (STR_3| (0+32768))
  8270  0159  0020               	movlb	0	; select bank0
  8271  015A  00EC               	movwf	printf@fmt
  8272  015B  3090               	movlw	high (STR_3| (0+32768))
  8273  015C  00ED               	movwf	printf@fmt+1
  8274  015D  3046               	movlw	(low (_Sens3| (0+256)))& (0+255)
  8275  015E  318E  268F  3180   	fcall	_JSN_Sensor_GetDistance
  8276  0161  0020               	movlb	0	; select bank0
  8277  0162  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  8278  0163  00EF               	movwf	?_printf+3
  8279  0164  083A               	movf	?_JSN_Sensor_GetDistance,w
  8280  0165  00EE               	movwf	?_printf+2
  8281  0166  318B  236E  3180   	fcall	_printf
  8282  0169                     l4202:
  8283                           
  8284                           ;JSN_Sensor.c: 183:                     nextSens = 2;
  8285  0169  3002               	movlw	2
  8286  016A  0021               	movlb	1	; select bank1
  8287  016B  00E2               	movwf	??_main^(0+128)
  8288  016C  0862               	movf	??_main^(0+128),w
  8289  016D  00EA               	movwf	main@nextSens^(0+128)
  8290                           
  8291                           ;JSN_Sensor.c: 184:                     break;
  8292  016E  29B7               	goto	l4214
  8293  016F                     l4204:
  8294                           
  8295                           ;JSN_Sensor.c: 187:                     JSN_Sensor_Trig(&Sens2);
  8296  016F  304C               	movlw	(low (_Sens2| (0+256)))& (0+255)
  8297  0170  3187  2788  3180   	fcall	_JSN_Sensor_Trig
  8298                           
  8299                           ;JSN_Sensor.c: 188:                     printf("%u", JSN_Sensor_GetDistance(&Sens1));
  8300  0173  306C               	movlw	low (STR_3| (0+32768))
  8301  0174  0020               	movlb	0	; select bank0
  8302  0175  00EC               	movwf	printf@fmt
  8303  0176  3090               	movlw	high (STR_3| (0+32768))
  8304  0177  00ED               	movwf	printf@fmt+1
  8305  0178  3052               	movlw	(low (_Sens1| (0+256)))& (0+255)
  8306  0179  318E  268F  3180   	fcall	_JSN_Sensor_GetDistance
  8307  017C  0020               	movlb	0	; select bank0
  8308  017D  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  8309  017E  00EF               	movwf	?_printf+3
  8310  017F  083A               	movf	?_JSN_Sensor_GetDistance,w
  8311  0180  00EE               	movwf	?_printf+2
  8312  0181  318B  236E  3180   	fcall	_printf
  8313  0184                     l4206:
  8314                           
  8315                           ;JSN_Sensor.c: 189:                     nextSens = 3;
  8316  0184  3003               	movlw	3
  8317  0185  0021               	movlb	1	; select bank1
  8318  0186  00E2               	movwf	??_main^(0+128)
  8319  0187  0862               	movf	??_main^(0+128),w
  8320  0188  00EA               	movwf	main@nextSens^(0+128)
  8321                           
  8322                           ;JSN_Sensor.c: 190:                     break;
  8323  0189  29B7               	goto	l4214
  8324  018A                     l4208:
  8325                           
  8326                           ;JSN_Sensor.c: 193:                     JSN_Sensor_Trig(&Sens3);
  8327  018A  3046               	movlw	(low (_Sens3| (0+256)))& (0+255)
  8328  018B  3187  2788  3180   	fcall	_JSN_Sensor_Trig
  8329                           
  8330                           ;JSN_Sensor.c: 194:                     printf("%u", JSN_Sensor_GetDistance(&Sens2));
  8331  018E  306C               	movlw	low (STR_3| (0+32768))
  8332  018F  0020               	movlb	0	; select bank0
  8333  0190  00EC               	movwf	printf@fmt
  8334  0191  3090               	movlw	high (STR_3| (0+32768))
  8335  0192  00ED               	movwf	printf@fmt+1
  8336  0193  304C               	movlw	(low (_Sens2| (0+256)))& (0+255)
  8337  0194  318E  268F  3180   	fcall	_JSN_Sensor_GetDistance
  8338  0197  0020               	movlb	0	; select bank0
  8339  0198  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  8340  0199  00EF               	movwf	?_printf+3
  8341  019A  083A               	movf	?_JSN_Sensor_GetDistance,w
  8342  019B  00EE               	movwf	?_printf+2
  8343  019C  318B  236E  3180   	fcall	_printf
  8344  019F                     l4210:
  8345                           
  8346                           ;JSN_Sensor.c: 195:                     nextSens = 1;
  8347  019F  0021               	movlb	1	; select bank1
  8348  01A0  01EA               	clrf	main@nextSens^(0+128)
  8349  01A1  0AEA               	incf	main@nextSens^(0+128),f
  8350                           
  8351                           ;JSN_Sensor.c: 196:             }
  8352  01A2  29B7               	goto	l4214
  8353  01A3                     l4212:
  8354  01A3  0021               	movlb	1	; select bank1
  8355  01A4  086A               	movf	main@nextSens^(0+128),w
  8356  01A5  00E2               	movwf	??_main^(0+128)
  8357  01A6  01E3               	clrf	(??_main^(0+128)+1)
  8358                           
  8359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8360                           ; Switch size 1, requested type "simple"
  8361                           ; Number of cases is 1, Range of values is 0 to 0
  8362                           ; switch strategies available:
  8363                           ; Name         Instructions Cycles
  8364                           ; simple_byte            4     3 (average)
  8365                           ; direct_byte            8     6 (fixed)
  8366                           ; jumptable            260     6 (fixed)
  8367                           ;	Chosen strategy is simple_byte
  8368  01A7  0863               	movf	(??_main+1)^(0+128),w
  8369  01A8  3A00               	xorlw	0	; case 0
  8370  01A9  1903               	skipnz
  8371  01AA  29AC               	goto	l4578
  8372  01AB  29B7               	goto	l4214
  8373  01AC                     l4578:
  8374                           
  8375                           ; Switch size 1, requested type "simple"
  8376                           ; Number of cases is 3, Range of values is 1 to 3
  8377                           ; switch strategies available:
  8378                           ; Name         Instructions Cycles
  8379                           ; simple_byte           10     6 (average)
  8380                           ; direct_byte           15     9 (fixed)
  8381                           ; jumptable            263     9 (fixed)
  8382                           ;	Chosen strategy is simple_byte
  8383  01AC  0862               	movf	??_main^(0+128),w
  8384  01AD  3A01               	xorlw	1	; case 1
  8385  01AE  1903               	skipnz
  8386  01AF  2954               	goto	l4200
  8387  01B0  3A03               	xorlw	3	; case 2
  8388  01B1  1903               	skipnz
  8389  01B2  296F               	goto	l4204
  8390  01B3  3A01               	xorlw	1	; case 3
  8391  01B4  1903               	skipnz
  8392  01B5  298A               	goto	l4208
  8393  01B6  29B7               	goto	l4214
  8394  01B7                     l4214:
  8395                           
  8396                           ;JSN_Sensor.c: 199:             if ((Sens1.distance < 500) || (Sens2.distance < 500)) {
  8397  01B7  3001               	movlw	1
  8398  01B8  0022               	movlb	2	; select bank2
  8399  01B9  0255               	subwf	((_Sens1+1)^(0+256)+2),w
  8400  01BA  30F4               	movlw	244
  8401  01BB  1903               	skipnz
  8402  01BC  0254               	subwf	(_Sens1^(0+256)+2),w
  8403  01BD  1C03               	skipc
  8404  01BE  29C0               	goto	u1571
  8405  01BF  29C1               	goto	u1570
  8406  01C0                     u1571:
  8407  01C0  29CA               	goto	l4218
  8408  01C1                     u1570:
  8409  01C1                     l4216:
  8410  01C1  3001               	movlw	1
  8411  01C2  024F               	subwf	((_Sens2+1)^(0+256)+2),w
  8412  01C3  30F4               	movlw	244
  8413  01C4  1903               	skipnz
  8414  01C5  024E               	subwf	(_Sens2^(0+256)+2),w
  8415  01C6  1803               	skipnc
  8416  01C7  29C9               	goto	u1581
  8417  01C8  29CA               	goto	u1580
  8418  01C9                     u1581:
  8419  01C9  29D2               	goto	l4220
  8420  01CA                     u1580:
  8421  01CA                     l4218:
  8422                           
  8423                           ;JSN_Sensor.c: 200:                 WritePin(C0, 1);
  8424  01CA  0020               	movlb	0	; select bank0
  8425  01CB  01A0               	clrf	WritePin@val
  8426  01CC  0AA0               	incf	WritePin@val,f
  8427  01CD  300C               	movlw	12
  8428  01CE  3183  238D  3180   	fcall	_WritePin
  8429                           
  8430                           ;JSN_Sensor.c: 201:             } else {
  8431  01D1  291C               	goto	l4192
  8432  01D2                     l4220:
  8433                           
  8434                           ;JSN_Sensor.c: 202:                 WritePin(C0, 0);
  8435  01D2  0020               	movlb	0	; select bank0
  8436  01D3  01A0               	clrf	WritePin@val
  8437  01D4  300C               	movlw	12
  8438  01D5  3183  238D  3180   	fcall	_WritePin
  8439  01D8  291C               	goto	l4192
  8440  01D9  3180  2890         	ljmp	start
  8441  01DB                     __end_of_main:
  8442                           
  8443                           	psect	text1
  8444  0B5C                     __ptext1:	
  8445 ;; *************** function _PIC16_Init *****************
  8446 ;; Defined at:
  8447 ;;		line 16 in file "PIC16Xpress_DevBoard.c"
  8448 ;; Parameters:    Size  Location     Type
  8449 ;;		None
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;		None
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      void 
  8454 ;; Registers used:
  8455 ;;		wreg, status,2, status,0, pclath, cstack
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8465 ;;Total ram usage:        0 bytes
  8466 ;; Hardware stack levels used: 1
  8467 ;; Hardware stack levels required when called: 7
  8468 ;; This function calls:
  8469 ;;		_SYSTEM_Initialize
  8470 ;; This function is called by:
  8471 ;;		_main
  8472 ;; This function uses a non-reentrant model
  8473 ;;
  8474                           
  8475  0B5C                     _PIC16_Init:	
  8476                           ;psect for function _PIC16_Init
  8477                           
  8478  0B5C                     l4070:	
  8479                           ;incstack = 0
  8480                           ; Regs used in _PIC16_Init: [wreg+status,2+status,0+pclath+cstack]
  8481                           
  8482                           
  8483                           ;PIC16Xpress_DevBoard.c: 18:     PIE0 = 0x00;
  8484  0B5C  0021               	movlb	1	; select bank1
  8485  0B5D  0190               	clrf	16	;volatile
  8486                           
  8487                           ;PIC16Xpress_DevBoard.c: 19:     PIE1 = 0x00;
  8488  0B5E  0191               	clrf	17	;volatile
  8489                           
  8490                           ;PIC16Xpress_DevBoard.c: 20:     PIE2 = 0x00;
  8491  0B5F  0192               	clrf	18	;volatile
  8492                           
  8493                           ;PIC16Xpress_DevBoard.c: 21:     PIE3 = 0x00;
  8494  0B60  0193               	clrf	19	;volatile
  8495                           
  8496                           ;PIC16Xpress_DevBoard.c: 22:     PIE4 = 0x00;
  8497  0B61  0194               	clrf	20	;volatile
  8498                           
  8499                           ;PIC16Xpress_DevBoard.c: 25:     PIR0 = 0x00;
  8500  0B62  0020               	movlb	0	; select bank0
  8501  0B63  0190               	clrf	16	;volatile
  8502                           
  8503                           ;PIC16Xpress_DevBoard.c: 26:     PIR1 = 0x00;
  8504  0B64  0191               	clrf	17	;volatile
  8505                           
  8506                           ;PIC16Xpress_DevBoard.c: 27:     PIR2 = 0x00;
  8507  0B65  0192               	clrf	18	;volatile
  8508                           
  8509                           ;PIC16Xpress_DevBoard.c: 28:     PIR3 = 0x00;
  8510  0B66  0193               	clrf	19	;volatile
  8511                           
  8512                           ;PIC16Xpress_DevBoard.c: 29:     PIR4 = 0x00;
  8513  0B67  0194               	clrf	20	;volatile
  8514  0B68                     l4072:
  8515                           
  8516                           ;PIC16Xpress_DevBoard.c: 32:     SYSTEM_Initialize();
  8517  0B68  318C  24A9  318B   	fcall	_SYSTEM_Initialize
  8518  0B6B                     l4074:
  8519                           
  8520                           ;PIC16Xpress_DevBoard.c: 35:     (INTCONbits.PEIE = 1);
  8521  0B6B  170B               	bsf	11,6	;volatile
  8522  0B6C                     l4076:
  8523                           
  8524                           ;PIC16Xpress_DevBoard.c: 36:     (INTCONbits.GIE = 1);
  8525  0B6C  178B               	bsf	11,7	;volatile
  8526  0B6D                     l135:
  8527  0B6D  0008               	return
  8528  0B6E                     __end_of_PIC16_Init:
  8529                           
  8530                           	psect	text2
  8531  0CA9                     __ptext2:	
  8532 ;; *************** function _SYSTEM_Initialize *****************
  8533 ;; Defined at:
  8534 ;;		line 15 in file "mcc.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;		None
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;		None
  8539 ;; Return value:  Size  Location     Type
  8540 ;;                  1    wreg      void 
  8541 ;; Registers used:
  8542 ;;		wreg, status,2, status,0, pclath, cstack
  8543 ;; Tracked objects:
  8544 ;;		On entry : 0/0
  8545 ;;		On exit  : 0/0
  8546 ;;		Unchanged: 0/0
  8547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8552 ;;Total ram usage:        0 bytes
  8553 ;; Hardware stack levels used: 1
  8554 ;; Hardware stack levels required when called: 6
  8555 ;; This function calls:
  8556 ;;		_CCP1_Initialize
  8557 ;;		_CCP2_Initialize
  8558 ;;		_CCP3_Initialize
  8559 ;;		_CCP4_Initialize
  8560 ;;		_EUSART_Initialize
  8561 ;;		_OSCILLATOR_Initialize
  8562 ;;		_PIN_MANAGER_Initialize
  8563 ;;		_PMD_Initialize
  8564 ;;		_PWM5_Initialize
  8565 ;;		_TMR0_Initialize
  8566 ;;		_TMR1_Initialize
  8567 ;;		_TMR2_Initialize
  8568 ;;		_TMR3_Initialize
  8569 ;;		_WDT_Initialize
  8570 ;; This function is called by:
  8571 ;;		_PIC16_Init
  8572 ;; This function uses a non-reentrant model
  8573 ;;
  8574                           
  8575  0CA9                     _SYSTEM_Initialize:	
  8576                           ;psect for function _SYSTEM_Initialize
  8577                           
  8578  0CA9                     l3882:	
  8579                           ;incstack = 0
  8580                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8581                           
  8582                           
  8583                           ;mcc.c: 16:     PMD_Initialize();
  8584  0CA9  318A  22BA  318C   	fcall	_PMD_Initialize
  8585                           
  8586                           ;mcc.c: 17:     PIN_MANAGER_Initialize();
  8587  0CAC  318E  2617  318C   	fcall	_PIN_MANAGER_Initialize
  8588                           
  8589                           ;mcc.c: 18:     OSCILLATOR_Initialize();
  8590  0CAF  318A  22CF  318C   	fcall	_OSCILLATOR_Initialize
  8591                           
  8592                           ;mcc.c: 19:     WDT_Initialize();
  8593  0CB2  3187  27FC  318C   	fcall	_WDT_Initialize
  8594                           
  8595                           ;mcc.c: 20:     CCP3_Initialize();
  8596  0CB5  318C  240B  318C   	fcall	_CCP3_Initialize
  8597                           
  8598                           ;mcc.c: 21:     CCP1_Initialize();
  8599  0CB8  318B  23DB  318C   	fcall	_CCP1_Initialize
  8600                           
  8601                           ;mcc.c: 22:     TMR2_Initialize();
  8602  0CBB  318A  2244  318C   	fcall	_TMR2_Initialize
  8603                           
  8604                           ;mcc.c: 23:     TMR0_Initialize();
  8605  0CBE  318B  23C5  318C   	fcall	_TMR0_Initialize
  8606                           
  8607                           ;mcc.c: 24:     CCP2_Initialize();
  8608  0CC1  318B  23F3  318C   	fcall	_CCP2_Initialize
  8609                           
  8610                           ;mcc.c: 25:     CCP4_Initialize();
  8611  0CC4  318B  233A  318C   	fcall	_CCP4_Initialize
  8612  0CC7                     l3884:
  8613                           
  8614                           ;mcc.c: 26:     TMR3_Initialize();
  8615  0CC7  318A  22DB  318C   	fcall	_TMR3_Initialize
  8616  0CCA                     l3886:
  8617                           
  8618                           ;mcc.c: 27:     PWM5_Initialize();
  8619  0CCA  318A  22E8  318C   	fcall	_PWM5_Initialize
  8620  0CCD                     l3888:
  8621                           
  8622                           ;mcc.c: 28:     TMR1_Initialize();
  8623  0CCD  318B  234B  318C   	fcall	_TMR1_Initialize
  8624  0CD0                     l3890:
  8625                           
  8626                           ;mcc.c: 29:     EUSART_Initialize();
  8627  0CD0  318F  2715  318C   	fcall	_EUSART_Initialize
  8628  0CD3                     l264:
  8629  0CD3  0008               	return
  8630  0CD4                     __end_of_SYSTEM_Initialize:
  8631                           
  8632                           	psect	text3
  8633  07FC                     __ptext3:	
  8634 ;; *************** function _WDT_Initialize *****************
  8635 ;; Defined at:
  8636 ;;		line 52 in file "mcc.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;		None
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;		None
  8641 ;; Return value:  Size  Location     Type
  8642 ;;                  1    wreg      void 
  8643 ;; Registers used:
  8644 ;;		wreg
  8645 ;; Tracked objects:
  8646 ;;		On entry : 0/0
  8647 ;;		On exit  : 0/0
  8648 ;;		Unchanged: 0/0
  8649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8654 ;;Total ram usage:        0 bytes
  8655 ;; Hardware stack levels used: 1
  8656 ;; Hardware stack levels required when called: 4
  8657 ;; This function calls:
  8658 ;;		Nothing
  8659 ;; This function is called by:
  8660 ;;		_SYSTEM_Initialize
  8661 ;; This function uses a non-reentrant model
  8662 ;;
  8663                           
  8664  07FC                     _WDT_Initialize:	
  8665                           ;psect for function _WDT_Initialize
  8666                           
  8667  07FC                     l3506:	
  8668                           ;incstack = 0
  8669                           ; Regs used in _WDT_Initialize: [wreg]
  8670                           
  8671                           
  8672                           ;mcc.c: 54:     WDTCON = 0x16;
  8673  07FC  3016               	movlw	22
  8674  07FD  0021               	movlb	1	; select bank1
  8675  07FE  0097               	movwf	23	;volatile
  8676  07FF                     l273:
  8677  07FF  0008               	return
  8678  0800                     __end_of_WDT_Initialize:
  8679                           
  8680                           	psect	text4
  8681  0ADB                     __ptext4:	
  8682 ;; *************** function _TMR3_Initialize *****************
  8683 ;; Defined at:
  8684 ;;		line 25 in file "tmr3.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;		None
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;		None
  8689 ;; Return value:  Size  Location     Type
  8690 ;;                  1    wreg      void 
  8691 ;; Registers used:
  8692 ;;		status,2
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;Total ram usage:        0 bytes
  8703 ;; Hardware stack levels used: 1
  8704 ;; Hardware stack levels required when called: 4
  8705 ;; This function calls:
  8706 ;;		Nothing
  8707 ;; This function is called by:
  8708 ;;		_SYSTEM_Initialize
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712  0ADB                     _TMR3_Initialize:	
  8713                           ;psect for function _TMR3_Initialize
  8714                           
  8715  0ADB                     l3586:	
  8716                           ;incstack = 0
  8717                           ; Regs used in _TMR3_Initialize: [status,2]
  8718                           
  8719                           
  8720                           ;tmr3.c: 28:     T3GCON = 0x00;
  8721  0ADB  0028               	movlb	8	; select bank8
  8722  0ADC  0194               	clrf	20	;volatile
  8723                           
  8724                           ;tmr3.c: 31:     TMR3H = 0x00;
  8725  0ADD  0192               	clrf	18	;volatile
  8726                           
  8727                           ;tmr3.c: 34:     TMR3L = 0x00;
  8728  0ADE  0191               	clrf	17	;volatile
  8729  0ADF                     l3588:
  8730                           
  8731                           ;tmr3.c: 37:     PIR3bits.TMR3IF = 0;
  8732  0ADF  0020               	movlb	0	; select bank0
  8733  0AE0  1213               	bcf	19,4	;volatile
  8734                           
  8735                           ;tmr3.c: 40:     timer3ReloadVal = 0x0000;
  8736  0AE1  0021               	movlb	1	; select bank1
  8737  0AE2  01A8               	clrf	_timer3ReloadVal^(0+128)	;volatile
  8738  0AE3  01A9               	clrf	(_timer3ReloadVal+1)^(0+128)	;volatile
  8739  0AE4                     l3590:
  8740                           
  8741                           ;tmr3.c: 43:     PIE3bits.TMR3IE = 1;
  8742  0AE4  1613               	bsf	19,4	;volatile
  8743                           
  8744                           ;tmr3.c: 46:     T3CON = 0x00;
  8745  0AE5  0028               	movlb	8	; select bank8
  8746  0AE6  0193               	clrf	19	;volatile
  8747  0AE7                     l970:
  8748  0AE7  0008               	return
  8749  0AE8                     __end_of_TMR3_Initialize:
  8750                           
  8751                           	psect	text5
  8752  0A44                     __ptext5:	
  8753 ;; *************** function _TMR2_Initialize *****************
  8754 ;; Defined at:
  8755 ;;		line 17 in file "tmr2.c"
  8756 ;; Parameters:    Size  Location     Type
  8757 ;;		None
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;		None
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  1    wreg      void 
  8762 ;; Registers used:
  8763 ;;		wreg, status,2
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8773 ;;Total ram usage:        0 bytes
  8774 ;; Hardware stack levels used: 1
  8775 ;; Hardware stack levels required when called: 4
  8776 ;; This function calls:
  8777 ;;		Nothing
  8778 ;; This function is called by:
  8779 ;;		_SYSTEM_Initialize
  8780 ;; This function uses a non-reentrant model
  8781 ;;
  8782                           
  8783  0A44                     _TMR2_Initialize:	
  8784                           ;psect for function _TMR2_Initialize
  8785                           
  8786  0A44                     l3540:	
  8787                           ;incstack = 0
  8788                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8789                           
  8790                           
  8791                           ;tmr2.c: 20:     PR2 = 0xF9;
  8792  0A44  30F9               	movlw	249
  8793  0A45  0020               	movlb	0	; select bank0
  8794  0A46  009E               	movwf	30	;volatile
  8795  0A47                     l3542:
  8796                           
  8797                           ;tmr2.c: 23:     TMR2 = 0x00;
  8798  0A47  019D               	clrf	29	;volatile
  8799  0A48                     l3544:
  8800                           
  8801                           ;tmr2.c: 26:     PIR1bits.TMR2IF = 0;
  8802  0A48  1091               	bcf	17,1	;volatile
  8803  0A49                     l3546:
  8804                           
  8805                           ;tmr2.c: 29:     T2CON = 0x04;
  8806  0A49  3004               	movlw	4
  8807  0A4A  009F               	movwf	31	;volatile
  8808  0A4B                     l930:
  8809  0A4B  0008               	return
  8810  0A4C                     __end_of_TMR2_Initialize:
  8811                           
  8812                           	psect	text6
  8813  0B4B                     __ptext6:	
  8814 ;; *************** function _TMR1_Initialize *****************
  8815 ;; Defined at:
  8816 ;;		line 19 in file "tmr1.c"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;		None
  8819 ;; Auto vars:     Size  Location     Type
  8820 ;;		None
  8821 ;; Return value:  Size  Location     Type
  8822 ;;                  1    wreg      void 
  8823 ;; Registers used:
  8824 ;;		wreg, status,2
  8825 ;; Tracked objects:
  8826 ;;		On entry : 0/0
  8827 ;;		On exit  : 0/0
  8828 ;;		Unchanged: 0/0
  8829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8834 ;;Total ram usage:        0 bytes
  8835 ;; Hardware stack levels used: 1
  8836 ;; Hardware stack levels required when called: 4
  8837 ;; This function calls:
  8838 ;;		Nothing
  8839 ;; This function is called by:
  8840 ;;		_SYSTEM_Initialize
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844  0B4B                     _TMR1_Initialize:	
  8845                           ;psect for function _TMR1_Initialize
  8846                           
  8847  0B4B                     l3604:	
  8848                           ;incstack = 0
  8849                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  8850                           
  8851                           
  8852                           ;tmr1.c: 24:     T1GCON = 0x00;
  8853  0B4B  0020               	movlb	0	; select bank0
  8854  0B4C  019C               	clrf	28	;volatile
  8855                           
  8856                           ;tmr1.c: 27:     TMR1H = 0x00;
  8857  0B4D  019A               	clrf	26	;volatile
  8858                           
  8859                           ;tmr1.c: 30:     TMR1L = 0x00;
  8860  0B4E  0199               	clrf	25	;volatile
  8861  0B4F                     l3606:
  8862                           
  8863                           ;tmr1.c: 33:     PIR1bits.TMR1IF = 0;
  8864  0B4F  1011               	bcf	17,0	;volatile
  8865  0B50                     l3608:
  8866                           
  8867                           ;tmr1.c: 36:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8868  0B50  081A               	movf	26,w	;volatile
  8869  0B51  0021               	movlb	1	; select bank1
  8870  0B52  00BB               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  8871  0B53  0020               	movlb	0	; select bank0
  8872  0B54  0819               	movf	25,w	;volatile
  8873  0B55  0021               	movlb	1	; select bank1
  8874  0B56  00BA               	movwf	_timer1ReloadVal^(0+128)	;volatile
  8875  0B57                     l3610:
  8876                           
  8877                           ;tmr1.c: 39:     PIE1bits.TMR1IE = 1;
  8878  0B57  1411               	bsf	17,0	;volatile
  8879  0B58                     l3612:
  8880                           
  8881                           ;tmr1.c: 42:     T1CON = 0b00100001;
  8882  0B58  3021               	movlw	33
  8883  0B59  0020               	movlb	0	; select bank0
  8884  0B5A  009B               	movwf	27	;volatile
  8885  0B5B                     l495:
  8886  0B5B  0008               	return
  8887  0B5C                     __end_of_TMR1_Initialize:
  8888                           
  8889                           	psect	text7
  8890  0BC5                     __ptext7:	
  8891 ;; *************** function _TMR0_Initialize *****************
  8892 ;; Defined at:
  8893 ;;		line 19 in file "tmr0.c"
  8894 ;; Parameters:    Size  Location     Type
  8895 ;;		None
  8896 ;; Auto vars:     Size  Location     Type
  8897 ;;		None
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  1    wreg      void 
  8900 ;; Registers used:
  8901 ;;		wreg, status,2, status,0, pclath, cstack
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8911 ;;Total ram usage:        0 bytes
  8912 ;; Hardware stack levels used: 1
  8913 ;; Hardware stack levels required when called: 5
  8914 ;; This function calls:
  8915 ;;		_TMR0_SetInterruptHandler
  8916 ;; This function is called by:
  8917 ;;		_SYSTEM_Initialize
  8918 ;; This function uses a non-reentrant model
  8919 ;;
  8920                           
  8921  0BC5                     _TMR0_Initialize:	
  8922                           ;psect for function _TMR0_Initialize
  8923                           
  8924  0BC5                     l3548:	
  8925                           ;incstack = 0
  8926                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8927                           
  8928                           
  8929                           ;tmr0.c: 22:     T0CON1 = 0x42;
  8930  0BC5  3042               	movlw	66
  8931  0BC6  0020               	movlb	0	; select bank0
  8932  0BC7  0098               	movwf	24	;volatile
  8933                           
  8934                           ;tmr0.c: 25:     TMR0H = 0xF9;
  8935  0BC8  30F9               	movlw	249
  8936  0BC9  0096               	movwf	22	;volatile
  8937  0BCA                     l3550:
  8938                           
  8939                           ;tmr0.c: 28:     TMR0L = 0x00;
  8940  0BCA  0195               	clrf	21	;volatile
  8941  0BCB                     l3552:
  8942                           
  8943                           ;tmr0.c: 31:     PIR0bits.TMR0IF = 0;
  8944  0BCB  1290               	bcf	16,5	;volatile
  8945  0BCC                     l3554:
  8946                           
  8947                           ;tmr0.c: 34:     PIE0bits.TMR0IE = 1;
  8948  0BCC  0021               	movlb	1	; select bank1
  8949  0BCD  1690               	bsf	16,5	;volatile
  8950  0BCE                     l3556:
  8951                           
  8952                           ;tmr0.c: 37:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  8953  0BCE  3000               	movlw	0
  8954  0BCF  0020               	movlb	0	; select bank0
  8955  0BD0  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8956  0BD1  3000               	movlw	0
  8957  0BD2  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8958  0BD3  318A  229D  318B   	fcall	_TMR0_SetInterruptHandler
  8959  0BD6                     l3558:
  8960                           
  8961                           ;tmr0.c: 40:     T0CON0 = 0x80;
  8962  0BD6  3080               	movlw	128
  8963  0BD7  0020               	movlb	0	; select bank0
  8964  0BD8  0097               	movwf	23	;volatile
  8965  0BD9                     l3560:
  8966                           
  8967                           ;tmr0.c: 41:     CountCallBack = 0;
  8968  0BD9  01FD               	clrf	_CountCallBack	;volatile
  8969  0BDA                     l307:
  8970  0BDA  0008               	return
  8971  0BDB                     __end_of_TMR0_Initialize:
  8972                           
  8973                           	psect	text8
  8974  0A9D                     __ptext8:	
  8975 ;; *************** function _TMR0_SetInterruptHandler *****************
  8976 ;; Defined at:
  8977 ;;		line 117 in file "tmr0.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8980 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  8981 ;; Auto vars:     Size  Location     Type
  8982 ;;		None
  8983 ;; Return value:  Size  Location     Type
  8984 ;;                  1    wreg      void 
  8985 ;; Registers used:
  8986 ;;		wreg
  8987 ;; Tracked objects:
  8988 ;;		On entry : 0/0
  8989 ;;		On exit  : 0/0
  8990 ;;		Unchanged: 0/0
  8991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8992 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8995 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8996 ;;Total ram usage:        2 bytes
  8997 ;; Hardware stack levels used: 1
  8998 ;; Hardware stack levels required when called: 4
  8999 ;; This function calls:
  9000 ;;		Nothing
  9001 ;; This function is called by:
  9002 ;;		_TMR0_Initialize
  9003 ;; This function uses a non-reentrant model
  9004 ;;
  9005                           
  9006  0A9D                     _TMR0_SetInterruptHandler:	
  9007                           ;psect for function _TMR0_SetInterruptHandler
  9008                           
  9009  0A9D                     l3300:	
  9010                           ;incstack = 0
  9011                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  9012                           
  9013                           
  9014                           ;tmr0.c: 118:     TMR0_InterruptHandler = InterruptHandler;
  9015  0A9D  0020               	movlb	0	; select bank0
  9016  0A9E  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  9017  0A9F  0021               	movlb	1	; select bank1
  9018  0AA0  00CF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  9019  0AA1  0020               	movlb	0	; select bank0
  9020  0AA2  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  9021  0AA3  0021               	movlb	1	; select bank1
  9022  0AA4  00CE               	movwf	_TMR0_InterruptHandler^(0+128)
  9023  0AA5                     l332:
  9024  0AA5  0008               	return
  9025  0AA6                     __end_of_TMR0_SetInterruptHandler:
  9026                           
  9027                           	psect	text9
  9028  0AE8                     __ptext9:	
  9029 ;; *************** function _PWM5_Initialize *****************
  9030 ;; Defined at:
  9031 ;;		line 16 in file "pwm5.c"
  9032 ;; Parameters:    Size  Location     Type
  9033 ;;		None
  9034 ;; Auto vars:     Size  Location     Type
  9035 ;;		None
  9036 ;; Return value:  Size  Location     Type
  9037 ;;                  1    wreg      void 
  9038 ;; Registers used:
  9039 ;;		wreg, status,2, status,0
  9040 ;; Tracked objects:
  9041 ;;		On entry : 0/0
  9042 ;;		On exit  : 0/0
  9043 ;;		Unchanged: 0/0
  9044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9049 ;;Total ram usage:        0 bytes
  9050 ;; Hardware stack levels used: 1
  9051 ;; Hardware stack levels required when called: 4
  9052 ;; This function calls:
  9053 ;;		Nothing
  9054 ;; This function is called by:
  9055 ;;		_SYSTEM_Initialize
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059  0AE8                     _PWM5_Initialize:	
  9060                           ;psect for function _PWM5_Initialize
  9061                           
  9062  0AE8                     l3592:	
  9063                           ;incstack = 0
  9064                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
  9065                           
  9066                           
  9067                           ;pwm5.c: 18:     PWM5CON = 0x80;
  9068  0AE8  3080               	movlw	128
  9069  0AE9  002C               	movlb	12	; select bank12
  9070  0AEA  0099               	movwf	25	;volatile
  9071  0AEB                     l3594:
  9072                           
  9073                           ;pwm5.c: 21:     PWM5DCH = 0x00;
  9074  0AEB  0198               	clrf	24	;volatile
  9075  0AEC                     l3596:
  9076                           
  9077                           ;pwm5.c: 24:     PWM5DCL = 0x00;
  9078  0AEC  0197               	clrf	23	;volatile
  9079  0AED                     l3598:
  9080                           
  9081                           ;pwm5.c: 27:     PWMTMRSbits.P5TSEL = 1;
  9082  0AED  081F               	movf	31,w	;volatile
  9083  0AEE  39FC               	andlw	-4
  9084  0AEF  3801               	iorlw	1
  9085  0AF0  009F               	movwf	31	;volatile
  9086  0AF1                     l3600:
  9087                           
  9088                           ;pwm5.c: 30:     TRISBbits.TRISB6 = 0;
  9089  0AF1  0021               	movlb	1	; select bank1
  9090  0AF2  130D               	bcf	13,6	;volatile
  9091  0AF3                     l3602:
  9092                           
  9093                           ;pwm5.c: 31:     LATBbits.LATB6 = 0;
  9094  0AF3  0022               	movlb	2	; select bank2
  9095  0AF4  130D               	bcf	13,6	;volatile
  9096  0AF5                     l914:
  9097  0AF5  0008               	return
  9098  0AF6                     __end_of_PWM5_Initialize:
  9099                           
  9100                           	psect	text10
  9101  0ABA                     __ptext10:	
  9102 ;; *************** function _PMD_Initialize *****************
  9103 ;; Defined at:
  9104 ;;		line 59 in file "mcc.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;		None
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;		None
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  1    wreg      void 
  9111 ;; Registers used:
  9112 ;;		wreg, status,2
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9122 ;;Total ram usage:        0 bytes
  9123 ;; Hardware stack levels used: 1
  9124 ;; Hardware stack levels required when called: 4
  9125 ;; This function calls:
  9126 ;;		Nothing
  9127 ;; This function is called by:
  9128 ;;		_SYSTEM_Initialize
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132  0ABA                     _PMD_Initialize:	
  9133                           ;psect for function _PMD_Initialize
  9134                           
  9135  0ABA                     l3450:	
  9136                           ;incstack = 0
  9137                           ; Regs used in _PMD_Initialize: [wreg+status,2]
  9138                           
  9139                           
  9140                           ;mcc.c: 62:     PMD0 = 0x00;
  9141  0ABA  0032               	movlb	18	; select bank18
  9142  0ABB  0191               	clrf	17	;volatile
  9143                           
  9144                           ;mcc.c: 63:     PMD1 = 0x00;
  9145  0ABC  0192               	clrf	18	;volatile
  9146  0ABD                     l3452:
  9147                           
  9148                           ;mcc.c: 66:     PMD2 = 0x66;
  9149  0ABD  3066               	movlw	102
  9150  0ABE  0093               	movwf	19	;volatile
  9151  0ABF                     l3454:
  9152                           
  9153                           ;mcc.c: 67:     PMD3 = 0x00;
  9154  0ABF  0194               	clrf	20	;volatile
  9155  0AC0                     l3456:
  9156                           
  9157                           ;mcc.c: 68:     PMD4 = 0x00;
  9158  0AC0  0195               	clrf	21	;volatile
  9159  0AC1                     l3458:
  9160                           
  9161                           ;mcc.c: 71:     PMD5 = 0x1F;
  9162  0AC1  301F               	movlw	31
  9163  0AC2  0096               	movwf	22	;volatile
  9164  0AC3                     l276:
  9165  0AC3  0008               	return
  9166  0AC4                     __end_of_PMD_Initialize:
  9167                           
  9168                           	psect	text11
  9169  0E17                     __ptext11:	
  9170 ;; *************** function _PIN_MANAGER_Initialize *****************
  9171 ;; Defined at:
  9172 ;;		line 14 in file "pin_manager.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;		None
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;		None
  9177 ;; Return value:  Size  Location     Type
  9178 ;;                  1    wreg      void 
  9179 ;; Registers used:
  9180 ;;		wreg, status,2
  9181 ;; Tracked objects:
  9182 ;;		On entry : 0/0
  9183 ;;		On exit  : 0/0
  9184 ;;		Unchanged: 0/0
  9185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9190 ;;Total ram usage:        0 bytes
  9191 ;; Hardware stack levels used: 1
  9192 ;; Hardware stack levels required when called: 4
  9193 ;; This function calls:
  9194 ;;		Nothing
  9195 ;; This function is called by:
  9196 ;;		_SYSTEM_Initialize
  9197 ;; This function uses a non-reentrant model
  9198 ;;
  9199                           
  9200  0E17                     _PIN_MANAGER_Initialize:	
  9201                           ;psect for function _PIN_MANAGER_Initialize
  9202                           
  9203  0E17                     l3460:	
  9204                           ;incstack = 0
  9205                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9206                           
  9207                           
  9208                           ;pin_manager.c: 19:     LATA = 0x00;
  9209  0E17  0022               	movlb	2	; select bank2
  9210  0E18  018C               	clrf	12	;volatile
  9211                           
  9212                           ;pin_manager.c: 20:     LATB = 0x00;
  9213  0E19  018D               	clrf	13	;volatile
  9214                           
  9215                           ;pin_manager.c: 21:     LATC = 0x00;
  9216  0E1A  018E               	clrf	14	;volatile
  9217  0E1B                     l3462:
  9218                           
  9219                           ;pin_manager.c: 26:     TRISA = 0x37;
  9220  0E1B  3037               	movlw	55
  9221  0E1C  0021               	movlb	1	; select bank1
  9222  0E1D  008C               	movwf	12	;volatile
  9223  0E1E                     l3464:
  9224                           
  9225                           ;pin_manager.c: 27:     TRISB = 0xF0;
  9226  0E1E  30F0               	movlw	240
  9227  0E1F  008D               	movwf	13	;volatile
  9228  0E20                     l3466:
  9229                           
  9230                           ;pin_manager.c: 28:     TRISC = 0xEF;
  9231  0E20  30EF               	movlw	239
  9232  0E21  008E               	movwf	14	;volatile
  9233  0E22                     l3468:
  9234                           
  9235                           ;pin_manager.c: 33:     ANSELC = 0xD7;
  9236  0E22  30D7               	movlw	215
  9237  0E23  0023               	movlb	3	; select bank3
  9238  0E24  008E               	movwf	14	;volatile
  9239  0E25                     l3470:
  9240                           
  9241                           ;pin_manager.c: 34:     ANSELB = 0xD0;
  9242  0E25  30D0               	movlw	208
  9243  0E26  008D               	movwf	13	;volatile
  9244  0E27                     l3472:
  9245                           
  9246                           ;pin_manager.c: 35:     ANSELA = 0x33;
  9247  0E27  3033               	movlw	51
  9248  0E28  008C               	movwf	12	;volatile
  9249                           
  9250                           ;pin_manager.c: 40:     WPUB = 0x00;
  9251  0E29  0024               	movlb	4	; select bank4
  9252  0E2A  018D               	clrf	13	;volatile
  9253                           
  9254                           ;pin_manager.c: 41:     WPUA = 0x00;
  9255  0E2B  018C               	clrf	12	;volatile
  9256                           
  9257                           ;pin_manager.c: 42:     WPUC = 0x00;
  9258  0E2C  018E               	clrf	14	;volatile
  9259                           
  9260                           ;pin_manager.c: 47:     ODCONA = 0x00;
  9261  0E2D  0025               	movlb	5	; select bank5
  9262  0E2E  018C               	clrf	12	;volatile
  9263                           
  9264                           ;pin_manager.c: 48:     ODCONB = 0x00;
  9265  0E2F  018D               	clrf	13	;volatile
  9266                           
  9267                           ;pin_manager.c: 49:     ODCONC = 0x00;
  9268  0E30  018E               	clrf	14	;volatile
  9269  0E31                     l3474:
  9270                           
  9271                           ;pin_manager.c: 54:     SLRCONA = 0x37;
  9272  0E31  3037               	movlw	55
  9273  0E32  0026               	movlb	6	; select bank6
  9274  0E33  008C               	movwf	12	;volatile
  9275  0E34                     l3476:
  9276                           
  9277                           ;pin_manager.c: 55:     SLRCONB = 0xF0;
  9278  0E34  30F0               	movlw	240
  9279  0E35  008D               	movwf	13	;volatile
  9280  0E36                     l3478:
  9281                           
  9282                           ;pin_manager.c: 56:     SLRCONC = 0xFF;
  9283  0E36  30FF               	movlw	255
  9284  0E37  008E               	movwf	14	;volatile
  9285  0E38                     l3480:
  9286                           
  9287                           ;pin_manager.c: 61:     INLVLA = 0x3F;
  9288  0E38  303F               	movlw	63
  9289  0E39  0027               	movlb	7	; select bank7
  9290  0E3A  008C               	movwf	12	;volatile
  9291  0E3B                     l3482:
  9292                           
  9293                           ;pin_manager.c: 62:     INLVLB = 0xF0;
  9294  0E3B  30F0               	movlw	240
  9295  0E3C  008D               	movwf	13	;volatile
  9296  0E3D                     l3484:
  9297                           
  9298                           ;pin_manager.c: 63:     INLVLC = 0xFF;
  9299  0E3D  30FF               	movlw	255
  9300  0E3E  008E               	movwf	14	;volatile
  9301  0E3F                     l3486:
  9302                           
  9303                           ;pin_manager.c: 66:     RXPPS = 0x0D;
  9304  0E3F  300D               	movlw	13
  9305  0E40  003C               	movlb	28	; select bank28
  9306  0E41  00A4               	movwf	36	;volatile
  9307  0E42                     l3488:
  9308                           
  9309                           ;pin_manager.c: 67:     RC4PPS = 0x14;
  9310  0E42  3014               	movlw	20
  9311  0E43  003D               	movlb	29	; select bank29
  9312  0E44  00A4               	movwf	36	;volatile
  9313  0E45                     l3490:
  9314                           
  9315                           ;pin_manager.c: 69:     CCP1PPS = 0x15;
  9316  0E45  3015               	movlw	21
  9317  0E46  003C               	movlb	28	; select bank28
  9318  0E47  0094               	movwf	20	;volatile
  9319  0E48                     l3492:
  9320                           
  9321                           ;pin_manager.c: 70:     CCP2PPS = 0x13;
  9322  0E48  3013               	movlw	19
  9323  0E49  0095               	movwf	21	;volatile
  9324  0E4A                     l3494:
  9325                           
  9326                           ;pin_manager.c: 71:     CCP3PPS = 0x02;
  9327  0E4A  3002               	movlw	2
  9328  0E4B  0096               	movwf	22	;volatile
  9329  0E4C                     l3496:
  9330                           
  9331                           ;pin_manager.c: 73:     RC1PPS = 0x0F;
  9332  0E4C  300F               	movlw	15
  9333  0E4D  003D               	movlb	29	; select bank29
  9334  0E4E  00A1               	movwf	33	;volatile
  9335  0E4F                     l3498:
  9336                           
  9337                           ;pin_manager.c: 74:     RB6PPS = 0x02;
  9338  0E4F  3002               	movlw	2
  9339  0E50  009E               	movwf	30	;volatile
  9340  0E51                     l783:
  9341  0E51  0008               	return
  9342  0E52                     __end_of_PIN_MANAGER_Initialize:
  9343                           
  9344                           	psect	text12
  9345  0ACF                     __ptext12:	
  9346 ;; *************** function _OSCILLATOR_Initialize *****************
  9347 ;; Defined at:
  9348 ;;		line 34 in file "mcc.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;		None
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;		None
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1    wreg      void 
  9355 ;; Registers used:
  9356 ;;		wreg, status,2
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9366 ;;Total ram usage:        0 bytes
  9367 ;; Hardware stack levels used: 1
  9368 ;; Hardware stack levels required when called: 4
  9369 ;; This function calls:
  9370 ;;		Nothing
  9371 ;; This function is called by:
  9372 ;;		_SYSTEM_Initialize
  9373 ;; This function uses a non-reentrant model
  9374 ;;
  9375                           
  9376  0ACF                     _OSCILLATOR_Initialize:	
  9377                           ;psect for function _OSCILLATOR_Initialize
  9378                           
  9379  0ACF                     l3500:	
  9380                           ;incstack = 0
  9381                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9382                           
  9383                           
  9384                           ;mcc.c: 36:     OSCCON1 = 0x00;
  9385  0ACF  0032               	movlb	18	; select bank18
  9386  0AD0  0199               	clrf	25	;volatile
  9387                           
  9388                           ;mcc.c: 38:     OSCCON3 = 0x00;
  9389  0AD1  019B               	clrf	27	;volatile
  9390                           
  9391                           ;mcc.c: 40:     OSCEN = 0x00;
  9392  0AD2  019D               	clrf	29	;volatile
  9393  0AD3                     l3502:
  9394                           
  9395                           ;mcc.c: 42:     OSCFRQ = 0x04;
  9396  0AD3  3004               	movlw	4
  9397  0AD4  009F               	movwf	31	;volatile
  9398  0AD5                     l3504:
  9399                           
  9400                           ;mcc.c: 44:     OSCTUNE = 0x00;
  9401  0AD5  019E               	clrf	30	;volatile
  9402  0AD6                     l267:	
  9403                           ;mcc.c: 47:     }
  9404                           
  9405                           
  9406                           ;mcc.c: 46:     while (PLLR == 0) {
  9407  0AD6  1C1C               	btfss	28,0	;volatile
  9408  0AD7  2AD9               	goto	u1241
  9409  0AD8  2ADA               	goto	u1240
  9410  0AD9                     u1241:
  9411  0AD9  2AD6               	goto	l267
  9412  0ADA                     u1240:
  9413  0ADA                     l270:
  9414  0ADA  0008               	return
  9415  0ADB                     __end_of_OSCILLATOR_Initialize:
  9416                           
  9417                           	psect	text13
  9418  0F15                     __ptext13:	
  9419 ;; *************** function _EUSART_Initialize *****************
  9420 ;; Defined at:
  9421 ;;		line 45 in file "eusart.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;		None
  9424 ;; Auto vars:     Size  Location     Type
  9425 ;;		None
  9426 ;; Return value:  Size  Location     Type
  9427 ;;                  1    wreg      void 
  9428 ;; Registers used:
  9429 ;;		wreg, status,2, status,0, pclath, cstack
  9430 ;; Tracked objects:
  9431 ;;		On entry : 0/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9437 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9438 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9439 ;;Total ram usage:        1 bytes
  9440 ;; Hardware stack levels used: 1
  9441 ;; Hardware stack levels required when called: 5
  9442 ;; This function calls:
  9443 ;;		_EUSART_SetErrorHandler
  9444 ;;		_EUSART_SetFramingErrorHandler
  9445 ;;		_EUSART_SetOverrunErrorHandler
  9446 ;;		_EUSART_SetRxInterruptHandler
  9447 ;;		_EUSART_SetTxInterruptHandler
  9448 ;; This function is called by:
  9449 ;;		_SYSTEM_Initialize
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453  0F15                     _EUSART_Initialize:	
  9454                           ;psect for function _EUSART_Initialize
  9455                           
  9456  0F15                     l3614:	
  9457                           ;incstack = 0
  9458                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9459                           
  9460                           
  9461                           ;eusart.c: 48:     PIE1bits.RCIE = 0;
  9462  0F15  0021               	movlb	1	; select bank1
  9463  0F16  1291               	bcf	17,5	;volatile
  9464  0F17                     l3616:
  9465                           
  9466                           ;eusart.c: 49:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  9467  0F17  3052               	movlw	low _EUSART_Receive_ISR
  9468  0F18  0020               	movlb	0	; select bank0
  9469  0F19  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  9470  0F1A  300E               	movlw	high _EUSART_Receive_ISR
  9471  0F1B  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  9472  0F1C  318A  228B  318F   	fcall	_EUSART_SetRxInterruptHandler
  9473  0F1F                     l3618:
  9474                           
  9475                           ;eusart.c: 50:     PIE1bits.TXIE = 0;
  9476  0F1F  0021               	movlb	1	; select bank1
  9477  0F20  1211               	bcf	17,4	;volatile
  9478                           
  9479                           ;eusart.c: 51:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  9480  0F21  305E               	movlw	low _EUSART_Transmit_ISR
  9481  0F22  0020               	movlb	0	; select bank0
  9482  0F23  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  9483  0F24  300C               	movlw	high _EUSART_Transmit_ISR
  9484  0F25  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  9485  0F26  318A  2294  318F   	fcall	_EUSART_SetTxInterruptHandler
  9486  0F29                     l3620:
  9487                           
  9488                           ;eusart.c: 55:     BAUD1CON = 0x08;
  9489  0F29  3008               	movlw	8
  9490  0F2A  0023               	movlb	3	; select bank3
  9491  0F2B  009F               	movwf	31	;volatile
  9492  0F2C                     l3622:
  9493                           
  9494                           ;eusart.c: 58:     RC1STA = 0x90;
  9495  0F2C  3090               	movlw	144
  9496  0F2D  009D               	movwf	29	;volatile
  9497  0F2E                     l3624:
  9498                           
  9499                           ;eusart.c: 61:     TX1STA = 0x24;
  9500  0F2E  3024               	movlw	36
  9501  0F2F  009E               	movwf	30	;volatile
  9502  0F30                     l3626:
  9503                           
  9504                           ;eusart.c: 64:     SP1BRGL = 0xA0;
  9505  0F30  30A0               	movlw	160
  9506  0F31  009B               	movwf	27	;volatile
  9507  0F32                     l3628:
  9508                           
  9509                           ;eusart.c: 67:     SP1BRGH = 0x01;
  9510  0F32  3001               	movlw	1
  9511  0F33  009C               	movwf	28	;volatile
  9512  0F34                     l3630:
  9513                           
  9514                           ;eusart.c: 70:     EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  9515  0F34  3014               	movlw	low _EUSART_DefaultFramingErrorHandler
  9516  0F35  0020               	movlb	0	; select bank0
  9517  0F36  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  9518  0F37  300A               	movlw	high _EUSART_DefaultFramingErrorHandler
  9519  0F38  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  9520  0F39  318A  2279  318F   	fcall	_EUSART_SetFramingErrorHandler
  9521  0F3C                     l3632:
  9522                           
  9523                           ;eusart.c: 71:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  9524  0F3C  301F               	movlw	low _EUSART_DefaultOverrunErrorHandler
  9525  0F3D  0020               	movlb	0	; select bank0
  9526  0F3E  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  9527  0F3F  300A               	movlw	high _EUSART_DefaultOverrunErrorHandler
  9528  0F40  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  9529  0F41  318A  2282  318F   	fcall	_EUSART_SetOverrunErrorHandler
  9530  0F44                     l3634:
  9531                           
  9532                           ;eusart.c: 72:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  9533  0F44  301B               	movlw	low _EUSART_DefaultErrorHandler
  9534  0F45  0020               	movlb	0	; select bank0
  9535  0F46  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  9536  0F47  300A               	movlw	high _EUSART_DefaultErrorHandler
  9537  0F48  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  9538  0F49  318A  2270  318F   	fcall	_EUSART_SetErrorHandler
  9539  0F4C                     l3636:
  9540                           
  9541                           ;eusart.c: 74:     eusartRxLastError.status = 0;
  9542  0F4C  0021               	movlb	1	; select bank1
  9543  0F4D  01D0               	clrf	_eusartRxLastError^(0+128)	;volatile
  9544  0F4E                     l3638:
  9545                           
  9546                           ;eusart.c: 77:     eusartTxHead = 0;
  9547  0F4E  01FC               	clrf	_eusartTxHead	;volatile
  9548  0F4F                     l3640:
  9549                           
  9550                           ;eusart.c: 78:     eusartTxTail = 0;
  9551  0F4F  01D3               	clrf	_eusartTxTail^(0+128)	;volatile
  9552  0F50                     l3642:
  9553                           
  9554                           ;eusart.c: 79:     eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  9555  0F50  3008               	movlw	8
  9556  0F51  0020               	movlb	0	; select bank0
  9557  0F52  00A2               	movwf	??_EUSART_Initialize
  9558  0F53  0822               	movf	??_EUSART_Initialize,w
  9559  0F54  0021               	movlb	1	; select bank1
  9560  0F55  00D2               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  9561                           
  9562                           ;eusart.c: 81:     eusartRxHead = 0;
  9563  0F56  01FB               	clrf	_eusartRxHead	;volatile
  9564                           
  9565                           ;eusart.c: 82:     eusartRxTail = 0;
  9566  0F57  01FA               	clrf	_eusartRxTail	;volatile
  9567                           
  9568                           ;eusart.c: 83:     eusartRxCount = 0;
  9569  0F58  01D1               	clrf	_eusartRxCount^(0+128)	;volatile
  9570  0F59                     l3644:
  9571                           
  9572                           ;eusart.c: 86:     PIE1bits.RCIE = 1;
  9573  0F59  1691               	bsf	17,5	;volatile
  9574  0F5A                     l590:
  9575  0F5A  0008               	return
  9576  0F5B                     __end_of_EUSART_Initialize:
  9577                           
  9578                           	psect	text14
  9579  0A94                     __ptext14:	
  9580 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  9581 ;; Defined at:
  9582 ;;		line 278 in file "eusart.c"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9585 ;;		 -> EUSART_Transmit_ISR(1), 
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;		None
  9588 ;; Return value:  Size  Location     Type
  9589 ;;                  1    wreg      void 
  9590 ;; Registers used:
  9591 ;;		wreg
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9597 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;Total ram usage:        2 bytes
  9602 ;; Hardware stack levels used: 1
  9603 ;; Hardware stack levels required when called: 4
  9604 ;; This function calls:
  9605 ;;		Nothing
  9606 ;; This function is called by:
  9607 ;;		_EUSART_Initialize
  9608 ;; This function uses a non-reentrant model
  9609 ;;
  9610                           
  9611  0A94                     _EUSART_SetTxInterruptHandler:	
  9612                           ;psect for function _EUSART_SetTxInterruptHandler
  9613                           
  9614  0A94                     l3310:	
  9615                           ;incstack = 0
  9616                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  9617                           
  9618                           
  9619                           ;eusart.c: 279:     EUSART_TxDefaultInterruptHandler = interruptHandler;
  9620  0A94  0020               	movlb	0	; select bank0
  9621  0A95  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  9622  0A96  0021               	movlb	1	; select bank1
  9623  0A97  00B9               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
  9624  0A98  0020               	movlb	0	; select bank0
  9625  0A99  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  9626  0A9A  0021               	movlb	1	; select bank1
  9627  0A9B  00B8               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
  9628  0A9C                     l662:
  9629  0A9C  0008               	return
  9630  0A9D                     __end_of_EUSART_SetTxInterruptHandler:
  9631                           
  9632                           	psect	text15
  9633  0A8B                     __ptext15:	
  9634 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  9635 ;; Defined at:
  9636 ;;		line 284 in file "eusart.c"
  9637 ;; Parameters:    Size  Location     Type
  9638 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9639 ;;		 -> EUSART_Receive_ISR(1), 
  9640 ;; Auto vars:     Size  Location     Type
  9641 ;;		None
  9642 ;; Return value:  Size  Location     Type
  9643 ;;                  1    wreg      void 
  9644 ;; Registers used:
  9645 ;;		wreg
  9646 ;; Tracked objects:
  9647 ;;		On entry : 0/0
  9648 ;;		On exit  : 0/0
  9649 ;;		Unchanged: 0/0
  9650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9651 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9654 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9655 ;;Total ram usage:        2 bytes
  9656 ;; Hardware stack levels used: 1
  9657 ;; Hardware stack levels required when called: 4
  9658 ;; This function calls:
  9659 ;;		Nothing
  9660 ;; This function is called by:
  9661 ;;		_EUSART_Initialize
  9662 ;; This function uses a non-reentrant model
  9663 ;;
  9664                           
  9665  0A8B                     _EUSART_SetRxInterruptHandler:	
  9666                           ;psect for function _EUSART_SetRxInterruptHandler
  9667                           
  9668  0A8B                     l3308:	
  9669                           ;incstack = 0
  9670                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  9671                           
  9672                           
  9673                           ;eusart.c: 285:     EUSART_RxDefaultInterruptHandler = interruptHandler;
  9674  0A8B  0020               	movlb	0	; select bank0
  9675  0A8C  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  9676  0A8D  0021               	movlb	1	; select bank1
  9677  0A8E  00B7               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  9678  0A8F  0020               	movlb	0	; select bank0
  9679  0A90  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  9680  0A91  0021               	movlb	1	; select bank1
  9681  0A92  00B6               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  9682  0A93                     l665:
  9683  0A93  0008               	return
  9684  0A94                     __end_of_EUSART_SetRxInterruptHandler:
  9685                           
  9686                           	psect	text16
  9687  0A82                     __ptext16:	
  9688 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  9689 ;; Defined at:
  9690 ;;		line 266 in file "eusart.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9693 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  9694 ;; Auto vars:     Size  Location     Type
  9695 ;;		None
  9696 ;; Return value:  Size  Location     Type
  9697 ;;                  1    wreg      void 
  9698 ;; Registers used:
  9699 ;;		wreg
  9700 ;; Tracked objects:
  9701 ;;		On entry : 0/0
  9702 ;;		On exit  : 0/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9705 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9708 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9709 ;;Total ram usage:        2 bytes
  9710 ;; Hardware stack levels used: 1
  9711 ;; Hardware stack levels required when called: 4
  9712 ;; This function calls:
  9713 ;;		Nothing
  9714 ;; This function is called by:
  9715 ;;		_EUSART_Initialize
  9716 ;; This function uses a non-reentrant model
  9717 ;;
  9718                           
  9719  0A82                     _EUSART_SetOverrunErrorHandler:	
  9720                           ;psect for function _EUSART_SetOverrunErrorHandler
  9721                           
  9722  0A82                     l3314:	
  9723                           ;incstack = 0
  9724                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  9725                           
  9726                           
  9727                           ;eusart.c: 267:     EUSART_OverrunErrorHandler = interruptHandler;
  9728  0A82  0020               	movlb	0	; select bank0
  9729  0A83  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  9730  0A84  0021               	movlb	1	; select bank1
  9731  0A85  00B3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  9732  0A86  0020               	movlb	0	; select bank0
  9733  0A87  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  9734  0A88  0021               	movlb	1	; select bank1
  9735  0A89  00B2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  9736  0A8A                     l656:
  9737  0A8A  0008               	return
  9738  0A8B                     __end_of_EUSART_SetOverrunErrorHandler:
  9739                           
  9740                           	psect	text17
  9741  0A79                     __ptext17:	
  9742 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  9743 ;; Defined at:
  9744 ;;		line 260 in file "eusart.c"
  9745 ;; Parameters:    Size  Location     Type
  9746 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9747 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  9748 ;; Auto vars:     Size  Location     Type
  9749 ;;		None
  9750 ;; Return value:  Size  Location     Type
  9751 ;;                  1    wreg      void 
  9752 ;; Registers used:
  9753 ;;		wreg
  9754 ;; Tracked objects:
  9755 ;;		On entry : 0/0
  9756 ;;		On exit  : 0/0
  9757 ;;		Unchanged: 0/0
  9758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9759 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9762 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9763 ;;Total ram usage:        2 bytes
  9764 ;; Hardware stack levels used: 1
  9765 ;; Hardware stack levels required when called: 4
  9766 ;; This function calls:
  9767 ;;		Nothing
  9768 ;; This function is called by:
  9769 ;;		_EUSART_Initialize
  9770 ;; This function uses a non-reentrant model
  9771 ;;
  9772                           
  9773  0A79                     _EUSART_SetFramingErrorHandler:	
  9774                           ;psect for function _EUSART_SetFramingErrorHandler
  9775                           
  9776  0A79                     l3312:	
  9777                           ;incstack = 0
  9778                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9779                           
  9780                           
  9781                           ;eusart.c: 261:     EUSART_FramingErrorHandler = interruptHandler;
  9782  0A79  0020               	movlb	0	; select bank0
  9783  0A7A  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  9784  0A7B  0021               	movlb	1	; select bank1
  9785  0A7C  00B5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  9786  0A7D  0020               	movlb	0	; select bank0
  9787  0A7E  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  9788  0A7F  0021               	movlb	1	; select bank1
  9789  0A80  00B4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  9790  0A81                     l653:
  9791  0A81  0008               	return
  9792  0A82                     __end_of_EUSART_SetFramingErrorHandler:
  9793                           
  9794                           	psect	text18
  9795  0A70                     __ptext18:	
  9796 ;; *************** function _EUSART_SetErrorHandler *****************
  9797 ;; Defined at:
  9798 ;;		line 272 in file "eusart.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9801 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9802 ;; Auto vars:     Size  Location     Type
  9803 ;;		None
  9804 ;; Return value:  Size  Location     Type
  9805 ;;                  1    wreg      void 
  9806 ;; Registers used:
  9807 ;;		wreg
  9808 ;; Tracked objects:
  9809 ;;		On entry : 0/0
  9810 ;;		On exit  : 0/0
  9811 ;;		Unchanged: 0/0
  9812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9813 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9817 ;;Total ram usage:        2 bytes
  9818 ;; Hardware stack levels used: 1
  9819 ;; Hardware stack levels required when called: 4
  9820 ;; This function calls:
  9821 ;;		Nothing
  9822 ;; This function is called by:
  9823 ;;		_EUSART_Initialize
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827  0A70                     _EUSART_SetErrorHandler:	
  9828                           ;psect for function _EUSART_SetErrorHandler
  9829                           
  9830  0A70                     l3316:	
  9831                           ;incstack = 0
  9832                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9833                           
  9834                           
  9835                           ;eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  9836  0A70  0020               	movlb	0	; select bank0
  9837  0A71  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9838  0A72  0021               	movlb	1	; select bank1
  9839  0A73  00B1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  9840  0A74  0020               	movlb	0	; select bank0
  9841  0A75  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9842  0A76  0021               	movlb	1	; select bank1
  9843  0A77  00B0               	movwf	_EUSART_ErrorHandler^(0+128)
  9844  0A78                     l659:
  9845  0A78  0008               	return
  9846  0A79                     __end_of_EUSART_SetErrorHandler:
  9847                           
  9848                           	psect	text19
  9849  0B3A                     __ptext19:	
  9850 ;; *************** function _CCP4_Initialize *****************
  9851 ;; Defined at:
  9852 ;;		line 18 in file "ccp4.c"
  9853 ;; Parameters:    Size  Location     Type
  9854 ;;		None
  9855 ;; Auto vars:     Size  Location     Type
  9856 ;;		None
  9857 ;; Return value:  Size  Location     Type
  9858 ;;                  1    wreg      void 
  9859 ;; Registers used:
  9860 ;;		wreg, status,2, status,0
  9861 ;; Tracked objects:
  9862 ;;		On entry : 0/0
  9863 ;;		On exit  : 0/0
  9864 ;;		Unchanged: 0/0
  9865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9870 ;;Total ram usage:        0 bytes
  9871 ;; Hardware stack levels used: 1
  9872 ;; Hardware stack levels required when called: 4
  9873 ;; This function calls:
  9874 ;;		Nothing
  9875 ;; This function is called by:
  9876 ;;		_SYSTEM_Initialize
  9877 ;; This function uses a non-reentrant model
  9878 ;;
  9879                           
  9880  0B3A                     _CCP4_Initialize:	
  9881                           ;psect for function _CCP4_Initialize
  9882                           
  9883  0B3A                     l3578:	
  9884                           ;incstack = 0
  9885                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0]
  9886                           
  9887                           
  9888                           ;ccp4.c: 21:  CCP4CON = 0x81;
  9889  0B3A  3081               	movlw	129
  9890  0B3B  0026               	movlb	6	; select bank6
  9891  0B3C  0097               	movwf	23	;volatile
  9892                           
  9893                           ;ccp4.c: 24:  CCPR4H = 0x11;
  9894  0B3D  3011               	movlw	17
  9895  0B3E  0096               	movwf	22	;volatile
  9896                           
  9897                           ;ccp4.c: 25:  CCPR4L = 0xC1;
  9898  0B3F  30C1               	movlw	193
  9899  0B40  0095               	movwf	21	;volatile
  9900  0B41                     l3580:
  9901                           
  9902                           ;ccp4.c: 28:  CCPTMRSbits.C4TSEL = 0x2;
  9903  0B41  0025               	movlb	5	; select bank5
  9904  0B42  081F               	movf	31,w	;volatile
  9905  0B43  393F               	andlw	-193
  9906  0B44  3880               	iorlw	128
  9907  0B45  009F               	movwf	31	;volatile
  9908  0B46                     l3582:
  9909                           
  9910                           ;ccp4.c: 31:     PIR4bits.CCP4IF = 0;
  9911  0B46  0020               	movlb	0	; select bank0
  9912  0B47  1194               	bcf	20,3	;volatile
  9913  0B48                     l3584:
  9914                           
  9915                           ;ccp4.c: 34:     PIE4bits.CCP4IE = 1;
  9916  0B48  0021               	movlb	1	; select bank1
  9917  0B49  1594               	bsf	20,3	;volatile
  9918  0B4A                     l890:
  9919  0B4A  0008               	return
  9920  0B4B                     __end_of_CCP4_Initialize:
  9921                           
  9922                           	psect	text20
  9923  0C0B                     __ptext20:	
  9924 ;; *************** function _CCP3_Initialize *****************
  9925 ;; Defined at:
  9926 ;;		line 49 in file "ccp3.c"
  9927 ;; Parameters:    Size  Location     Type
  9928 ;;		None
  9929 ;; Auto vars:     Size  Location     Type
  9930 ;;		None
  9931 ;; Return value:  Size  Location     Type
  9932 ;;                  1    wreg      void 
  9933 ;; Registers used:
  9934 ;;		wreg, status,2, status,0, pclath, cstack
  9935 ;; Tracked objects:
  9936 ;;		On entry : 0/0
  9937 ;;		On exit  : 0/0
  9938 ;;		Unchanged: 0/0
  9939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9944 ;;Total ram usage:        0 bytes
  9945 ;; Hardware stack levels used: 1
  9946 ;; Hardware stack levels required when called: 5
  9947 ;; This function calls:
  9948 ;;		_CCP3_SetCallBack
  9949 ;; This function is called by:
  9950 ;;		_SYSTEM_Initialize
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954  0C0B                     _CCP3_Initialize:	
  9955                           ;psect for function _CCP3_Initialize
  9956                           
  9957  0C0B                     l3508:	
  9958                           ;incstack = 0
  9959                           ; Regs used in _CCP3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9960                           
  9961                           
  9962                           ;ccp3.c: 52:  CCP3CON = 0x83;
  9963  0C0B  3083               	movlw	131
  9964  0C0C  0026               	movlb	6	; select bank6
  9965  0C0D  0093               	movwf	19	;volatile
  9966  0C0E                     l3510:
  9967                           
  9968                           ;ccp3.c: 55:  CCP3CAP = 0x00;
  9969  0C0E  0194               	clrf	20	;volatile
  9970  0C0F                     l3512:
  9971                           
  9972                           ;ccp3.c: 58:  CCPR3H = 0x00;
  9973  0C0F  0192               	clrf	18	;volatile
  9974  0C10                     l3514:
  9975                           
  9976                           ;ccp3.c: 61:  CCPR3L = 0x00;
  9977  0C10  0191               	clrf	17	;volatile
  9978  0C11                     l3516:
  9979                           
  9980                           ;ccp3.c: 64:     CCP3_SetCallBack(CCP3_DefaultCallBack);
  9981  0C11  30DC               	movlw	low _CCP3_DefaultCallBack
  9982  0C12  0020               	movlb	0	; select bank0
  9983  0C13  00A0               	movwf	CCP3_SetCallBack@customCallBack
  9984  0C14  300D               	movlw	high _CCP3_DefaultCallBack
  9985  0C15  00A1               	movwf	CCP3_SetCallBack@customCallBack+1
  9986  0C16  318A  2267  318C   	fcall	_CCP3_SetCallBack
  9987  0C19                     l3518:
  9988                           
  9989                           ;ccp3.c: 67:  CCPTMRSbits.C3TSEL = 0x1;
  9990  0C19  0025               	movlb	5	; select bank5
  9991  0C1A  081F               	movf	31,w	;volatile
  9992  0C1B  39CF               	andlw	-49
  9993  0C1C  3810               	iorlw	16
  9994  0C1D  009F               	movwf	31	;volatile
  9995  0C1E                     l3520:
  9996                           
  9997                           ;ccp3.c: 70:     PIR4bits.CCP3IF = 0;
  9998  0C1E  0020               	movlb	0	; select bank0
  9999  0C1F  1114               	bcf	20,2	;volatile
 10000  0C20                     l3522:
 10001                           
 10002                           ;ccp3.c: 73:     PIE4bits.CCP3IE = 1;
 10003  0C20  0021               	movlb	1	; select bank1
 10004  0C21  1514               	bsf	20,2	;volatile
 10005  0C22                     l470:
 10006  0C22  0008               	return
 10007  0C23                     __end_of_CCP3_Initialize:
 10008                           
 10009                           	psect	text21
 10010  0A67                     __ptext21:	
 10011 ;; *************** function _CCP3_SetCallBack *****************
 10012 ;; Defined at:
 10013 ;;		line 95 in file "ccp3.c"
 10014 ;; Parameters:    Size  Location     Type
 10015 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10016 ;;		 -> CCP3_DefaultCallBack(1), 
 10017 ;; Auto vars:     Size  Location     Type
 10018 ;;		None
 10019 ;; Return value:  Size  Location     Type
 10020 ;;                  1    wreg      void 
 10021 ;; Registers used:
 10022 ;;		wreg
 10023 ;; Tracked objects:
 10024 ;;		On entry : 0/0
 10025 ;;		On exit  : 0/0
 10026 ;;		Unchanged: 0/0
 10027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10028 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10031 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10032 ;;Total ram usage:        2 bytes
 10033 ;; Hardware stack levels used: 1
 10034 ;; Hardware stack levels required when called: 4
 10035 ;; This function calls:
 10036 ;;		Nothing
 10037 ;; This function is called by:
 10038 ;;		_CCP3_Initialize
 10039 ;; This function uses a non-reentrant model
 10040 ;;
 10041                           
 10042  0A67                     _CCP3_SetCallBack:	
 10043                           ;psect for function _CCP3_SetCallBack
 10044                           
 10045  0A67                     l3306:	
 10046                           ;incstack = 0
 10047                           ; Regs used in _CCP3_SetCallBack: [wreg]
 10048                           
 10049                           
 10050                           ;ccp3.c: 96:     CCP3_CallBack = customCallBack;
 10051  0A67  0020               	movlb	0	; select bank0
 10052  0A68  0821               	movf	CCP3_SetCallBack@customCallBack+1,w
 10053  0A69  0021               	movlb	1	; select bank1
 10054  0A6A  00C1               	movwf	(_CCP3_CallBack+1)^(0+128)
 10055  0A6B  0020               	movlb	0	; select bank0
 10056  0A6C  0820               	movf	CCP3_SetCallBack@customCallBack,w
 10057  0A6D  0021               	movlb	1	; select bank1
 10058  0A6E  00C0               	movwf	_CCP3_CallBack^(0+128)
 10059  0A6F                     l476:
 10060  0A6F  0008               	return
 10061  0A70                     __end_of_CCP3_SetCallBack:
 10062                           
 10063                           	psect	text22
 10064  0BF3                     __ptext22:	
 10065 ;; *************** function _CCP2_Initialize *****************
 10066 ;; Defined at:
 10067 ;;		line 49 in file "ccp2.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;		None
 10070 ;; Auto vars:     Size  Location     Type
 10071 ;;		None
 10072 ;; Return value:  Size  Location     Type
 10073 ;;                  1    wreg      void 
 10074 ;; Registers used:
 10075 ;;		wreg, status,2, status,0, pclath, cstack
 10076 ;; Tracked objects:
 10077 ;;		On entry : 0/0
 10078 ;;		On exit  : 0/0
 10079 ;;		Unchanged: 0/0
 10080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10085 ;;Total ram usage:        0 bytes
 10086 ;; Hardware stack levels used: 1
 10087 ;; Hardware stack levels required when called: 5
 10088 ;; This function calls:
 10089 ;;		_CCP2_SetCallBack
 10090 ;; This function is called by:
 10091 ;;		_SYSTEM_Initialize
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           
 10095  0BF3                     _CCP2_Initialize:	
 10096                           ;psect for function _CCP2_Initialize
 10097                           
 10098  0BF3                     l3562:	
 10099                           ;incstack = 0
 10100                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10101                           
 10102                           
 10103                           ;ccp2.c: 52:  CCP2CON = 0x83;
 10104  0BF3  3083               	movlw	131
 10105  0BF4  0025               	movlb	5	; select bank5
 10106  0BF5  0097               	movwf	23	;volatile
 10107  0BF6                     l3564:
 10108                           
 10109                           ;ccp2.c: 55:  CCP2CAP = 0x00;
 10110  0BF6  0198               	clrf	24	;volatile
 10111  0BF7                     l3566:
 10112                           
 10113                           ;ccp2.c: 58:  CCPR2H = 0x00;
 10114  0BF7  0196               	clrf	22	;volatile
 10115  0BF8                     l3568:
 10116                           
 10117                           ;ccp2.c: 61:  CCPR2L = 0x00;
 10118  0BF8  0195               	clrf	21	;volatile
 10119  0BF9                     l3570:
 10120                           
 10121                           ;ccp2.c: 64:     CCP2_SetCallBack(CCP2_DefaultCallBack);
 10122  0BF9  30A1               	movlw	low _CCP2_DefaultCallBack
 10123  0BFA  0020               	movlb	0	; select bank0
 10124  0BFB  00A0               	movwf	CCP2_SetCallBack@customCallBack
 10125  0BFC  300D               	movlw	high _CCP2_DefaultCallBack
 10126  0BFD  00A1               	movwf	CCP2_SetCallBack@customCallBack+1
 10127  0BFE  318A  225E  318B   	fcall	_CCP2_SetCallBack
 10128  0C01                     l3572:
 10129                           
 10130                           ;ccp2.c: 67:  CCPTMRSbits.C2TSEL = 0x1;
 10131  0C01  0025               	movlb	5	; select bank5
 10132  0C02  081F               	movf	31,w	;volatile
 10133  0C03  39F3               	andlw	-13
 10134  0C04  3804               	iorlw	4
 10135  0C05  009F               	movwf	31	;volatile
 10136  0C06                     l3574:
 10137                           
 10138                           ;ccp2.c: 70:     PIR4bits.CCP2IF = 0;
 10139  0C06  0020               	movlb	0	; select bank0
 10140  0C07  1094               	bcf	20,1	;volatile
 10141  0C08                     l3576:
 10142                           
 10143                           ;ccp2.c: 73:     PIE4bits.CCP2IE = 1;
 10144  0C08  0021               	movlb	1	; select bank1
 10145  0C09  1494               	bsf	20,1	;volatile
 10146  0C0A                     l424:
 10147  0C0A  0008               	return
 10148  0C0B                     __end_of_CCP2_Initialize:
 10149                           
 10150                           	psect	text23
 10151  0A5E                     __ptext23:	
 10152 ;; *************** function _CCP2_SetCallBack *****************
 10153 ;; Defined at:
 10154 ;;		line 95 in file "ccp2.c"
 10155 ;; Parameters:    Size  Location     Type
 10156 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10157 ;;		 -> CCP2_DefaultCallBack(1), 
 10158 ;; Auto vars:     Size  Location     Type
 10159 ;;		None
 10160 ;; Return value:  Size  Location     Type
 10161 ;;                  1    wreg      void 
 10162 ;; Registers used:
 10163 ;;		wreg
 10164 ;; Tracked objects:
 10165 ;;		On entry : 0/0
 10166 ;;		On exit  : 0/0
 10167 ;;		Unchanged: 0/0
 10168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10169 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10172 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10173 ;;Total ram usage:        2 bytes
 10174 ;; Hardware stack levels used: 1
 10175 ;; Hardware stack levels required when called: 4
 10176 ;; This function calls:
 10177 ;;		Nothing
 10178 ;; This function is called by:
 10179 ;;		_CCP2_Initialize
 10180 ;; This function uses a non-reentrant model
 10181 ;;
 10182                           
 10183  0A5E                     _CCP2_SetCallBack:	
 10184                           ;psect for function _CCP2_SetCallBack
 10185                           
 10186  0A5E                     l3304:	
 10187                           ;incstack = 0
 10188                           ; Regs used in _CCP2_SetCallBack: [wreg]
 10189                           
 10190                           
 10191                           ;ccp2.c: 96:     CCP2_CallBack = customCallBack;
 10192  0A5E  0020               	movlb	0	; select bank0
 10193  0A5F  0821               	movf	CCP2_SetCallBack@customCallBack+1,w
 10194  0A60  0021               	movlb	1	; select bank1
 10195  0A61  00C7               	movwf	(_CCP2_CallBack+1)^(0+128)
 10196  0A62  0020               	movlb	0	; select bank0
 10197  0A63  0820               	movf	CCP2_SetCallBack@customCallBack,w
 10198  0A64  0021               	movlb	1	; select bank1
 10199  0A65  00C6               	movwf	_CCP2_CallBack^(0+128)
 10200  0A66                     l430:
 10201  0A66  0008               	return
 10202  0A67                     __end_of_CCP2_SetCallBack:
 10203                           
 10204                           	psect	text24
 10205  0BDB                     __ptext24:	
 10206 ;; *************** function _CCP1_Initialize *****************
 10207 ;; Defined at:
 10208 ;;		line 49 in file "ccp1.c"
 10209 ;; Parameters:    Size  Location     Type
 10210 ;;		None
 10211 ;; Auto vars:     Size  Location     Type
 10212 ;;		None
 10213 ;; Return value:  Size  Location     Type
 10214 ;;                  1    wreg      void 
 10215 ;; Registers used:
 10216 ;;		wreg, status,2, status,0, pclath, cstack
 10217 ;; Tracked objects:
 10218 ;;		On entry : 0/0
 10219 ;;		On exit  : 0/0
 10220 ;;		Unchanged: 0/0
 10221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10226 ;;Total ram usage:        0 bytes
 10227 ;; Hardware stack levels used: 1
 10228 ;; Hardware stack levels required when called: 5
 10229 ;; This function calls:
 10230 ;;		_CCP1_SetCallBack
 10231 ;; This function is called by:
 10232 ;;		_SYSTEM_Initialize
 10233 ;; This function uses a non-reentrant model
 10234 ;;
 10235                           
 10236  0BDB                     _CCP1_Initialize:	
 10237                           ;psect for function _CCP1_Initialize
 10238                           
 10239  0BDB                     l3524:	
 10240                           ;incstack = 0
 10241                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10242                           
 10243                           
 10244                           ;ccp1.c: 52:  CCP1CON = 0x83;
 10245  0BDB  3083               	movlw	131
 10246  0BDC  0025               	movlb	5	; select bank5
 10247  0BDD  0093               	movwf	19	;volatile
 10248  0BDE                     l3526:
 10249                           
 10250                           ;ccp1.c: 55:  CCP1CAP = 0x00;
 10251  0BDE  0194               	clrf	20	;volatile
 10252  0BDF                     l3528:
 10253                           
 10254                           ;ccp1.c: 58:  CCPR1H = 0x00;
 10255  0BDF  0192               	clrf	18	;volatile
 10256  0BE0                     l3530:
 10257                           
 10258                           ;ccp1.c: 61:  CCPR1L = 0x00;
 10259  0BE0  0191               	clrf	17	;volatile
 10260  0BE1                     l3532:
 10261                           
 10262                           ;ccp1.c: 64:     CCP1_SetCallBack(CCP1_DefaultCallBack);
 10263  0BE1  3066               	movlw	low _CCP1_DefaultCallBack
 10264  0BE2  0020               	movlb	0	; select bank0
 10265  0BE3  00A0               	movwf	CCP1_SetCallBack@customCallBack
 10266  0BE4  300D               	movlw	high _CCP1_DefaultCallBack
 10267  0BE5  00A1               	movwf	CCP1_SetCallBack@customCallBack+1
 10268  0BE6  318A  2255  318B   	fcall	_CCP1_SetCallBack
 10269  0BE9                     l3534:
 10270                           
 10271                           ;ccp1.c: 67:  CCPTMRSbits.C1TSEL = 0x1;
 10272  0BE9  0025               	movlb	5	; select bank5
 10273  0BEA  081F               	movf	31,w	;volatile
 10274  0BEB  39FC               	andlw	-4
 10275  0BEC  3801               	iorlw	1
 10276  0BED  009F               	movwf	31	;volatile
 10277  0BEE                     l3536:
 10278                           
 10279                           ;ccp1.c: 70:     PIR4bits.CCP1IF = 0;
 10280  0BEE  0020               	movlb	0	; select bank0
 10281  0BEF  1014               	bcf	20,0	;volatile
 10282  0BF0                     l3538:
 10283                           
 10284                           ;ccp1.c: 73:     PIE4bits.CCP1IE = 1;
 10285  0BF0  0021               	movlb	1	; select bank1
 10286  0BF1  1414               	bsf	20,0	;volatile
 10287  0BF2                     l378:
 10288  0BF2  0008               	return
 10289  0BF3                     __end_of_CCP1_Initialize:
 10290                           
 10291                           	psect	text25
 10292  0A55                     __ptext25:	
 10293 ;; *************** function _CCP1_SetCallBack *****************
 10294 ;; Defined at:
 10295 ;;		line 95 in file "ccp1.c"
 10296 ;; Parameters:    Size  Location     Type
 10297 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10298 ;;		 -> CCP1_DefaultCallBack(1), 
 10299 ;; Auto vars:     Size  Location     Type
 10300 ;;		None
 10301 ;; Return value:  Size  Location     Type
 10302 ;;                  1    wreg      void 
 10303 ;; Registers used:
 10304 ;;		wreg
 10305 ;; Tracked objects:
 10306 ;;		On entry : 0/0
 10307 ;;		On exit  : 0/0
 10308 ;;		Unchanged: 0/0
 10309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10310 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10313 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10314 ;;Total ram usage:        2 bytes
 10315 ;; Hardware stack levels used: 1
 10316 ;; Hardware stack levels required when called: 4
 10317 ;; This function calls:
 10318 ;;		Nothing
 10319 ;; This function is called by:
 10320 ;;		_CCP1_Initialize
 10321 ;; This function uses a non-reentrant model
 10322 ;;
 10323                           
 10324  0A55                     _CCP1_SetCallBack:	
 10325                           ;psect for function _CCP1_SetCallBack
 10326                           
 10327  0A55                     l3302:	
 10328                           ;incstack = 0
 10329                           ; Regs used in _CCP1_SetCallBack: [wreg]
 10330                           
 10331                           
 10332                           ;ccp1.c: 96:     CCP1_CallBack = customCallBack;
 10333  0A55  0020               	movlb	0	; select bank0
 10334  0A56  0821               	movf	CCP1_SetCallBack@customCallBack+1,w
 10335  0A57  0021               	movlb	1	; select bank1
 10336  0A58  00CD               	movwf	(_CCP1_CallBack+1)^(0+128)
 10337  0A59  0020               	movlb	0	; select bank0
 10338  0A5A  0820               	movf	CCP1_SetCallBack@customCallBack,w
 10339  0A5B  0021               	movlb	1	; select bank1
 10340  0A5C  00CC               	movwf	_CCP1_CallBack^(0+128)
 10341  0A5D                     l384:
 10342  0A5D  0008               	return
 10343  0A5E                     __end_of_CCP1_SetCallBack:
 10344                           
 10345                           	psect	text26
 10346  0788                     __ptext26:	
 10347 ;; *************** function _JSN_Sensor_Trig *****************
 10348 ;; Defined at:
 10349 ;;		line 87 in file "JSN_Sensor.c"
 10350 ;; Parameters:    Size  Location     Type
 10351 ;;  Sensor          1    wreg     PTR struct .
 10352 ;;		 -> Sens3(6), Sens2(6), Sens1(6), 
 10353 ;; Auto vars:     Size  Location     Type
 10354 ;;  Sensor          1   28[BANK0 ] PTR struct .
 10355 ;;		 -> Sens3(6), Sens2(6), Sens1(6), 
 10356 ;; Return value:  Size  Location     Type
 10357 ;;                  1    wreg      void 
 10358 ;; Registers used:
 10359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10360 ;; Tracked objects:
 10361 ;;		On entry : 0/0
 10362 ;;		On exit  : 0/0
 10363 ;;		Unchanged: 0/0
 10364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10367 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10368 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10369 ;;Total ram usage:        5 bytes
 10370 ;; Hardware stack levels used: 1
 10371 ;; Hardware stack levels required when called: 6
 10372 ;; This function calls:
 10373 ;;		_FRT_GetMicros
 10374 ;;		_WritePin
 10375 ;; This function is called by:
 10376 ;;		_main
 10377 ;; This function uses a non-reentrant model
 10378 ;;
 10379                           
 10380  0788                     _JSN_Sensor_Trig:	
 10381                           ;psect for function _JSN_Sensor_Trig
 10382                           
 10383                           
 10384                           ;incstack = 0
 10385                           ; Regs used in _JSN_Sensor_Trig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10386                           ;JSN_Sensor_Trig@Sensor stored from wreg
 10387  0788  0020               	movlb	0	; select bank0
 10388  0789  00BC               	movwf	JSN_Sensor_Trig@Sensor
 10389  078A                     l4052:
 10390                           
 10391                           ;JSN_Sensor.c: 88:     micros = FRT_GetMicros();
 10392  078A  318F  275B  3187   	fcall	_FRT_GetMicros
 10393  078D  0020               	movlb	0	; select bank0
 10394  078E  0829               	movf	?_FRT_GetMicros+3,w
 10395  078F  0022               	movlb	2	; select bank2
 10396  0790  00C3               	movwf	(_micros+3)^(0+256)
 10397  0791  0020               	movlb	0	; select bank0
 10398  0792  0828               	movf	?_FRT_GetMicros+2,w
 10399  0793  0022               	movlb	2	; select bank2
 10400  0794  00C2               	movwf	(_micros+2)^(0+256)
 10401  0795  0020               	movlb	0	; select bank0
 10402  0796  0827               	movf	?_FRT_GetMicros+1,w
 10403  0797  0022               	movlb	2	; select bank2
 10404  0798  00C1               	movwf	(_micros+1)^(0+256)
 10405  0799  0020               	movlb	0	; select bank0
 10406  079A  0826               	movf	?_FRT_GetMicros,w
 10407  079B  0022               	movlb	2	; select bank2
 10408  079C  00C0               	movwf	_micros^(0+256)
 10409  079D                     l4054:
 10410                           
 10411                           ;JSN_Sensor.c: 91:     WritePin(Sensor->trigPin, 1);
 10412  079D  0020               	movlb	0	; select bank0
 10413  079E  01A0               	clrf	WritePin@val
 10414  079F  0AA0               	incf	WritePin@val,f
 10415  07A0  083C               	movf	JSN_Sensor_Trig@Sensor,w
 10416  07A1  3E04               	addlw	4
 10417  07A2  0086               	movwf	6
 10418  07A3  3001               	movlw	1	; select bank2/3
 10419  07A4  0087               	movwf	7
 10420  07A5  0801               	movf	1,w
 10421  07A6  3183  238D  3187   	fcall	_WritePin
 10422  07A9                     l4056:	
 10423                           ;JSN_Sensor.c: 94:     while ((FRT_GetMicros() - micros) < 11);
 10424                           
 10425  07A9  318F  275B  3187   	fcall	_FRT_GetMicros
 10426  07AC  0022               	movlb	2	; select bank2
 10427  07AD  0840               	movf	_micros^(0+256),w
 10428  07AE  0020               	movlb	0	; select bank0
 10429  07AF  0226               	subwf	?_FRT_GetMicros,w
 10430  07B0  00B8               	movwf	??_JSN_Sensor_Trig
 10431  07B1  0022               	movlb	2	; select bank2
 10432  07B2  0841               	movf	(_micros+1)^(0+256),w
 10433  07B3  0020               	movlb	0	; select bank0
 10434  07B4  3B27               	subwfb	?_FRT_GetMicros+1,w
 10435  07B5  00B9               	movwf	??_JSN_Sensor_Trig+1
 10436  07B6  0022               	movlb	2	; select bank2
 10437  07B7  0842               	movf	(_micros+2)^(0+256),w
 10438  07B8  0020               	movlb	0	; select bank0
 10439  07B9  3B28               	subwfb	?_FRT_GetMicros+2,w
 10440  07BA  00BA               	movwf	??_JSN_Sensor_Trig+2
 10441  07BB  0022               	movlb	2	; select bank2
 10442  07BC  0843               	movf	(_micros+3)^(0+256),w
 10443  07BD  0020               	movlb	0	; select bank0
 10444  07BE  3B29               	subwfb	?_FRT_GetMicros+3,w
 10445  07BF  00BB               	movwf	??_JSN_Sensor_Trig+3
 10446  07C0  083B               	movf	??_JSN_Sensor_Trig+3,w
 10447  07C1  1D03               	btfss	3,2
 10448  07C2  2FCF               	goto	u1440
 10449  07C3  083A               	movf	??_JSN_Sensor_Trig+2,w
 10450  07C4  1D03               	btfss	3,2
 10451  07C5  2FCF               	goto	u1440
 10452  07C6  0839               	movf	??_JSN_Sensor_Trig+1,w
 10453  07C7  1D03               	btfss	3,2
 10454  07C8  2FCF               	goto	u1440
 10455  07C9  300B               	movlw	11
 10456  07CA  0238               	subwf	??_JSN_Sensor_Trig,w
 10457  07CB  1C03               	btfss	3,0
 10458  07CC  2FCE               	goto	u1441
 10459  07CD  2FCF               	goto	u1440
 10460  07CE                     u1441:
 10461  07CE  2FA9               	goto	l4056
 10462  07CF                     u1440:
 10463  07CF                     l4058:
 10464                           
 10465                           ;JSN_Sensor.c: 97:     WritePin(Sensor->trigPin, 0);
 10466  07CF  0020               	movlb	0	; select bank0
 10467  07D0  01A0               	clrf	WritePin@val
 10468  07D1  083C               	movf	JSN_Sensor_Trig@Sensor,w
 10469  07D2  3E04               	addlw	4
 10470  07D3  0086               	movwf	6
 10471  07D4  3001               	movlw	1	; select bank2/3
 10472  07D5  0087               	movwf	7
 10473  07D6  0801               	movf	1,w
 10474  07D7  3183  238D  3187   	fcall	_WritePin
 10475  07DA                     l4060:
 10476                           
 10477                           ;JSN_Sensor.c: 100:     lastTrig = Sensor;
 10478  07DA  0020               	movlb	0	; select bank0
 10479  07DB  083C               	movf	JSN_Sensor_Trig@Sensor,w
 10480  07DC  00B8               	movwf	??_JSN_Sensor_Trig
 10481  07DD  0838               	movf	??_JSN_Sensor_Trig,w
 10482  07DE  0021               	movlb	1	; select bank1
 10483  07DF  00DA               	movwf	_lastTrig^(0+128)
 10484  07E0                     l54:
 10485  07E0  0008               	return
 10486  07E1                     __end_of_JSN_Sensor_Trig:
 10487                           
 10488                           	psect	text27
 10489  0F5B                     __ptext27:	
 10490 ;; *************** function _FRT_GetMicros *****************
 10491 ;; Defined at:
 10492 ;;		line 32 in file "FRT.c"
 10493 ;; Parameters:    Size  Location     Type
 10494 ;;		None
 10495 ;; Auto vars:     Size  Location     Type
 10496 ;;		None
 10497 ;; Return value:  Size  Location     Type
 10498 ;;                  4    6[BANK0 ] unsigned long 
 10499 ;; Registers used:
 10500 ;;		wreg, status,2, status,0, pclath, cstack
 10501 ;; Tracked objects:
 10502 ;;		On entry : 0/0
 10503 ;;		On exit  : 0/0
 10504 ;;		Unchanged: 0/0
 10505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10506 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10508 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10509 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10510 ;;Total ram usage:       18 bytes
 10511 ;; Hardware stack levels used: 1
 10512 ;; Hardware stack levels required when called: 5
 10513 ;; This function calls:
 10514 ;;		_TMR0_GetCallBackNum
 10515 ;;		_TMR0_ReadTimer
 10516 ;;		___wmul
 10517 ;; This function is called by:
 10518 ;;		_JSN_Sensor_Trig
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           
 10522  0F5B                     _FRT_GetMicros:	
 10523                           ;psect for function _FRT_GetMicros
 10524                           
 10525  0F5B                     l3878:	
 10526                           ;incstack = 0
 10527                           ; Regs used in _FRT_GetMicros: [wreg+status,2+status,0+pclath+cstack]
 10528                           
 10529                           
 10530                           ;FRT.c: 33:     return (micros + (250*TMR0_GetCallBackNum()) + TMR0_ReadTimer());
 10531  0F5B  0022               	movlb	2	; select bank2
 10532  0F5C  0838               	movf	_micros@FRT$F1530^(0+256),w
 10533  0F5D  0020               	movlb	0	; select bank0
 10534  0F5E  00AA               	movwf	??_FRT_GetMicros
 10535  0F5F  0022               	movlb	2	; select bank2
 10536  0F60  0839               	movf	(_micros@FRT$F1530+1)^(0+256),w
 10537  0F61  0020               	movlb	0	; select bank0
 10538  0F62  00AB               	movwf	??_FRT_GetMicros+1
 10539  0F63  0022               	movlb	2	; select bank2
 10540  0F64  083A               	movf	(_micros@FRT$F1530+2)^(0+256),w
 10541  0F65  0020               	movlb	0	; select bank0
 10542  0F66  00AC               	movwf	??_FRT_GetMicros+2
 10543  0F67  0022               	movlb	2	; select bank2
 10544  0F68  083B               	movf	(_micros@FRT$F1530+3)^(0+256),w
 10545  0F69  0020               	movlb	0	; select bank0
 10546  0F6A  00AD               	movwf	??_FRT_GetMicros+3
 10547  0F6B  318A  223D  318F   	fcall	_TMR0_ReadTimer
 10548  0F6E  0020               	movlb	0	; select bank0
 10549  0F6F  00AE               	movwf	??_FRT_GetMicros+4
 10550  0F70  01AF               	clrf	??_FRT_GetMicros+5
 10551  0F71  01B0               	clrf	??_FRT_GetMicros+6
 10552  0F72  01B1               	clrf	??_FRT_GetMicros+7
 10553  0F73  3180  2002  318F   	fcall	_TMR0_GetCallBackNum
 10554  0F76  0020               	movlb	0	; select bank0
 10555  0F77  00B2               	movwf	??_FRT_GetMicros+8
 10556  0F78  01B3               	clrf	??_FRT_GetMicros+9
 10557  0F79  0832               	movf	??_FRT_GetMicros+8,w
 10558  0F7A  00A0               	movwf	___wmul@multiplier
 10559  0F7B  0833               	movf	??_FRT_GetMicros+9,w
 10560  0F7C  00A1               	movwf	___wmul@multiplier+1
 10561  0F7D  30FA               	movlw	250
 10562  0F7E  00A2               	movwf	___wmul@multiplicand
 10563  0F7F  3000               	movlw	0
 10564  0F80  00A3               	movwf	___wmul@multiplicand+1
 10565  0F81  318C  243E  318F   	fcall	___wmul
 10566  0F84  0020               	movlb	0	; select bank0
 10567  0F85  0820               	movf	?___wmul,w
 10568  0F86  00B4               	movwf	??_FRT_GetMicros+10
 10569  0F87  0821               	movf	?___wmul+1,w
 10570  0F88  00B5               	movwf	??_FRT_GetMicros+11
 10571  0F89  3000               	movlw	0
 10572  0F8A  1BB5               	btfsc	??_FRT_GetMicros+11,7
 10573  0F8B  30FF               	movlw	255
 10574  0F8C  00B6               	movwf	??_FRT_GetMicros+12
 10575  0F8D  00B7               	movwf	??_FRT_GetMicros+13
 10576  0F8E  0834               	movf	??_FRT_GetMicros+10,w
 10577  0F8F  07AE               	addwf	??_FRT_GetMicros+4,f
 10578  0F90  0835               	movf	??_FRT_GetMicros+11,w
 10579  0F91  3DAF               	addwfc	??_FRT_GetMicros+5,f
 10580  0F92  0836               	movf	??_FRT_GetMicros+12,w
 10581  0F93  3DB0               	addwfc	??_FRT_GetMicros+6,f
 10582  0F94  0837               	movf	??_FRT_GetMicros+13,w
 10583  0F95  3DB1               	addwfc	??_FRT_GetMicros+7,f
 10584  0F96  082E               	movf	??_FRT_GetMicros+4,w
 10585  0F97  07AA               	addwf	??_FRT_GetMicros,f
 10586  0F98  082F               	movf	??_FRT_GetMicros+5,w
 10587  0F99  3DAB               	addwfc	??_FRT_GetMicros+1,f
 10588  0F9A  0830               	movf	??_FRT_GetMicros+6,w
 10589  0F9B  3DAC               	addwfc	??_FRT_GetMicros+2,f
 10590  0F9C  0831               	movf	??_FRT_GetMicros+7,w
 10591  0F9D  3DAD               	addwfc	??_FRT_GetMicros+3,f
 10592  0F9E  082D               	movf	??_FRT_GetMicros+3,w
 10593  0F9F  00A9               	movwf	?_FRT_GetMicros+3
 10594  0FA0  082C               	movf	??_FRT_GetMicros+2,w
 10595  0FA1  00A8               	movwf	?_FRT_GetMicros+2
 10596  0FA2  082B               	movf	??_FRT_GetMicros+1,w
 10597  0FA3  00A7               	movwf	?_FRT_GetMicros+1
 10598  0FA4  082A               	movf	??_FRT_GetMicros,w
 10599  0FA5  00A6               	movwf	?_FRT_GetMicros
 10600  0FA6                     l800:
 10601  0FA6  0008               	return
 10602  0FA7                     __end_of_FRT_GetMicros:
 10603                           
 10604                           	psect	text28
 10605  0C3E                     __ptext28:	
 10606 ;; *************** function ___wmul *****************
 10607 ;; Defined at:
 10608 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 10609 ;; Parameters:    Size  Location     Type
 10610 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10611 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10612 ;; Auto vars:     Size  Location     Type
 10613 ;;  product         2    4[BANK0 ] unsigned int 
 10614 ;; Return value:  Size  Location     Type
 10615 ;;                  2    0[BANK0 ] unsigned int 
 10616 ;; Registers used:
 10617 ;;		wreg, status,2, status,0
 10618 ;; Tracked objects:
 10619 ;;		On entry : 0/0
 10620 ;;		On exit  : 0/0
 10621 ;;		Unchanged: 0/0
 10622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10623 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10624 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10626 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10627 ;;Total ram usage:        6 bytes
 10628 ;; Hardware stack levels used: 1
 10629 ;; Hardware stack levels required when called: 4
 10630 ;; This function calls:
 10631 ;;		Nothing
 10632 ;; This function is called by:
 10633 ;;		_FRT_GetMicros
 10634 ;; This function uses a non-reentrant model
 10635 ;;
 10636                           
 10637  0C3E                     ___wmul:	
 10638                           ;psect for function ___wmul
 10639                           
 10640  0C3E                     l3686:	
 10641                           ;incstack = 0
 10642                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10643                           
 10644  0C3E  0020               	movlb	0	; select bank0
 10645  0C3F  01A4               	clrf	___wmul@product
 10646  0C40  01A5               	clrf	___wmul@product+1
 10647  0C41                     l3688:
 10648  0C41  1C20               	btfss	___wmul@multiplier,0
 10649  0C42  2C44               	goto	u1271
 10650  0C43  2C45               	goto	u1270
 10651  0C44                     u1271:
 10652  0C44  2C49               	goto	l1148
 10653  0C45                     u1270:
 10654  0C45                     l3690:
 10655  0C45  0822               	movf	___wmul@multiplicand,w
 10656  0C46  07A4               	addwf	___wmul@product,f
 10657  0C47  0823               	movf	___wmul@multiplicand+1,w
 10658  0C48  3DA5               	addwfc	___wmul@product+1,f
 10659  0C49                     l1148:
 10660  0C49  3001               	movlw	1
 10661  0C4A                     u1285:
 10662  0C4A  35A2               	lslf	___wmul@multiplicand,f
 10663  0C4B  0DA3               	rlf	___wmul@multiplicand+1,f
 10664  0C4C  0B89               	decfsz	9,f
 10665  0C4D  2C4A               	goto	u1285
 10666  0C4E                     l3692:
 10667  0C4E  3001               	movlw	1
 10668  0C4F                     u1295:
 10669  0C4F  36A1               	lsrf	___wmul@multiplier+1,f
 10670  0C50  0CA0               	rrf	___wmul@multiplier,f
 10671  0C51  0B89               	decfsz	9,f
 10672  0C52  2C4F               	goto	u1295
 10673  0C53                     l3694:
 10674  0C53  0820               	movf	___wmul@multiplier,w
 10675  0C54  0421               	iorwf	___wmul@multiplier+1,w
 10676  0C55  1D03               	btfss	3,2
 10677  0C56  2C58               	goto	u1301
 10678  0C57  2C59               	goto	u1300
 10679  0C58                     u1301:
 10680  0C58  2C41               	goto	l3688
 10681  0C59                     u1300:
 10682  0C59                     l3696:
 10683  0C59  0825               	movf	___wmul@product+1,w
 10684  0C5A  00A1               	movwf	?___wmul+1
 10685  0C5B  0824               	movf	___wmul@product,w
 10686  0C5C  00A0               	movwf	?___wmul
 10687  0C5D                     l1150:
 10688  0C5D  0008               	return
 10689  0C5E                     __end_of___wmul:
 10690                           
 10691                           	psect	text29
 10692  0A3D                     __ptext29:	
 10693 ;; *************** function _TMR0_ReadTimer *****************
 10694 ;; Defined at:
 10695 ;;		line 62 in file "tmr0.c"
 10696 ;; Parameters:    Size  Location     Type
 10697 ;;		None
 10698 ;; Auto vars:     Size  Location     Type
 10699 ;;  readVal         1    1[BANK0 ] unsigned char 
 10700 ;; Return value:  Size  Location     Type
 10701 ;;                  1    wreg      unsigned char 
 10702 ;; Registers used:
 10703 ;;		wreg
 10704 ;; Tracked objects:
 10705 ;;		On entry : 0/0
 10706 ;;		On exit  : 0/0
 10707 ;;		Unchanged: 0/0
 10708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10710 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10711 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10712 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10713 ;;Total ram usage:        2 bytes
 10714 ;; Hardware stack levels used: 1
 10715 ;; Hardware stack levels required when called: 4
 10716 ;; This function calls:
 10717 ;;		Nothing
 10718 ;; This function is called by:
 10719 ;;		_FRT_GetMicros
 10720 ;; This function uses a non-reentrant model
 10721 ;;
 10722                           
 10723  0A3D                     _TMR0_ReadTimer:	
 10724                           ;psect for function _TMR0_ReadTimer
 10725                           
 10726  0A3D                     l3646:	
 10727                           ;incstack = 0
 10728                           ; Regs used in _TMR0_ReadTimer: [wreg]
 10729                           
 10730                           
 10731                           ;tmr0.c: 64:     uint8_t readVal;;tmr0.c: 67:     readVal = TMR0L;
 10732  0A3D  0020               	movlb	0	; select bank0
 10733  0A3E  0815               	movf	21,w	;volatile
 10734  0A3F  00A0               	movwf	??_TMR0_ReadTimer
 10735  0A40  0820               	movf	??_TMR0_ReadTimer,w
 10736  0A41  00A1               	movwf	TMR0_ReadTimer@readVal
 10737                           
 10738                           ;tmr0.c: 69:     return readVal;
 10739  0A42  0821               	movf	TMR0_ReadTimer@readVal,w
 10740  0A43                     l316:
 10741  0A43  0008               	return
 10742  0A44                     __end_of_TMR0_ReadTimer:
 10743                           
 10744                           	psect	text30
 10745  0002                     __ptext30:	
 10746 ;; *************** function _TMR0_GetCallBackNum *****************
 10747 ;; Defined at:
 10748 ;;		line 130 in file "tmr0.c"
 10749 ;; Parameters:    Size  Location     Type
 10750 ;;		None
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;		None
 10753 ;; Return value:  Size  Location     Type
 10754 ;;                  1    wreg      unsigned char 
 10755 ;; Registers used:
 10756 ;;		wreg
 10757 ;; Tracked objects:
 10758 ;;		On entry : 0/0
 10759 ;;		On exit  : 0/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10766 ;;Total ram usage:        0 bytes
 10767 ;; Hardware stack levels used: 1
 10768 ;; Hardware stack levels required when called: 4
 10769 ;; This function calls:
 10770 ;;		Nothing
 10771 ;; This function is called by:
 10772 ;;		_FRT_GetMicros
 10773 ;; This function uses a non-reentrant model
 10774 ;;
 10775                           
 10776  0002                     _TMR0_GetCallBackNum:	
 10777                           ;psect for function _TMR0_GetCallBackNum
 10778                           
 10779  0002                     l3658:	
 10780                           ;incstack = 0
 10781                           ; Regs used in _TMR0_GetCallBackNum: [wreg]
 10782                           
 10783                           
 10784                           ;tmr0.c: 131:     return CountCallBack;
 10785  0002  087D               	movf	_CountCallBack,w	;volatile
 10786  0003                     l338:
 10787  0003  0008               	return
 10788  0004                     __end_of_TMR0_GetCallBackNum:
 10789                           
 10790                           	psect	text31
 10791  0503                     __ptext31:	
 10792 ;; *************** function _JSN_Sensor_Init *****************
 10793 ;; Defined at:
 10794 ;;		line 32 in file "JSN_Sensor.c"
 10795 ;; Parameters:    Size  Location     Type
 10796 ;;  Sensor          1    wreg     PTR struct .
 10797 ;;		 -> Sens3(6), Sens2(6), Sens1(6), 
 10798 ;;  trigPin         1    2[BANK1 ] enum E7144
 10799 ;;  echoPin         1    3[BANK1 ] enum E7144
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;  Sensor          1    6[BANK1 ] PTR struct .
 10802 ;;		 -> Sens3(6), Sens2(6), Sens1(6), 
 10803 ;; Return value:  Size  Location     Type
 10804 ;;                  1    wreg      unsigned char 
 10805 ;; Registers used:
 10806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10807 ;; Tracked objects:
 10808 ;;		On entry : 0/0
 10809 ;;		On exit  : 0/0
 10810 ;;		Unchanged: 0/0
 10811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10812 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10813 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10814 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10815 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10816 ;;Total ram usage:        5 bytes
 10817 ;; Hardware stack levels used: 1
 10818 ;; Hardware stack levels required when called: 13
 10819 ;; This function calls:
 10820 ;;		_SetPin
 10821 ;;		_WritePin
 10822 ;;		_printf
 10823 ;; This function is called by:
 10824 ;;		_main
 10825 ;; This function uses a non-reentrant model
 10826 ;;
 10827                           
 10828  0503                     _JSN_Sensor_Init:	
 10829                           ;psect for function _JSN_Sensor_Init
 10830                           
 10831                           
 10832                           ;incstack = 0
 10833                           ; Regs used in _JSN_Sensor_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10834                           ;JSN_Sensor_Init@Sensor stored from wreg
 10835  0503  0021               	movlb	1	; select bank1
 10836  0504  00E1               	movwf	JSN_Sensor_Init@Sensor^(0+128)
 10837  0505                     l4000:
 10838                           
 10839                           ;JSN_Sensor.c: 39:     switch (echoPin) {
 10840  0505  2D19               	goto	l4012
 10841  0506                     l28:	
 10842                           ;JSN_Sensor.c: 42:         case C3:
 10843                           
 10844  0506                     l4002:
 10845                           
 10846                           ;JSN_Sensor.c: 44:             SetPin(echoPin, 1);
 10847  0506  0020               	movlb	0	; select bank0
 10848  0507  01A0               	clrf	SetPin@io
 10849  0508  0AA0               	incf	SetPin@io,f
 10850  0509  0021               	movlb	1	; select bank1
 10851  050A  085E               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 10852  050B  3184  2448  3185   	fcall	_SetPin
 10853                           
 10854                           ;JSN_Sensor.c: 45:             break;
 10855  050E  2D47               	goto	l4024
 10856  050F                     l4004:
 10857                           
 10858                           ;JSN_Sensor.c: 47:             printf("ERROR: Invalid echoPin (must be [A2, A4, C3, C5])
      +                          ");
 10859  050F  303A               	movlw	low (STR_1| (0+32768))
 10860  0510  0020               	movlb	0	; select bank0
 10861  0511  00EC               	movwf	printf@fmt
 10862  0512  3090               	movlw	high (STR_1| (0+32768))
 10863  0513  00ED               	movwf	printf@fmt+1
 10864  0514  318B  236E  3185   	fcall	_printf
 10865  0517                     l4006:
 10866                           
 10867                           ;JSN_Sensor.c: 48:             return 0xFF;
 10868  0517  30FF               	movlw	255
 10869  0518  2DA0               	goto	l32
 10870  0519                     l4012:
 10871  0519  085E               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 10872  051A  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 10873  051B  01E0               	clrf	(??_JSN_Sensor_Init^(0+128)+1)
 10874                           
 10875                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10876                           ; Switch size 1, requested type "simple"
 10877                           ; Number of cases is 1, Range of values is 0 to 0
 10878                           ; switch strategies available:
 10879                           ; Name         Instructions Cycles
 10880                           ; simple_byte            4     3 (average)
 10881                           ; direct_byte            8     6 (fixed)
 10882                           ; jumptable            260     6 (fixed)
 10883                           ;	Chosen strategy is simple_byte
 10884  051C  0860               	movf	(??_JSN_Sensor_Init+1)^(0+128),w
 10885  051D  3A00               	xorlw	0	; case 0
 10886  051E  1903               	skipnz
 10887  051F  2D21               	goto	l4580
 10888  0520  2D0F               	goto	l4004
 10889  0521                     l4580:
 10890                           
 10891                           ; Switch size 1, requested type "simple"
 10892                           ; Number of cases is 4, Range of values is 1 to 11
 10893                           ; switch strategies available:
 10894                           ; Name         Instructions Cycles
 10895                           ; simple_byte           13     7 (average)
 10896                           ; direct_byte           31     9 (fixed)
 10897                           ; jumptable            263     9 (fixed)
 10898                           ;	Chosen strategy is simple_byte
 10899  0521  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 10900  0522  3A01               	xorlw	1	; case 1
 10901  0523  1903               	skipnz
 10902  0524  2D06               	goto	l4002
 10903  0525  3A02               	xorlw	2	; case 3
 10904  0526  1903               	skipnz
 10905  0527  2D06               	goto	l4002
 10906  0528  3A06               	xorlw	6	; case 5
 10907  0529  1903               	skipnz
 10908  052A  2D06               	goto	l4002
 10909  052B  3A0E               	xorlw	14	; case 11
 10910  052C  1903               	skipnz
 10911  052D  2D06               	goto	l28
 10912  052E  2D0F               	goto	l4004
 10913  052F                     l37:	
 10914                           ;JSN_Sensor.c: 56:         case C7:
 10915                           
 10916  052F                     l4014:
 10917                           
 10918                           ;JSN_Sensor.c: 66:             SetPin(trigPin, 0);
 10919  052F  0020               	movlb	0	; select bank0
 10920  0530  01A0               	clrf	SetPin@io
 10921  0531  0021               	movlb	1	; select bank1
 10922  0532  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 10923  0533  3184  2448  3185   	fcall	_SetPin
 10924                           
 10925                           ;JSN_Sensor.c: 67:             WritePin(trigPin, 0);
 10926  0536  0020               	movlb	0	; select bank0
 10927  0537  01A0               	clrf	WritePin@val
 10928  0538  0021               	movlb	1	; select bank1
 10929  0539  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 10930  053A  3183  238D  3185   	fcall	_WritePin
 10931                           
 10932                           ;JSN_Sensor.c: 68:             break;
 10933  053D  2D79               	goto	l4026
 10934  053E                     l4016:
 10935                           
 10936                           ;JSN_Sensor.c: 70:             printf("ERROR: Invalid trigPin (must NOT be [A2, A3, A4, 
      +                          C3, C5])");
 10937  053E  3000               	movlw	low (STR_2| (0+32768))
 10938  053F  0020               	movlb	0	; select bank0
 10939  0540  00EC               	movwf	printf@fmt
 10940  0541  3090               	movlw	high (STR_2| (0+32768))
 10941  0542  00ED               	movwf	printf@fmt+1
 10942  0543  318B  236E  3185   	fcall	_printf
 10943  0546  2D17               	goto	l4006
 10944  0547                     l4024:
 10945  0547  0021               	movlb	1	; select bank1
 10946  0548  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 10947  0549  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 10948  054A  01E0               	clrf	(??_JSN_Sensor_Init^(0+128)+1)
 10949                           
 10950                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10951                           ; Switch size 1, requested type "simple"
 10952                           ; Number of cases is 1, Range of values is 0 to 0
 10953                           ; switch strategies available:
 10954                           ; Name         Instructions Cycles
 10955                           ; simple_byte            4     3 (average)
 10956                           ; direct_byte            8     6 (fixed)
 10957                           ; jumptable            260     6 (fixed)
 10958                           ;	Chosen strategy is simple_byte
 10959  054B  0860               	movf	(??_JSN_Sensor_Init+1)^(0+128),w
 10960  054C  3A00               	xorlw	0	; case 0
 10961  054D  1903               	skipnz
 10962  054E  2D50               	goto	l4582
 10963  054F  2D3E               	goto	l4016
 10964  0550                     l4582:
 10965                           
 10966                           ; Switch size 1, requested type "simple"
 10967                           ; Number of cases is 13, Range of values is 0 to 17
 10968                           ; switch strategies available:
 10969                           ; Name         Instructions Cycles
 10970                           ; simple_byte           40    21 (average)
 10971                           ; direct_byte           42     6 (fixed)
 10972                           ; jumptable            260     6 (fixed)
 10973                           ;	Chosen strategy is simple_byte
 10974  0550  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 10975  0551  3A00               	xorlw	0	; case 0
 10976  0552  1903               	skipnz
 10977  0553  2D2F               	goto	l37
 10978  0554  3A04               	xorlw	4	; case 4
 10979  0555  1903               	skipnz
 10980  0556  2D2F               	goto	l37
 10981  0557  3A02               	xorlw	2	; case 6
 10982  0558  1903               	skipnz
 10983  0559  2D2F               	goto	l37
 10984  055A  3A01               	xorlw	1	; case 7
 10985  055B  1903               	skipnz
 10986  055C  2D2F               	goto	l4014
 10987  055D  3A0F               	xorlw	15	; case 8
 10988  055E  1903               	skipnz
 10989  055F  2D2F               	goto	l4014
 10990  0560  3A01               	xorlw	1	; case 9
 10991  0561  1903               	skipnz
 10992  0562  2D2F               	goto	l4014
 10993  0563  3A03               	xorlw	3	; case 10
 10994  0564  1903               	skipnz
 10995  0565  2D2F               	goto	l4014
 10996  0566  3A06               	xorlw	6	; case 12
 10997  0567  1903               	skipnz
 10998  0568  2D2F               	goto	l4014
 10999  0569  3A01               	xorlw	1	; case 13
 11000  056A  1903               	skipnz
 11001  056B  2D2F               	goto	l4014
 11002  056C  3A03               	xorlw	3	; case 14
 11003  056D  1903               	skipnz
 11004  056E  2D2F               	goto	l4014
 11005  056F  3A01               	xorlw	1	; case 15
 11006  0570  1903               	skipnz
 11007  0571  2D2F               	goto	l4014
 11008  0572  3A1F               	xorlw	31	; case 16
 11009  0573  1903               	skipnz
 11010  0574  2D2F               	goto	l4014
 11011  0575  3A01               	xorlw	1	; case 17
 11012  0576  1903               	skipnz
 11013  0577  2D2F               	goto	l4014
 11014  0578  2D3E               	goto	l4016
 11015  0579                     l4026:
 11016                           
 11017                           ;JSN_Sensor.c: 75:     Sensor->distance = 0;
 11018  0579  0021               	movlb	1	; select bank1
 11019  057A  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11020  057B  3E02               	addlw	2
 11021  057C  0086               	movwf	6
 11022  057D  3001               	movlw	1	; select bank2/3
 11023  057E  0087               	movwf	7
 11024  057F  3000               	movlw	0
 11025  0580  3FC0               	movwi [0]fsr1
 11026  0581  3FC1               	movwi [1]fsr1
 11027  0582                     l4028:
 11028                           
 11029                           ;JSN_Sensor.c: 76:     Sensor->echoHighTime = 0;
 11030  0582  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11031  0583  0086               	movwf	6
 11032  0584  3001               	movlw	1	; select bank2/3
 11033  0585  0087               	movwf	7
 11034  0586  3000               	movlw	0
 11035  0587  3FC0               	movwi [0]fsr1
 11036  0588  3FC1               	movwi [1]fsr1
 11037  0589                     l4030:
 11038                           
 11039                           ;JSN_Sensor.c: 77:     Sensor->echoPin = echoPin;
 11040  0589  085E               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 11041  058A  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11042  058B  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11043  058C  3E05               	addlw	5
 11044  058D  0086               	movwf	6
 11045  058E  3001               	movlw	1	; select bank2/3
 11046  058F  0087               	movwf	7
 11047  0590  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11048  0591  0081               	movwf	1
 11049  0592                     l4032:
 11050                           
 11051                           ;JSN_Sensor.c: 78:     Sensor->trigPin = trigPin;
 11052  0592  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 11053  0593  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11054  0594  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11055  0595  3E04               	addlw	4
 11056  0596  0086               	movwf	6
 11057  0597  3001               	movlw	1	; select bank2/3
 11058  0598  0087               	movwf	7
 11059  0599  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11060  059A  0081               	movwf	1
 11061  059B                     l4034:
 11062                           
 11063                           ;JSN_Sensor.c: 80:     lastTrig = Sensor;
 11064  059B  0861               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11065  059C  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11066  059D  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11067  059E  00DA               	movwf	_lastTrig^(0+128)
 11068  059F                     l4036:
 11069                           
 11070                           ;JSN_Sensor.c: 82:     return 0x00;
 11071  059F  3000               	movlw	0
 11072  05A0                     l32:
 11073  05A0  0008               	return
 11074  05A1                     __end_of_JSN_Sensor_Init:
 11075                           
 11076                           	psect	text32
 11077  0B6E                     __ptext32:	
 11078 ;; *************** function _printf *****************
 11079 ;; Defined at:
 11080 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\printf.c"
 11081 ;; Parameters:    Size  Location     Type
 11082 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
 11083 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(58), 
 11084 ;;		 -> STR_1(50), 
 11085 ;; Auto vars:     Size  Location     Type
 11086 ;;  ret             2    0        int 
 11087 ;;  ap              1    1[BANK1 ] PTR void [1]
 11088 ;;		 -> ?_printf(2), 
 11089 ;; Return value:  Size  Location     Type
 11090 ;;                  2   76[BANK0 ] int 
 11091 ;; Registers used:
 11092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11093 ;; Tracked objects:
 11094 ;;		On entry : 0/0
 11095 ;;		On exit  : 0/0
 11096 ;;		Unchanged: 0/0
 11097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11098 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11099 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11100 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11101 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11102 ;;Total ram usage:        6 bytes
 11103 ;; Hardware stack levels used: 1
 11104 ;; Hardware stack levels required when called: 12
 11105 ;; This function calls:
 11106 ;;		_vfprintf
 11107 ;; This function is called by:
 11108 ;;		_JSN_Sensor_Init
 11109 ;;		_main
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           
 11113  0B6E                     _printf:	
 11114                           ;psect for function _printf
 11115                           
 11116  0B6E                     l3792:	
 11117                           ;incstack = 0
 11118                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11119                           
 11120  0B6E  306E               	movlw	(low ((?_printf| 0+2)))& (0+255)
 11121  0B6F  0021               	movlb	1	; select bank1
 11122  0B70  00DB               	movwf	??_printf^(0+128)
 11123  0B71  085B               	movf	??_printf^(0+128),w
 11124  0B72  00DC               	movwf	printf@ap^(0+128)
 11125  0B73                     l3794:
 11126  0B73  0020               	movlb	0	; select bank0
 11127  0B74  086D               	movf	printf@fmt+1,w
 11128  0B75  00E5               	movwf	vfprintf@fmt+1
 11129  0B76  086C               	movf	printf@fmt,w
 11130  0B77  00E4               	movwf	vfprintf@fmt
 11131  0B78  30DC               	movlw	(low (printf@ap| 0))& (0+255)
 11132  0B79  0021               	movlb	1	; select bank1
 11133  0B7A  00DB               	movwf	??_printf^(0+128)
 11134  0B7B  085B               	movf	??_printf^(0+128),w
 11135  0B7C  0020               	movlb	0	; select bank0
 11136  0B7D  00E6               	movwf	vfprintf@ap
 11137  0B7E  3000               	movlw	0
 11138  0B7F  318D  2501  318B   	fcall	_vfprintf
 11139  0B82                     l1611:
 11140  0B82  0008               	return
 11141  0B83                     __end_of_printf:
 11142                           
 11143                           	psect	text33
 11144  0D01                     __ptext33:	
 11145 ;; *************** function _vfprintf *****************
 11146 ;; Defined at:
 11147 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11148 ;; Parameters:    Size  Location     Type
 11149 ;;  fp              1    wreg     PTR struct _IO_FILE
 11150 ;;		 -> NULL(0), 
 11151 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
 11152 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(58), 
 11153 ;;		 -> STR_1(50), 
 11154 ;;  ap              1   70[BANK0 ] PTR PTR void 
 11155 ;;		 -> printf@ap(1), 
 11156 ;; Auto vars:     Size  Location     Type
 11157 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
 11158 ;;		 -> NULL(0), 
 11159 ;;  cfmt            2   74[BANK0 ] PTR unsigned char 
 11160 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(58), 
 11161 ;;		 -> STR_1(50), 
 11162 ;; Return value:  Size  Location     Type
 11163 ;;                  2   68[BANK0 ] int 
 11164 ;; Registers used:
 11165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11166 ;; Tracked objects:
 11167 ;;		On entry : 0/0
 11168 ;;		On exit  : 0/0
 11169 ;;		Unchanged: 0/0
 11170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11171 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11172 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11173 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11174 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11175 ;;Total ram usage:        8 bytes
 11176 ;; Hardware stack levels used: 1
 11177 ;; Hardware stack levels required when called: 11
 11178 ;; This function calls:
 11179 ;;		_vfpfcnvrt
 11180 ;; This function is called by:
 11181 ;;		_printf
 11182 ;; This function uses a non-reentrant model
 11183 ;;
 11184                           
 11185  0D01                     _vfprintf:	
 11186                           ;psect for function _vfprintf
 11187                           
 11188                           
 11189                           ;incstack = 0
 11190                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11191                           ;vfprintf@fp stored from wreg
 11192  0D01  0020               	movlb	0	; select bank0
 11193  0D02  00E9               	movwf	vfprintf@fp
 11194  0D03                     l3700:
 11195                           
 11196                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 11197  0D03  0865               	movf	vfprintf@fmt+1,w
 11198  0D04  00EB               	movwf	vfprintf@cfmt+1
 11199  0D05  0864               	movf	vfprintf@fmt,w
 11200  0D06  00EA               	movwf	vfprintf@cfmt
 11201  0D07                     l3702:
 11202                           
 11203                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 11204  0D07  0021               	movlb	1	; select bank1
 11205  0D08  01A0               	clrf	_nout^(0+128)
 11206  0D09  01A1               	clrf	(_nout+1)^(0+128)
 11207                           
 11208                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11209  0D0A  2D1F               	goto	l3706
 11210  0D0B                     l3704:
 11211                           
 11212                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 11213  0D0B  306A               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 11214  0D0C  00E7               	movwf	??_vfprintf
 11215  0D0D  0867               	movf	??_vfprintf,w
 11216  0D0E  00D4               	movwf	vfpfcnvrt@fmt
 11217  0D0F  0866               	movf	vfprintf@ap,w
 11218  0D10  00E8               	movwf	??_vfprintf+1
 11219  0D11  0868               	movf	??_vfprintf+1,w
 11220  0D12  00D5               	movwf	vfpfcnvrt@ap
 11221  0D13  0869               	movf	vfprintf@fp,w
 11222  0D14  3182  22CA  318D   	fcall	_vfpfcnvrt
 11223  0D17  0020               	movlb	0	; select bank0
 11224  0D18  0854               	movf	?_vfpfcnvrt,w
 11225  0D19  0021               	movlb	1	; select bank1
 11226  0D1A  07A0               	addwf	_nout^(0+128),f
 11227  0D1B  0020               	movlb	0	; select bank0
 11228  0D1C  0855               	movf	?_vfpfcnvrt+1,w
 11229  0D1D  0021               	movlb	1	; select bank1
 11230  0D1E  3DA1               	addwfc	(_nout+1)^(0+128),f
 11231  0D1F                     l3706:
 11232                           
 11233                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11234  0D1F  0020               	movlb	0	; select bank0
 11235  0D20  086A               	movf	vfprintf@cfmt,w
 11236  0D21  0084               	movwf	4
 11237  0D22  086B               	movf	vfprintf@cfmt+1,w
 11238  0D23  0085               	movwf	5
 11239  0D24  0012               	moviw fsr0++
 11240  0D25  1D03               	btfss	3,2
 11241  0D26  2D28               	goto	u1311
 11242  0D27  2D29               	goto	u1310
 11243  0D28                     u1311:
 11244  0D28  2D0B               	goto	l3704
 11245  0D29                     u1310:
 11246  0D29                     l3708:
 11247                           
 11248                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 11249  0D29  0021               	movlb	1	; select bank1
 11250  0D2A  0821               	movf	(_nout+1)^(0+128),w
 11251  0D2B  0020               	movlb	0	; select bank0
 11252  0D2C  00E5               	movwf	?_vfprintf+1
 11253  0D2D  0021               	movlb	1	; select bank1
 11254  0D2E  0820               	movf	_nout^(0+128),w
 11255  0D2F  0020               	movlb	0	; select bank0
 11256  0D30  00E4               	movwf	?_vfprintf
 11257  0D31                     l1668:
 11258  0D31  0008               	return
 11259  0D32                     __end_of_vfprintf:
 11260                           
 11261                           	psect	text34
 11262  02CA                     __ptext34:	
 11263 ;; *************** function _vfpfcnvrt *****************
 11264 ;; Defined at:
 11265 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;  fp              1    wreg     PTR struct _IO_FILE
 11268 ;;		 -> NULL(0), 
 11269 ;;  fmt             1   52[BANK0 ] PTR PTR unsigned char 
 11270 ;;		 -> vfprintf@cfmt(2), 
 11271 ;;  ap              1   53[BANK0 ] PTR PTR void 
 11272 ;;		 -> printf@ap(1), 
 11273 ;; Auto vars:     Size  Location     Type
 11274 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
 11275 ;;		 -> NULL(0), 
 11276 ;;  llu             8   59[BANK0 ] unsigned long long 
 11277 ;;  ll              8    0        long long 
 11278 ;;  f               4    0        long long 
 11279 ;;  ct              3    0        unsigned char [3]
 11280 ;;  vp              2    0        PTR void 
 11281 ;;  i               2    0        int 
 11282 ;;  done            2    0        int 
 11283 ;;  cp              2    0        PTR unsigned char 
 11284 ;;  c               1    0        unsigned char 
 11285 ;; Return value:  Size  Location     Type
 11286 ;;                  2   52[BANK0 ] int 
 11287 ;; Registers used:
 11288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11289 ;; Tracked objects:
 11290 ;;		On entry : 0/0
 11291 ;;		On exit  : 0/0
 11292 ;;		Unchanged: 0/0
 11293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11294 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11295 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11296 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11297 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11298 ;;Total ram usage:       16 bytes
 11299 ;; Hardware stack levels used: 1
 11300 ;; Hardware stack levels required when called: 10
 11301 ;; This function calls:
 11302 ;;		_fputc
 11303 ;;		_utoa
 11304 ;; This function is called by:
 11305 ;;		_vfprintf
 11306 ;; This function uses a non-reentrant model
 11307 ;;
 11308                           
 11309  02CA                     _vfpfcnvrt:	
 11310                           ;psect for function _vfpfcnvrt
 11311                           
 11312                           
 11313                           ;incstack = 0
 11314                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11315                           ;vfpfcnvrt@fp stored from wreg
 11316  02CA  0020               	movlb	0	; select bank0
 11317  02CB  00E3               	movwf	vfpfcnvrt@fp
 11318  02CC                     l3318:
 11319                           
 11320                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 11321  02CC  0854               	movf	vfpfcnvrt@fmt,w
 11322  02CD  0086               	movwf	6
 11323  02CE  0187               	clrf	7
 11324  02CF  3F40               	moviw [0]fsr1
 11325  02D0  00D6               	movwf	??_vfpfcnvrt
 11326  02D1  3F41               	moviw [1]fsr1
 11327  02D2  00D7               	movwf	??_vfpfcnvrt+1
 11328  02D3  0856               	movf	??_vfpfcnvrt,w
 11329  02D4  0084               	movwf	4
 11330  02D5  0857               	movf	??_vfpfcnvrt+1,w
 11331  02D6  0085               	movwf	5
 11332  02D7  0012               	moviw fsr0++
 11333  02D8  3A25               	xorlw	37
 11334  02D9  1D03               	btfss	3,2
 11335  02DA  2ADC               	goto	u1211
 11336  02DB  2ADD               	goto	u1210
 11337  02DC                     u1211:
 11338  02DC  2B69               	goto	l3352
 11339  02DD                     u1210:
 11340  02DD                     l3320:
 11341                           
 11342                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 11343  02DD  0854               	movf	vfpfcnvrt@fmt,w
 11344  02DE  0086               	movwf	6
 11345  02DF  0187               	clrf	7
 11346  02E0  3001               	movlw	1
 11347  02E1  0781               	addwf	1,f
 11348  02E2  3141               	addfsr 1,1
 11349  02E3  1803               	skipnc
 11350  02E4  0A81               	incf	1,f
 11351  02E5                     l3322:
 11352                           
 11353                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 11354  02E5  0021               	movlb	1	; select bank1
 11355  02E6  01A2               	clrf	_width^(0+128)
 11356  02E7  01A3               	clrf	(_width+1)^(0+128)
 11357  02E8  01A6               	clrf	_flags^(0+128)
 11358  02E9  01A7               	clrf	(_flags+1)^(0+128)
 11359  02EA                     l3324:
 11360                           
 11361                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 11362  02EA  30FF               	movlw	255
 11363  02EB  00A4               	movwf	_prec^(0+128)
 11364  02EC  30FF               	movlw	255
 11365  02ED  00A5               	movwf	(_prec^(0+128)+1)
 11366  02EE                     l3326:
 11367                           
 11368                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
 11369  02EE  0020               	movlb	0	; select bank0
 11370  02EF  0854               	movf	vfpfcnvrt@fmt,w
 11371  02F0  0086               	movwf	6
 11372  02F1  0187               	clrf	7
 11373  02F2  3F40               	moviw [0]fsr1
 11374  02F3  00D6               	movwf	??_vfpfcnvrt
 11375  02F4  3F41               	moviw [1]fsr1
 11376  02F5  00D7               	movwf	??_vfpfcnvrt+1
 11377  02F6  0856               	movf	??_vfpfcnvrt,w
 11378  02F7  0084               	movwf	4
 11379  02F8  0857               	movf	??_vfpfcnvrt+1,w
 11380  02F9  0085               	movwf	5
 11381  02FA  0012               	moviw fsr0++
 11382  02FB  3A75               	xorlw	117
 11383  02FC  1D03               	btfss	3,2
 11384  02FD  2AFF               	goto	u1221
 11385  02FE  2B00               	goto	u1220
 11386  02FF                     u1221:
 11387  02FF  2B34               	goto	l3336
 11388  0300                     u1220:
 11389  0300                     l3328:
 11390                           
 11391                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
 11392  0300  0854               	movf	vfpfcnvrt@fmt,w
 11393  0301  0086               	movwf	6
 11394  0302  0187               	clrf	7
 11395  0303  3001               	movlw	1
 11396  0304  0781               	addwf	1,f
 11397  0305  3141               	addfsr 1,1
 11398  0306  1803               	skipnc
 11399  0307  0A81               	incf	1,f
 11400  0308                     l3330:
 11401                           
 11402                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 11403  0308  0855               	movf	vfpfcnvrt@ap,w
 11404  0309  0086               	movwf	6
 11405  030A  0187               	clrf	7
 11406  030B  0801               	movf	1,w
 11407  030C  0084               	movwf	4
 11408  030D  0185               	clrf	5
 11409  030E  3002               	movlw	2
 11410  030F  0781               	addwf	1,f
 11411  0310  3F00               	moviw [0]fsr0
 11412  0311  00DB               	movwf	vfpfcnvrt@llu
 11413  0312  3F01               	moviw [1]fsr0
 11414  0313  00DC               	movwf	vfpfcnvrt@llu+1
 11415  0314  01DD               	clrf	vfpfcnvrt@llu+2
 11416  0315  01DE               	clrf	vfpfcnvrt@llu+3
 11417  0316  01DF               	clrf	vfpfcnvrt@llu+4
 11418  0317  01E0               	clrf	vfpfcnvrt@llu+5
 11419  0318  01E1               	clrf	vfpfcnvrt@llu+6
 11420  0319  01E2               	clrf	vfpfcnvrt@llu+7
 11421  031A                     l3332:
 11422                           
 11423                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
 11424  031A  085B               	movf	vfpfcnvrt@llu,w
 11425  031B  00BC               	movwf	utoa@d
 11426  031C  085C               	movf	vfpfcnvrt@llu+1,w
 11427  031D  00BD               	movwf	utoa@d+1
 11428  031E  085D               	movf	vfpfcnvrt@llu+2,w
 11429  031F  00BE               	movwf	utoa@d+2
 11430  0320  085E               	movf	vfpfcnvrt@llu+3,w
 11431  0321  00BF               	movwf	utoa@d+3
 11432  0322  085F               	movf	vfpfcnvrt@llu+4,w
 11433  0323  00C0               	movwf	utoa@d+4
 11434  0324  0860               	movf	vfpfcnvrt@llu+5,w
 11435  0325  00C1               	movwf	utoa@d+5
 11436  0326  0861               	movf	vfpfcnvrt@llu+6,w
 11437  0327  00C2               	movwf	utoa@d+6
 11438  0328  0862               	movf	vfpfcnvrt@llu+7,w
 11439  0329  00C3               	movwf	utoa@d+7
 11440  032A  0863               	movf	vfpfcnvrt@fp,w
 11441  032B  3181  21DB  3182   	fcall	_utoa
 11442  032E  0020               	movlb	0	; select bank0
 11443  032F  083D               	movf	?_utoa+1,w
 11444  0330  00D5               	movwf	?_vfpfcnvrt+1
 11445  0331  083C               	movf	?_utoa,w
 11446  0332  00D4               	movwf	?_vfpfcnvrt
 11447  0333  2B8C               	goto	l1661
 11448  0334                     l3336:
 11449                           
 11450                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 11451  0334  0854               	movf	vfpfcnvrt@fmt,w
 11452  0335  0086               	movwf	6
 11453  0336  0187               	clrf	7
 11454  0337  3F40               	moviw [0]fsr1
 11455  0338  00D6               	movwf	??_vfpfcnvrt
 11456  0339  3F41               	moviw [1]fsr1
 11457  033A  00D7               	movwf	??_vfpfcnvrt+1
 11458  033B  0856               	movf	??_vfpfcnvrt,w
 11459  033C  0084               	movwf	4
 11460  033D  0857               	movf	??_vfpfcnvrt+1,w
 11461  033E  0085               	movwf	5
 11462  033F  0012               	moviw fsr0++
 11463  0340  3A25               	xorlw	37
 11464  0341  1D03               	btfss	3,2
 11465  0342  2B44               	goto	u1231
 11466  0343  2B45               	goto	u1230
 11467  0344                     u1231:
 11468  0344  2B5E               	goto	l3346
 11469  0345                     u1230:
 11470  0345                     l3338:
 11471                           
 11472                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 11473  0345  0854               	movf	vfpfcnvrt@fmt,w
 11474  0346  0086               	movwf	6
 11475  0347  0187               	clrf	7
 11476  0348  3001               	movlw	1
 11477  0349  0781               	addwf	1,f
 11478  034A  3141               	addfsr 1,1
 11479  034B  1803               	skipnc
 11480  034C  0A81               	incf	1,f
 11481  034D                     l3340:
 11482                           
 11483                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 11484  034D  3025               	movlw	37
 11485  034E  00A3               	movwf	fputc@c
 11486  034F  3000               	movlw	0
 11487  0350  00A4               	movwf	fputc@c+1
 11488  0351  0863               	movf	vfpfcnvrt@fp,w
 11489  0352  00D6               	movwf	??_vfpfcnvrt
 11490  0353  0856               	movf	??_vfpfcnvrt,w
 11491  0354  00A5               	movwf	fputc@fp
 11492  0355  318E  26D2  3182   	fcall	_fputc
 11493  0358                     l3342:
 11494                           
 11495                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 11496  0358  3001               	movlw	1
 11497  0359  0020               	movlb	0	; select bank0
 11498  035A  00D4               	movwf	?_vfpfcnvrt
 11499  035B  3000               	movlw	0
 11500  035C  00D5               	movwf	?_vfpfcnvrt+1
 11501  035D  2B8C               	goto	l1661
 11502  035E                     l3346:
 11503                           
 11504                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 11505  035E  0854               	movf	vfpfcnvrt@fmt,w
 11506  035F  0086               	movwf	6
 11507  0360  0187               	clrf	7
 11508  0361  3001               	movlw	1
 11509  0362  0781               	addwf	1,f
 11510  0363  3141               	addfsr 1,1
 11511  0364  1803               	skipnc
 11512  0365  0A81               	incf	1,f
 11513  0366                     l3348:
 11514                           
 11515                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 11516  0366  01D4               	clrf	?_vfpfcnvrt
 11517  0367  01D5               	clrf	?_vfpfcnvrt+1
 11518  0368  2B8C               	goto	l1661
 11519  0369                     l3352:
 11520                           
 11521                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 11522  0369  0854               	movf	vfpfcnvrt@fmt,w
 11523  036A  0086               	movwf	6
 11524  036B  0187               	clrf	7
 11525  036C  3F40               	moviw [0]fsr1
 11526  036D  00D6               	movwf	??_vfpfcnvrt
 11527  036E  3F41               	moviw [1]fsr1
 11528  036F  00D7               	movwf	??_vfpfcnvrt+1
 11529  0370  0856               	movf	??_vfpfcnvrt,w
 11530  0371  0084               	movwf	4
 11531  0372  0857               	movf	??_vfpfcnvrt+1,w
 11532  0373  0085               	movwf	5
 11533  0374  0800               	movf	0,w	;code access
 11534  0375  00D8               	movwf	??_vfpfcnvrt+2
 11535  0376  01D9               	clrf	??_vfpfcnvrt+3
 11536  0377  0858               	movf	??_vfpfcnvrt+2,w
 11537  0378  00A3               	movwf	fputc@c
 11538  0379  0859               	movf	??_vfpfcnvrt+3,w
 11539  037A  00A4               	movwf	fputc@c+1
 11540  037B  0863               	movf	vfpfcnvrt@fp,w
 11541  037C  00DA               	movwf	??_vfpfcnvrt+4
 11542  037D  085A               	movf	??_vfpfcnvrt+4,w
 11543  037E  00A5               	movwf	fputc@fp
 11544  037F  318E  26D2  3182   	fcall	_fputc
 11545  0382                     l3354:
 11546                           
 11547                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 11548  0382  0020               	movlb	0	; select bank0
 11549  0383  0854               	movf	vfpfcnvrt@fmt,w
 11550  0384  0086               	movwf	6
 11551  0385  0187               	clrf	7
 11552  0386  3001               	movlw	1
 11553  0387  0781               	addwf	1,f
 11554  0388  3141               	addfsr 1,1
 11555  0389  1803               	skipnc
 11556  038A  0A81               	incf	1,f
 11557  038B  2B58               	goto	l3342
 11558  038C                     l1661:
 11559  038C  0008               	return
 11560  038D                     __end_of_vfpfcnvrt:
 11561                           
 11562                           	psect	text35
 11563  01DB                     __ptext35:	
 11564 ;; *************** function _utoa *****************
 11565 ;; Defined at:
 11566 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11567 ;; Parameters:    Size  Location     Type
 11568 ;;  fp              1    wreg     PTR struct _IO_FILE
 11569 ;;		 -> NULL(0), 
 11570 ;;  d               8   28[BANK0 ] unsigned long long 
 11571 ;; Auto vars:     Size  Location     Type
 11572 ;;  fp              1   39[BANK0 ] PTR struct _IO_FILE
 11573 ;;		 -> NULL(0), 
 11574 ;;  n               8   42[BANK0 ] unsigned long long 
 11575 ;;  i               2   50[BANK0 ] int 
 11576 ;;  w               2   40[BANK0 ] int 
 11577 ;;  p               2   37[BANK0 ] int 
 11578 ;; Return value:  Size  Location     Type
 11579 ;;                  2   28[BANK0 ] int 
 11580 ;; Registers used:
 11581 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11582 ;; Tracked objects:
 11583 ;;		On entry : 0/0
 11584 ;;		On exit  : 0/0
 11585 ;;		Unchanged: 0/0
 11586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11587 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11588 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11589 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11590 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11591 ;;Total ram usage:       24 bytes
 11592 ;; Hardware stack levels used: 1
 11593 ;; Hardware stack levels required when called: 9
 11594 ;; This function calls:
 11595 ;;		___lodiv
 11596 ;;		___lomod
 11597 ;;		_pad
 11598 ;; This function is called by:
 11599 ;;		_vfpfcnvrt
 11600 ;; This function uses a non-reentrant model
 11601 ;;
 11602                           
 11603  01DB                     _utoa:	
 11604                           ;psect for function _utoa
 11605                           
 11606                           
 11607                           ;incstack = 0
 11608                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11609                           ;utoa@fp stored from wreg
 11610  01DB  0020               	movlb	0	; select bank0
 11611  01DC  00C7               	movwf	utoa@fp
 11612  01DD                     l3264:
 11613                           
 11614                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
 11615  01DD  0021               	movlb	1	; select bank1
 11616  01DE  1BA5               	btfsc	(_prec+1)^(0+128),7
 11617  01DF  29E1               	goto	u1141
 11618  01E0  29E2               	goto	u1140
 11619  01E1                     u1141:
 11620  01E1  29E6               	goto	l1644
 11621  01E2                     u1140:
 11622  01E2                     l3266:
 11623                           
 11624                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
 11625  01E2  30FD               	movlw	253
 11626  01E3  05A6               	andwf	_flags^(0+128),f
 11627  01E4  30FF               	movlw	255
 11628  01E5  05A7               	andwf	(_flags+1)^(0+128),f
 11629  01E6                     l1644:	
 11630                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 623:     }
 11631                           
 11632                           
 11633                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
 11634  01E6  0825               	movf	(_prec+1)^(0+128),w
 11635  01E7  3A80               	xorlw	128
 11636  01E8  0020               	movlb	0	; select bank0
 11637  01E9  00C4               	movwf	??_utoa
 11638  01EA  3080               	movlw	128
 11639  01EB  0244               	subwf	??_utoa,w
 11640  01EC  1D03               	skipz
 11641  01ED  29F1               	goto	u1155
 11642  01EE  3001               	movlw	1
 11643  01EF  0021               	movlb	1	; select bank1
 11644  01F0  0224               	subwf	_prec^(0+128),w
 11645  01F1                     u1155:
 11646  01F1  1803               	skipnc
 11647  01F2  29F4               	goto	u1151
 11648  01F3  29F5               	goto	u1150
 11649  01F4                     u1151:
 11650  01F4  29FB               	goto	l3270
 11651  01F5                     u1150:
 11652  01F5                     l3268:
 11653  01F5  3001               	movlw	1
 11654  01F6  0020               	movlb	0	; select bank0
 11655  01F7  00C5               	movwf	utoa@p
 11656  01F8  3000               	movlw	0
 11657  01F9  00C6               	movwf	utoa@p+1
 11658  01FA  2A03               	goto	l1648
 11659  01FB                     l3270:
 11660  01FB  0021               	movlb	1	; select bank1
 11661  01FC  0825               	movf	(_prec+1)^(0+128),w
 11662  01FD  0020               	movlb	0	; select bank0
 11663  01FE  00C6               	movwf	utoa@p+1
 11664  01FF  0021               	movlb	1	; select bank1
 11665  0200  0824               	movf	_prec^(0+128),w
 11666  0201  0020               	movlb	0	; select bank0
 11667  0202  00C5               	movwf	utoa@p
 11668  0203                     l1648:
 11669                           
 11670                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
 11671  0203  0021               	movlb	1	; select bank1
 11672  0204  0823               	movf	(_width+1)^(0+128),w
 11673  0205  0020               	movlb	0	; select bank0
 11674  0206  00C9               	movwf	utoa@w+1
 11675  0207  0021               	movlb	1	; select bank1
 11676  0208  0822               	movf	_width^(0+128),w
 11677  0209  0020               	movlb	0	; select bank0
 11678  020A  00C8               	movwf	utoa@w
 11679  020B                     l3272:
 11680                           
 11681                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 628:     n = d;
 11682  020B  083C               	movf	utoa@d,w
 11683  020C  00CA               	movwf	utoa@n
 11684  020D  083D               	movf	utoa@d+1,w
 11685  020E  00CB               	movwf	utoa@n+1
 11686  020F  083E               	movf	utoa@d+2,w
 11687  0210  00CC               	movwf	utoa@n+2
 11688  0211  083F               	movf	utoa@d+3,w
 11689  0212  00CD               	movwf	utoa@n+3
 11690  0213  0840               	movf	utoa@d+4,w
 11691  0214  00CE               	movwf	utoa@n+4
 11692  0215  0841               	movf	utoa@d+5,w
 11693  0216  00CF               	movwf	utoa@n+5
 11694  0217  0842               	movf	utoa@d+6,w
 11695  0218  00D0               	movwf	utoa@n+6
 11696  0219  0843               	movf	utoa@d+7,w
 11697  021A  00D1               	movwf	utoa@n+7
 11698                           
 11699                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
 11700  021B  301F               	movlw	31
 11701  021C  00D2               	movwf	utoa@i
 11702  021D  3000               	movlw	0
 11703  021E  00D3               	movwf	utoa@i+1
 11704  021F                     l3274:
 11705                           
 11706                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
 11707  021F  0023               	movlb	3	; select bank3
 11708  0220  01BF               	clrf	(_dbuf^(0+384)+31)
 11709                           
 11710                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11711  0221  2A83               	goto	l3286
 11712  0222                     l3276:
 11713                           
 11714                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 632:         --i;
 11715  0222  30FF               	movlw	255
 11716  0223  0020               	movlb	0	; select bank0
 11717  0224  07D2               	addwf	utoa@i,f
 11718  0225  30FF               	movlw	255
 11719  0226  3DD3               	addwfc	utoa@i+1,f
 11720  0227                     l3278:
 11721                           
 11722                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
 11723  0227  300A               	movlw	10
 11724  0228  00A0               	movwf	___lomod@divisor
 11725  0229  01A1               	clrf	___lomod@divisor+1
 11726  022A  01A2               	clrf	___lomod@divisor+2
 11727  022B  01A3               	clrf	___lomod@divisor+3
 11728  022C  01A4               	clrf	___lomod@divisor+4
 11729  022D  01A5               	clrf	___lomod@divisor+5
 11730  022E  01A6               	clrf	___lomod@divisor+6
 11731  022F  01A7               	clrf	___lomod@divisor+7
 11732  0230  084A               	movf	utoa@n,w
 11733  0231  00A8               	movwf	___lomod@dividend
 11734  0232  084B               	movf	utoa@n+1,w
 11735  0233  00A9               	movwf	___lomod@dividend+1
 11736  0234  084C               	movf	utoa@n+2,w
 11737  0235  00AA               	movwf	___lomod@dividend+2
 11738  0236  084D               	movf	utoa@n+3,w
 11739  0237  00AB               	movwf	___lomod@dividend+3
 11740  0238  084E               	movf	utoa@n+4,w
 11741  0239  00AC               	movwf	___lomod@dividend+4
 11742  023A  084F               	movf	utoa@n+5,w
 11743  023B  00AD               	movwf	___lomod@dividend+5
 11744  023C  0850               	movf	utoa@n+6,w
 11745  023D  00AE               	movwf	___lomod@dividend+6
 11746  023E  0851               	movf	utoa@n+7,w
 11747  023F  00AF               	movwf	___lomod@dividend+7
 11748  0240  3186  26BC  3181   	fcall	___lomod
 11749  0243  0020               	movlb	0	; select bank0
 11750  0244  0820               	movf	?___lomod,w
 11751  0245  3E30               	addlw	48
 11752  0246  00C4               	movwf	??_utoa
 11753  0247  0852               	movf	utoa@i,w
 11754  0248  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11755  0249  0086               	movwf	6
 11756  024A  3001               	movlw	1	; select bank3/4
 11757  024B  0087               	movwf	7
 11758  024C  0844               	movf	??_utoa,w
 11759  024D  0081               	movwf	1
 11760  024E                     l3280:
 11761                           
 11762                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 634:         --p;
 11763  024E  30FF               	movlw	255
 11764  024F  07C5               	addwf	utoa@p,f
 11765  0250  30FF               	movlw	255
 11766  0251  3DC6               	addwfc	utoa@p+1,f
 11767  0252                     l3282:
 11768                           
 11769                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 635:         --w;
 11770  0252  30FF               	movlw	255
 11771  0253  07C8               	addwf	utoa@w,f
 11772  0254  30FF               	movlw	255
 11773  0255  3DC9               	addwfc	utoa@w+1,f
 11774  0256                     l3284:
 11775                           
 11776                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
 11777  0256  300A               	movlw	10
 11778  0257  00A0               	movwf	___lodiv@divisor
 11779  0258  01A1               	clrf	___lodiv@divisor+1
 11780  0259  01A2               	clrf	___lodiv@divisor+2
 11781  025A  01A3               	clrf	___lodiv@divisor+3
 11782  025B  01A4               	clrf	___lodiv@divisor+4
 11783  025C  01A5               	clrf	___lodiv@divisor+5
 11784  025D  01A6               	clrf	___lodiv@divisor+6
 11785  025E  01A7               	clrf	___lodiv@divisor+7
 11786  025F  084A               	movf	utoa@n,w
 11787  0260  00A8               	movwf	___lodiv@dividend
 11788  0261  084B               	movf	utoa@n+1,w
 11789  0262  00A9               	movwf	___lodiv@dividend+1
 11790  0263  084C               	movf	utoa@n+2,w
 11791  0264  00AA               	movwf	___lodiv@dividend+2
 11792  0265  084D               	movf	utoa@n+3,w
 11793  0266  00AB               	movwf	___lodiv@dividend+3
 11794  0267  084E               	movf	utoa@n+4,w
 11795  0268  00AC               	movwf	___lodiv@dividend+4
 11796  0269  084F               	movf	utoa@n+5,w
 11797  026A  00AD               	movwf	___lodiv@dividend+5
 11798  026B  0850               	movf	utoa@n+6,w
 11799  026C  00AE               	movwf	___lodiv@dividend+6
 11800  026D  0851               	movf	utoa@n+7,w
 11801  026E  00AF               	movwf	___lodiv@dividend+7
 11802  026F  3186  2638  3181   	fcall	___lodiv
 11803  0272  0020               	movlb	0	; select bank0
 11804  0273  0820               	movf	?___lodiv,w
 11805  0274  00CA               	movwf	utoa@n
 11806  0275  0821               	movf	?___lodiv+1,w
 11807  0276  00CB               	movwf	utoa@n+1
 11808  0277  0822               	movf	?___lodiv+2,w
 11809  0278  00CC               	movwf	utoa@n+2
 11810  0279  0823               	movf	?___lodiv+3,w
 11811  027A  00CD               	movwf	utoa@n+3
 11812  027B  0824               	movf	?___lodiv+4,w
 11813  027C  00CE               	movwf	utoa@n+4
 11814  027D  0825               	movf	?___lodiv+5,w
 11815  027E  00CF               	movwf	utoa@n+5
 11816  027F  0826               	movf	?___lodiv+6,w
 11817  0280  00D0               	movwf	utoa@n+6
 11818  0281  0827               	movf	?___lodiv+7,w
 11819  0282  00D1               	movwf	utoa@n+7
 11820  0283                     l3286:
 11821                           
 11822                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11823  0283  0020               	movlb	0	; select bank0
 11824  0284  0852               	movf	utoa@i,w
 11825  0285  0453               	iorwf	utoa@i+1,w
 11826  0286  1903               	btfsc	3,2
 11827  0287  2A89               	goto	u1161
 11828  0288  2A8A               	goto	u1160
 11829  0289                     u1161:
 11830  0289  2AB6               	goto	l3296
 11831  028A                     u1160:
 11832  028A                     l3288:
 11833  028A  084A               	movf	utoa@n,w
 11834  028B  044B               	iorwf	utoa@n+1,w
 11835  028C  044C               	iorwf	utoa@n+2,w
 11836  028D  044D               	iorwf	utoa@n+3,w
 11837  028E  044E               	iorwf	utoa@n+4,w
 11838  028F  044F               	iorwf	utoa@n+5,w
 11839  0290  0450               	iorwf	utoa@n+6,w
 11840  0291  0451               	iorwf	utoa@n+7,w
 11841  0292  1D03               	skipz
 11842  0293  2A95               	goto	u1171
 11843  0294  2A96               	goto	u1170
 11844  0295                     u1171:
 11845  0295  2A22               	goto	l3276
 11846  0296                     u1170:
 11847  0296                     l3290:
 11848  0296  0846               	movf	utoa@p+1,w
 11849  0297  3A80               	xorlw	128
 11850  0298  00C4               	movwf	??_utoa
 11851  0299  3080               	movlw	128
 11852  029A  0244               	subwf	??_utoa,w
 11853  029B  1D03               	skipz
 11854  029C  2A9F               	goto	u1185
 11855  029D  3001               	movlw	1
 11856  029E  0245               	subwf	utoa@p,w
 11857  029F                     u1185:
 11858  029F  1803               	skipnc
 11859  02A0  2AA2               	goto	u1181
 11860  02A1  2AA3               	goto	u1180
 11861  02A2                     u1181:
 11862  02A2  2A22               	goto	l3276
 11863  02A3                     u1180:
 11864  02A3                     l3292:
 11865  02A3  0020               	movlb	0	; select bank0
 11866  02A4  0849               	movf	utoa@w+1,w
 11867  02A5  3A80               	xorlw	128
 11868  02A6  00C4               	movwf	??_utoa
 11869  02A7  3080               	movlw	128
 11870  02A8  0244               	subwf	??_utoa,w
 11871  02A9  1D03               	skipz
 11872  02AA  2AAD               	goto	u1195
 11873  02AB  3001               	movlw	1
 11874  02AC  0248               	subwf	utoa@w,w
 11875  02AD                     u1195:
 11876  02AD  1C03               	skipc
 11877  02AE  2AB0               	goto	u1191
 11878  02AF  2AB1               	goto	u1190
 11879  02B0                     u1191:
 11880  02B0  2AB6               	goto	l3296
 11881  02B1                     u1190:
 11882  02B1                     l3294:
 11883  02B1  0021               	movlb	1	; select bank1
 11884  02B2  18A6               	btfsc	_flags^(0+128),1
 11885  02B3  2AB5               	goto	u1201
 11886  02B4  2AB6               	goto	u1200
 11887  02B5                     u1201:
 11888  02B5  2A22               	goto	l3276
 11889  02B6                     u1200:
 11890  02B6                     l3296:
 11891                           
 11892                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
 11893  02B6  0020               	movlb	0	; select bank0
 11894  02B7  0852               	movf	utoa@i,w
 11895  02B8  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11896  02B9  00C4               	movwf	??_utoa
 11897  02BA  0844               	movf	??_utoa,w
 11898  02BB  00B3               	movwf	pad@buf
 11899  02BC  0849               	movf	utoa@w+1,w
 11900  02BD  00B5               	movwf	pad@p+1
 11901  02BE  0848               	movf	utoa@w,w
 11902  02BF  00B4               	movwf	pad@p
 11903  02C0  0847               	movf	utoa@fp,w
 11904  02C1  318F  27A7  3181   	fcall	_pad
 11905  02C4  0020               	movlb	0	; select bank0
 11906  02C5  0834               	movf	?_pad+1,w
 11907  02C6  00BD               	movwf	?_utoa+1
 11908  02C7  0833               	movf	?_pad,w
 11909  02C8  00BC               	movwf	?_utoa
 11910  02C9                     l1656:
 11911  02C9  0008               	return
 11912  02CA                     __end_of_utoa:
 11913                           
 11914                           	psect	text36
 11915  0FA7                     __ptext36:	
 11916 ;; *************** function _pad *****************
 11917 ;; Defined at:
 11918 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;  fp              1    wreg     PTR struct _IO_FILE
 11921 ;;		 -> NULL(0), 
 11922 ;;  buf             1   19[BANK0 ] PTR unsigned char 
 11923 ;;		 -> dbuf(32), 
 11924 ;;  p               2   20[BANK0 ] int 
 11925 ;; Auto vars:     Size  Location     Type
 11926 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 11927 ;;		 -> NULL(0), 
 11928 ;;  w               2   25[BANK0 ] int 
 11929 ;;  i               2   23[BANK0 ] int 
 11930 ;; Return value:  Size  Location     Type
 11931 ;;                  2   19[BANK0 ] int 
 11932 ;; Registers used:
 11933 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11934 ;; Tracked objects:
 11935 ;;		On entry : 0/0
 11936 ;;		On exit  : 0/0
 11937 ;;		Unchanged: 0/0
 11938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11939 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11943 ;;Total ram usage:        9 bytes
 11944 ;; Hardware stack levels used: 1
 11945 ;; Hardware stack levels required when called: 8
 11946 ;; This function calls:
 11947 ;;		_fputc
 11948 ;;		_fputs
 11949 ;;		_strlen
 11950 ;; This function is called by:
 11951 ;;		_utoa
 11952 ;; This function uses a non-reentrant model
 11953 ;;
 11954                           
 11955  0FA7                     _pad:	
 11956                           ;psect for function _pad
 11957                           
 11958                           
 11959                           ;incstack = 0
 11960                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11961                           ;pad@fp stored from wreg
 11962  0FA7  0020               	movlb	0	; select bank0
 11963  0FA8  00BB               	movwf	pad@fp
 11964  0FA9                     l3244:
 11965                           
 11966                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 11967  0FA9  0021               	movlb	1	; select bank1
 11968  0FAA  1C26               	btfss	_flags^(0+128),0
 11969  0FAB  2FAD               	goto	u1101
 11970  0FAC  2FAE               	goto	u1100
 11971  0FAD                     u1101:
 11972  0FAD  2FB7               	goto	l3248
 11973  0FAE                     u1100:
 11974  0FAE                     l3246:
 11975                           
 11976                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 11977  0FAE  0020               	movlb	0	; select bank0
 11978  0FAF  083B               	movf	pad@fp,w
 11979  0FB0  00B6               	movwf	??_pad
 11980  0FB1  0836               	movf	??_pad,w
 11981  0FB2  00AB               	movwf	fputs@fp
 11982  0FB3  0833               	movf	pad@buf,w
 11983  0FB4  318C  2480  318F   	fcall	_fputs
 11984  0FB7                     l3248:
 11985                           
 11986                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 11987  0FB7  0020               	movlb	0	; select bank0
 11988  0FB8  1BB5               	btfsc	pad@p+1,7
 11989  0FB9  2FBB               	goto	u1111
 11990  0FBA  2FBC               	goto	u1110
 11991  0FBB                     u1111:
 11992  0FBB  2FC1               	goto	l3252
 11993  0FBC                     u1110:
 11994  0FBC                     l3250:
 11995  0FBC  0835               	movf	pad@p+1,w
 11996  0FBD  00BA               	movwf	pad@w+1
 11997  0FBE  0834               	movf	pad@p,w
 11998  0FBF  00B9               	movwf	pad@w
 11999  0FC0  2FC3               	goto	l1636
 12000  0FC1                     l3252:
 12001  0FC1  01B9               	clrf	pad@w
 12002  0FC2  01BA               	clrf	pad@w+1
 12003  0FC3                     l1636:
 12004                           
 12005                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12006  0FC3  01B7               	clrf	pad@i
 12007  0FC4  01B8               	clrf	pad@i+1
 12008                           
 12009                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12010  0FC5  2FD7               	goto	l3258
 12011  0FC6                     l3254:
 12012                           
 12013                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12014  0FC6  3020               	movlw	32
 12015  0FC7  0020               	movlb	0	; select bank0
 12016  0FC8  00A3               	movwf	fputc@c
 12017  0FC9  3000               	movlw	0
 12018  0FCA  00A4               	movwf	fputc@c+1
 12019  0FCB  083B               	movf	pad@fp,w
 12020  0FCC  00B6               	movwf	??_pad
 12021  0FCD  0836               	movf	??_pad,w
 12022  0FCE  00A5               	movwf	fputc@fp
 12023  0FCF  318E  26D2  318F   	fcall	_fputc
 12024  0FD2                     l3256:
 12025                           
 12026                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12027  0FD2  3001               	movlw	1
 12028  0FD3  0020               	movlb	0	; select bank0
 12029  0FD4  07B7               	addwf	pad@i,f
 12030  0FD5  3000               	movlw	0
 12031  0FD6  3DB8               	addwfc	pad@i+1,f
 12032  0FD7                     l3258:
 12033                           
 12034                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12035  0FD7  0838               	movf	pad@i+1,w
 12036  0FD8  3A80               	xorlw	128
 12037  0FD9  00B6               	movwf	??_pad
 12038  0FDA  083A               	movf	pad@w+1,w
 12039  0FDB  3A80               	xorlw	128
 12040  0FDC  0236               	subwf	??_pad,w
 12041  0FDD  1D03               	skipz
 12042  0FDE  2FE1               	goto	u1125
 12043  0FDF  0839               	movf	pad@w,w
 12044  0FE0  0237               	subwf	pad@i,w
 12045  0FE1                     u1125:
 12046  0FE1  1C03               	skipc
 12047  0FE2  2FE4               	goto	u1121
 12048  0FE3  2FE5               	goto	u1120
 12049  0FE4                     u1121:
 12050  0FE4  2FC6               	goto	l3254
 12051  0FE5                     u1120:
 12052  0FE5                     l1639:
 12053                           
 12054                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12055  0FE5  0021               	movlb	1	; select bank1
 12056  0FE6  1826               	btfsc	_flags^(0+128),0
 12057  0FE7  2FE9               	goto	u1131
 12058  0FE8  2FEA               	goto	u1130
 12059  0FE9                     u1131:
 12060  0FE9  2FF3               	goto	l1640
 12061  0FEA                     u1130:
 12062  0FEA                     l3260:
 12063                           
 12064                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12065  0FEA  0020               	movlb	0	; select bank0
 12066  0FEB  083B               	movf	pad@fp,w
 12067  0FEC  00B6               	movwf	??_pad
 12068  0FED  0836               	movf	??_pad,w
 12069  0FEE  00AB               	movwf	fputs@fp
 12070  0FEF  0833               	movf	pad@buf,w
 12071  0FF0  318C  2480  318F   	fcall	_fputs
 12072  0FF3                     l1640:	
 12073                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 92:     }
 12074                           
 12075                           
 12076                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12077  0FF3  0020               	movlb	0	; select bank0
 12078  0FF4  0833               	movf	pad@buf,w
 12079  0FF5  3187  27E1  318F   	fcall	_strlen
 12080  0FF8  0020               	movlb	0	; select bank0
 12081  0FF9  0839               	movf	pad@w,w
 12082  0FFA  0720               	addwf	?_strlen,w
 12083  0FFB  00B3               	movwf	?_pad
 12084  0FFC  083A               	movf	pad@w+1,w
 12085  0FFD  3D21               	addwfc	?_strlen+1,w
 12086  0FFE  00B4               	movwf	?_pad+1
 12087  0FFF                     l1641:
 12088  0FFF  0008               	return
 12089  1000                     __end_of_pad:
 12090                           
 12091                           	psect	text37
 12092  07E1                     __ptext37:	
 12093 ;; *************** function _strlen *****************
 12094 ;; Defined at:
 12095 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
 12096 ;; Parameters:    Size  Location     Type
 12097 ;;  s               1    wreg     PTR const unsigned char 
 12098 ;;		 -> dbuf(32), 
 12099 ;; Auto vars:     Size  Location     Type
 12100 ;;  s               1    4[BANK0 ] PTR const unsigned char 
 12101 ;;		 -> dbuf(32), 
 12102 ;;  a               1    3[BANK0 ] PTR const unsigned char 
 12103 ;;		 -> dbuf(32), 
 12104 ;; Return value:  Size  Location     Type
 12105 ;;                  2    0[BANK0 ] unsigned int 
 12106 ;; Registers used:
 12107 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12108 ;; Tracked objects:
 12109 ;;		On entry : 0/0
 12110 ;;		On exit  : 0/0
 12111 ;;		Unchanged: 0/0
 12112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12113 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12114 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12115 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12116 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12117 ;;Total ram usage:        5 bytes
 12118 ;; Hardware stack levels used: 1
 12119 ;; Hardware stack levels required when called: 4
 12120 ;; This function calls:
 12121 ;;		Nothing
 12122 ;; This function is called by:
 12123 ;;		_pad
 12124 ;; This function uses a non-reentrant model
 12125 ;;
 12126                           
 12127  07E1                     _strlen:	
 12128                           ;psect for function _strlen
 12129                           
 12130                           
 12131                           ;incstack = 0
 12132                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 12133                           ;strlen@s stored from wreg
 12134  07E1  0020               	movlb	0	; select bank0
 12135  07E2  00A4               	movwf	strlen@s
 12136  07E3                     l3196:
 12137  07E3  0824               	movf	strlen@s,w
 12138  07E4  00A2               	movwf	??_strlen
 12139  07E5  0822               	movf	??_strlen,w
 12140  07E6  00A3               	movwf	strlen@a
 12141  07E7  2FEC               	goto	l3200
 12142  07E8                     l3198:
 12143  07E8  3001               	movlw	1
 12144  07E9  00A2               	movwf	??_strlen
 12145  07EA  0822               	movf	??_strlen,w
 12146  07EB  07A4               	addwf	strlen@s,f
 12147  07EC                     l3200:
 12148  07EC  0824               	movf	strlen@s,w
 12149  07ED  0086               	movwf	6
 12150  07EE  3001               	movlw	1	; select bank2/3
 12151  07EF  0087               	movwf	7
 12152  07F0  0801               	movf	1,w
 12153  07F1  1D03               	btfss	3,2
 12154  07F2  2FF4               	goto	u1001
 12155  07F3  2FF5               	goto	u1000
 12156  07F4                     u1001:
 12157  07F4  2FE8               	goto	l3198
 12158  07F5                     u1000:
 12159  07F5                     l3202:
 12160  07F5  0823               	movf	strlen@a,w
 12161  07F6  0224               	subwf	strlen@s,w
 12162  07F7  00A0               	movwf	?_strlen
 12163  07F8  01A1               	clrf	?_strlen+1
 12164  07F9  1BA0               	btfsc	?_strlen,7
 12165  07FA  03A1               	decf	?_strlen+1,f
 12166  07FB                     l1694:
 12167  07FB  0008               	return
 12168  07FC                     __end_of_strlen:
 12169                           
 12170                           	psect	text38
 12171  0C80                     __ptext38:	
 12172 ;; *************** function _fputs *****************
 12173 ;; Defined at:
 12174 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
 12175 ;; Parameters:    Size  Location     Type
 12176 ;;  s               1    wreg     PTR const unsigned char 
 12177 ;;		 -> dbuf(32), 
 12178 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
 12179 ;;		 -> NULL(0), 
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;  s               1   18[BANK0 ] PTR const unsigned char 
 12182 ;;		 -> dbuf(32), 
 12183 ;;  i               2   16[BANK0 ] int 
 12184 ;;  c               1   15[BANK0 ] unsigned char 
 12185 ;; Return value:  Size  Location     Type
 12186 ;;                  2   11[BANK0 ] int 
 12187 ;; Registers used:
 12188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12189 ;; Tracked objects:
 12190 ;;		On entry : 0/0
 12191 ;;		On exit  : 0/0
 12192 ;;		Unchanged: 0/0
 12193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12194 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12195 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12196 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12197 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12198 ;;Total ram usage:        8 bytes
 12199 ;; Hardware stack levels used: 1
 12200 ;; Hardware stack levels required when called: 7
 12201 ;; This function calls:
 12202 ;;		_fputc
 12203 ;; This function is called by:
 12204 ;;		_pad
 12205 ;; This function uses a non-reentrant model
 12206 ;;
 12207                           
 12208  0C80                     _fputs:	
 12209                           ;psect for function _fputs
 12210                           
 12211                           
 12212                           ;incstack = 0
 12213                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12214                           ;fputs@s stored from wreg
 12215  0C80  0020               	movlb	0	; select bank0
 12216  0C81  00B2               	movwf	fputs@s
 12217  0C82                     l3188:
 12218  0C82  01B0               	clrf	fputs@i
 12219  0C83  01B1               	clrf	fputs@i+1
 12220  0C84  2C98               	goto	l3194
 12221  0C85                     l3190:
 12222  0C85  082F               	movf	fputs@c,w
 12223  0C86  00AC               	movwf	??_fputs
 12224  0C87  01AD               	clrf	??_fputs+1
 12225  0C88  082C               	movf	??_fputs,w
 12226  0C89  00A3               	movwf	fputc@c
 12227  0C8A  082D               	movf	??_fputs+1,w
 12228  0C8B  00A4               	movwf	fputc@c+1
 12229  0C8C  082B               	movf	fputs@fp,w
 12230  0C8D  00AE               	movwf	??_fputs+2
 12231  0C8E  082E               	movf	??_fputs+2,w
 12232  0C8F  00A5               	movwf	fputc@fp
 12233  0C90  318E  26D2  318C   	fcall	_fputc
 12234  0C93                     l3192:
 12235  0C93  3001               	movlw	1
 12236  0C94  0020               	movlb	0	; select bank0
 12237  0C95  07B0               	addwf	fputs@i,f
 12238  0C96  3000               	movlw	0
 12239  0C97  3DB1               	addwfc	fputs@i+1,f
 12240  0C98                     l3194:
 12241  0C98  0830               	movf	fputs@i,w
 12242  0C99  0732               	addwf	fputs@s,w
 12243  0C9A  00AC               	movwf	??_fputs
 12244  0C9B  082C               	movf	??_fputs,w
 12245  0C9C  0086               	movwf	6
 12246  0C9D  3001               	movlw	1	; select bank2/3
 12247  0C9E  0087               	movwf	7
 12248  0C9F  0801               	movf	1,w
 12249  0CA0  00AD               	movwf	??_fputs+1
 12250  0CA1  082D               	movf	??_fputs+1,w
 12251  0CA2  00AF               	movwf	fputs@c
 12252  0CA3  082F               	movf	fputs@c,w
 12253  0CA4  1D03               	btfss	3,2
 12254  0CA5  2CA7               	goto	u991
 12255  0CA6  2CA8               	goto	u990
 12256  0CA7                     u991:
 12257  0CA7  2C85               	goto	l3190
 12258  0CA8                     u990:
 12259  0CA8                     l1688:
 12260  0CA8  0008               	return
 12261  0CA9                     __end_of_fputs:
 12262                           
 12263                           	psect	text39
 12264  0ED2                     __ptext39:	
 12265 ;; *************** function _fputc *****************
 12266 ;; Defined at:
 12267 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
 12268 ;; Parameters:    Size  Location     Type
 12269 ;;  c               2    3[BANK0 ] int 
 12270 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
 12271 ;;		 -> NULL(0), 
 12272 ;; Auto vars:     Size  Location     Type
 12273 ;;		None
 12274 ;; Return value:  Size  Location     Type
 12275 ;;                  2    3[BANK0 ] int 
 12276 ;; Registers used:
 12277 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12278 ;; Tracked objects:
 12279 ;;		On entry : 0/0
 12280 ;;		On exit  : 0/0
 12281 ;;		Unchanged: 0/0
 12282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12283 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12285 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12286 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12287 ;;Total ram usage:        8 bytes
 12288 ;; Hardware stack levels used: 1
 12289 ;; Hardware stack levels required when called: 6
 12290 ;; This function calls:
 12291 ;;		_putch
 12292 ;; This function is called by:
 12293 ;;		_pad
 12294 ;;		_vfpfcnvrt
 12295 ;;		_fputs
 12296 ;; This function uses a non-reentrant model
 12297 ;;
 12298                           
 12299  0ED2                     _fputc:	
 12300                           ;psect for function _fputc
 12301                           
 12302  0ED2                     l3174:	
 12303                           ;incstack = 0
 12304                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12305                           
 12306  0ED2  0020               	movlb	0	; select bank0
 12307  0ED3  0825               	movf	fputc@fp,w
 12308  0ED4  1903               	btfsc	3,2
 12309  0ED5  2ED7               	goto	u951
 12310  0ED6  2ED8               	goto	u950
 12311  0ED7                     u951:
 12312  0ED7  2EDD               	goto	l3178
 12313  0ED8                     u950:
 12314  0ED8                     l3176:
 12315  0ED8  0825               	movf	fputc@fp,w
 12316  0ED9  1D03               	btfss	3,2
 12317  0EDA  2EDC               	goto	u961
 12318  0EDB  2EDD               	goto	u960
 12319  0EDC                     u961:
 12320  0EDC  2EE2               	goto	l3180
 12321  0EDD                     u960:
 12322  0EDD                     l3178:
 12323  0EDD  0823               	movf	fputc@c,w
 12324  0EDE  318A  2236  318E   	fcall	_putch
 12325  0EE1  2F14               	goto	l1680
 12326  0EE2                     l3180:
 12327  0EE2  0825               	movf	fputc@fp,w
 12328  0EE3  3E08               	addlw	8
 12329  0EE4  0086               	movwf	6
 12330  0EE5  0187               	clrf	7
 12331  0EE6  0016               	moviw fsr1++
 12332  0EE7  0401               	iorwf	1,w
 12333  0EE8  1903               	btfsc	3,2
 12334  0EE9  2EEB               	goto	u971
 12335  0EEA  2EEC               	goto	u970
 12336  0EEB                     u971:
 12337  0EEB  2F0A               	goto	l3184
 12338  0EEC                     u970:
 12339  0EEC                     l3182:
 12340  0EEC  0825               	movf	fputc@fp,w
 12341  0EED  3E08               	addlw	8
 12342  0EEE  0086               	movwf	6
 12343  0EEF  0187               	clrf	7
 12344  0EF0  3F40               	moviw [0]fsr1
 12345  0EF1  00A6               	movwf	??_fputc
 12346  0EF2  3F41               	moviw [1]fsr1
 12347  0EF3  00A7               	movwf	??_fputc+1
 12348  0EF4  0825               	movf	fputc@fp,w
 12349  0EF5  3E02               	addlw	2
 12350  0EF6  0086               	movwf	6
 12351  0EF7  0187               	clrf	7
 12352  0EF8  3F40               	moviw [0]fsr1
 12353  0EF9  00A8               	movwf	??_fputc+2
 12354  0EFA  3F41               	moviw [1]fsr1
 12355  0EFB  00A9               	movwf	??_fputc+3
 12356  0EFC  0829               	movf	??_fputc+3,w
 12357  0EFD  3A80               	xorlw	128
 12358  0EFE  00AA               	movwf	??_fputc+4
 12359  0EFF  0827               	movf	??_fputc+1,w
 12360  0F00  3A80               	xorlw	128
 12361  0F01  022A               	subwf	??_fputc+4,w
 12362  0F02  1D03               	skipz
 12363  0F03  2F06               	goto	u985
 12364  0F04  0826               	movf	??_fputc,w
 12365  0F05  0228               	subwf	??_fputc+2,w
 12366  0F06                     u985:
 12367  0F06  1803               	skipnc
 12368  0F07  2F09               	goto	u981
 12369  0F08  2F0A               	goto	u980
 12370  0F09                     u981:
 12371  0F09  2F14               	goto	l1680
 12372  0F0A                     u980:
 12373  0F0A                     l3184:
 12374  0F0A  0020               	movlb	0	; select bank0
 12375  0F0B  0825               	movf	fputc@fp,w
 12376  0F0C  3E02               	addlw	2
 12377  0F0D  0086               	movwf	6
 12378  0F0E  0187               	clrf	7
 12379  0F0F  3001               	movlw	1
 12380  0F10  0781               	addwf	1,f
 12381  0F11  3141               	addfsr 1,1
 12382  0F12  1803               	skipnc
 12383  0F13  0A81               	incf	1,f
 12384  0F14                     l1680:
 12385  0F14  0008               	return
 12386  0F15                     __end_of_fputc:
 12387                           
 12388                           	psect	text40
 12389  0A36                     __ptext40:	
 12390 ;; *************** function _putch *****************
 12391 ;; Defined at:
 12392 ;;		line 174 in file "eusart.c"
 12393 ;; Parameters:    Size  Location     Type
 12394 ;;  txData          1    wreg     unsigned char 
 12395 ;; Auto vars:     Size  Location     Type
 12396 ;;  txData          1    2[BANK0 ] unsigned char 
 12397 ;; Return value:  Size  Location     Type
 12398 ;;                  1    wreg      void 
 12399 ;; Registers used:
 12400 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12401 ;; Tracked objects:
 12402 ;;		On entry : 0/0
 12403 ;;		On exit  : 0/0
 12404 ;;		Unchanged: 0/0
 12405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12407 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12409 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12410 ;;Total ram usage:        1 bytes
 12411 ;; Hardware stack levels used: 1
 12412 ;; Hardware stack levels required when called: 5
 12413 ;; This function calls:
 12414 ;;		_EUSART_Write
 12415 ;; This function is called by:
 12416 ;;		_fputc
 12417 ;; This function uses a non-reentrant model
 12418 ;;
 12419                           
 12420  0A36                     _putch:	
 12421                           ;psect for function _putch
 12422                           
 12423                           
 12424                           ;incstack = 0
 12425                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12426                           ;putch@txData stored from wreg
 12427  0A36  0020               	movlb	0	; select bank0
 12428  0A37  00A2               	movwf	putch@txData
 12429  0A38                     l3172:
 12430                           
 12431                           ;eusart.c: 174: void putch(char txData);eusart.c: 175: {;eusart.c: 176:     EUSART_Write
      +                          (txData);
 12432  0A38  0822               	movf	putch@txData,w
 12433  0A39  318C  24D4  318A   	fcall	_EUSART_Write
 12434  0A3C                     l624:
 12435  0A3C  0008               	return
 12436  0A3D                     __end_of_putch:
 12437                           
 12438                           	psect	text41
 12439  0CD4                     __ptext41:	
 12440 ;; *************** function _EUSART_Write *****************
 12441 ;; Defined at:
 12442 ;;		line 142 in file "eusart.c"
 12443 ;; Parameters:    Size  Location     Type
 12444 ;;  txData          1    wreg     unsigned char 
 12445 ;; Auto vars:     Size  Location     Type
 12446 ;;  txData          1    1[BANK0 ] unsigned char 
 12447 ;; Return value:  Size  Location     Type
 12448 ;;                  1    wreg      void 
 12449 ;; Registers used:
 12450 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12451 ;; Tracked objects:
 12452 ;;		On entry : 0/0
 12453 ;;		On exit  : 0/0
 12454 ;;		Unchanged: 0/0
 12455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12457 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12458 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12459 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12460 ;;Total ram usage:        2 bytes
 12461 ;; Hardware stack levels used: 1
 12462 ;; Hardware stack levels required when called: 4
 12463 ;; This function calls:
 12464 ;;		Nothing
 12465 ;; This function is called by:
 12466 ;;		_putch
 12467 ;; This function uses a non-reentrant model
 12468 ;;
 12469                           
 12470  0CD4                     _EUSART_Write:	
 12471                           ;psect for function _EUSART_Write
 12472                           
 12473                           
 12474                           ;incstack = 0
 12475                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 12476                           ;EUSART_Write@txData stored from wreg
 12477  0CD4  0020               	movlb	0	; select bank0
 12478  0CD5  00A1               	movwf	EUSART_Write@txData
 12479  0CD6                     l3154:
 12480  0CD6                     l3156:	
 12481                           ;eusart.c: 142: void EUSART_Write(uint8_t txData);eusart.c: 143: {;eusart.c: 144:     wh
      +                          ile(0 == eusartTxBufferRemaining)
 12482                           
 12483                           
 12484                           ;eusart.c: 144:     while(0 == eusartTxBufferRemaining)
 12485  0CD6  0021               	movlb	1	; select bank1
 12486  0CD7  0852               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 12487  0CD8  1903               	btfsc	3,2
 12488  0CD9  2CDB               	goto	u921
 12489  0CDA  2CDC               	goto	u920
 12490  0CDB                     u921:
 12491  0CDB  2CD6               	goto	l3156
 12492  0CDC                     u920:
 12493  0CDC                     l614:
 12494                           
 12495                           ;eusart.c: 148:     if(0 == PIE1bits.TXIE)
 12496  0CDC  1A11               	btfsc	17,4	;volatile
 12497  0CDD  2CDF               	goto	u931
 12498  0CDE  2CE0               	goto	u930
 12499  0CDF                     u931:
 12500  0CDF  2CE5               	goto	l615
 12501  0CE0                     u930:
 12502  0CE0                     l3158:
 12503                           
 12504                           ;eusart.c: 149:     {;eusart.c: 150:         TX1REG = txData;
 12505  0CE0  0020               	movlb	0	; select bank0
 12506  0CE1  0821               	movf	EUSART_Write@txData,w
 12507  0CE2  0023               	movlb	3	; select bank3
 12508  0CE3  009A               	movwf	26	;volatile
 12509                           
 12510                           ;eusart.c: 151:     }
 12511  0CE4  2CFE               	goto	l3170
 12512  0CE5                     l615:	
 12513                           ;eusart.c: 152:     else
 12514                           
 12515                           
 12516                           ;eusart.c: 153:     {;eusart.c: 154:         PIE1bits.TXIE = 0;
 12517  0CE5  1211               	bcf	17,4	;volatile
 12518  0CE6                     l3160:
 12519                           
 12520                           ;eusart.c: 155:         eusartTxBuffer[eusartTxHead++] = txData;
 12521  0CE6  0020               	movlb	0	; select bank0
 12522  0CE7  0821               	movf	EUSART_Write@txData,w
 12523  0CE8  00A0               	movwf	??_EUSART_Write
 12524  0CE9  087C               	movf	_eusartTxHead,w
 12525  0CEA  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 12526  0CEB  0086               	movwf	6
 12527  0CEC  3001               	movlw	1	; select bank2/3
 12528  0CED  0087               	movwf	7
 12529  0CEE  0820               	movf	??_EUSART_Write,w
 12530  0CEF  0081               	movwf	1
 12531  0CF0                     l3162:
 12532  0CF0  3001               	movlw	1
 12533  0CF1  00A0               	movwf	??_EUSART_Write
 12534  0CF2  0820               	movf	??_EUSART_Write,w
 12535  0CF3  07FC               	addwf	_eusartTxHead,f	;volatile
 12536  0CF4                     l3164:
 12537                           
 12538                           ;eusart.c: 156:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 12539  0CF4  3008               	movlw	8
 12540  0CF5  027C               	subwf	_eusartTxHead,w	;volatile
 12541  0CF6  1C03               	skipc
 12542  0CF7  2CF9               	goto	u941
 12543  0CF8  2CFA               	goto	u940
 12544  0CF9                     u941:
 12545  0CF9  2CFB               	goto	l3168
 12546  0CFA                     u940:
 12547  0CFA                     l3166:
 12548                           
 12549                           ;eusart.c: 157:         {;eusart.c: 158:             eusartTxHead = 0;
 12550  0CFA  01FC               	clrf	_eusartTxHead	;volatile
 12551  0CFB                     l3168:
 12552                           
 12553                           ;eusart.c: 160:         eusartTxBufferRemaining--;
 12554  0CFB  3001               	movlw	1
 12555  0CFC  0021               	movlb	1	; select bank1
 12556  0CFD  02D2               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 12557  0CFE                     l3170:
 12558                           
 12559                           ;eusart.c: 162:     PIE1bits.TXIE = 1;
 12560  0CFE  0021               	movlb	1	; select bank1
 12561  0CFF  1611               	bsf	17,4	;volatile
 12562  0D00                     l618:
 12563  0D00  0008               	return
 12564  0D01                     __end_of_EUSART_Write:
 12565                           
 12566                           	psect	text42
 12567  06BC                     __ptext42:	
 12568 ;; *************** function ___lomod *****************
 12569 ;; Defined at:
 12570 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lomod.c"
 12571 ;; Parameters:    Size  Location     Type
 12572 ;;  divisor         8    0[BANK0 ] unsigned long long 
 12573 ;;  dividend        8    8[BANK0 ] unsigned long long 
 12574 ;; Auto vars:     Size  Location     Type
 12575 ;;  counter         1   17[BANK0 ] unsigned char 
 12576 ;; Return value:  Size  Location     Type
 12577 ;;                  8    0[BANK0 ] unsigned long long 
 12578 ;; Registers used:
 12579 ;;		wreg, status,2, status,0
 12580 ;; Tracked objects:
 12581 ;;		On entry : 0/0
 12582 ;;		On exit  : 0/0
 12583 ;;		Unchanged: 0/0
 12584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12585 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12586 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12587 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12588 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12589 ;;Total ram usage:       18 bytes
 12590 ;; Hardware stack levels used: 1
 12591 ;; Hardware stack levels required when called: 4
 12592 ;; This function calls:
 12593 ;;		Nothing
 12594 ;; This function is called by:
 12595 ;;		_utoa
 12596 ;; This function uses a non-reentrant model
 12597 ;;
 12598                           
 12599  06BC                     ___lomod:	
 12600                           ;psect for function ___lomod
 12601                           
 12602  06BC                     l3228:	
 12603                           ;incstack = 0
 12604                           ; Regs used in ___lomod: [wreg+status,2+status,0]
 12605                           
 12606  06BC  0020               	movlb	0	; select bank0
 12607  06BD  0820               	movf	___lomod@divisor,w
 12608  06BE  0421               	iorwf	___lomod@divisor+1,w
 12609  06BF  0422               	iorwf	___lomod@divisor+2,w
 12610  06C0  0423               	iorwf	___lomod@divisor+3,w
 12611  06C1  0424               	iorwf	___lomod@divisor+4,w
 12612  06C2  0425               	iorwf	___lomod@divisor+5,w
 12613  06C3  0426               	iorwf	___lomod@divisor+6,w
 12614  06C4  0427               	iorwf	___lomod@divisor+7,w
 12615  06C5  1903               	skipnz
 12616  06C6  2EC8               	goto	u1061
 12617  06C7  2EC9               	goto	u1060
 12618  06C8                     u1061:
 12619  06C8  2F1C               	goto	l1391
 12620  06C9                     u1060:
 12621  06C9                     l3230:
 12622  06C9  01B1               	clrf	___lomod@counter
 12623  06CA  0AB1               	incf	___lomod@counter,f
 12624  06CB  2ED8               	goto	l3236
 12625  06CC                     l3232:
 12626  06CC  35A0               	lslf	___lomod@divisor,f
 12627  06CD  0DA1               	rlf	___lomod@divisor+1,f
 12628  06CE  0DA2               	rlf	___lomod@divisor+2,f
 12629  06CF  0DA3               	rlf	___lomod@divisor+3,f
 12630  06D0  0DA4               	rlf	___lomod@divisor+4,f
 12631  06D1  0DA5               	rlf	___lomod@divisor+5,f
 12632  06D2  0DA6               	rlf	___lomod@divisor+6,f
 12633  06D3  0DA7               	rlf	___lomod@divisor+7,f
 12634  06D4                     l3234:
 12635  06D4  3001               	movlw	1
 12636  06D5  00B0               	movwf	??___lomod
 12637  06D6  0830               	movf	??___lomod,w
 12638  06D7  07B1               	addwf	___lomod@counter,f
 12639  06D8                     l3236:
 12640  06D8  1FA7               	btfss	___lomod@divisor+7,7
 12641  06D9  2EDB               	goto	u1071
 12642  06DA  2EDC               	goto	u1070
 12643  06DB                     u1071:
 12644  06DB  2ECC               	goto	l3232
 12645  06DC                     u1070:
 12646  06DC                     l3238:
 12647  06DC  0827               	movf	___lomod@divisor+7,w
 12648  06DD  022F               	subwf	___lomod@dividend+7,w
 12649  06DE  1D03               	skipz
 12650  06DF  2EFA               	goto	u1085
 12651  06E0  0826               	movf	___lomod@divisor+6,w
 12652  06E1  022E               	subwf	___lomod@dividend+6,w
 12653  06E2  1D03               	skipz
 12654  06E3  2EFA               	goto	u1085
 12655  06E4  0825               	movf	___lomod@divisor+5,w
 12656  06E5  022D               	subwf	___lomod@dividend+5,w
 12657  06E6  1D03               	skipz
 12658  06E7  2EFA               	goto	u1085
 12659  06E8  0824               	movf	___lomod@divisor+4,w
 12660  06E9  022C               	subwf	___lomod@dividend+4,w
 12661  06EA  1D03               	skipz
 12662  06EB  2EFA               	goto	u1085
 12663  06EC  0823               	movf	___lomod@divisor+3,w
 12664  06ED  022B               	subwf	___lomod@dividend+3,w
 12665  06EE  1D03               	skipz
 12666  06EF  2EFA               	goto	u1085
 12667  06F0  0822               	movf	___lomod@divisor+2,w
 12668  06F1  022A               	subwf	___lomod@dividend+2,w
 12669  06F2  1D03               	skipz
 12670  06F3  2EFA               	goto	u1085
 12671  06F4  0821               	movf	___lomod@divisor+1,w
 12672  06F5  0229               	subwf	___lomod@dividend+1,w
 12673  06F6  1D03               	skipz
 12674  06F7  2EFA               	goto	u1085
 12675  06F8  0820               	movf	___lomod@divisor,w
 12676  06F9  0228               	subwf	___lomod@dividend,w
 12677  06FA                     u1085:
 12678  06FA  1C03               	skipc
 12679  06FB  2EFD               	goto	u1081
 12680  06FC  2EFE               	goto	u1080
 12681  06FD                     u1081:
 12682  06FD  2F0E               	goto	l3242
 12683  06FE                     u1080:
 12684  06FE                     l3240:
 12685  06FE  0820               	movf	___lomod@divisor,w
 12686  06FF  02A8               	subwf	___lomod@dividend,f
 12687  0700  0821               	movf	___lomod@divisor+1,w
 12688  0701  3BA9               	subwfb	___lomod@dividend+1,f
 12689  0702  0822               	movf	___lomod@divisor+2,w
 12690  0703  3BAA               	subwfb	___lomod@dividend+2,f
 12691  0704  0823               	movf	___lomod@divisor+3,w
 12692  0705  3BAB               	subwfb	___lomod@dividend+3,f
 12693  0706  0824               	movf	___lomod@divisor+4,w
 12694  0707  3BAC               	subwfb	___lomod@dividend+4,f
 12695  0708  0825               	movf	___lomod@divisor+5,w
 12696  0709  3BAD               	subwfb	___lomod@dividend+5,f
 12697  070A  0826               	movf	___lomod@divisor+6,w
 12698  070B  3BAE               	subwfb	___lomod@dividend+6,f
 12699  070C  0827               	movf	___lomod@divisor+7,w
 12700  070D  3BAF               	subwfb	___lomod@dividend+7,f
 12701  070E                     l3242:
 12702  070E  36A7               	lsrf	___lomod@divisor+7,f
 12703  070F  0CA6               	rrf	___lomod@divisor+6,f
 12704  0710  0CA5               	rrf	___lomod@divisor+5,f
 12705  0711  0CA4               	rrf	___lomod@divisor+4,f
 12706  0712  0CA3               	rrf	___lomod@divisor+3,f
 12707  0713  0CA2               	rrf	___lomod@divisor+2,f
 12708  0714  0CA1               	rrf	___lomod@divisor+1,f
 12709  0715  0CA0               	rrf	___lomod@divisor,f
 12710  0716  3001               	movlw	1
 12711  0717  02B1               	subwf	___lomod@counter,f
 12712  0718  1D03               	btfss	3,2
 12713  0719  2F1B               	goto	u1091
 12714  071A  2F1C               	goto	u1090
 12715  071B                     u1091:
 12716  071B  2EDC               	goto	l3238
 12717  071C                     u1090:
 12718  071C                     l1391:
 12719  071C  0828               	movf	___lomod@dividend,w
 12720  071D  00A0               	movwf	?___lomod
 12721  071E  0829               	movf	___lomod@dividend+1,w
 12722  071F  00A1               	movwf	?___lomod+1
 12723  0720  082A               	movf	___lomod@dividend+2,w
 12724  0721  00A2               	movwf	?___lomod+2
 12725  0722  082B               	movf	___lomod@dividend+3,w
 12726  0723  00A3               	movwf	?___lomod+3
 12727  0724  082C               	movf	___lomod@dividend+4,w
 12728  0725  00A4               	movwf	?___lomod+4
 12729  0726  082D               	movf	___lomod@dividend+5,w
 12730  0727  00A5               	movwf	?___lomod+5
 12731  0728  082E               	movf	___lomod@dividend+6,w
 12732  0729  00A6               	movwf	?___lomod+6
 12733  072A  082F               	movf	___lomod@dividend+7,w
 12734  072B  00A7               	movwf	?___lomod+7
 12735  072C                     l1398:
 12736  072C  0008               	return
 12737  072D                     __end_of___lomod:
 12738                           
 12739                           	psect	text43
 12740  0638                     __ptext43:	
 12741 ;; *************** function ___lodiv *****************
 12742 ;; Defined at:
 12743 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lodiv.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;  divisor         8    0[BANK0 ] unsigned long long 
 12746 ;;  dividend        8    8[BANK0 ] unsigned long long 
 12747 ;; Auto vars:     Size  Location     Type
 12748 ;;  quotient        8   17[BANK0 ] unsigned long long 
 12749 ;;  counter         1   25[BANK0 ] unsigned char 
 12750 ;; Return value:  Size  Location     Type
 12751 ;;                  8    0[BANK0 ] unsigned long long 
 12752 ;; Registers used:
 12753 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12754 ;; Tracked objects:
 12755 ;;		On entry : 0/0
 12756 ;;		On exit  : 0/0
 12757 ;;		Unchanged: 0/0
 12758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12759 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12760 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12761 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12762 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12763 ;;Total ram usage:       26 bytes
 12764 ;; Hardware stack levels used: 1
 12765 ;; Hardware stack levels required when called: 4
 12766 ;; This function calls:
 12767 ;;		Nothing
 12768 ;; This function is called by:
 12769 ;;		_utoa
 12770 ;; This function uses a non-reentrant model
 12771 ;;
 12772                           
 12773  0638                     ___lodiv:	
 12774                           ;psect for function ___lodiv
 12775                           
 12776  0638                     l3206:	
 12777                           ;incstack = 0
 12778                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 12779                           
 12780  0638  3031               	movlw	low ___lodiv@quotient
 12781  0639  0086               	movwf	6
 12782  063A  3000               	movlw	high ___lodiv@quotient
 12783  063B  0087               	movwf	7
 12784  063C  3008               	movlw	8
 12785  063D  0020               	movlb	0	; select bank0
 12786  063E  00B0               	movwf	??___lodiv
 12787  063F  3000               	movlw	0
 12788  0640                     u1010:
 12789  0640  001E               	movwi fsr1++
 12790  0641  0BB0               	decfsz	??___lodiv,f
 12791  0642  2E40               	goto	u1010
 12792  0643                     l3208:
 12793  0643  0820               	movf	___lodiv@divisor,w
 12794  0644  0421               	iorwf	___lodiv@divisor+1,w
 12795  0645  0422               	iorwf	___lodiv@divisor+2,w
 12796  0646  0423               	iorwf	___lodiv@divisor+3,w
 12797  0647  0424               	iorwf	___lodiv@divisor+4,w
 12798  0648  0425               	iorwf	___lodiv@divisor+5,w
 12799  0649  0426               	iorwf	___lodiv@divisor+6,w
 12800  064A  0427               	iorwf	___lodiv@divisor+7,w
 12801  064B  1903               	skipnz
 12802  064C  2E4E               	goto	u1021
 12803  064D  2E4F               	goto	u1020
 12804  064E                     u1021:
 12805  064E  2EAB               	goto	l1381
 12806  064F                     u1020:
 12807  064F                     l3210:
 12808  064F  01B9               	clrf	___lodiv@counter
 12809  0650  0AB9               	incf	___lodiv@counter,f
 12810  0651  2E5E               	goto	l3216
 12811  0652                     l3212:
 12812  0652  35A0               	lslf	___lodiv@divisor,f
 12813  0653  0DA1               	rlf	___lodiv@divisor+1,f
 12814  0654  0DA2               	rlf	___lodiv@divisor+2,f
 12815  0655  0DA3               	rlf	___lodiv@divisor+3,f
 12816  0656  0DA4               	rlf	___lodiv@divisor+4,f
 12817  0657  0DA5               	rlf	___lodiv@divisor+5,f
 12818  0658  0DA6               	rlf	___lodiv@divisor+6,f
 12819  0659  0DA7               	rlf	___lodiv@divisor+7,f
 12820  065A                     l3214:
 12821  065A  3001               	movlw	1
 12822  065B  00B0               	movwf	??___lodiv
 12823  065C  0830               	movf	??___lodiv,w
 12824  065D  07B9               	addwf	___lodiv@counter,f
 12825  065E                     l3216:
 12826  065E  1FA7               	btfss	___lodiv@divisor+7,7
 12827  065F  2E61               	goto	u1031
 12828  0660  2E62               	goto	u1030
 12829  0661                     u1031:
 12830  0661  2E52               	goto	l3212
 12831  0662                     u1030:
 12832  0662                     l3218:
 12833  0662  35B1               	lslf	___lodiv@quotient,f
 12834  0663  0DB2               	rlf	___lodiv@quotient+1,f
 12835  0664  0DB3               	rlf	___lodiv@quotient+2,f
 12836  0665  0DB4               	rlf	___lodiv@quotient+3,f
 12837  0666  0DB5               	rlf	___lodiv@quotient+4,f
 12838  0667  0DB6               	rlf	___lodiv@quotient+5,f
 12839  0668  0DB7               	rlf	___lodiv@quotient+6,f
 12840  0669  0DB8               	rlf	___lodiv@quotient+7,f
 12841  066A                     l3220:
 12842  066A  0827               	movf	___lodiv@divisor+7,w
 12843  066B  022F               	subwf	___lodiv@dividend+7,w
 12844  066C  1D03               	skipz
 12845  066D  2E88               	goto	u1045
 12846  066E  0826               	movf	___lodiv@divisor+6,w
 12847  066F  022E               	subwf	___lodiv@dividend+6,w
 12848  0670  1D03               	skipz
 12849  0671  2E88               	goto	u1045
 12850  0672  0825               	movf	___lodiv@divisor+5,w
 12851  0673  022D               	subwf	___lodiv@dividend+5,w
 12852  0674  1D03               	skipz
 12853  0675  2E88               	goto	u1045
 12854  0676  0824               	movf	___lodiv@divisor+4,w
 12855  0677  022C               	subwf	___lodiv@dividend+4,w
 12856  0678  1D03               	skipz
 12857  0679  2E88               	goto	u1045
 12858  067A  0823               	movf	___lodiv@divisor+3,w
 12859  067B  022B               	subwf	___lodiv@dividend+3,w
 12860  067C  1D03               	skipz
 12861  067D  2E88               	goto	u1045
 12862  067E  0822               	movf	___lodiv@divisor+2,w
 12863  067F  022A               	subwf	___lodiv@dividend+2,w
 12864  0680  1D03               	skipz
 12865  0681  2E88               	goto	u1045
 12866  0682  0821               	movf	___lodiv@divisor+1,w
 12867  0683  0229               	subwf	___lodiv@dividend+1,w
 12868  0684  1D03               	skipz
 12869  0685  2E88               	goto	u1045
 12870  0686  0820               	movf	___lodiv@divisor,w
 12871  0687  0228               	subwf	___lodiv@dividend,w
 12872  0688                     u1045:
 12873  0688  1C03               	skipc
 12874  0689  2E8B               	goto	u1041
 12875  068A  2E8C               	goto	u1040
 12876  068B                     u1041:
 12877  068B  2E9D               	goto	l3226
 12878  068C                     u1040:
 12879  068C                     l3222:
 12880  068C  0820               	movf	___lodiv@divisor,w
 12881  068D  02A8               	subwf	___lodiv@dividend,f
 12882  068E  0821               	movf	___lodiv@divisor+1,w
 12883  068F  3BA9               	subwfb	___lodiv@dividend+1,f
 12884  0690  0822               	movf	___lodiv@divisor+2,w
 12885  0691  3BAA               	subwfb	___lodiv@dividend+2,f
 12886  0692  0823               	movf	___lodiv@divisor+3,w
 12887  0693  3BAB               	subwfb	___lodiv@dividend+3,f
 12888  0694  0824               	movf	___lodiv@divisor+4,w
 12889  0695  3BAC               	subwfb	___lodiv@dividend+4,f
 12890  0696  0825               	movf	___lodiv@divisor+5,w
 12891  0697  3BAD               	subwfb	___lodiv@dividend+5,f
 12892  0698  0826               	movf	___lodiv@divisor+6,w
 12893  0699  3BAE               	subwfb	___lodiv@dividend+6,f
 12894  069A  0827               	movf	___lodiv@divisor+7,w
 12895  069B  3BAF               	subwfb	___lodiv@dividend+7,f
 12896  069C                     l3224:
 12897  069C  1431               	bsf	___lodiv@quotient,0
 12898  069D                     l3226:
 12899  069D  36A7               	lsrf	___lodiv@divisor+7,f
 12900  069E  0CA6               	rrf	___lodiv@divisor+6,f
 12901  069F  0CA5               	rrf	___lodiv@divisor+5,f
 12902  06A0  0CA4               	rrf	___lodiv@divisor+4,f
 12903  06A1  0CA3               	rrf	___lodiv@divisor+3,f
 12904  06A2  0CA2               	rrf	___lodiv@divisor+2,f
 12905  06A3  0CA1               	rrf	___lodiv@divisor+1,f
 12906  06A4  0CA0               	rrf	___lodiv@divisor,f
 12907  06A5  3001               	movlw	1
 12908  06A6  02B9               	subwf	___lodiv@counter,f
 12909  06A7  1D03               	btfss	3,2
 12910  06A8  2EAA               	goto	u1051
 12911  06A9  2EAB               	goto	u1050
 12912  06AA                     u1051:
 12913  06AA  2E62               	goto	l3218
 12914  06AB                     u1050:
 12915  06AB                     l1381:
 12916  06AB  0831               	movf	___lodiv@quotient,w
 12917  06AC  00A0               	movwf	?___lodiv
 12918  06AD  0832               	movf	___lodiv@quotient+1,w
 12919  06AE  00A1               	movwf	?___lodiv+1
 12920  06AF  0833               	movf	___lodiv@quotient+2,w
 12921  06B0  00A2               	movwf	?___lodiv+2
 12922  06B1  0834               	movf	___lodiv@quotient+3,w
 12923  06B2  00A3               	movwf	?___lodiv+3
 12924  06B3  0835               	movf	___lodiv@quotient+4,w
 12925  06B4  00A4               	movwf	?___lodiv+4
 12926  06B5  0836               	movf	___lodiv@quotient+5,w
 12927  06B6  00A5               	movwf	?___lodiv+5
 12928  06B7  0837               	movf	___lodiv@quotient+6,w
 12929  06B8  00A6               	movwf	?___lodiv+6
 12930  06B9  0838               	movf	___lodiv@quotient+7,w
 12931  06BA  00A7               	movwf	?___lodiv+7
 12932  06BB                     l1388:
 12933  06BB  0008               	return
 12934  06BC                     __end_of___lodiv:
 12935                           
 12936                           	psect	text44
 12937  038D                     __ptext44:	
 12938 ;; *************** function _WritePin *****************
 12939 ;; Defined at:
 12940 ;;		line 148 in file "PIC16Xpress_DevBoard.c"
 12941 ;; Parameters:    Size  Location     Type
 12942 ;;  pin             1    wreg     enum E7144
 12943 ;;  val             1    0[BANK0 ] unsigned char 
 12944 ;; Auto vars:     Size  Location     Type
 12945 ;;  pin             1    3[BANK0 ] enum E7144
 12946 ;; Return value:  Size  Location     Type
 12947 ;;                  1    wreg      unsigned char 
 12948 ;; Registers used:
 12949 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12950 ;; Tracked objects:
 12951 ;;		On entry : 0/0
 12952 ;;		On exit  : 0/0
 12953 ;;		Unchanged: 0/0
 12954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12955 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12956 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12957 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12958 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12959 ;;Total ram usage:        4 bytes
 12960 ;; Hardware stack levels used: 1
 12961 ;; Hardware stack levels required when called: 4
 12962 ;; This function calls:
 12963 ;;		Nothing
 12964 ;; This function is called by:
 12965 ;;		_JSN_Sensor_Init
 12966 ;;		_JSN_Sensor_Trig
 12967 ;;		_main
 12968 ;;		_SpeakerTone_Init
 12969 ;; This function uses a non-reentrant model
 12970 ;;
 12971                           
 12972  038D                     _WritePin:	
 12973                           ;psect for function _WritePin
 12974                           
 12975                           
 12976                           ;incstack = 0
 12977                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
 12978                           ;WritePin@pin stored from wreg
 12979  038D  0020               	movlb	0	; select bank0
 12980  038E  00A3               	movwf	WritePin@pin
 12981  038F                     l3798:
 12982                           
 12983                           ;PIC16Xpress_DevBoard.c: 149:     switch(pin) {
 12984  038F  2C07               	goto	l3870
 12985  0390                     l3800:
 12986                           
 12987                           ;PIC16Xpress_DevBoard.c: 151:             LATAbits.LATA5 = val;
 12988  0390  0C20               	rrf	WritePin@val,w
 12989  0391  0022               	movlb	2	; select bank2
 12990  0392  1C03               	skipc
 12991  0393  128C               	bcf	12,5	;volatile
 12992  0394  1803               	skipnc
 12993  0395  168C               	bsf	12,5	;volatile
 12994  0396  2C47               	goto	l188
 12995  0397                     l3804:
 12996                           
 12997                           ;PIC16Xpress_DevBoard.c: 154:             LATAbits.LATA4 = val;
 12998  0397  0C20               	rrf	WritePin@val,w
 12999  0398  0022               	movlb	2	; select bank2
 13000  0399  1C03               	skipc
 13001  039A  120C               	bcf	12,4	;volatile
 13002  039B  1803               	skipnc
 13003  039C  160C               	bsf	12,4	;volatile
 13004  039D  2C47               	goto	l188
 13005  039E                     l3808:
 13006                           
 13007                           ;PIC16Xpress_DevBoard.c: 159:             LATCbits.LATC5 = val;
 13008  039E  0C20               	rrf	WritePin@val,w
 13009  039F  0022               	movlb	2	; select bank2
 13010  03A0  1C03               	skipc
 13011  03A1  128E               	bcf	14,5	;volatile
 13012  03A2  1803               	skipnc
 13013  03A3  168E               	bsf	14,5	;volatile
 13014  03A4  2C47               	goto	l188
 13015  03A5                     l3812:
 13016                           
 13017                           ;PIC16Xpress_DevBoard.c: 162:             LATCbits.LATC4 = val;
 13018  03A5  0C20               	rrf	WritePin@val,w
 13019  03A6  0022               	movlb	2	; select bank2
 13020  03A7  1C03               	skipc
 13021  03A8  120E               	bcf	14,4	;volatile
 13022  03A9  1803               	skipnc
 13023  03AA  160E               	bsf	14,4	;volatile
 13024  03AB  2C47               	goto	l188
 13025  03AC                     l3816:
 13026                           
 13027                           ;PIC16Xpress_DevBoard.c: 165:             LATCbits.LATC3 = val;
 13028  03AC  0C20               	rrf	WritePin@val,w
 13029  03AD  0022               	movlb	2	; select bank2
 13030  03AE  1C03               	skipc
 13031  03AF  118E               	bcf	14,3	;volatile
 13032  03B0  1803               	skipnc
 13033  03B1  158E               	bsf	14,3	;volatile
 13034  03B2  2C47               	goto	l188
 13035  03B3                     l3820:
 13036                           
 13037                           ;PIC16Xpress_DevBoard.c: 168:             LATCbits.LATC6 = val;
 13038  03B3  0C20               	rrf	WritePin@val,w
 13039  03B4  0022               	movlb	2	; select bank2
 13040  03B5  1C03               	skipc
 13041  03B6  130E               	bcf	14,6	;volatile
 13042  03B7  1803               	skipnc
 13043  03B8  170E               	bsf	14,6	;volatile
 13044  03B9  2C47               	goto	l188
 13045  03BA                     l3824:
 13046                           
 13047                           ;PIC16Xpress_DevBoard.c: 171:             LATCbits.LATC7 = val;
 13048  03BA  0C20               	rrf	WritePin@val,w
 13049  03BB  0022               	movlb	2	; select bank2
 13050  03BC  1C03               	skipc
 13051  03BD  138E               	bcf	14,7	;volatile
 13052  03BE  1803               	skipnc
 13053  03BF  178E               	bsf	14,7	;volatile
 13054  03C0  2C47               	goto	l188
 13055  03C1                     l3828:
 13056                           
 13057                           ;PIC16Xpress_DevBoard.c: 174:             LATBbits.LATB7 = val;
 13058  03C1  0C20               	rrf	WritePin@val,w
 13059  03C2  0022               	movlb	2	; select bank2
 13060  03C3  1C03               	skipc
 13061  03C4  138D               	bcf	13,7	;volatile
 13062  03C5  1803               	skipnc
 13063  03C6  178D               	bsf	13,7	;volatile
 13064  03C7  2C47               	goto	l188
 13065  03C8                     l3832:
 13066                           
 13067                           ;PIC16Xpress_DevBoard.c: 177:             LATAbits.LATA0 = val;
 13068  03C8  0C20               	rrf	WritePin@val,w
 13069  03C9  0022               	movlb	2	; select bank2
 13070  03CA  1C03               	skipc
 13071  03CB  100C               	bcf	12,0	;volatile
 13072  03CC  1803               	skipnc
 13073  03CD  140C               	bsf	12,0	;volatile
 13074  03CE  2C47               	goto	l188
 13075  03CF                     l3836:
 13076                           
 13077                           ;PIC16Xpress_DevBoard.c: 180:             LATAbits.LATA1 = val;
 13078  03CF  0C20               	rrf	WritePin@val,w
 13079  03D0  0022               	movlb	2	; select bank2
 13080  03D1  1C03               	skipc
 13081  03D2  108C               	bcf	12,1	;volatile
 13082  03D3  1803               	skipnc
 13083  03D4  148C               	bsf	12,1	;volatile
 13084  03D5  2C47               	goto	l188
 13085  03D6                     l3840:
 13086                           
 13087                           ;PIC16Xpress_DevBoard.c: 183:             LATAbits.LATA2 = val;
 13088  03D6  0C20               	rrf	WritePin@val,w
 13089  03D7  0022               	movlb	2	; select bank2
 13090  03D8  1C03               	skipc
 13091  03D9  110C               	bcf	12,2	;volatile
 13092  03DA  1803               	skipnc
 13093  03DB  150C               	bsf	12,2	;volatile
 13094  03DC  2C47               	goto	l188
 13095  03DD                     l3844:
 13096                           
 13097                           ;PIC16Xpress_DevBoard.c: 186:             LATCbits.LATC0 = val;
 13098  03DD  0C20               	rrf	WritePin@val,w
 13099  03DE  0022               	movlb	2	; select bank2
 13100  03DF  1C03               	skipc
 13101  03E0  100E               	bcf	14,0	;volatile
 13102  03E1  1803               	skipnc
 13103  03E2  140E               	bsf	14,0	;volatile
 13104  03E3  2C47               	goto	l188
 13105  03E4                     l3848:
 13106                           
 13107                           ;PIC16Xpress_DevBoard.c: 189:             LATCbits.LATC1 = val;
 13108  03E4  0C20               	rrf	WritePin@val,w
 13109  03E5  0022               	movlb	2	; select bank2
 13110  03E6  1C03               	skipc
 13111  03E7  108E               	bcf	14,1	;volatile
 13112  03E8  1803               	skipnc
 13113  03E9  148E               	bsf	14,1	;volatile
 13114  03EA  2C47               	goto	l188
 13115  03EB                     l3852:
 13116                           
 13117                           ;PIC16Xpress_DevBoard.c: 192:             LATCbits.LATC2 = val;
 13118  03EB  0C20               	rrf	WritePin@val,w
 13119  03EC  0022               	movlb	2	; select bank2
 13120  03ED  1C03               	skipc
 13121  03EE  110E               	bcf	14,2	;volatile
 13122  03EF  1803               	skipnc
 13123  03F0  150E               	bsf	14,2	;volatile
 13124  03F1  2C47               	goto	l188
 13125  03F2                     l3856:
 13126                           
 13127                           ;PIC16Xpress_DevBoard.c: 195:             LATBbits.LATB4 = val;
 13128  03F2  0C20               	rrf	WritePin@val,w
 13129  03F3  0022               	movlb	2	; select bank2
 13130  03F4  1C03               	skipc
 13131  03F5  120D               	bcf	13,4	;volatile
 13132  03F6  1803               	skipnc
 13133  03F7  160D               	bsf	13,4	;volatile
 13134  03F8  2C47               	goto	l188
 13135  03F9                     l3860:
 13136                           
 13137                           ;PIC16Xpress_DevBoard.c: 198:             LATBbits.LATB5 = val;
 13138  03F9  0C20               	rrf	WritePin@val,w
 13139  03FA  0022               	movlb	2	; select bank2
 13140  03FB  1C03               	skipc
 13141  03FC  128D               	bcf	13,5	;volatile
 13142  03FD  1803               	skipnc
 13143  03FE  168D               	bsf	13,5	;volatile
 13144  03FF  2C47               	goto	l188
 13145  0400                     l3864:
 13146                           
 13147                           ;PIC16Xpress_DevBoard.c: 201:             LATBbits.LATB6 = val;
 13148  0400  0C20               	rrf	WritePin@val,w
 13149  0401  0022               	movlb	2	; select bank2
 13150  0402  1C03               	skipc
 13151  0403  130D               	bcf	13,6	;volatile
 13152  0404  1803               	skipnc
 13153  0405  170D               	bsf	13,6	;volatile
 13154  0406  2C47               	goto	l188
 13155  0407                     l3870:
 13156  0407  0823               	movf	WritePin@pin,w
 13157  0408  00A1               	movwf	??_WritePin
 13158  0409  01A2               	clrf	??_WritePin+1
 13159                           
 13160                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13161                           ; Switch size 1, requested type "simple"
 13162                           ; Number of cases is 1, Range of values is 0 to 0
 13163                           ; switch strategies available:
 13164                           ; Name         Instructions Cycles
 13165                           ; simple_byte            4     3 (average)
 13166                           ; direct_byte            8     6 (fixed)
 13167                           ; jumptable            260     6 (fixed)
 13168                           ;	Chosen strategy is simple_byte
 13169  040A  0822               	movf	??_WritePin+1,w
 13170  040B  3A00               	xorlw	0	; case 0
 13171  040C  1903               	skipnz
 13172  040D  2C0F               	goto	l4584
 13173  040E  2C47               	goto	l188
 13174  040F                     l4584:
 13175                           
 13176                           ; Switch size 1, requested type "simple"
 13177                           ; Number of cases is 18, Range of values is 0 to 17
 13178                           ; switch strategies available:
 13179                           ; Name         Instructions Cycles
 13180                           ; direct_byte           42     6 (fixed)
 13181                           ; simple_byte           55    28 (average)
 13182                           ; jumptable            260     6 (fixed)
 13183                           ;	Chosen strategy is simple_byte
 13184  040F  0821               	movf	??_WritePin,w
 13185  0410  3A00               	xorlw	0	; case 0
 13186  0411  1903               	skipnz
 13187  0412  2B90               	goto	l3800
 13188  0413  3A01               	xorlw	1	; case 1
 13189  0414  1903               	skipnz
 13190  0415  2B97               	goto	l3804
 13191  0416  3A03               	xorlw	3	; case 2
 13192  0417  1903               	skipnz
 13193  0418  2C47               	goto	l188
 13194  0419  3A01               	xorlw	1	; case 3
 13195  041A  1903               	skipnz
 13196  041B  2B9E               	goto	l3808
 13197  041C  3A07               	xorlw	7	; case 4
 13198  041D  1903               	skipnz
 13199  041E  2BA5               	goto	l3812
 13200  041F  3A01               	xorlw	1	; case 5
 13201  0420  1903               	skipnz
 13202  0421  2BAC               	goto	l3816
 13203  0422  3A03               	xorlw	3	; case 6
 13204  0423  1903               	skipnz
 13205  0424  2BB3               	goto	l3820
 13206  0425  3A01               	xorlw	1	; case 7
 13207  0426  1903               	skipnz
 13208  0427  2BBA               	goto	l3824
 13209  0428  3A0F               	xorlw	15	; case 8
 13210  0429  1903               	skipnz
 13211  042A  2BC1               	goto	l3828
 13212  042B  3A01               	xorlw	1	; case 9
 13213  042C  1903               	skipnz
 13214  042D  2BC8               	goto	l3832
 13215  042E  3A03               	xorlw	3	; case 10
 13216  042F  1903               	skipnz
 13217  0430  2BCF               	goto	l3836
 13218  0431  3A01               	xorlw	1	; case 11
 13219  0432  1903               	skipnz
 13220  0433  2BD6               	goto	l3840
 13221  0434  3A07               	xorlw	7	; case 12
 13222  0435  1903               	skipnz
 13223  0436  2BDD               	goto	l3844
 13224  0437  3A01               	xorlw	1	; case 13
 13225  0438  1903               	skipnz
 13226  0439  2BE4               	goto	l3848
 13227  043A  3A03               	xorlw	3	; case 14
 13228  043B  1903               	skipnz
 13229  043C  2BEB               	goto	l3852
 13230  043D  3A01               	xorlw	1	; case 15
 13231  043E  1903               	skipnz
 13232  043F  2BF2               	goto	l3856
 13233  0440  3A1F               	xorlw	31	; case 16
 13234  0441  1903               	skipnz
 13235  0442  2BF9               	goto	l3860
 13236  0443  3A01               	xorlw	1	; case 17
 13237  0444  1903               	skipnz
 13238  0445  2C00               	goto	l3864
 13239  0446  2C47               	goto	l188
 13240  0447                     l188:
 13241  0447  0008               	return
 13242  0448                     __end_of_WritePin:
 13243                           
 13244                           	psect	text45
 13245  0448                     __ptext45:	
 13246 ;; *************** function _SetPin *****************
 13247 ;; Defined at:
 13248 ;;		line 41 in file "PIC16Xpress_DevBoard.c"
 13249 ;; Parameters:    Size  Location     Type
 13250 ;;  pin             1    wreg     enum E7144
 13251 ;;  io              1    0[BANK0 ] unsigned char 
 13252 ;; Auto vars:     Size  Location     Type
 13253 ;;  pin             1    3[BANK0 ] enum E7144
 13254 ;; Return value:  Size  Location     Type
 13255 ;;                  1    wreg      unsigned char 
 13256 ;; Registers used:
 13257 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13258 ;; Tracked objects:
 13259 ;;		On entry : 0/0
 13260 ;;		On exit  : 0/0
 13261 ;;		Unchanged: 0/0
 13262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13263 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13265 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13266 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13267 ;;Total ram usage:        4 bytes
 13268 ;; Hardware stack levels used: 1
 13269 ;; Hardware stack levels required when called: 4
 13270 ;; This function calls:
 13271 ;;		Nothing
 13272 ;; This function is called by:
 13273 ;;		_JSN_Sensor_Init
 13274 ;;		_main
 13275 ;;		_SpeakerTone_Init
 13276 ;; This function uses a non-reentrant model
 13277 ;;
 13278                           
 13279  0448                     _SetPin:	
 13280                           ;psect for function _SetPin
 13281                           
 13282                           
 13283                           ;incstack = 0
 13284                           ; Regs used in _SetPin: [wreg-fsr0h+status,2+status,0]
 13285                           ;SetPin@pin stored from wreg
 13286  0448  0020               	movlb	0	; select bank0
 13287  0449  00A3               	movwf	SetPin@pin
 13288  044A                     l3712:
 13289                           
 13290                           ;PIC16Xpress_DevBoard.c: 42:     switch(pin) {
 13291  044A  2CC2               	goto	l3784
 13292  044B                     l3714:
 13293                           
 13294                           ;PIC16Xpress_DevBoard.c: 44:             TRISAbits.TRISA5 = io;
 13295  044B  0C20               	rrf	SetPin@io,w
 13296  044C  0021               	movlb	1	; select bank1
 13297  044D  1C03               	skipc
 13298  044E  128C               	bcf	12,5	;volatile
 13299  044F  1803               	skipnc
 13300  0450  168C               	bsf	12,5	;volatile
 13301  0451  2D02               	goto	l140
 13302  0452                     l3718:
 13303                           
 13304                           ;PIC16Xpress_DevBoard.c: 47:             TRISAbits.TRISA4 = io;
 13305  0452  0C20               	rrf	SetPin@io,w
 13306  0453  0021               	movlb	1	; select bank1
 13307  0454  1C03               	skipc
 13308  0455  120C               	bcf	12,4	;volatile
 13309  0456  1803               	skipnc
 13310  0457  160C               	bsf	12,4	;volatile
 13311  0458  2D02               	goto	l140
 13312  0459                     l3722:
 13313                           
 13314                           ;PIC16Xpress_DevBoard.c: 52:             TRISCbits.TRISC5 = io;
 13315  0459  0C20               	rrf	SetPin@io,w
 13316  045A  0021               	movlb	1	; select bank1
 13317  045B  1C03               	skipc
 13318  045C  128E               	bcf	14,5	;volatile
 13319  045D  1803               	skipnc
 13320  045E  168E               	bsf	14,5	;volatile
 13321  045F  2D02               	goto	l140
 13322  0460                     l3726:
 13323                           
 13324                           ;PIC16Xpress_DevBoard.c: 55:             TRISCbits.TRISC4 = io;
 13325  0460  0C20               	rrf	SetPin@io,w
 13326  0461  0021               	movlb	1	; select bank1
 13327  0462  1C03               	skipc
 13328  0463  120E               	bcf	14,4	;volatile
 13329  0464  1803               	skipnc
 13330  0465  160E               	bsf	14,4	;volatile
 13331  0466  2D02               	goto	l140
 13332  0467                     l3730:
 13333                           
 13334                           ;PIC16Xpress_DevBoard.c: 58:             TRISCbits.TRISC3 = io;
 13335  0467  0C20               	rrf	SetPin@io,w
 13336  0468  0021               	movlb	1	; select bank1
 13337  0469  1C03               	skipc
 13338  046A  118E               	bcf	14,3	;volatile
 13339  046B  1803               	skipnc
 13340  046C  158E               	bsf	14,3	;volatile
 13341  046D  2D02               	goto	l140
 13342  046E                     l3734:
 13343                           
 13344                           ;PIC16Xpress_DevBoard.c: 61:             TRISCbits.TRISC6 = io;
 13345  046E  0C20               	rrf	SetPin@io,w
 13346  046F  0021               	movlb	1	; select bank1
 13347  0470  1C03               	skipc
 13348  0471  130E               	bcf	14,6	;volatile
 13349  0472  1803               	skipnc
 13350  0473  170E               	bsf	14,6	;volatile
 13351  0474  2D02               	goto	l140
 13352  0475                     l3738:
 13353                           
 13354                           ;PIC16Xpress_DevBoard.c: 64:             TRISCbits.TRISC7 = io;
 13355  0475  0C20               	rrf	SetPin@io,w
 13356  0476  0021               	movlb	1	; select bank1
 13357  0477  1C03               	skipc
 13358  0478  138E               	bcf	14,7	;volatile
 13359  0479  1803               	skipnc
 13360  047A  178E               	bsf	14,7	;volatile
 13361  047B  2D02               	goto	l140
 13362  047C                     l3742:
 13363                           
 13364                           ;PIC16Xpress_DevBoard.c: 67:             TRISBbits.TRISB7 = io;
 13365  047C  0C20               	rrf	SetPin@io,w
 13366  047D  0021               	movlb	1	; select bank1
 13367  047E  1C03               	skipc
 13368  047F  138D               	bcf	13,7	;volatile
 13369  0480  1803               	skipnc
 13370  0481  178D               	bsf	13,7	;volatile
 13371  0482  2D02               	goto	l140
 13372  0483                     l3746:
 13373                           
 13374                           ;PIC16Xpress_DevBoard.c: 70:             TRISAbits.TRISA0 = io;
 13375  0483  0C20               	rrf	SetPin@io,w
 13376  0484  0021               	movlb	1	; select bank1
 13377  0485  1C03               	skipc
 13378  0486  100C               	bcf	12,0	;volatile
 13379  0487  1803               	skipnc
 13380  0488  140C               	bsf	12,0	;volatile
 13381  0489  2D02               	goto	l140
 13382  048A                     l3750:
 13383                           
 13384                           ;PIC16Xpress_DevBoard.c: 73:             TRISAbits.TRISA1 = io;
 13385  048A  0C20               	rrf	SetPin@io,w
 13386  048B  0021               	movlb	1	; select bank1
 13387  048C  1C03               	skipc
 13388  048D  108C               	bcf	12,1	;volatile
 13389  048E  1803               	skipnc
 13390  048F  148C               	bsf	12,1	;volatile
 13391  0490  2D02               	goto	l140
 13392  0491                     l3754:
 13393                           
 13394                           ;PIC16Xpress_DevBoard.c: 76:             TRISAbits.TRISA2 = io;
 13395  0491  0C20               	rrf	SetPin@io,w
 13396  0492  0021               	movlb	1	; select bank1
 13397  0493  1C03               	skipc
 13398  0494  110C               	bcf	12,2	;volatile
 13399  0495  1803               	skipnc
 13400  0496  150C               	bsf	12,2	;volatile
 13401  0497  2D02               	goto	l140
 13402  0498                     l3758:
 13403                           
 13404                           ;PIC16Xpress_DevBoard.c: 79:             TRISCbits.TRISC0 = io;
 13405  0498  0C20               	rrf	SetPin@io,w
 13406  0499  0021               	movlb	1	; select bank1
 13407  049A  1C03               	skipc
 13408  049B  100E               	bcf	14,0	;volatile
 13409  049C  1803               	skipnc
 13410  049D  140E               	bsf	14,0	;volatile
 13411  049E  2D02               	goto	l140
 13412  049F                     l3762:
 13413                           
 13414                           ;PIC16Xpress_DevBoard.c: 82:             TRISCbits.TRISC1 = io;
 13415  049F  0C20               	rrf	SetPin@io,w
 13416  04A0  0021               	movlb	1	; select bank1
 13417  04A1  1C03               	skipc
 13418  04A2  108E               	bcf	14,1	;volatile
 13419  04A3  1803               	skipnc
 13420  04A4  148E               	bsf	14,1	;volatile
 13421  04A5  2D02               	goto	l140
 13422  04A6                     l3766:
 13423                           
 13424                           ;PIC16Xpress_DevBoard.c: 85:             TRISCbits.TRISC2 = io;
 13425  04A6  0C20               	rrf	SetPin@io,w
 13426  04A7  0021               	movlb	1	; select bank1
 13427  04A8  1C03               	skipc
 13428  04A9  110E               	bcf	14,2	;volatile
 13429  04AA  1803               	skipnc
 13430  04AB  150E               	bsf	14,2	;volatile
 13431  04AC  2D02               	goto	l140
 13432  04AD                     l3770:
 13433                           
 13434                           ;PIC16Xpress_DevBoard.c: 88:             TRISBbits.TRISB4 = io;
 13435  04AD  0C20               	rrf	SetPin@io,w
 13436  04AE  0021               	movlb	1	; select bank1
 13437  04AF  1C03               	skipc
 13438  04B0  120D               	bcf	13,4	;volatile
 13439  04B1  1803               	skipnc
 13440  04B2  160D               	bsf	13,4	;volatile
 13441  04B3  2D02               	goto	l140
 13442  04B4                     l3774:
 13443                           
 13444                           ;PIC16Xpress_DevBoard.c: 91:             TRISBbits.TRISB5 = io;
 13445  04B4  0C20               	rrf	SetPin@io,w
 13446  04B5  0021               	movlb	1	; select bank1
 13447  04B6  1C03               	skipc
 13448  04B7  128D               	bcf	13,5	;volatile
 13449  04B8  1803               	skipnc
 13450  04B9  168D               	bsf	13,5	;volatile
 13451  04BA  2D02               	goto	l140
 13452  04BB                     l3778:
 13453                           
 13454                           ;PIC16Xpress_DevBoard.c: 94:             TRISBbits.TRISB6 = io;
 13455  04BB  0C20               	rrf	SetPin@io,w
 13456  04BC  0021               	movlb	1	; select bank1
 13457  04BD  1C03               	skipc
 13458  04BE  130D               	bcf	13,6	;volatile
 13459  04BF  1803               	skipnc
 13460  04C0  170D               	bsf	13,6	;volatile
 13461  04C1  2D02               	goto	l140
 13462  04C2                     l3784:
 13463  04C2  0823               	movf	SetPin@pin,w
 13464  04C3  00A1               	movwf	??_SetPin
 13465  04C4  01A2               	clrf	??_SetPin+1
 13466                           
 13467                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13468                           ; Switch size 1, requested type "simple"
 13469                           ; Number of cases is 1, Range of values is 0 to 0
 13470                           ; switch strategies available:
 13471                           ; Name         Instructions Cycles
 13472                           ; simple_byte            4     3 (average)
 13473                           ; direct_byte            8     6 (fixed)
 13474                           ; jumptable            260     6 (fixed)
 13475                           ;	Chosen strategy is simple_byte
 13476  04C5  0822               	movf	??_SetPin+1,w
 13477  04C6  3A00               	xorlw	0	; case 0
 13478  04C7  1903               	skipnz
 13479  04C8  2CCA               	goto	l4586
 13480  04C9  2D02               	goto	l140
 13481  04CA                     l4586:
 13482                           
 13483                           ; Switch size 1, requested type "simple"
 13484                           ; Number of cases is 18, Range of values is 0 to 17
 13485                           ; switch strategies available:
 13486                           ; Name         Instructions Cycles
 13487                           ; direct_byte           42     6 (fixed)
 13488                           ; simple_byte           55    28 (average)
 13489                           ; jumptable            260     6 (fixed)
 13490                           ;	Chosen strategy is simple_byte
 13491  04CA  0821               	movf	??_SetPin,w
 13492  04CB  3A00               	xorlw	0	; case 0
 13493  04CC  1903               	skipnz
 13494  04CD  2C4B               	goto	l3714
 13495  04CE  3A01               	xorlw	1	; case 1
 13496  04CF  1903               	skipnz
 13497  04D0  2C52               	goto	l3718
 13498  04D1  3A03               	xorlw	3	; case 2
 13499  04D2  1903               	skipnz
 13500  04D3  2D02               	goto	l140
 13501  04D4  3A01               	xorlw	1	; case 3
 13502  04D5  1903               	skipnz
 13503  04D6  2C59               	goto	l3722
 13504  04D7  3A07               	xorlw	7	; case 4
 13505  04D8  1903               	skipnz
 13506  04D9  2C60               	goto	l3726
 13507  04DA  3A01               	xorlw	1	; case 5
 13508  04DB  1903               	skipnz
 13509  04DC  2C67               	goto	l3730
 13510  04DD  3A03               	xorlw	3	; case 6
 13511  04DE  1903               	skipnz
 13512  04DF  2C6E               	goto	l3734
 13513  04E0  3A01               	xorlw	1	; case 7
 13514  04E1  1903               	skipnz
 13515  04E2  2C75               	goto	l3738
 13516  04E3  3A0F               	xorlw	15	; case 8
 13517  04E4  1903               	skipnz
 13518  04E5  2C7C               	goto	l3742
 13519  04E6  3A01               	xorlw	1	; case 9
 13520  04E7  1903               	skipnz
 13521  04E8  2C83               	goto	l3746
 13522  04E9  3A03               	xorlw	3	; case 10
 13523  04EA  1903               	skipnz
 13524  04EB  2C8A               	goto	l3750
 13525  04EC  3A01               	xorlw	1	; case 11
 13526  04ED  1903               	skipnz
 13527  04EE  2C91               	goto	l3754
 13528  04EF  3A07               	xorlw	7	; case 12
 13529  04F0  1903               	skipnz
 13530  04F1  2C98               	goto	l3758
 13531  04F2  3A01               	xorlw	1	; case 13
 13532  04F3  1903               	skipnz
 13533  04F4  2C9F               	goto	l3762
 13534  04F5  3A03               	xorlw	3	; case 14
 13535  04F6  1903               	skipnz
 13536  04F7  2CA6               	goto	l3766
 13537  04F8  3A01               	xorlw	1	; case 15
 13538  04F9  1903               	skipnz
 13539  04FA  2CAD               	goto	l3770
 13540  04FB  3A1F               	xorlw	31	; case 16
 13541  04FC  1903               	skipnz
 13542  04FD  2CB4               	goto	l3774
 13543  04FE  3A01               	xorlw	1	; case 17
 13544  04FF  1903               	skipnz
 13545  0500  2CBB               	goto	l3778
 13546  0501  2D02               	goto	l140
 13547  0502                     l140:
 13548  0502  0008               	return
 13549  0503                     __end_of_SetPin:
 13550                           
 13551                           	psect	text46
 13552  0E8F                     __ptext46:	
 13553 ;; *************** function _JSN_Sensor_GetDistance *****************
 13554 ;; Defined at:
 13555 ;;		line 106 in file "JSN_Sensor.c"
 13556 ;; Parameters:    Size  Location     Type
 13557 ;;  Sensor          1    wreg     PTR struct .
 13558 ;;		 -> Sens3(6), Sens2(6), Sens1(6), 
 13559 ;; Auto vars:     Size  Location     Type
 13560 ;;  Sensor          1   30[BANK0 ] PTR struct .
 13561 ;;		 -> Sens3(6), Sens2(6), Sens1(6), 
 13562 ;; Return value:  Size  Location     Type
 13563 ;;                  2   26[BANK0 ] unsigned int 
 13564 ;; Registers used:
 13565 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13566 ;; Tracked objects:
 13567 ;;		On entry : 0/0
 13568 ;;		On exit  : 0/0
 13569 ;;		Unchanged: 0/0
 13570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13571 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13572 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13573 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13574 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13575 ;;Total ram usage:        5 bytes
 13576 ;; Hardware stack levels used: 1
 13577 ;; Hardware stack levels required when called: 5
 13578 ;; This function calls:
 13579 ;;		___lldiv
 13580 ;;		___lmul
 13581 ;; This function is called by:
 13582 ;;		_main
 13583 ;; This function uses a non-reentrant model
 13584 ;;
 13585                           
 13586  0E8F                     _JSN_Sensor_GetDistance:	
 13587                           ;psect for function _JSN_Sensor_GetDistance
 13588                           
 13589                           
 13590                           ;incstack = 0
 13591                           ; Regs used in _JSN_Sensor_GetDistance: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13592                           ;JSN_Sensor_GetDistance@Sensor stored from wreg
 13593  0E8F  0020               	movlb	0	; select bank0
 13594  0E90  00BE               	movwf	JSN_Sensor_GetDistance@Sensor
 13595  0E91                     l4064:
 13596                           
 13597                           ;JSN_Sensor.c: 111:     Sensor->distance = (unsigned int) (((uint32_t) Sensor->echoHighT
      +                          ime *
 13598  0E91  3000               	movlw	0
 13599  0E92  00AF               	movwf	___lldiv@divisor+3
 13600  0E93  3000               	movlw	0
 13601  0E94  00AE               	movwf	___lldiv@divisor+2
 13602  0E95  3007               	movlw	7
 13603  0E96  00AD               	movwf	___lldiv@divisor+1
 13604  0E97  30D0               	movlw	208
 13605  0E98  00AC               	movwf	___lldiv@divisor
 13606  0E99  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 13607  0E9A  0086               	movwf	6
 13608  0E9B  3001               	movlw	1	; select bank2/3
 13609  0E9C  0087               	movwf	7
 13610  0E9D  3F40               	moviw [0]fsr1
 13611  0E9E  00BC               	movwf	??_JSN_Sensor_GetDistance
 13612  0E9F  3F41               	moviw [1]fsr1
 13613  0EA0  00BD               	movwf	??_JSN_Sensor_GetDistance+1
 13614  0EA1  083C               	movf	??_JSN_Sensor_GetDistance,w
 13615  0EA2  00A0               	movwf	___lmul@multiplier
 13616  0EA3  083D               	movf	??_JSN_Sensor_GetDistance+1,w
 13617  0EA4  00A1               	movwf	___lmul@multiplier+1
 13618  0EA5  01A2               	clrf	___lmul@multiplier+2
 13619  0EA6  01A3               	clrf	___lmul@multiplier+3
 13620  0EA7  3000               	movlw	0
 13621  0EA8  00A7               	movwf	___lmul@multiplicand+3
 13622  0EA9  3000               	movlw	0
 13623  0EAA  00A6               	movwf	___lmul@multiplicand+2
 13624  0EAB  3001               	movlw	1
 13625  0EAC  00A5               	movwf	___lmul@multiplicand+1
 13626  0EAD  3057               	movlw	87
 13627  0EAE  00A4               	movwf	___lmul@multiplicand
 13628  0EAF  318D  2532  318E   	fcall	___lmul
 13629  0EB2  0020               	movlb	0	; select bank0
 13630  0EB3  0823               	movf	?___lmul+3,w
 13631  0EB4  00B3               	movwf	___lldiv@dividend+3
 13632  0EB5  0822               	movf	?___lmul+2,w
 13633  0EB6  00B2               	movwf	___lldiv@dividend+2
 13634  0EB7  0821               	movf	?___lmul+1,w
 13635  0EB8  00B1               	movwf	___lldiv@dividend+1
 13636  0EB9  0820               	movf	?___lmul,w
 13637  0EBA  00B0               	movwf	___lldiv@dividend
 13638  0EBB  3187  272D  318E   	fcall	___lldiv
 13639  0EBE  0020               	movlb	0	; select bank0
 13640  0EBF  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 13641  0EC0  3E02               	addlw	2
 13642  0EC1  0086               	movwf	6
 13643  0EC2  3001               	movlw	1	; select bank2/3
 13644  0EC3  0087               	movwf	7
 13645  0EC4  082C               	movf	?___lldiv,w
 13646  0EC5  3FC0               	movwi [0]fsr1
 13647  0EC6  082D               	movf	?___lldiv+1,w
 13648  0EC7  3FC1               	movwi [1]fsr1
 13649  0EC8                     l4066:
 13650                           
 13651                           ;JSN_Sensor.c: 113:     return Sensor->distance;
 13652  0EC8  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 13653  0EC9  3E02               	addlw	2
 13654  0ECA  0086               	movwf	6
 13655  0ECB  3001               	movlw	1	; select bank2/3
 13656  0ECC  0087               	movwf	7
 13657  0ECD  3F40               	moviw [0]fsr1
 13658  0ECE  00BA               	movwf	?_JSN_Sensor_GetDistance
 13659  0ECF  3F41               	moviw [1]fsr1
 13660  0ED0  00BB               	movwf	?_JSN_Sensor_GetDistance+1
 13661  0ED1                     l57:
 13662  0ED1  0008               	return
 13663  0ED2                     __end_of_JSN_Sensor_GetDistance:
 13664                           
 13665                           	psect	text47
 13666  0D32                     __ptext47:	
 13667 ;; *************** function ___lmul *****************
 13668 ;; Defined at:
 13669 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul32.c"
 13670 ;; Parameters:    Size  Location     Type
 13671 ;;  multiplier      4    0[BANK0 ] unsigned long 
 13672 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 13673 ;; Auto vars:     Size  Location     Type
 13674 ;;  product         4    8[BANK0 ] unsigned long 
 13675 ;; Return value:  Size  Location     Type
 13676 ;;                  4    0[BANK0 ] unsigned long 
 13677 ;; Registers used:
 13678 ;;		wreg, status,2, status,0
 13679 ;; Tracked objects:
 13680 ;;		On entry : 0/0
 13681 ;;		On exit  : 0/0
 13682 ;;		Unchanged: 0/0
 13683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13684 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13685 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13687 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13688 ;;Total ram usage:       12 bytes
 13689 ;; Hardware stack levels used: 1
 13690 ;; Hardware stack levels required when called: 4
 13691 ;; This function calls:
 13692 ;;		Nothing
 13693 ;; This function is called by:
 13694 ;;		_JSN_Sensor_GetDistance
 13695 ;;		_MotorControl_SetIntensity
 13696 ;; This function uses a non-reentrant model
 13697 ;;
 13698                           
 13699  0D32                     ___lmul:	
 13700                           ;psect for function ___lmul
 13701                           
 13702  0D32                     l3962:	
 13703                           ;incstack = 0
 13704                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13705                           
 13706  0D32  3000               	movlw	0
 13707  0D33  0020               	movlb	0	; select bank0
 13708  0D34  00AB               	movwf	___lmul@product+3
 13709  0D35  3000               	movlw	0
 13710  0D36  00AA               	movwf	___lmul@product+2
 13711  0D37  3000               	movlw	0
 13712  0D38  00A9               	movwf	___lmul@product+1
 13713  0D39  3000               	movlw	0
 13714  0D3A  00A8               	movwf	___lmul@product
 13715  0D3B                     l3964:
 13716  0D3B  1C20               	btfss	___lmul@multiplier,0
 13717  0D3C  2D3E               	goto	u1331
 13718  0D3D  2D3F               	goto	u1330
 13719  0D3E                     u1331:
 13720  0D3E  2D47               	goto	l3968
 13721  0D3F                     u1330:
 13722  0D3F                     l3966:
 13723  0D3F  0824               	movf	___lmul@multiplicand,w
 13724  0D40  07A8               	addwf	___lmul@product,f
 13725  0D41  0825               	movf	___lmul@multiplicand+1,w
 13726  0D42  3DA9               	addwfc	___lmul@product+1,f
 13727  0D43  0826               	movf	___lmul@multiplicand+2,w
 13728  0D44  3DAA               	addwfc	___lmul@product+2,f
 13729  0D45  0827               	movf	___lmul@multiplicand+3,w
 13730  0D46  3DAB               	addwfc	___lmul@product+3,f
 13731  0D47                     l3968:
 13732  0D47  3001               	movlw	1
 13733  0D48                     u1345:
 13734  0D48  35A4               	lslf	___lmul@multiplicand,f
 13735  0D49  0DA5               	rlf	___lmul@multiplicand+1,f
 13736  0D4A  0DA6               	rlf	___lmul@multiplicand+2,f
 13737  0D4B  0DA7               	rlf	___lmul@multiplicand+3,f
 13738  0D4C  0B89               	decfsz	9,f
 13739  0D4D  2D48               	goto	u1345
 13740  0D4E                     l3970:
 13741  0D4E  3001               	movlw	1
 13742  0D4F                     u1355:
 13743  0D4F  36A3               	lsrf	___lmul@multiplier+3,f
 13744  0D50  0CA2               	rrf	___lmul@multiplier+2,f
 13745  0D51  0CA1               	rrf	___lmul@multiplier+1,f
 13746  0D52  0CA0               	rrf	___lmul@multiplier,f
 13747  0D53  0B89               	decfsz	9,f
 13748  0D54  2D4F               	goto	u1355
 13749  0D55  0823               	movf	___lmul@multiplier+3,w
 13750  0D56  0422               	iorwf	___lmul@multiplier+2,w
 13751  0D57  0421               	iorwf	___lmul@multiplier+1,w
 13752  0D58  0420               	iorwf	___lmul@multiplier,w
 13753  0D59  1D03               	skipz
 13754  0D5A  2D5C               	goto	u1361
 13755  0D5B  2D5D               	goto	u1360
 13756  0D5C                     u1361:
 13757  0D5C  2D3B               	goto	l3964
 13758  0D5D                     u1360:
 13759  0D5D                     l3972:
 13760  0D5D  082B               	movf	___lmul@product+3,w
 13761  0D5E  00A3               	movwf	?___lmul+3
 13762  0D5F  082A               	movf	___lmul@product+2,w
 13763  0D60  00A2               	movwf	?___lmul+2
 13764  0D61  0829               	movf	___lmul@product+1,w
 13765  0D62  00A1               	movwf	?___lmul+1
 13766  0D63  0828               	movf	___lmul@product,w
 13767  0D64  00A0               	movwf	?___lmul
 13768  0D65                     l1162:
 13769  0D65  0008               	return
 13770  0D66                     __end_of___lmul:
 13771                           
 13772                           	psect	text48
 13773  072D                     __ptext48:	
 13774 ;; *************** function ___lldiv *****************
 13775 ;; Defined at:
 13776 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\__lldiv.c"
 13777 ;; Parameters:    Size  Location     Type
 13778 ;;  divisor         4   12[BANK0 ] unsigned long 
 13779 ;;  dividend        4   16[BANK0 ] unsigned long 
 13780 ;; Auto vars:     Size  Location     Type
 13781 ;;  quotient        4   21[BANK0 ] unsigned long 
 13782 ;;  counter         1   25[BANK0 ] unsigned char 
 13783 ;; Return value:  Size  Location     Type
 13784 ;;                  4   12[BANK0 ] unsigned long 
 13785 ;; Registers used:
 13786 ;;		wreg, status,2, status,0
 13787 ;; Tracked objects:
 13788 ;;		On entry : 0/0
 13789 ;;		On exit  : 0/0
 13790 ;;		Unchanged: 0/0
 13791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13792 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13793 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13794 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13795 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13796 ;;Total ram usage:       14 bytes
 13797 ;; Hardware stack levels used: 1
 13798 ;; Hardware stack levels required when called: 4
 13799 ;; This function calls:
 13800 ;;		Nothing
 13801 ;; This function is called by:
 13802 ;;		_JSN_Sensor_GetDistance
 13803 ;;		_SpeakerTone_SetFrequency
 13804 ;;		_MotorControl_SetIntensity
 13805 ;; This function uses a non-reentrant model
 13806 ;;
 13807                           
 13808  072D                     ___lldiv:	
 13809                           ;psect for function ___lldiv
 13810                           
 13811  072D                     l3976:	
 13812                           ;incstack = 0
 13813                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 13814                           
 13815  072D  3000               	movlw	0
 13816  072E  0020               	movlb	0	; select bank0
 13817  072F  00B8               	movwf	___lldiv@quotient+3
 13818  0730  3000               	movlw	0
 13819  0731  00B7               	movwf	___lldiv@quotient+2
 13820  0732  3000               	movlw	0
 13821  0733  00B6               	movwf	___lldiv@quotient+1
 13822  0734  3000               	movlw	0
 13823  0735  00B5               	movwf	___lldiv@quotient
 13824  0736  082F               	movf	___lldiv@divisor+3,w
 13825  0737  042E               	iorwf	___lldiv@divisor+2,w
 13826  0738  042D               	iorwf	___lldiv@divisor+1,w
 13827  0739  042C               	iorwf	___lldiv@divisor,w
 13828  073A  1903               	skipnz
 13829  073B  2F3D               	goto	u1371
 13830  073C  2F3E               	goto	u1370
 13831  073D                     u1371:
 13832  073D  2F7F               	goto	l3996
 13833  073E                     u1370:
 13834  073E                     l3978:
 13835  073E  01B9               	clrf	___lldiv@counter
 13836  073F  0AB9               	incf	___lldiv@counter,f
 13837  0740  2F4C               	goto	l3982
 13838  0741                     l3980:
 13839  0741  3001               	movlw	1
 13840  0742                     u1385:
 13841  0742  35AC               	lslf	___lldiv@divisor,f
 13842  0743  0DAD               	rlf	___lldiv@divisor+1,f
 13843  0744  0DAE               	rlf	___lldiv@divisor+2,f
 13844  0745  0DAF               	rlf	___lldiv@divisor+3,f
 13845  0746  0B89               	decfsz	9,f
 13846  0747  2F42               	goto	u1385
 13847  0748  3001               	movlw	1
 13848  0749  00B4               	movwf	??___lldiv
 13849  074A  0834               	movf	??___lldiv,w
 13850  074B  07B9               	addwf	___lldiv@counter,f
 13851  074C                     l3982:
 13852  074C  1FAF               	btfss	___lldiv@divisor+3,7
 13853  074D  2F4F               	goto	u1391
 13854  074E  2F50               	goto	u1390
 13855  074F                     u1391:
 13856  074F  2F41               	goto	l3980
 13857  0750                     u1390:
 13858  0750                     l3984:
 13859  0750  3001               	movlw	1
 13860  0751                     u1405:
 13861  0751  35B5               	lslf	___lldiv@quotient,f
 13862  0752  0DB6               	rlf	___lldiv@quotient+1,f
 13863  0753  0DB7               	rlf	___lldiv@quotient+2,f
 13864  0754  0DB8               	rlf	___lldiv@quotient+3,f
 13865  0755  0B89               	decfsz	9,f
 13866  0756  2F51               	goto	u1405
 13867  0757                     l3986:
 13868  0757  082F               	movf	___lldiv@divisor+3,w
 13869  0758  0233               	subwf	___lldiv@dividend+3,w
 13870  0759  1D03               	skipz
 13871  075A  2F65               	goto	u1415
 13872  075B  082E               	movf	___lldiv@divisor+2,w
 13873  075C  0232               	subwf	___lldiv@dividend+2,w
 13874  075D  1D03               	skipz
 13875  075E  2F65               	goto	u1415
 13876  075F  082D               	movf	___lldiv@divisor+1,w
 13877  0760  0231               	subwf	___lldiv@dividend+1,w
 13878  0761  1D03               	skipz
 13879  0762  2F65               	goto	u1415
 13880  0763  082C               	movf	___lldiv@divisor,w
 13881  0764  0230               	subwf	___lldiv@dividend,w
 13882  0765                     u1415:
 13883  0765  1C03               	skipc
 13884  0766  2F68               	goto	u1411
 13885  0767  2F69               	goto	u1410
 13886  0768                     u1411:
 13887  0768  2F72               	goto	l3992
 13888  0769                     u1410:
 13889  0769                     l3988:
 13890  0769  082C               	movf	___lldiv@divisor,w
 13891  076A  02B0               	subwf	___lldiv@dividend,f
 13892  076B  082D               	movf	___lldiv@divisor+1,w
 13893  076C  3BB1               	subwfb	___lldiv@dividend+1,f
 13894  076D  082E               	movf	___lldiv@divisor+2,w
 13895  076E  3BB2               	subwfb	___lldiv@dividend+2,f
 13896  076F  082F               	movf	___lldiv@divisor+3,w
 13897  0770  3BB3               	subwfb	___lldiv@dividend+3,f
 13898  0771                     l3990:
 13899  0771  1435               	bsf	___lldiv@quotient,0
 13900  0772                     l3992:
 13901  0772  3001               	movlw	1
 13902  0773                     u1425:
 13903  0773  36AF               	lsrf	___lldiv@divisor+3,f
 13904  0774  0CAE               	rrf	___lldiv@divisor+2,f
 13905  0775  0CAD               	rrf	___lldiv@divisor+1,f
 13906  0776  0CAC               	rrf	___lldiv@divisor,f
 13907  0777  0B89               	decfsz	9,f
 13908  0778  2F73               	goto	u1425
 13909  0779                     l3994:
 13910  0779  3001               	movlw	1
 13911  077A  02B9               	subwf	___lldiv@counter,f
 13912  077B  1D03               	btfss	3,2
 13913  077C  2F7E               	goto	u1431
 13914  077D  2F7F               	goto	u1430
 13915  077E                     u1431:
 13916  077E  2F50               	goto	l3984
 13917  077F                     u1430:
 13918  077F                     l3996:
 13919  077F  0838               	movf	___lldiv@quotient+3,w
 13920  0780  00AF               	movwf	?___lldiv+3
 13921  0781  0837               	movf	___lldiv@quotient+2,w
 13922  0782  00AE               	movwf	?___lldiv+2
 13923  0783  0836               	movf	___lldiv@quotient+1,w
 13924  0784  00AD               	movwf	?___lldiv+1
 13925  0785  0835               	movf	___lldiv@quotient,w
 13926  0786  00AC               	movwf	?___lldiv
 13927  0787                     l1184:
 13928  0787  0008               	return
 13929  0788                     __end_of___lldiv:
 13930                           
 13931                           	psect	text49
 13932  0B29                     __ptext49:	
 13933 ;; *************** function _FRT_GetMillis *****************
 13934 ;; Defined at:
 13935 ;;		line 26 in file "FRT.c"
 13936 ;; Parameters:    Size  Location     Type
 13937 ;;		None
 13938 ;; Auto vars:     Size  Location     Type
 13939 ;;		None
 13940 ;; Return value:  Size  Location     Type
 13941 ;;                  4    0[BANK0 ] unsigned long 
 13942 ;; Registers used:
 13943 ;;		wreg
 13944 ;; Tracked objects:
 13945 ;;		On entry : 0/0
 13946 ;;		On exit  : 0/0
 13947 ;;		Unchanged: 0/0
 13948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13949 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13952 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13953 ;;Total ram usage:        4 bytes
 13954 ;; Hardware stack levels used: 1
 13955 ;; Hardware stack levels required when called: 4
 13956 ;; This function calls:
 13957 ;;		Nothing
 13958 ;; This function is called by:
 13959 ;;		_main
 13960 ;; This function uses a non-reentrant model
 13961 ;;
 13962                           
 13963  0B29                     _FRT_GetMillis:	
 13964                           ;psect for function _FRT_GetMillis
 13965                           
 13966  0B29                     l4078:	
 13967                           ;incstack = 0
 13968                           ; Regs used in _FRT_GetMillis: [wreg]
 13969                           
 13970                           
 13971                           ;FRT.c: 27:     return millis;
 13972  0B29  0022               	movlb	2	; select bank2
 13973  0B2A  083F               	movf	(_millis+3)^(0+256),w
 13974  0B2B  0020               	movlb	0	; select bank0
 13975  0B2C  00A3               	movwf	?_FRT_GetMillis+3
 13976  0B2D  0022               	movlb	2	; select bank2
 13977  0B2E  083E               	movf	(_millis+2)^(0+256),w
 13978  0B2F  0020               	movlb	0	; select bank0
 13979  0B30  00A2               	movwf	?_FRT_GetMillis+2
 13980  0B31  0022               	movlb	2	; select bank2
 13981  0B32  083D               	movf	(_millis+1)^(0+256),w
 13982  0B33  0020               	movlb	0	; select bank0
 13983  0B34  00A1               	movwf	?_FRT_GetMillis+1
 13984  0B35  0022               	movlb	2	; select bank2
 13985  0B36  083C               	movf	_millis^(0+256),w
 13986  0B37  0020               	movlb	0	; select bank0
 13987  0B38  00A0               	movwf	?_FRT_GetMillis
 13988  0B39                     l797:
 13989  0B39  0008               	return
 13990  0B3A                     __end_of_FRT_GetMillis:
 13991                           
 13992                           	psect	intentry
 13993  0004                     __pintentry:	
 13994 ;; *************** function _INTERRUPT_InterruptManager *****************
 13995 ;; Defined at:
 13996 ;;		line 16 in file "interrupt_manager.c"
 13997 ;; Parameters:    Size  Location     Type
 13998 ;;		None
 13999 ;; Auto vars:     Size  Location     Type
 14000 ;;		None
 14001 ;; Return value:  Size  Location     Type
 14002 ;;                  1    wreg      void 
 14003 ;; Registers used:
 14004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14005 ;; Tracked objects:
 14006 ;;		On entry : 0/0
 14007 ;;		On exit  : 0/0
 14008 ;;		Unchanged: 0/0
 14009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14014 ;;Total ram usage:        0 bytes
 14015 ;; Hardware stack levels used: 1
 14016 ;; Hardware stack levels required when called: 3
 14017 ;; This function calls:
 14018 ;;		Absolute function
 14019 ;;		_CCP1_CaptureISR
 14020 ;;		_CCP2_CaptureISR
 14021 ;;		_CCP3_CaptureISR
 14022 ;;		_CCP4_CompareISR
 14023 ;;		_EUSART_Receive_ISR
 14024 ;;		_EUSART_Transmit_ISR
 14025 ;;		_TMR0_ISR
 14026 ;;		_TMR1_ISR
 14027 ;;		_TMR3_ISR
 14028 ;; This function is called by:
 14029 ;;		Interrupt level 1
 14030 ;; This function uses a non-reentrant model
 14031 ;;
 14032                           
 14033  0004                     _INTERRUPT_InterruptManager:
 14034                           
 14035                           ;incstack = 0
 14036  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 14037                           
 14038                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14039  0005  3180               	pagesel	$
 14040  0006                     i1l4236:
 14041                           
 14042                           ;interrupt_manager.c: 19:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 14043  0006  0021               	movlb	1	; select bank1
 14044  0007  1E90               	btfss	16,5	;volatile
 14045  0008  280A               	goto	u159_21
 14046  0009  280B               	goto	u159_20
 14047  000A                     u159_21:
 14048  000A  2814               	goto	i1l706
 14049  000B                     u159_20:
 14050  000B                     i1l4238:
 14051  000B  0020               	movlb	0	; select bank0
 14052  000C  1E90               	btfss	16,5	;volatile
 14053  000D  280F               	goto	u160_21
 14054  000E  2810               	goto	u160_20
 14055  000F                     u160_21:
 14056  000F  2814               	goto	i1l706
 14057  0010                     u160_20:
 14058  0010                     i1l4240:
 14059                           
 14060                           ;interrupt_manager.c: 20:     {;interrupt_manager.c: 21:         TMR0_ISR();
 14061  0010  318A  22F6  3180   	fcall	_TMR0_ISR
 14062                           
 14063                           ;interrupt_manager.c: 22:     }
 14064  0013  288E               	goto	i1l724
 14065  0014                     i1l706:	
 14066                           ;interrupt_manager.c: 23:     else if(INTCONbits.PEIE == 1)
 14067                           
 14068  0014  1F0B               	btfss	11,6	;volatile
 14069  0015  2817               	goto	u161_21
 14070  0016  2818               	goto	u161_20
 14071  0017                     u161_21:
 14072  0017  288E               	goto	i1l724
 14073  0018                     u161_20:
 14074  0018                     i1l4242:
 14075                           
 14076                           ;interrupt_manager.c: 24:     {;interrupt_manager.c: 25:         if(PIE4bits.CCP4IE == 1
      +                           && PIR4bits.CCP4IF == 1)
 14077  0018  0021               	movlb	1	; select bank1
 14078  0019  1D94               	btfss	20,3	;volatile
 14079  001A  281C               	goto	u162_21
 14080  001B  281D               	goto	u162_20
 14081  001C                     u162_21:
 14082  001C  2826               	goto	i1l709
 14083  001D                     u162_20:
 14084  001D                     i1l4244:
 14085  001D  0020               	movlb	0	; select bank0
 14086  001E  1D94               	btfss	20,3	;volatile
 14087  001F  2821               	goto	u163_21
 14088  0020  2822               	goto	u163_20
 14089  0021                     u163_21:
 14090  0021  2826               	goto	i1l709
 14091  0022                     u163_20:
 14092  0022                     i1l4246:
 14093                           
 14094                           ;interrupt_manager.c: 26:         {;interrupt_manager.c: 27:             CCP4_CompareISR
      +                          ();
 14095  0022  318A  2218  3180   	fcall	_CCP4_CompareISR
 14096                           
 14097                           ;interrupt_manager.c: 28:         }
 14098  0025  288E               	goto	i1l724
 14099  0026                     i1l709:	
 14100                           ;interrupt_manager.c: 29:         else if(PIE3bits.TMR3IE == 1 && PIR3bits.TMR3IF == 1)
 14101                           
 14102  0026  0021               	movlb	1	; select bank1
 14103  0027  1E13               	btfss	19,4	;volatile
 14104  0028  282A               	goto	u164_21
 14105  0029  282B               	goto	u164_20
 14106  002A                     u164_21:
 14107  002A  2834               	goto	i1l711
 14108  002B                     u164_20:
 14109  002B                     i1l4248:
 14110  002B  0020               	movlb	0	; select bank0
 14111  002C  1E13               	btfss	19,4	;volatile
 14112  002D  282F               	goto	u165_21
 14113  002E  2830               	goto	u165_20
 14114  002F                     u165_21:
 14115  002F  2834               	goto	i1l711
 14116  0030                     u165_20:
 14117  0030                     i1l4250:
 14118                           
 14119                           ;interrupt_manager.c: 30:         {;interrupt_manager.c: 31:             TMR3_ISR();
 14120  0030  318A  2223  3180   	fcall	_TMR3_ISR
 14121                           
 14122                           ;interrupt_manager.c: 32:         }
 14123  0033  288E               	goto	i1l724
 14124  0034                     i1l711:	
 14125                           ;interrupt_manager.c: 33:         else if(PIE4bits.CCP1IE == 1 && PIR4bits.CCP1IF == 1)
 14126                           
 14127  0034  0021               	movlb	1	; select bank1
 14128  0035  1C14               	btfss	20,0	;volatile
 14129  0036  2838               	goto	u166_21
 14130  0037  2839               	goto	u166_20
 14131  0038                     u166_21:
 14132  0038  2842               	goto	i1l713
 14133  0039                     u166_20:
 14134  0039                     i1l4252:
 14135  0039  0020               	movlb	0	; select bank0
 14136  003A  1C14               	btfss	20,0	;volatile
 14137  003B  283D               	goto	u167_21
 14138  003C  283E               	goto	u167_20
 14139  003D                     u167_21:
 14140  003D  2842               	goto	i1l713
 14141  003E                     u167_20:
 14142  003E                     i1l4254:
 14143                           
 14144                           ;interrupt_manager.c: 34:         {;interrupt_manager.c: 35:             CCP1_CaptureISR
      +                          ();
 14145  003E  318B  2383  3180   	fcall	_CCP1_CaptureISR
 14146                           
 14147                           ;interrupt_manager.c: 36:         }
 14148  0041  288E               	goto	i1l724
 14149  0042                     i1l713:	
 14150                           ;interrupt_manager.c: 37:         else if(PIE4bits.CCP3IE == 1 && PIR4bits.CCP3IF == 1)
 14151                           
 14152  0042  0021               	movlb	1	; select bank1
 14153  0043  1D14               	btfss	20,2	;volatile
 14154  0044  2846               	goto	u168_21
 14155  0045  2847               	goto	u168_20
 14156  0046                     u168_21:
 14157  0046  2850               	goto	i1l715
 14158  0047                     u168_20:
 14159  0047                     i1l4256:
 14160  0047  0020               	movlb	0	; select bank0
 14161  0048  1D14               	btfss	20,2	;volatile
 14162  0049  284B               	goto	u169_21
 14163  004A  284C               	goto	u169_20
 14164  004B                     u169_21:
 14165  004B  2850               	goto	i1l715
 14166  004C                     u169_20:
 14167  004C                     i1l4258:
 14168                           
 14169                           ;interrupt_manager.c: 38:         {;interrupt_manager.c: 39:             CCP3_CaptureISR
      +                          ();
 14170  004C  318B  23AF  3180   	fcall	_CCP3_CaptureISR
 14171                           
 14172                           ;interrupt_manager.c: 40:         }
 14173  004F  288E               	goto	i1l724
 14174  0050                     i1l715:	
 14175                           ;interrupt_manager.c: 41:         else if(PIE4bits.CCP2IE == 1 && PIR4bits.CCP2IF == 1)
 14176                           
 14177  0050  0021               	movlb	1	; select bank1
 14178  0051  1C94               	btfss	20,1	;volatile
 14179  0052  2854               	goto	u170_21
 14180  0053  2855               	goto	u170_20
 14181  0054                     u170_21:
 14182  0054  285E               	goto	i1l717
 14183  0055                     u170_20:
 14184  0055                     i1l4260:
 14185  0055  0020               	movlb	0	; select bank0
 14186  0056  1C94               	btfss	20,1	;volatile
 14187  0057  2859               	goto	u171_21
 14188  0058  285A               	goto	u171_20
 14189  0059                     u171_21:
 14190  0059  285E               	goto	i1l717
 14191  005A                     u171_20:
 14192  005A                     i1l4262:
 14193                           
 14194                           ;interrupt_manager.c: 42:         {;interrupt_manager.c: 43:             CCP2_CaptureISR
      +                          ();
 14195  005A  318B  2399  3180   	fcall	_CCP2_CaptureISR
 14196                           
 14197                           ;interrupt_manager.c: 44:         }
 14198  005D  288E               	goto	i1l724
 14199  005E                     i1l717:	
 14200                           ;interrupt_manager.c: 45:         else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 14201                           
 14202  005E  0021               	movlb	1	; select bank1
 14203  005F  1C11               	btfss	17,0	;volatile
 14204  0060  2862               	goto	u172_21
 14205  0061  2863               	goto	u172_20
 14206  0062                     u172_21:
 14207  0062  286C               	goto	i1l719
 14208  0063                     u172_20:
 14209  0063                     i1l4264:
 14210  0063  0020               	movlb	0	; select bank0
 14211  0064  1C11               	btfss	17,0	;volatile
 14212  0065  2867               	goto	u173_21
 14213  0066  2868               	goto	u173_20
 14214  0067                     u173_21:
 14215  0067  286C               	goto	i1l719
 14216  0068                     u173_20:
 14217  0068                     i1l4266:
 14218                           
 14219                           ;interrupt_manager.c: 46:         {;interrupt_manager.c: 47:             TMR1_ISR();
 14220  0068  318A  22C4  3180   	fcall	_TMR1_ISR
 14221                           
 14222                           ;interrupt_manager.c: 48:         }
 14223  006B  288E               	goto	i1l724
 14224  006C                     i1l719:	
 14225                           ;interrupt_manager.c: 49:         else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 14226                           
 14227  006C  0021               	movlb	1	; select bank1
 14228  006D  1E91               	btfss	17,5	;volatile
 14229  006E  2870               	goto	u174_21
 14230  006F  2871               	goto	u174_20
 14231  0070                     u174_21:
 14232  0070  287D               	goto	i1l721
 14233  0071                     u174_20:
 14234  0071                     i1l4268:
 14235  0071  0020               	movlb	0	; select bank0
 14236  0072  1E91               	btfss	17,5	;volatile
 14237  0073  2875               	goto	u175_21
 14238  0074  2876               	goto	u175_20
 14239  0075                     u175_21:
 14240  0075  287D               	goto	i1l721
 14241  0076                     u175_20:
 14242  0076                     i1l4270:
 14243                           
 14244                           ;interrupt_manager.c: 50:         {;interrupt_manager.c: 51:             EUSART_RxDefaul
      +                          tInterruptHandler();
 14245  0076  0021               	movlb	1	; select bank1
 14246  0077  0837               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 14247  0078  008A               	movwf	10
 14248  0079  0836               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 14249  007A  000A               	callw
 14250  007B  3180               	pagesel	$
 14251                           
 14252                           ;interrupt_manager.c: 52:         }
 14253  007C  288E               	goto	i1l724
 14254  007D                     i1l721:	
 14255                           ;interrupt_manager.c: 53:         else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 14256                           
 14257  007D  0021               	movlb	1	; select bank1
 14258  007E  1E11               	btfss	17,4	;volatile
 14259  007F  2881               	goto	u176_21
 14260  0080  2882               	goto	u176_20
 14261  0081                     u176_21:
 14262  0081  288E               	goto	i1l718
 14263  0082                     u176_20:
 14264  0082                     i1l4272:
 14265  0082  0020               	movlb	0	; select bank0
 14266  0083  1E11               	btfss	17,4	;volatile
 14267  0084  2886               	goto	u177_21
 14268  0085  2887               	goto	u177_20
 14269  0086                     u177_21:
 14270  0086  288E               	goto	i1l718
 14271  0087                     u177_20:
 14272  0087                     i1l4274:
 14273                           
 14274                           ;interrupt_manager.c: 54:         {;interrupt_manager.c: 55:             EUSART_TxDefaul
      +                          tInterruptHandler();
 14275  0087  0021               	movlb	1	; select bank1
 14276  0088  0839               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 14277  0089  008A               	movwf	10
 14278  008A  0838               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 14279  008B  000A               	callw
 14280  008C  3180               	pagesel	$
 14281  008D  288E               	goto	i1l724
 14282  008E                     i1l718:
 14283  008E                     i1l724:
 14284  008E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 14285  008F  0009               	retfie
 14286  0090                     __end_of_INTERRUPT_InterruptManager:
 14287                           
 14288                           	psect	text51
 14289  0A23                     __ptext51:	
 14290 ;; *************** function _TMR3_ISR *****************
 14291 ;; Defined at:
 14292 ;;		line 129 in file "tmr3.c"
 14293 ;; Parameters:    Size  Location     Type
 14294 ;;		None
 14295 ;; Auto vars:     Size  Location     Type
 14296 ;;		None
 14297 ;; Return value:  Size  Location     Type
 14298 ;;                  1    wreg      void 
 14299 ;; Registers used:
 14300 ;;		wreg, status,2, status,0, pclath, cstack
 14301 ;; Tracked objects:
 14302 ;;		On entry : 0/0
 14303 ;;		On exit  : 0/0
 14304 ;;		Unchanged: 0/0
 14305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14310 ;;Total ram usage:        0 bytes
 14311 ;; Hardware stack levels used: 1
 14312 ;; Hardware stack levels required when called: 2
 14313 ;; This function calls:
 14314 ;;		_TMR3_Reload
 14315 ;; This function is called by:
 14316 ;;		_INTERRUPT_InterruptManager
 14317 ;; This function uses a non-reentrant model
 14318 ;;
 14319                           
 14320  0A23                     _TMR3_ISR:	
 14321                           ;psect for function _TMR3_ISR
 14322                           
 14323  0A23                     i1l4168:	
 14324                           ;incstack = 0
 14325                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 14326                           
 14327                           
 14328                           ;tmr3.c: 132:     PIR3bits.TMR3IF = 0;
 14329  0A23  0020               	movlb	0	; select bank0
 14330  0A24  1213               	bcf	19,4	;volatile
 14331  0A25                     i1l4170:
 14332                           
 14333                           ;tmr3.c: 133:     TMR3_Reload();
 14334  0A25  318A  224C  318A   	fcall	_TMR3_Reload
 14335  0A28                     i1l996:
 14336  0A28  0008               	return
 14337  0A29                     __end_of_TMR3_ISR:
 14338                           
 14339                           	psect	text52
 14340  0A4C                     __ptext52:	
 14341 ;; *************** function _TMR3_Reload *****************
 14342 ;; Defined at:
 14343 ;;		line 108 in file "tmr3.c"
 14344 ;; Parameters:    Size  Location     Type
 14345 ;;		None
 14346 ;; Auto vars:     Size  Location     Type
 14347 ;;		None
 14348 ;; Return value:  Size  Location     Type
 14349 ;;                  1    wreg      void 
 14350 ;; Registers used:
 14351 ;;		wreg, status,2, status,0, pclath, cstack
 14352 ;; Tracked objects:
 14353 ;;		On entry : 0/0
 14354 ;;		On exit  : 0/0
 14355 ;;		Unchanged: 0/0
 14356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14361 ;;Total ram usage:        0 bytes
 14362 ;; Hardware stack levels used: 1
 14363 ;; Hardware stack levels required when called: 1
 14364 ;; This function calls:
 14365 ;;		_TMR3_WriteTimer
 14366 ;; This function is called by:
 14367 ;;		_TMR3_ISR
 14368 ;;		_SpeakerTone_Off
 14369 ;; This function uses a non-reentrant model
 14370 ;;
 14371                           
 14372  0A4C                     _TMR3_Reload:	
 14373                           ;psect for function _TMR3_Reload
 14374                           
 14375  0A4C                     i1l3960:	
 14376                           ;incstack = 0
 14377                           ; Regs used in _TMR3_Reload: [wreg+status,2+status,0+pclath+cstack]
 14378                           
 14379                           
 14380                           ;tmr3.c: 110:     TMR3_WriteTimer(timer3ReloadVal);
 14381  0A4C  0021               	movlb	1	; select bank1
 14382  0A4D  0829               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
 14383  0A4E  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 14384  0A4F  0828               	movf	_timer3ReloadVal^(0+128),w	;volatile
 14385  0A50  00F0               	movwf	TMR3_WriteTimer@timerVal
 14386  0A51  318B  2318  318A   	fcall	_TMR3_WriteTimer
 14387  0A54                     i1l987:
 14388  0A54  0008               	return
 14389  0A55                     __end_of_TMR3_Reload:
 14390                           
 14391                           	psect	text53
 14392  0B18                     __ptext53:	
 14393 ;; *************** function _TMR3_WriteTimer *****************
 14394 ;; Defined at:
 14395 ;;		line 84 in file "tmr3.c"
 14396 ;; Parameters:    Size  Location     Type
 14397 ;;  timerVal        2    0[COMMON] unsigned short 
 14398 ;; Auto vars:     Size  Location     Type
 14399 ;;		None
 14400 ;; Return value:  Size  Location     Type
 14401 ;;                  1    wreg      void 
 14402 ;; Registers used:
 14403 ;;		wreg, status,2
 14404 ;; Tracked objects:
 14405 ;;		On entry : 0/0
 14406 ;;		On exit  : 0/0
 14407 ;;		Unchanged: 0/0
 14408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14412 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14413 ;;Total ram usage:        2 bytes
 14414 ;; Hardware stack levels used: 1
 14415 ;; This function calls:
 14416 ;;		Nothing
 14417 ;; This function is called by:
 14418 ;;		_TMR3_Reload
 14419 ;; This function uses a non-reentrant model
 14420 ;;
 14421                           
 14422  0B18                     _TMR3_WriteTimer:	
 14423                           ;psect for function _TMR3_WriteTimer
 14424                           
 14425  0B18                     i1l3672:	
 14426                           ;incstack = 0
 14427                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 14428                           
 14429                           
 14430                           ;tmr3.c: 84: void TMR3_WriteTimer(uint16_t timerVal);tmr3.c: 85: {;tmr3.c: 86:     if (T
      +                          3CONbits.T3SYNC == 1)
 14431  0B18  0028               	movlb	8	; select bank8
 14432  0B19  1D13               	btfss	19,2	;volatile
 14433  0B1A  2B1C               	goto	u126_21
 14434  0B1B  2B1D               	goto	u126_20
 14435  0B1C                     u126_21:
 14436  0B1C  2B24               	goto	i1l3682
 14437  0B1D                     u126_20:
 14438  0B1D                     i1l3674:
 14439                           
 14440                           ;tmr3.c: 87:     {;tmr3.c: 89:         T3CONbits.TMR3ON = 0;
 14441  0B1D  1013               	bcf	19,0	;volatile
 14442  0B1E                     i1l3676:
 14443                           
 14444                           ;tmr3.c: 92:         TMR3H = (uint8_t)(timerVal >> 8);
 14445  0B1E  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14446  0B1F  0092               	movwf	18	;volatile
 14447  0B20                     i1l3678:
 14448                           
 14449                           ;tmr3.c: 93:         TMR3L = (uint8_t)timerVal;
 14450  0B20  0870               	movf	TMR3_WriteTimer@timerVal,w
 14451  0B21  0091               	movwf	17	;volatile
 14452  0B22                     i1l3680:
 14453                           
 14454                           ;tmr3.c: 96:         T3CONbits.TMR3ON =1;
 14455  0B22  1413               	bsf	19,0	;volatile
 14456                           
 14457                           ;tmr3.c: 97:     }
 14458  0B23  2B28               	goto	i1l984
 14459  0B24                     i1l3682:
 14460                           
 14461                           ;tmr3.c: 99:     {;tmr3.c: 101:         TMR3H = (uint8_t)(timerVal >> 8);
 14462  0B24  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14463  0B25  0092               	movwf	18	;volatile
 14464  0B26                     i1l3684:
 14465                           
 14466                           ;tmr3.c: 102:         TMR3L = (uint8_t)timerVal;
 14467  0B26  0870               	movf	TMR3_WriteTimer@timerVal,w
 14468  0B27  0091               	movwf	17	;volatile
 14469  0B28                     i1l984:
 14470  0B28  0008               	return
 14471  0B29                     __end_of_TMR3_WriteTimer:
 14472                           
 14473                           	psect	text54
 14474  0AC4                     __ptext54:	
 14475 ;; *************** function _TMR1_ISR *****************
 14476 ;; Defined at:
 14477 ;;		line 111 in file "tmr1.c"
 14478 ;; Parameters:    Size  Location     Type
 14479 ;;		None
 14480 ;; Auto vars:     Size  Location     Type
 14481 ;;		None
 14482 ;; Return value:  Size  Location     Type
 14483 ;;                  1    wreg      void 
 14484 ;; Registers used:
 14485 ;;		wreg, status,2, status,0, pclath, cstack
 14486 ;; Tracked objects:
 14487 ;;		On entry : 0/0
 14488 ;;		On exit  : 0/0
 14489 ;;		Unchanged: 0/0
 14490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14495 ;;Total ram usage:        0 bytes
 14496 ;; Hardware stack levels used: 1
 14497 ;; Hardware stack levels required when called: 1
 14498 ;; This function calls:
 14499 ;;		_TMR1_WriteTimer
 14500 ;; This function is called by:
 14501 ;;		_INTERRUPT_InterruptManager
 14502 ;; This function uses a non-reentrant model
 14503 ;;
 14504                           
 14505  0AC4                     _TMR1_ISR:	
 14506                           ;psect for function _TMR1_ISR
 14507                           
 14508  0AC4                     i1l4108:	
 14509                           ;incstack = 0
 14510                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 14511                           
 14512                           
 14513                           ;tmr1.c: 114:     PIR1bits.TMR1IF = 0;
 14514  0AC4  0020               	movlb	0	; select bank0
 14515  0AC5  1011               	bcf	17,0	;volatile
 14516  0AC6                     i1l4110:
 14517                           
 14518                           ;tmr1.c: 115:     TMR1_WriteTimer(timer1ReloadVal);
 14519  0AC6  0021               	movlb	1	; select bank1
 14520  0AC7  083B               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 14521  0AC8  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 14522  0AC9  083A               	movf	_timer1ReloadVal^(0+128),w	;volatile
 14523  0ACA  00F0               	movwf	TMR1_WriteTimer@timerVal
 14524  0ACB  318B  2307  318A   	fcall	_TMR1_WriteTimer
 14525  0ACE                     i1l515:
 14526  0ACE  0008               	return
 14527  0ACF                     __end_of_TMR1_ISR:
 14528                           
 14529                           	psect	text55
 14530  0B07                     __ptext55:	
 14531 ;; *************** function _TMR1_WriteTimer *****************
 14532 ;; Defined at:
 14533 ;;		line 80 in file "tmr1.c"
 14534 ;; Parameters:    Size  Location     Type
 14535 ;;  timerVal        2    0[COMMON] unsigned short 
 14536 ;; Auto vars:     Size  Location     Type
 14537 ;;		None
 14538 ;; Return value:  Size  Location     Type
 14539 ;;                  1    wreg      void 
 14540 ;; Registers used:
 14541 ;;		wreg, status,2
 14542 ;; Tracked objects:
 14543 ;;		On entry : 0/0
 14544 ;;		On exit  : 0/0
 14545 ;;		Unchanged: 0/0
 14546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14550 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14551 ;;Total ram usage:        2 bytes
 14552 ;; Hardware stack levels used: 1
 14553 ;; This function calls:
 14554 ;;		Nothing
 14555 ;; This function is called by:
 14556 ;;		_TMR1_ISR
 14557 ;;		_TMR1_Reload
 14558 ;; This function uses a non-reentrant model
 14559 ;;
 14560                           
 14561  0B07                     _TMR1_WriteTimer:	
 14562                           ;psect for function _TMR1_WriteTimer
 14563                           
 14564  0B07                     i1l3942:	
 14565                           ;incstack = 0
 14566                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 14567                           
 14568                           
 14569                           ;tmr1.c: 80: void TMR1_WriteTimer(uint16_t timerVal);tmr1.c: 81: {;tmr1.c: 82:     if (T
      +                          1CONbits.T1SYNC == 1)
 14570  0B07  0020               	movlb	0	; select bank0
 14571  0B08  1D1B               	btfss	27,2	;volatile
 14572  0B09  2B0B               	goto	u132_21
 14573  0B0A  2B0C               	goto	u132_20
 14574  0B0B                     u132_21:
 14575  0B0B  2B13               	goto	i1l3952
 14576  0B0C                     u132_20:
 14577  0B0C                     i1l3944:
 14578                           
 14579                           ;tmr1.c: 83:     {;tmr1.c: 85:         T1CONbits.TMR1ON = 0;
 14580  0B0C  101B               	bcf	27,0	;volatile
 14581  0B0D                     i1l3946:
 14582                           
 14583                           ;tmr1.c: 88:         TMR1H = (uint8_t)(timerVal >> 8);
 14584  0B0D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 14585  0B0E  009A               	movwf	26	;volatile
 14586  0B0F                     i1l3948:
 14587                           
 14588                           ;tmr1.c: 89:         TMR1L = (uint8_t)timerVal;
 14589  0B0F  0870               	movf	TMR1_WriteTimer@timerVal,w
 14590  0B10  0099               	movwf	25	;volatile
 14591  0B11                     i1l3950:
 14592                           
 14593                           ;tmr1.c: 92:         T1CONbits.TMR1ON =1;
 14594  0B11  141B               	bsf	27,0	;volatile
 14595                           
 14596                           ;tmr1.c: 93:     }
 14597  0B12  2B17               	goto	i1l509
 14598  0B13                     i1l3952:
 14599                           
 14600                           ;tmr1.c: 95:     {;tmr1.c: 97:         TMR1H = (uint8_t)(timerVal >> 8);
 14601  0B13  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 14602  0B14  009A               	movwf	26	;volatile
 14603  0B15                     i1l3954:
 14604                           
 14605                           ;tmr1.c: 98:         TMR1L = (uint8_t)timerVal;
 14606  0B15  0870               	movf	TMR1_WriteTimer@timerVal,w
 14607  0B16  0099               	movwf	25	;volatile
 14608  0B17                     i1l509:
 14609  0B17  0008               	return
 14610  0B18                     __end_of_TMR1_WriteTimer:
 14611                           
 14612                           	psect	text56
 14613  0AF6                     __ptext56:	
 14614 ;; *************** function _TMR0_ISR *****************
 14615 ;; Defined at:
 14616 ;;		line 90 in file "tmr0.c"
 14617 ;; Parameters:    Size  Location     Type
 14618 ;;		None
 14619 ;; Auto vars:     Size  Location     Type
 14620 ;;		None
 14621 ;; Return value:  Size  Location     Type
 14622 ;;                  1    wreg      void 
 14623 ;; Registers used:
 14624 ;;		wreg, status,2, status,0, pclath, cstack
 14625 ;; Tracked objects:
 14626 ;;		On entry : 0/0
 14627 ;;		On exit  : 0/0
 14628 ;;		Unchanged: 0/0
 14629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14634 ;;Total ram usage:        1 bytes
 14635 ;; Hardware stack levels used: 1
 14636 ;; Hardware stack levels required when called: 2
 14637 ;; This function calls:
 14638 ;;		_TMR0_CallBack
 14639 ;; This function is called by:
 14640 ;;		_INTERRUPT_InterruptManager
 14641 ;; This function uses a non-reentrant model
 14642 ;;
 14643                           
 14644  0AF6                     _TMR0_ISR:	
 14645                           ;psect for function _TMR0_ISR
 14646                           
 14647  0AF6                     i1l4082:	
 14648                           ;incstack = 0
 14649                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 14650                           
 14651                           
 14652                           ;tmr0.c: 93:     PIR0bits.TMR0IF = 0;
 14653  0AF6  0020               	movlb	0	; select bank0
 14654  0AF7  1290               	bcf	16,5	;volatile
 14655  0AF8                     i1l4084:
 14656                           
 14657                           ;tmr0.c: 95:     if (++CountCallBack >= 4)
 14658  0AF8  3001               	movlw	1
 14659  0AF9  00F0               	movwf	??_TMR0_ISR
 14660  0AFA  0870               	movf	??_TMR0_ISR,w
 14661  0AFB  07FD               	addwf	_CountCallBack,f	;volatile
 14662  0AFC  3004               	movlw	4
 14663  0AFD  027D               	subwf	_CountCallBack,w	;volatile
 14664  0AFE  1C03               	skipc
 14665  0AFF  2B01               	goto	u145_21
 14666  0B00  2B02               	goto	u145_20
 14667  0B01                     u145_21:
 14668  0B01  2B06               	goto	i1l326
 14669  0B02                     u145_20:
 14670  0B02                     i1l4086:
 14671                           
 14672                           ;tmr0.c: 96:     {;tmr0.c: 98:         TMR0_CallBack();
 14673  0B02  318A  222F  318A   	fcall	_TMR0_CallBack
 14674  0B05                     i1l4088:
 14675                           
 14676                           ;tmr0.c: 101:         CountCallBack = 0;
 14677  0B05  01FD               	clrf	_CountCallBack	;volatile
 14678  0B06                     i1l326:
 14679  0B06  0008               	return
 14680  0B07                     __end_of_TMR0_ISR:
 14681                           
 14682                           	psect	text57
 14683  0A2F                     __ptext57:	
 14684 ;; *************** function _TMR0_CallBack *****************
 14685 ;; Defined at:
 14686 ;;		line 109 in file "tmr0.c"
 14687 ;; Parameters:    Size  Location     Type
 14688 ;;		None
 14689 ;; Auto vars:     Size  Location     Type
 14690 ;;		None
 14691 ;; Return value:  Size  Location     Type
 14692 ;;                  1    wreg      void 
 14693 ;; Registers used:
 14694 ;;		wreg, status,2, status,0, pclath, cstack
 14695 ;; Tracked objects:
 14696 ;;		On entry : 0/0
 14697 ;;		On exit  : 0/0
 14698 ;;		Unchanged: 0/0
 14699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14704 ;;Total ram usage:        0 bytes
 14705 ;; Hardware stack levels used: 1
 14706 ;; Hardware stack levels required when called: 1
 14707 ;; This function calls:
 14708 ;;		_FRT_IncMicros
 14709 ;;		_FRT_IncMillis
 14710 ;; This function is called by:
 14711 ;;		_TMR0_ISR
 14712 ;; This function uses a non-reentrant model
 14713 ;;
 14714                           
 14715  0A2F                     _TMR0_CallBack:	
 14716                           ;psect for function _TMR0_CallBack
 14717                           
 14718  0A2F                     i1l3892:	
 14719                           ;incstack = 0
 14720                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 14721                           
 14722                           
 14723                           ;tmr0.c: 111:     FRT_IncMillis();
 14724  0A2F  318A  22B0  318A   	fcall	_FRT_IncMillis
 14725                           
 14726                           ;tmr0.c: 112:     FRT_IncMicros();
 14727  0A32  318A  22A6  318A   	fcall	_FRT_IncMicros
 14728  0A35                     i1l329:
 14729  0A35  0008               	return
 14730  0A36                     __end_of_TMR0_CallBack:
 14731                           
 14732                           	psect	text58
 14733  0AB0                     __ptext58:	
 14734 ;; *************** function _FRT_IncMillis *****************
 14735 ;; Defined at:
 14736 ;;		line 38 in file "FRT.c"
 14737 ;; Parameters:    Size  Location     Type
 14738 ;;		None
 14739 ;; Auto vars:     Size  Location     Type
 14740 ;;		None
 14741 ;; Return value:  Size  Location     Type
 14742 ;;                  1    wreg      void 
 14743 ;; Registers used:
 14744 ;;		wreg
 14745 ;; Tracked objects:
 14746 ;;		On entry : 0/0
 14747 ;;		On exit  : 0/0
 14748 ;;		Unchanged: 0/0
 14749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14754 ;;Total ram usage:        0 bytes
 14755 ;; Hardware stack levels used: 1
 14756 ;; This function calls:
 14757 ;;		Nothing
 14758 ;; This function is called by:
 14759 ;;		_TMR0_CallBack
 14760 ;; This function uses a non-reentrant model
 14761 ;;
 14762                           
 14763  0AB0                     _FRT_IncMillis:	
 14764                           ;psect for function _FRT_IncMillis
 14765                           
 14766  0AB0                     i1l3650:	
 14767                           ;incstack = 0
 14768                           ; Regs used in _FRT_IncMillis: [wreg]
 14769                           
 14770                           
 14771                           ;FRT.c: 39:     millis ++;
 14772  0AB0  3001               	movlw	1
 14773  0AB1  0022               	movlb	2	; select bank2
 14774  0AB2  07BC               	addwf	_millis^(0+256),f
 14775  0AB3  3000               	movlw	0
 14776  0AB4  3DBD               	addwfc	(_millis+1)^(0+256),f
 14777  0AB5  3000               	movlw	0
 14778  0AB6  3DBE               	addwfc	(_millis+2)^(0+256),f
 14779  0AB7  3000               	movlw	0
 14780  0AB8  3DBF               	addwfc	(_millis+3)^(0+256),f
 14781  0AB9                     i1l803:
 14782  0AB9  0008               	return
 14783  0ABA                     __end_of_FRT_IncMillis:
 14784                           
 14785                           	psect	text59
 14786  0AA6                     __ptext59:	
 14787 ;; *************** function _FRT_IncMicros *****************
 14788 ;; Defined at:
 14789 ;;		line 45 in file "FRT.c"
 14790 ;; Parameters:    Size  Location     Type
 14791 ;;		None
 14792 ;; Auto vars:     Size  Location     Type
 14793 ;;		None
 14794 ;; Return value:  Size  Location     Type
 14795 ;;                  1    wreg      void 
 14796 ;; Registers used:
 14797 ;;		wreg
 14798 ;; Tracked objects:
 14799 ;;		On entry : 0/0
 14800 ;;		On exit  : 0/0
 14801 ;;		Unchanged: 0/0
 14802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14807 ;;Total ram usage:        0 bytes
 14808 ;; Hardware stack levels used: 1
 14809 ;; This function calls:
 14810 ;;		Nothing
 14811 ;; This function is called by:
 14812 ;;		_TMR0_CallBack
 14813 ;; This function uses a non-reentrant model
 14814 ;;
 14815                           
 14816  0AA6                     _FRT_IncMicros:	
 14817                           ;psect for function _FRT_IncMicros
 14818                           
 14819  0AA6                     i1l3654:	
 14820                           ;incstack = 0
 14821                           ; Regs used in _FRT_IncMicros: [wreg]
 14822                           
 14823                           
 14824                           ;FRT.c: 46:     micros += 1000;
 14825  0AA6  30E8               	movlw	232
 14826  0AA7  0022               	movlb	2	; select bank2
 14827  0AA8  07B8               	addwf	_micros@FRT$F1530^(0+256),f
 14828  0AA9  3003               	movlw	3
 14829  0AAA  3DB9               	addwfc	(_micros@FRT$F1530+1)^(0+256),f
 14830  0AAB  3000               	movlw	0
 14831  0AAC  3DBA               	addwfc	(_micros@FRT$F1530+2)^(0+256),f
 14832  0AAD  3000               	movlw	0
 14833  0AAE  3DBB               	addwfc	(_micros@FRT$F1530+3)^(0+256),f
 14834  0AAF                     i1l806:
 14835  0AAF  0008               	return
 14836  0AB0                     __end_of_FRT_IncMicros:
 14837                           
 14838                           	psect	text60
 14839  0C5E                     __ptext60:	
 14840 ;; *************** function _EUSART_Transmit_ISR *****************
 14841 ;; Defined at:
 14842 ;;		line 181 in file "eusart.c"
 14843 ;; Parameters:    Size  Location     Type
 14844 ;;		None
 14845 ;; Auto vars:     Size  Location     Type
 14846 ;;		None
 14847 ;; Return value:  Size  Location     Type
 14848 ;;                  1    wreg      void 
 14849 ;; Registers used:
 14850 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14851 ;; Tracked objects:
 14852 ;;		On entry : 0/0
 14853 ;;		On exit  : 0/0
 14854 ;;		Unchanged: 0/0
 14855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14858 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14859 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14860 ;;Total ram usage:        1 bytes
 14861 ;; Hardware stack levels used: 1
 14862 ;; This function calls:
 14863 ;;		Nothing
 14864 ;; This function is called by:
 14865 ;;		_EUSART_Initialize
 14866 ;;		_INTERRUPT_InterruptManager
 14867 ;; This function uses a non-reentrant model
 14868 ;;
 14869                           
 14870  0C5E                     _EUSART_Transmit_ISR:	
 14871                           ;psect for function _EUSART_Transmit_ISR
 14872                           
 14873  0C5E                     i1l4134:	
 14874                           ;incstack = 0
 14875                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 14876                           
 14877                           
 14878                           ;eusart.c: 185:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 14879  0C5E  3008               	movlw	8
 14880  0C5F  0021               	movlb	1	; select bank1
 14881  0C60  0252               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 14882  0C61  1803               	skipnc
 14883  0C62  2C64               	goto	u148_21
 14884  0C63  2C65               	goto	u148_20
 14885  0C64                     u148_21:
 14886  0C64  2C7E               	goto	i1l627
 14887  0C65                     u148_20:
 14888  0C65                     i1l4136:
 14889                           
 14890                           ;eusart.c: 186:     {;eusart.c: 187:         TX1REG = eusartTxBuffer[eusartTxTail++];
 14891  0C65  0853               	movf	_eusartTxTail^(0+128),w
 14892  0C66  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 14893  0C67  0086               	movwf	6
 14894  0C68  3001               	movlw	1	; select bank2/3
 14895  0C69  0087               	movwf	7
 14896  0C6A  0801               	movf	1,w
 14897  0C6B  0023               	movlb	3	; select bank3
 14898  0C6C  009A               	movwf	26	;volatile
 14899  0C6D                     i1l4138:
 14900  0C6D  3001               	movlw	1
 14901  0C6E  00F0               	movwf	??_EUSART_Transmit_ISR
 14902  0C6F  0870               	movf	??_EUSART_Transmit_ISR,w
 14903  0C70  0021               	movlb	1	; select bank1
 14904  0C71  07D3               	addwf	_eusartTxTail^(0+128),f	;volatile
 14905  0C72                     i1l4140:
 14906                           
 14907                           ;eusart.c: 188:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 14908  0C72  3008               	movlw	8
 14909  0C73  0253               	subwf	_eusartTxTail^(0+128),w	;volatile
 14910  0C74  1C03               	skipc
 14911  0C75  2C77               	goto	u149_21
 14912  0C76  2C78               	goto	u149_20
 14913  0C77                     u149_21:
 14914  0C77  2C79               	goto	i1l4144
 14915  0C78                     u149_20:
 14916  0C78                     i1l4142:
 14917                           
 14918                           ;eusart.c: 189:         {;eusart.c: 190:             eusartTxTail = 0;
 14919  0C78  01D3               	clrf	_eusartTxTail^(0+128)	;volatile
 14920  0C79                     i1l4144:
 14921                           
 14922                           ;eusart.c: 192:         eusartTxBufferRemaining++;
 14923  0C79  3001               	movlw	1
 14924  0C7A  00F0               	movwf	??_EUSART_Transmit_ISR
 14925  0C7B  0870               	movf	??_EUSART_Transmit_ISR,w
 14926  0C7C  07D2               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 14927                           
 14928                           ;eusart.c: 193:     }
 14929  0C7D  2C7F               	goto	i1l630
 14930  0C7E                     i1l627:	
 14931                           ;eusart.c: 194:     else
 14932                           
 14933                           
 14934                           ;eusart.c: 195:     {;eusart.c: 196:         PIE1bits.TXIE = 0;
 14935  0C7E  1211               	bcf	17,4	;volatile
 14936  0C7F                     i1l630:
 14937  0C7F  0008               	return
 14938  0C80                     __end_of_EUSART_Transmit_ISR:
 14939                           
 14940                           	psect	text61
 14941  0E52                     __ptext61:	
 14942 ;; *************** function _EUSART_Receive_ISR *****************
 14943 ;; Defined at:
 14944 ;;		line 202 in file "eusart.c"
 14945 ;; Parameters:    Size  Location     Type
 14946 ;;		None
 14947 ;; Auto vars:     Size  Location     Type
 14948 ;;		None
 14949 ;; Return value:  Size  Location     Type
 14950 ;;                  1    wreg      void 
 14951 ;; Registers used:
 14952 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14953 ;; Tracked objects:
 14954 ;;		On entry : 0/0
 14955 ;;		On exit  : 0/0
 14956 ;;		Unchanged: 0/0
 14957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14962 ;;Total ram usage:        0 bytes
 14963 ;; Hardware stack levels used: 1
 14964 ;; Hardware stack levels required when called: 2
 14965 ;; This function calls:
 14966 ;;		Absolute function
 14967 ;;		_EUSART_DefaultErrorHandler
 14968 ;;		_EUSART_DefaultFramingErrorHandler
 14969 ;;		_EUSART_DefaultOverrunErrorHandler
 14970 ;;		_EUSART_RxDataHandler
 14971 ;; This function is called by:
 14972 ;;		_EUSART_Initialize
 14973 ;;		_INTERRUPT_InterruptManager
 14974 ;; This function uses a non-reentrant model
 14975 ;;
 14976                           
 14977  0E52                     _EUSART_Receive_ISR:	
 14978                           ;psect for function _EUSART_Receive_ISR
 14979                           
 14980  0E52                     i1l4146:	
 14981                           ;incstack = 0
 14982                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14983                           
 14984                           
 14985                           ;eusart.c: 205:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 14986  0E52  087B               	movf	_eusartRxHead,w	;volatile
 14987  0E53  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 14988  0E54  0086               	movwf	6
 14989  0E55  3001               	movlw	1	; select bank2/3
 14990  0E56  0087               	movwf	7
 14991  0E57  0181               	clrf	1
 14992  0E58                     i1l4148:
 14993                           
 14994                           ;eusart.c: 207:     if(RC1STAbits.FERR){
 14995  0E58  0023               	movlb	3	; select bank3
 14996  0E59  1D1D               	btfss	29,2	;volatile
 14997  0E5A  2E5C               	goto	u150_21
 14998  0E5B  2E5D               	goto	u150_20
 14999  0E5C                     u150_21:
 15000  0E5C  2E69               	goto	i1l4154
 15001  0E5D                     u150_20:
 15002  0E5D                     i1l4150:
 15003                           
 15004                           ;eusart.c: 208:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 15005  0E5D  087B               	movf	_eusartRxHead,w	;volatile
 15006  0E5E  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15007  0E5F  0086               	movwf	6
 15008  0E60  3001               	movlw	1	; select bank2/3
 15009  0E61  0087               	movwf	7
 15010  0E62  1481               	bsf	1,1
 15011  0E63                     i1l4152:
 15012                           
 15013                           ;eusart.c: 209:         EUSART_FramingErrorHandler();
 15014  0E63  0021               	movlb	1	; select bank1
 15015  0E64  0835               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 15016  0E65  008A               	movwf	10
 15017  0E66  0834               	movf	_EUSART_FramingErrorHandler^(0+128),w
 15018  0E67  000A               	callw
 15019  0E68  318E               	pagesel	$
 15020  0E69                     i1l4154:
 15021                           
 15022                           ;eusart.c: 212:     if(RC1STAbits.OERR){
 15023  0E69  0023               	movlb	3	; select bank3
 15024  0E6A  1C9D               	btfss	29,1	;volatile
 15025  0E6B  2E6D               	goto	u151_21
 15026  0E6C  2E6E               	goto	u151_20
 15027  0E6D                     u151_21:
 15028  0E6D  2E7A               	goto	i1l4160
 15029  0E6E                     u151_20:
 15030  0E6E                     i1l4156:
 15031                           
 15032                           ;eusart.c: 213:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 15033  0E6E  087B               	movf	_eusartRxHead,w	;volatile
 15034  0E6F  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15035  0E70  0086               	movwf	6
 15036  0E71  3001               	movlw	1	; select bank2/3
 15037  0E72  0087               	movwf	7
 15038  0E73  1501               	bsf	1,2
 15039  0E74                     i1l4158:
 15040                           
 15041                           ;eusart.c: 214:         EUSART_OverrunErrorHandler();
 15042  0E74  0021               	movlb	1	; select bank1
 15043  0E75  0833               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 15044  0E76  008A               	movwf	10
 15045  0E77  0832               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 15046  0E78  000A               	callw
 15047  0E79  318E               	pagesel	$
 15048  0E7A                     i1l4160:
 15049                           
 15050                           ;eusart.c: 217:     if(eusartRxStatusBuffer[eusartRxHead].status){
 15051  0E7A  087B               	movf	_eusartRxHead,w	;volatile
 15052  0E7B  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15053  0E7C  0086               	movwf	6
 15054  0E7D  3001               	movlw	1	; select bank2/3
 15055  0E7E  0087               	movwf	7
 15056  0E7F  0801               	movf	1,w
 15057  0E80  1903               	btfsc	3,2
 15058  0E81  2E83               	goto	u152_21
 15059  0E82  2E84               	goto	u152_20
 15060  0E83                     u152_21:
 15061  0E83  2E8B               	goto	i1l4164
 15062  0E84                     u152_20:
 15063  0E84                     i1l4162:
 15064                           
 15065                           ;eusart.c: 218:         EUSART_ErrorHandler();
 15066  0E84  0021               	movlb	1	; select bank1
 15067  0E85  0831               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 15068  0E86  008A               	movwf	10
 15069  0E87  0830               	movf	_EUSART_ErrorHandler^(0+128),w
 15070  0E88  000A               	callw
 15071  0E89  318E               	pagesel	$
 15072                           
 15073                           ;eusart.c: 219:     } else {
 15074  0E8A  2E8E               	goto	i1l637
 15075  0E8B                     i1l4164:
 15076                           
 15077                           ;eusart.c: 220:         EUSART_RxDataHandler();
 15078  0E8B  318C  2423  318E   	fcall	_EUSART_RxDataHandler
 15079  0E8E                     i1l637:
 15080  0E8E  0008               	return
 15081  0E8F                     __end_of_EUSART_Receive_ISR:
 15082                           
 15083                           	psect	text62
 15084  0A1F                     __ptext62:	
 15085 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 15086 ;; Defined at:
 15087 ;;		line 244 in file "eusart.c"
 15088 ;; Parameters:    Size  Location     Type
 15089 ;;		None
 15090 ;; Auto vars:     Size  Location     Type
 15091 ;;		None
 15092 ;; Return value:  Size  Location     Type
 15093 ;;                  1    wreg      void 
 15094 ;; Registers used:
 15095 ;;		None
 15096 ;; Tracked objects:
 15097 ;;		On entry : 0/0
 15098 ;;		On exit  : 0/0
 15099 ;;		Unchanged: 0/0
 15100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15105 ;;Total ram usage:        0 bytes
 15106 ;; Hardware stack levels used: 1
 15107 ;; This function calls:
 15108 ;;		Nothing
 15109 ;; This function is called by:
 15110 ;;		_EUSART_Initialize
 15111 ;;		_EUSART_Receive_ISR
 15112 ;; This function uses a non-reentrant model
 15113 ;;
 15114                           
 15115  0A1F                     _EUSART_DefaultOverrunErrorHandler:	
 15116                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 15117                           
 15118  0A1F                     i1l3956:	
 15119                           ;incstack = 0
 15120                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 15121                           
 15122                           
 15123                           ;eusart.c: 247:     RC1STAbits.CREN = 0;
 15124  0A1F  0023               	movlb	3	; select bank3
 15125  0A20  121D               	bcf	29,4	;volatile
 15126                           
 15127                           ;eusart.c: 248:     RC1STAbits.CREN = 1;
 15128  0A21  161D               	bsf	29,4	;volatile
 15129  0A22                     i1l647:
 15130  0A22  0008               	return
 15131  0A23                     __end_of_EUSART_DefaultOverrunErrorHandler:
 15132                           
 15133                           	psect	text63
 15134  0A14                     __ptext63:	
 15135 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 15136 ;; Defined at:
 15137 ;;		line 240 in file "eusart.c"
 15138 ;; Parameters:    Size  Location     Type
 15139 ;;		None
 15140 ;; Auto vars:     Size  Location     Type
 15141 ;;		None
 15142 ;; Return value:  Size  Location     Type
 15143 ;;                  1    wreg      void 
 15144 ;; Registers used:
 15145 ;;		None
 15146 ;; Tracked objects:
 15147 ;;		On entry : 0/0
 15148 ;;		On exit  : 0/0
 15149 ;;		Unchanged: 0/0
 15150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15155 ;;Total ram usage:        0 bytes
 15156 ;; Hardware stack levels used: 1
 15157 ;; This function calls:
 15158 ;;		Nothing
 15159 ;; This function is called by:
 15160 ;;		_EUSART_Initialize
 15161 ;;		_EUSART_Receive_ISR
 15162 ;; This function uses a non-reentrant model
 15163 ;;
 15164                           
 15165  0A14                     _EUSART_DefaultFramingErrorHandler:	
 15166                           ;psect for function _EUSART_DefaultFramingErrorHandler
 15167                           
 15168  0A14                     i1l644:	
 15169                           ;incstack = 0
 15170                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 15171                           
 15172  0A14  0008               	return
 15173  0A15                     __end_of_EUSART_DefaultFramingErrorHandler:
 15174                           
 15175                           	psect	text64
 15176  0A1B                     __ptext64:	
 15177 ;; *************** function _EUSART_DefaultErrorHandler *****************
 15178 ;; Defined at:
 15179 ;;		line 254 in file "eusart.c"
 15180 ;; Parameters:    Size  Location     Type
 15181 ;;		None
 15182 ;; Auto vars:     Size  Location     Type
 15183 ;;		None
 15184 ;; Return value:  Size  Location     Type
 15185 ;;                  1    wreg      void 
 15186 ;; Registers used:
 15187 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15188 ;; Tracked objects:
 15189 ;;		On entry : 0/0
 15190 ;;		On exit  : 0/0
 15191 ;;		Unchanged: 0/0
 15192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15197 ;;Total ram usage:        0 bytes
 15198 ;; Hardware stack levels used: 1
 15199 ;; Hardware stack levels required when called: 1
 15200 ;; This function calls:
 15201 ;;		_EUSART_RxDataHandler
 15202 ;; This function is called by:
 15203 ;;		_EUSART_Initialize
 15204 ;;		_EUSART_Receive_ISR
 15205 ;; This function uses a non-reentrant model
 15206 ;;
 15207                           
 15208  0A1B                     _EUSART_DefaultErrorHandler:	
 15209                           ;psect for function _EUSART_DefaultErrorHandler
 15210                           
 15211  0A1B                     i1l3958:	
 15212                           ;incstack = 0
 15213                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 15214                           
 15215                           
 15216                           ;eusart.c: 255:     EUSART_RxDataHandler();
 15217  0A1B  318C  2423  318A   	fcall	_EUSART_RxDataHandler
 15218  0A1E                     i1l650:
 15219  0A1E  0008               	return
 15220  0A1F                     __end_of_EUSART_DefaultErrorHandler:
 15221                           
 15222                           	psect	text65
 15223  0C23                     __ptext65:	
 15224 ;; *************** function _EUSART_RxDataHandler *****************
 15225 ;; Defined at:
 15226 ;;		line 228 in file "eusart.c"
 15227 ;; Parameters:    Size  Location     Type
 15228 ;;		None
 15229 ;; Auto vars:     Size  Location     Type
 15230 ;;		None
 15231 ;; Return value:  Size  Location     Type
 15232 ;;                  1    wreg      void 
 15233 ;; Registers used:
 15234 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15235 ;; Tracked objects:
 15236 ;;		On entry : 0/0
 15237 ;;		On exit  : 0/0
 15238 ;;		Unchanged: 0/0
 15239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15244 ;;Total ram usage:        1 bytes
 15245 ;; Hardware stack levels used: 1
 15246 ;; This function calls:
 15247 ;;		Nothing
 15248 ;; This function is called by:
 15249 ;;		_EUSART_Receive_ISR
 15250 ;;		_EUSART_DefaultErrorHandler
 15251 ;; This function uses a non-reentrant model
 15252 ;;
 15253                           
 15254  0C23                     _EUSART_RxDataHandler:	
 15255                           ;psect for function _EUSART_RxDataHandler
 15256                           
 15257  0C23                     i1l3662:	
 15258                           ;incstack = 0
 15259                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 15260                           
 15261                           
 15262                           ;eusart.c: 230:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 15263  0C23  0023               	movlb	3	; select bank3
 15264  0C24  0819               	movf	25,w	;volatile
 15265  0C25  00F0               	movwf	??_EUSART_RxDataHandler
 15266  0C26  087B               	movf	_eusartRxHead,w
 15267  0C27  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 15268  0C28  0086               	movwf	6
 15269  0C29  3001               	movlw	1	; select bank2/3
 15270  0C2A  0087               	movwf	7
 15271  0C2B  0870               	movf	??_EUSART_RxDataHandler,w
 15272  0C2C  0081               	movwf	1
 15273  0C2D                     i1l3664:
 15274  0C2D  3001               	movlw	1
 15275  0C2E  00F0               	movwf	??_EUSART_RxDataHandler
 15276  0C2F  0870               	movf	??_EUSART_RxDataHandler,w
 15277  0C30  07FB               	addwf	_eusartRxHead,f	;volatile
 15278  0C31                     i1l3666:
 15279                           
 15280                           ;eusart.c: 231:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 15281  0C31  3008               	movlw	8
 15282  0C32  027B               	subwf	_eusartRxHead,w	;volatile
 15283  0C33  1C03               	skipc
 15284  0C34  2C36               	goto	u125_21
 15285  0C35  2C37               	goto	u125_20
 15286  0C36                     u125_21:
 15287  0C36  2C38               	goto	i1l3670
 15288  0C37                     u125_20:
 15289  0C37                     i1l3668:
 15290                           
 15291                           ;eusart.c: 232:     {;eusart.c: 233:         eusartRxHead = 0;
 15292  0C37  01FB               	clrf	_eusartRxHead	;volatile
 15293  0C38                     i1l3670:
 15294                           
 15295                           ;eusart.c: 235:     eusartRxCount++;
 15296  0C38  3001               	movlw	1
 15297  0C39  00F0               	movwf	??_EUSART_RxDataHandler
 15298  0C3A  0870               	movf	??_EUSART_RxDataHandler,w
 15299  0C3B  0021               	movlb	1	; select bank1
 15300  0C3C  07D1               	addwf	_eusartRxCount^(0+128),f	;volatile
 15301  0C3D                     i1l641:
 15302  0C3D  0008               	return
 15303  0C3E                     __end_of_EUSART_RxDataHandler:
 15304                           
 15305                           	psect	text66
 15306  0A18                     __ptext66:	
 15307 ;; *************** function _CCP4_CompareISR *****************
 15308 ;; Defined at:
 15309 ;;		line 60 in file "ccp4.c"
 15310 ;; Parameters:    Size  Location     Type
 15311 ;;		None
 15312 ;; Auto vars:     Size  Location     Type
 15313 ;;		None
 15314 ;; Return value:  Size  Location     Type
 15315 ;;                  1    wreg      void 
 15316 ;; Registers used:
 15317 ;;		None
 15318 ;; Tracked objects:
 15319 ;;		On entry : 0/0
 15320 ;;		On exit  : 0/0
 15321 ;;		Unchanged: 0/0
 15322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15327 ;;Total ram usage:        0 bytes
 15328 ;; Hardware stack levels used: 1
 15329 ;; This function calls:
 15330 ;;		Nothing
 15331 ;; This function is called by:
 15332 ;;		_INTERRUPT_InterruptManager
 15333 ;; This function uses a non-reentrant model
 15334 ;;
 15335                           
 15336  0A18                     _CCP4_CompareISR:	
 15337                           ;psect for function _CCP4_CompareISR
 15338                           
 15339  0A18                     i1l4166:	
 15340                           ;incstack = 0
 15341                           ; Regs used in _CCP4_CompareISR: []
 15342                           
 15343                           
 15344                           ;ccp4.c: 63:     PIR4bits.CCP4IF = 0;
 15345  0A18  0020               	movlb	0	; select bank0
 15346  0A19  1194               	bcf	20,3	;volatile
 15347  0A1A                     i1l899:
 15348  0A1A  0008               	return
 15349  0A1B                     __end_of_CCP4_CompareISR:
 15350                           
 15351                           	psect	text67
 15352  0BAF                     __ptext67:	
 15353 ;; *************** function _CCP3_CaptureISR *****************
 15354 ;; Defined at:
 15355 ;;		line 78 in file "ccp3.c"
 15356 ;; Parameters:    Size  Location     Type
 15357 ;;		None
 15358 ;; Auto vars:     Size  Location     Type
 15359 ;;  module          2    8[COMMON] struct CCPR3Reg_tag
 15360 ;; Return value:  Size  Location     Type
 15361 ;;                  1    wreg      void 
 15362 ;; Registers used:
 15363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15364 ;; Tracked objects:
 15365 ;;		On entry : 0/0
 15366 ;;		On exit  : 0/0
 15367 ;;		Unchanged: 0/0
 15368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15370 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15372 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15373 ;;Total ram usage:        3 bytes
 15374 ;; Hardware stack levels used: 1
 15375 ;; Hardware stack levels required when called: 2
 15376 ;; This function calls:
 15377 ;;		Absolute function
 15378 ;;		_CCP3_DefaultCallBack
 15379 ;; This function is called by:
 15380 ;;		_INTERRUPT_InterruptManager
 15381 ;; This function uses a non-reentrant model
 15382 ;;
 15383                           
 15384  0BAF                     _CCP3_CaptureISR:	
 15385                           ;psect for function _CCP3_CaptureISR
 15386                           
 15387  0BAF                     i1l4102:	
 15388                           ;incstack = 0
 15389                           ; Regs used in _CCP3_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15390                           
 15391                           
 15392                           ;ccp3.c: 80:     CCP3_PERIOD_REG_T module;;ccp3.c: 83:     PIR4bits.CCP3IF = 0;
 15393  0BAF  0020               	movlb	0	; select bank0
 15394  0BB0  1114               	bcf	20,2	;volatile
 15395  0BB1                     i1l4104:
 15396                           
 15397                           ;ccp3.c: 86:     module.ccpr3l = CCPR3L;
 15398  0BB1  0026               	movlb	6	; select bank6
 15399  0BB2  0811               	movf	17,w	;volatile
 15400  0BB3  00F7               	movwf	??_CCP3_CaptureISR
 15401  0BB4  0877               	movf	??_CCP3_CaptureISR,w
 15402  0BB5  00F8               	movwf	CCP3_CaptureISR@module
 15403                           
 15404                           ;ccp3.c: 87:     module.ccpr3h = CCPR3H;
 15405  0BB6  0812               	movf	18,w	;volatile
 15406  0BB7  00F7               	movwf	??_CCP3_CaptureISR
 15407  0BB8  0877               	movf	??_CCP3_CaptureISR,w
 15408  0BB9  00F9               	movwf	CCP3_CaptureISR@module+1
 15409  0BBA                     i1l4106:
 15410                           
 15411                           ;ccp3.c: 90:     CCP3_CallBack(module.ccpr3_16Bit);
 15412  0BBA  0879               	movf	CCP3_CaptureISR@module+1,w
 15413  0BBB  00F4               	movwf	CCP3_DefaultCallBack@capturedValue+1
 15414  0BBC  0878               	movf	CCP3_CaptureISR@module,w
 15415  0BBD  00F3               	movwf	CCP3_DefaultCallBack@capturedValue
 15416  0BBE  0021               	movlb	1	; select bank1
 15417  0BBF  0841               	movf	(_CCP3_CallBack+1)^(0+128),w
 15418  0BC0  008A               	movwf	10
 15419  0BC1  0840               	movf	_CCP3_CallBack^(0+128),w
 15420  0BC2  000A               	callw
 15421  0BC3  318B               	pagesel	$
 15422  0BC4                     i1l473:
 15423  0BC4  0008               	return
 15424  0BC5                     __end_of_CCP3_CaptureISR:
 15425                           
 15426                           	psect	text68
 15427  0DDC                     __ptext68:	
 15428 ;; *************** function _CCP3_DefaultCallBack *****************
 15429 ;; Defined at:
 15430 ;;		line 29 in file "ccp3.c"
 15431 ;; Parameters:    Size  Location     Type
 15432 ;;  capturedValu    2    3[COMMON] unsigned short 
 15433 ;; Auto vars:     Size  Location     Type
 15434 ;;		None
 15435 ;; Return value:  Size  Location     Type
 15436 ;;                  1    wreg      void 
 15437 ;; Registers used:
 15438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15439 ;; Tracked objects:
 15440 ;;		On entry : 0/0
 15441 ;;		On exit  : 0/0
 15442 ;;		Unchanged: 0/0
 15443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15446 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15447 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15448 ;;Total ram usage:        4 bytes
 15449 ;; Hardware stack levels used: 1
 15450 ;; Hardware stack levels required when called: 1
 15451 ;; This function calls:
 15452 ;;		_JSN_GetLastTrig
 15453 ;;		_ReadPin
 15454 ;; This function is called by:
 15455 ;;		_CCP3_Initialize
 15456 ;;		_CCP3_CaptureISR
 15457 ;; This function uses a non-reentrant model
 15458 ;;
 15459                           
 15460  0DDC                     _CCP3_DefaultCallBack:	
 15461                           ;psect for function _CCP3_DefaultCallBack
 15462                           
 15463  0DDC                     i1l3926:	
 15464                           ;incstack = 0
 15465                           ; Regs used in _CCP3_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15466                           
 15467                           
 15468                           ;ccp3.c: 29: static void CCP3_DefaultCallBack(uint16_t capturedValue);ccp3.c: 30: {;ccp3
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 15469  0DDC  318A  2215  318D   	fcall	_JSN_GetLastTrig
 15470  0DDF  00F5               	movwf	??_CCP3_DefaultCallBack
 15471  0DE0  0875               	movf	??_CCP3_DefaultCallBack,w
 15472  0DE1  0021               	movlb	1	; select bank1
 15473  0DE2  00D4               	movwf	_lastTrig@ccp3$F991^(0+128)
 15474                           
 15475                           ;ccp3.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 15476  0DE3  2DFE               	goto	i1l3936
 15477  0DE4                     i1l3928:
 15478                           
 15479                           ;ccp3.c: 35:             ticksUp = capturedValue;
 15480  0DE4  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 15481  0DE5  0021               	movlb	1	; select bank1
 15482  0DE6  00BF               	movwf	(_ticksUp@ccp3$F988+1)^(0+128)
 15483  0DE7  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 15484  0DE8  00BE               	movwf	_ticksUp@ccp3$F988^(0+128)
 15485                           
 15486                           ;ccp3.c: 36:             break;
 15487  0DE9  2E16               	goto	i1l467
 15488  0DEA                     i1l3930:
 15489                           
 15490                           ;ccp3.c: 39:             ticksDown = capturedValue;
 15491  0DEA  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 15492  0DEB  0021               	movlb	1	; select bank1
 15493  0DEC  00BD               	movwf	(_ticksDown@ccp3$F989+1)^(0+128)
 15494  0DED  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 15495  0DEE  00BC               	movwf	_ticksDown@ccp3$F989^(0+128)
 15496  0DEF                     i1l3932:
 15497                           
 15498                           ;ccp3.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 15499  0DEF  083E               	movf	_ticksUp@ccp3$F988^(0+128),w
 15500  0DF0  023C               	subwf	_ticksDown@ccp3$F989^(0+128),w
 15501  0DF1  00F5               	movwf	??_CCP3_DefaultCallBack
 15502  0DF2  083F               	movf	(_ticksUp@ccp3$F988+1)^(0+128),w
 15503  0DF3  3B3D               	subwfb	(_ticksDown@ccp3$F989+1)^(0+128),w
 15504  0DF4  00F6               	movwf	??_CCP3_DefaultCallBack+1
 15505  0DF5  0854               	movf	_lastTrig@ccp3$F991^(0+128),w
 15506  0DF6  0086               	movwf	6
 15507  0DF7  3001               	movlw	1	; select bank2/3
 15508  0DF8  0087               	movwf	7
 15509  0DF9  0875               	movf	??_CCP3_DefaultCallBack,w
 15510  0DFA  3FC0               	movwi [0]fsr1
 15511  0DFB  0876               	movf	??_CCP3_DefaultCallBack+1,w
 15512  0DFC  3FC1               	movwi [1]fsr1
 15513                           
 15514                           ;ccp3.c: 43:             break;
 15515  0DFD  2E16               	goto	i1l467
 15516  0DFE                     i1l3936:
 15517  0DFE  0854               	movf	_lastTrig@ccp3$F991^(0+128),w
 15518  0DFF  3E05               	addlw	5
 15519  0E00  0086               	movwf	6
 15520  0E01  3001               	movlw	1	; select bank2/3
 15521  0E02  0087               	movwf	7
 15522  0E03  0801               	movf	1,w
 15523  0E04  3185  25A1  318D   	fcall	_ReadPin
 15524  0E07  00F5               	movwf	??_CCP3_DefaultCallBack
 15525  0E08  01F6               	clrf	??_CCP3_DefaultCallBack+1
 15526                           
 15527                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15528                           ; Switch size 1, requested type "simple"
 15529                           ; Number of cases is 1, Range of values is 0 to 0
 15530                           ; switch strategies available:
 15531                           ; Name         Instructions Cycles
 15532                           ; simple_byte            4     3 (average)
 15533                           ; direct_byte            8     6 (fixed)
 15534                           ; jumptable            260     6 (fixed)
 15535                           ;	Chosen strategy is simple_byte
 15536  0E09  0876               	movf	??_CCP3_DefaultCallBack+1,w
 15537  0E0A  3A00               	xorlw	0	; case 0
 15538  0E0B  1903               	skipnz
 15539  0E0C  2E0E               	goto	i1l4588
 15540  0E0D  2E16               	goto	i1l467
 15541  0E0E                     i1l4588:
 15542                           
 15543                           ; Switch size 1, requested type "simple"
 15544                           ; Number of cases is 2, Range of values is 0 to 1
 15545                           ; switch strategies available:
 15546                           ; Name         Instructions Cycles
 15547                           ; simple_byte            7     4 (average)
 15548                           ; direct_byte           10     6 (fixed)
 15549                           ; jumptable            260     6 (fixed)
 15550                           ;	Chosen strategy is simple_byte
 15551  0E0E  0875               	movf	??_CCP3_DefaultCallBack,w
 15552  0E0F  3A00               	xorlw	0	; case 0
 15553  0E10  1903               	skipnz
 15554  0E11  2DEA               	goto	i1l3930
 15555  0E12  3A01               	xorlw	1	; case 1
 15556  0E13  1903               	skipnz
 15557  0E14  2DE4               	goto	i1l3928
 15558  0E15  2E16               	goto	i1l467
 15559  0E16                     i1l467:
 15560  0E16  0008               	return
 15561  0E17                     __end_of_CCP3_DefaultCallBack:
 15562                           
 15563                           	psect	text69
 15564  0B99                     __ptext69:	
 15565 ;; *************** function _CCP2_CaptureISR *****************
 15566 ;; Defined at:
 15567 ;;		line 78 in file "ccp2.c"
 15568 ;; Parameters:    Size  Location     Type
 15569 ;;		None
 15570 ;; Auto vars:     Size  Location     Type
 15571 ;;  module          2    8[COMMON] struct CCPR2Reg_tag
 15572 ;; Return value:  Size  Location     Type
 15573 ;;                  1    wreg      void 
 15574 ;; Registers used:
 15575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15576 ;; Tracked objects:
 15577 ;;		On entry : 0/0
 15578 ;;		On exit  : 0/0
 15579 ;;		Unchanged: 0/0
 15580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15582 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15583 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15584 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15585 ;;Total ram usage:        3 bytes
 15586 ;; Hardware stack levels used: 1
 15587 ;; Hardware stack levels required when called: 2
 15588 ;; This function calls:
 15589 ;;		Absolute function
 15590 ;;		_CCP2_DefaultCallBack
 15591 ;; This function is called by:
 15592 ;;		_INTERRUPT_InterruptManager
 15593 ;; This function uses a non-reentrant model
 15594 ;;
 15595                           
 15596  0B99                     _CCP2_CaptureISR:	
 15597                           ;psect for function _CCP2_CaptureISR
 15598                           
 15599  0B99                     i1l4096:	
 15600                           ;incstack = 0
 15601                           ; Regs used in _CCP2_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15602                           
 15603                           
 15604                           ;ccp2.c: 80:     CCP2_PERIOD_REG_T module;;ccp2.c: 83:     PIR4bits.CCP2IF = 0;
 15605  0B99  0020               	movlb	0	; select bank0
 15606  0B9A  1094               	bcf	20,1	;volatile
 15607  0B9B                     i1l4098:
 15608                           
 15609                           ;ccp2.c: 86:     module.ccpr2l = CCPR2L;
 15610  0B9B  0025               	movlb	5	; select bank5
 15611  0B9C  0815               	movf	21,w	;volatile
 15612  0B9D  00F7               	movwf	??_CCP2_CaptureISR
 15613  0B9E  0877               	movf	??_CCP2_CaptureISR,w
 15614  0B9F  00F8               	movwf	CCP2_CaptureISR@module
 15615                           
 15616                           ;ccp2.c: 87:     module.ccpr2h = CCPR2H;
 15617  0BA0  0816               	movf	22,w	;volatile
 15618  0BA1  00F7               	movwf	??_CCP2_CaptureISR
 15619  0BA2  0877               	movf	??_CCP2_CaptureISR,w
 15620  0BA3  00F9               	movwf	CCP2_CaptureISR@module+1
 15621  0BA4                     i1l4100:
 15622                           
 15623                           ;ccp2.c: 90:     CCP2_CallBack(module.ccpr2_16Bit);
 15624  0BA4  0879               	movf	CCP2_CaptureISR@module+1,w
 15625  0BA5  00F4               	movwf	CCP2_DefaultCallBack@capturedValue+1
 15626  0BA6  0878               	movf	CCP2_CaptureISR@module,w
 15627  0BA7  00F3               	movwf	CCP2_DefaultCallBack@capturedValue
 15628  0BA8  0021               	movlb	1	; select bank1
 15629  0BA9  0847               	movf	(_CCP2_CallBack+1)^(0+128),w
 15630  0BAA  008A               	movwf	10
 15631  0BAB  0846               	movf	_CCP2_CallBack^(0+128),w
 15632  0BAC  000A               	callw
 15633  0BAD  318B               	pagesel	$
 15634  0BAE                     i1l427:
 15635  0BAE  0008               	return
 15636  0BAF                     __end_of_CCP2_CaptureISR:
 15637                           
 15638                           	psect	text70
 15639  0DA1                     __ptext70:	
 15640 ;; *************** function _CCP2_DefaultCallBack *****************
 15641 ;; Defined at:
 15642 ;;		line 29 in file "ccp2.c"
 15643 ;; Parameters:    Size  Location     Type
 15644 ;;  capturedValu    2    3[COMMON] unsigned short 
 15645 ;; Auto vars:     Size  Location     Type
 15646 ;;		None
 15647 ;; Return value:  Size  Location     Type
 15648 ;;                  1    wreg      void 
 15649 ;; Registers used:
 15650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15651 ;; Tracked objects:
 15652 ;;		On entry : 0/0
 15653 ;;		On exit  : 0/0
 15654 ;;		Unchanged: 0/0
 15655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15658 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15659 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15660 ;;Total ram usage:        4 bytes
 15661 ;; Hardware stack levels used: 1
 15662 ;; Hardware stack levels required when called: 1
 15663 ;; This function calls:
 15664 ;;		_JSN_GetLastTrig
 15665 ;;		_ReadPin
 15666 ;; This function is called by:
 15667 ;;		_CCP2_Initialize
 15668 ;;		_CCP2_CaptureISR
 15669 ;; This function uses a non-reentrant model
 15670 ;;
 15671                           
 15672  0DA1                     _CCP2_DefaultCallBack:	
 15673                           ;psect for function _CCP2_DefaultCallBack
 15674                           
 15675  0DA1                     i1l3910:	
 15676                           ;incstack = 0
 15677                           ; Regs used in _CCP2_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15678                           
 15679                           
 15680                           ;ccp2.c: 29: static void CCP2_DefaultCallBack(uint16_t capturedValue);ccp2.c: 30: {;ccp2
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 15681  0DA1  318A  2215  318D   	fcall	_JSN_GetLastTrig
 15682  0DA4  00F5               	movwf	??_CCP2_DefaultCallBack
 15683  0DA5  0875               	movf	??_CCP2_DefaultCallBack,w
 15684  0DA6  0021               	movlb	1	; select bank1
 15685  0DA7  00D6               	movwf	_lastTrig@ccp2$F870^(0+128)
 15686                           
 15687                           ;ccp2.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 15688  0DA8  2DC3               	goto	i1l3920
 15689  0DA9                     i1l3912:
 15690                           
 15691                           ;ccp2.c: 35:             ticksUp = capturedValue;
 15692  0DA9  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 15693  0DAA  0021               	movlb	1	; select bank1
 15694  0DAB  00C5               	movwf	(_ticksUp@ccp2$F867+1)^(0+128)
 15695  0DAC  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 15696  0DAD  00C4               	movwf	_ticksUp@ccp2$F867^(0+128)
 15697                           
 15698                           ;ccp2.c: 36:             break;
 15699  0DAE  2DDB               	goto	i1l421
 15700  0DAF                     i1l3914:
 15701                           
 15702                           ;ccp2.c: 39:             ticksDown = capturedValue;
 15703  0DAF  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 15704  0DB0  0021               	movlb	1	; select bank1
 15705  0DB1  00C3               	movwf	(_ticksDown@ccp2$F868+1)^(0+128)
 15706  0DB2  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 15707  0DB3  00C2               	movwf	_ticksDown@ccp2$F868^(0+128)
 15708  0DB4                     i1l3916:
 15709                           
 15710                           ;ccp2.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 15711  0DB4  0844               	movf	_ticksUp@ccp2$F867^(0+128),w
 15712  0DB5  0242               	subwf	_ticksDown@ccp2$F868^(0+128),w
 15713  0DB6  00F5               	movwf	??_CCP2_DefaultCallBack
 15714  0DB7  0845               	movf	(_ticksUp@ccp2$F867+1)^(0+128),w
 15715  0DB8  3B43               	subwfb	(_ticksDown@ccp2$F868+1)^(0+128),w
 15716  0DB9  00F6               	movwf	??_CCP2_DefaultCallBack+1
 15717  0DBA  0856               	movf	_lastTrig@ccp2$F870^(0+128),w
 15718  0DBB  0086               	movwf	6
 15719  0DBC  3001               	movlw	1	; select bank2/3
 15720  0DBD  0087               	movwf	7
 15721  0DBE  0875               	movf	??_CCP2_DefaultCallBack,w
 15722  0DBF  3FC0               	movwi [0]fsr1
 15723  0DC0  0876               	movf	??_CCP2_DefaultCallBack+1,w
 15724  0DC1  3FC1               	movwi [1]fsr1
 15725                           
 15726                           ;ccp2.c: 43:             break;
 15727  0DC2  2DDB               	goto	i1l421
 15728  0DC3                     i1l3920:
 15729  0DC3  0856               	movf	_lastTrig@ccp2$F870^(0+128),w
 15730  0DC4  3E05               	addlw	5
 15731  0DC5  0086               	movwf	6
 15732  0DC6  3001               	movlw	1	; select bank2/3
 15733  0DC7  0087               	movwf	7
 15734  0DC8  0801               	movf	1,w
 15735  0DC9  3185  25A1  318D   	fcall	_ReadPin
 15736  0DCC  00F5               	movwf	??_CCP2_DefaultCallBack
 15737  0DCD  01F6               	clrf	??_CCP2_DefaultCallBack+1
 15738                           
 15739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15740                           ; Switch size 1, requested type "simple"
 15741                           ; Number of cases is 1, Range of values is 0 to 0
 15742                           ; switch strategies available:
 15743                           ; Name         Instructions Cycles
 15744                           ; simple_byte            4     3 (average)
 15745                           ; direct_byte            8     6 (fixed)
 15746                           ; jumptable            260     6 (fixed)
 15747                           ;	Chosen strategy is simple_byte
 15748  0DCE  0876               	movf	??_CCP2_DefaultCallBack+1,w
 15749  0DCF  3A00               	xorlw	0	; case 0
 15750  0DD0  1903               	skipnz
 15751  0DD1  2DD3               	goto	i1l4590
 15752  0DD2  2DDB               	goto	i1l421
 15753  0DD3                     i1l4590:
 15754                           
 15755                           ; Switch size 1, requested type "simple"
 15756                           ; Number of cases is 2, Range of values is 0 to 1
 15757                           ; switch strategies available:
 15758                           ; Name         Instructions Cycles
 15759                           ; simple_byte            7     4 (average)
 15760                           ; direct_byte           10     6 (fixed)
 15761                           ; jumptable            260     6 (fixed)
 15762                           ;	Chosen strategy is simple_byte
 15763  0DD3  0875               	movf	??_CCP2_DefaultCallBack,w
 15764  0DD4  3A00               	xorlw	0	; case 0
 15765  0DD5  1903               	skipnz
 15766  0DD6  2DAF               	goto	i1l3914
 15767  0DD7  3A01               	xorlw	1	; case 1
 15768  0DD8  1903               	skipnz
 15769  0DD9  2DA9               	goto	i1l3912
 15770  0DDA  2DDB               	goto	i1l421
 15771  0DDB                     i1l421:
 15772  0DDB  0008               	return
 15773  0DDC                     __end_of_CCP2_DefaultCallBack:
 15774                           
 15775                           	psect	text71
 15776  0B83                     __ptext71:	
 15777 ;; *************** function _CCP1_CaptureISR *****************
 15778 ;; Defined at:
 15779 ;;		line 78 in file "ccp1.c"
 15780 ;; Parameters:    Size  Location     Type
 15781 ;;		None
 15782 ;; Auto vars:     Size  Location     Type
 15783 ;;  module          2    8[COMMON] struct CCPR1Reg_tag
 15784 ;; Return value:  Size  Location     Type
 15785 ;;                  1    wreg      void 
 15786 ;; Registers used:
 15787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15788 ;; Tracked objects:
 15789 ;;		On entry : 0/0
 15790 ;;		On exit  : 0/0
 15791 ;;		Unchanged: 0/0
 15792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15794 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15795 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15796 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15797 ;;Total ram usage:        3 bytes
 15798 ;; Hardware stack levels used: 1
 15799 ;; Hardware stack levels required when called: 2
 15800 ;; This function calls:
 15801 ;;		Absolute function
 15802 ;;		_CCP1_DefaultCallBack
 15803 ;; This function is called by:
 15804 ;;		_INTERRUPT_InterruptManager
 15805 ;; This function uses a non-reentrant model
 15806 ;;
 15807                           
 15808  0B83                     _CCP1_CaptureISR:	
 15809                           ;psect for function _CCP1_CaptureISR
 15810                           
 15811  0B83                     i1l4090:	
 15812                           ;incstack = 0
 15813                           ; Regs used in _CCP1_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15814                           
 15815                           
 15816                           ;ccp1.c: 80:     CCP1_PERIOD_REG_T module;;ccp1.c: 83:     PIR4bits.CCP1IF = 0;
 15817  0B83  0020               	movlb	0	; select bank0
 15818  0B84  1014               	bcf	20,0	;volatile
 15819  0B85                     i1l4092:
 15820                           
 15821                           ;ccp1.c: 86:     module.ccpr1l = CCPR1L;
 15822  0B85  0025               	movlb	5	; select bank5
 15823  0B86  0811               	movf	17,w	;volatile
 15824  0B87  00F7               	movwf	??_CCP1_CaptureISR
 15825  0B88  0877               	movf	??_CCP1_CaptureISR,w
 15826  0B89  00F8               	movwf	CCP1_CaptureISR@module
 15827                           
 15828                           ;ccp1.c: 87:     module.ccpr1h = CCPR1H;
 15829  0B8A  0812               	movf	18,w	;volatile
 15830  0B8B  00F7               	movwf	??_CCP1_CaptureISR
 15831  0B8C  0877               	movf	??_CCP1_CaptureISR,w
 15832  0B8D  00F9               	movwf	CCP1_CaptureISR@module+1
 15833  0B8E                     i1l4094:
 15834                           
 15835                           ;ccp1.c: 90:     CCP1_CallBack(module.ccpr1_16Bit);
 15836  0B8E  0879               	movf	CCP1_CaptureISR@module+1,w
 15837  0B8F  00F4               	movwf	CCP1_DefaultCallBack@capturedValue+1
 15838  0B90  0878               	movf	CCP1_CaptureISR@module,w
 15839  0B91  00F3               	movwf	CCP1_DefaultCallBack@capturedValue
 15840  0B92  0021               	movlb	1	; select bank1
 15841  0B93  084D               	movf	(_CCP1_CallBack+1)^(0+128),w
 15842  0B94  008A               	movwf	10
 15843  0B95  084C               	movf	_CCP1_CallBack^(0+128),w
 15844  0B96  000A               	callw
 15845  0B97  318B               	pagesel	$
 15846  0B98                     i1l381:
 15847  0B98  0008               	return
 15848  0B99                     __end_of_CCP1_CaptureISR:
 15849                           
 15850                           	psect	text72
 15851  0D66                     __ptext72:	
 15852 ;; *************** function _CCP1_DefaultCallBack *****************
 15853 ;; Defined at:
 15854 ;;		line 29 in file "ccp1.c"
 15855 ;; Parameters:    Size  Location     Type
 15856 ;;  capturedValu    2    3[COMMON] unsigned short 
 15857 ;; Auto vars:     Size  Location     Type
 15858 ;;		None
 15859 ;; Return value:  Size  Location     Type
 15860 ;;                  1    wreg      void 
 15861 ;; Registers used:
 15862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15863 ;; Tracked objects:
 15864 ;;		On entry : 0/0
 15865 ;;		On exit  : 0/0
 15866 ;;		Unchanged: 0/0
 15867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15871 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15872 ;;Total ram usage:        4 bytes
 15873 ;; Hardware stack levels used: 1
 15874 ;; Hardware stack levels required when called: 1
 15875 ;; This function calls:
 15876 ;;		_JSN_GetLastTrig
 15877 ;;		_ReadPin
 15878 ;; This function is called by:
 15879 ;;		_CCP1_Initialize
 15880 ;;		_CCP1_CaptureISR
 15881 ;; This function uses a non-reentrant model
 15882 ;;
 15883                           
 15884  0D66                     _CCP1_DefaultCallBack:	
 15885                           ;psect for function _CCP1_DefaultCallBack
 15886                           
 15887  0D66                     i1l3894:	
 15888                           ;incstack = 0
 15889                           ; Regs used in _CCP1_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15890                           
 15891                           
 15892                           ;ccp1.c: 29: static void CCP1_DefaultCallBack(uint16_t capturedValue);ccp1.c: 30: {;ccp1
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 15893  0D66  318A  2215  318D   	fcall	_JSN_GetLastTrig
 15894  0D69  00F5               	movwf	??_CCP1_DefaultCallBack
 15895  0D6A  0875               	movf	??_CCP1_DefaultCallBack,w
 15896  0D6B  0021               	movlb	1	; select bank1
 15897  0D6C  00D8               	movwf	_lastTrig@ccp1$F728^(0+128)
 15898                           
 15899                           ;ccp1.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 15900  0D6D  2D88               	goto	i1l3904
 15901  0D6E                     i1l3896:
 15902                           
 15903                           ;ccp1.c: 35:             ticksUp = capturedValue;
 15904  0D6E  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 15905  0D6F  0021               	movlb	1	; select bank1
 15906  0D70  00CB               	movwf	(_ticksUp+1)^(0+128)
 15907  0D71  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 15908  0D72  00CA               	movwf	_ticksUp^(0+128)
 15909                           
 15910                           ;ccp1.c: 36:             break;
 15911  0D73  2DA0               	goto	i1l375
 15912  0D74                     i1l3898:
 15913                           
 15914                           ;ccp1.c: 39:             ticksDown = capturedValue;
 15915  0D74  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 15916  0D75  0021               	movlb	1	; select bank1
 15917  0D76  00C9               	movwf	(_ticksDown+1)^(0+128)
 15918  0D77  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 15919  0D78  00C8               	movwf	_ticksDown^(0+128)
 15920  0D79                     i1l3900:
 15921                           
 15922                           ;ccp1.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 15923  0D79  084A               	movf	_ticksUp^(0+128),w
 15924  0D7A  0248               	subwf	_ticksDown^(0+128),w
 15925  0D7B  00F5               	movwf	??_CCP1_DefaultCallBack
 15926  0D7C  084B               	movf	(_ticksUp+1)^(0+128),w
 15927  0D7D  3B49               	subwfb	(_ticksDown+1)^(0+128),w
 15928  0D7E  00F6               	movwf	??_CCP1_DefaultCallBack+1
 15929  0D7F  0858               	movf	_lastTrig@ccp1$F728^(0+128),w
 15930  0D80  0086               	movwf	6
 15931  0D81  3001               	movlw	1	; select bank2/3
 15932  0D82  0087               	movwf	7
 15933  0D83  0875               	movf	??_CCP1_DefaultCallBack,w
 15934  0D84  3FC0               	movwi [0]fsr1
 15935  0D85  0876               	movf	??_CCP1_DefaultCallBack+1,w
 15936  0D86  3FC1               	movwi [1]fsr1
 15937                           
 15938                           ;ccp1.c: 43:             break;
 15939  0D87  2DA0               	goto	i1l375
 15940  0D88                     i1l3904:
 15941  0D88  0858               	movf	_lastTrig@ccp1$F728^(0+128),w
 15942  0D89  3E05               	addlw	5
 15943  0D8A  0086               	movwf	6
 15944  0D8B  3001               	movlw	1	; select bank2/3
 15945  0D8C  0087               	movwf	7
 15946  0D8D  0801               	movf	1,w
 15947  0D8E  3185  25A1  318D   	fcall	_ReadPin
 15948  0D91  00F5               	movwf	??_CCP1_DefaultCallBack
 15949  0D92  01F6               	clrf	??_CCP1_DefaultCallBack+1
 15950                           
 15951                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15952                           ; Switch size 1, requested type "simple"
 15953                           ; Number of cases is 1, Range of values is 0 to 0
 15954                           ; switch strategies available:
 15955                           ; Name         Instructions Cycles
 15956                           ; simple_byte            4     3 (average)
 15957                           ; direct_byte            8     6 (fixed)
 15958                           ; jumptable            260     6 (fixed)
 15959                           ;	Chosen strategy is simple_byte
 15960  0D93  0876               	movf	??_CCP1_DefaultCallBack+1,w
 15961  0D94  3A00               	xorlw	0	; case 0
 15962  0D95  1903               	skipnz
 15963  0D96  2D98               	goto	i1l4592
 15964  0D97  2DA0               	goto	i1l375
 15965  0D98                     i1l4592:
 15966                           
 15967                           ; Switch size 1, requested type "simple"
 15968                           ; Number of cases is 2, Range of values is 0 to 1
 15969                           ; switch strategies available:
 15970                           ; Name         Instructions Cycles
 15971                           ; simple_byte            7     4 (average)
 15972                           ; direct_byte           10     6 (fixed)
 15973                           ; jumptable            260     6 (fixed)
 15974                           ;	Chosen strategy is simple_byte
 15975  0D98  0875               	movf	??_CCP1_DefaultCallBack,w
 15976  0D99  3A00               	xorlw	0	; case 0
 15977  0D9A  1903               	skipnz
 15978  0D9B  2D74               	goto	i1l3898
 15979  0D9C  3A01               	xorlw	1	; case 1
 15980  0D9D  1903               	skipnz
 15981  0D9E  2D6E               	goto	i1l3896
 15982  0D9F  2DA0               	goto	i1l375
 15983  0DA0                     i1l375:
 15984  0DA0  0008               	return
 15985  0DA1                     __end_of_CCP1_DefaultCallBack:
 15986                           
 15987                           	psect	text73
 15988  05A1                     __ptext73:	
 15989 ;; *************** function _ReadPin *****************
 15990 ;; Defined at:
 15991 ;;		line 103 in file "PIC16Xpress_DevBoard.c"
 15992 ;; Parameters:    Size  Location     Type
 15993 ;;  pin             1    wreg     enum E7144
 15994 ;; Auto vars:     Size  Location     Type
 15995 ;;  pin             1    2[COMMON] enum E7144
 15996 ;; Return value:  Size  Location     Type
 15997 ;;                  1    wreg      unsigned char 
 15998 ;; Registers used:
 15999 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 16000 ;; Tracked objects:
 16001 ;;		On entry : 0/0
 16002 ;;		On exit  : 0/0
 16003 ;;		Unchanged: 0/0
 16004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16007 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16008 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16009 ;;Total ram usage:        3 bytes
 16010 ;; Hardware stack levels used: 1
 16011 ;; This function calls:
 16012 ;;		Nothing
 16013 ;; This function is called by:
 16014 ;;		_CCP1_DefaultCallBack
 16015 ;;		_CCP2_DefaultCallBack
 16016 ;;		_CCP3_DefaultCallBack
 16017 ;; This function uses a non-reentrant model
 16018 ;;
 16019                           
 16020  05A1                     _ReadPin:	
 16021                           ;psect for function _ReadPin
 16022                           
 16023                           
 16024                           ;incstack = 0
 16025                           ; Regs used in _ReadPin: [wreg-fsr0h+status,2+status,0]
 16026                           ;ReadPin@pin stored from wreg
 16027  05A1  00F2               	movwf	ReadPin@pin
 16028  05A2                     i1l3364:
 16029                           
 16030                           ;PIC16Xpress_DevBoard.c: 104:     switch(pin) {
 16031  05A2  2DF7               	goto	i1l3444
 16032  05A3                     i1l3366:
 16033                           
 16034                           ;PIC16Xpress_DevBoard.c: 106:             return PORTAbits.RA5;
 16035  05A3  0020               	movlb	0	; select bank0
 16036  05A4  0E0C               	swapf	12,w	;volatile
 16037  05A5  0C89               	rrf	9,f
 16038  05A6  3901               	andlw	1
 16039  05A7  2E37               	goto	i1l164
 16040  05A8                     i1l3370:
 16041                           
 16042                           ;PIC16Xpress_DevBoard.c: 108:             return PORTAbits.RA4;
 16043  05A8  0020               	movlb	0	; select bank0
 16044  05A9  0E0C               	swapf	12,w	;volatile
 16045  05AA  3901               	andlw	1
 16046  05AB  2E37               	goto	i1l164
 16047  05AC                     i1l3374:
 16048                           
 16049                           ;PIC16Xpress_DevBoard.c: 110:             return 0xFF;
 16050  05AC  30FF               	movlw	255
 16051  05AD  2E37               	goto	i1l164
 16052  05AE                     i1l3378:
 16053                           
 16054                           ;PIC16Xpress_DevBoard.c: 112:             return PORTCbits.RC5;
 16055  05AE  0020               	movlb	0	; select bank0
 16056  05AF  0E0E               	swapf	14,w	;volatile
 16057  05B0  0C89               	rrf	9,f
 16058  05B1  3901               	andlw	1
 16059  05B2  2E37               	goto	i1l164
 16060  05B3                     i1l3382:
 16061                           
 16062                           ;PIC16Xpress_DevBoard.c: 114:             return PORTCbits.RC4;
 16063  05B3  0020               	movlb	0	; select bank0
 16064  05B4  0E0E               	swapf	14,w	;volatile
 16065  05B5  3901               	andlw	1
 16066  05B6  2E37               	goto	i1l164
 16067  05B7                     i1l3386:
 16068                           
 16069                           ;PIC16Xpress_DevBoard.c: 116:             return PORTCbits.RC3;
 16070  05B7  0020               	movlb	0	; select bank0
 16071  05B8  0C0E               	rrf	14,w	;volatile
 16072  05B9  00F0               	movwf	??_ReadPin
 16073  05BA  0CF0               	rrf	??_ReadPin,f
 16074  05BB  0C70               	rrf	??_ReadPin,w
 16075  05BC  3901               	andlw	1
 16076  05BD  2E37               	goto	i1l164
 16077  05BE                     i1l3390:
 16078                           
 16079                           ;PIC16Xpress_DevBoard.c: 118:             return PORTCbits.RC6;
 16080  05BE  0020               	movlb	0	; select bank0
 16081  05BF  0E0E               	swapf	14,w	;volatile
 16082  05C0  0C89               	rrf	9,f
 16083  05C1  0C89               	rrf	9,f
 16084  05C2  3901               	andlw	1
 16085  05C3  2E37               	goto	i1l164
 16086  05C4                     i1l3394:
 16087                           
 16088                           ;PIC16Xpress_DevBoard.c: 120:             return PORTCbits.RC7;
 16089  05C4  0020               	movlb	0	; select bank0
 16090  05C5  0D0E               	rlf	14,w	;volatile
 16091  05C6  0D0E               	rlf	14,w	;volatile
 16092  05C7  3901               	andlw	1
 16093  05C8  2E37               	goto	i1l164
 16094  05C9                     i1l3398:
 16095                           
 16096                           ;PIC16Xpress_DevBoard.c: 122:             return PORTBbits.RB7;
 16097  05C9  0020               	movlb	0	; select bank0
 16098  05CA  0D0D               	rlf	13,w	;volatile
 16099  05CB  0D0D               	rlf	13,w	;volatile
 16100  05CC  3901               	andlw	1
 16101  05CD  2E37               	goto	i1l164
 16102  05CE                     i1l3402:
 16103                           
 16104                           ;PIC16Xpress_DevBoard.c: 124:             return PORTAbits.RA0;
 16105  05CE  0020               	movlb	0	; select bank0
 16106  05CF  080C               	movf	12,w	;volatile
 16107  05D0  3901               	andlw	1
 16108  05D1  2E37               	goto	i1l164
 16109  05D2                     i1l3406:
 16110                           
 16111                           ;PIC16Xpress_DevBoard.c: 126:             return PORTAbits.RA1;
 16112  05D2  0020               	movlb	0	; select bank0
 16113  05D3  0C0C               	rrf	12,w	;volatile
 16114  05D4  3901               	andlw	1
 16115  05D5  2E37               	goto	i1l164
 16116  05D6                     i1l3410:
 16117                           
 16118                           ;PIC16Xpress_DevBoard.c: 128:             return PORTAbits.RA2;
 16119  05D6  0020               	movlb	0	; select bank0
 16120  05D7  0C0C               	rrf	12,w	;volatile
 16121  05D8  0C89               	rrf	9,f
 16122  05D9  3901               	andlw	1
 16123  05DA  2E37               	goto	i1l164
 16124  05DB                     i1l3414:
 16125                           
 16126                           ;PIC16Xpress_DevBoard.c: 130:             return PORTCbits.RC0;
 16127  05DB  0020               	movlb	0	; select bank0
 16128  05DC  080E               	movf	14,w	;volatile
 16129  05DD  3901               	andlw	1
 16130  05DE  2E37               	goto	i1l164
 16131  05DF                     i1l3418:
 16132                           
 16133                           ;PIC16Xpress_DevBoard.c: 132:             return PORTCbits.RC1;
 16134  05DF  0020               	movlb	0	; select bank0
 16135  05E0  0C0E               	rrf	14,w	;volatile
 16136  05E1  3901               	andlw	1
 16137  05E2  2E37               	goto	i1l164
 16138  05E3                     i1l3422:
 16139                           
 16140                           ;PIC16Xpress_DevBoard.c: 134:             return PORTCbits.RC2;
 16141  05E3  0020               	movlb	0	; select bank0
 16142  05E4  0C0E               	rrf	14,w	;volatile
 16143  05E5  0C89               	rrf	9,f
 16144  05E6  3901               	andlw	1
 16145  05E7  2E37               	goto	i1l164
 16146  05E8                     i1l3426:
 16147                           
 16148                           ;PIC16Xpress_DevBoard.c: 136:             return PORTBbits.RB4;
 16149  05E8  0020               	movlb	0	; select bank0
 16150  05E9  0E0D               	swapf	13,w	;volatile
 16151  05EA  3901               	andlw	1
 16152  05EB  2E37               	goto	i1l164
 16153  05EC                     i1l3430:
 16154                           
 16155                           ;PIC16Xpress_DevBoard.c: 138:             return PORTBbits.RB5;
 16156  05EC  0020               	movlb	0	; select bank0
 16157  05ED  0E0D               	swapf	13,w	;volatile
 16158  05EE  0C89               	rrf	9,f
 16159  05EF  3901               	andlw	1
 16160  05F0  2E37               	goto	i1l164
 16161  05F1                     i1l3434:
 16162                           
 16163                           ;PIC16Xpress_DevBoard.c: 140:             return PORTBbits.RB6;
 16164  05F1  0020               	movlb	0	; select bank0
 16165  05F2  0E0D               	swapf	13,w	;volatile
 16166  05F3  0C89               	rrf	9,f
 16167  05F4  0C89               	rrf	9,f
 16168  05F5  3901               	andlw	1
 16169  05F6  2E37               	goto	i1l164
 16170  05F7                     i1l3444:
 16171  05F7  0872               	movf	ReadPin@pin,w
 16172  05F8  00F0               	movwf	??_ReadPin
 16173  05F9  01F1               	clrf	??_ReadPin+1
 16174                           
 16175                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16176                           ; Switch size 1, requested type "simple"
 16177                           ; Number of cases is 1, Range of values is 0 to 0
 16178                           ; switch strategies available:
 16179                           ; Name         Instructions Cycles
 16180                           ; simple_byte            4     3 (average)
 16181                           ; direct_byte            8     6 (fixed)
 16182                           ; jumptable            260     6 (fixed)
 16183                           ;	Chosen strategy is simple_byte
 16184  05FA  0871               	movf	??_ReadPin+1,w
 16185  05FB  3A00               	xorlw	0	; case 0
 16186  05FC  1903               	skipnz
 16187  05FD  2DFF               	goto	i1l4594
 16188  05FE  2DAC               	goto	i1l3374
 16189  05FF                     i1l4594:
 16190                           
 16191                           ; Switch size 1, requested type "simple"
 16192                           ; Number of cases is 18, Range of values is 0 to 17
 16193                           ; switch strategies available:
 16194                           ; Name         Instructions Cycles
 16195                           ; direct_byte           42     6 (fixed)
 16196                           ; simple_byte           55    28 (average)
 16197                           ; jumptable            260     6 (fixed)
 16198                           ;	Chosen strategy is simple_byte
 16199  05FF  0870               	movf	??_ReadPin,w
 16200  0600  3A00               	xorlw	0	; case 0
 16201  0601  1903               	skipnz
 16202  0602  2DA3               	goto	i1l3366
 16203  0603  3A01               	xorlw	1	; case 1
 16204  0604  1903               	skipnz
 16205  0605  2DA8               	goto	i1l3370
 16206  0606  3A03               	xorlw	3	; case 2
 16207  0607  1903               	skipnz
 16208  0608  2DAC               	goto	i1l3374
 16209  0609  3A01               	xorlw	1	; case 3
 16210  060A  1903               	skipnz
 16211  060B  2DAE               	goto	i1l3378
 16212  060C  3A07               	xorlw	7	; case 4
 16213  060D  1903               	skipnz
 16214  060E  2DB3               	goto	i1l3382
 16215  060F  3A01               	xorlw	1	; case 5
 16216  0610  1903               	skipnz
 16217  0611  2DB7               	goto	i1l3386
 16218  0612  3A03               	xorlw	3	; case 6
 16219  0613  1903               	skipnz
 16220  0614  2DBE               	goto	i1l3390
 16221  0615  3A01               	xorlw	1	; case 7
 16222  0616  1903               	skipnz
 16223  0617  2DC4               	goto	i1l3394
 16224  0618  3A0F               	xorlw	15	; case 8
 16225  0619  1903               	skipnz
 16226  061A  2DC9               	goto	i1l3398
 16227  061B  3A01               	xorlw	1	; case 9
 16228  061C  1903               	skipnz
 16229  061D  2DCE               	goto	i1l3402
 16230  061E  3A03               	xorlw	3	; case 10
 16231  061F  1903               	skipnz
 16232  0620  2DD2               	goto	i1l3406
 16233  0621  3A01               	xorlw	1	; case 11
 16234  0622  1903               	skipnz
 16235  0623  2DD6               	goto	i1l3410
 16236  0624  3A07               	xorlw	7	; case 12
 16237  0625  1903               	skipnz
 16238  0626  2DDB               	goto	i1l3414
 16239  0627  3A01               	xorlw	1	; case 13
 16240  0628  1903               	skipnz
 16241  0629  2DDF               	goto	i1l3418
 16242  062A  3A03               	xorlw	3	; case 14
 16243  062B  1903               	skipnz
 16244  062C  2DE3               	goto	i1l3422
 16245  062D  3A01               	xorlw	1	; case 15
 16246  062E  1903               	skipnz
 16247  062F  2DE8               	goto	i1l3426
 16248  0630  3A1F               	xorlw	31	; case 16
 16249  0631  1903               	skipnz
 16250  0632  2DEC               	goto	i1l3430
 16251  0633  3A01               	xorlw	1	; case 17
 16252  0634  1903               	skipnz
 16253  0635  2DF1               	goto	i1l3434
 16254  0636  2DAC               	goto	i1l3374
 16255  0637                     i1l164:
 16256  0637  0008               	return
 16257  0638                     __end_of_ReadPin:
 16258                           
 16259                           	psect	text74
 16260  0A15                     __ptext74:	
 16261 ;; *************** function _JSN_GetLastTrig *****************
 16262 ;; Defined at:
 16263 ;;		line 118 in file "JSN_Sensor.c"
 16264 ;; Parameters:    Size  Location     Type
 16265 ;;		None
 16266 ;; Auto vars:     Size  Location     Type
 16267 ;;		None
 16268 ;; Return value:  Size  Location     Type
 16269 ;;                  1    wreg      PTR struct .
 16270 ;; Registers used:
 16271 ;;		wreg
 16272 ;; Tracked objects:
 16273 ;;		On entry : 0/0
 16274 ;;		On exit  : 0/0
 16275 ;;		Unchanged: 0/0
 16276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16281 ;;Total ram usage:        0 bytes
 16282 ;; Hardware stack levels used: 1
 16283 ;; This function calls:
 16284 ;;		Nothing
 16285 ;; This function is called by:
 16286 ;;		_CCP1_DefaultCallBack
 16287 ;;		_CCP2_DefaultCallBack
 16288 ;;		_CCP3_DefaultCallBack
 16289 ;; This function uses a non-reentrant model
 16290 ;;
 16291                           
 16292  0A15                     _JSN_GetLastTrig:	
 16293                           ;psect for function _JSN_GetLastTrig
 16294                           
 16295  0A15                     i1l3360:	
 16296                           ;incstack = 0
 16297                           ; Regs used in _JSN_GetLastTrig: [wreg]
 16298                           
 16299                           
 16300                           ;JSN_Sensor.c: 119:     return lastTrig;
 16301  0A15  0021               	movlb	1	; select bank1
 16302  0A16  085A               	movf	_lastTrig^(0+128),w
 16303  0A17                     i1l60:
 16304  0A17  0008               	return
 16305  0A18                     __end_of_JSN_GetLastTrig:
 16306  007E                     btemp	set	126	;btemp
 16307  007E                     int$flags	set	126
 16308  007E                     wtemp0	set	126
 16309                           
 16310                           	psect	idloc
 16311                           
 16312                           ;Config register IDLOC0 @ 0x8000
 16313                           ;	unspecified, using default values
 16314  8000                     	org	32768
 16315  8000  3FFF               	dw	16383
 16316                           
 16317                           ;Config register IDLOC1 @ 0x8001
 16318                           ;	unspecified, using default values
 16319  8001                     	org	32769
 16320  8001  3FFF               	dw	16383
 16321                           
 16322                           ;Config register IDLOC2 @ 0x8002
 16323                           ;	unspecified, using default values
 16324  8002                     	org	32770
 16325  8002  3FFF               	dw	16383
 16326                           
 16327                           ;Config register IDLOC3 @ 0x8003
 16328                           ;	unspecified, using default values
 16329  8003                     	org	32771
 16330  8003  3FFF               	dw	16383
 16331                           
 16332                           	psect	config
 16333                           
 16334                           ;Config register CONFIG1 @ 0x8007
 16335                           ;	FEXTOSC External Oscillator mode Selection bits
 16336                           ;	FEXTOSC = OFF, Oscillator not enabled
 16337                           ;	Power-up default value for COSC bits
 16338                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 16339                           ;	Clock Out Enable bit
 16340                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 16341                           ;	Clock Switch Enable bit
 16342                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16343                           ;	Fail-Safe Clock Monitor Enable
 16344                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 16345  8007                     	org	32775
 16346  8007  3F8C               	dw	16268
 16347                           
 16348                           ;Config register CONFIG2 @ 0x8008
 16349                           ;	Master Clear Enable bit
 16350                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 16351                           ;	Power-up Timer Enable bit
 16352                           ;	PWRTE = OFF, PWRT disabled
 16353                           ;	Watchdog Timer Enable bits
 16354                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 16355                           ;	Low-power BOR enable bit
 16356                           ;	LPBOREN = OFF, ULPBOR disabled
 16357                           ;	Brown-out Reset Enable bits
 16358                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 16359                           ;	Brown-out Reset Voltage selection bit
 16360                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 16361                           ;	PPSLOCK bit One-Way Set Enable bit
 16362                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 16363                           ;	Stack Overflow/Underflow Reset Enable bit
 16364                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 16365                           ;	Debugger enable bit
 16366                           ;	DEBUG = OFF, Background debugger disabled
 16367  8008                     	org	32776
 16368  8008  3FF3               	dw	16371
 16369                           
 16370                           ;Config register CONFIG3 @ 0x8009
 16371                           ;	User NVM self-write protection bits
 16372                           ;	WRT = OFF, Write protection off
 16373                           ;	Low Voltage Programming Enable bit
 16374                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 16375  8009                     	org	32777
 16376  8009  3FFF               	dw	16383
 16377                           
 16378                           ;Config register CONFIG4 @ 0x800A
 16379                           ;	User NVM Program Memory Code Protection bit
 16380                           ;	CP = OFF, User NVM code protection disabled
 16381                           ;	Data NVM Memory Code Protection bit
 16382                           ;	CPD = OFF, Data NVM code protection disabled
 16383  800A                     	org	32778
 16384  800A  3FFF               	dw	16383

Data Sizes:
    Strings     111
    Constant    0
    Data        0
    BSS         151
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     80      80
    BANK1            80     20      79
    BANK2            80      0      56
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sameSens@ccp3$F990	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sameSens@ccp2$F869	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sameSens	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2376$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    S2376$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[58]), 
		 -> STR_1(CODE[50]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 58
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[58]), 
		 -> STR_1(CODE[50]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[58]), 
		 -> STR_1(CODE[50]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP3_DefaultCallBack(), 

    lastTrig@ccp3$F991	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    CCP2_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP2_DefaultCallBack(), 

    CCP2_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP2_DefaultCallBack(), 

    lastTrig@ccp2$F870	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP1_DefaultCallBack(), 

    lastTrig@ccp1$F728	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    sp__JSN_GetLastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    JSN_Sensor_GetDistance@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    JSN_Sensor_Trig@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    lastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    JSN_Sensor_Init@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _INTERRUPT_InterruptManager->_CCP2_CaptureISR
    _INTERRUPT_InterruptManager->_CCP3_CaptureISR
    _TMR3_Reload->_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _CCP3_CaptureISR->_CCP3_DefaultCallBack
    _CCP3_DefaultCallBack->_ReadPin
    _CCP2_CaptureISR->_CCP2_DefaultCallBack
    _CCP2_DefaultCallBack->_ReadPin
    _CCP1_CaptureISR->_CCP1_DefaultCallBack
    _CCP1_DefaultCallBack->_ReadPin

Critical Paths under _main in BANK0

    _main->_printf
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _CCP3_Initialize->_CCP3_SetCallBack
    _CCP2_Initialize->_CCP2_SetCallBack
    _CCP1_Initialize->_CCP1_SetCallBack
    _JSN_Sensor_Trig->_FRT_GetMicros
    _FRT_GetMicros->___wmul
    _JSN_Sensor_Init->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _JSN_Sensor_GetDistance->___lldiv
    ___lldiv->___lmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_JSN_Sensor_Init
    _JSN_Sensor_Init->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   19017
                                              7 BANK1     13    13      0
                      _FRT_GetMillis
             _JSN_Sensor_GetDistance
                    _JSN_Sensor_Init
                    _JSN_Sensor_Trig
                         _PIC16_Init
                             _SetPin
                           _WritePin
                             _printf
 ---------------------------------------------------------------------------------
 (1) _PIC16_Init                                           0     0      0     882
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     882
                    _CCP1_Initialize
                    _CCP2_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Initialize                                    1     1      0     490
                                              2 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP3_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP2_Initialize                                      0     0      0      98
                   _CCP2_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP2_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP1_Initialize                                      0     0      0      98
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP1_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Trig                                      5     5      0    1393
                                             24 BANK0      5     5      0
                      _FRT_GetMicros
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _FRT_GetMicros                                       18    14      4     267
                                              6 BANK0     18    14      4
                _TMR0_GetCallBackNum
                     _TMR0_ReadTimer
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
                _TMR0_GetCallBackNum (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR0_ReadTimer                                       2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _TMR0_GetCallBackNum                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Init                                      5     3      2    8131
                                              2 BANK1      5     3      2
                             _SetPin
                           _WritePin
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5684
                                             76 BANK0      4     0      4
                                              0 BANK1      2     2      0
             _JSN_Sensor_GetDistance (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5250
                                             68 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    4923
                                             52 BANK0     16    14      2
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                24    16      8    3578
                                             28 BANK0     24    16      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2554
                                             19 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                             11 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     834
                                              3 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      66
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             18     2     16     311
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             26    10     16     314
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _WritePin                                             4     3      1     928
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetPin                                               4     3      1     700
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_GetDistance                               5     3      2    1179
                                             26 BANK0      5     3      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     396
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _FRT_GetMillis                                        4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0     902
                   Absolute function *
                    _CCP1_CaptureISR
                    _CCP2_CaptureISR
                    _CCP3_CaptureISR
                    _CCP4_CompareISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR3_ISR                                            0     0      0     164
                        _TMR3_Reload
 ---------------------------------------------------------------------------------
 (13) _TMR3_Reload                                         0     0      0     164
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR3_WriteTimer                                     2     0      2     164
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            1     1      0       0
                                              0 COMMON     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR0_CallBack                                       0     0      0       0
                      _FRT_IncMicros
                      _FRT_IncMillis
 ---------------------------------------------------------------------------------
 (14) _FRT_IncMillis                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _FRT_IncMicros                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _CCP4_CompareISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CCP3_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP3_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (12) _CCP2_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP2_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP2_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (12) _CCP1_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP1_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP1_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (14) _ReadPin                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (14) _JSN_GetLastTrig                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FRT_GetMillis
   _JSN_Sensor_GetDistance
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _JSN_Sensor_Init
     _SetPin
     _WritePin
     _printf
       _JSN_Sensor_GetDistance (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _fputc
             _putch
               _EUSART_Write
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
   _JSN_Sensor_Trig
     _FRT_GetMicros
       _TMR0_GetCallBackNum
       _TMR0_ReadTimer
       ___wmul
         _TMR0_GetCallBackNum (ARG)
     _WritePin
   _PIC16_Init
     _SYSTEM_Initialize
       _CCP1_Initialize
         _CCP1_SetCallBack
       _CCP2_Initialize
         _CCP2_SetCallBack
       _CCP3_Initialize
         _CCP3_SetCallBack
       _CCP4_Initialize
       _EUSART_Initialize
         _EUSART_SetErrorHandler
         _EUSART_SetFramingErrorHandler
         _EUSART_SetOverrunErrorHandler
         _EUSART_SetRxInterruptHandler
         _EUSART_SetTxInterruptHandler
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _PWM5_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR1_Initialize
       _TMR2_Initialize
       _TMR3_Initialize
       _WDT_Initialize
   _SetPin
   _WritePin
   _printf

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _CCP1_CaptureISR *
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP2_CaptureISR *
     Absolute function(Fake) *
     _CCP2_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP3_CaptureISR *
     Absolute function(Fake) *
     _CCP3_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP4_CompareISR *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     _TMR0_CallBack
       _FRT_IncMicros
       _FRT_IncMillis
   _TMR1_ISR *
     _TMR1_WriteTimer
   _TMR3_ISR *
     _TMR3_Reload
       _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     14      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      38       9       70.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     105      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     105      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Feb 15 13:09:40 2022

                              _CCP4_Initialize 0B3A                  ?_EUSART_SetRxInterruptHandler 0020  
                       ??_CCP3_DefaultCallBack 0075                                             l32 05A0  
                                           l28 0506                                             l37 052F  
                                           l54 07E0                                             l70 00DA  
                                           l71 00DA                                             l57 0ED1  
                                           l74 00ED                                             l66 00C7  
                                           l75 00ED                                             l67 00C7  
                          ___wmul@multiplicand 0022                        __end_of_CCP1_Initialize 0BF3  
                                          l140 0502                                            l135 0B6D  
                                          l307 0BDA                                            l316 0A43  
                                          l332 0AA5                                            l430 0A66  
                                          l270 0ADA                                            l424 0C0A  
                                          l264 0CD3                                            l273 07FF  
                                          l338 0003                                            l267 0AD6  
                                          l188 0447                                            l276 0AC3  
                                          l614 0CDC                                            l470 0C22  
                                          l615 0CE5                                            l624 0A3C  
                                          l800 0FA6                                            l384 0A5D  
                                          l618 0D00                                            l378 0BF2  
                                          l476 0A6F                                            l653 0A81  
                                          l662 0A9C                                            l590 0F5A  
                                          l495 0B5B                                            l656 0A8A  
                                          l665 0A93                                            l914 0AF5  
                                          l930 0A4B                                            l659 0A78  
                                          l783 0E51                                            l890 0B4A  
                                          l970 0AE7                                            l797 0B39  
                                          _PR2 001E                                            u920 0CDC  
                                          u921 0CDB                                            u930 0CE0  
                                          u931 0CDF                                            u940 0CFA  
                                          u941 0CF9                                            u950 0ED8  
                                          u951 0ED7                                            u960 0EDD  
                                          u961 0EDC                                            u970 0EEC  
                                          u971 0EEB                                            u980 0F0A  
                                          u981 0F09                                            u990 0CA8  
                                          u991 0CA7                                            u985 0F06  
                              _timer1ReloadVal 00BA                         ??_EUSART_RxDataHandler 0070  
                                          _pad 0FA7                 ?_EUSART_SetFramingErrorHandler 0020  
                              _TMR2_Initialize 0A44                                            wreg 0009  
                                         l1150 0C5D                                           l1162 0D65  
                                         l1148 0C49                   JSN_Sensor_GetDistance@Sensor 003E  
                                         l1184 0787                                           l3200 07EC  
                                         l4000 0505                                           l3210 064F  
                                         l3202 07F5                                           l4002 0506  
                                         l1611 0B82                                _timer3ReloadVal 00A8  
                                         l3220 066A                                           l3212 0652  
                                         l4004 050F                                           l4012 0519  
                                         l3300 0A9D                                           l1381 06AB  
                                         l3222 068C                                           l3214 065A  
                                         l3206 0638                                           l3230 06C9  
                                         l4030 0589                                           l4014 052F  
                                         l4006 0517                                           l3302 0A55  
                                         l3310 0A94                                           l1391 071C  
                                         l3224 069C                                           l3216 065E  
                                         l3208 0643                                           l3240 06FE  
                                         l3232 06CC                                           l3160 0CE6  
                                         l1640 0FF3                                           l3320 02DD  
                                         l4032 0592                                           l4016 053E  
                                         l4024 0547                                           l3304 0A5E  
                                         l3312 0A79                                           l4200 0154  
                                         l1641 0FFF                                           l3226 069D  
                                         l3218 0662                                           l3242 070E  
                                         l3234 06D4                                           l3162 0CF0  
                                         l3170 0CFE                                           l3154 0CD6  
                                         l3250 0FBC                                           l3330 0308  
                                         l3322 02E5                                           l4034 059B  
                                         l4026 0579                                           l3306 0A67  
                                         l3314 0A82                                           l4210 019F  
                                         l4202 0169                                           l1388 06BB  
                                         l3236 06D8                                           l3228 06BC  
                                         l3164 0CF4                                           l3156 0CD6  
                                         l3172 0A38                                           l3180 0EE2  
                                         l3260 0FEA                                           l1636 0FC3  
                                         l3252 0FC1                                           l3244 0FA9  
                                         l1644 01E6                                           l3340 034D  
                                         l3332 031A                                           l3324 02EA  
                                         l4036 059F                                           l4028 0582  
                                         l4060 07DA                                           l4052 078A  
                                         l3316 0A70                                           l3308 0A8B  
                                         l3500 0ACF                                           l4220 01D2  
                                         l4204 016F                                           l4212 01A3  
                                         l1661 038C                                           l1398 072C  
                                         l3238 06DC                                           l3166 0CFA  
                                         l3158 0CE0                                           l3182 0EEC  
                                         l3174 0ED2                                           l3190 0C85  
                                         l3254 0FC6                                           l3246 0FAE  
                                         l3270 01FB                                           l3342 0358  
                                         l3326 02EE                                           l3318 02CC  
                                         l4054 079D                                           l3510 0C0E  
                                         l3502 0AD3                                           l4070 0B5C  
                                         l4206 0184                                           l4214 01B7  
                                         l1639 0FE5                                           l4064 0E91  
                                         l3168 0CFB                                           l3184 0F0A  
                                         l1680 0F14                                           l3176 0ED8  
                                         l3192 0C93                                           l3256 0FD2  
                                         l3248 0FB7                                           l1656 02C9  
                                         l3280 024E                                           l3272 020B  
                                         l1648 0203                                           l3264 01DD  
                                         l3328 0300                                           l3336 0334  
                                         l3352 0369                                           l4056 07A9  
                                         l3520 0C1E                                           l3512 0C0F  
                                         l3504 0AD5                                           l3600 0AF1  
                                         l4072 0B68                                           l4216 01C1  
                                         l4208 018A                                           l4066 0EC8  
                                         l3178 0EDD                                           l3194 0C98  
                                         l3258 0FD7                                           l3290 0296  
                                         l3282 0252                                           l3274 021F  
                                         l3266 01E2                                           l3354 0382  
                                         l3338 0345                                           l3346 035E  
                                         l4058 07CF                                           l3530 0BE0  
                                         l3522 0C20                                           l3514 0C10  
                                         l3450 0ABA                                           l3602 0AF3  
                                         l3610 0B57                                           l3506 07FC  
                                         l4074 0B6B                                           l4218 01CA  
                                         l3188 0C82                                           l3196 07E3  
                                         l3292 02A3                                           l3284 0256  
                                         l3276 0222                                           l3268 01F5  
                                         l3348 0366                                           l1668 0D31  
                                         l3700 0D03                                           l3532 0BE1  
                                         l3524 0BDB                                           l3516 0C11  
                                         l3508 0C0B                                           l3620 0F29  
                                         l3460 0E17                                           l3452 0ABD  
                                         l3612 0B58                                           l3604 0B4B  
                                         l3540 0A44                                           l4076 0B6C  
                                         l4180 00EE                                           l4172 00B2  
                                         l4078 0B29                                           l1694 07FB  
                                         l3198 07E8                                           l3294 02B1  
                                         l3278 0227                                           l3286 0283  
                                         l3702 0D07                                           l3534 0BE9  
                                         l3526 0BDE                                           l3518 0C19  
                                         l3630 0F34                                           l3622 0F2C  
                                         l3614 0F15                                           l3470 0E25  
                                         l3462 0E1B                                           l3454 0ABF  
                                         l3550 0BCA                                           l3606 0B4F  
                                         l3542 0A47                                           l4190 0109  
                                         l4182 00F7                                           l4174 00B5  
                                         l3712 044A                                           l3800 0390  
                                         l1688 0CA8                                           l3288 028A  
                                         l3296 02B6                                           l3704 0D0B  
                                         l3536 0BEE                                           l3528 0BDF  
                                         l3640 0F4F                                           l3632 0F3C  
                                         l3624 0F2E                                           l3616 0F17  
                                         l3480 0E38                                           l3472 0E27  
                                         l3464 0E1E                                           l3456 0AC0  
                                         l3560 0BD9                                           l3552 0BCB  
                                         l3608 0B50                                           l3544 0A48  
                                         l4192 011C                                           l4184 00F9  
                                         l4176 00C8                                           l3730 0467  
                                         l3722 0459                                           l3714 044B  
                                         l3706 0D1F                                           l3538 0BF0  
                                         l3570 0BF9                                           l3562 0BF3  
                                         l3642 0F50                                           l3634 0F44  
                                         l3626 0F30                                           l3618 0F1F  
                                         l3490 0E45                                           l3482 0E3B  
                                         l3474 0E31                                           l3466 0E20  
                                         l3458 0AC1                                           l3554 0BCC  
                                         l3546 0A49                                           l4194 0125  
                                         l4186 00FF                                           l4178 00DB  
                                         l3820 03B3                                           l3812 03A5  
                                         l3804 0397                                           l3708 0D29  
                                         l3572 0C01                                           l3564 0BF6  
                                         l3580 0B41                                           l3644 0F59  
                                         l3636 0F4C                                           l3628 0F32  
                                         l3492 0E48                                           l3484 0E3D  
                                         l3476 0E34                                           l3468 0E22  
                                         l3556 0BCE                                           l3548 0BC5  
                                         l4196 0138                                           l4188 0105  
                                         l3750 048A                                           l3742 047C  
                                         l3734 046E                                           l3726 0460  
                                         l3718 0452                                           l3646 0A3D  
                                         l3574 0C06                                           l3566 0BF7  
                                         l3582 0B46                                           l3638 0F4E  
                                         l3494 0E4A                                           l3486 0E3F  
                                         l3478 0E36                                           l3558 0BD6  
                                         l3590 0AE4                                           ?_pad 0033  
                                         l3840 03D6                                           l3832 03C8  
                                         l3824 03BA                                           l3816 03AC  
                                         l3808 039E                                           l3576 0C08  
                                         l3568 0BF8                                           l3584 0B48  
                                         l3496 0E4C                                           l3488 0E42  
                                         l3592 0AE8                                           l3770 04AD  
                                         l3762 049F                                           l3754 0491  
                                         l3746 0483                                           l3738 0475  
                                         l3658 0002                                           l3690 0C45  
                                         l3578 0B3A                                           l3498 0E4F  
                                         l3594 0AEB                                           l3586 0ADB  
                                         l3860 03F9                                           l3852 03EB  
                                         l3844 03DD                                           l3836 03CF  
                                         l3828 03C1                                           l4580 0521  
                                         l3692 0C4E                                           l3596 0AEC  
                                         l3588 0ADF                                           l3774 04B4  
                                         l3766 04A6                                           l3758 0498  
                                         l3870 0407                                           l4582 0550  
                                         l3694 0C53                                           l3686 0C3E  
                                         l3598 0AED                                           l3784 04C2  
                                         l4584 040F                                           l3864 0400  
                                         l3856 03F2                                           l3848 03E4  
                                         l3792 0B6E                                           l3696 0C59  
                                         l3688 0C41                                           l3970 0D4E  
                                         l3962 0D32                                           l4586 04CA  
                                         l3778 04BB                                           l3794 0B73  
                                         l3890 0CD0                                           l3882 0CA9  
                                         l4578 01AC                                           l3980 0741  
                                         l3972 0D5D                                           l3964 0D3B  
                                         l3884 0CC7                                           l3990 0771  
                                         l3982 074C                                           l3966 0D3F  
                                         l3798 038F                                           l3878 0F5B  
                                         l3886 0CCA                                           l3992 0772  
                                         l3984 0750                                           l3976 072D  
                                         l3968 0D47                                           l3888 0CCD  
                                         l3994 0779                                           l3986 0757  
                                         l3978 073E                                           l3988 0769  
                                         l3996 077F                                           STR_1 103A  
                                         STR_2 1000                                           STR_3 106C  
                                         STR_4 106C                                           STR_5 106C  
                                         u1000 07F5                                           u1001 07F4  
                                         u1010 0640                                           u1020 064F  
                                         u1100 0FAE                                           u1021 064E  
                                         u1101 0FAD                                           u1030 0662  
                                         u1110 0FBC                                           u1031 0661  
                                         u1111 0FBB                                           u1040 068C  
                                         u1120 0FE5                                           u1200 02B6  
                                         u1041 068B                                           u1121 0FE4  
                                         u1201 02B5                                           u1050 06AB  
                                         u1130 0FEA                                           u1210 02DD  
                                         u1051 06AA                                           u1131 0FE9  
                                         u1211 02DC                                           u1060 06C9  
                                         u1140 01E2                                           u1220 0300  
                                         u1300 0C59                                           u1045 0688  
                                         u1061 06C8                                           u1125 0FE1  
                                         u1141 01E1                                           u1221 02FF  
                                         u1301 0C58                                           u1070 06DC  
                                         u1150 01F5                                           u1230 0345  
                                         u1310 0D29                                           u1071 06DB  
                                         u1151 01F4                                           u1231 0344  
                                         u1311 0D28                                           u1080 06FE  
                                         u1160 028A                                           u1240 0ADA  
                                         u1081 06FD                                           u1161 0289  
                                         u1241 0AD9                                           u1410 0769  
                                         u1330 0D3F                                           u1090 071C  
                                         u1170 0296                                           u1411 0768  
                                         u1331 0D3E                                           u1091 071B  
                                         u1171 0295                                           u1155 01F1  
                                         u1180 02A3                                           u1405 0751  
                                         u1085 06FA                                           u1181 02A2  
                                         _LATA 010C                                           u1430 077F  
                                         u1190 02B1                                           u1270 0C45  
                                         _LATB 010D                                           u1431 077E  
                                         u1415 0765                                           u1191 02B0  
                                         u1271 0C44                                           _LATC 010E  
                                         u1360 0D5D                                           u1440 07CF  
                                         u1425 0773                                           u1361 0D5C  
                                         u1345 0D48                                           u1185 029F  
                                         u1441 07CE                                           u1370 073E  
                                         u1530 00C7                                           u1371 073D  
                                         u1355 0D4F                                           u1195 02AD  
                                         u1531 00C6                                           u1540 00DA  
                                         u1285 0C4A                                           u1541 00D9  
                                         u1390 0750                                           u1550 00ED  
                                         u1391 074F                                           u1295 0C4F  
                                         u1551 00EC                                           u1560 0153  
                                         u1385 0742                                           u1561 0152  
                                         u1570 01C1                                           u1571 01C0  
                                         u1580 01CA                                           u1581 01C9  
                                         _PIE0 0090                                           _PIE1 0091  
                                         _PIE2 0092                                           _PIE3 0093  
                                         _PIE4 0094                                           _PMD0 0911  
                                         _PMD1 0912                                           _PMD2 0913  
                                         _PMD3 0914                                           _PMD4 0915  
                                         _PMD5 0916                                           i1l60 0A17  
                                         _PIR0 0010                                           _PIR1 0011  
                                         _PIR2 0012                                           _PIR3 0013  
                                         _PIR4 0014                                           _PLLR 48E0  
                                         _TMR2 001D                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                         _dbuf 01A0                        __end_of_CCP2_Initialize 0C0B  
                                         _main 00B2                                           _prec 00A4  
                                         _nout 00A0                                           pad@i 0037  
                                         pad@p 0034                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 0039  
                                         btemp 007E                                           _utoa 01DB  
                                   ReadPin@pin 0072                                           start 0090  
                              _TMR3_Initialize 0ADB                                _PWM5_Initialize 0AE8  
                     __end_of_CCP1_SetCallBack 0A5E                          ??_TMR0_GetCallBackNum 0020  
                             ?_CCP1_CaptureISR 0070                                __end_of_ReadPin 0638  
                      __end_of_CCP4_CompareISR 0A1B                                          ??_pad 0036  
                      __end_of_TMR0_Initialize 0BDB                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 0ADB                        __end_of_CCP3_Initialize 0C23  
                                        ?_main 0070                                __end_of___lldiv 0788  
                                        ?_utoa 003C                                __end_of___lodiv 06BC  
                                        _T1CON 001B                                          _T2CON 001F  
                                        _T3CON 0413                                __end_of___lomod 072D  
                                        i1l164 0637                                          i1l421 0DDB  
                                        i1l326 0B06                                          i1l329 0A35  
                                        i1l427 0BAE                                          i1l515 0ACE  
                                        i1l381 0B98                                          i1l509 0B17  
                                        i1l630 0C7F                                          i1l375 0DA0  
                                        i1l711 0034                                          i1l473 0BC4  
                                        i1l641 0C3D                                          i1l721 007D  
                                        i1l713 0042                                          i1l650 0A1E  
                                        i1l706 0014                                          i1l467 0E16  
                                        i1l627 0C7E                                          i1l803 0AB9  
                                        i1l715 0050                                          i1l644 0A14  
                                        i1l724 008E                                          i1l637 0E8E  
                                        i1l717 005E                                          i1l709 0026  
                                        i1l806 0AAF                                          i1l718 008E  
                                        i1l647 0A22                                          i1l719 006C  
                                        i1l984 0B28                                          i1l899 0A1A  
                                        i1l987 0A54                                          i1l996 0A28  
                                        _OSCEN 091D                                   vfpfcnvrt@fmt 0054  
                                        _TMR0H 0016                                   vfpfcnvrt@llu 005B  
                                        _TMR1H 001A                                          _TMR0L 0015  
                                        _TMR3H 0412                                          _TMR1L 0019  
                                        _TMR3L 0411                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _RXPPS 0E24                            ___lmul@multiplicand 0024  
                    ?_TMR0_SetInterruptHandler 0020                                          _Sens1 0152  
                                        _Sens2 014C                                          _Sens3 0146  
                             __end_of_TMR0_ISR 0B07                               __end_of_TMR1_ISR 0ACF  
                             __end_of_TMR3_ISR 0A29                                   main@nextSens 00EA  
                             ?_CCP2_CaptureISR 0070                                          _flags 00A6  
                               _WDT_Initialize 07FC                                          _fputc 0ED2  
                                        _fputs 0C80                                          pad@fp 003B  
                                        _width 00A2                                          _putch 0A36  
                      __end_of_TMR1_Initialize 0B5C                                          pclath 000A  
                                        utoa@d 003C                                          utoa@i 0052  
                                        utoa@n 004A                                          utoa@p 0045  
                                        utoa@w 0048                                          status 0003  
                      __end_of_CCP4_Initialize 0B4B                                          wtemp0 007E  
                             ___lodiv@dividend 0028                                _TMR1_WriteTimer 0B07  
                     __end_of_CCP2_SetCallBack 0A67                                __initialization 0092  
                             ?_CCP3_CaptureISR 0070                                   __end_of_main 01DB  
                                 __end_of_utoa 02CA                                 ??_EUSART_Write 0020  
                      __end_of_TMR2_Initialize 0A4C                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0022                                         ??_main 00E2  
                             ?_CCP1_Initialize 0070                                         ??_utoa 0044  
                             ___lodiv@quotient 0031                         __end_of_WDT_Initialize 0800  
                              _JSN_GetLastTrig 0A15      __end_of_EUSART_DefaultFramingErrorHandler 0A15  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0A14                     _EUSART_OverrunErrorHandler 00B2  
                                       ?_fputc 0023                                         ?_fputs 002B  
                                       _CCPR1H 0292                                         _CCPR2H 0296  
                                       _CCPR3H 0312                                         _CCPR1L 0291  
                                       _CCPR4H 0316                                         _CCPR2L 0295  
                                       _CCPR3L 0311                                         _CCPR4L 0315  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _T0CON0 0017                                         _T0CON1 0018  
                                       _T1GCON 001C                                         _T3GCON 0414  
                                       _RC1REG 0199                               __end_of_WritePin 0448  
                                       _RC1PPS 0EA1                                         _RC1STA 019D  
                      TMR1_WriteTimer@timerVal 0070                                         _RC4PPS 0EA4  
                                       _RB6PPS 0E9E                                         _ODCONA 028C  
                                       _ODCONB 028D                                         _ODCONC 028E  
                                       i1l4100 0BA4                                         i1l4102 0BAF  
                                       i1l4110 0AC6                                         i1l4104 0BB1  
                                       i1l3410 05D6                                         i1l3402 05CE  
                                       i1l4106 0BBA                                         i1l4140 0C72  
                                       i1l4108 0AC4                                         i1l3430 05EC  
                                       i1l3422 05E3                                         i1l3414 05DB  
                                       i1l3406 05D2                                         i1l4150 0E5D  
                                       i1l4142 0C78                                         i1l4134 0C5E  
                                       i1l3360 0A15                                         i1l4160 0E7A  
                                       i1l4152 0E63                                         i1l4144 0C79  
                                       i1l4136 0C65                                         i1l4240 0010  
                                       i1l3434 05F1                                         i1l3426 05E8  
                                       i1l3418 05DF                                         i1l3370 05A8  
                                       i1l4090 0B83                                         i1l4162 0E84  
                                       i1l4154 0E69                                         i1l4146 0E52  
                                       i1l4138 0C6D                                         i1l4082 0AF6  
                                       i1l4170 0A25                                         i1l4250 0030  
                                       i1l4242 0018                                         i1l3444 05F7  
                                       i1l3364 05A2                                         i1l4092 0B85  
                                       i1l4164 0E8B                                         i1l4156 0E6E  
                                       i1l4148 0E58                                         i1l4084 0AF8  
                                       i1l4260 0055                                         i1l4252 0039  
                                       i1l4244 001D                                         i1l4236 0006  
                      __end_of_PWM5_Initialize 0AF6                        __end_of_TMR3_Initialize 0AE8  
                                       i1l3390 05BE                                         i1l3382 05B3  
                                       i1l3374 05AC                                         i1l3366 05A3  
                                       i1l4094 0B8E                                         i1l4166 0A18  
                                       i1l4158 0E74                                         i1l4086 0B02  
                                       i1l4270 0076                                         i1l4262 005A  
                                       i1l4254 003E                                         i1l4246 0022  
                                       i1l4238 000B                                         i1l4096 0B99  
                                       i1l4088 0B05                                         i1l4168 0A23  
                                       i1l4272 0082                                         i1l4264 0063  
                                       i1l4256 0047                                         i1l4248 002B  
                                       i1l3394 05C4                                         i1l3386 05B7  
                                       i1l3378 05AE                                         i1l4098 0B9B  
                                       i1l3650 0AB0                                         i1l4274 0087  
                                       i1l4266 0068                                         i1l4258 004C  
                                       i1l3900 0D79                                         i1l4268 0071  
                                       i1l3398 05C9                                         i1l3910 0DA1  
                                       i1l3670 0C38                                         i1l3662 0C23  
                                       i1l3654 0AA6                                         i1l3904 0D88  
                                       i1l3912 0DA9                                         i1l3920 0DC3  
                                       i1l3664 0C2D                                         u132_20 0B0C  
                                       i1l3680 0B22                                         i1l3672 0B18  
                                       u132_21 0B0B                                         i1l3914 0DAF  
                                       i1l3930 0DEA                                         i1l3666 0C31  
                                       i1l3674 0B1D                                         i1l3682 0B24  
                                       i1l3916 0DB4                                         i1l3932 0DEF  
                                       i1l3668 0C37                                         i1l3684 0B26  
                                       i1l3676 0B1E                                         i1l4590 0DD3  
                                       i1l3926 0DDC                                         i1l3950 0B11  
                                       i1l3942 0B07                                         i1l3678 0B20  
                                       i1l4592 0D98                                         i1l3928 0DE4  
                                       i1l3936 0DFE                                         u125_20 0C37  
                                       i1l3944 0B0C                                         i1l3952 0B13  
                                       i1l3960 0A4C                                         u125_21 0C36  
                                       i1l4594 05FF                                         i1l3954 0B15  
                                       i1l3946 0B0D                                         i1l4588 0E0E  
                                       i1l3956 0A1F                                         i1l3892 0A2F  
                                       i1l3948 0B0F                                         i1l3894 0D66  
                                       i1l3958 0A1B                                         i1l3896 0D6E  
                                       u150_20 0E5D                                         u126_20 0B1D  
                                       u150_21 0E5C                                         u126_21 0B1C  
                                       i1l3898 0D74                                         u151_20 0E6E  
                                       u151_21 0E6D                                         u152_20 0E84  
                                       u160_20 0010                                         u152_21 0E83  
                                       u160_21 000F                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       u145_20 0B02                                         u161_20 0018  
                                       u145_21 0B01                                         u161_21 0017  
                                       u170_20 0055                                         u162_20 001D  
                                       u170_21 0054                                         u162_21 001C  
                                       u171_20 005A                                         u163_20 0022  
                                       u171_21 0059                                         u163_21 0021  
                                       u148_20 0C65                                         u172_20 0063  
                                       u164_20 002B                                         u148_21 0C64  
                                       u172_21 0062                                         u164_21 002A  
                                       u149_20 0C78                                         u173_20 0068  
                                       u165_20 0030                                         u149_21 0C77  
                                       u173_21 0067                                         u165_21 002F  
                                       u174_20 0071                                         u166_20 0039  
                                       u174_21 0070                                         u166_21 0038  
                                       u175_20 0076                                         u167_20 003E  
                                       u159_20 000B                                         u175_21 0075  
                                       u167_21 003D                                         u159_21 000A  
                                       u176_20 0082                                         u168_20 0047  
                                       u176_21 0081                                         u168_21 0046  
                                       u177_20 0087                                         u169_20 004C  
                                       u177_21 0086                                         u169_21 004B  
                                main@currMilli 00EB                                         _OSCFRQ 091F  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                               ?_CCP2_Initialize 0070  
                            ??_JSN_Sensor_Init 00DF                                      ??_ReadPin 0070  
                              _TMR3_WriteTimer 0B18                              ??_JSN_Sensor_Trig 0038  
                                _CCP1_CallBack 00CC                       __end_of_CCP3_SetCallBack 0A70  
                                       _SetPin 0448                                  _CCP2_CallBack 00C6  
                                 vfprintf@cfmt 006A                                         ___lmul 0D32  
                                       ___wmul 0C3E                                      ??___lldiv 0034  
                             ?_CCP4_CompareISR 0070                                      ??___lodiv 0030  
                                    ??___lomod 0030                                   ?_TMR3_Reload 0070  
                                _CCP3_CallBack 00C0                            _EUSART_Transmit_ISR 0C5E  
                             ?_TMR0_Initialize 0070                                         _micros 0140  
                                       _millis 013C                             _lastTrig@ccp1$F728 00D8  
                           _lastTrig@ccp2$F870 00D6                             _lastTrig@ccp3$F991 00D4  
                                       _printf 0B6E                                         pad@buf 0033  
                                main@prevMilli 00E6                               ?_CCP3_Initialize 0070  
                                       _strlen 07E1                                         fputc@c 0023  
                               _PMD_Initialize 0ABA                                         fputs@c 002F  
                                       fputs@i 0030                                         fputs@s 0032  
            CCP2_DefaultCallBack@capturedValue 0073                                ?_WDT_Initialize 0070  
                        __end_of_TMR0_CallBack 0A36                               __end_of_vfprintf 0D32  
                                       utoa@fp 0047       TMR0_SetInterruptHandler@InterruptHandler 0020  
                      __end_of_TMR1_WriteTimer 0B18                           ?_EUSART_Transmit_ISR 0070  
                             ?_TMR1_Initialize 0070                              _SYSTEM_Initialize 0CA9  
                      __end_of__initialization 00AE                               ?_CCP4_Initialize 0070  
                           ?_SYSTEM_Initialize 0070           __end_of_EUSART_SetTxInterruptHandler 0A9D  
                 _EUSART_SetTxInterruptHandler 0A94                                   ??_PIC16_Init 0023  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0023  
                                    ?_TMR0_ISR 0070                                      ?_TMR1_ISR 0070  
                                    ?_TMR3_ISR 0070                                  __end_of_fputc 0F15  
                                __end_of_fputs 0CA9                                  __end_of_putch 0A3D  
                             ?_TMR2_Initialize 0070                         __end_of_PMD_Initialize 0AC4  
                      __end_of_JSN_GetLastTrig 0A18                          CCP3_CaptureISR@module 0078  
                         _eusartRxStatusBuffer 0120                 CCP3_SetCallBack@customCallBack 0020  
              ??_EUSART_SetOverrunErrorHandler 0022                             __end_of_PIC16_Init 0B6E  
                                      ??_fputc 0026                      __end_of_SYSTEM_Initialize 0CD4  
                                      ??_fputs 002C                          ??_EUSART_Transmit_ISR 0070  
                      __end_of_TMR3_WriteTimer 0B29                                        ??_putch 0022  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                                   __pbssBANK3 01A0                           __end_of_EUSART_Write 0D01  
                             ?_PWM5_Initialize 0070                               ?_TMR3_Initialize 0070  
                     ??_JSN_Sensor_GetDistance 003C                                        ?_SetPin 0020  
                            ?_CCP1_SetCallBack 0020                                     __pmaintext 00B2  
                ?_EUSART_SetTxInterruptHandler 0020               _EUSART_TxDefaultInterruptHandler 00B8  
             __end_of_TMR0_SetInterruptHandler 0AA6                                        ?___lmul 0020  
                                      ?___wmul 0020                                  _FRT_GetMicros 0F5B  
                                   ??_TMR0_ISR 0070                                     ??_TMR1_ISR 0072  
                                _FRT_GetMillis 0B29                                     ??_TMR3_ISR 0072  
                           ??_CCP1_SetCallBack 0022                                     __pintentry 0004  
                                      _CCP1CAP 0294                                        _CCP2CAP 0298  
                                      _CCP3CAP 0314                                        _CCP1CON 0293  
                                      _CCP2CON 0297                                        _CCP3CON 0313  
                                      _CCP4CON 0317                                        _CCP1PPS 0E14  
                                      _CCP2PPS 0E15                                        _CCP3PPS 0E16  
                               ___lmul@product 0028                                  _FRT_IncMicros 0AA6  
                 ??_EUSART_DefaultErrorHandler 0071                                  _FRT_IncMillis 0AB0  
                                      ?_printf 006C                                ?_PMD_Initialize 0070  
                                    ?_WritePin 0020                                        ?_strlen 0020  
                                _eusartRxCount 00D1                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                                        _OSCCON1 0919  
                                      _OSCCON3 091B                                        _OSCTUNE 091E  
                                      _PWM5DCH 0618                                        _PWM5DCL 0617  
                                      _PWM5CON 0619                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 0022                               ?_TMR1_WriteTimer 0070  
                             ___lomod@dividend 0028              CCP1_DefaultCallBack@capturedValue 0073  
                  __end_of_TMR0_GetCallBackNum 0004                               _micros@FRT$F1530 0138  
                            _dutyCyclePerMilli 0144                                        _ReadPin 05A1  
                            ?_CCP2_SetCallBack 0020                                 ?_FRT_GetMicros 0026  
                               ?_FRT_GetMillis 0020                                        ___lldiv 072D  
                                      ___lodiv 0638                             ??_CCP2_SetCallBack 0022  
                                      ___lomod 06BC                                      ?_vfprintf 0064  
                               ?_FRT_IncMicros 0070                                 ?_FRT_IncMillis 0070  
                                      _ocCount 00AC                                     ??_WritePin 0021  
                                      __ptext1 0B5C                                        __ptext2 0CA9  
                                      __ptext3 07FC                                        __ptext4 0ADB  
                                      __ptext5 0A44                                        __ptext6 0B4B  
                                      __ptext7 0BC5                                        __ptext8 0A9D  
                                      __ptext9 0AE8                               ?_JSN_GetLastTrig 0070  
                                    _T1CONbits 001B                          _OSCILLATOR_Initialize 0ACF  
                                    _T2CONbits 001F                                      _T3CONbits 0413  
                           _sameSens@ccp2$F869 00D7                             _sameSens@ccp3$F990 00D5  
                     ??_PIN_MANAGER_Initialize 0020                                        _ticksUp 00CA  
                              _JSN_Sensor_Init 0503                                _JSN_Sensor_Trig 0788  
                                      clrloop0 0A2A                           end_of_initialization 00AE  
                             ?_TMR3_WriteTimer 0070          __end_of_EUSART_SetOverrunErrorHandler 0A8B  
                _EUSART_SetOverrunErrorHandler 0A82                                        fputc@fp 0025  
                                      fputs@fp 002B                              _EUSART_Initialize 0F15  
                              ___lldiv@divisor 002C                                ___lldiv@counter 0039  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 038D  
                            ?_CCP3_SetCallBack 0020                          TMR0_ReadTimer@readVal 0021  
                 __end_of_CCP1_DefaultCallBack 0DA1                             ??_CCP3_SetCallBack 0022  
                                   ??_vfprintf 0067                                 _TMR0_ReadTimer 0A3D  
                                      strlen@a 0023                                        strlen@s 0024  
                          ??_EUSART_Initialize 0022                               ??_WDT_Initialize 0020  
               ??_EUSART_SetTxInterruptHandler 0022                       _TMR0_SetInterruptHandler 0A9D  
                                    _PORTAbits 000C                                      _PORTBbits 000D  
                                    _PORTCbits 000E                                      _TRISAbits 008C  
                                    _TRISBbits 008D                                      _TRISCbits 008E  
                    __end_of_EUSART_Initialize 0F5B                                    _CCP4CONbits 0317  
                              ??_FRT_GetMicros 002A                                ??_FRT_GetMillis 0024  
                       __end_of_TMR0_ReadTimer 0A44                                ??_FRT_IncMicros 0070  
                               __end_of_SetPin 0503                                ??_FRT_IncMillis 0070  
                               __end_of___lmul 0D66             __end_of_EUSART_DefaultErrorHandler 0A1F  
                   _EUSART_DefaultErrorHandler 0A1B                                    vfpfcnvrt@ap 0055  
                                  vfpfcnvrt@fp 0063                                 __end_of___wmul 0C5E  
                                 _EUSART_Write 0CD4                        __end_of_JSN_Sensor_Init 05A1  
                       _JSN_Sensor_GetDistance 0E8F                         ?_OSCILLATOR_Initialize 0070  
                      __end_of_JSN_Sensor_Trig 07E1                   __end_of_CCP2_DefaultCallBack 0DDC  
                               __end_of_printf 0B83                                 __end_of_strlen 07FC  
                          start_initialization 0092                                ___lodiv@divisor 0020  
                              ___lodiv@counter 0039                 CCP2_SetCallBack@customCallBack 0020  
                                    SetPin@pin 0023                                    __end_of_pad 1000  
                            ??_CCP1_CaptureISR 0077   EUSART_SetRxInterruptHandler@interruptHandler 0020  
 EUSART_SetTxInterruptHandler@interruptHandler 0020                                    putch@txData 0022  
                            _ticksUp@ccp2$F867 00C4                              _ticksUp@ccp3$F988 00BE  
               ?_EUSART_SetOverrunErrorHandler 0020                                       ??_SetPin 0021  
                                  vfprintf@fmt 0064                     _EUSART_FramingErrorHandler 00B4  
                             ??_PMD_Initialize 0020                                ?_TMR0_ReadTimer 0070  
                                     ??___lmul 0028                                       ??___wmul 0024  
                            ??_CCP2_CaptureISR 0077                         _EUSART_SetErrorHandler 0A70  
                       JSN_Sensor_Init@echoPin 00DE                                    _CCPTMRSbits 029F  
                                     ??_printf 00DB                                       ??_strlen 0022  
                        CCP1_CaptureISR@module 0078                    __end_of_EUSART_Transmit_ISR 0C80  
                                  __pbssCOMMON 007A                                      ___latbits 0002  
                       JSN_Sensor_Init@trigPin 00DD                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00DB                              ??_CCP3_CaptureISR 0077  
                 __end_of_CCP3_DefaultCallBack 0E17                           _CCP1_DefaultCallBack 0D66  
                   __end_of_EUSART_Receive_ISR 0E8F               _EUSART_RxDefaultInterruptHandler 00B6  
                        _TMR0_InterruptHandler 00CE                              ??_CCP1_Initialize 0022  
                               _dutyCycle10bit 00AA                                       ?_ReadPin 0070  
                                  WritePin@pin 0023                                    WritePin@val 0020  
                 __end_of_EUSART_RxDataHandler 0C3E                         _PIN_MANAGER_Initialize 0E17  
            CCP3_DefaultCallBack@capturedValue 0073                                       ?___lldiv 002C  
                                     ?___lodiv 0020                                       ?___lomod 0020  
                                 _eusartRxHead 007B                                   _eusartTxHead 007C  
                                 _eusartRxTail 007A                                   _eusartTxTail 00D3  
                 ??_INTERRUPT_InterruptManager 007A                               ?_JSN_Sensor_Init 00DD  
                             ?_JSN_Sensor_Trig 0070                        _eusartTxBufferRemaining 00D2  
                              ___lomod@divisor 0020                                       _BAUD1CON 019F  
                            ??_CCP2_Initialize 0022                                ___lomod@counter 0031  
                                _TMR0_CallBack 0A2F                          ?_CCP1_DefaultCallBack 0073  
                            ??_CCP4_CompareISR 0070                                 _eusartRxBuffer 0128  
                            ??_TMR0_Initialize 0022                                 _eusartTxBuffer 0130  
                               ___wmul@product 0024                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0020                                       _LATBbits 010D  
                                     _LATCbits 010E                                      clear_ram0 0A29  
                            ??_CCP3_Initialize 0022                                       _PIE0bits 0090  
                                     _PIE1bits 0091                                       _PIE3bits 0093  
                                     _PIE4bits 0094                              _eusartRxLastError 00D0  
                         _CCP2_DefaultCallBack 0DA1                     ??_TMR0_SetInterruptHandler 0022  
                                     _PIR0bits 0010                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0022                                      _ticksDown 00C8  
                                     _PIR3bits 0013                                       _PIR4bits 0014  
                                     _TMR0_ISR 0AF6      __end_of_EUSART_DefaultOverrunErrorHandler 0A23  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 0A1F                                       _TMR1_ISR 0AC4  
                                ??_TMR3_Reload 0072                                       _TMR3_ISR 0A23  
                                    _vfpfcnvrt 02CA                              ??_TMR1_Initialize 0020  
                            ___wmul@multiplier 0020                              ??_CCP4_Initialize 0020  
                               ?_TMR0_CallBack 0070                              ___lmul@multiplier 0020  
                                     SetPin@io 0020                              ??_TMR2_Initialize 0020  
                        ?_CCP2_DefaultCallBack 0073                          JSN_Sensor_Init@Sensor 00E1  
                                   vfprintf@ap 0066                                     vfprintf@fp 0069  
                      ?_JSN_Sensor_GetDistance 003A                        ??_OSCILLATOR_Initialize 0020  
                          _EUSART_ErrorHandler 00B0                           _CCP3_DefaultCallBack 0DDC  
                  ?_EUSART_DefaultErrorHandler 0070                                     ?_vfpfcnvrt 0054  
                              _CCP1_CaptureISR 0B83                                       _WritePin 038D  
                            ??_PWM5_Initialize 0020                              ??_TMR3_Initialize 0020  
                          __end_of_TMR3_Reload 0A55                                     _T0CON0bits 0017  
                             _CCP1_SetCallBack 0A55                           _EUSART_RxDataHandler 0C23  
               CCP1_SetCallBack@customCallBack 0020                                       __ptext10 0ABA  
                                     __ptext11 0E17                                       __ptext20 0C0B  
                                     __ptext12 0ACF                                       __ptext21 0A67  
                                     __ptext13 0F15                                       __ptext30 0002  
                                     __ptext22 0BF3                                       __ptext14 0A94  
                                     __ptext31 0503                                       __ptext23 0A5E  
                                     __ptext15 0A8B                                       __ptext40 0A36  
                                     __ptext32 0B6E                                       __ptext24 0BDB  
                                     __ptext16 0A82                                       __ptext41 0CD4  
                                     __ptext33 0D01                                       __ptext25 0A55  
                                     __ptext17 0A79                                       __ptext42 06BC  
                                     __ptext34 02CA                                       __ptext26 0788  
                                     __ptext18 0A70                                       __ptext51 0A23  
                                     __ptext43 0638                                       __ptext35 01DB  
                                     __ptext27 0F5B                                       __ptext19 0B3A  
                                     __ptext60 0C5E                                       __ptext52 0A4C  
                                     __ptext44 038D                                       __ptext36 0FA7  
                                     __ptext28 0C3E                                       __ptext61 0E52  
                                     __ptext53 0B18                                       __ptext45 0448  
                                     __ptext37 07E1                                       __ptext29 0A3D  
                                     __ptext70 0DA1                                       __ptext62 0A1F  
                                     __ptext54 0AC4                                       __ptext46 0E8F  
                                     __ptext38 0C80                                       __ptext71 0B83  
                                     __ptext63 0A14                                       __ptext55 0B07  
                                     __ptext47 0D32                                       __ptext39 0ED2  
                                     __ptext72 0D66                                       __ptext64 0A1B  
                                     __ptext56 0AF6                                       __ptext48 072D  
                                     __ptext73 05A1                                       __ptext65 0C23  
                                     __ptext57 0A2F                                       __ptext49 0B29  
                                     __ptext74 0A15                                       __ptext66 0A18  
                                     __ptext58 0AB0                                       __ptext67 0BAF  
                                     __ptext59 0AA6                                       __ptext68 0DDC  
                                     __ptext69 0B99                         ??_CCP1_DefaultCallBack 0075  
                                   _T3GCONbits 0414                        TMR3_WriteTimer@timerVal 0070  
                                     _currFreq 00AE                                       _lastTrig 00DA  
                              _CCP2_CaptureISR 0B99                               ??_TMR0_ReadTimer 0020  
                                     _sameSens 00D9                   _TMR0_DefaultInterruptHandler 0000  
                      ?_EUSART_SetErrorHandler 0020                            _ticksDown@ccp2$F868 00C2  
                          _ticksDown@ccp3$F989 00BC                                     _PIC16_Init 0B5C  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
               __end_of_JSN_Sensor_GetDistance 0ED2                          __end_of_FRT_GetMicros 0FA7  
                        __end_of_FRT_GetMillis 0B3A                                       int$flags 007E  
                        ?_CCP3_DefaultCallBack 0073                                       _vfprintf 0D01  
           __end_of_INTERRUPT_InterruptManager 0090                     _INTERRUPT_InterruptManager 0004  
                        __end_of_FRT_IncMicros 0AB0                          __end_of_FRT_IncMillis 0ABA  
                                    printf@fmt 006C          __end_of_EUSART_SetFramingErrorHandler 0A82  
                _EUSART_SetFramingErrorHandler 0A79                              ??_TMR1_WriteTimer 0072  
                              _CCP3_CaptureISR 0BAF                                     _INTCONbits 000B  
                              ??_TMR0_CallBack 0070                               _CCP2_SetCallBack 0A5E  
                        ?_EUSART_RxDataHandler 0070                                _CCP1_Initialize 0BDB  
                                     intlevel1 0000                                  _CountCallBack 007D  
                             ___lldiv@dividend 0030                        ?_PIN_MANAGER_Initialize 0070  
                       ??_CCP2_DefaultCallBack 0075                 __end_of_EUSART_SetErrorHandler 0A79  
                            ??_JSN_GetLastTrig 0070           __end_of_EUSART_SetRxInterruptHandler 0A94  
                 _EUSART_SetRxInterruptHandler 0A8B                        __end_of_CCP1_CaptureISR 0B99  
                              _CCP2_Initialize 0BF3                                       printf@ap 00DC  
                           _EUSART_Receive_ISR 0E52  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                                  _TMR3_Reload 0A4C                                    ??_vfpfcnvrt 0056  
                            ??_TMR3_WriteTimer 0072                                  __pstringtext1 1000  
                                __pstringtext2 103A                                  __pstringtext3 106C  
                                __pstringtext4 0000                          CCP2_CaptureISR@module 0078  
                              _CCP4_CompareISR 0A18                            ?_EUSART_Receive_ISR 0070  
                             ___lldiv@quotient 0035                                _TMR0_Initialize 0BC5  
                             _CCP3_SetCallBack 0A67                        __end_of_CCP2_CaptureISR 0BAF  
                          _TMR0_GetCallBackNum 0002                                _CCP3_Initialize 0C0B  
                                   _TX1STAbits 019E                             EUSART_Write@txData 0021  
               __end_of_PIN_MANAGER_Initialize 0E52                                    _PWMTMRSbits 061F  
                         ??_EUSART_Receive_ISR 0071                          JSN_Sensor_Trig@Sensor 003C  
                              _TMR1_Initialize 0B4B                                    ?_PIC16_Init 0070  
                         ?_TMR0_GetCallBackNum 0070                        __end_of_CCP3_CaptureISR 0BC5  
