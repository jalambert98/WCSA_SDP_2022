

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun Feb 20 15:18:43 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text46,local,class=CODE,merge=1,delta=2,group=3
    64                           	psect	text47,local,class=CODE,merge=1,delta=2,group=3
    65                           	psect	text48,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	intentry,global,class=CODE,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,delta=2
    90                           	psect	text73,local,class=CODE,merge=1,delta=2
    91                           	psect	text74,local,class=CODE,merge=1,delta=2
    92                           	psect	text75,local,class=CODE,merge=1,delta=2
    93                           	psect	text76,local,class=CODE,merge=1,delta=2
    94                           	psect	text77,local,class=CODE,merge=1,delta=2
    95                           	psect	text78,local,class=CODE,merge=1,delta=2
    96                           	psect	text79,local,class=CODE,merge=1,delta=2
    97                           	psect	text80,local,class=CODE,merge=1,delta=2
    98                           	psect	text81,local,class=CODE,merge=1,delta=2
    99                           	psect	text82,local,class=CODE,merge=1,delta=2
   100                           	psect	text83,local,class=CODE,merge=1,delta=2
   101                           	psect	text84,local,class=CODE,merge=1,delta=2
   102                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   103                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   104                           	dabs	1,0x7E,2
   105  0000                     
   106                           ; Version 2.40
   107                           ; Generated 19/01/2022 GMT
   108                           ; 
   109                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   110                           ; All rights reserved.
   111                           ; 
   112                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   113                           ; 
   114                           ; Redistribution and use in source and binary forms, with or without modification, are
   115                           ; permitted provided that the following conditions are met:
   116                           ; 
   117                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   118                           ;        conditions and the following disclaimer.
   119                           ; 
   120                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   121                           ;        of conditions and the following disclaimer in the documentation and/or other
   122                           ;        materials provided with the distribution. Publication is not required when
   123                           ;        this file is used in an embedded application.
   124                           ; 
   125                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   126                           ;        software without specific prior written permission.
   127                           ; 
   128                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   129                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   130                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   131                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   132                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   133                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   134                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   135                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   136                           ; 
   137                           ; 
   138                           ; Code-generator required, PIC16F18345 Definitions
   139                           ; 
   140                           ; SFR Addresses
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0097                     	;# 
   184  009B                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  0111                     	;# 
   194  0112                     	;# 
   195  0113                     	;# 
   196  0114                     	;# 
   197  0115                     	;# 
   198  0116                     	;# 
   199  0117                     	;# 
   200  0118                     	;# 
   201  0119                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  018E                     	;# 
   205  0197                     	;# 
   206  0199                     	;# 
   207  0199                     	;# 
   208  0199                     	;# 
   209  019A                     	;# 
   210  019A                     	;# 
   211  019A                     	;# 
   212  019B                     	;# 
   213  019B                     	;# 
   214  019B                     	;# 
   215  019B                     	;# 
   216  019B                     	;# 
   217  019C                     	;# 
   218  019C                     	;# 
   219  019C                     	;# 
   220  019D                     	;# 
   221  019D                     	;# 
   222  019D                     	;# 
   223  019E                     	;# 
   224  019E                     	;# 
   225  019E                     	;# 
   226  019F                     	;# 
   227  019F                     	;# 
   228  019F                     	;# 
   229  019F                     	;# 
   230  019F                     	;# 
   231  020C                     	;# 
   232  020D                     	;# 
   233  020E                     	;# 
   234  0211                     	;# 
   235  0211                     	;# 
   236  0212                     	;# 
   237  0212                     	;# 
   238  0213                     	;# 
   239  0213                     	;# 
   240  0214                     	;# 
   241  0214                     	;# 
   242  0215                     	;# 
   243  0215                     	;# 
   244  0215                     	;# 
   245  0215                     	;# 
   246  0216                     	;# 
   247  0216                     	;# 
   248  0217                     	;# 
   249  0217                     	;# 
   250  0219                     	;# 
   251  021A                     	;# 
   252  021B                     	;# 
   253  021C                     	;# 
   254  021D                     	;# 
   255  021D                     	;# 
   256  021E                     	;# 
   257  021F                     	;# 
   258  028C                     	;# 
   259  028D                     	;# 
   260  028E                     	;# 
   261  0291                     	;# 
   262  0291                     	;# 
   263  0292                     	;# 
   264  0293                     	;# 
   265  0294                     	;# 
   266  0295                     	;# 
   267  0295                     	;# 
   268  0296                     	;# 
   269  0297                     	;# 
   270  0298                     	;# 
   271  029F                     	;# 
   272  030C                     	;# 
   273  030D                     	;# 
   274  030E                     	;# 
   275  0311                     	;# 
   276  0311                     	;# 
   277  0312                     	;# 
   278  0313                     	;# 
   279  0314                     	;# 
   280  0315                     	;# 
   281  0315                     	;# 
   282  0316                     	;# 
   283  0317                     	;# 
   284  0318                     	;# 
   285  038C                     	;# 
   286  038D                     	;# 
   287  038E                     	;# 
   288  0391                     	;# 
   289  0392                     	;# 
   290  0393                     	;# 
   291  0394                     	;# 
   292  0395                     	;# 
   293  0396                     	;# 
   294  0397                     	;# 
   295  0398                     	;# 
   296  0399                     	;# 
   297  039A                     	;# 
   298  039C                     	;# 
   299  039D                     	;# 
   300  039E                     	;# 
   301  039F                     	;# 
   302  0411                     	;# 
   303  0411                     	;# 
   304  0412                     	;# 
   305  0413                     	;# 
   306  0414                     	;# 
   307  0415                     	;# 
   308  0416                     	;# 
   309  0417                     	;# 
   310  0418                     	;# 
   311  0418                     	;# 
   312  0419                     	;# 
   313  041A                     	;# 
   314  041B                     	;# 
   315  041C                     	;# 
   316  041D                     	;# 
   317  041E                     	;# 
   318  041F                     	;# 
   319  0498                     	;# 
   320  0498                     	;# 
   321  0499                     	;# 
   322  049A                     	;# 
   323  049B                     	;# 
   324  049B                     	;# 
   325  049C                     	;# 
   326  049D                     	;# 
   327  049E                     	;# 
   328  049F                     	;# 
   329  0617                     	;# 
   330  0618                     	;# 
   331  0619                     	;# 
   332  0619                     	;# 
   333  061A                     	;# 
   334  061B                     	;# 
   335  061C                     	;# 
   336  061C                     	;# 
   337  061F                     	;# 
   338  0691                     	;# 
   339  0692                     	;# 
   340  0693                     	;# 
   341  0694                     	;# 
   342  0695                     	;# 
   343  0696                     	;# 
   344  0697                     	;# 
   345  0698                     	;# 
   346  0699                     	;# 
   347  0711                     	;# 
   348  0712                     	;# 
   349  0713                     	;# 
   350  0714                     	;# 
   351  0715                     	;# 
   352  0716                     	;# 
   353  0717                     	;# 
   354  0718                     	;# 
   355  0719                     	;# 
   356  0891                     	;# 
   357  0891                     	;# 
   358  0891                     	;# 
   359  0891                     	;# 
   360  0891                     	;# 
   361  0891                     	;# 
   362  0892                     	;# 
   363  0892                     	;# 
   364  0892                     	;# 
   365  0893                     	;# 
   366  0893                     	;# 
   367  0893                     	;# 
   368  0893                     	;# 
   369  0893                     	;# 
   370  0893                     	;# 
   371  0894                     	;# 
   372  0894                     	;# 
   373  0894                     	;# 
   374  0895                     	;# 
   375  0895                     	;# 
   376  0895                     	;# 
   377  0896                     	;# 
   378  0896                     	;# 
   379  0896                     	;# 
   380  089B                     	;# 
   381  0911                     	;# 
   382  0912                     	;# 
   383  0913                     	;# 
   384  0914                     	;# 
   385  0915                     	;# 
   386  0916                     	;# 
   387  0918                     	;# 
   388  0919                     	;# 
   389  091A                     	;# 
   390  091B                     	;# 
   391  091C                     	;# 
   392  091D                     	;# 
   393  091E                     	;# 
   394  091F                     	;# 
   395  0E0F                     	;# 
   396  0E10                     	;# 
   397  0E11                     	;# 
   398  0E12                     	;# 
   399  0E13                     	;# 
   400  0E14                     	;# 
   401  0E15                     	;# 
   402  0E16                     	;# 
   403  0E17                     	;# 
   404  0E18                     	;# 
   405  0E19                     	;# 
   406  0E1A                     	;# 
   407  0E1B                     	;# 
   408  0E1C                     	;# 
   409  0E1D                     	;# 
   410  0E1E                     	;# 
   411  0E1F                     	;# 
   412  0E20                     	;# 
   413  0E21                     	;# 
   414  0E22                     	;# 
   415  0E24                     	;# 
   416  0E25                     	;# 
   417  0E28                     	;# 
   418  0E29                     	;# 
   419  0E2A                     	;# 
   420  0E2B                     	;# 
   421  0E2C                     	;# 
   422  0E2D                     	;# 
   423  0E2E                     	;# 
   424  0E2F                     	;# 
   425  0E90                     	;# 
   426  0E91                     	;# 
   427  0E92                     	;# 
   428  0E94                     	;# 
   429  0E95                     	;# 
   430  0E9C                     	;# 
   431  0E9D                     	;# 
   432  0E9E                     	;# 
   433  0E9F                     	;# 
   434  0EA0                     	;# 
   435  0EA1                     	;# 
   436  0EA2                     	;# 
   437  0EA3                     	;# 
   438  0EA4                     	;# 
   439  0EA5                     	;# 
   440  0EA6                     	;# 
   441  0EA7                     	;# 
   442  0F0F                     	;# 
   443  0F10                     	;# 
   444  0F11                     	;# 
   445  0F12                     	;# 
   446  0F13                     	;# 
   447  0F14                     	;# 
   448  0F15                     	;# 
   449  0F16                     	;# 
   450  0F17                     	;# 
   451  0F18                     	;# 
   452  0F19                     	;# 
   453  0F1A                     	;# 
   454  0F1B                     	;# 
   455  0F1C                     	;# 
   456  0F1D                     	;# 
   457  0F1E                     	;# 
   458  0F1F                     	;# 
   459  0F20                     	;# 
   460  0F21                     	;# 
   461  0F22                     	;# 
   462  0F23                     	;# 
   463  0F24                     	;# 
   464  0F25                     	;# 
   465  0F26                     	;# 
   466  0F27                     	;# 
   467  0F28                     	;# 
   468  0F29                     	;# 
   469  0F2A                     	;# 
   470  0F2B                     	;# 
   471  0F2C                     	;# 
   472  0F2D                     	;# 
   473  0F2E                     	;# 
   474  0F2F                     	;# 
   475  0F30                     	;# 
   476  0F31                     	;# 
   477  0F32                     	;# 
   478  0F33                     	;# 
   479  0F34                     	;# 
   480  0F35                     	;# 
   481  0F36                     	;# 
   482  0F37                     	;# 
   483  0FE4                     	;# 
   484  0FE5                     	;# 
   485  0FE6                     	;# 
   486  0FE7                     	;# 
   487  0FE8                     	;# 
   488  0FE9                     	;# 
   489  0FEA                     	;# 
   490  0FEB                     	;# 
   491  0FED                     	;# 
   492  0FEE                     	;# 
   493  0FEF                     	;# 
   494  0000                     	;# 
   495  0001                     	;# 
   496  0002                     	;# 
   497  0003                     	;# 
   498  0004                     	;# 
   499  0005                     	;# 
   500  0006                     	;# 
   501  0007                     	;# 
   502  0008                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  0010                     	;# 
   510  0011                     	;# 
   511  0012                     	;# 
   512  0013                     	;# 
   513  0014                     	;# 
   514  0015                     	;# 
   515  0015                     	;# 
   516  0016                     	;# 
   517  0016                     	;# 
   518  0017                     	;# 
   519  0018                     	;# 
   520  0019                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001C                     	;# 
   525  001D                     	;# 
   526  001E                     	;# 
   527  001F                     	;# 
   528  008C                     	;# 
   529  008D                     	;# 
   530  008E                     	;# 
   531  0090                     	;# 
   532  0091                     	;# 
   533  0092                     	;# 
   534  0093                     	;# 
   535  0094                     	;# 
   536  0097                     	;# 
   537  009B                     	;# 
   538  009B                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  009F                     	;# 
   543  010C                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  0111                     	;# 
   547  0112                     	;# 
   548  0113                     	;# 
   549  0114                     	;# 
   550  0115                     	;# 
   551  0116                     	;# 
   552  0117                     	;# 
   553  0118                     	;# 
   554  0119                     	;# 
   555  018C                     	;# 
   556  018D                     	;# 
   557  018E                     	;# 
   558  0197                     	;# 
   559  0199                     	;# 
   560  0199                     	;# 
   561  0199                     	;# 
   562  019A                     	;# 
   563  019A                     	;# 
   564  019A                     	;# 
   565  019B                     	;# 
   566  019B                     	;# 
   567  019B                     	;# 
   568  019B                     	;# 
   569  019B                     	;# 
   570  019C                     	;# 
   571  019C                     	;# 
   572  019C                     	;# 
   573  019D                     	;# 
   574  019D                     	;# 
   575  019D                     	;# 
   576  019E                     	;# 
   577  019E                     	;# 
   578  019E                     	;# 
   579  019F                     	;# 
   580  019F                     	;# 
   581  019F                     	;# 
   582  019F                     	;# 
   583  019F                     	;# 
   584  020C                     	;# 
   585  020D                     	;# 
   586  020E                     	;# 
   587  0211                     	;# 
   588  0211                     	;# 
   589  0212                     	;# 
   590  0212                     	;# 
   591  0213                     	;# 
   592  0213                     	;# 
   593  0214                     	;# 
   594  0214                     	;# 
   595  0215                     	;# 
   596  0215                     	;# 
   597  0215                     	;# 
   598  0215                     	;# 
   599  0216                     	;# 
   600  0216                     	;# 
   601  0217                     	;# 
   602  0217                     	;# 
   603  0219                     	;# 
   604  021A                     	;# 
   605  021B                     	;# 
   606  021C                     	;# 
   607  021D                     	;# 
   608  021D                     	;# 
   609  021E                     	;# 
   610  021F                     	;# 
   611  028C                     	;# 
   612  028D                     	;# 
   613  028E                     	;# 
   614  0291                     	;# 
   615  0291                     	;# 
   616  0292                     	;# 
   617  0293                     	;# 
   618  0294                     	;# 
   619  0295                     	;# 
   620  0295                     	;# 
   621  0296                     	;# 
   622  0297                     	;# 
   623  0298                     	;# 
   624  029F                     	;# 
   625  030C                     	;# 
   626  030D                     	;# 
   627  030E                     	;# 
   628  0311                     	;# 
   629  0311                     	;# 
   630  0312                     	;# 
   631  0313                     	;# 
   632  0314                     	;# 
   633  0315                     	;# 
   634  0315                     	;# 
   635  0316                     	;# 
   636  0317                     	;# 
   637  0318                     	;# 
   638  038C                     	;# 
   639  038D                     	;# 
   640  038E                     	;# 
   641  0391                     	;# 
   642  0392                     	;# 
   643  0393                     	;# 
   644  0394                     	;# 
   645  0395                     	;# 
   646  0396                     	;# 
   647  0397                     	;# 
   648  0398                     	;# 
   649  0399                     	;# 
   650  039A                     	;# 
   651  039C                     	;# 
   652  039D                     	;# 
   653  039E                     	;# 
   654  039F                     	;# 
   655  0411                     	;# 
   656  0411                     	;# 
   657  0412                     	;# 
   658  0413                     	;# 
   659  0414                     	;# 
   660  0415                     	;# 
   661  0416                     	;# 
   662  0417                     	;# 
   663  0418                     	;# 
   664  0418                     	;# 
   665  0419                     	;# 
   666  041A                     	;# 
   667  041B                     	;# 
   668  041C                     	;# 
   669  041D                     	;# 
   670  041E                     	;# 
   671  041F                     	;# 
   672  0498                     	;# 
   673  0498                     	;# 
   674  0499                     	;# 
   675  049A                     	;# 
   676  049B                     	;# 
   677  049B                     	;# 
   678  049C                     	;# 
   679  049D                     	;# 
   680  049E                     	;# 
   681  049F                     	;# 
   682  0617                     	;# 
   683  0618                     	;# 
   684  0619                     	;# 
   685  0619                     	;# 
   686  061A                     	;# 
   687  061B                     	;# 
   688  061C                     	;# 
   689  061C                     	;# 
   690  061F                     	;# 
   691  0691                     	;# 
   692  0692                     	;# 
   693  0693                     	;# 
   694  0694                     	;# 
   695  0695                     	;# 
   696  0696                     	;# 
   697  0697                     	;# 
   698  0698                     	;# 
   699  0699                     	;# 
   700  0711                     	;# 
   701  0712                     	;# 
   702  0713                     	;# 
   703  0714                     	;# 
   704  0715                     	;# 
   705  0716                     	;# 
   706  0717                     	;# 
   707  0718                     	;# 
   708  0719                     	;# 
   709  0891                     	;# 
   710  0891                     	;# 
   711  0891                     	;# 
   712  0891                     	;# 
   713  0891                     	;# 
   714  0891                     	;# 
   715  0892                     	;# 
   716  0892                     	;# 
   717  0892                     	;# 
   718  0893                     	;# 
   719  0893                     	;# 
   720  0893                     	;# 
   721  0893                     	;# 
   722  0893                     	;# 
   723  0893                     	;# 
   724  0894                     	;# 
   725  0894                     	;# 
   726  0894                     	;# 
   727  0895                     	;# 
   728  0895                     	;# 
   729  0895                     	;# 
   730  0896                     	;# 
   731  0896                     	;# 
   732  0896                     	;# 
   733  089B                     	;# 
   734  0911                     	;# 
   735  0912                     	;# 
   736  0913                     	;# 
   737  0914                     	;# 
   738  0915                     	;# 
   739  0916                     	;# 
   740  0918                     	;# 
   741  0919                     	;# 
   742  091A                     	;# 
   743  091B                     	;# 
   744  091C                     	;# 
   745  091D                     	;# 
   746  091E                     	;# 
   747  091F                     	;# 
   748  0E0F                     	;# 
   749  0E10                     	;# 
   750  0E11                     	;# 
   751  0E12                     	;# 
   752  0E13                     	;# 
   753  0E14                     	;# 
   754  0E15                     	;# 
   755  0E16                     	;# 
   756  0E17                     	;# 
   757  0E18                     	;# 
   758  0E19                     	;# 
   759  0E1A                     	;# 
   760  0E1B                     	;# 
   761  0E1C                     	;# 
   762  0E1D                     	;# 
   763  0E1E                     	;# 
   764  0E1F                     	;# 
   765  0E20                     	;# 
   766  0E21                     	;# 
   767  0E22                     	;# 
   768  0E24                     	;# 
   769  0E25                     	;# 
   770  0E28                     	;# 
   771  0E29                     	;# 
   772  0E2A                     	;# 
   773  0E2B                     	;# 
   774  0E2C                     	;# 
   775  0E2D                     	;# 
   776  0E2E                     	;# 
   777  0E2F                     	;# 
   778  0E90                     	;# 
   779  0E91                     	;# 
   780  0E92                     	;# 
   781  0E94                     	;# 
   782  0E95                     	;# 
   783  0E9C                     	;# 
   784  0E9D                     	;# 
   785  0E9E                     	;# 
   786  0E9F                     	;# 
   787  0EA0                     	;# 
   788  0EA1                     	;# 
   789  0EA2                     	;# 
   790  0EA3                     	;# 
   791  0EA4                     	;# 
   792  0EA5                     	;# 
   793  0EA6                     	;# 
   794  0EA7                     	;# 
   795  0F0F                     	;# 
   796  0F10                     	;# 
   797  0F11                     	;# 
   798  0F12                     	;# 
   799  0F13                     	;# 
   800  0F14                     	;# 
   801  0F15                     	;# 
   802  0F16                     	;# 
   803  0F17                     	;# 
   804  0F18                     	;# 
   805  0F19                     	;# 
   806  0F1A                     	;# 
   807  0F1B                     	;# 
   808  0F1C                     	;# 
   809  0F1D                     	;# 
   810  0F1E                     	;# 
   811  0F1F                     	;# 
   812  0F20                     	;# 
   813  0F21                     	;# 
   814  0F22                     	;# 
   815  0F23                     	;# 
   816  0F24                     	;# 
   817  0F25                     	;# 
   818  0F26                     	;# 
   819  0F27                     	;# 
   820  0F28                     	;# 
   821  0F29                     	;# 
   822  0F2A                     	;# 
   823  0F2B                     	;# 
   824  0F2C                     	;# 
   825  0F2D                     	;# 
   826  0F2E                     	;# 
   827  0F2F                     	;# 
   828  0F30                     	;# 
   829  0F31                     	;# 
   830  0F32                     	;# 
   831  0F33                     	;# 
   832  0F34                     	;# 
   833  0F35                     	;# 
   834  0F36                     	;# 
   835  0F37                     	;# 
   836  0FE4                     	;# 
   837  0FE5                     	;# 
   838  0FE6                     	;# 
   839  0FE7                     	;# 
   840  0FE8                     	;# 
   841  0FE9                     	;# 
   842  0FEA                     	;# 
   843  0FEB                     	;# 
   844  0FED                     	;# 
   845  0FEE                     	;# 
   846  0FEF                     	;# 
   847  0000                     	;# 
   848  0001                     	;# 
   849  0002                     	;# 
   850  0003                     	;# 
   851  0004                     	;# 
   852  0005                     	;# 
   853  0006                     	;# 
   854  0007                     	;# 
   855  0008                     	;# 
   856  0009                     	;# 
   857  000A                     	;# 
   858  000B                     	;# 
   859  000C                     	;# 
   860  000D                     	;# 
   861  000E                     	;# 
   862  0010                     	;# 
   863  0011                     	;# 
   864  0012                     	;# 
   865  0013                     	;# 
   866  0014                     	;# 
   867  0015                     	;# 
   868  0015                     	;# 
   869  0016                     	;# 
   870  0016                     	;# 
   871  0017                     	;# 
   872  0018                     	;# 
   873  0019                     	;# 
   874  0019                     	;# 
   875  001A                     	;# 
   876  001B                     	;# 
   877  001C                     	;# 
   878  001D                     	;# 
   879  001E                     	;# 
   880  001F                     	;# 
   881  008C                     	;# 
   882  008D                     	;# 
   883  008E                     	;# 
   884  0090                     	;# 
   885  0091                     	;# 
   886  0092                     	;# 
   887  0093                     	;# 
   888  0094                     	;# 
   889  0097                     	;# 
   890  009B                     	;# 
   891  009B                     	;# 
   892  009C                     	;# 
   893  009D                     	;# 
   894  009E                     	;# 
   895  009F                     	;# 
   896  010C                     	;# 
   897  010D                     	;# 
   898  010E                     	;# 
   899  0111                     	;# 
   900  0112                     	;# 
   901  0113                     	;# 
   902  0114                     	;# 
   903  0115                     	;# 
   904  0116                     	;# 
   905  0117                     	;# 
   906  0118                     	;# 
   907  0119                     	;# 
   908  018C                     	;# 
   909  018D                     	;# 
   910  018E                     	;# 
   911  0197                     	;# 
   912  0199                     	;# 
   913  0199                     	;# 
   914  0199                     	;# 
   915  019A                     	;# 
   916  019A                     	;# 
   917  019A                     	;# 
   918  019B                     	;# 
   919  019B                     	;# 
   920  019B                     	;# 
   921  019B                     	;# 
   922  019B                     	;# 
   923  019C                     	;# 
   924  019C                     	;# 
   925  019C                     	;# 
   926  019D                     	;# 
   927  019D                     	;# 
   928  019D                     	;# 
   929  019E                     	;# 
   930  019E                     	;# 
   931  019E                     	;# 
   932  019F                     	;# 
   933  019F                     	;# 
   934  019F                     	;# 
   935  019F                     	;# 
   936  019F                     	;# 
   937  020C                     	;# 
   938  020D                     	;# 
   939  020E                     	;# 
   940  0211                     	;# 
   941  0211                     	;# 
   942  0212                     	;# 
   943  0212                     	;# 
   944  0213                     	;# 
   945  0213                     	;# 
   946  0214                     	;# 
   947  0214                     	;# 
   948  0215                     	;# 
   949  0215                     	;# 
   950  0215                     	;# 
   951  0215                     	;# 
   952  0216                     	;# 
   953  0216                     	;# 
   954  0217                     	;# 
   955  0217                     	;# 
   956  0219                     	;# 
   957  021A                     	;# 
   958  021B                     	;# 
   959  021C                     	;# 
   960  021D                     	;# 
   961  021D                     	;# 
   962  021E                     	;# 
   963  021F                     	;# 
   964  028C                     	;# 
   965  028D                     	;# 
   966  028E                     	;# 
   967  0291                     	;# 
   968  0291                     	;# 
   969  0292                     	;# 
   970  0293                     	;# 
   971  0294                     	;# 
   972  0295                     	;# 
   973  0295                     	;# 
   974  0296                     	;# 
   975  0297                     	;# 
   976  0298                     	;# 
   977  029F                     	;# 
   978  030C                     	;# 
   979  030D                     	;# 
   980  030E                     	;# 
   981  0311                     	;# 
   982  0311                     	;# 
   983  0312                     	;# 
   984  0313                     	;# 
   985  0314                     	;# 
   986  0315                     	;# 
   987  0315                     	;# 
   988  0316                     	;# 
   989  0317                     	;# 
   990  0318                     	;# 
   991  038C                     	;# 
   992  038D                     	;# 
   993  038E                     	;# 
   994  0391                     	;# 
   995  0392                     	;# 
   996  0393                     	;# 
   997  0394                     	;# 
   998  0395                     	;# 
   999  0396                     	;# 
  1000  0397                     	;# 
  1001  0398                     	;# 
  1002  0399                     	;# 
  1003  039A                     	;# 
  1004  039C                     	;# 
  1005  039D                     	;# 
  1006  039E                     	;# 
  1007  039F                     	;# 
  1008  0411                     	;# 
  1009  0411                     	;# 
  1010  0412                     	;# 
  1011  0413                     	;# 
  1012  0414                     	;# 
  1013  0415                     	;# 
  1014  0416                     	;# 
  1015  0417                     	;# 
  1016  0418                     	;# 
  1017  0418                     	;# 
  1018  0419                     	;# 
  1019  041A                     	;# 
  1020  041B                     	;# 
  1021  041C                     	;# 
  1022  041D                     	;# 
  1023  041E                     	;# 
  1024  041F                     	;# 
  1025  0498                     	;# 
  1026  0498                     	;# 
  1027  0499                     	;# 
  1028  049A                     	;# 
  1029  049B                     	;# 
  1030  049B                     	;# 
  1031  049C                     	;# 
  1032  049D                     	;# 
  1033  049E                     	;# 
  1034  049F                     	;# 
  1035  0617                     	;# 
  1036  0618                     	;# 
  1037  0619                     	;# 
  1038  0619                     	;# 
  1039  061A                     	;# 
  1040  061B                     	;# 
  1041  061C                     	;# 
  1042  061C                     	;# 
  1043  061F                     	;# 
  1044  0691                     	;# 
  1045  0692                     	;# 
  1046  0693                     	;# 
  1047  0694                     	;# 
  1048  0695                     	;# 
  1049  0696                     	;# 
  1050  0697                     	;# 
  1051  0698                     	;# 
  1052  0699                     	;# 
  1053  0711                     	;# 
  1054  0712                     	;# 
  1055  0713                     	;# 
  1056  0714                     	;# 
  1057  0715                     	;# 
  1058  0716                     	;# 
  1059  0717                     	;# 
  1060  0718                     	;# 
  1061  0719                     	;# 
  1062  0891                     	;# 
  1063  0891                     	;# 
  1064  0891                     	;# 
  1065  0891                     	;# 
  1066  0891                     	;# 
  1067  0891                     	;# 
  1068  0892                     	;# 
  1069  0892                     	;# 
  1070  0892                     	;# 
  1071  0893                     	;# 
  1072  0893                     	;# 
  1073  0893                     	;# 
  1074  0893                     	;# 
  1075  0893                     	;# 
  1076  0893                     	;# 
  1077  0894                     	;# 
  1078  0894                     	;# 
  1079  0894                     	;# 
  1080  0895                     	;# 
  1081  0895                     	;# 
  1082  0895                     	;# 
  1083  0896                     	;# 
  1084  0896                     	;# 
  1085  0896                     	;# 
  1086  089B                     	;# 
  1087  0911                     	;# 
  1088  0912                     	;# 
  1089  0913                     	;# 
  1090  0914                     	;# 
  1091  0915                     	;# 
  1092  0916                     	;# 
  1093  0918                     	;# 
  1094  0919                     	;# 
  1095  091A                     	;# 
  1096  091B                     	;# 
  1097  091C                     	;# 
  1098  091D                     	;# 
  1099  091E                     	;# 
  1100  091F                     	;# 
  1101  0E0F                     	;# 
  1102  0E10                     	;# 
  1103  0E11                     	;# 
  1104  0E12                     	;# 
  1105  0E13                     	;# 
  1106  0E14                     	;# 
  1107  0E15                     	;# 
  1108  0E16                     	;# 
  1109  0E17                     	;# 
  1110  0E18                     	;# 
  1111  0E19                     	;# 
  1112  0E1A                     	;# 
  1113  0E1B                     	;# 
  1114  0E1C                     	;# 
  1115  0E1D                     	;# 
  1116  0E1E                     	;# 
  1117  0E1F                     	;# 
  1118  0E20                     	;# 
  1119  0E21                     	;# 
  1120  0E22                     	;# 
  1121  0E24                     	;# 
  1122  0E25                     	;# 
  1123  0E28                     	;# 
  1124  0E29                     	;# 
  1125  0E2A                     	;# 
  1126  0E2B                     	;# 
  1127  0E2C                     	;# 
  1128  0E2D                     	;# 
  1129  0E2E                     	;# 
  1130  0E2F                     	;# 
  1131  0E90                     	;# 
  1132  0E91                     	;# 
  1133  0E92                     	;# 
  1134  0E94                     	;# 
  1135  0E95                     	;# 
  1136  0E9C                     	;# 
  1137  0E9D                     	;# 
  1138  0E9E                     	;# 
  1139  0E9F                     	;# 
  1140  0EA0                     	;# 
  1141  0EA1                     	;# 
  1142  0EA2                     	;# 
  1143  0EA3                     	;# 
  1144  0EA4                     	;# 
  1145  0EA5                     	;# 
  1146  0EA6                     	;# 
  1147  0EA7                     	;# 
  1148  0F0F                     	;# 
  1149  0F10                     	;# 
  1150  0F11                     	;# 
  1151  0F12                     	;# 
  1152  0F13                     	;# 
  1153  0F14                     	;# 
  1154  0F15                     	;# 
  1155  0F16                     	;# 
  1156  0F17                     	;# 
  1157  0F18                     	;# 
  1158  0F19                     	;# 
  1159  0F1A                     	;# 
  1160  0F1B                     	;# 
  1161  0F1C                     	;# 
  1162  0F1D                     	;# 
  1163  0F1E                     	;# 
  1164  0F1F                     	;# 
  1165  0F20                     	;# 
  1166  0F21                     	;# 
  1167  0F22                     	;# 
  1168  0F23                     	;# 
  1169  0F24                     	;# 
  1170  0F25                     	;# 
  1171  0F26                     	;# 
  1172  0F27                     	;# 
  1173  0F28                     	;# 
  1174  0F29                     	;# 
  1175  0F2A                     	;# 
  1176  0F2B                     	;# 
  1177  0F2C                     	;# 
  1178  0F2D                     	;# 
  1179  0F2E                     	;# 
  1180  0F2F                     	;# 
  1181  0F30                     	;# 
  1182  0F31                     	;# 
  1183  0F32                     	;# 
  1184  0F33                     	;# 
  1185  0F34                     	;# 
  1186  0F35                     	;# 
  1187  0F36                     	;# 
  1188  0F37                     	;# 
  1189  0FE4                     	;# 
  1190  0FE5                     	;# 
  1191  0FE6                     	;# 
  1192  0FE7                     	;# 
  1193  0FE8                     	;# 
  1194  0FE9                     	;# 
  1195  0FEA                     	;# 
  1196  0FEB                     	;# 
  1197  0FED                     	;# 
  1198  0FEE                     	;# 
  1199  0FEF                     	;# 
  1200  0000                     	;# 
  1201  0001                     	;# 
  1202  0002                     	;# 
  1203  0003                     	;# 
  1204  0004                     	;# 
  1205  0005                     	;# 
  1206  0006                     	;# 
  1207  0007                     	;# 
  1208  0008                     	;# 
  1209  0009                     	;# 
  1210  000A                     	;# 
  1211  000B                     	;# 
  1212  000C                     	;# 
  1213  000D                     	;# 
  1214  000E                     	;# 
  1215  0010                     	;# 
  1216  0011                     	;# 
  1217  0012                     	;# 
  1218  0013                     	;# 
  1219  0014                     	;# 
  1220  0015                     	;# 
  1221  0015                     	;# 
  1222  0016                     	;# 
  1223  0016                     	;# 
  1224  0017                     	;# 
  1225  0018                     	;# 
  1226  0019                     	;# 
  1227  0019                     	;# 
  1228  001A                     	;# 
  1229  001B                     	;# 
  1230  001C                     	;# 
  1231  001D                     	;# 
  1232  001E                     	;# 
  1233  001F                     	;# 
  1234  008C                     	;# 
  1235  008D                     	;# 
  1236  008E                     	;# 
  1237  0090                     	;# 
  1238  0091                     	;# 
  1239  0092                     	;# 
  1240  0093                     	;# 
  1241  0094                     	;# 
  1242  0097                     	;# 
  1243  009B                     	;# 
  1244  009B                     	;# 
  1245  009C                     	;# 
  1246  009D                     	;# 
  1247  009E                     	;# 
  1248  009F                     	;# 
  1249  010C                     	;# 
  1250  010D                     	;# 
  1251  010E                     	;# 
  1252  0111                     	;# 
  1253  0112                     	;# 
  1254  0113                     	;# 
  1255  0114                     	;# 
  1256  0115                     	;# 
  1257  0116                     	;# 
  1258  0117                     	;# 
  1259  0118                     	;# 
  1260  0119                     	;# 
  1261  018C                     	;# 
  1262  018D                     	;# 
  1263  018E                     	;# 
  1264  0197                     	;# 
  1265  0199                     	;# 
  1266  0199                     	;# 
  1267  0199                     	;# 
  1268  019A                     	;# 
  1269  019A                     	;# 
  1270  019A                     	;# 
  1271  019B                     	;# 
  1272  019B                     	;# 
  1273  019B                     	;# 
  1274  019B                     	;# 
  1275  019B                     	;# 
  1276  019C                     	;# 
  1277  019C                     	;# 
  1278  019C                     	;# 
  1279  019D                     	;# 
  1280  019D                     	;# 
  1281  019D                     	;# 
  1282  019E                     	;# 
  1283  019E                     	;# 
  1284  019E                     	;# 
  1285  019F                     	;# 
  1286  019F                     	;# 
  1287  019F                     	;# 
  1288  019F                     	;# 
  1289  019F                     	;# 
  1290  020C                     	;# 
  1291  020D                     	;# 
  1292  020E                     	;# 
  1293  0211                     	;# 
  1294  0211                     	;# 
  1295  0212                     	;# 
  1296  0212                     	;# 
  1297  0213                     	;# 
  1298  0213                     	;# 
  1299  0214                     	;# 
  1300  0214                     	;# 
  1301  0215                     	;# 
  1302  0215                     	;# 
  1303  0215                     	;# 
  1304  0215                     	;# 
  1305  0216                     	;# 
  1306  0216                     	;# 
  1307  0217                     	;# 
  1308  0217                     	;# 
  1309  0219                     	;# 
  1310  021A                     	;# 
  1311  021B                     	;# 
  1312  021C                     	;# 
  1313  021D                     	;# 
  1314  021D                     	;# 
  1315  021E                     	;# 
  1316  021F                     	;# 
  1317  028C                     	;# 
  1318  028D                     	;# 
  1319  028E                     	;# 
  1320  0291                     	;# 
  1321  0291                     	;# 
  1322  0292                     	;# 
  1323  0293                     	;# 
  1324  0294                     	;# 
  1325  0295                     	;# 
  1326  0295                     	;# 
  1327  0296                     	;# 
  1328  0297                     	;# 
  1329  0298                     	;# 
  1330  029F                     	;# 
  1331  030C                     	;# 
  1332  030D                     	;# 
  1333  030E                     	;# 
  1334  0311                     	;# 
  1335  0311                     	;# 
  1336  0312                     	;# 
  1337  0313                     	;# 
  1338  0314                     	;# 
  1339  0315                     	;# 
  1340  0315                     	;# 
  1341  0316                     	;# 
  1342  0317                     	;# 
  1343  0318                     	;# 
  1344  038C                     	;# 
  1345  038D                     	;# 
  1346  038E                     	;# 
  1347  0391                     	;# 
  1348  0392                     	;# 
  1349  0393                     	;# 
  1350  0394                     	;# 
  1351  0395                     	;# 
  1352  0396                     	;# 
  1353  0397                     	;# 
  1354  0398                     	;# 
  1355  0399                     	;# 
  1356  039A                     	;# 
  1357  039C                     	;# 
  1358  039D                     	;# 
  1359  039E                     	;# 
  1360  039F                     	;# 
  1361  0411                     	;# 
  1362  0411                     	;# 
  1363  0412                     	;# 
  1364  0413                     	;# 
  1365  0414                     	;# 
  1366  0415                     	;# 
  1367  0416                     	;# 
  1368  0417                     	;# 
  1369  0418                     	;# 
  1370  0418                     	;# 
  1371  0419                     	;# 
  1372  041A                     	;# 
  1373  041B                     	;# 
  1374  041C                     	;# 
  1375  041D                     	;# 
  1376  041E                     	;# 
  1377  041F                     	;# 
  1378  0498                     	;# 
  1379  0498                     	;# 
  1380  0499                     	;# 
  1381  049A                     	;# 
  1382  049B                     	;# 
  1383  049B                     	;# 
  1384  049C                     	;# 
  1385  049D                     	;# 
  1386  049E                     	;# 
  1387  049F                     	;# 
  1388  0617                     	;# 
  1389  0618                     	;# 
  1390  0619                     	;# 
  1391  0619                     	;# 
  1392  061A                     	;# 
  1393  061B                     	;# 
  1394  061C                     	;# 
  1395  061C                     	;# 
  1396  061F                     	;# 
  1397  0691                     	;# 
  1398  0692                     	;# 
  1399  0693                     	;# 
  1400  0694                     	;# 
  1401  0695                     	;# 
  1402  0696                     	;# 
  1403  0697                     	;# 
  1404  0698                     	;# 
  1405  0699                     	;# 
  1406  0711                     	;# 
  1407  0712                     	;# 
  1408  0713                     	;# 
  1409  0714                     	;# 
  1410  0715                     	;# 
  1411  0716                     	;# 
  1412  0717                     	;# 
  1413  0718                     	;# 
  1414  0719                     	;# 
  1415  0891                     	;# 
  1416  0891                     	;# 
  1417  0891                     	;# 
  1418  0891                     	;# 
  1419  0891                     	;# 
  1420  0891                     	;# 
  1421  0892                     	;# 
  1422  0892                     	;# 
  1423  0892                     	;# 
  1424  0893                     	;# 
  1425  0893                     	;# 
  1426  0893                     	;# 
  1427  0893                     	;# 
  1428  0893                     	;# 
  1429  0893                     	;# 
  1430  0894                     	;# 
  1431  0894                     	;# 
  1432  0894                     	;# 
  1433  0895                     	;# 
  1434  0895                     	;# 
  1435  0895                     	;# 
  1436  0896                     	;# 
  1437  0896                     	;# 
  1438  0896                     	;# 
  1439  089B                     	;# 
  1440  0911                     	;# 
  1441  0912                     	;# 
  1442  0913                     	;# 
  1443  0914                     	;# 
  1444  0915                     	;# 
  1445  0916                     	;# 
  1446  0918                     	;# 
  1447  0919                     	;# 
  1448  091A                     	;# 
  1449  091B                     	;# 
  1450  091C                     	;# 
  1451  091D                     	;# 
  1452  091E                     	;# 
  1453  091F                     	;# 
  1454  0E0F                     	;# 
  1455  0E10                     	;# 
  1456  0E11                     	;# 
  1457  0E12                     	;# 
  1458  0E13                     	;# 
  1459  0E14                     	;# 
  1460  0E15                     	;# 
  1461  0E16                     	;# 
  1462  0E17                     	;# 
  1463  0E18                     	;# 
  1464  0E19                     	;# 
  1465  0E1A                     	;# 
  1466  0E1B                     	;# 
  1467  0E1C                     	;# 
  1468  0E1D                     	;# 
  1469  0E1E                     	;# 
  1470  0E1F                     	;# 
  1471  0E20                     	;# 
  1472  0E21                     	;# 
  1473  0E22                     	;# 
  1474  0E24                     	;# 
  1475  0E25                     	;# 
  1476  0E28                     	;# 
  1477  0E29                     	;# 
  1478  0E2A                     	;# 
  1479  0E2B                     	;# 
  1480  0E2C                     	;# 
  1481  0E2D                     	;# 
  1482  0E2E                     	;# 
  1483  0E2F                     	;# 
  1484  0E90                     	;# 
  1485  0E91                     	;# 
  1486  0E92                     	;# 
  1487  0E94                     	;# 
  1488  0E95                     	;# 
  1489  0E9C                     	;# 
  1490  0E9D                     	;# 
  1491  0E9E                     	;# 
  1492  0E9F                     	;# 
  1493  0EA0                     	;# 
  1494  0EA1                     	;# 
  1495  0EA2                     	;# 
  1496  0EA3                     	;# 
  1497  0EA4                     	;# 
  1498  0EA5                     	;# 
  1499  0EA6                     	;# 
  1500  0EA7                     	;# 
  1501  0F0F                     	;# 
  1502  0F10                     	;# 
  1503  0F11                     	;# 
  1504  0F12                     	;# 
  1505  0F13                     	;# 
  1506  0F14                     	;# 
  1507  0F15                     	;# 
  1508  0F16                     	;# 
  1509  0F17                     	;# 
  1510  0F18                     	;# 
  1511  0F19                     	;# 
  1512  0F1A                     	;# 
  1513  0F1B                     	;# 
  1514  0F1C                     	;# 
  1515  0F1D                     	;# 
  1516  0F1E                     	;# 
  1517  0F1F                     	;# 
  1518  0F20                     	;# 
  1519  0F21                     	;# 
  1520  0F22                     	;# 
  1521  0F23                     	;# 
  1522  0F24                     	;# 
  1523  0F25                     	;# 
  1524  0F26                     	;# 
  1525  0F27                     	;# 
  1526  0F28                     	;# 
  1527  0F29                     	;# 
  1528  0F2A                     	;# 
  1529  0F2B                     	;# 
  1530  0F2C                     	;# 
  1531  0F2D                     	;# 
  1532  0F2E                     	;# 
  1533  0F2F                     	;# 
  1534  0F30                     	;# 
  1535  0F31                     	;# 
  1536  0F32                     	;# 
  1537  0F33                     	;# 
  1538  0F34                     	;# 
  1539  0F35                     	;# 
  1540  0F36                     	;# 
  1541  0F37                     	;# 
  1542  0FE4                     	;# 
  1543  0FE5                     	;# 
  1544  0FE6                     	;# 
  1545  0FE7                     	;# 
  1546  0FE8                     	;# 
  1547  0FE9                     	;# 
  1548  0FEA                     	;# 
  1549  0FEB                     	;# 
  1550  0FED                     	;# 
  1551  0FEE                     	;# 
  1552  0FEF                     	;# 
  1553  0000                     	;# 
  1554  0001                     	;# 
  1555  0002                     	;# 
  1556  0003                     	;# 
  1557  0004                     	;# 
  1558  0005                     	;# 
  1559  0006                     	;# 
  1560  0007                     	;# 
  1561  0008                     	;# 
  1562  0009                     	;# 
  1563  000A                     	;# 
  1564  000B                     	;# 
  1565  000C                     	;# 
  1566  000D                     	;# 
  1567  000E                     	;# 
  1568  0010                     	;# 
  1569  0011                     	;# 
  1570  0012                     	;# 
  1571  0013                     	;# 
  1572  0014                     	;# 
  1573  0015                     	;# 
  1574  0015                     	;# 
  1575  0016                     	;# 
  1576  0016                     	;# 
  1577  0017                     	;# 
  1578  0018                     	;# 
  1579  0019                     	;# 
  1580  0019                     	;# 
  1581  001A                     	;# 
  1582  001B                     	;# 
  1583  001C                     	;# 
  1584  001D                     	;# 
  1585  001E                     	;# 
  1586  001F                     	;# 
  1587  008C                     	;# 
  1588  008D                     	;# 
  1589  008E                     	;# 
  1590  0090                     	;# 
  1591  0091                     	;# 
  1592  0092                     	;# 
  1593  0093                     	;# 
  1594  0094                     	;# 
  1595  0097                     	;# 
  1596  009B                     	;# 
  1597  009B                     	;# 
  1598  009C                     	;# 
  1599  009D                     	;# 
  1600  009E                     	;# 
  1601  009F                     	;# 
  1602  010C                     	;# 
  1603  010D                     	;# 
  1604  010E                     	;# 
  1605  0111                     	;# 
  1606  0112                     	;# 
  1607  0113                     	;# 
  1608  0114                     	;# 
  1609  0115                     	;# 
  1610  0116                     	;# 
  1611  0117                     	;# 
  1612  0118                     	;# 
  1613  0119                     	;# 
  1614  018C                     	;# 
  1615  018D                     	;# 
  1616  018E                     	;# 
  1617  0197                     	;# 
  1618  0199                     	;# 
  1619  0199                     	;# 
  1620  0199                     	;# 
  1621  019A                     	;# 
  1622  019A                     	;# 
  1623  019A                     	;# 
  1624  019B                     	;# 
  1625  019B                     	;# 
  1626  019B                     	;# 
  1627  019B                     	;# 
  1628  019B                     	;# 
  1629  019C                     	;# 
  1630  019C                     	;# 
  1631  019C                     	;# 
  1632  019D                     	;# 
  1633  019D                     	;# 
  1634  019D                     	;# 
  1635  019E                     	;# 
  1636  019E                     	;# 
  1637  019E                     	;# 
  1638  019F                     	;# 
  1639  019F                     	;# 
  1640  019F                     	;# 
  1641  019F                     	;# 
  1642  019F                     	;# 
  1643  020C                     	;# 
  1644  020D                     	;# 
  1645  020E                     	;# 
  1646  0211                     	;# 
  1647  0211                     	;# 
  1648  0212                     	;# 
  1649  0212                     	;# 
  1650  0213                     	;# 
  1651  0213                     	;# 
  1652  0214                     	;# 
  1653  0214                     	;# 
  1654  0215                     	;# 
  1655  0215                     	;# 
  1656  0215                     	;# 
  1657  0215                     	;# 
  1658  0216                     	;# 
  1659  0216                     	;# 
  1660  0217                     	;# 
  1661  0217                     	;# 
  1662  0219                     	;# 
  1663  021A                     	;# 
  1664  021B                     	;# 
  1665  021C                     	;# 
  1666  021D                     	;# 
  1667  021D                     	;# 
  1668  021E                     	;# 
  1669  021F                     	;# 
  1670  028C                     	;# 
  1671  028D                     	;# 
  1672  028E                     	;# 
  1673  0291                     	;# 
  1674  0291                     	;# 
  1675  0292                     	;# 
  1676  0293                     	;# 
  1677  0294                     	;# 
  1678  0295                     	;# 
  1679  0295                     	;# 
  1680  0296                     	;# 
  1681  0297                     	;# 
  1682  0298                     	;# 
  1683  029F                     	;# 
  1684  030C                     	;# 
  1685  030D                     	;# 
  1686  030E                     	;# 
  1687  0311                     	;# 
  1688  0311                     	;# 
  1689  0312                     	;# 
  1690  0313                     	;# 
  1691  0314                     	;# 
  1692  0315                     	;# 
  1693  0315                     	;# 
  1694  0316                     	;# 
  1695  0317                     	;# 
  1696  0318                     	;# 
  1697  038C                     	;# 
  1698  038D                     	;# 
  1699  038E                     	;# 
  1700  0391                     	;# 
  1701  0392                     	;# 
  1702  0393                     	;# 
  1703  0394                     	;# 
  1704  0395                     	;# 
  1705  0396                     	;# 
  1706  0397                     	;# 
  1707  0398                     	;# 
  1708  0399                     	;# 
  1709  039A                     	;# 
  1710  039C                     	;# 
  1711  039D                     	;# 
  1712  039E                     	;# 
  1713  039F                     	;# 
  1714  0411                     	;# 
  1715  0411                     	;# 
  1716  0412                     	;# 
  1717  0413                     	;# 
  1718  0414                     	;# 
  1719  0415                     	;# 
  1720  0416                     	;# 
  1721  0417                     	;# 
  1722  0418                     	;# 
  1723  0418                     	;# 
  1724  0419                     	;# 
  1725  041A                     	;# 
  1726  041B                     	;# 
  1727  041C                     	;# 
  1728  041D                     	;# 
  1729  041E                     	;# 
  1730  041F                     	;# 
  1731  0498                     	;# 
  1732  0498                     	;# 
  1733  0499                     	;# 
  1734  049A                     	;# 
  1735  049B                     	;# 
  1736  049B                     	;# 
  1737  049C                     	;# 
  1738  049D                     	;# 
  1739  049E                     	;# 
  1740  049F                     	;# 
  1741  0617                     	;# 
  1742  0618                     	;# 
  1743  0619                     	;# 
  1744  0619                     	;# 
  1745  061A                     	;# 
  1746  061B                     	;# 
  1747  061C                     	;# 
  1748  061C                     	;# 
  1749  061F                     	;# 
  1750  0691                     	;# 
  1751  0692                     	;# 
  1752  0693                     	;# 
  1753  0694                     	;# 
  1754  0695                     	;# 
  1755  0696                     	;# 
  1756  0697                     	;# 
  1757  0698                     	;# 
  1758  0699                     	;# 
  1759  0711                     	;# 
  1760  0712                     	;# 
  1761  0713                     	;# 
  1762  0714                     	;# 
  1763  0715                     	;# 
  1764  0716                     	;# 
  1765  0717                     	;# 
  1766  0718                     	;# 
  1767  0719                     	;# 
  1768  0891                     	;# 
  1769  0891                     	;# 
  1770  0891                     	;# 
  1771  0891                     	;# 
  1772  0891                     	;# 
  1773  0891                     	;# 
  1774  0892                     	;# 
  1775  0892                     	;# 
  1776  0892                     	;# 
  1777  0893                     	;# 
  1778  0893                     	;# 
  1779  0893                     	;# 
  1780  0893                     	;# 
  1781  0893                     	;# 
  1782  0893                     	;# 
  1783  0894                     	;# 
  1784  0894                     	;# 
  1785  0894                     	;# 
  1786  0895                     	;# 
  1787  0895                     	;# 
  1788  0895                     	;# 
  1789  0896                     	;# 
  1790  0896                     	;# 
  1791  0896                     	;# 
  1792  089B                     	;# 
  1793  0911                     	;# 
  1794  0912                     	;# 
  1795  0913                     	;# 
  1796  0914                     	;# 
  1797  0915                     	;# 
  1798  0916                     	;# 
  1799  0918                     	;# 
  1800  0919                     	;# 
  1801  091A                     	;# 
  1802  091B                     	;# 
  1803  091C                     	;# 
  1804  091D                     	;# 
  1805  091E                     	;# 
  1806  091F                     	;# 
  1807  0E0F                     	;# 
  1808  0E10                     	;# 
  1809  0E11                     	;# 
  1810  0E12                     	;# 
  1811  0E13                     	;# 
  1812  0E14                     	;# 
  1813  0E15                     	;# 
  1814  0E16                     	;# 
  1815  0E17                     	;# 
  1816  0E18                     	;# 
  1817  0E19                     	;# 
  1818  0E1A                     	;# 
  1819  0E1B                     	;# 
  1820  0E1C                     	;# 
  1821  0E1D                     	;# 
  1822  0E1E                     	;# 
  1823  0E1F                     	;# 
  1824  0E20                     	;# 
  1825  0E21                     	;# 
  1826  0E22                     	;# 
  1827  0E24                     	;# 
  1828  0E25                     	;# 
  1829  0E28                     	;# 
  1830  0E29                     	;# 
  1831  0E2A                     	;# 
  1832  0E2B                     	;# 
  1833  0E2C                     	;# 
  1834  0E2D                     	;# 
  1835  0E2E                     	;# 
  1836  0E2F                     	;# 
  1837  0E90                     	;# 
  1838  0E91                     	;# 
  1839  0E92                     	;# 
  1840  0E94                     	;# 
  1841  0E95                     	;# 
  1842  0E9C                     	;# 
  1843  0E9D                     	;# 
  1844  0E9E                     	;# 
  1845  0E9F                     	;# 
  1846  0EA0                     	;# 
  1847  0EA1                     	;# 
  1848  0EA2                     	;# 
  1849  0EA3                     	;# 
  1850  0EA4                     	;# 
  1851  0EA5                     	;# 
  1852  0EA6                     	;# 
  1853  0EA7                     	;# 
  1854  0F0F                     	;# 
  1855  0F10                     	;# 
  1856  0F11                     	;# 
  1857  0F12                     	;# 
  1858  0F13                     	;# 
  1859  0F14                     	;# 
  1860  0F15                     	;# 
  1861  0F16                     	;# 
  1862  0F17                     	;# 
  1863  0F18                     	;# 
  1864  0F19                     	;# 
  1865  0F1A                     	;# 
  1866  0F1B                     	;# 
  1867  0F1C                     	;# 
  1868  0F1D                     	;# 
  1869  0F1E                     	;# 
  1870  0F1F                     	;# 
  1871  0F20                     	;# 
  1872  0F21                     	;# 
  1873  0F22                     	;# 
  1874  0F23                     	;# 
  1875  0F24                     	;# 
  1876  0F25                     	;# 
  1877  0F26                     	;# 
  1878  0F27                     	;# 
  1879  0F28                     	;# 
  1880  0F29                     	;# 
  1881  0F2A                     	;# 
  1882  0F2B                     	;# 
  1883  0F2C                     	;# 
  1884  0F2D                     	;# 
  1885  0F2E                     	;# 
  1886  0F2F                     	;# 
  1887  0F30                     	;# 
  1888  0F31                     	;# 
  1889  0F32                     	;# 
  1890  0F33                     	;# 
  1891  0F34                     	;# 
  1892  0F35                     	;# 
  1893  0F36                     	;# 
  1894  0F37                     	;# 
  1895  0FE4                     	;# 
  1896  0FE5                     	;# 
  1897  0FE6                     	;# 
  1898  0FE7                     	;# 
  1899  0FE8                     	;# 
  1900  0FE9                     	;# 
  1901  0FEA                     	;# 
  1902  0FEB                     	;# 
  1903  0FED                     	;# 
  1904  0FEE                     	;# 
  1905  0FEF                     	;# 
  1906  0000                     	;# 
  1907  0001                     	;# 
  1908  0002                     	;# 
  1909  0003                     	;# 
  1910  0004                     	;# 
  1911  0005                     	;# 
  1912  0006                     	;# 
  1913  0007                     	;# 
  1914  0008                     	;# 
  1915  0009                     	;# 
  1916  000A                     	;# 
  1917  000B                     	;# 
  1918  000C                     	;# 
  1919  000D                     	;# 
  1920  000E                     	;# 
  1921  0010                     	;# 
  1922  0011                     	;# 
  1923  0012                     	;# 
  1924  0013                     	;# 
  1925  0014                     	;# 
  1926  0015                     	;# 
  1927  0015                     	;# 
  1928  0016                     	;# 
  1929  0016                     	;# 
  1930  0017                     	;# 
  1931  0018                     	;# 
  1932  0019                     	;# 
  1933  0019                     	;# 
  1934  001A                     	;# 
  1935  001B                     	;# 
  1936  001C                     	;# 
  1937  001D                     	;# 
  1938  001E                     	;# 
  1939  001F                     	;# 
  1940  008C                     	;# 
  1941  008D                     	;# 
  1942  008E                     	;# 
  1943  0090                     	;# 
  1944  0091                     	;# 
  1945  0092                     	;# 
  1946  0093                     	;# 
  1947  0094                     	;# 
  1948  0097                     	;# 
  1949  009B                     	;# 
  1950  009B                     	;# 
  1951  009C                     	;# 
  1952  009D                     	;# 
  1953  009E                     	;# 
  1954  009F                     	;# 
  1955  010C                     	;# 
  1956  010D                     	;# 
  1957  010E                     	;# 
  1958  0111                     	;# 
  1959  0112                     	;# 
  1960  0113                     	;# 
  1961  0114                     	;# 
  1962  0115                     	;# 
  1963  0116                     	;# 
  1964  0117                     	;# 
  1965  0118                     	;# 
  1966  0119                     	;# 
  1967  018C                     	;# 
  1968  018D                     	;# 
  1969  018E                     	;# 
  1970  0197                     	;# 
  1971  0199                     	;# 
  1972  0199                     	;# 
  1973  0199                     	;# 
  1974  019A                     	;# 
  1975  019A                     	;# 
  1976  019A                     	;# 
  1977  019B                     	;# 
  1978  019B                     	;# 
  1979  019B                     	;# 
  1980  019B                     	;# 
  1981  019B                     	;# 
  1982  019C                     	;# 
  1983  019C                     	;# 
  1984  019C                     	;# 
  1985  019D                     	;# 
  1986  019D                     	;# 
  1987  019D                     	;# 
  1988  019E                     	;# 
  1989  019E                     	;# 
  1990  019E                     	;# 
  1991  019F                     	;# 
  1992  019F                     	;# 
  1993  019F                     	;# 
  1994  019F                     	;# 
  1995  019F                     	;# 
  1996  020C                     	;# 
  1997  020D                     	;# 
  1998  020E                     	;# 
  1999  0211                     	;# 
  2000  0211                     	;# 
  2001  0212                     	;# 
  2002  0212                     	;# 
  2003  0213                     	;# 
  2004  0213                     	;# 
  2005  0214                     	;# 
  2006  0214                     	;# 
  2007  0215                     	;# 
  2008  0215                     	;# 
  2009  0215                     	;# 
  2010  0215                     	;# 
  2011  0216                     	;# 
  2012  0216                     	;# 
  2013  0217                     	;# 
  2014  0217                     	;# 
  2015  0219                     	;# 
  2016  021A                     	;# 
  2017  021B                     	;# 
  2018  021C                     	;# 
  2019  021D                     	;# 
  2020  021D                     	;# 
  2021  021E                     	;# 
  2022  021F                     	;# 
  2023  028C                     	;# 
  2024  028D                     	;# 
  2025  028E                     	;# 
  2026  0291                     	;# 
  2027  0291                     	;# 
  2028  0292                     	;# 
  2029  0293                     	;# 
  2030  0294                     	;# 
  2031  0295                     	;# 
  2032  0295                     	;# 
  2033  0296                     	;# 
  2034  0297                     	;# 
  2035  0298                     	;# 
  2036  029F                     	;# 
  2037  030C                     	;# 
  2038  030D                     	;# 
  2039  030E                     	;# 
  2040  0311                     	;# 
  2041  0311                     	;# 
  2042  0312                     	;# 
  2043  0313                     	;# 
  2044  0314                     	;# 
  2045  0315                     	;# 
  2046  0315                     	;# 
  2047  0316                     	;# 
  2048  0317                     	;# 
  2049  0318                     	;# 
  2050  038C                     	;# 
  2051  038D                     	;# 
  2052  038E                     	;# 
  2053  0391                     	;# 
  2054  0392                     	;# 
  2055  0393                     	;# 
  2056  0394                     	;# 
  2057  0395                     	;# 
  2058  0396                     	;# 
  2059  0397                     	;# 
  2060  0398                     	;# 
  2061  0399                     	;# 
  2062  039A                     	;# 
  2063  039C                     	;# 
  2064  039D                     	;# 
  2065  039E                     	;# 
  2066  039F                     	;# 
  2067  0411                     	;# 
  2068  0411                     	;# 
  2069  0412                     	;# 
  2070  0413                     	;# 
  2071  0414                     	;# 
  2072  0415                     	;# 
  2073  0416                     	;# 
  2074  0417                     	;# 
  2075  0418                     	;# 
  2076  0418                     	;# 
  2077  0419                     	;# 
  2078  041A                     	;# 
  2079  041B                     	;# 
  2080  041C                     	;# 
  2081  041D                     	;# 
  2082  041E                     	;# 
  2083  041F                     	;# 
  2084  0498                     	;# 
  2085  0498                     	;# 
  2086  0499                     	;# 
  2087  049A                     	;# 
  2088  049B                     	;# 
  2089  049B                     	;# 
  2090  049C                     	;# 
  2091  049D                     	;# 
  2092  049E                     	;# 
  2093  049F                     	;# 
  2094  0617                     	;# 
  2095  0618                     	;# 
  2096  0619                     	;# 
  2097  0619                     	;# 
  2098  061A                     	;# 
  2099  061B                     	;# 
  2100  061C                     	;# 
  2101  061C                     	;# 
  2102  061F                     	;# 
  2103  0691                     	;# 
  2104  0692                     	;# 
  2105  0693                     	;# 
  2106  0694                     	;# 
  2107  0695                     	;# 
  2108  0696                     	;# 
  2109  0697                     	;# 
  2110  0698                     	;# 
  2111  0699                     	;# 
  2112  0711                     	;# 
  2113  0712                     	;# 
  2114  0713                     	;# 
  2115  0714                     	;# 
  2116  0715                     	;# 
  2117  0716                     	;# 
  2118  0717                     	;# 
  2119  0718                     	;# 
  2120  0719                     	;# 
  2121  0891                     	;# 
  2122  0891                     	;# 
  2123  0891                     	;# 
  2124  0891                     	;# 
  2125  0891                     	;# 
  2126  0891                     	;# 
  2127  0892                     	;# 
  2128  0892                     	;# 
  2129  0892                     	;# 
  2130  0893                     	;# 
  2131  0893                     	;# 
  2132  0893                     	;# 
  2133  0893                     	;# 
  2134  0893                     	;# 
  2135  0893                     	;# 
  2136  0894                     	;# 
  2137  0894                     	;# 
  2138  0894                     	;# 
  2139  0895                     	;# 
  2140  0895                     	;# 
  2141  0895                     	;# 
  2142  0896                     	;# 
  2143  0896                     	;# 
  2144  0896                     	;# 
  2145  089B                     	;# 
  2146  0911                     	;# 
  2147  0912                     	;# 
  2148  0913                     	;# 
  2149  0914                     	;# 
  2150  0915                     	;# 
  2151  0916                     	;# 
  2152  0918                     	;# 
  2153  0919                     	;# 
  2154  091A                     	;# 
  2155  091B                     	;# 
  2156  091C                     	;# 
  2157  091D                     	;# 
  2158  091E                     	;# 
  2159  091F                     	;# 
  2160  0E0F                     	;# 
  2161  0E10                     	;# 
  2162  0E11                     	;# 
  2163  0E12                     	;# 
  2164  0E13                     	;# 
  2165  0E14                     	;# 
  2166  0E15                     	;# 
  2167  0E16                     	;# 
  2168  0E17                     	;# 
  2169  0E18                     	;# 
  2170  0E19                     	;# 
  2171  0E1A                     	;# 
  2172  0E1B                     	;# 
  2173  0E1C                     	;# 
  2174  0E1D                     	;# 
  2175  0E1E                     	;# 
  2176  0E1F                     	;# 
  2177  0E20                     	;# 
  2178  0E21                     	;# 
  2179  0E22                     	;# 
  2180  0E24                     	;# 
  2181  0E25                     	;# 
  2182  0E28                     	;# 
  2183  0E29                     	;# 
  2184  0E2A                     	;# 
  2185  0E2B                     	;# 
  2186  0E2C                     	;# 
  2187  0E2D                     	;# 
  2188  0E2E                     	;# 
  2189  0E2F                     	;# 
  2190  0E90                     	;# 
  2191  0E91                     	;# 
  2192  0E92                     	;# 
  2193  0E94                     	;# 
  2194  0E95                     	;# 
  2195  0E9C                     	;# 
  2196  0E9D                     	;# 
  2197  0E9E                     	;# 
  2198  0E9F                     	;# 
  2199  0EA0                     	;# 
  2200  0EA1                     	;# 
  2201  0EA2                     	;# 
  2202  0EA3                     	;# 
  2203  0EA4                     	;# 
  2204  0EA5                     	;# 
  2205  0EA6                     	;# 
  2206  0EA7                     	;# 
  2207  0F0F                     	;# 
  2208  0F10                     	;# 
  2209  0F11                     	;# 
  2210  0F12                     	;# 
  2211  0F13                     	;# 
  2212  0F14                     	;# 
  2213  0F15                     	;# 
  2214  0F16                     	;# 
  2215  0F17                     	;# 
  2216  0F18                     	;# 
  2217  0F19                     	;# 
  2218  0F1A                     	;# 
  2219  0F1B                     	;# 
  2220  0F1C                     	;# 
  2221  0F1D                     	;# 
  2222  0F1E                     	;# 
  2223  0F1F                     	;# 
  2224  0F20                     	;# 
  2225  0F21                     	;# 
  2226  0F22                     	;# 
  2227  0F23                     	;# 
  2228  0F24                     	;# 
  2229  0F25                     	;# 
  2230  0F26                     	;# 
  2231  0F27                     	;# 
  2232  0F28                     	;# 
  2233  0F29                     	;# 
  2234  0F2A                     	;# 
  2235  0F2B                     	;# 
  2236  0F2C                     	;# 
  2237  0F2D                     	;# 
  2238  0F2E                     	;# 
  2239  0F2F                     	;# 
  2240  0F30                     	;# 
  2241  0F31                     	;# 
  2242  0F32                     	;# 
  2243  0F33                     	;# 
  2244  0F34                     	;# 
  2245  0F35                     	;# 
  2246  0F36                     	;# 
  2247  0F37                     	;# 
  2248  0FE4                     	;# 
  2249  0FE5                     	;# 
  2250  0FE6                     	;# 
  2251  0FE7                     	;# 
  2252  0FE8                     	;# 
  2253  0FE9                     	;# 
  2254  0FEA                     	;# 
  2255  0FEB                     	;# 
  2256  0FED                     	;# 
  2257  0FEE                     	;# 
  2258  0FEF                     	;# 
  2259  0000                     	;# 
  2260  0001                     	;# 
  2261  0002                     	;# 
  2262  0003                     	;# 
  2263  0004                     	;# 
  2264  0005                     	;# 
  2265  0006                     	;# 
  2266  0007                     	;# 
  2267  0008                     	;# 
  2268  0009                     	;# 
  2269  000A                     	;# 
  2270  000B                     	;# 
  2271  000C                     	;# 
  2272  000D                     	;# 
  2273  000E                     	;# 
  2274  0010                     	;# 
  2275  0011                     	;# 
  2276  0012                     	;# 
  2277  0013                     	;# 
  2278  0014                     	;# 
  2279  0015                     	;# 
  2280  0015                     	;# 
  2281  0016                     	;# 
  2282  0016                     	;# 
  2283  0017                     	;# 
  2284  0018                     	;# 
  2285  0019                     	;# 
  2286  0019                     	;# 
  2287  001A                     	;# 
  2288  001B                     	;# 
  2289  001C                     	;# 
  2290  001D                     	;# 
  2291  001E                     	;# 
  2292  001F                     	;# 
  2293  008C                     	;# 
  2294  008D                     	;# 
  2295  008E                     	;# 
  2296  0090                     	;# 
  2297  0091                     	;# 
  2298  0092                     	;# 
  2299  0093                     	;# 
  2300  0094                     	;# 
  2301  0097                     	;# 
  2302  009B                     	;# 
  2303  009B                     	;# 
  2304  009C                     	;# 
  2305  009D                     	;# 
  2306  009E                     	;# 
  2307  009F                     	;# 
  2308  010C                     	;# 
  2309  010D                     	;# 
  2310  010E                     	;# 
  2311  0111                     	;# 
  2312  0112                     	;# 
  2313  0113                     	;# 
  2314  0114                     	;# 
  2315  0115                     	;# 
  2316  0116                     	;# 
  2317  0117                     	;# 
  2318  0118                     	;# 
  2319  0119                     	;# 
  2320  018C                     	;# 
  2321  018D                     	;# 
  2322  018E                     	;# 
  2323  0197                     	;# 
  2324  0199                     	;# 
  2325  0199                     	;# 
  2326  0199                     	;# 
  2327  019A                     	;# 
  2328  019A                     	;# 
  2329  019A                     	;# 
  2330  019B                     	;# 
  2331  019B                     	;# 
  2332  019B                     	;# 
  2333  019B                     	;# 
  2334  019B                     	;# 
  2335  019C                     	;# 
  2336  019C                     	;# 
  2337  019C                     	;# 
  2338  019D                     	;# 
  2339  019D                     	;# 
  2340  019D                     	;# 
  2341  019E                     	;# 
  2342  019E                     	;# 
  2343  019E                     	;# 
  2344  019F                     	;# 
  2345  019F                     	;# 
  2346  019F                     	;# 
  2347  019F                     	;# 
  2348  019F                     	;# 
  2349  020C                     	;# 
  2350  020D                     	;# 
  2351  020E                     	;# 
  2352  0211                     	;# 
  2353  0211                     	;# 
  2354  0212                     	;# 
  2355  0212                     	;# 
  2356  0213                     	;# 
  2357  0213                     	;# 
  2358  0214                     	;# 
  2359  0214                     	;# 
  2360  0215                     	;# 
  2361  0215                     	;# 
  2362  0215                     	;# 
  2363  0215                     	;# 
  2364  0216                     	;# 
  2365  0216                     	;# 
  2366  0217                     	;# 
  2367  0217                     	;# 
  2368  0219                     	;# 
  2369  021A                     	;# 
  2370  021B                     	;# 
  2371  021C                     	;# 
  2372  021D                     	;# 
  2373  021D                     	;# 
  2374  021E                     	;# 
  2375  021F                     	;# 
  2376  028C                     	;# 
  2377  028D                     	;# 
  2378  028E                     	;# 
  2379  0291                     	;# 
  2380  0291                     	;# 
  2381  0292                     	;# 
  2382  0293                     	;# 
  2383  0294                     	;# 
  2384  0295                     	;# 
  2385  0295                     	;# 
  2386  0296                     	;# 
  2387  0297                     	;# 
  2388  0298                     	;# 
  2389  029F                     	;# 
  2390  030C                     	;# 
  2391  030D                     	;# 
  2392  030E                     	;# 
  2393  0311                     	;# 
  2394  0311                     	;# 
  2395  0312                     	;# 
  2396  0313                     	;# 
  2397  0314                     	;# 
  2398  0315                     	;# 
  2399  0315                     	;# 
  2400  0316                     	;# 
  2401  0317                     	;# 
  2402  0318                     	;# 
  2403  038C                     	;# 
  2404  038D                     	;# 
  2405  038E                     	;# 
  2406  0391                     	;# 
  2407  0392                     	;# 
  2408  0393                     	;# 
  2409  0394                     	;# 
  2410  0395                     	;# 
  2411  0396                     	;# 
  2412  0397                     	;# 
  2413  0398                     	;# 
  2414  0399                     	;# 
  2415  039A                     	;# 
  2416  039C                     	;# 
  2417  039D                     	;# 
  2418  039E                     	;# 
  2419  039F                     	;# 
  2420  0411                     	;# 
  2421  0411                     	;# 
  2422  0412                     	;# 
  2423  0413                     	;# 
  2424  0414                     	;# 
  2425  0415                     	;# 
  2426  0416                     	;# 
  2427  0417                     	;# 
  2428  0418                     	;# 
  2429  0418                     	;# 
  2430  0419                     	;# 
  2431  041A                     	;# 
  2432  041B                     	;# 
  2433  041C                     	;# 
  2434  041D                     	;# 
  2435  041E                     	;# 
  2436  041F                     	;# 
  2437  0498                     	;# 
  2438  0498                     	;# 
  2439  0499                     	;# 
  2440  049A                     	;# 
  2441  049B                     	;# 
  2442  049B                     	;# 
  2443  049C                     	;# 
  2444  049D                     	;# 
  2445  049E                     	;# 
  2446  049F                     	;# 
  2447  0617                     	;# 
  2448  0618                     	;# 
  2449  0619                     	;# 
  2450  0619                     	;# 
  2451  061A                     	;# 
  2452  061B                     	;# 
  2453  061C                     	;# 
  2454  061C                     	;# 
  2455  061F                     	;# 
  2456  0691                     	;# 
  2457  0692                     	;# 
  2458  0693                     	;# 
  2459  0694                     	;# 
  2460  0695                     	;# 
  2461  0696                     	;# 
  2462  0697                     	;# 
  2463  0698                     	;# 
  2464  0699                     	;# 
  2465  0711                     	;# 
  2466  0712                     	;# 
  2467  0713                     	;# 
  2468  0714                     	;# 
  2469  0715                     	;# 
  2470  0716                     	;# 
  2471  0717                     	;# 
  2472  0718                     	;# 
  2473  0719                     	;# 
  2474  0891                     	;# 
  2475  0891                     	;# 
  2476  0891                     	;# 
  2477  0891                     	;# 
  2478  0891                     	;# 
  2479  0891                     	;# 
  2480  0892                     	;# 
  2481  0892                     	;# 
  2482  0892                     	;# 
  2483  0893                     	;# 
  2484  0893                     	;# 
  2485  0893                     	;# 
  2486  0893                     	;# 
  2487  0893                     	;# 
  2488  0893                     	;# 
  2489  0894                     	;# 
  2490  0894                     	;# 
  2491  0894                     	;# 
  2492  0895                     	;# 
  2493  0895                     	;# 
  2494  0895                     	;# 
  2495  0896                     	;# 
  2496  0896                     	;# 
  2497  0896                     	;# 
  2498  089B                     	;# 
  2499  0911                     	;# 
  2500  0912                     	;# 
  2501  0913                     	;# 
  2502  0914                     	;# 
  2503  0915                     	;# 
  2504  0916                     	;# 
  2505  0918                     	;# 
  2506  0919                     	;# 
  2507  091A                     	;# 
  2508  091B                     	;# 
  2509  091C                     	;# 
  2510  091D                     	;# 
  2511  091E                     	;# 
  2512  091F                     	;# 
  2513  0E0F                     	;# 
  2514  0E10                     	;# 
  2515  0E11                     	;# 
  2516  0E12                     	;# 
  2517  0E13                     	;# 
  2518  0E14                     	;# 
  2519  0E15                     	;# 
  2520  0E16                     	;# 
  2521  0E17                     	;# 
  2522  0E18                     	;# 
  2523  0E19                     	;# 
  2524  0E1A                     	;# 
  2525  0E1B                     	;# 
  2526  0E1C                     	;# 
  2527  0E1D                     	;# 
  2528  0E1E                     	;# 
  2529  0E1F                     	;# 
  2530  0E20                     	;# 
  2531  0E21                     	;# 
  2532  0E22                     	;# 
  2533  0E24                     	;# 
  2534  0E25                     	;# 
  2535  0E28                     	;# 
  2536  0E29                     	;# 
  2537  0E2A                     	;# 
  2538  0E2B                     	;# 
  2539  0E2C                     	;# 
  2540  0E2D                     	;# 
  2541  0E2E                     	;# 
  2542  0E2F                     	;# 
  2543  0E90                     	;# 
  2544  0E91                     	;# 
  2545  0E92                     	;# 
  2546  0E94                     	;# 
  2547  0E95                     	;# 
  2548  0E9C                     	;# 
  2549  0E9D                     	;# 
  2550  0E9E                     	;# 
  2551  0E9F                     	;# 
  2552  0EA0                     	;# 
  2553  0EA1                     	;# 
  2554  0EA2                     	;# 
  2555  0EA3                     	;# 
  2556  0EA4                     	;# 
  2557  0EA5                     	;# 
  2558  0EA6                     	;# 
  2559  0EA7                     	;# 
  2560  0F0F                     	;# 
  2561  0F10                     	;# 
  2562  0F11                     	;# 
  2563  0F12                     	;# 
  2564  0F13                     	;# 
  2565  0F14                     	;# 
  2566  0F15                     	;# 
  2567  0F16                     	;# 
  2568  0F17                     	;# 
  2569  0F18                     	;# 
  2570  0F19                     	;# 
  2571  0F1A                     	;# 
  2572  0F1B                     	;# 
  2573  0F1C                     	;# 
  2574  0F1D                     	;# 
  2575  0F1E                     	;# 
  2576  0F1F                     	;# 
  2577  0F20                     	;# 
  2578  0F21                     	;# 
  2579  0F22                     	;# 
  2580  0F23                     	;# 
  2581  0F24                     	;# 
  2582  0F25                     	;# 
  2583  0F26                     	;# 
  2584  0F27                     	;# 
  2585  0F28                     	;# 
  2586  0F29                     	;# 
  2587  0F2A                     	;# 
  2588  0F2B                     	;# 
  2589  0F2C                     	;# 
  2590  0F2D                     	;# 
  2591  0F2E                     	;# 
  2592  0F2F                     	;# 
  2593  0F30                     	;# 
  2594  0F31                     	;# 
  2595  0F32                     	;# 
  2596  0F33                     	;# 
  2597  0F34                     	;# 
  2598  0F35                     	;# 
  2599  0F36                     	;# 
  2600  0F37                     	;# 
  2601  0FE4                     	;# 
  2602  0FE5                     	;# 
  2603  0FE6                     	;# 
  2604  0FE7                     	;# 
  2605  0FE8                     	;# 
  2606  0FE9                     	;# 
  2607  0FEA                     	;# 
  2608  0FEB                     	;# 
  2609  0FED                     	;# 
  2610  0FEE                     	;# 
  2611  0FEF                     	;# 
  2612  0000                     	;# 
  2613  0001                     	;# 
  2614  0002                     	;# 
  2615  0003                     	;# 
  2616  0004                     	;# 
  2617  0005                     	;# 
  2618  0006                     	;# 
  2619  0007                     	;# 
  2620  0008                     	;# 
  2621  0009                     	;# 
  2622  000A                     	;# 
  2623  000B                     	;# 
  2624  000C                     	;# 
  2625  000D                     	;# 
  2626  000E                     	;# 
  2627  0010                     	;# 
  2628  0011                     	;# 
  2629  0012                     	;# 
  2630  0013                     	;# 
  2631  0014                     	;# 
  2632  0015                     	;# 
  2633  0015                     	;# 
  2634  0016                     	;# 
  2635  0016                     	;# 
  2636  0017                     	;# 
  2637  0018                     	;# 
  2638  0019                     	;# 
  2639  0019                     	;# 
  2640  001A                     	;# 
  2641  001B                     	;# 
  2642  001C                     	;# 
  2643  001D                     	;# 
  2644  001E                     	;# 
  2645  001F                     	;# 
  2646  008C                     	;# 
  2647  008D                     	;# 
  2648  008E                     	;# 
  2649  0090                     	;# 
  2650  0091                     	;# 
  2651  0092                     	;# 
  2652  0093                     	;# 
  2653  0094                     	;# 
  2654  0097                     	;# 
  2655  009B                     	;# 
  2656  009B                     	;# 
  2657  009C                     	;# 
  2658  009D                     	;# 
  2659  009E                     	;# 
  2660  009F                     	;# 
  2661  010C                     	;# 
  2662  010D                     	;# 
  2663  010E                     	;# 
  2664  0111                     	;# 
  2665  0112                     	;# 
  2666  0113                     	;# 
  2667  0114                     	;# 
  2668  0115                     	;# 
  2669  0116                     	;# 
  2670  0117                     	;# 
  2671  0118                     	;# 
  2672  0119                     	;# 
  2673  018C                     	;# 
  2674  018D                     	;# 
  2675  018E                     	;# 
  2676  0197                     	;# 
  2677  0199                     	;# 
  2678  0199                     	;# 
  2679  0199                     	;# 
  2680  019A                     	;# 
  2681  019A                     	;# 
  2682  019A                     	;# 
  2683  019B                     	;# 
  2684  019B                     	;# 
  2685  019B                     	;# 
  2686  019B                     	;# 
  2687  019B                     	;# 
  2688  019C                     	;# 
  2689  019C                     	;# 
  2690  019C                     	;# 
  2691  019D                     	;# 
  2692  019D                     	;# 
  2693  019D                     	;# 
  2694  019E                     	;# 
  2695  019E                     	;# 
  2696  019E                     	;# 
  2697  019F                     	;# 
  2698  019F                     	;# 
  2699  019F                     	;# 
  2700  019F                     	;# 
  2701  019F                     	;# 
  2702  020C                     	;# 
  2703  020D                     	;# 
  2704  020E                     	;# 
  2705  0211                     	;# 
  2706  0211                     	;# 
  2707  0212                     	;# 
  2708  0212                     	;# 
  2709  0213                     	;# 
  2710  0213                     	;# 
  2711  0214                     	;# 
  2712  0214                     	;# 
  2713  0215                     	;# 
  2714  0215                     	;# 
  2715  0215                     	;# 
  2716  0215                     	;# 
  2717  0216                     	;# 
  2718  0216                     	;# 
  2719  0217                     	;# 
  2720  0217                     	;# 
  2721  0219                     	;# 
  2722  021A                     	;# 
  2723  021B                     	;# 
  2724  021C                     	;# 
  2725  021D                     	;# 
  2726  021D                     	;# 
  2727  021E                     	;# 
  2728  021F                     	;# 
  2729  028C                     	;# 
  2730  028D                     	;# 
  2731  028E                     	;# 
  2732  0291                     	;# 
  2733  0291                     	;# 
  2734  0292                     	;# 
  2735  0293                     	;# 
  2736  0294                     	;# 
  2737  0295                     	;# 
  2738  0295                     	;# 
  2739  0296                     	;# 
  2740  0297                     	;# 
  2741  0298                     	;# 
  2742  029F                     	;# 
  2743  030C                     	;# 
  2744  030D                     	;# 
  2745  030E                     	;# 
  2746  0311                     	;# 
  2747  0311                     	;# 
  2748  0312                     	;# 
  2749  0313                     	;# 
  2750  0314                     	;# 
  2751  0315                     	;# 
  2752  0315                     	;# 
  2753  0316                     	;# 
  2754  0317                     	;# 
  2755  0318                     	;# 
  2756  038C                     	;# 
  2757  038D                     	;# 
  2758  038E                     	;# 
  2759  0391                     	;# 
  2760  0392                     	;# 
  2761  0393                     	;# 
  2762  0394                     	;# 
  2763  0395                     	;# 
  2764  0396                     	;# 
  2765  0397                     	;# 
  2766  0398                     	;# 
  2767  0399                     	;# 
  2768  039A                     	;# 
  2769  039C                     	;# 
  2770  039D                     	;# 
  2771  039E                     	;# 
  2772  039F                     	;# 
  2773  0411                     	;# 
  2774  0411                     	;# 
  2775  0412                     	;# 
  2776  0413                     	;# 
  2777  0414                     	;# 
  2778  0415                     	;# 
  2779  0416                     	;# 
  2780  0417                     	;# 
  2781  0418                     	;# 
  2782  0418                     	;# 
  2783  0419                     	;# 
  2784  041A                     	;# 
  2785  041B                     	;# 
  2786  041C                     	;# 
  2787  041D                     	;# 
  2788  041E                     	;# 
  2789  041F                     	;# 
  2790  0498                     	;# 
  2791  0498                     	;# 
  2792  0499                     	;# 
  2793  049A                     	;# 
  2794  049B                     	;# 
  2795  049B                     	;# 
  2796  049C                     	;# 
  2797  049D                     	;# 
  2798  049E                     	;# 
  2799  049F                     	;# 
  2800  0617                     	;# 
  2801  0618                     	;# 
  2802  0619                     	;# 
  2803  0619                     	;# 
  2804  061A                     	;# 
  2805  061B                     	;# 
  2806  061C                     	;# 
  2807  061C                     	;# 
  2808  061F                     	;# 
  2809  0691                     	;# 
  2810  0692                     	;# 
  2811  0693                     	;# 
  2812  0694                     	;# 
  2813  0695                     	;# 
  2814  0696                     	;# 
  2815  0697                     	;# 
  2816  0698                     	;# 
  2817  0699                     	;# 
  2818  0711                     	;# 
  2819  0712                     	;# 
  2820  0713                     	;# 
  2821  0714                     	;# 
  2822  0715                     	;# 
  2823  0716                     	;# 
  2824  0717                     	;# 
  2825  0718                     	;# 
  2826  0719                     	;# 
  2827  0891                     	;# 
  2828  0891                     	;# 
  2829  0891                     	;# 
  2830  0891                     	;# 
  2831  0891                     	;# 
  2832  0891                     	;# 
  2833  0892                     	;# 
  2834  0892                     	;# 
  2835  0892                     	;# 
  2836  0893                     	;# 
  2837  0893                     	;# 
  2838  0893                     	;# 
  2839  0893                     	;# 
  2840  0893                     	;# 
  2841  0893                     	;# 
  2842  0894                     	;# 
  2843  0894                     	;# 
  2844  0894                     	;# 
  2845  0895                     	;# 
  2846  0895                     	;# 
  2847  0895                     	;# 
  2848  0896                     	;# 
  2849  0896                     	;# 
  2850  0896                     	;# 
  2851  089B                     	;# 
  2852  0911                     	;# 
  2853  0912                     	;# 
  2854  0913                     	;# 
  2855  0914                     	;# 
  2856  0915                     	;# 
  2857  0916                     	;# 
  2858  0918                     	;# 
  2859  0919                     	;# 
  2860  091A                     	;# 
  2861  091B                     	;# 
  2862  091C                     	;# 
  2863  091D                     	;# 
  2864  091E                     	;# 
  2865  091F                     	;# 
  2866  0E0F                     	;# 
  2867  0E10                     	;# 
  2868  0E11                     	;# 
  2869  0E12                     	;# 
  2870  0E13                     	;# 
  2871  0E14                     	;# 
  2872  0E15                     	;# 
  2873  0E16                     	;# 
  2874  0E17                     	;# 
  2875  0E18                     	;# 
  2876  0E19                     	;# 
  2877  0E1A                     	;# 
  2878  0E1B                     	;# 
  2879  0E1C                     	;# 
  2880  0E1D                     	;# 
  2881  0E1E                     	;# 
  2882  0E1F                     	;# 
  2883  0E20                     	;# 
  2884  0E21                     	;# 
  2885  0E22                     	;# 
  2886  0E24                     	;# 
  2887  0E25                     	;# 
  2888  0E28                     	;# 
  2889  0E29                     	;# 
  2890  0E2A                     	;# 
  2891  0E2B                     	;# 
  2892  0E2C                     	;# 
  2893  0E2D                     	;# 
  2894  0E2E                     	;# 
  2895  0E2F                     	;# 
  2896  0E90                     	;# 
  2897  0E91                     	;# 
  2898  0E92                     	;# 
  2899  0E94                     	;# 
  2900  0E95                     	;# 
  2901  0E9C                     	;# 
  2902  0E9D                     	;# 
  2903  0E9E                     	;# 
  2904  0E9F                     	;# 
  2905  0EA0                     	;# 
  2906  0EA1                     	;# 
  2907  0EA2                     	;# 
  2908  0EA3                     	;# 
  2909  0EA4                     	;# 
  2910  0EA5                     	;# 
  2911  0EA6                     	;# 
  2912  0EA7                     	;# 
  2913  0F0F                     	;# 
  2914  0F10                     	;# 
  2915  0F11                     	;# 
  2916  0F12                     	;# 
  2917  0F13                     	;# 
  2918  0F14                     	;# 
  2919  0F15                     	;# 
  2920  0F16                     	;# 
  2921  0F17                     	;# 
  2922  0F18                     	;# 
  2923  0F19                     	;# 
  2924  0F1A                     	;# 
  2925  0F1B                     	;# 
  2926  0F1C                     	;# 
  2927  0F1D                     	;# 
  2928  0F1E                     	;# 
  2929  0F1F                     	;# 
  2930  0F20                     	;# 
  2931  0F21                     	;# 
  2932  0F22                     	;# 
  2933  0F23                     	;# 
  2934  0F24                     	;# 
  2935  0F25                     	;# 
  2936  0F26                     	;# 
  2937  0F27                     	;# 
  2938  0F28                     	;# 
  2939  0F29                     	;# 
  2940  0F2A                     	;# 
  2941  0F2B                     	;# 
  2942  0F2C                     	;# 
  2943  0F2D                     	;# 
  2944  0F2E                     	;# 
  2945  0F2F                     	;# 
  2946  0F30                     	;# 
  2947  0F31                     	;# 
  2948  0F32                     	;# 
  2949  0F33                     	;# 
  2950  0F34                     	;# 
  2951  0F35                     	;# 
  2952  0F36                     	;# 
  2953  0F37                     	;# 
  2954  0FE4                     	;# 
  2955  0FE5                     	;# 
  2956  0FE6                     	;# 
  2957  0FE7                     	;# 
  2958  0FE8                     	;# 
  2959  0FE9                     	;# 
  2960  0FEA                     	;# 
  2961  0FEB                     	;# 
  2962  0FED                     	;# 
  2963  0FEE                     	;# 
  2964  0FEF                     	;# 
  2965  0000                     	;# 
  2966  0001                     	;# 
  2967  0002                     	;# 
  2968  0003                     	;# 
  2969  0004                     	;# 
  2970  0005                     	;# 
  2971  0006                     	;# 
  2972  0007                     	;# 
  2973  0008                     	;# 
  2974  0009                     	;# 
  2975  000A                     	;# 
  2976  000B                     	;# 
  2977  000C                     	;# 
  2978  000D                     	;# 
  2979  000E                     	;# 
  2980  0010                     	;# 
  2981  0011                     	;# 
  2982  0012                     	;# 
  2983  0013                     	;# 
  2984  0014                     	;# 
  2985  0015                     	;# 
  2986  0015                     	;# 
  2987  0016                     	;# 
  2988  0016                     	;# 
  2989  0017                     	;# 
  2990  0018                     	;# 
  2991  0019                     	;# 
  2992  0019                     	;# 
  2993  001A                     	;# 
  2994  001B                     	;# 
  2995  001C                     	;# 
  2996  001D                     	;# 
  2997  001E                     	;# 
  2998  001F                     	;# 
  2999  008C                     	;# 
  3000  008D                     	;# 
  3001  008E                     	;# 
  3002  0090                     	;# 
  3003  0091                     	;# 
  3004  0092                     	;# 
  3005  0093                     	;# 
  3006  0094                     	;# 
  3007  0097                     	;# 
  3008  009B                     	;# 
  3009  009B                     	;# 
  3010  009C                     	;# 
  3011  009D                     	;# 
  3012  009E                     	;# 
  3013  009F                     	;# 
  3014  010C                     	;# 
  3015  010D                     	;# 
  3016  010E                     	;# 
  3017  0111                     	;# 
  3018  0112                     	;# 
  3019  0113                     	;# 
  3020  0114                     	;# 
  3021  0115                     	;# 
  3022  0116                     	;# 
  3023  0117                     	;# 
  3024  0118                     	;# 
  3025  0119                     	;# 
  3026  018C                     	;# 
  3027  018D                     	;# 
  3028  018E                     	;# 
  3029  0197                     	;# 
  3030  0199                     	;# 
  3031  0199                     	;# 
  3032  0199                     	;# 
  3033  019A                     	;# 
  3034  019A                     	;# 
  3035  019A                     	;# 
  3036  019B                     	;# 
  3037  019B                     	;# 
  3038  019B                     	;# 
  3039  019B                     	;# 
  3040  019B                     	;# 
  3041  019C                     	;# 
  3042  019C                     	;# 
  3043  019C                     	;# 
  3044  019D                     	;# 
  3045  019D                     	;# 
  3046  019D                     	;# 
  3047  019E                     	;# 
  3048  019E                     	;# 
  3049  019E                     	;# 
  3050  019F                     	;# 
  3051  019F                     	;# 
  3052  019F                     	;# 
  3053  019F                     	;# 
  3054  019F                     	;# 
  3055  020C                     	;# 
  3056  020D                     	;# 
  3057  020E                     	;# 
  3058  0211                     	;# 
  3059  0211                     	;# 
  3060  0212                     	;# 
  3061  0212                     	;# 
  3062  0213                     	;# 
  3063  0213                     	;# 
  3064  0214                     	;# 
  3065  0214                     	;# 
  3066  0215                     	;# 
  3067  0215                     	;# 
  3068  0215                     	;# 
  3069  0215                     	;# 
  3070  0216                     	;# 
  3071  0216                     	;# 
  3072  0217                     	;# 
  3073  0217                     	;# 
  3074  0219                     	;# 
  3075  021A                     	;# 
  3076  021B                     	;# 
  3077  021C                     	;# 
  3078  021D                     	;# 
  3079  021D                     	;# 
  3080  021E                     	;# 
  3081  021F                     	;# 
  3082  028C                     	;# 
  3083  028D                     	;# 
  3084  028E                     	;# 
  3085  0291                     	;# 
  3086  0291                     	;# 
  3087  0292                     	;# 
  3088  0293                     	;# 
  3089  0294                     	;# 
  3090  0295                     	;# 
  3091  0295                     	;# 
  3092  0296                     	;# 
  3093  0297                     	;# 
  3094  0298                     	;# 
  3095  029F                     	;# 
  3096  030C                     	;# 
  3097  030D                     	;# 
  3098  030E                     	;# 
  3099  0311                     	;# 
  3100  0311                     	;# 
  3101  0312                     	;# 
  3102  0313                     	;# 
  3103  0314                     	;# 
  3104  0315                     	;# 
  3105  0315                     	;# 
  3106  0316                     	;# 
  3107  0317                     	;# 
  3108  0318                     	;# 
  3109  038C                     	;# 
  3110  038D                     	;# 
  3111  038E                     	;# 
  3112  0391                     	;# 
  3113  0392                     	;# 
  3114  0393                     	;# 
  3115  0394                     	;# 
  3116  0395                     	;# 
  3117  0396                     	;# 
  3118  0397                     	;# 
  3119  0398                     	;# 
  3120  0399                     	;# 
  3121  039A                     	;# 
  3122  039C                     	;# 
  3123  039D                     	;# 
  3124  039E                     	;# 
  3125  039F                     	;# 
  3126  0411                     	;# 
  3127  0411                     	;# 
  3128  0412                     	;# 
  3129  0413                     	;# 
  3130  0414                     	;# 
  3131  0415                     	;# 
  3132  0416                     	;# 
  3133  0417                     	;# 
  3134  0418                     	;# 
  3135  0418                     	;# 
  3136  0419                     	;# 
  3137  041A                     	;# 
  3138  041B                     	;# 
  3139  041C                     	;# 
  3140  041D                     	;# 
  3141  041E                     	;# 
  3142  041F                     	;# 
  3143  0498                     	;# 
  3144  0498                     	;# 
  3145  0499                     	;# 
  3146  049A                     	;# 
  3147  049B                     	;# 
  3148  049B                     	;# 
  3149  049C                     	;# 
  3150  049D                     	;# 
  3151  049E                     	;# 
  3152  049F                     	;# 
  3153  0617                     	;# 
  3154  0618                     	;# 
  3155  0619                     	;# 
  3156  0619                     	;# 
  3157  061A                     	;# 
  3158  061B                     	;# 
  3159  061C                     	;# 
  3160  061C                     	;# 
  3161  061F                     	;# 
  3162  0691                     	;# 
  3163  0692                     	;# 
  3164  0693                     	;# 
  3165  0694                     	;# 
  3166  0695                     	;# 
  3167  0696                     	;# 
  3168  0697                     	;# 
  3169  0698                     	;# 
  3170  0699                     	;# 
  3171  0711                     	;# 
  3172  0712                     	;# 
  3173  0713                     	;# 
  3174  0714                     	;# 
  3175  0715                     	;# 
  3176  0716                     	;# 
  3177  0717                     	;# 
  3178  0718                     	;# 
  3179  0719                     	;# 
  3180  0891                     	;# 
  3181  0891                     	;# 
  3182  0891                     	;# 
  3183  0891                     	;# 
  3184  0891                     	;# 
  3185  0891                     	;# 
  3186  0892                     	;# 
  3187  0892                     	;# 
  3188  0892                     	;# 
  3189  0893                     	;# 
  3190  0893                     	;# 
  3191  0893                     	;# 
  3192  0893                     	;# 
  3193  0893                     	;# 
  3194  0893                     	;# 
  3195  0894                     	;# 
  3196  0894                     	;# 
  3197  0894                     	;# 
  3198  0895                     	;# 
  3199  0895                     	;# 
  3200  0895                     	;# 
  3201  0896                     	;# 
  3202  0896                     	;# 
  3203  0896                     	;# 
  3204  089B                     	;# 
  3205  0911                     	;# 
  3206  0912                     	;# 
  3207  0913                     	;# 
  3208  0914                     	;# 
  3209  0915                     	;# 
  3210  0916                     	;# 
  3211  0918                     	;# 
  3212  0919                     	;# 
  3213  091A                     	;# 
  3214  091B                     	;# 
  3215  091C                     	;# 
  3216  091D                     	;# 
  3217  091E                     	;# 
  3218  091F                     	;# 
  3219  0E0F                     	;# 
  3220  0E10                     	;# 
  3221  0E11                     	;# 
  3222  0E12                     	;# 
  3223  0E13                     	;# 
  3224  0E14                     	;# 
  3225  0E15                     	;# 
  3226  0E16                     	;# 
  3227  0E17                     	;# 
  3228  0E18                     	;# 
  3229  0E19                     	;# 
  3230  0E1A                     	;# 
  3231  0E1B                     	;# 
  3232  0E1C                     	;# 
  3233  0E1D                     	;# 
  3234  0E1E                     	;# 
  3235  0E1F                     	;# 
  3236  0E20                     	;# 
  3237  0E21                     	;# 
  3238  0E22                     	;# 
  3239  0E24                     	;# 
  3240  0E25                     	;# 
  3241  0E28                     	;# 
  3242  0E29                     	;# 
  3243  0E2A                     	;# 
  3244  0E2B                     	;# 
  3245  0E2C                     	;# 
  3246  0E2D                     	;# 
  3247  0E2E                     	;# 
  3248  0E2F                     	;# 
  3249  0E90                     	;# 
  3250  0E91                     	;# 
  3251  0E92                     	;# 
  3252  0E94                     	;# 
  3253  0E95                     	;# 
  3254  0E9C                     	;# 
  3255  0E9D                     	;# 
  3256  0E9E                     	;# 
  3257  0E9F                     	;# 
  3258  0EA0                     	;# 
  3259  0EA1                     	;# 
  3260  0EA2                     	;# 
  3261  0EA3                     	;# 
  3262  0EA4                     	;# 
  3263  0EA5                     	;# 
  3264  0EA6                     	;# 
  3265  0EA7                     	;# 
  3266  0F0F                     	;# 
  3267  0F10                     	;# 
  3268  0F11                     	;# 
  3269  0F12                     	;# 
  3270  0F13                     	;# 
  3271  0F14                     	;# 
  3272  0F15                     	;# 
  3273  0F16                     	;# 
  3274  0F17                     	;# 
  3275  0F18                     	;# 
  3276  0F19                     	;# 
  3277  0F1A                     	;# 
  3278  0F1B                     	;# 
  3279  0F1C                     	;# 
  3280  0F1D                     	;# 
  3281  0F1E                     	;# 
  3282  0F1F                     	;# 
  3283  0F20                     	;# 
  3284  0F21                     	;# 
  3285  0F22                     	;# 
  3286  0F23                     	;# 
  3287  0F24                     	;# 
  3288  0F25                     	;# 
  3289  0F26                     	;# 
  3290  0F27                     	;# 
  3291  0F28                     	;# 
  3292  0F29                     	;# 
  3293  0F2A                     	;# 
  3294  0F2B                     	;# 
  3295  0F2C                     	;# 
  3296  0F2D                     	;# 
  3297  0F2E                     	;# 
  3298  0F2F                     	;# 
  3299  0F30                     	;# 
  3300  0F31                     	;# 
  3301  0F32                     	;# 
  3302  0F33                     	;# 
  3303  0F34                     	;# 
  3304  0F35                     	;# 
  3305  0F36                     	;# 
  3306  0F37                     	;# 
  3307  0FE4                     	;# 
  3308  0FE5                     	;# 
  3309  0FE6                     	;# 
  3310  0FE7                     	;# 
  3311  0FE8                     	;# 
  3312  0FE9                     	;# 
  3313  0FEA                     	;# 
  3314  0FEB                     	;# 
  3315  0FED                     	;# 
  3316  0FEE                     	;# 
  3317  0FEF                     	;# 
  3318  0000                     	;# 
  3319  0001                     	;# 
  3320  0002                     	;# 
  3321  0003                     	;# 
  3322  0004                     	;# 
  3323  0005                     	;# 
  3324  0006                     	;# 
  3325  0007                     	;# 
  3326  0008                     	;# 
  3327  0009                     	;# 
  3328  000A                     	;# 
  3329  000B                     	;# 
  3330  000C                     	;# 
  3331  000D                     	;# 
  3332  000E                     	;# 
  3333  0010                     	;# 
  3334  0011                     	;# 
  3335  0012                     	;# 
  3336  0013                     	;# 
  3337  0014                     	;# 
  3338  0015                     	;# 
  3339  0015                     	;# 
  3340  0016                     	;# 
  3341  0016                     	;# 
  3342  0017                     	;# 
  3343  0018                     	;# 
  3344  0019                     	;# 
  3345  0019                     	;# 
  3346  001A                     	;# 
  3347  001B                     	;# 
  3348  001C                     	;# 
  3349  001D                     	;# 
  3350  001E                     	;# 
  3351  001F                     	;# 
  3352  008C                     	;# 
  3353  008D                     	;# 
  3354  008E                     	;# 
  3355  0090                     	;# 
  3356  0091                     	;# 
  3357  0092                     	;# 
  3358  0093                     	;# 
  3359  0094                     	;# 
  3360  0097                     	;# 
  3361  009B                     	;# 
  3362  009B                     	;# 
  3363  009C                     	;# 
  3364  009D                     	;# 
  3365  009E                     	;# 
  3366  009F                     	;# 
  3367  010C                     	;# 
  3368  010D                     	;# 
  3369  010E                     	;# 
  3370  0111                     	;# 
  3371  0112                     	;# 
  3372  0113                     	;# 
  3373  0114                     	;# 
  3374  0115                     	;# 
  3375  0116                     	;# 
  3376  0117                     	;# 
  3377  0118                     	;# 
  3378  0119                     	;# 
  3379  018C                     	;# 
  3380  018D                     	;# 
  3381  018E                     	;# 
  3382  0197                     	;# 
  3383  0199                     	;# 
  3384  0199                     	;# 
  3385  0199                     	;# 
  3386  019A                     	;# 
  3387  019A                     	;# 
  3388  019A                     	;# 
  3389  019B                     	;# 
  3390  019B                     	;# 
  3391  019B                     	;# 
  3392  019B                     	;# 
  3393  019B                     	;# 
  3394  019C                     	;# 
  3395  019C                     	;# 
  3396  019C                     	;# 
  3397  019D                     	;# 
  3398  019D                     	;# 
  3399  019D                     	;# 
  3400  019E                     	;# 
  3401  019E                     	;# 
  3402  019E                     	;# 
  3403  019F                     	;# 
  3404  019F                     	;# 
  3405  019F                     	;# 
  3406  019F                     	;# 
  3407  019F                     	;# 
  3408  020C                     	;# 
  3409  020D                     	;# 
  3410  020E                     	;# 
  3411  0211                     	;# 
  3412  0211                     	;# 
  3413  0212                     	;# 
  3414  0212                     	;# 
  3415  0213                     	;# 
  3416  0213                     	;# 
  3417  0214                     	;# 
  3418  0214                     	;# 
  3419  0215                     	;# 
  3420  0215                     	;# 
  3421  0215                     	;# 
  3422  0215                     	;# 
  3423  0216                     	;# 
  3424  0216                     	;# 
  3425  0217                     	;# 
  3426  0217                     	;# 
  3427  0219                     	;# 
  3428  021A                     	;# 
  3429  021B                     	;# 
  3430  021C                     	;# 
  3431  021D                     	;# 
  3432  021D                     	;# 
  3433  021E                     	;# 
  3434  021F                     	;# 
  3435  028C                     	;# 
  3436  028D                     	;# 
  3437  028E                     	;# 
  3438  0291                     	;# 
  3439  0291                     	;# 
  3440  0292                     	;# 
  3441  0293                     	;# 
  3442  0294                     	;# 
  3443  0295                     	;# 
  3444  0295                     	;# 
  3445  0296                     	;# 
  3446  0297                     	;# 
  3447  0298                     	;# 
  3448  029F                     	;# 
  3449  030C                     	;# 
  3450  030D                     	;# 
  3451  030E                     	;# 
  3452  0311                     	;# 
  3453  0311                     	;# 
  3454  0312                     	;# 
  3455  0313                     	;# 
  3456  0314                     	;# 
  3457  0315                     	;# 
  3458  0315                     	;# 
  3459  0316                     	;# 
  3460  0317                     	;# 
  3461  0318                     	;# 
  3462  038C                     	;# 
  3463  038D                     	;# 
  3464  038E                     	;# 
  3465  0391                     	;# 
  3466  0392                     	;# 
  3467  0393                     	;# 
  3468  0394                     	;# 
  3469  0395                     	;# 
  3470  0396                     	;# 
  3471  0397                     	;# 
  3472  0398                     	;# 
  3473  0399                     	;# 
  3474  039A                     	;# 
  3475  039C                     	;# 
  3476  039D                     	;# 
  3477  039E                     	;# 
  3478  039F                     	;# 
  3479  0411                     	;# 
  3480  0411                     	;# 
  3481  0412                     	;# 
  3482  0413                     	;# 
  3483  0414                     	;# 
  3484  0415                     	;# 
  3485  0416                     	;# 
  3486  0417                     	;# 
  3487  0418                     	;# 
  3488  0418                     	;# 
  3489  0419                     	;# 
  3490  041A                     	;# 
  3491  041B                     	;# 
  3492  041C                     	;# 
  3493  041D                     	;# 
  3494  041E                     	;# 
  3495  041F                     	;# 
  3496  0498                     	;# 
  3497  0498                     	;# 
  3498  0499                     	;# 
  3499  049A                     	;# 
  3500  049B                     	;# 
  3501  049B                     	;# 
  3502  049C                     	;# 
  3503  049D                     	;# 
  3504  049E                     	;# 
  3505  049F                     	;# 
  3506  0617                     	;# 
  3507  0618                     	;# 
  3508  0619                     	;# 
  3509  0619                     	;# 
  3510  061A                     	;# 
  3511  061B                     	;# 
  3512  061C                     	;# 
  3513  061C                     	;# 
  3514  061F                     	;# 
  3515  0691                     	;# 
  3516  0692                     	;# 
  3517  0693                     	;# 
  3518  0694                     	;# 
  3519  0695                     	;# 
  3520  0696                     	;# 
  3521  0697                     	;# 
  3522  0698                     	;# 
  3523  0699                     	;# 
  3524  0711                     	;# 
  3525  0712                     	;# 
  3526  0713                     	;# 
  3527  0714                     	;# 
  3528  0715                     	;# 
  3529  0716                     	;# 
  3530  0717                     	;# 
  3531  0718                     	;# 
  3532  0719                     	;# 
  3533  0891                     	;# 
  3534  0891                     	;# 
  3535  0891                     	;# 
  3536  0891                     	;# 
  3537  0891                     	;# 
  3538  0891                     	;# 
  3539  0892                     	;# 
  3540  0892                     	;# 
  3541  0892                     	;# 
  3542  0893                     	;# 
  3543  0893                     	;# 
  3544  0893                     	;# 
  3545  0893                     	;# 
  3546  0893                     	;# 
  3547  0893                     	;# 
  3548  0894                     	;# 
  3549  0894                     	;# 
  3550  0894                     	;# 
  3551  0895                     	;# 
  3552  0895                     	;# 
  3553  0895                     	;# 
  3554  0896                     	;# 
  3555  0896                     	;# 
  3556  0896                     	;# 
  3557  089B                     	;# 
  3558  0911                     	;# 
  3559  0912                     	;# 
  3560  0913                     	;# 
  3561  0914                     	;# 
  3562  0915                     	;# 
  3563  0916                     	;# 
  3564  0918                     	;# 
  3565  0919                     	;# 
  3566  091A                     	;# 
  3567  091B                     	;# 
  3568  091C                     	;# 
  3569  091D                     	;# 
  3570  091E                     	;# 
  3571  091F                     	;# 
  3572  0E0F                     	;# 
  3573  0E10                     	;# 
  3574  0E11                     	;# 
  3575  0E12                     	;# 
  3576  0E13                     	;# 
  3577  0E14                     	;# 
  3578  0E15                     	;# 
  3579  0E16                     	;# 
  3580  0E17                     	;# 
  3581  0E18                     	;# 
  3582  0E19                     	;# 
  3583  0E1A                     	;# 
  3584  0E1B                     	;# 
  3585  0E1C                     	;# 
  3586  0E1D                     	;# 
  3587  0E1E                     	;# 
  3588  0E1F                     	;# 
  3589  0E20                     	;# 
  3590  0E21                     	;# 
  3591  0E22                     	;# 
  3592  0E24                     	;# 
  3593  0E25                     	;# 
  3594  0E28                     	;# 
  3595  0E29                     	;# 
  3596  0E2A                     	;# 
  3597  0E2B                     	;# 
  3598  0E2C                     	;# 
  3599  0E2D                     	;# 
  3600  0E2E                     	;# 
  3601  0E2F                     	;# 
  3602  0E90                     	;# 
  3603  0E91                     	;# 
  3604  0E92                     	;# 
  3605  0E94                     	;# 
  3606  0E95                     	;# 
  3607  0E9C                     	;# 
  3608  0E9D                     	;# 
  3609  0E9E                     	;# 
  3610  0E9F                     	;# 
  3611  0EA0                     	;# 
  3612  0EA1                     	;# 
  3613  0EA2                     	;# 
  3614  0EA3                     	;# 
  3615  0EA4                     	;# 
  3616  0EA5                     	;# 
  3617  0EA6                     	;# 
  3618  0EA7                     	;# 
  3619  0F0F                     	;# 
  3620  0F10                     	;# 
  3621  0F11                     	;# 
  3622  0F12                     	;# 
  3623  0F13                     	;# 
  3624  0F14                     	;# 
  3625  0F15                     	;# 
  3626  0F16                     	;# 
  3627  0F17                     	;# 
  3628  0F18                     	;# 
  3629  0F19                     	;# 
  3630  0F1A                     	;# 
  3631  0F1B                     	;# 
  3632  0F1C                     	;# 
  3633  0F1D                     	;# 
  3634  0F1E                     	;# 
  3635  0F1F                     	;# 
  3636  0F20                     	;# 
  3637  0F21                     	;# 
  3638  0F22                     	;# 
  3639  0F23                     	;# 
  3640  0F24                     	;# 
  3641  0F25                     	;# 
  3642  0F26                     	;# 
  3643  0F27                     	;# 
  3644  0F28                     	;# 
  3645  0F29                     	;# 
  3646  0F2A                     	;# 
  3647  0F2B                     	;# 
  3648  0F2C                     	;# 
  3649  0F2D                     	;# 
  3650  0F2E                     	;# 
  3651  0F2F                     	;# 
  3652  0F30                     	;# 
  3653  0F31                     	;# 
  3654  0F32                     	;# 
  3655  0F33                     	;# 
  3656  0F34                     	;# 
  3657  0F35                     	;# 
  3658  0F36                     	;# 
  3659  0F37                     	;# 
  3660  0FE4                     	;# 
  3661  0FE5                     	;# 
  3662  0FE6                     	;# 
  3663  0FE7                     	;# 
  3664  0FE8                     	;# 
  3665  0FE9                     	;# 
  3666  0FEA                     	;# 
  3667  0FEB                     	;# 
  3668  0FED                     	;# 
  3669  0FEE                     	;# 
  3670  0FEF                     	;# 
  3671  0000                     	;# 
  3672  0001                     	;# 
  3673  0002                     	;# 
  3674  0003                     	;# 
  3675  0004                     	;# 
  3676  0005                     	;# 
  3677  0006                     	;# 
  3678  0007                     	;# 
  3679  0008                     	;# 
  3680  0009                     	;# 
  3681  000A                     	;# 
  3682  000B                     	;# 
  3683  000C                     	;# 
  3684  000D                     	;# 
  3685  000E                     	;# 
  3686  0010                     	;# 
  3687  0011                     	;# 
  3688  0012                     	;# 
  3689  0013                     	;# 
  3690  0014                     	;# 
  3691  0015                     	;# 
  3692  0015                     	;# 
  3693  0016                     	;# 
  3694  0016                     	;# 
  3695  0017                     	;# 
  3696  0018                     	;# 
  3697  0019                     	;# 
  3698  0019                     	;# 
  3699  001A                     	;# 
  3700  001B                     	;# 
  3701  001C                     	;# 
  3702  001D                     	;# 
  3703  001E                     	;# 
  3704  001F                     	;# 
  3705  008C                     	;# 
  3706  008D                     	;# 
  3707  008E                     	;# 
  3708  0090                     	;# 
  3709  0091                     	;# 
  3710  0092                     	;# 
  3711  0093                     	;# 
  3712  0094                     	;# 
  3713  0097                     	;# 
  3714  009B                     	;# 
  3715  009B                     	;# 
  3716  009C                     	;# 
  3717  009D                     	;# 
  3718  009E                     	;# 
  3719  009F                     	;# 
  3720  010C                     	;# 
  3721  010D                     	;# 
  3722  010E                     	;# 
  3723  0111                     	;# 
  3724  0112                     	;# 
  3725  0113                     	;# 
  3726  0114                     	;# 
  3727  0115                     	;# 
  3728  0116                     	;# 
  3729  0117                     	;# 
  3730  0118                     	;# 
  3731  0119                     	;# 
  3732  018C                     	;# 
  3733  018D                     	;# 
  3734  018E                     	;# 
  3735  0197                     	;# 
  3736  0199                     	;# 
  3737  0199                     	;# 
  3738  0199                     	;# 
  3739  019A                     	;# 
  3740  019A                     	;# 
  3741  019A                     	;# 
  3742  019B                     	;# 
  3743  019B                     	;# 
  3744  019B                     	;# 
  3745  019B                     	;# 
  3746  019B                     	;# 
  3747  019C                     	;# 
  3748  019C                     	;# 
  3749  019C                     	;# 
  3750  019D                     	;# 
  3751  019D                     	;# 
  3752  019D                     	;# 
  3753  019E                     	;# 
  3754  019E                     	;# 
  3755  019E                     	;# 
  3756  019F                     	;# 
  3757  019F                     	;# 
  3758  019F                     	;# 
  3759  019F                     	;# 
  3760  019F                     	;# 
  3761  020C                     	;# 
  3762  020D                     	;# 
  3763  020E                     	;# 
  3764  0211                     	;# 
  3765  0211                     	;# 
  3766  0212                     	;# 
  3767  0212                     	;# 
  3768  0213                     	;# 
  3769  0213                     	;# 
  3770  0214                     	;# 
  3771  0214                     	;# 
  3772  0215                     	;# 
  3773  0215                     	;# 
  3774  0215                     	;# 
  3775  0215                     	;# 
  3776  0216                     	;# 
  3777  0216                     	;# 
  3778  0217                     	;# 
  3779  0217                     	;# 
  3780  0219                     	;# 
  3781  021A                     	;# 
  3782  021B                     	;# 
  3783  021C                     	;# 
  3784  021D                     	;# 
  3785  021D                     	;# 
  3786  021E                     	;# 
  3787  021F                     	;# 
  3788  028C                     	;# 
  3789  028D                     	;# 
  3790  028E                     	;# 
  3791  0291                     	;# 
  3792  0291                     	;# 
  3793  0292                     	;# 
  3794  0293                     	;# 
  3795  0294                     	;# 
  3796  0295                     	;# 
  3797  0295                     	;# 
  3798  0296                     	;# 
  3799  0297                     	;# 
  3800  0298                     	;# 
  3801  029F                     	;# 
  3802  030C                     	;# 
  3803  030D                     	;# 
  3804  030E                     	;# 
  3805  0311                     	;# 
  3806  0311                     	;# 
  3807  0312                     	;# 
  3808  0313                     	;# 
  3809  0314                     	;# 
  3810  0315                     	;# 
  3811  0315                     	;# 
  3812  0316                     	;# 
  3813  0317                     	;# 
  3814  0318                     	;# 
  3815  038C                     	;# 
  3816  038D                     	;# 
  3817  038E                     	;# 
  3818  0391                     	;# 
  3819  0392                     	;# 
  3820  0393                     	;# 
  3821  0394                     	;# 
  3822  0395                     	;# 
  3823  0396                     	;# 
  3824  0397                     	;# 
  3825  0398                     	;# 
  3826  0399                     	;# 
  3827  039A                     	;# 
  3828  039C                     	;# 
  3829  039D                     	;# 
  3830  039E                     	;# 
  3831  039F                     	;# 
  3832  0411                     	;# 
  3833  0411                     	;# 
  3834  0412                     	;# 
  3835  0413                     	;# 
  3836  0414                     	;# 
  3837  0415                     	;# 
  3838  0416                     	;# 
  3839  0417                     	;# 
  3840  0418                     	;# 
  3841  0418                     	;# 
  3842  0419                     	;# 
  3843  041A                     	;# 
  3844  041B                     	;# 
  3845  041C                     	;# 
  3846  041D                     	;# 
  3847  041E                     	;# 
  3848  041F                     	;# 
  3849  0498                     	;# 
  3850  0498                     	;# 
  3851  0499                     	;# 
  3852  049A                     	;# 
  3853  049B                     	;# 
  3854  049B                     	;# 
  3855  049C                     	;# 
  3856  049D                     	;# 
  3857  049E                     	;# 
  3858  049F                     	;# 
  3859  0617                     	;# 
  3860  0618                     	;# 
  3861  0619                     	;# 
  3862  0619                     	;# 
  3863  061A                     	;# 
  3864  061B                     	;# 
  3865  061C                     	;# 
  3866  061C                     	;# 
  3867  061F                     	;# 
  3868  0691                     	;# 
  3869  0692                     	;# 
  3870  0693                     	;# 
  3871  0694                     	;# 
  3872  0695                     	;# 
  3873  0696                     	;# 
  3874  0697                     	;# 
  3875  0698                     	;# 
  3876  0699                     	;# 
  3877  0711                     	;# 
  3878  0712                     	;# 
  3879  0713                     	;# 
  3880  0714                     	;# 
  3881  0715                     	;# 
  3882  0716                     	;# 
  3883  0717                     	;# 
  3884  0718                     	;# 
  3885  0719                     	;# 
  3886  0891                     	;# 
  3887  0891                     	;# 
  3888  0891                     	;# 
  3889  0891                     	;# 
  3890  0891                     	;# 
  3891  0891                     	;# 
  3892  0892                     	;# 
  3893  0892                     	;# 
  3894  0892                     	;# 
  3895  0893                     	;# 
  3896  0893                     	;# 
  3897  0893                     	;# 
  3898  0893                     	;# 
  3899  0893                     	;# 
  3900  0893                     	;# 
  3901  0894                     	;# 
  3902  0894                     	;# 
  3903  0894                     	;# 
  3904  0895                     	;# 
  3905  0895                     	;# 
  3906  0895                     	;# 
  3907  0896                     	;# 
  3908  0896                     	;# 
  3909  0896                     	;# 
  3910  089B                     	;# 
  3911  0911                     	;# 
  3912  0912                     	;# 
  3913  0913                     	;# 
  3914  0914                     	;# 
  3915  0915                     	;# 
  3916  0916                     	;# 
  3917  0918                     	;# 
  3918  0919                     	;# 
  3919  091A                     	;# 
  3920  091B                     	;# 
  3921  091C                     	;# 
  3922  091D                     	;# 
  3923  091E                     	;# 
  3924  091F                     	;# 
  3925  0E0F                     	;# 
  3926  0E10                     	;# 
  3927  0E11                     	;# 
  3928  0E12                     	;# 
  3929  0E13                     	;# 
  3930  0E14                     	;# 
  3931  0E15                     	;# 
  3932  0E16                     	;# 
  3933  0E17                     	;# 
  3934  0E18                     	;# 
  3935  0E19                     	;# 
  3936  0E1A                     	;# 
  3937  0E1B                     	;# 
  3938  0E1C                     	;# 
  3939  0E1D                     	;# 
  3940  0E1E                     	;# 
  3941  0E1F                     	;# 
  3942  0E20                     	;# 
  3943  0E21                     	;# 
  3944  0E22                     	;# 
  3945  0E24                     	;# 
  3946  0E25                     	;# 
  3947  0E28                     	;# 
  3948  0E29                     	;# 
  3949  0E2A                     	;# 
  3950  0E2B                     	;# 
  3951  0E2C                     	;# 
  3952  0E2D                     	;# 
  3953  0E2E                     	;# 
  3954  0E2F                     	;# 
  3955  0E90                     	;# 
  3956  0E91                     	;# 
  3957  0E92                     	;# 
  3958  0E94                     	;# 
  3959  0E95                     	;# 
  3960  0E9C                     	;# 
  3961  0E9D                     	;# 
  3962  0E9E                     	;# 
  3963  0E9F                     	;# 
  3964  0EA0                     	;# 
  3965  0EA1                     	;# 
  3966  0EA2                     	;# 
  3967  0EA3                     	;# 
  3968  0EA4                     	;# 
  3969  0EA5                     	;# 
  3970  0EA6                     	;# 
  3971  0EA7                     	;# 
  3972  0F0F                     	;# 
  3973  0F10                     	;# 
  3974  0F11                     	;# 
  3975  0F12                     	;# 
  3976  0F13                     	;# 
  3977  0F14                     	;# 
  3978  0F15                     	;# 
  3979  0F16                     	;# 
  3980  0F17                     	;# 
  3981  0F18                     	;# 
  3982  0F19                     	;# 
  3983  0F1A                     	;# 
  3984  0F1B                     	;# 
  3985  0F1C                     	;# 
  3986  0F1D                     	;# 
  3987  0F1E                     	;# 
  3988  0F1F                     	;# 
  3989  0F20                     	;# 
  3990  0F21                     	;# 
  3991  0F22                     	;# 
  3992  0F23                     	;# 
  3993  0F24                     	;# 
  3994  0F25                     	;# 
  3995  0F26                     	;# 
  3996  0F27                     	;# 
  3997  0F28                     	;# 
  3998  0F29                     	;# 
  3999  0F2A                     	;# 
  4000  0F2B                     	;# 
  4001  0F2C                     	;# 
  4002  0F2D                     	;# 
  4003  0F2E                     	;# 
  4004  0F2F                     	;# 
  4005  0F30                     	;# 
  4006  0F31                     	;# 
  4007  0F32                     	;# 
  4008  0F33                     	;# 
  4009  0F34                     	;# 
  4010  0F35                     	;# 
  4011  0F36                     	;# 
  4012  0F37                     	;# 
  4013  0FE4                     	;# 
  4014  0FE5                     	;# 
  4015  0FE6                     	;# 
  4016  0FE7                     	;# 
  4017  0FE8                     	;# 
  4018  0FE9                     	;# 
  4019  0FEA                     	;# 
  4020  0FEB                     	;# 
  4021  0FED                     	;# 
  4022  0FEE                     	;# 
  4023  0FEF                     	;# 
  4024  0000                     	;# 
  4025  0001                     	;# 
  4026  0002                     	;# 
  4027  0003                     	;# 
  4028  0004                     	;# 
  4029  0005                     	;# 
  4030  0006                     	;# 
  4031  0007                     	;# 
  4032  0008                     	;# 
  4033  0009                     	;# 
  4034  000A                     	;# 
  4035  000B                     	;# 
  4036  000C                     	;# 
  4037  000D                     	;# 
  4038  000E                     	;# 
  4039  0010                     	;# 
  4040  0011                     	;# 
  4041  0012                     	;# 
  4042  0013                     	;# 
  4043  0014                     	;# 
  4044  0015                     	;# 
  4045  0015                     	;# 
  4046  0016                     	;# 
  4047  0016                     	;# 
  4048  0017                     	;# 
  4049  0018                     	;# 
  4050  0019                     	;# 
  4051  0019                     	;# 
  4052  001A                     	;# 
  4053  001B                     	;# 
  4054  001C                     	;# 
  4055  001D                     	;# 
  4056  001E                     	;# 
  4057  001F                     	;# 
  4058  008C                     	;# 
  4059  008D                     	;# 
  4060  008E                     	;# 
  4061  0090                     	;# 
  4062  0091                     	;# 
  4063  0092                     	;# 
  4064  0093                     	;# 
  4065  0094                     	;# 
  4066  0097                     	;# 
  4067  009B                     	;# 
  4068  009B                     	;# 
  4069  009C                     	;# 
  4070  009D                     	;# 
  4071  009E                     	;# 
  4072  009F                     	;# 
  4073  010C                     	;# 
  4074  010D                     	;# 
  4075  010E                     	;# 
  4076  0111                     	;# 
  4077  0112                     	;# 
  4078  0113                     	;# 
  4079  0114                     	;# 
  4080  0115                     	;# 
  4081  0116                     	;# 
  4082  0117                     	;# 
  4083  0118                     	;# 
  4084  0119                     	;# 
  4085  018C                     	;# 
  4086  018D                     	;# 
  4087  018E                     	;# 
  4088  0197                     	;# 
  4089  0199                     	;# 
  4090  0199                     	;# 
  4091  0199                     	;# 
  4092  019A                     	;# 
  4093  019A                     	;# 
  4094  019A                     	;# 
  4095  019B                     	;# 
  4096  019B                     	;# 
  4097  019B                     	;# 
  4098  019B                     	;# 
  4099  019B                     	;# 
  4100  019C                     	;# 
  4101  019C                     	;# 
  4102  019C                     	;# 
  4103  019D                     	;# 
  4104  019D                     	;# 
  4105  019D                     	;# 
  4106  019E                     	;# 
  4107  019E                     	;# 
  4108  019E                     	;# 
  4109  019F                     	;# 
  4110  019F                     	;# 
  4111  019F                     	;# 
  4112  019F                     	;# 
  4113  019F                     	;# 
  4114  020C                     	;# 
  4115  020D                     	;# 
  4116  020E                     	;# 
  4117  0211                     	;# 
  4118  0211                     	;# 
  4119  0212                     	;# 
  4120  0212                     	;# 
  4121  0213                     	;# 
  4122  0213                     	;# 
  4123  0214                     	;# 
  4124  0214                     	;# 
  4125  0215                     	;# 
  4126  0215                     	;# 
  4127  0215                     	;# 
  4128  0215                     	;# 
  4129  0216                     	;# 
  4130  0216                     	;# 
  4131  0217                     	;# 
  4132  0217                     	;# 
  4133  0219                     	;# 
  4134  021A                     	;# 
  4135  021B                     	;# 
  4136  021C                     	;# 
  4137  021D                     	;# 
  4138  021D                     	;# 
  4139  021E                     	;# 
  4140  021F                     	;# 
  4141  028C                     	;# 
  4142  028D                     	;# 
  4143  028E                     	;# 
  4144  0291                     	;# 
  4145  0291                     	;# 
  4146  0292                     	;# 
  4147  0293                     	;# 
  4148  0294                     	;# 
  4149  0295                     	;# 
  4150  0295                     	;# 
  4151  0296                     	;# 
  4152  0297                     	;# 
  4153  0298                     	;# 
  4154  029F                     	;# 
  4155  030C                     	;# 
  4156  030D                     	;# 
  4157  030E                     	;# 
  4158  0311                     	;# 
  4159  0311                     	;# 
  4160  0312                     	;# 
  4161  0313                     	;# 
  4162  0314                     	;# 
  4163  0315                     	;# 
  4164  0315                     	;# 
  4165  0316                     	;# 
  4166  0317                     	;# 
  4167  0318                     	;# 
  4168  038C                     	;# 
  4169  038D                     	;# 
  4170  038E                     	;# 
  4171  0391                     	;# 
  4172  0392                     	;# 
  4173  0393                     	;# 
  4174  0394                     	;# 
  4175  0395                     	;# 
  4176  0396                     	;# 
  4177  0397                     	;# 
  4178  0398                     	;# 
  4179  0399                     	;# 
  4180  039A                     	;# 
  4181  039C                     	;# 
  4182  039D                     	;# 
  4183  039E                     	;# 
  4184  039F                     	;# 
  4185  0411                     	;# 
  4186  0411                     	;# 
  4187  0412                     	;# 
  4188  0413                     	;# 
  4189  0414                     	;# 
  4190  0415                     	;# 
  4191  0416                     	;# 
  4192  0417                     	;# 
  4193  0418                     	;# 
  4194  0418                     	;# 
  4195  0419                     	;# 
  4196  041A                     	;# 
  4197  041B                     	;# 
  4198  041C                     	;# 
  4199  041D                     	;# 
  4200  041E                     	;# 
  4201  041F                     	;# 
  4202  0498                     	;# 
  4203  0498                     	;# 
  4204  0499                     	;# 
  4205  049A                     	;# 
  4206  049B                     	;# 
  4207  049B                     	;# 
  4208  049C                     	;# 
  4209  049D                     	;# 
  4210  049E                     	;# 
  4211  049F                     	;# 
  4212  0617                     	;# 
  4213  0618                     	;# 
  4214  0619                     	;# 
  4215  0619                     	;# 
  4216  061A                     	;# 
  4217  061B                     	;# 
  4218  061C                     	;# 
  4219  061C                     	;# 
  4220  061F                     	;# 
  4221  0691                     	;# 
  4222  0692                     	;# 
  4223  0693                     	;# 
  4224  0694                     	;# 
  4225  0695                     	;# 
  4226  0696                     	;# 
  4227  0697                     	;# 
  4228  0698                     	;# 
  4229  0699                     	;# 
  4230  0711                     	;# 
  4231  0712                     	;# 
  4232  0713                     	;# 
  4233  0714                     	;# 
  4234  0715                     	;# 
  4235  0716                     	;# 
  4236  0717                     	;# 
  4237  0718                     	;# 
  4238  0719                     	;# 
  4239  0891                     	;# 
  4240  0891                     	;# 
  4241  0891                     	;# 
  4242  0891                     	;# 
  4243  0891                     	;# 
  4244  0891                     	;# 
  4245  0892                     	;# 
  4246  0892                     	;# 
  4247  0892                     	;# 
  4248  0893                     	;# 
  4249  0893                     	;# 
  4250  0893                     	;# 
  4251  0893                     	;# 
  4252  0893                     	;# 
  4253  0893                     	;# 
  4254  0894                     	;# 
  4255  0894                     	;# 
  4256  0894                     	;# 
  4257  0895                     	;# 
  4258  0895                     	;# 
  4259  0895                     	;# 
  4260  0896                     	;# 
  4261  0896                     	;# 
  4262  0896                     	;# 
  4263  089B                     	;# 
  4264  0911                     	;# 
  4265  0912                     	;# 
  4266  0913                     	;# 
  4267  0914                     	;# 
  4268  0915                     	;# 
  4269  0916                     	;# 
  4270  0918                     	;# 
  4271  0919                     	;# 
  4272  091A                     	;# 
  4273  091B                     	;# 
  4274  091C                     	;# 
  4275  091D                     	;# 
  4276  091E                     	;# 
  4277  091F                     	;# 
  4278  0E0F                     	;# 
  4279  0E10                     	;# 
  4280  0E11                     	;# 
  4281  0E12                     	;# 
  4282  0E13                     	;# 
  4283  0E14                     	;# 
  4284  0E15                     	;# 
  4285  0E16                     	;# 
  4286  0E17                     	;# 
  4287  0E18                     	;# 
  4288  0E19                     	;# 
  4289  0E1A                     	;# 
  4290  0E1B                     	;# 
  4291  0E1C                     	;# 
  4292  0E1D                     	;# 
  4293  0E1E                     	;# 
  4294  0E1F                     	;# 
  4295  0E20                     	;# 
  4296  0E21                     	;# 
  4297  0E22                     	;# 
  4298  0E24                     	;# 
  4299  0E25                     	;# 
  4300  0E28                     	;# 
  4301  0E29                     	;# 
  4302  0E2A                     	;# 
  4303  0E2B                     	;# 
  4304  0E2C                     	;# 
  4305  0E2D                     	;# 
  4306  0E2E                     	;# 
  4307  0E2F                     	;# 
  4308  0E90                     	;# 
  4309  0E91                     	;# 
  4310  0E92                     	;# 
  4311  0E94                     	;# 
  4312  0E95                     	;# 
  4313  0E9C                     	;# 
  4314  0E9D                     	;# 
  4315  0E9E                     	;# 
  4316  0E9F                     	;# 
  4317  0EA0                     	;# 
  4318  0EA1                     	;# 
  4319  0EA2                     	;# 
  4320  0EA3                     	;# 
  4321  0EA4                     	;# 
  4322  0EA5                     	;# 
  4323  0EA6                     	;# 
  4324  0EA7                     	;# 
  4325  0F0F                     	;# 
  4326  0F10                     	;# 
  4327  0F11                     	;# 
  4328  0F12                     	;# 
  4329  0F13                     	;# 
  4330  0F14                     	;# 
  4331  0F15                     	;# 
  4332  0F16                     	;# 
  4333  0F17                     	;# 
  4334  0F18                     	;# 
  4335  0F19                     	;# 
  4336  0F1A                     	;# 
  4337  0F1B                     	;# 
  4338  0F1C                     	;# 
  4339  0F1D                     	;# 
  4340  0F1E                     	;# 
  4341  0F1F                     	;# 
  4342  0F20                     	;# 
  4343  0F21                     	;# 
  4344  0F22                     	;# 
  4345  0F23                     	;# 
  4346  0F24                     	;# 
  4347  0F25                     	;# 
  4348  0F26                     	;# 
  4349  0F27                     	;# 
  4350  0F28                     	;# 
  4351  0F29                     	;# 
  4352  0F2A                     	;# 
  4353  0F2B                     	;# 
  4354  0F2C                     	;# 
  4355  0F2D                     	;# 
  4356  0F2E                     	;# 
  4357  0F2F                     	;# 
  4358  0F30                     	;# 
  4359  0F31                     	;# 
  4360  0F32                     	;# 
  4361  0F33                     	;# 
  4362  0F34                     	;# 
  4363  0F35                     	;# 
  4364  0F36                     	;# 
  4365  0F37                     	;# 
  4366  0FE4                     	;# 
  4367  0FE5                     	;# 
  4368  0FE6                     	;# 
  4369  0FE7                     	;# 
  4370  0FE8                     	;# 
  4371  0FE9                     	;# 
  4372  0FEA                     	;# 
  4373  0FEB                     	;# 
  4374  0FED                     	;# 
  4375  0FEE                     	;# 
  4376  0FEF                     	;# 
  4377  0000                     	;# 
  4378  0001                     	;# 
  4379  0002                     	;# 
  4380  0003                     	;# 
  4381  0004                     	;# 
  4382  0005                     	;# 
  4383  0006                     	;# 
  4384  0007                     	;# 
  4385  0008                     	;# 
  4386  0009                     	;# 
  4387  000A                     	;# 
  4388  000B                     	;# 
  4389  000C                     	;# 
  4390  000D                     	;# 
  4391  000E                     	;# 
  4392  0010                     	;# 
  4393  0011                     	;# 
  4394  0012                     	;# 
  4395  0013                     	;# 
  4396  0014                     	;# 
  4397  0015                     	;# 
  4398  0015                     	;# 
  4399  0016                     	;# 
  4400  0016                     	;# 
  4401  0017                     	;# 
  4402  0018                     	;# 
  4403  0019                     	;# 
  4404  0019                     	;# 
  4405  001A                     	;# 
  4406  001B                     	;# 
  4407  001C                     	;# 
  4408  001D                     	;# 
  4409  001E                     	;# 
  4410  001F                     	;# 
  4411  008C                     	;# 
  4412  008D                     	;# 
  4413  008E                     	;# 
  4414  0090                     	;# 
  4415  0091                     	;# 
  4416  0092                     	;# 
  4417  0093                     	;# 
  4418  0094                     	;# 
  4419  0097                     	;# 
  4420  009B                     	;# 
  4421  009B                     	;# 
  4422  009C                     	;# 
  4423  009D                     	;# 
  4424  009E                     	;# 
  4425  009F                     	;# 
  4426  010C                     	;# 
  4427  010D                     	;# 
  4428  010E                     	;# 
  4429  0111                     	;# 
  4430  0112                     	;# 
  4431  0113                     	;# 
  4432  0114                     	;# 
  4433  0115                     	;# 
  4434  0116                     	;# 
  4435  0117                     	;# 
  4436  0118                     	;# 
  4437  0119                     	;# 
  4438  018C                     	;# 
  4439  018D                     	;# 
  4440  018E                     	;# 
  4441  0197                     	;# 
  4442  0199                     	;# 
  4443  0199                     	;# 
  4444  0199                     	;# 
  4445  019A                     	;# 
  4446  019A                     	;# 
  4447  019A                     	;# 
  4448  019B                     	;# 
  4449  019B                     	;# 
  4450  019B                     	;# 
  4451  019B                     	;# 
  4452  019B                     	;# 
  4453  019C                     	;# 
  4454  019C                     	;# 
  4455  019C                     	;# 
  4456  019D                     	;# 
  4457  019D                     	;# 
  4458  019D                     	;# 
  4459  019E                     	;# 
  4460  019E                     	;# 
  4461  019E                     	;# 
  4462  019F                     	;# 
  4463  019F                     	;# 
  4464  019F                     	;# 
  4465  019F                     	;# 
  4466  019F                     	;# 
  4467  020C                     	;# 
  4468  020D                     	;# 
  4469  020E                     	;# 
  4470  0211                     	;# 
  4471  0211                     	;# 
  4472  0212                     	;# 
  4473  0212                     	;# 
  4474  0213                     	;# 
  4475  0213                     	;# 
  4476  0214                     	;# 
  4477  0214                     	;# 
  4478  0215                     	;# 
  4479  0215                     	;# 
  4480  0215                     	;# 
  4481  0215                     	;# 
  4482  0216                     	;# 
  4483  0216                     	;# 
  4484  0217                     	;# 
  4485  0217                     	;# 
  4486  0219                     	;# 
  4487  021A                     	;# 
  4488  021B                     	;# 
  4489  021C                     	;# 
  4490  021D                     	;# 
  4491  021D                     	;# 
  4492  021E                     	;# 
  4493  021F                     	;# 
  4494  028C                     	;# 
  4495  028D                     	;# 
  4496  028E                     	;# 
  4497  0291                     	;# 
  4498  0291                     	;# 
  4499  0292                     	;# 
  4500  0293                     	;# 
  4501  0294                     	;# 
  4502  0295                     	;# 
  4503  0295                     	;# 
  4504  0296                     	;# 
  4505  0297                     	;# 
  4506  0298                     	;# 
  4507  029F                     	;# 
  4508  030C                     	;# 
  4509  030D                     	;# 
  4510  030E                     	;# 
  4511  0311                     	;# 
  4512  0311                     	;# 
  4513  0312                     	;# 
  4514  0313                     	;# 
  4515  0314                     	;# 
  4516  0315                     	;# 
  4517  0315                     	;# 
  4518  0316                     	;# 
  4519  0317                     	;# 
  4520  0318                     	;# 
  4521  038C                     	;# 
  4522  038D                     	;# 
  4523  038E                     	;# 
  4524  0391                     	;# 
  4525  0392                     	;# 
  4526  0393                     	;# 
  4527  0394                     	;# 
  4528  0395                     	;# 
  4529  0396                     	;# 
  4530  0397                     	;# 
  4531  0398                     	;# 
  4532  0399                     	;# 
  4533  039A                     	;# 
  4534  039C                     	;# 
  4535  039D                     	;# 
  4536  039E                     	;# 
  4537  039F                     	;# 
  4538  0411                     	;# 
  4539  0411                     	;# 
  4540  0412                     	;# 
  4541  0413                     	;# 
  4542  0414                     	;# 
  4543  0415                     	;# 
  4544  0416                     	;# 
  4545  0417                     	;# 
  4546  0418                     	;# 
  4547  0418                     	;# 
  4548  0419                     	;# 
  4549  041A                     	;# 
  4550  041B                     	;# 
  4551  041C                     	;# 
  4552  041D                     	;# 
  4553  041E                     	;# 
  4554  041F                     	;# 
  4555  0498                     	;# 
  4556  0498                     	;# 
  4557  0499                     	;# 
  4558  049A                     	;# 
  4559  049B                     	;# 
  4560  049B                     	;# 
  4561  049C                     	;# 
  4562  049D                     	;# 
  4563  049E                     	;# 
  4564  049F                     	;# 
  4565  0617                     	;# 
  4566  0618                     	;# 
  4567  0619                     	;# 
  4568  0619                     	;# 
  4569  061A                     	;# 
  4570  061B                     	;# 
  4571  061C                     	;# 
  4572  061C                     	;# 
  4573  061F                     	;# 
  4574  0691                     	;# 
  4575  0692                     	;# 
  4576  0693                     	;# 
  4577  0694                     	;# 
  4578  0695                     	;# 
  4579  0696                     	;# 
  4580  0697                     	;# 
  4581  0698                     	;# 
  4582  0699                     	;# 
  4583  0711                     	;# 
  4584  0712                     	;# 
  4585  0713                     	;# 
  4586  0714                     	;# 
  4587  0715                     	;# 
  4588  0716                     	;# 
  4589  0717                     	;# 
  4590  0718                     	;# 
  4591  0719                     	;# 
  4592  0891                     	;# 
  4593  0891                     	;# 
  4594  0891                     	;# 
  4595  0891                     	;# 
  4596  0891                     	;# 
  4597  0891                     	;# 
  4598  0892                     	;# 
  4599  0892                     	;# 
  4600  0892                     	;# 
  4601  0893                     	;# 
  4602  0893                     	;# 
  4603  0893                     	;# 
  4604  0893                     	;# 
  4605  0893                     	;# 
  4606  0893                     	;# 
  4607  0894                     	;# 
  4608  0894                     	;# 
  4609  0894                     	;# 
  4610  0895                     	;# 
  4611  0895                     	;# 
  4612  0895                     	;# 
  4613  0896                     	;# 
  4614  0896                     	;# 
  4615  0896                     	;# 
  4616  089B                     	;# 
  4617  0911                     	;# 
  4618  0912                     	;# 
  4619  0913                     	;# 
  4620  0914                     	;# 
  4621  0915                     	;# 
  4622  0916                     	;# 
  4623  0918                     	;# 
  4624  0919                     	;# 
  4625  091A                     	;# 
  4626  091B                     	;# 
  4627  091C                     	;# 
  4628  091D                     	;# 
  4629  091E                     	;# 
  4630  091F                     	;# 
  4631  0E0F                     	;# 
  4632  0E10                     	;# 
  4633  0E11                     	;# 
  4634  0E12                     	;# 
  4635  0E13                     	;# 
  4636  0E14                     	;# 
  4637  0E15                     	;# 
  4638  0E16                     	;# 
  4639  0E17                     	;# 
  4640  0E18                     	;# 
  4641  0E19                     	;# 
  4642  0E1A                     	;# 
  4643  0E1B                     	;# 
  4644  0E1C                     	;# 
  4645  0E1D                     	;# 
  4646  0E1E                     	;# 
  4647  0E1F                     	;# 
  4648  0E20                     	;# 
  4649  0E21                     	;# 
  4650  0E22                     	;# 
  4651  0E24                     	;# 
  4652  0E25                     	;# 
  4653  0E28                     	;# 
  4654  0E29                     	;# 
  4655  0E2A                     	;# 
  4656  0E2B                     	;# 
  4657  0E2C                     	;# 
  4658  0E2D                     	;# 
  4659  0E2E                     	;# 
  4660  0E2F                     	;# 
  4661  0E90                     	;# 
  4662  0E91                     	;# 
  4663  0E92                     	;# 
  4664  0E94                     	;# 
  4665  0E95                     	;# 
  4666  0E9C                     	;# 
  4667  0E9D                     	;# 
  4668  0E9E                     	;# 
  4669  0E9F                     	;# 
  4670  0EA0                     	;# 
  4671  0EA1                     	;# 
  4672  0EA2                     	;# 
  4673  0EA3                     	;# 
  4674  0EA4                     	;# 
  4675  0EA5                     	;# 
  4676  0EA6                     	;# 
  4677  0EA7                     	;# 
  4678  0F0F                     	;# 
  4679  0F10                     	;# 
  4680  0F11                     	;# 
  4681  0F12                     	;# 
  4682  0F13                     	;# 
  4683  0F14                     	;# 
  4684  0F15                     	;# 
  4685  0F16                     	;# 
  4686  0F17                     	;# 
  4687  0F18                     	;# 
  4688  0F19                     	;# 
  4689  0F1A                     	;# 
  4690  0F1B                     	;# 
  4691  0F1C                     	;# 
  4692  0F1D                     	;# 
  4693  0F1E                     	;# 
  4694  0F1F                     	;# 
  4695  0F20                     	;# 
  4696  0F21                     	;# 
  4697  0F22                     	;# 
  4698  0F23                     	;# 
  4699  0F24                     	;# 
  4700  0F25                     	;# 
  4701  0F26                     	;# 
  4702  0F27                     	;# 
  4703  0F28                     	;# 
  4704  0F29                     	;# 
  4705  0F2A                     	;# 
  4706  0F2B                     	;# 
  4707  0F2C                     	;# 
  4708  0F2D                     	;# 
  4709  0F2E                     	;# 
  4710  0F2F                     	;# 
  4711  0F30                     	;# 
  4712  0F31                     	;# 
  4713  0F32                     	;# 
  4714  0F33                     	;# 
  4715  0F34                     	;# 
  4716  0F35                     	;# 
  4717  0F36                     	;# 
  4718  0F37                     	;# 
  4719  0FE4                     	;# 
  4720  0FE5                     	;# 
  4721  0FE6                     	;# 
  4722  0FE7                     	;# 
  4723  0FE8                     	;# 
  4724  0FE9                     	;# 
  4725  0FEA                     	;# 
  4726  0FEB                     	;# 
  4727  0FED                     	;# 
  4728  0FEE                     	;# 
  4729  0FEF                     	;# 
  4730  0000                     	;# 
  4731  0001                     	;# 
  4732  0002                     	;# 
  4733  0003                     	;# 
  4734  0004                     	;# 
  4735  0005                     	;# 
  4736  0006                     	;# 
  4737  0007                     	;# 
  4738  0008                     	;# 
  4739  0009                     	;# 
  4740  000A                     	;# 
  4741  000B                     	;# 
  4742  000C                     	;# 
  4743  000D                     	;# 
  4744  000E                     	;# 
  4745  0010                     	;# 
  4746  0011                     	;# 
  4747  0012                     	;# 
  4748  0013                     	;# 
  4749  0014                     	;# 
  4750  0015                     	;# 
  4751  0015                     	;# 
  4752  0016                     	;# 
  4753  0016                     	;# 
  4754  0017                     	;# 
  4755  0018                     	;# 
  4756  0019                     	;# 
  4757  0019                     	;# 
  4758  001A                     	;# 
  4759  001B                     	;# 
  4760  001C                     	;# 
  4761  001D                     	;# 
  4762  001E                     	;# 
  4763  001F                     	;# 
  4764  008C                     	;# 
  4765  008D                     	;# 
  4766  008E                     	;# 
  4767  0090                     	;# 
  4768  0091                     	;# 
  4769  0092                     	;# 
  4770  0093                     	;# 
  4771  0094                     	;# 
  4772  0097                     	;# 
  4773  009B                     	;# 
  4774  009B                     	;# 
  4775  009C                     	;# 
  4776  009D                     	;# 
  4777  009E                     	;# 
  4778  009F                     	;# 
  4779  010C                     	;# 
  4780  010D                     	;# 
  4781  010E                     	;# 
  4782  0111                     	;# 
  4783  0112                     	;# 
  4784  0113                     	;# 
  4785  0114                     	;# 
  4786  0115                     	;# 
  4787  0116                     	;# 
  4788  0117                     	;# 
  4789  0118                     	;# 
  4790  0119                     	;# 
  4791  018C                     	;# 
  4792  018D                     	;# 
  4793  018E                     	;# 
  4794  0197                     	;# 
  4795  0199                     	;# 
  4796  0199                     	;# 
  4797  0199                     	;# 
  4798  019A                     	;# 
  4799  019A                     	;# 
  4800  019A                     	;# 
  4801  019B                     	;# 
  4802  019B                     	;# 
  4803  019B                     	;# 
  4804  019B                     	;# 
  4805  019B                     	;# 
  4806  019C                     	;# 
  4807  019C                     	;# 
  4808  019C                     	;# 
  4809  019D                     	;# 
  4810  019D                     	;# 
  4811  019D                     	;# 
  4812  019E                     	;# 
  4813  019E                     	;# 
  4814  019E                     	;# 
  4815  019F                     	;# 
  4816  019F                     	;# 
  4817  019F                     	;# 
  4818  019F                     	;# 
  4819  019F                     	;# 
  4820  020C                     	;# 
  4821  020D                     	;# 
  4822  020E                     	;# 
  4823  0211                     	;# 
  4824  0211                     	;# 
  4825  0212                     	;# 
  4826  0212                     	;# 
  4827  0213                     	;# 
  4828  0213                     	;# 
  4829  0214                     	;# 
  4830  0214                     	;# 
  4831  0215                     	;# 
  4832  0215                     	;# 
  4833  0215                     	;# 
  4834  0215                     	;# 
  4835  0216                     	;# 
  4836  0216                     	;# 
  4837  0217                     	;# 
  4838  0217                     	;# 
  4839  0219                     	;# 
  4840  021A                     	;# 
  4841  021B                     	;# 
  4842  021C                     	;# 
  4843  021D                     	;# 
  4844  021D                     	;# 
  4845  021E                     	;# 
  4846  021F                     	;# 
  4847  028C                     	;# 
  4848  028D                     	;# 
  4849  028E                     	;# 
  4850  0291                     	;# 
  4851  0291                     	;# 
  4852  0292                     	;# 
  4853  0293                     	;# 
  4854  0294                     	;# 
  4855  0295                     	;# 
  4856  0295                     	;# 
  4857  0296                     	;# 
  4858  0297                     	;# 
  4859  0298                     	;# 
  4860  029F                     	;# 
  4861  030C                     	;# 
  4862  030D                     	;# 
  4863  030E                     	;# 
  4864  0311                     	;# 
  4865  0311                     	;# 
  4866  0312                     	;# 
  4867  0313                     	;# 
  4868  0314                     	;# 
  4869  0315                     	;# 
  4870  0315                     	;# 
  4871  0316                     	;# 
  4872  0317                     	;# 
  4873  0318                     	;# 
  4874  038C                     	;# 
  4875  038D                     	;# 
  4876  038E                     	;# 
  4877  0391                     	;# 
  4878  0392                     	;# 
  4879  0393                     	;# 
  4880  0394                     	;# 
  4881  0395                     	;# 
  4882  0396                     	;# 
  4883  0397                     	;# 
  4884  0398                     	;# 
  4885  0399                     	;# 
  4886  039A                     	;# 
  4887  039C                     	;# 
  4888  039D                     	;# 
  4889  039E                     	;# 
  4890  039F                     	;# 
  4891  0411                     	;# 
  4892  0411                     	;# 
  4893  0412                     	;# 
  4894  0413                     	;# 
  4895  0414                     	;# 
  4896  0415                     	;# 
  4897  0416                     	;# 
  4898  0417                     	;# 
  4899  0418                     	;# 
  4900  0418                     	;# 
  4901  0419                     	;# 
  4902  041A                     	;# 
  4903  041B                     	;# 
  4904  041C                     	;# 
  4905  041D                     	;# 
  4906  041E                     	;# 
  4907  041F                     	;# 
  4908  0498                     	;# 
  4909  0498                     	;# 
  4910  0499                     	;# 
  4911  049A                     	;# 
  4912  049B                     	;# 
  4913  049B                     	;# 
  4914  049C                     	;# 
  4915  049D                     	;# 
  4916  049E                     	;# 
  4917  049F                     	;# 
  4918  0617                     	;# 
  4919  0618                     	;# 
  4920  0619                     	;# 
  4921  0619                     	;# 
  4922  061A                     	;# 
  4923  061B                     	;# 
  4924  061C                     	;# 
  4925  061C                     	;# 
  4926  061F                     	;# 
  4927  0691                     	;# 
  4928  0692                     	;# 
  4929  0693                     	;# 
  4930  0694                     	;# 
  4931  0695                     	;# 
  4932  0696                     	;# 
  4933  0697                     	;# 
  4934  0698                     	;# 
  4935  0699                     	;# 
  4936  0711                     	;# 
  4937  0712                     	;# 
  4938  0713                     	;# 
  4939  0714                     	;# 
  4940  0715                     	;# 
  4941  0716                     	;# 
  4942  0717                     	;# 
  4943  0718                     	;# 
  4944  0719                     	;# 
  4945  0891                     	;# 
  4946  0891                     	;# 
  4947  0891                     	;# 
  4948  0891                     	;# 
  4949  0891                     	;# 
  4950  0891                     	;# 
  4951  0892                     	;# 
  4952  0892                     	;# 
  4953  0892                     	;# 
  4954  0893                     	;# 
  4955  0893                     	;# 
  4956  0893                     	;# 
  4957  0893                     	;# 
  4958  0893                     	;# 
  4959  0893                     	;# 
  4960  0894                     	;# 
  4961  0894                     	;# 
  4962  0894                     	;# 
  4963  0895                     	;# 
  4964  0895                     	;# 
  4965  0895                     	;# 
  4966  0896                     	;# 
  4967  0896                     	;# 
  4968  0896                     	;# 
  4969  089B                     	;# 
  4970  0911                     	;# 
  4971  0912                     	;# 
  4972  0913                     	;# 
  4973  0914                     	;# 
  4974  0915                     	;# 
  4975  0916                     	;# 
  4976  0918                     	;# 
  4977  0919                     	;# 
  4978  091A                     	;# 
  4979  091B                     	;# 
  4980  091C                     	;# 
  4981  091D                     	;# 
  4982  091E                     	;# 
  4983  091F                     	;# 
  4984  0E0F                     	;# 
  4985  0E10                     	;# 
  4986  0E11                     	;# 
  4987  0E12                     	;# 
  4988  0E13                     	;# 
  4989  0E14                     	;# 
  4990  0E15                     	;# 
  4991  0E16                     	;# 
  4992  0E17                     	;# 
  4993  0E18                     	;# 
  4994  0E19                     	;# 
  4995  0E1A                     	;# 
  4996  0E1B                     	;# 
  4997  0E1C                     	;# 
  4998  0E1D                     	;# 
  4999  0E1E                     	;# 
  5000  0E1F                     	;# 
  5001  0E20                     	;# 
  5002  0E21                     	;# 
  5003  0E22                     	;# 
  5004  0E24                     	;# 
  5005  0E25                     	;# 
  5006  0E28                     	;# 
  5007  0E29                     	;# 
  5008  0E2A                     	;# 
  5009  0E2B                     	;# 
  5010  0E2C                     	;# 
  5011  0E2D                     	;# 
  5012  0E2E                     	;# 
  5013  0E2F                     	;# 
  5014  0E90                     	;# 
  5015  0E91                     	;# 
  5016  0E92                     	;# 
  5017  0E94                     	;# 
  5018  0E95                     	;# 
  5019  0E9C                     	;# 
  5020  0E9D                     	;# 
  5021  0E9E                     	;# 
  5022  0E9F                     	;# 
  5023  0EA0                     	;# 
  5024  0EA1                     	;# 
  5025  0EA2                     	;# 
  5026  0EA3                     	;# 
  5027  0EA4                     	;# 
  5028  0EA5                     	;# 
  5029  0EA6                     	;# 
  5030  0EA7                     	;# 
  5031  0F0F                     	;# 
  5032  0F10                     	;# 
  5033  0F11                     	;# 
  5034  0F12                     	;# 
  5035  0F13                     	;# 
  5036  0F14                     	;# 
  5037  0F15                     	;# 
  5038  0F16                     	;# 
  5039  0F17                     	;# 
  5040  0F18                     	;# 
  5041  0F19                     	;# 
  5042  0F1A                     	;# 
  5043  0F1B                     	;# 
  5044  0F1C                     	;# 
  5045  0F1D                     	;# 
  5046  0F1E                     	;# 
  5047  0F1F                     	;# 
  5048  0F20                     	;# 
  5049  0F21                     	;# 
  5050  0F22                     	;# 
  5051  0F23                     	;# 
  5052  0F24                     	;# 
  5053  0F25                     	;# 
  5054  0F26                     	;# 
  5055  0F27                     	;# 
  5056  0F28                     	;# 
  5057  0F29                     	;# 
  5058  0F2A                     	;# 
  5059  0F2B                     	;# 
  5060  0F2C                     	;# 
  5061  0F2D                     	;# 
  5062  0F2E                     	;# 
  5063  0F2F                     	;# 
  5064  0F30                     	;# 
  5065  0F31                     	;# 
  5066  0F32                     	;# 
  5067  0F33                     	;# 
  5068  0F34                     	;# 
  5069  0F35                     	;# 
  5070  0F36                     	;# 
  5071  0F37                     	;# 
  5072  0FE4                     	;# 
  5073  0FE5                     	;# 
  5074  0FE6                     	;# 
  5075  0FE7                     	;# 
  5076  0FE8                     	;# 
  5077  0FE9                     	;# 
  5078  0FEA                     	;# 
  5079  0FEB                     	;# 
  5080  0FED                     	;# 
  5081  0FEE                     	;# 
  5082  0FEF                     	;# 
  5083  0000                     	;# 
  5084  0001                     	;# 
  5085  0002                     	;# 
  5086  0003                     	;# 
  5087  0004                     	;# 
  5088  0005                     	;# 
  5089  0006                     	;# 
  5090  0007                     	;# 
  5091  0008                     	;# 
  5092  0009                     	;# 
  5093  000A                     	;# 
  5094  000B                     	;# 
  5095  000C                     	;# 
  5096  000D                     	;# 
  5097  000E                     	;# 
  5098  0010                     	;# 
  5099  0011                     	;# 
  5100  0012                     	;# 
  5101  0013                     	;# 
  5102  0014                     	;# 
  5103  0015                     	;# 
  5104  0015                     	;# 
  5105  0016                     	;# 
  5106  0016                     	;# 
  5107  0017                     	;# 
  5108  0018                     	;# 
  5109  0019                     	;# 
  5110  0019                     	;# 
  5111  001A                     	;# 
  5112  001B                     	;# 
  5113  001C                     	;# 
  5114  001D                     	;# 
  5115  001E                     	;# 
  5116  001F                     	;# 
  5117  008C                     	;# 
  5118  008D                     	;# 
  5119  008E                     	;# 
  5120  0090                     	;# 
  5121  0091                     	;# 
  5122  0092                     	;# 
  5123  0093                     	;# 
  5124  0094                     	;# 
  5125  0097                     	;# 
  5126  009B                     	;# 
  5127  009B                     	;# 
  5128  009C                     	;# 
  5129  009D                     	;# 
  5130  009E                     	;# 
  5131  009F                     	;# 
  5132  010C                     	;# 
  5133  010D                     	;# 
  5134  010E                     	;# 
  5135  0111                     	;# 
  5136  0112                     	;# 
  5137  0113                     	;# 
  5138  0114                     	;# 
  5139  0115                     	;# 
  5140  0116                     	;# 
  5141  0117                     	;# 
  5142  0118                     	;# 
  5143  0119                     	;# 
  5144  018C                     	;# 
  5145  018D                     	;# 
  5146  018E                     	;# 
  5147  0197                     	;# 
  5148  0199                     	;# 
  5149  0199                     	;# 
  5150  0199                     	;# 
  5151  019A                     	;# 
  5152  019A                     	;# 
  5153  019A                     	;# 
  5154  019B                     	;# 
  5155  019B                     	;# 
  5156  019B                     	;# 
  5157  019B                     	;# 
  5158  019B                     	;# 
  5159  019C                     	;# 
  5160  019C                     	;# 
  5161  019C                     	;# 
  5162  019D                     	;# 
  5163  019D                     	;# 
  5164  019D                     	;# 
  5165  019E                     	;# 
  5166  019E                     	;# 
  5167  019E                     	;# 
  5168  019F                     	;# 
  5169  019F                     	;# 
  5170  019F                     	;# 
  5171  019F                     	;# 
  5172  019F                     	;# 
  5173  020C                     	;# 
  5174  020D                     	;# 
  5175  020E                     	;# 
  5176  0211                     	;# 
  5177  0211                     	;# 
  5178  0212                     	;# 
  5179  0212                     	;# 
  5180  0213                     	;# 
  5181  0213                     	;# 
  5182  0214                     	;# 
  5183  0214                     	;# 
  5184  0215                     	;# 
  5185  0215                     	;# 
  5186  0215                     	;# 
  5187  0215                     	;# 
  5188  0216                     	;# 
  5189  0216                     	;# 
  5190  0217                     	;# 
  5191  0217                     	;# 
  5192  0219                     	;# 
  5193  021A                     	;# 
  5194  021B                     	;# 
  5195  021C                     	;# 
  5196  021D                     	;# 
  5197  021D                     	;# 
  5198  021E                     	;# 
  5199  021F                     	;# 
  5200  028C                     	;# 
  5201  028D                     	;# 
  5202  028E                     	;# 
  5203  0291                     	;# 
  5204  0291                     	;# 
  5205  0292                     	;# 
  5206  0293                     	;# 
  5207  0294                     	;# 
  5208  0295                     	;# 
  5209  0295                     	;# 
  5210  0296                     	;# 
  5211  0297                     	;# 
  5212  0298                     	;# 
  5213  029F                     	;# 
  5214  030C                     	;# 
  5215  030D                     	;# 
  5216  030E                     	;# 
  5217  0311                     	;# 
  5218  0311                     	;# 
  5219  0312                     	;# 
  5220  0313                     	;# 
  5221  0314                     	;# 
  5222  0315                     	;# 
  5223  0315                     	;# 
  5224  0316                     	;# 
  5225  0317                     	;# 
  5226  0318                     	;# 
  5227  038C                     	;# 
  5228  038D                     	;# 
  5229  038E                     	;# 
  5230  0391                     	;# 
  5231  0392                     	;# 
  5232  0393                     	;# 
  5233  0394                     	;# 
  5234  0395                     	;# 
  5235  0396                     	;# 
  5236  0397                     	;# 
  5237  0398                     	;# 
  5238  0399                     	;# 
  5239  039A                     	;# 
  5240  039C                     	;# 
  5241  039D                     	;# 
  5242  039E                     	;# 
  5243  039F                     	;# 
  5244  0411                     	;# 
  5245  0411                     	;# 
  5246  0412                     	;# 
  5247  0413                     	;# 
  5248  0414                     	;# 
  5249  0415                     	;# 
  5250  0416                     	;# 
  5251  0417                     	;# 
  5252  0418                     	;# 
  5253  0418                     	;# 
  5254  0419                     	;# 
  5255  041A                     	;# 
  5256  041B                     	;# 
  5257  041C                     	;# 
  5258  041D                     	;# 
  5259  041E                     	;# 
  5260  041F                     	;# 
  5261  0498                     	;# 
  5262  0498                     	;# 
  5263  0499                     	;# 
  5264  049A                     	;# 
  5265  049B                     	;# 
  5266  049B                     	;# 
  5267  049C                     	;# 
  5268  049D                     	;# 
  5269  049E                     	;# 
  5270  049F                     	;# 
  5271  0617                     	;# 
  5272  0618                     	;# 
  5273  0619                     	;# 
  5274  0619                     	;# 
  5275  061A                     	;# 
  5276  061B                     	;# 
  5277  061C                     	;# 
  5278  061C                     	;# 
  5279  061F                     	;# 
  5280  0691                     	;# 
  5281  0692                     	;# 
  5282  0693                     	;# 
  5283  0694                     	;# 
  5284  0695                     	;# 
  5285  0696                     	;# 
  5286  0697                     	;# 
  5287  0698                     	;# 
  5288  0699                     	;# 
  5289  0711                     	;# 
  5290  0712                     	;# 
  5291  0713                     	;# 
  5292  0714                     	;# 
  5293  0715                     	;# 
  5294  0716                     	;# 
  5295  0717                     	;# 
  5296  0718                     	;# 
  5297  0719                     	;# 
  5298  0891                     	;# 
  5299  0891                     	;# 
  5300  0891                     	;# 
  5301  0891                     	;# 
  5302  0891                     	;# 
  5303  0891                     	;# 
  5304  0892                     	;# 
  5305  0892                     	;# 
  5306  0892                     	;# 
  5307  0893                     	;# 
  5308  0893                     	;# 
  5309  0893                     	;# 
  5310  0893                     	;# 
  5311  0893                     	;# 
  5312  0893                     	;# 
  5313  0894                     	;# 
  5314  0894                     	;# 
  5315  0894                     	;# 
  5316  0895                     	;# 
  5317  0895                     	;# 
  5318  0895                     	;# 
  5319  0896                     	;# 
  5320  0896                     	;# 
  5321  0896                     	;# 
  5322  089B                     	;# 
  5323  0911                     	;# 
  5324  0912                     	;# 
  5325  0913                     	;# 
  5326  0914                     	;# 
  5327  0915                     	;# 
  5328  0916                     	;# 
  5329  0918                     	;# 
  5330  0919                     	;# 
  5331  091A                     	;# 
  5332  091B                     	;# 
  5333  091C                     	;# 
  5334  091D                     	;# 
  5335  091E                     	;# 
  5336  091F                     	;# 
  5337  0E0F                     	;# 
  5338  0E10                     	;# 
  5339  0E11                     	;# 
  5340  0E12                     	;# 
  5341  0E13                     	;# 
  5342  0E14                     	;# 
  5343  0E15                     	;# 
  5344  0E16                     	;# 
  5345  0E17                     	;# 
  5346  0E18                     	;# 
  5347  0E19                     	;# 
  5348  0E1A                     	;# 
  5349  0E1B                     	;# 
  5350  0E1C                     	;# 
  5351  0E1D                     	;# 
  5352  0E1E                     	;# 
  5353  0E1F                     	;# 
  5354  0E20                     	;# 
  5355  0E21                     	;# 
  5356  0E22                     	;# 
  5357  0E24                     	;# 
  5358  0E25                     	;# 
  5359  0E28                     	;# 
  5360  0E29                     	;# 
  5361  0E2A                     	;# 
  5362  0E2B                     	;# 
  5363  0E2C                     	;# 
  5364  0E2D                     	;# 
  5365  0E2E                     	;# 
  5366  0E2F                     	;# 
  5367  0E90                     	;# 
  5368  0E91                     	;# 
  5369  0E92                     	;# 
  5370  0E94                     	;# 
  5371  0E95                     	;# 
  5372  0E9C                     	;# 
  5373  0E9D                     	;# 
  5374  0E9E                     	;# 
  5375  0E9F                     	;# 
  5376  0EA0                     	;# 
  5377  0EA1                     	;# 
  5378  0EA2                     	;# 
  5379  0EA3                     	;# 
  5380  0EA4                     	;# 
  5381  0EA5                     	;# 
  5382  0EA6                     	;# 
  5383  0EA7                     	;# 
  5384  0F0F                     	;# 
  5385  0F10                     	;# 
  5386  0F11                     	;# 
  5387  0F12                     	;# 
  5388  0F13                     	;# 
  5389  0F14                     	;# 
  5390  0F15                     	;# 
  5391  0F16                     	;# 
  5392  0F17                     	;# 
  5393  0F18                     	;# 
  5394  0F19                     	;# 
  5395  0F1A                     	;# 
  5396  0F1B                     	;# 
  5397  0F1C                     	;# 
  5398  0F1D                     	;# 
  5399  0F1E                     	;# 
  5400  0F1F                     	;# 
  5401  0F20                     	;# 
  5402  0F21                     	;# 
  5403  0F22                     	;# 
  5404  0F23                     	;# 
  5405  0F24                     	;# 
  5406  0F25                     	;# 
  5407  0F26                     	;# 
  5408  0F27                     	;# 
  5409  0F28                     	;# 
  5410  0F29                     	;# 
  5411  0F2A                     	;# 
  5412  0F2B                     	;# 
  5413  0F2C                     	;# 
  5414  0F2D                     	;# 
  5415  0F2E                     	;# 
  5416  0F2F                     	;# 
  5417  0F30                     	;# 
  5418  0F31                     	;# 
  5419  0F32                     	;# 
  5420  0F33                     	;# 
  5421  0F34                     	;# 
  5422  0F35                     	;# 
  5423  0F36                     	;# 
  5424  0F37                     	;# 
  5425  0FE4                     	;# 
  5426  0FE5                     	;# 
  5427  0FE6                     	;# 
  5428  0FE7                     	;# 
  5429  0FE8                     	;# 
  5430  0FE9                     	;# 
  5431  0FEA                     	;# 
  5432  0FEB                     	;# 
  5433  0FED                     	;# 
  5434  0FEE                     	;# 
  5435  0FEF                     	;# 
  5436  0000                     	;# 
  5437  0001                     	;# 
  5438  0002                     	;# 
  5439  0003                     	;# 
  5440  0004                     	;# 
  5441  0005                     	;# 
  5442  0006                     	;# 
  5443  0007                     	;# 
  5444  0008                     	;# 
  5445  0009                     	;# 
  5446  000A                     	;# 
  5447  000B                     	;# 
  5448  000C                     	;# 
  5449  000D                     	;# 
  5450  000E                     	;# 
  5451  0010                     	;# 
  5452  0011                     	;# 
  5453  0012                     	;# 
  5454  0013                     	;# 
  5455  0014                     	;# 
  5456  0015                     	;# 
  5457  0015                     	;# 
  5458  0016                     	;# 
  5459  0016                     	;# 
  5460  0017                     	;# 
  5461  0018                     	;# 
  5462  0019                     	;# 
  5463  0019                     	;# 
  5464  001A                     	;# 
  5465  001B                     	;# 
  5466  001C                     	;# 
  5467  001D                     	;# 
  5468  001E                     	;# 
  5469  001F                     	;# 
  5470  008C                     	;# 
  5471  008D                     	;# 
  5472  008E                     	;# 
  5473  0090                     	;# 
  5474  0091                     	;# 
  5475  0092                     	;# 
  5476  0093                     	;# 
  5477  0094                     	;# 
  5478  0097                     	;# 
  5479  009B                     	;# 
  5480  009B                     	;# 
  5481  009C                     	;# 
  5482  009D                     	;# 
  5483  009E                     	;# 
  5484  009F                     	;# 
  5485  010C                     	;# 
  5486  010D                     	;# 
  5487  010E                     	;# 
  5488  0111                     	;# 
  5489  0112                     	;# 
  5490  0113                     	;# 
  5491  0114                     	;# 
  5492  0115                     	;# 
  5493  0116                     	;# 
  5494  0117                     	;# 
  5495  0118                     	;# 
  5496  0119                     	;# 
  5497  018C                     	;# 
  5498  018D                     	;# 
  5499  018E                     	;# 
  5500  0197                     	;# 
  5501  0199                     	;# 
  5502  0199                     	;# 
  5503  0199                     	;# 
  5504  019A                     	;# 
  5505  019A                     	;# 
  5506  019A                     	;# 
  5507  019B                     	;# 
  5508  019B                     	;# 
  5509  019B                     	;# 
  5510  019B                     	;# 
  5511  019B                     	;# 
  5512  019C                     	;# 
  5513  019C                     	;# 
  5514  019C                     	;# 
  5515  019D                     	;# 
  5516  019D                     	;# 
  5517  019D                     	;# 
  5518  019E                     	;# 
  5519  019E                     	;# 
  5520  019E                     	;# 
  5521  019F                     	;# 
  5522  019F                     	;# 
  5523  019F                     	;# 
  5524  019F                     	;# 
  5525  019F                     	;# 
  5526  020C                     	;# 
  5527  020D                     	;# 
  5528  020E                     	;# 
  5529  0211                     	;# 
  5530  0211                     	;# 
  5531  0212                     	;# 
  5532  0212                     	;# 
  5533  0213                     	;# 
  5534  0213                     	;# 
  5535  0214                     	;# 
  5536  0214                     	;# 
  5537  0215                     	;# 
  5538  0215                     	;# 
  5539  0215                     	;# 
  5540  0215                     	;# 
  5541  0216                     	;# 
  5542  0216                     	;# 
  5543  0217                     	;# 
  5544  0217                     	;# 
  5545  0219                     	;# 
  5546  021A                     	;# 
  5547  021B                     	;# 
  5548  021C                     	;# 
  5549  021D                     	;# 
  5550  021D                     	;# 
  5551  021E                     	;# 
  5552  021F                     	;# 
  5553  028C                     	;# 
  5554  028D                     	;# 
  5555  028E                     	;# 
  5556  0291                     	;# 
  5557  0291                     	;# 
  5558  0292                     	;# 
  5559  0293                     	;# 
  5560  0294                     	;# 
  5561  0295                     	;# 
  5562  0295                     	;# 
  5563  0296                     	;# 
  5564  0297                     	;# 
  5565  0298                     	;# 
  5566  029F                     	;# 
  5567  030C                     	;# 
  5568  030D                     	;# 
  5569  030E                     	;# 
  5570  0311                     	;# 
  5571  0311                     	;# 
  5572  0312                     	;# 
  5573  0313                     	;# 
  5574  0314                     	;# 
  5575  0315                     	;# 
  5576  0315                     	;# 
  5577  0316                     	;# 
  5578  0317                     	;# 
  5579  0318                     	;# 
  5580  038C                     	;# 
  5581  038D                     	;# 
  5582  038E                     	;# 
  5583  0391                     	;# 
  5584  0392                     	;# 
  5585  0393                     	;# 
  5586  0394                     	;# 
  5587  0395                     	;# 
  5588  0396                     	;# 
  5589  0397                     	;# 
  5590  0398                     	;# 
  5591  0399                     	;# 
  5592  039A                     	;# 
  5593  039C                     	;# 
  5594  039D                     	;# 
  5595  039E                     	;# 
  5596  039F                     	;# 
  5597  0411                     	;# 
  5598  0411                     	;# 
  5599  0412                     	;# 
  5600  0413                     	;# 
  5601  0414                     	;# 
  5602  0415                     	;# 
  5603  0416                     	;# 
  5604  0417                     	;# 
  5605  0418                     	;# 
  5606  0418                     	;# 
  5607  0419                     	;# 
  5608  041A                     	;# 
  5609  041B                     	;# 
  5610  041C                     	;# 
  5611  041D                     	;# 
  5612  041E                     	;# 
  5613  041F                     	;# 
  5614  0498                     	;# 
  5615  0498                     	;# 
  5616  0499                     	;# 
  5617  049A                     	;# 
  5618  049B                     	;# 
  5619  049B                     	;# 
  5620  049C                     	;# 
  5621  049D                     	;# 
  5622  049E                     	;# 
  5623  049F                     	;# 
  5624  0617                     	;# 
  5625  0618                     	;# 
  5626  0619                     	;# 
  5627  0619                     	;# 
  5628  061A                     	;# 
  5629  061B                     	;# 
  5630  061C                     	;# 
  5631  061C                     	;# 
  5632  061F                     	;# 
  5633  0691                     	;# 
  5634  0692                     	;# 
  5635  0693                     	;# 
  5636  0694                     	;# 
  5637  0695                     	;# 
  5638  0696                     	;# 
  5639  0697                     	;# 
  5640  0698                     	;# 
  5641  0699                     	;# 
  5642  0711                     	;# 
  5643  0712                     	;# 
  5644  0713                     	;# 
  5645  0714                     	;# 
  5646  0715                     	;# 
  5647  0716                     	;# 
  5648  0717                     	;# 
  5649  0718                     	;# 
  5650  0719                     	;# 
  5651  0891                     	;# 
  5652  0891                     	;# 
  5653  0891                     	;# 
  5654  0891                     	;# 
  5655  0891                     	;# 
  5656  0891                     	;# 
  5657  0892                     	;# 
  5658  0892                     	;# 
  5659  0892                     	;# 
  5660  0893                     	;# 
  5661  0893                     	;# 
  5662  0893                     	;# 
  5663  0893                     	;# 
  5664  0893                     	;# 
  5665  0893                     	;# 
  5666  0894                     	;# 
  5667  0894                     	;# 
  5668  0894                     	;# 
  5669  0895                     	;# 
  5670  0895                     	;# 
  5671  0895                     	;# 
  5672  0896                     	;# 
  5673  0896                     	;# 
  5674  0896                     	;# 
  5675  089B                     	;# 
  5676  0911                     	;# 
  5677  0912                     	;# 
  5678  0913                     	;# 
  5679  0914                     	;# 
  5680  0915                     	;# 
  5681  0916                     	;# 
  5682  0918                     	;# 
  5683  0919                     	;# 
  5684  091A                     	;# 
  5685  091B                     	;# 
  5686  091C                     	;# 
  5687  091D                     	;# 
  5688  091E                     	;# 
  5689  091F                     	;# 
  5690  0E0F                     	;# 
  5691  0E10                     	;# 
  5692  0E11                     	;# 
  5693  0E12                     	;# 
  5694  0E13                     	;# 
  5695  0E14                     	;# 
  5696  0E15                     	;# 
  5697  0E16                     	;# 
  5698  0E17                     	;# 
  5699  0E18                     	;# 
  5700  0E19                     	;# 
  5701  0E1A                     	;# 
  5702  0E1B                     	;# 
  5703  0E1C                     	;# 
  5704  0E1D                     	;# 
  5705  0E1E                     	;# 
  5706  0E1F                     	;# 
  5707  0E20                     	;# 
  5708  0E21                     	;# 
  5709  0E22                     	;# 
  5710  0E24                     	;# 
  5711  0E25                     	;# 
  5712  0E28                     	;# 
  5713  0E29                     	;# 
  5714  0E2A                     	;# 
  5715  0E2B                     	;# 
  5716  0E2C                     	;# 
  5717  0E2D                     	;# 
  5718  0E2E                     	;# 
  5719  0E2F                     	;# 
  5720  0E90                     	;# 
  5721  0E91                     	;# 
  5722  0E92                     	;# 
  5723  0E94                     	;# 
  5724  0E95                     	;# 
  5725  0E9C                     	;# 
  5726  0E9D                     	;# 
  5727  0E9E                     	;# 
  5728  0E9F                     	;# 
  5729  0EA0                     	;# 
  5730  0EA1                     	;# 
  5731  0EA2                     	;# 
  5732  0EA3                     	;# 
  5733  0EA4                     	;# 
  5734  0EA5                     	;# 
  5735  0EA6                     	;# 
  5736  0EA7                     	;# 
  5737  0F0F                     	;# 
  5738  0F10                     	;# 
  5739  0F11                     	;# 
  5740  0F12                     	;# 
  5741  0F13                     	;# 
  5742  0F14                     	;# 
  5743  0F15                     	;# 
  5744  0F16                     	;# 
  5745  0F17                     	;# 
  5746  0F18                     	;# 
  5747  0F19                     	;# 
  5748  0F1A                     	;# 
  5749  0F1B                     	;# 
  5750  0F1C                     	;# 
  5751  0F1D                     	;# 
  5752  0F1E                     	;# 
  5753  0F1F                     	;# 
  5754  0F20                     	;# 
  5755  0F21                     	;# 
  5756  0F22                     	;# 
  5757  0F23                     	;# 
  5758  0F24                     	;# 
  5759  0F25                     	;# 
  5760  0F26                     	;# 
  5761  0F27                     	;# 
  5762  0F28                     	;# 
  5763  0F29                     	;# 
  5764  0F2A                     	;# 
  5765  0F2B                     	;# 
  5766  0F2C                     	;# 
  5767  0F2D                     	;# 
  5768  0F2E                     	;# 
  5769  0F2F                     	;# 
  5770  0F30                     	;# 
  5771  0F31                     	;# 
  5772  0F32                     	;# 
  5773  0F33                     	;# 
  5774  0F34                     	;# 
  5775  0F35                     	;# 
  5776  0F36                     	;# 
  5777  0F37                     	;# 
  5778  0FE4                     	;# 
  5779  0FE5                     	;# 
  5780  0FE6                     	;# 
  5781  0FE7                     	;# 
  5782  0FE8                     	;# 
  5783  0FE9                     	;# 
  5784  0FEA                     	;# 
  5785  0FEB                     	;# 
  5786  0FED                     	;# 
  5787  0FEE                     	;# 
  5788  0FEF                     	;# 
  5789  0000                     	;# 
  5790  0001                     	;# 
  5791  0002                     	;# 
  5792  0003                     	;# 
  5793  0004                     	;# 
  5794  0005                     	;# 
  5795  0006                     	;# 
  5796  0007                     	;# 
  5797  0008                     	;# 
  5798  0009                     	;# 
  5799  000A                     	;# 
  5800  000B                     	;# 
  5801  000C                     	;# 
  5802  000D                     	;# 
  5803  000E                     	;# 
  5804  0010                     	;# 
  5805  0011                     	;# 
  5806  0012                     	;# 
  5807  0013                     	;# 
  5808  0014                     	;# 
  5809  0015                     	;# 
  5810  0015                     	;# 
  5811  0016                     	;# 
  5812  0016                     	;# 
  5813  0017                     	;# 
  5814  0018                     	;# 
  5815  0019                     	;# 
  5816  0019                     	;# 
  5817  001A                     	;# 
  5818  001B                     	;# 
  5819  001C                     	;# 
  5820  001D                     	;# 
  5821  001E                     	;# 
  5822  001F                     	;# 
  5823  008C                     	;# 
  5824  008D                     	;# 
  5825  008E                     	;# 
  5826  0090                     	;# 
  5827  0091                     	;# 
  5828  0092                     	;# 
  5829  0093                     	;# 
  5830  0094                     	;# 
  5831  0097                     	;# 
  5832  009B                     	;# 
  5833  009B                     	;# 
  5834  009C                     	;# 
  5835  009D                     	;# 
  5836  009E                     	;# 
  5837  009F                     	;# 
  5838  010C                     	;# 
  5839  010D                     	;# 
  5840  010E                     	;# 
  5841  0111                     	;# 
  5842  0112                     	;# 
  5843  0113                     	;# 
  5844  0114                     	;# 
  5845  0115                     	;# 
  5846  0116                     	;# 
  5847  0117                     	;# 
  5848  0118                     	;# 
  5849  0119                     	;# 
  5850  018C                     	;# 
  5851  018D                     	;# 
  5852  018E                     	;# 
  5853  0197                     	;# 
  5854  0199                     	;# 
  5855  0199                     	;# 
  5856  0199                     	;# 
  5857  019A                     	;# 
  5858  019A                     	;# 
  5859  019A                     	;# 
  5860  019B                     	;# 
  5861  019B                     	;# 
  5862  019B                     	;# 
  5863  019B                     	;# 
  5864  019B                     	;# 
  5865  019C                     	;# 
  5866  019C                     	;# 
  5867  019C                     	;# 
  5868  019D                     	;# 
  5869  019D                     	;# 
  5870  019D                     	;# 
  5871  019E                     	;# 
  5872  019E                     	;# 
  5873  019E                     	;# 
  5874  019F                     	;# 
  5875  019F                     	;# 
  5876  019F                     	;# 
  5877  019F                     	;# 
  5878  019F                     	;# 
  5879  020C                     	;# 
  5880  020D                     	;# 
  5881  020E                     	;# 
  5882  0211                     	;# 
  5883  0211                     	;# 
  5884  0212                     	;# 
  5885  0212                     	;# 
  5886  0213                     	;# 
  5887  0213                     	;# 
  5888  0214                     	;# 
  5889  0214                     	;# 
  5890  0215                     	;# 
  5891  0215                     	;# 
  5892  0215                     	;# 
  5893  0215                     	;# 
  5894  0216                     	;# 
  5895  0216                     	;# 
  5896  0217                     	;# 
  5897  0217                     	;# 
  5898  0219                     	;# 
  5899  021A                     	;# 
  5900  021B                     	;# 
  5901  021C                     	;# 
  5902  021D                     	;# 
  5903  021D                     	;# 
  5904  021E                     	;# 
  5905  021F                     	;# 
  5906  028C                     	;# 
  5907  028D                     	;# 
  5908  028E                     	;# 
  5909  0291                     	;# 
  5910  0291                     	;# 
  5911  0292                     	;# 
  5912  0293                     	;# 
  5913  0294                     	;# 
  5914  0295                     	;# 
  5915  0295                     	;# 
  5916  0296                     	;# 
  5917  0297                     	;# 
  5918  0298                     	;# 
  5919  029F                     	;# 
  5920  030C                     	;# 
  5921  030D                     	;# 
  5922  030E                     	;# 
  5923  0311                     	;# 
  5924  0311                     	;# 
  5925  0312                     	;# 
  5926  0313                     	;# 
  5927  0314                     	;# 
  5928  0315                     	;# 
  5929  0315                     	;# 
  5930  0316                     	;# 
  5931  0317                     	;# 
  5932  0318                     	;# 
  5933  038C                     	;# 
  5934  038D                     	;# 
  5935  038E                     	;# 
  5936  0391                     	;# 
  5937  0392                     	;# 
  5938  0393                     	;# 
  5939  0394                     	;# 
  5940  0395                     	;# 
  5941  0396                     	;# 
  5942  0397                     	;# 
  5943  0398                     	;# 
  5944  0399                     	;# 
  5945  039A                     	;# 
  5946  039C                     	;# 
  5947  039D                     	;# 
  5948  039E                     	;# 
  5949  039F                     	;# 
  5950  0411                     	;# 
  5951  0411                     	;# 
  5952  0412                     	;# 
  5953  0413                     	;# 
  5954  0414                     	;# 
  5955  0415                     	;# 
  5956  0416                     	;# 
  5957  0417                     	;# 
  5958  0418                     	;# 
  5959  0418                     	;# 
  5960  0419                     	;# 
  5961  041A                     	;# 
  5962  041B                     	;# 
  5963  041C                     	;# 
  5964  041D                     	;# 
  5965  041E                     	;# 
  5966  041F                     	;# 
  5967  0498                     	;# 
  5968  0498                     	;# 
  5969  0499                     	;# 
  5970  049A                     	;# 
  5971  049B                     	;# 
  5972  049B                     	;# 
  5973  049C                     	;# 
  5974  049D                     	;# 
  5975  049E                     	;# 
  5976  049F                     	;# 
  5977  0617                     	;# 
  5978  0618                     	;# 
  5979  0619                     	;# 
  5980  0619                     	;# 
  5981  061A                     	;# 
  5982  061B                     	;# 
  5983  061C                     	;# 
  5984  061C                     	;# 
  5985  061F                     	;# 
  5986  0691                     	;# 
  5987  0692                     	;# 
  5988  0693                     	;# 
  5989  0694                     	;# 
  5990  0695                     	;# 
  5991  0696                     	;# 
  5992  0697                     	;# 
  5993  0698                     	;# 
  5994  0699                     	;# 
  5995  0711                     	;# 
  5996  0712                     	;# 
  5997  0713                     	;# 
  5998  0714                     	;# 
  5999  0715                     	;# 
  6000  0716                     	;# 
  6001  0717                     	;# 
  6002  0718                     	;# 
  6003  0719                     	;# 
  6004  0891                     	;# 
  6005  0891                     	;# 
  6006  0891                     	;# 
  6007  0891                     	;# 
  6008  0891                     	;# 
  6009  0891                     	;# 
  6010  0892                     	;# 
  6011  0892                     	;# 
  6012  0892                     	;# 
  6013  0893                     	;# 
  6014  0893                     	;# 
  6015  0893                     	;# 
  6016  0893                     	;# 
  6017  0893                     	;# 
  6018  0893                     	;# 
  6019  0894                     	;# 
  6020  0894                     	;# 
  6021  0894                     	;# 
  6022  0895                     	;# 
  6023  0895                     	;# 
  6024  0895                     	;# 
  6025  0896                     	;# 
  6026  0896                     	;# 
  6027  0896                     	;# 
  6028  089B                     	;# 
  6029  0911                     	;# 
  6030  0912                     	;# 
  6031  0913                     	;# 
  6032  0914                     	;# 
  6033  0915                     	;# 
  6034  0916                     	;# 
  6035  0918                     	;# 
  6036  0919                     	;# 
  6037  091A                     	;# 
  6038  091B                     	;# 
  6039  091C                     	;# 
  6040  091D                     	;# 
  6041  091E                     	;# 
  6042  091F                     	;# 
  6043  0E0F                     	;# 
  6044  0E10                     	;# 
  6045  0E11                     	;# 
  6046  0E12                     	;# 
  6047  0E13                     	;# 
  6048  0E14                     	;# 
  6049  0E15                     	;# 
  6050  0E16                     	;# 
  6051  0E17                     	;# 
  6052  0E18                     	;# 
  6053  0E19                     	;# 
  6054  0E1A                     	;# 
  6055  0E1B                     	;# 
  6056  0E1C                     	;# 
  6057  0E1D                     	;# 
  6058  0E1E                     	;# 
  6059  0E1F                     	;# 
  6060  0E20                     	;# 
  6061  0E21                     	;# 
  6062  0E22                     	;# 
  6063  0E24                     	;# 
  6064  0E25                     	;# 
  6065  0E28                     	;# 
  6066  0E29                     	;# 
  6067  0E2A                     	;# 
  6068  0E2B                     	;# 
  6069  0E2C                     	;# 
  6070  0E2D                     	;# 
  6071  0E2E                     	;# 
  6072  0E2F                     	;# 
  6073  0E90                     	;# 
  6074  0E91                     	;# 
  6075  0E92                     	;# 
  6076  0E94                     	;# 
  6077  0E95                     	;# 
  6078  0E9C                     	;# 
  6079  0E9D                     	;# 
  6080  0E9E                     	;# 
  6081  0E9F                     	;# 
  6082  0EA0                     	;# 
  6083  0EA1                     	;# 
  6084  0EA2                     	;# 
  6085  0EA3                     	;# 
  6086  0EA4                     	;# 
  6087  0EA5                     	;# 
  6088  0EA6                     	;# 
  6089  0EA7                     	;# 
  6090  0F0F                     	;# 
  6091  0F10                     	;# 
  6092  0F11                     	;# 
  6093  0F12                     	;# 
  6094  0F13                     	;# 
  6095  0F14                     	;# 
  6096  0F15                     	;# 
  6097  0F16                     	;# 
  6098  0F17                     	;# 
  6099  0F18                     	;# 
  6100  0F19                     	;# 
  6101  0F1A                     	;# 
  6102  0F1B                     	;# 
  6103  0F1C                     	;# 
  6104  0F1D                     	;# 
  6105  0F1E                     	;# 
  6106  0F1F                     	;# 
  6107  0F20                     	;# 
  6108  0F21                     	;# 
  6109  0F22                     	;# 
  6110  0F23                     	;# 
  6111  0F24                     	;# 
  6112  0F25                     	;# 
  6113  0F26                     	;# 
  6114  0F27                     	;# 
  6115  0F28                     	;# 
  6116  0F29                     	;# 
  6117  0F2A                     	;# 
  6118  0F2B                     	;# 
  6119  0F2C                     	;# 
  6120  0F2D                     	;# 
  6121  0F2E                     	;# 
  6122  0F2F                     	;# 
  6123  0F30                     	;# 
  6124  0F31                     	;# 
  6125  0F32                     	;# 
  6126  0F33                     	;# 
  6127  0F34                     	;# 
  6128  0F35                     	;# 
  6129  0F36                     	;# 
  6130  0F37                     	;# 
  6131  0FE4                     	;# 
  6132  0FE5                     	;# 
  6133  0FE6                     	;# 
  6134  0FE7                     	;# 
  6135  0FE8                     	;# 
  6136  0FE9                     	;# 
  6137  0FEA                     	;# 
  6138  0FEB                     	;# 
  6139  0FED                     	;# 
  6140  0FEE                     	;# 
  6141  0FEF                     	;# 
  6142  0000                     	;# 
  6143  0001                     	;# 
  6144  0002                     	;# 
  6145  0003                     	;# 
  6146  0004                     	;# 
  6147  0005                     	;# 
  6148  0006                     	;# 
  6149  0007                     	;# 
  6150  0008                     	;# 
  6151  0009                     	;# 
  6152  000A                     	;# 
  6153  000B                     	;# 
  6154  000C                     	;# 
  6155  000D                     	;# 
  6156  000E                     	;# 
  6157  0010                     	;# 
  6158  0011                     	;# 
  6159  0012                     	;# 
  6160  0013                     	;# 
  6161  0014                     	;# 
  6162  0015                     	;# 
  6163  0015                     	;# 
  6164  0016                     	;# 
  6165  0016                     	;# 
  6166  0017                     	;# 
  6167  0018                     	;# 
  6168  0019                     	;# 
  6169  0019                     	;# 
  6170  001A                     	;# 
  6171  001B                     	;# 
  6172  001C                     	;# 
  6173  001D                     	;# 
  6174  001E                     	;# 
  6175  001F                     	;# 
  6176  008C                     	;# 
  6177  008D                     	;# 
  6178  008E                     	;# 
  6179  0090                     	;# 
  6180  0091                     	;# 
  6181  0092                     	;# 
  6182  0093                     	;# 
  6183  0094                     	;# 
  6184  0097                     	;# 
  6185  009B                     	;# 
  6186  009B                     	;# 
  6187  009C                     	;# 
  6188  009D                     	;# 
  6189  009E                     	;# 
  6190  009F                     	;# 
  6191  010C                     	;# 
  6192  010D                     	;# 
  6193  010E                     	;# 
  6194  0111                     	;# 
  6195  0112                     	;# 
  6196  0113                     	;# 
  6197  0114                     	;# 
  6198  0115                     	;# 
  6199  0116                     	;# 
  6200  0117                     	;# 
  6201  0118                     	;# 
  6202  0119                     	;# 
  6203  018C                     	;# 
  6204  018D                     	;# 
  6205  018E                     	;# 
  6206  0197                     	;# 
  6207  0199                     	;# 
  6208  0199                     	;# 
  6209  0199                     	;# 
  6210  019A                     	;# 
  6211  019A                     	;# 
  6212  019A                     	;# 
  6213  019B                     	;# 
  6214  019B                     	;# 
  6215  019B                     	;# 
  6216  019B                     	;# 
  6217  019B                     	;# 
  6218  019C                     	;# 
  6219  019C                     	;# 
  6220  019C                     	;# 
  6221  019D                     	;# 
  6222  019D                     	;# 
  6223  019D                     	;# 
  6224  019E                     	;# 
  6225  019E                     	;# 
  6226  019E                     	;# 
  6227  019F                     	;# 
  6228  019F                     	;# 
  6229  019F                     	;# 
  6230  019F                     	;# 
  6231  019F                     	;# 
  6232  020C                     	;# 
  6233  020D                     	;# 
  6234  020E                     	;# 
  6235  0211                     	;# 
  6236  0211                     	;# 
  6237  0212                     	;# 
  6238  0212                     	;# 
  6239  0213                     	;# 
  6240  0213                     	;# 
  6241  0214                     	;# 
  6242  0214                     	;# 
  6243  0215                     	;# 
  6244  0215                     	;# 
  6245  0215                     	;# 
  6246  0215                     	;# 
  6247  0216                     	;# 
  6248  0216                     	;# 
  6249  0217                     	;# 
  6250  0217                     	;# 
  6251  0219                     	;# 
  6252  021A                     	;# 
  6253  021B                     	;# 
  6254  021C                     	;# 
  6255  021D                     	;# 
  6256  021D                     	;# 
  6257  021E                     	;# 
  6258  021F                     	;# 
  6259  028C                     	;# 
  6260  028D                     	;# 
  6261  028E                     	;# 
  6262  0291                     	;# 
  6263  0291                     	;# 
  6264  0292                     	;# 
  6265  0293                     	;# 
  6266  0294                     	;# 
  6267  0295                     	;# 
  6268  0295                     	;# 
  6269  0296                     	;# 
  6270  0297                     	;# 
  6271  0298                     	;# 
  6272  029F                     	;# 
  6273  030C                     	;# 
  6274  030D                     	;# 
  6275  030E                     	;# 
  6276  0311                     	;# 
  6277  0311                     	;# 
  6278  0312                     	;# 
  6279  0313                     	;# 
  6280  0314                     	;# 
  6281  0315                     	;# 
  6282  0315                     	;# 
  6283  0316                     	;# 
  6284  0317                     	;# 
  6285  0318                     	;# 
  6286  038C                     	;# 
  6287  038D                     	;# 
  6288  038E                     	;# 
  6289  0391                     	;# 
  6290  0392                     	;# 
  6291  0393                     	;# 
  6292  0394                     	;# 
  6293  0395                     	;# 
  6294  0396                     	;# 
  6295  0397                     	;# 
  6296  0398                     	;# 
  6297  0399                     	;# 
  6298  039A                     	;# 
  6299  039C                     	;# 
  6300  039D                     	;# 
  6301  039E                     	;# 
  6302  039F                     	;# 
  6303  0411                     	;# 
  6304  0411                     	;# 
  6305  0412                     	;# 
  6306  0413                     	;# 
  6307  0414                     	;# 
  6308  0415                     	;# 
  6309  0416                     	;# 
  6310  0417                     	;# 
  6311  0418                     	;# 
  6312  0418                     	;# 
  6313  0419                     	;# 
  6314  041A                     	;# 
  6315  041B                     	;# 
  6316  041C                     	;# 
  6317  041D                     	;# 
  6318  041E                     	;# 
  6319  041F                     	;# 
  6320  0498                     	;# 
  6321  0498                     	;# 
  6322  0499                     	;# 
  6323  049A                     	;# 
  6324  049B                     	;# 
  6325  049B                     	;# 
  6326  049C                     	;# 
  6327  049D                     	;# 
  6328  049E                     	;# 
  6329  049F                     	;# 
  6330  0617                     	;# 
  6331  0618                     	;# 
  6332  0619                     	;# 
  6333  0619                     	;# 
  6334  061A                     	;# 
  6335  061B                     	;# 
  6336  061C                     	;# 
  6337  061C                     	;# 
  6338  061F                     	;# 
  6339  0691                     	;# 
  6340  0692                     	;# 
  6341  0693                     	;# 
  6342  0694                     	;# 
  6343  0695                     	;# 
  6344  0696                     	;# 
  6345  0697                     	;# 
  6346  0698                     	;# 
  6347  0699                     	;# 
  6348  0711                     	;# 
  6349  0712                     	;# 
  6350  0713                     	;# 
  6351  0714                     	;# 
  6352  0715                     	;# 
  6353  0716                     	;# 
  6354  0717                     	;# 
  6355  0718                     	;# 
  6356  0719                     	;# 
  6357  0891                     	;# 
  6358  0891                     	;# 
  6359  0891                     	;# 
  6360  0891                     	;# 
  6361  0891                     	;# 
  6362  0891                     	;# 
  6363  0892                     	;# 
  6364  0892                     	;# 
  6365  0892                     	;# 
  6366  0893                     	;# 
  6367  0893                     	;# 
  6368  0893                     	;# 
  6369  0893                     	;# 
  6370  0893                     	;# 
  6371  0893                     	;# 
  6372  0894                     	;# 
  6373  0894                     	;# 
  6374  0894                     	;# 
  6375  0895                     	;# 
  6376  0895                     	;# 
  6377  0895                     	;# 
  6378  0896                     	;# 
  6379  0896                     	;# 
  6380  0896                     	;# 
  6381  089B                     	;# 
  6382  0911                     	;# 
  6383  0912                     	;# 
  6384  0913                     	;# 
  6385  0914                     	;# 
  6386  0915                     	;# 
  6387  0916                     	;# 
  6388  0918                     	;# 
  6389  0919                     	;# 
  6390  091A                     	;# 
  6391  091B                     	;# 
  6392  091C                     	;# 
  6393  091D                     	;# 
  6394  091E                     	;# 
  6395  091F                     	;# 
  6396  0E0F                     	;# 
  6397  0E10                     	;# 
  6398  0E11                     	;# 
  6399  0E12                     	;# 
  6400  0E13                     	;# 
  6401  0E14                     	;# 
  6402  0E15                     	;# 
  6403  0E16                     	;# 
  6404  0E17                     	;# 
  6405  0E18                     	;# 
  6406  0E19                     	;# 
  6407  0E1A                     	;# 
  6408  0E1B                     	;# 
  6409  0E1C                     	;# 
  6410  0E1D                     	;# 
  6411  0E1E                     	;# 
  6412  0E1F                     	;# 
  6413  0E20                     	;# 
  6414  0E21                     	;# 
  6415  0E22                     	;# 
  6416  0E24                     	;# 
  6417  0E25                     	;# 
  6418  0E28                     	;# 
  6419  0E29                     	;# 
  6420  0E2A                     	;# 
  6421  0E2B                     	;# 
  6422  0E2C                     	;# 
  6423  0E2D                     	;# 
  6424  0E2E                     	;# 
  6425  0E2F                     	;# 
  6426  0E90                     	;# 
  6427  0E91                     	;# 
  6428  0E92                     	;# 
  6429  0E94                     	;# 
  6430  0E95                     	;# 
  6431  0E9C                     	;# 
  6432  0E9D                     	;# 
  6433  0E9E                     	;# 
  6434  0E9F                     	;# 
  6435  0EA0                     	;# 
  6436  0EA1                     	;# 
  6437  0EA2                     	;# 
  6438  0EA3                     	;# 
  6439  0EA4                     	;# 
  6440  0EA5                     	;# 
  6441  0EA6                     	;# 
  6442  0EA7                     	;# 
  6443  0F0F                     	;# 
  6444  0F10                     	;# 
  6445  0F11                     	;# 
  6446  0F12                     	;# 
  6447  0F13                     	;# 
  6448  0F14                     	;# 
  6449  0F15                     	;# 
  6450  0F16                     	;# 
  6451  0F17                     	;# 
  6452  0F18                     	;# 
  6453  0F19                     	;# 
  6454  0F1A                     	;# 
  6455  0F1B                     	;# 
  6456  0F1C                     	;# 
  6457  0F1D                     	;# 
  6458  0F1E                     	;# 
  6459  0F1F                     	;# 
  6460  0F20                     	;# 
  6461  0F21                     	;# 
  6462  0F22                     	;# 
  6463  0F23                     	;# 
  6464  0F24                     	;# 
  6465  0F25                     	;# 
  6466  0F26                     	;# 
  6467  0F27                     	;# 
  6468  0F28                     	;# 
  6469  0F29                     	;# 
  6470  0F2A                     	;# 
  6471  0F2B                     	;# 
  6472  0F2C                     	;# 
  6473  0F2D                     	;# 
  6474  0F2E                     	;# 
  6475  0F2F                     	;# 
  6476  0F30                     	;# 
  6477  0F31                     	;# 
  6478  0F32                     	;# 
  6479  0F33                     	;# 
  6480  0F34                     	;# 
  6481  0F35                     	;# 
  6482  0F36                     	;# 
  6483  0F37                     	;# 
  6484  0FE4                     	;# 
  6485  0FE5                     	;# 
  6486  0FE6                     	;# 
  6487  0FE7                     	;# 
  6488  0FE8                     	;# 
  6489  0FE9                     	;# 
  6490  0FEA                     	;# 
  6491  0FEB                     	;# 
  6492  0FED                     	;# 
  6493  0FEE                     	;# 
  6494  0FEF                     	;# 
  6495  0000                     	;# 
  6496  0001                     	;# 
  6497  0002                     	;# 
  6498  0003                     	;# 
  6499  0004                     	;# 
  6500  0005                     	;# 
  6501  0006                     	;# 
  6502  0007                     	;# 
  6503  0008                     	;# 
  6504  0009                     	;# 
  6505  000A                     	;# 
  6506  000B                     	;# 
  6507  000C                     	;# 
  6508  000D                     	;# 
  6509  000E                     	;# 
  6510  0010                     	;# 
  6511  0011                     	;# 
  6512  0012                     	;# 
  6513  0013                     	;# 
  6514  0014                     	;# 
  6515  0015                     	;# 
  6516  0015                     	;# 
  6517  0016                     	;# 
  6518  0016                     	;# 
  6519  0017                     	;# 
  6520  0018                     	;# 
  6521  0019                     	;# 
  6522  0019                     	;# 
  6523  001A                     	;# 
  6524  001B                     	;# 
  6525  001C                     	;# 
  6526  001D                     	;# 
  6527  001E                     	;# 
  6528  001F                     	;# 
  6529  008C                     	;# 
  6530  008D                     	;# 
  6531  008E                     	;# 
  6532  0090                     	;# 
  6533  0091                     	;# 
  6534  0092                     	;# 
  6535  0093                     	;# 
  6536  0094                     	;# 
  6537  0097                     	;# 
  6538  009B                     	;# 
  6539  009B                     	;# 
  6540  009C                     	;# 
  6541  009D                     	;# 
  6542  009E                     	;# 
  6543  009F                     	;# 
  6544  010C                     	;# 
  6545  010D                     	;# 
  6546  010E                     	;# 
  6547  0111                     	;# 
  6548  0112                     	;# 
  6549  0113                     	;# 
  6550  0114                     	;# 
  6551  0115                     	;# 
  6552  0116                     	;# 
  6553  0117                     	;# 
  6554  0118                     	;# 
  6555  0119                     	;# 
  6556  018C                     	;# 
  6557  018D                     	;# 
  6558  018E                     	;# 
  6559  0197                     	;# 
  6560  0199                     	;# 
  6561  0199                     	;# 
  6562  0199                     	;# 
  6563  019A                     	;# 
  6564  019A                     	;# 
  6565  019A                     	;# 
  6566  019B                     	;# 
  6567  019B                     	;# 
  6568  019B                     	;# 
  6569  019B                     	;# 
  6570  019B                     	;# 
  6571  019C                     	;# 
  6572  019C                     	;# 
  6573  019C                     	;# 
  6574  019D                     	;# 
  6575  019D                     	;# 
  6576  019D                     	;# 
  6577  019E                     	;# 
  6578  019E                     	;# 
  6579  019E                     	;# 
  6580  019F                     	;# 
  6581  019F                     	;# 
  6582  019F                     	;# 
  6583  019F                     	;# 
  6584  019F                     	;# 
  6585  020C                     	;# 
  6586  020D                     	;# 
  6587  020E                     	;# 
  6588  0211                     	;# 
  6589  0211                     	;# 
  6590  0212                     	;# 
  6591  0212                     	;# 
  6592  0213                     	;# 
  6593  0213                     	;# 
  6594  0214                     	;# 
  6595  0214                     	;# 
  6596  0215                     	;# 
  6597  0215                     	;# 
  6598  0215                     	;# 
  6599  0215                     	;# 
  6600  0216                     	;# 
  6601  0216                     	;# 
  6602  0217                     	;# 
  6603  0217                     	;# 
  6604  0219                     	;# 
  6605  021A                     	;# 
  6606  021B                     	;# 
  6607  021C                     	;# 
  6608  021D                     	;# 
  6609  021D                     	;# 
  6610  021E                     	;# 
  6611  021F                     	;# 
  6612  028C                     	;# 
  6613  028D                     	;# 
  6614  028E                     	;# 
  6615  0291                     	;# 
  6616  0291                     	;# 
  6617  0292                     	;# 
  6618  0293                     	;# 
  6619  0294                     	;# 
  6620  0295                     	;# 
  6621  0295                     	;# 
  6622  0296                     	;# 
  6623  0297                     	;# 
  6624  0298                     	;# 
  6625  029F                     	;# 
  6626  030C                     	;# 
  6627  030D                     	;# 
  6628  030E                     	;# 
  6629  0311                     	;# 
  6630  0311                     	;# 
  6631  0312                     	;# 
  6632  0313                     	;# 
  6633  0314                     	;# 
  6634  0315                     	;# 
  6635  0315                     	;# 
  6636  0316                     	;# 
  6637  0317                     	;# 
  6638  0318                     	;# 
  6639  038C                     	;# 
  6640  038D                     	;# 
  6641  038E                     	;# 
  6642  0391                     	;# 
  6643  0392                     	;# 
  6644  0393                     	;# 
  6645  0394                     	;# 
  6646  0395                     	;# 
  6647  0396                     	;# 
  6648  0397                     	;# 
  6649  0398                     	;# 
  6650  0399                     	;# 
  6651  039A                     	;# 
  6652  039C                     	;# 
  6653  039D                     	;# 
  6654  039E                     	;# 
  6655  039F                     	;# 
  6656  0411                     	;# 
  6657  0411                     	;# 
  6658  0412                     	;# 
  6659  0413                     	;# 
  6660  0414                     	;# 
  6661  0415                     	;# 
  6662  0416                     	;# 
  6663  0417                     	;# 
  6664  0418                     	;# 
  6665  0418                     	;# 
  6666  0419                     	;# 
  6667  041A                     	;# 
  6668  041B                     	;# 
  6669  041C                     	;# 
  6670  041D                     	;# 
  6671  041E                     	;# 
  6672  041F                     	;# 
  6673  0498                     	;# 
  6674  0498                     	;# 
  6675  0499                     	;# 
  6676  049A                     	;# 
  6677  049B                     	;# 
  6678  049B                     	;# 
  6679  049C                     	;# 
  6680  049D                     	;# 
  6681  049E                     	;# 
  6682  049F                     	;# 
  6683  0617                     	;# 
  6684  0618                     	;# 
  6685  0619                     	;# 
  6686  0619                     	;# 
  6687  061A                     	;# 
  6688  061B                     	;# 
  6689  061C                     	;# 
  6690  061C                     	;# 
  6691  061F                     	;# 
  6692  0691                     	;# 
  6693  0692                     	;# 
  6694  0693                     	;# 
  6695  0694                     	;# 
  6696  0695                     	;# 
  6697  0696                     	;# 
  6698  0697                     	;# 
  6699  0698                     	;# 
  6700  0699                     	;# 
  6701  0711                     	;# 
  6702  0712                     	;# 
  6703  0713                     	;# 
  6704  0714                     	;# 
  6705  0715                     	;# 
  6706  0716                     	;# 
  6707  0717                     	;# 
  6708  0718                     	;# 
  6709  0719                     	;# 
  6710  0891                     	;# 
  6711  0891                     	;# 
  6712  0891                     	;# 
  6713  0891                     	;# 
  6714  0891                     	;# 
  6715  0891                     	;# 
  6716  0892                     	;# 
  6717  0892                     	;# 
  6718  0892                     	;# 
  6719  0893                     	;# 
  6720  0893                     	;# 
  6721  0893                     	;# 
  6722  0893                     	;# 
  6723  0893                     	;# 
  6724  0893                     	;# 
  6725  0894                     	;# 
  6726  0894                     	;# 
  6727  0894                     	;# 
  6728  0895                     	;# 
  6729  0895                     	;# 
  6730  0895                     	;# 
  6731  0896                     	;# 
  6732  0896                     	;# 
  6733  0896                     	;# 
  6734  089B                     	;# 
  6735  0911                     	;# 
  6736  0912                     	;# 
  6737  0913                     	;# 
  6738  0914                     	;# 
  6739  0915                     	;# 
  6740  0916                     	;# 
  6741  0918                     	;# 
  6742  0919                     	;# 
  6743  091A                     	;# 
  6744  091B                     	;# 
  6745  091C                     	;# 
  6746  091D                     	;# 
  6747  091E                     	;# 
  6748  091F                     	;# 
  6749  0E0F                     	;# 
  6750  0E10                     	;# 
  6751  0E11                     	;# 
  6752  0E12                     	;# 
  6753  0E13                     	;# 
  6754  0E14                     	;# 
  6755  0E15                     	;# 
  6756  0E16                     	;# 
  6757  0E17                     	;# 
  6758  0E18                     	;# 
  6759  0E19                     	;# 
  6760  0E1A                     	;# 
  6761  0E1B                     	;# 
  6762  0E1C                     	;# 
  6763  0E1D                     	;# 
  6764  0E1E                     	;# 
  6765  0E1F                     	;# 
  6766  0E20                     	;# 
  6767  0E21                     	;# 
  6768  0E22                     	;# 
  6769  0E24                     	;# 
  6770  0E25                     	;# 
  6771  0E28                     	;# 
  6772  0E29                     	;# 
  6773  0E2A                     	;# 
  6774  0E2B                     	;# 
  6775  0E2C                     	;# 
  6776  0E2D                     	;# 
  6777  0E2E                     	;# 
  6778  0E2F                     	;# 
  6779  0E90                     	;# 
  6780  0E91                     	;# 
  6781  0E92                     	;# 
  6782  0E94                     	;# 
  6783  0E95                     	;# 
  6784  0E9C                     	;# 
  6785  0E9D                     	;# 
  6786  0E9E                     	;# 
  6787  0E9F                     	;# 
  6788  0EA0                     	;# 
  6789  0EA1                     	;# 
  6790  0EA2                     	;# 
  6791  0EA3                     	;# 
  6792  0EA4                     	;# 
  6793  0EA5                     	;# 
  6794  0EA6                     	;# 
  6795  0EA7                     	;# 
  6796  0F0F                     	;# 
  6797  0F10                     	;# 
  6798  0F11                     	;# 
  6799  0F12                     	;# 
  6800  0F13                     	;# 
  6801  0F14                     	;# 
  6802  0F15                     	;# 
  6803  0F16                     	;# 
  6804  0F17                     	;# 
  6805  0F18                     	;# 
  6806  0F19                     	;# 
  6807  0F1A                     	;# 
  6808  0F1B                     	;# 
  6809  0F1C                     	;# 
  6810  0F1D                     	;# 
  6811  0F1E                     	;# 
  6812  0F1F                     	;# 
  6813  0F20                     	;# 
  6814  0F21                     	;# 
  6815  0F22                     	;# 
  6816  0F23                     	;# 
  6817  0F24                     	;# 
  6818  0F25                     	;# 
  6819  0F26                     	;# 
  6820  0F27                     	;# 
  6821  0F28                     	;# 
  6822  0F29                     	;# 
  6823  0F2A                     	;# 
  6824  0F2B                     	;# 
  6825  0F2C                     	;# 
  6826  0F2D                     	;# 
  6827  0F2E                     	;# 
  6828  0F2F                     	;# 
  6829  0F30                     	;# 
  6830  0F31                     	;# 
  6831  0F32                     	;# 
  6832  0F33                     	;# 
  6833  0F34                     	;# 
  6834  0F35                     	;# 
  6835  0F36                     	;# 
  6836  0F37                     	;# 
  6837  0FE4                     	;# 
  6838  0FE5                     	;# 
  6839  0FE6                     	;# 
  6840  0FE7                     	;# 
  6841  0FE8                     	;# 
  6842  0FE9                     	;# 
  6843  0FEA                     	;# 
  6844  0FEB                     	;# 
  6845  0FED                     	;# 
  6846  0FEE                     	;# 
  6847  0FEF                     	;# 
  6848  0000                     	;# 
  6849  0001                     	;# 
  6850  0002                     	;# 
  6851  0003                     	;# 
  6852  0004                     	;# 
  6853  0005                     	;# 
  6854  0006                     	;# 
  6855  0007                     	;# 
  6856  0008                     	;# 
  6857  0009                     	;# 
  6858  000A                     	;# 
  6859  000B                     	;# 
  6860  000C                     	;# 
  6861  000D                     	;# 
  6862  000E                     	;# 
  6863  0010                     	;# 
  6864  0011                     	;# 
  6865  0012                     	;# 
  6866  0013                     	;# 
  6867  0014                     	;# 
  6868  0015                     	;# 
  6869  0015                     	;# 
  6870  0016                     	;# 
  6871  0016                     	;# 
  6872  0017                     	;# 
  6873  0018                     	;# 
  6874  0019                     	;# 
  6875  0019                     	;# 
  6876  001A                     	;# 
  6877  001B                     	;# 
  6878  001C                     	;# 
  6879  001D                     	;# 
  6880  001E                     	;# 
  6881  001F                     	;# 
  6882  008C                     	;# 
  6883  008D                     	;# 
  6884  008E                     	;# 
  6885  0090                     	;# 
  6886  0091                     	;# 
  6887  0092                     	;# 
  6888  0093                     	;# 
  6889  0094                     	;# 
  6890  0097                     	;# 
  6891  009B                     	;# 
  6892  009B                     	;# 
  6893  009C                     	;# 
  6894  009D                     	;# 
  6895  009E                     	;# 
  6896  009F                     	;# 
  6897  010C                     	;# 
  6898  010D                     	;# 
  6899  010E                     	;# 
  6900  0111                     	;# 
  6901  0112                     	;# 
  6902  0113                     	;# 
  6903  0114                     	;# 
  6904  0115                     	;# 
  6905  0116                     	;# 
  6906  0117                     	;# 
  6907  0118                     	;# 
  6908  0119                     	;# 
  6909  018C                     	;# 
  6910  018D                     	;# 
  6911  018E                     	;# 
  6912  0197                     	;# 
  6913  0199                     	;# 
  6914  0199                     	;# 
  6915  0199                     	;# 
  6916  019A                     	;# 
  6917  019A                     	;# 
  6918  019A                     	;# 
  6919  019B                     	;# 
  6920  019B                     	;# 
  6921  019B                     	;# 
  6922  019B                     	;# 
  6923  019B                     	;# 
  6924  019C                     	;# 
  6925  019C                     	;# 
  6926  019C                     	;# 
  6927  019D                     	;# 
  6928  019D                     	;# 
  6929  019D                     	;# 
  6930  019E                     	;# 
  6931  019E                     	;# 
  6932  019E                     	;# 
  6933  019F                     	;# 
  6934  019F                     	;# 
  6935  019F                     	;# 
  6936  019F                     	;# 
  6937  019F                     	;# 
  6938  020C                     	;# 
  6939  020D                     	;# 
  6940  020E                     	;# 
  6941  0211                     	;# 
  6942  0211                     	;# 
  6943  0212                     	;# 
  6944  0212                     	;# 
  6945  0213                     	;# 
  6946  0213                     	;# 
  6947  0214                     	;# 
  6948  0214                     	;# 
  6949  0215                     	;# 
  6950  0215                     	;# 
  6951  0215                     	;# 
  6952  0215                     	;# 
  6953  0216                     	;# 
  6954  0216                     	;# 
  6955  0217                     	;# 
  6956  0217                     	;# 
  6957  0219                     	;# 
  6958  021A                     	;# 
  6959  021B                     	;# 
  6960  021C                     	;# 
  6961  021D                     	;# 
  6962  021D                     	;# 
  6963  021E                     	;# 
  6964  021F                     	;# 
  6965  028C                     	;# 
  6966  028D                     	;# 
  6967  028E                     	;# 
  6968  0291                     	;# 
  6969  0291                     	;# 
  6970  0292                     	;# 
  6971  0293                     	;# 
  6972  0294                     	;# 
  6973  0295                     	;# 
  6974  0295                     	;# 
  6975  0296                     	;# 
  6976  0297                     	;# 
  6977  0298                     	;# 
  6978  029F                     	;# 
  6979  030C                     	;# 
  6980  030D                     	;# 
  6981  030E                     	;# 
  6982  0311                     	;# 
  6983  0311                     	;# 
  6984  0312                     	;# 
  6985  0313                     	;# 
  6986  0314                     	;# 
  6987  0315                     	;# 
  6988  0315                     	;# 
  6989  0316                     	;# 
  6990  0317                     	;# 
  6991  0318                     	;# 
  6992  038C                     	;# 
  6993  038D                     	;# 
  6994  038E                     	;# 
  6995  0391                     	;# 
  6996  0392                     	;# 
  6997  0393                     	;# 
  6998  0394                     	;# 
  6999  0395                     	;# 
  7000  0396                     	;# 
  7001  0397                     	;# 
  7002  0398                     	;# 
  7003  0399                     	;# 
  7004  039A                     	;# 
  7005  039C                     	;# 
  7006  039D                     	;# 
  7007  039E                     	;# 
  7008  039F                     	;# 
  7009  0411                     	;# 
  7010  0411                     	;# 
  7011  0412                     	;# 
  7012  0413                     	;# 
  7013  0414                     	;# 
  7014  0415                     	;# 
  7015  0416                     	;# 
  7016  0417                     	;# 
  7017  0418                     	;# 
  7018  0418                     	;# 
  7019  0419                     	;# 
  7020  041A                     	;# 
  7021  041B                     	;# 
  7022  041C                     	;# 
  7023  041D                     	;# 
  7024  041E                     	;# 
  7025  041F                     	;# 
  7026  0498                     	;# 
  7027  0498                     	;# 
  7028  0499                     	;# 
  7029  049A                     	;# 
  7030  049B                     	;# 
  7031  049B                     	;# 
  7032  049C                     	;# 
  7033  049D                     	;# 
  7034  049E                     	;# 
  7035  049F                     	;# 
  7036  0617                     	;# 
  7037  0618                     	;# 
  7038  0619                     	;# 
  7039  0619                     	;# 
  7040  061A                     	;# 
  7041  061B                     	;# 
  7042  061C                     	;# 
  7043  061C                     	;# 
  7044  061F                     	;# 
  7045  0691                     	;# 
  7046  0692                     	;# 
  7047  0693                     	;# 
  7048  0694                     	;# 
  7049  0695                     	;# 
  7050  0696                     	;# 
  7051  0697                     	;# 
  7052  0698                     	;# 
  7053  0699                     	;# 
  7054  0711                     	;# 
  7055  0712                     	;# 
  7056  0713                     	;# 
  7057  0714                     	;# 
  7058  0715                     	;# 
  7059  0716                     	;# 
  7060  0717                     	;# 
  7061  0718                     	;# 
  7062  0719                     	;# 
  7063  0891                     	;# 
  7064  0891                     	;# 
  7065  0891                     	;# 
  7066  0891                     	;# 
  7067  0891                     	;# 
  7068  0891                     	;# 
  7069  0892                     	;# 
  7070  0892                     	;# 
  7071  0892                     	;# 
  7072  0893                     	;# 
  7073  0893                     	;# 
  7074  0893                     	;# 
  7075  0893                     	;# 
  7076  0893                     	;# 
  7077  0893                     	;# 
  7078  0894                     	;# 
  7079  0894                     	;# 
  7080  0894                     	;# 
  7081  0895                     	;# 
  7082  0895                     	;# 
  7083  0895                     	;# 
  7084  0896                     	;# 
  7085  0896                     	;# 
  7086  0896                     	;# 
  7087  089B                     	;# 
  7088  0911                     	;# 
  7089  0912                     	;# 
  7090  0913                     	;# 
  7091  0914                     	;# 
  7092  0915                     	;# 
  7093  0916                     	;# 
  7094  0918                     	;# 
  7095  0919                     	;# 
  7096  091A                     	;# 
  7097  091B                     	;# 
  7098  091C                     	;# 
  7099  091D                     	;# 
  7100  091E                     	;# 
  7101  091F                     	;# 
  7102  0E0F                     	;# 
  7103  0E10                     	;# 
  7104  0E11                     	;# 
  7105  0E12                     	;# 
  7106  0E13                     	;# 
  7107  0E14                     	;# 
  7108  0E15                     	;# 
  7109  0E16                     	;# 
  7110  0E17                     	;# 
  7111  0E18                     	;# 
  7112  0E19                     	;# 
  7113  0E1A                     	;# 
  7114  0E1B                     	;# 
  7115  0E1C                     	;# 
  7116  0E1D                     	;# 
  7117  0E1E                     	;# 
  7118  0E1F                     	;# 
  7119  0E20                     	;# 
  7120  0E21                     	;# 
  7121  0E22                     	;# 
  7122  0E24                     	;# 
  7123  0E25                     	;# 
  7124  0E28                     	;# 
  7125  0E29                     	;# 
  7126  0E2A                     	;# 
  7127  0E2B                     	;# 
  7128  0E2C                     	;# 
  7129  0E2D                     	;# 
  7130  0E2E                     	;# 
  7131  0E2F                     	;# 
  7132  0E90                     	;# 
  7133  0E91                     	;# 
  7134  0E92                     	;# 
  7135  0E94                     	;# 
  7136  0E95                     	;# 
  7137  0E9C                     	;# 
  7138  0E9D                     	;# 
  7139  0E9E                     	;# 
  7140  0E9F                     	;# 
  7141  0EA0                     	;# 
  7142  0EA1                     	;# 
  7143  0EA2                     	;# 
  7144  0EA3                     	;# 
  7145  0EA4                     	;# 
  7146  0EA5                     	;# 
  7147  0EA6                     	;# 
  7148  0EA7                     	;# 
  7149  0F0F                     	;# 
  7150  0F10                     	;# 
  7151  0F11                     	;# 
  7152  0F12                     	;# 
  7153  0F13                     	;# 
  7154  0F14                     	;# 
  7155  0F15                     	;# 
  7156  0F16                     	;# 
  7157  0F17                     	;# 
  7158  0F18                     	;# 
  7159  0F19                     	;# 
  7160  0F1A                     	;# 
  7161  0F1B                     	;# 
  7162  0F1C                     	;# 
  7163  0F1D                     	;# 
  7164  0F1E                     	;# 
  7165  0F1F                     	;# 
  7166  0F20                     	;# 
  7167  0F21                     	;# 
  7168  0F22                     	;# 
  7169  0F23                     	;# 
  7170  0F24                     	;# 
  7171  0F25                     	;# 
  7172  0F26                     	;# 
  7173  0F27                     	;# 
  7174  0F28                     	;# 
  7175  0F29                     	;# 
  7176  0F2A                     	;# 
  7177  0F2B                     	;# 
  7178  0F2C                     	;# 
  7179  0F2D                     	;# 
  7180  0F2E                     	;# 
  7181  0F2F                     	;# 
  7182  0F30                     	;# 
  7183  0F31                     	;# 
  7184  0F32                     	;# 
  7185  0F33                     	;# 
  7186  0F34                     	;# 
  7187  0F35                     	;# 
  7188  0F36                     	;# 
  7189  0F37                     	;# 
  7190  0FE4                     	;# 
  7191  0FE5                     	;# 
  7192  0FE6                     	;# 
  7193  0FE7                     	;# 
  7194  0FE8                     	;# 
  7195  0FE9                     	;# 
  7196  0FEA                     	;# 
  7197  0FEB                     	;# 
  7198  0FED                     	;# 
  7199  0FEE                     	;# 
  7200  0FEF                     	;# 
  7201                           
  7202 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
  7203  001F                     _T2CONbits	set	31
  7204  001F                     _T2CON	set	31
  7205  001D                     _TMR2	set	29
  7206  001E                     _PR2	set	30
  7207  0013                     _PIR3bits	set	19
  7208  001B                     _T1CONbits	set	27
  7209  001B                     _T1CON	set	27
  7210  0011                     _PIR1bits	set	17
  7211  0019                     _TMR1L	set	25
  7212  001A                     _TMR1H	set	26
  7213  001C                     _T1GCON	set	28
  7214  0014                     _PIR4bits	set	20
  7215  0017                     _T0CON0bits	set	23
  7216  0017                     _T0CON0	set	23
  7217  0010                     _PIR0bits	set	16
  7218  0015                     _TMR0L	set	21
  7219  0016                     _TMR0H	set	22
  7220  0018                     _T0CON1	set	24
  7221  000D                     _PORTBbits	set	13
  7222  000E                     _PORTCbits	set	14
  7223  000C                     _PORTAbits	set	12
  7224  000B                     _INTCONbits	set	11
  7225  0014                     _PIR4	set	20
  7226  0013                     _PIR3	set	19
  7227  0012                     _PIR2	set	18
  7228  0011                     _PIR1	set	17
  7229  0010                     _PIR0	set	16
  7230  008E                     _TRISC	set	142
  7231  008D                     _TRISB	set	141
  7232  008C                     _TRISA	set	140
  7233  0093                     _PIE3bits	set	147
  7234  0091                     _PIE1bits	set	145
  7235  0094                     _PIE4bits	set	148
  7236  0090                     _PIE0bits	set	144
  7237  0097                     _WDTCON	set	151
  7238  008D                     _TRISBbits	set	141
  7239  008E                     _TRISCbits	set	142
  7240  008C                     _TRISAbits	set	140
  7241  0094                     _PIE4	set	148
  7242  0093                     _PIE3	set	147
  7243  0092                     _PIE2	set	146
  7244  0091                     _PIE1	set	145
  7245  0090                     _PIE0	set	144
  7246  010E                     _LATC	set	270
  7247  010D                     _LATB	set	269
  7248  010C                     _LATA	set	268
  7249  010D                     _LATBbits	set	269
  7250  010E                     _LATCbits	set	270
  7251  010C                     _LATAbits	set	268
  7252  018C                     _ANSELA	set	396
  7253  018D                     _ANSELB	set	397
  7254  018E                     _ANSELC	set	398
  7255  0199                     _RC1REG	set	409
  7256  019D                     _RC1STAbits	set	413
  7257  019A                     _TX1REG	set	410
  7258  019E                     _TX1STAbits	set	414
  7259  019C                     _SP1BRGH	set	412
  7260  019B                     _SP1BRGL	set	411
  7261  019E                     _TX1STA	set	414
  7262  019D                     _RC1STA	set	413
  7263  019F                     _BAUD1CON	set	415
  7264  020E                     _WPUC	set	526
  7265  020C                     _WPUA	set	524
  7266  020D                     _WPUB	set	525
  7267  028E                     _ODCONC	set	654
  7268  028D                     _ODCONB	set	653
  7269  028C                     _ODCONA	set	652
  7270  0295                     _CCPR2L	set	661
  7271  0296                     _CCPR2H	set	662
  7272  0298                     _CCP2CAP	set	664
  7273  0297                     _CCP2CON	set	663
  7274  029F                     _CCPTMRSbits	set	671
  7275  0291                     _CCPR1L	set	657
  7276  0292                     _CCPR1H	set	658
  7277  0294                     _CCP1CAP	set	660
  7278  0293                     _CCP1CON	set	659
  7279  0317                     _CCP4CONbits	set	791
  7280  0315                     _CCPR4L	set	789
  7281  0316                     _CCPR4H	set	790
  7282  0317                     _CCP4CON	set	791
  7283  030E                     _SLRCONC	set	782
  7284  030D                     _SLRCONB	set	781
  7285  030C                     _SLRCONA	set	780
  7286  0311                     _CCPR3L	set	785
  7287  0312                     _CCPR3H	set	786
  7288  0314                     _CCP3CAP	set	788
  7289  0313                     _CCP3CON	set	787
  7290  038E                     _INLVLC	set	910
  7291  038D                     _INLVLB	set	909
  7292  038C                     _INLVLA	set	908
  7293  0414                     _T3GCONbits	set	1044
  7294  0413                     _T3CONbits	set	1043
  7295  0413                     _T3CON	set	1043
  7296  0411                     _TMR3L	set	1041
  7297  0412                     _TMR3H	set	1042
  7298  0414                     _T3GCON	set	1044
  7299  061F                     _PWMTMRSbits	set	1567
  7300  0617                     _PWM5DCL	set	1559
  7301  0618                     _PWM5DCH	set	1560
  7302  0619                     _PWM5CON	set	1561
  7303  0916                     _PMD5	set	2326
  7304  0915                     _PMD4	set	2325
  7305  0914                     _PMD3	set	2324
  7306  0913                     _PMD2	set	2323
  7307  0912                     _PMD1	set	2322
  7308  0911                     _PMD0	set	2321
  7309  091E                     _OSCTUNE	set	2334
  7310  091F                     _OSCFRQ	set	2335
  7311  091D                     _OSCEN	set	2333
  7312  091B                     _OSCCON3	set	2331
  7313  0919                     _OSCCON1	set	2329
  7314  48E0                     _PLLR	set	18656
  7315  0E16                     _CCP3PPS	set	3606
  7316  0E15                     _CCP2PPS	set	3605
  7317  0E14                     _CCP1PPS	set	3604
  7318  0E24                     _RXPPS	set	3620
  7319  0E9E                     _RB6PPS	set	3742
  7320  0EA1                     _RC1PPS	set	3745
  7321  0EA4                     _RC4PPS	set	3748
  7322                           
  7323                           	psect	stringtext1
  7324  1000                     __pstringtext1:
  7325  1000                     STR_2:
  7326  1000  3445               	retlw	69	;'E'
  7327  1001  3452               	retlw	82	;'R'
  7328  1002  3452               	retlw	82	;'R'
  7329  1003  344F               	retlw	79	;'O'
  7330  1004  3452               	retlw	82	;'R'
  7331  1005  343A               	retlw	58	;':'
  7332  1006  3420               	retlw	32	;' '
  7333  1007  3449               	retlw	73	;'I'
  7334  1008  346E               	retlw	110	;'n'
  7335  1009  3476               	retlw	118	;'v'
  7336  100A  3461               	retlw	97	;'a'
  7337  100B  346C               	retlw	108	;'l'
  7338  100C  3469               	retlw	105	;'i'
  7339  100D  3464               	retlw	100	;'d'
  7340  100E  3420               	retlw	32	;' '
  7341  100F  3474               	retlw	116	;'t'
  7342  1010  3472               	retlw	114	;'r'
  7343  1011  3469               	retlw	105	;'i'
  7344  1012  3467               	retlw	103	;'g'
  7345  1013  3450               	retlw	80	;'P'
  7346  1014  3469               	retlw	105	;'i'
  7347  1015  346E               	retlw	110	;'n'
  7348  1016  3420               	retlw	32	;' '
  7349  1017  3428               	retlw	40	;'('
  7350  1018  346D               	retlw	109	;'m'
  7351  1019  3475               	retlw	117	;'u'
  7352  101A  3473               	retlw	115	;'s'
  7353  101B  3474               	retlw	116	;'t'
  7354  101C  3420               	retlw	32	;' '
  7355  101D  344E               	retlw	78	;'N'
  7356  101E  344F               	retlw	79	;'O'
  7357  101F  3454               	retlw	84	;'T'
  7358  1020  3420               	retlw	32	;' '
  7359  1021  3462               	retlw	98	;'b'
  7360  1022  3465               	retlw	101	;'e'
  7361  1023  3420               	retlw	32	;' '
  7362  1024  345B               	retlw	91	;'['
  7363  1025  3441               	retlw	65	;'A'
  7364  1026  3432               	retlw	50	;'2'
  7365  1027  342C               	retlw	44	;','
  7366  1028  3420               	retlw	32	;' '
  7367  1029  3441               	retlw	65	;'A'
  7368  102A  3433               	retlw	51	;'3'
  7369  102B  342C               	retlw	44	;','
  7370  102C  3420               	retlw	32	;' '
  7371  102D  3441               	retlw	65	;'A'
  7372  102E  3434               	retlw	52	;'4'
  7373  102F  342C               	retlw	44	;','
  7374  1030  3420               	retlw	32	;' '
  7375  1031  3443               	retlw	67	;'C'
  7376  1032  3433               	retlw	51	;'3'
  7377  1033  342C               	retlw	44	;','
  7378  1034  3420               	retlw	32	;' '
  7379  1035  3443               	retlw	67	;'C'
  7380  1036  3435               	retlw	53	;'5'
  7381  1037  345D               	retlw	93	;']'
  7382  1038  3429               	retlw	41	;')'
  7383  1039  3400               	retlw	0
  7384                           
  7385                           	psect	stringtext2
  7386  103A                     __pstringtext2:
  7387  103A                     STR_1:
  7388  103A  3445               	retlw	69	;'E'
  7389  103B  3452               	retlw	82	;'R'
  7390  103C  3452               	retlw	82	;'R'
  7391  103D  344F               	retlw	79	;'O'
  7392  103E  3452               	retlw	82	;'R'
  7393  103F  343A               	retlw	58	;':'
  7394  1040  3420               	retlw	32	;' '
  7395  1041  3449               	retlw	73	;'I'
  7396  1042  346E               	retlw	110	;'n'
  7397  1043  3476               	retlw	118	;'v'
  7398  1044  3461               	retlw	97	;'a'
  7399  1045  346C               	retlw	108	;'l'
  7400  1046  3469               	retlw	105	;'i'
  7401  1047  3464               	retlw	100	;'d'
  7402  1048  3420               	retlw	32	;' '
  7403  1049  3465               	retlw	101	;'e'
  7404  104A  3463               	retlw	99	;'c'
  7405  104B  3468               	retlw	104	;'h'
  7406  104C  346F               	retlw	111	;'o'
  7407  104D  3450               	retlw	80	;'P'
  7408  104E  3469               	retlw	105	;'i'
  7409  104F  346E               	retlw	110	;'n'
  7410  1050  3420               	retlw	32	;' '
  7411  1051  3428               	retlw	40	;'('
  7412  1052  346D               	retlw	109	;'m'
  7413  1053  3475               	retlw	117	;'u'
  7414  1054  3473               	retlw	115	;'s'
  7415  1055  3474               	retlw	116	;'t'
  7416  1056  3420               	retlw	32	;' '
  7417  1057  3462               	retlw	98	;'b'
  7418  1058  3465               	retlw	101	;'e'
  7419  1059  3420               	retlw	32	;' '
  7420  105A  345B               	retlw	91	;'['
  7421  105B  3441               	retlw	65	;'A'
  7422  105C  3432               	retlw	50	;'2'
  7423  105D  342C               	retlw	44	;','
  7424  105E  3420               	retlw	32	;' '
  7425  105F  3441               	retlw	65	;'A'
  7426  1060  3434               	retlw	52	;'4'
  7427  1061  342C               	retlw	44	;','
  7428  1062  3420               	retlw	32	;' '
  7429  1063  3443               	retlw	67	;'C'
  7430  1064  3433               	retlw	51	;'3'
  7431  1065  342C               	retlw	44	;','
  7432  1066  3420               	retlw	32	;' '
  7433  1067  3443               	retlw	67	;'C'
  7434  1068  3435               	retlw	53	;'5'
  7435  1069  345D               	retlw	93	;']'
  7436  106A  3429               	retlw	41	;')'
  7437  106B  3400               	retlw	0
  7438                           
  7439                           	psect	stringtext3
  7440  106C                     __pstringtext3:
  7441  106C                     STR_3:
  7442  106C  3425               	retlw	37	;'%'
  7443  106D  3475               	retlw	117	;'u'
  7444  106E  3400               	retlw	0
  7445                           
  7446                           	psect	stringtext4
  7447  0000                     __pstringtext4:
  7448                           
  7449                           	psect	cinit
  7450  0092                     start_initialization:	
  7451                           ; #config settings
  7452                           
  7453  0092                     __initialization:
  7454                           
  7455                           ; Clear objects allocated to COMMON
  7456  0092  01FA               	clrf	__pbssCOMMON& (0+127)
  7457  0093  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  7458  0094  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  7459  0095  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  7460                           
  7461                           ; Clear objects allocated to BANK1
  7462  0096  30A0               	movlw	low __pbssBANK1
  7463  0097  0084               	movwf	4
  7464  0098  3000               	movlw	high __pbssBANK1
  7465  0099  0085               	movwf	5
  7466  009A  3039               	movlw	57
  7467  009B  3187  27FA  3180   	fcall	clear_ram0
  7468                           
  7469                           ; Clear objects allocated to BANK2
  7470  009E  3020               	movlw	low __pbssBANK2
  7471  009F  0084               	movwf	4
  7472  00A0  3001               	movlw	high __pbssBANK2
  7473  00A1  0085               	movwf	5
  7474  00A2  303E               	movlw	62
  7475  00A3  3187  27FA  3180   	fcall	clear_ram0
  7476                           
  7477                           ; Clear objects allocated to BANK3
  7478  00A6  30A0               	movlw	low __pbssBANK3
  7479  00A7  0084               	movwf	4
  7480  00A8  3001               	movlw	high __pbssBANK3
  7481  00A9  0085               	movwf	5
  7482  00AA  3020               	movlw	32
  7483  00AB  3187  27FA  3180   	fcall	clear_ram0
  7484  00AE                     end_of_initialization:	
  7485                           ;End of C runtime variable initialization code
  7486                           
  7487  00AE                     __end_of__initialization:
  7488  00AE  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7489  00AF  0020               	movlb	0
  7490  00B0  3184  2C7B         	ljmp	_main	;jump to C main() function
  7491                           
  7492                           	psect	bssCOMMON
  7493  007A                     __pbssCOMMON:
  7494  007A                     _eusartRxTail:
  7495  007A                     	ds	1
  7496  007B                     _eusartRxHead:
  7497  007B                     	ds	1
  7498  007C                     _eusartTxHead:
  7499  007C                     	ds	1
  7500  007D                     _CountCallBack:
  7501  007D                     	ds	1
  7502                           
  7503                           	psect	bssBANK1
  7504  00A0                     __pbssBANK1:
  7505  00A0                     _width:
  7506  00A0                     	ds	2
  7507  00A2                     _prec:
  7508  00A2                     	ds	2
  7509  00A4                     _flags:
  7510  00A4                     	ds	2
  7511  00A6                     _timer3ReloadVal:
  7512  00A6                     	ds	2
  7513  00A8                     _dutyCycle10bit:
  7514  00A8                     	ds	2
  7515  00AA                     _ocCount:
  7516  00AA                     	ds	2
  7517  00AC                     _EUSART_ErrorHandler:
  7518  00AC                     	ds	2
  7519  00AE                     _EUSART_OverrunErrorHandler:
  7520  00AE                     	ds	2
  7521  00B0                     _EUSART_FramingErrorHandler:
  7522  00B0                     	ds	2
  7523  00B2                     _EUSART_RxDefaultInterruptHandler:
  7524  00B2                     	ds	2
  7525  00B4                     _EUSART_TxDefaultInterruptHandler:
  7526  00B4                     	ds	2
  7527  00B6                     _timer1ReloadVal:
  7528  00B6                     	ds	2
  7529  00B8                     _lastTrig@ccp3$F979:
  7530  00B8                     	ds	2
  7531  00BA                     _ticksDown@ccp3$F977:
  7532  00BA                     	ds	2
  7533  00BC                     _ticksUp@ccp3$F976:
  7534  00BC                     	ds	2
  7535  00BE                     _CCP3_CallBack:
  7536  00BE                     	ds	2
  7537  00C0                     _lastTrig@ccp2$F858:
  7538  00C0                     	ds	2
  7539  00C2                     _ticksDown@ccp2$F856:
  7540  00C2                     	ds	2
  7541  00C4                     _ticksUp@ccp2$F855:
  7542  00C4                     	ds	2
  7543  00C6                     _CCP2_CallBack:
  7544  00C6                     	ds	2
  7545  00C8                     _lastTrig@ccp1$F716:
  7546  00C8                     	ds	2
  7547  00CA                     _ticksDown:
  7548  00CA                     	ds	2
  7549  00CC                     _ticksUp:
  7550  00CC                     	ds	2
  7551  00CE                     _CCP1_CallBack:
  7552  00CE                     	ds	2
  7553  00D0                     _lastTrig:
  7554  00D0                     	ds	2
  7555  00D2                     _eusartRxLastError:
  7556  00D2                     	ds	1
  7557  00D3                     _eusartRxCount:
  7558  00D3                     	ds	1
  7559  00D4                     _eusartTxBufferRemaining:
  7560  00D4                     	ds	1
  7561  00D5                     _eusartTxTail:
  7562  00D5                     	ds	1
  7563  00D6                     _sameSens@ccp3$F978:
  7564  00D6                     	ds	1
  7565  00D7                     _sameSens@ccp2$F857:
  7566  00D7                     	ds	1
  7567  00D8                     _sameSens:
  7568  00D8                     	ds	1
  7569                           
  7570                           	psect	bssBANK2
  7571  0120                     __pbssBANK2:
  7572  0120                     _eusartRxStatusBuffer:
  7573  0120                     	ds	8
  7574  0128                     _eusartRxBuffer:
  7575  0128                     	ds	8
  7576  0130                     _eusartTxBuffer:
  7577  0130                     	ds	8
  7578  0138                     _micros@FRT$F1518:
  7579  0138                     	ds	4
  7580  013C                     _millis:
  7581  013C                     	ds	4
  7582  0140                     _micros:
  7583  0140                     	ds	4
  7584  0144                     _nout:
  7585  0144                     	ds	2
  7586  0146                     _dutyCyclePerMilli:
  7587  0146                     	ds	2
  7588  0148                     _currFreq:
  7589  0148                     	ds	2
  7590  014A                     _TMR0_InterruptHandler:
  7591  014A                     	ds	2
  7592  014C                     _Sens3:
  7593  014C                     	ds	6
  7594  0152                     _Sens2:
  7595  0152                     	ds	6
  7596  0158                     _Sens1:
  7597  0158                     	ds	6
  7598                           
  7599                           	psect	bssBANK3
  7600  01A0                     __pbssBANK3:
  7601  01A0                     _dbuf:
  7602  01A0                     	ds	32
  7603                           
  7604                           	psect	clrtext
  7605  07FA                     clear_ram0:	
  7606                           ;	Called with FSR0 containing the base address, and
  7607                           ;	WREG with the size to clear
  7608                           
  7609  07FA  0064               	clrwdt	;clear the watchdog before getting into this loop
  7610  07FB                     clrloop0:
  7611  07FB  0180               	clrf	0	;clear RAM location pointed to by FSR
  7612  07FC  3101               	addfsr 0,1
  7613  07FD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7614  07FE  2FFB               	goto	clrloop0	;have we reached the end yet?
  7615  07FF  3400               	retlw	0	;all done for this memory range, return
  7616                           
  7617                           	psect	cstackBANK1
  7618  00D9                     __pcstackBANK1:
  7619  00D9                     ??_printf:
  7620                           
  7621                           ; 1 bytes @ 0x0
  7622  00D9                     	ds	1
  7623  00DA                     printf@ap:
  7624                           
  7625                           ; 1 bytes @ 0x1
  7626  00DA                     	ds	1
  7627  00DB                     ?_JSN_Sensor_Init:
  7628  00DB                     JSN_Sensor_Init@Sensor:	
  7629                           ; 1 bytes @ 0x2
  7630                           
  7631                           
  7632                           ; 2 bytes @ 0x2
  7633  00DB                     	ds	2
  7634  00DD                     JSN_Sensor_Init@trigPin:
  7635                           
  7636                           ; 1 bytes @ 0x4
  7637  00DD                     	ds	1
  7638  00DE                     JSN_Sensor_Init@echoPin:
  7639                           
  7640                           ; 1 bytes @ 0x5
  7641  00DE                     	ds	1
  7642  00DF                     ??_JSN_Sensor_Init:
  7643                           
  7644                           ; 1 bytes @ 0x6
  7645  00DF                     	ds	2
  7646  00E1                     ??_main:
  7647                           
  7648                           ; 1 bytes @ 0x8
  7649  00E1                     	ds	4
  7650  00E5                     main@prevMilli:
  7651                           
  7652                           ; 4 bytes @ 0xC
  7653  00E5                     	ds	4
  7654  00E9                     main@distance:
  7655                           
  7656                           ; 2 bytes @ 0x10
  7657  00E9                     	ds	2
  7658  00EB                     main@currMilli:
  7659                           
  7660                           ; 4 bytes @ 0x12
  7661  00EB                     	ds	4
  7662                           
  7663                           	psect	cstackCOMMON
  7664  0070                     __pcstackCOMMON:
  7665  0070                     ?_SYSTEM_Initialize:
  7666  0070                     ?_PMD_Initialize:	
  7667                           ; 1 bytes @ 0x0
  7668                           
  7669  0070                     ?_PIN_MANAGER_Initialize:	
  7670                           ; 1 bytes @ 0x0
  7671                           
  7672  0070                     ?_OSCILLATOR_Initialize:	
  7673                           ; 1 bytes @ 0x0
  7674                           
  7675  0070                     ?_WDT_Initialize:	
  7676                           ; 1 bytes @ 0x0
  7677                           
  7678  0070                     ?_CCP3_Initialize:	
  7679                           ; 1 bytes @ 0x0
  7680                           
  7681  0070                     ?_CCP1_Initialize:	
  7682                           ; 1 bytes @ 0x0
  7683                           
  7684  0070                     ?_TMR2_Initialize:	
  7685                           ; 1 bytes @ 0x0
  7686                           
  7687  0070                     ?_TMR0_Initialize:	
  7688                           ; 1 bytes @ 0x0
  7689                           
  7690  0070                     ?_CCP2_Initialize:	
  7691                           ; 1 bytes @ 0x0
  7692                           
  7693  0070                     ?_CCP4_Initialize:	
  7694                           ; 1 bytes @ 0x0
  7695                           
  7696  0070                     ?_TMR3_Initialize:	
  7697                           ; 1 bytes @ 0x0
  7698                           
  7699  0070                     ?_PWM5_Initialize:	
  7700                           ; 1 bytes @ 0x0
  7701                           
  7702  0070                     ?_TMR1_Initialize:	
  7703                           ; 1 bytes @ 0x0
  7704                           
  7705  0070                     ?_EUSART_Initialize:	
  7706                           ; 1 bytes @ 0x0
  7707                           
  7708  0070                     ?_TMR0_CallBack:	
  7709                           ; 1 bytes @ 0x0
  7710                           
  7711  0070                     ??_TMR0_CallBack:	
  7712                           ; 1 bytes @ 0x0
  7713                           
  7714  0070                     ?_FRT_IncMillis:	
  7715                           ; 1 bytes @ 0x0
  7716                           
  7717  0070                     ??_FRT_IncMillis:	
  7718                           ; 1 bytes @ 0x0
  7719                           
  7720  0070                     ?_FRT_IncMicros:	
  7721                           ; 1 bytes @ 0x0
  7722                           
  7723  0070                     ??_FRT_IncMicros:	
  7724                           ; 1 bytes @ 0x0
  7725                           
  7726  0070                     ?_EUSART_Receive_ISR:	
  7727                           ; 1 bytes @ 0x0
  7728                           
  7729  0070                     ?_EUSART_Transmit_ISR:	
  7730                           ; 1 bytes @ 0x0
  7731                           
  7732  0070                     ??_EUSART_Transmit_ISR:	
  7733                           ; 1 bytes @ 0x0
  7734                           
  7735  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  7736                           ; 1 bytes @ 0x0
  7737                           
  7738  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  7739                           ; 1 bytes @ 0x0
  7740                           
  7741  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  7742                           ; 1 bytes @ 0x0
  7743                           
  7744  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  7745                           ; 1 bytes @ 0x0
  7746                           
  7747  0070                     ?_EUSART_DefaultErrorHandler:	
  7748                           ; 1 bytes @ 0x0
  7749                           
  7750  0070                     ?_EUSART_RxDataHandler:	
  7751                           ; 1 bytes @ 0x0
  7752                           
  7753  0070                     ??_EUSART_RxDataHandler:	
  7754                           ; 1 bytes @ 0x0
  7755                           
  7756  0070                     ?_CCP4_CompareISR:	
  7757                           ; 1 bytes @ 0x0
  7758                           
  7759  0070                     ??_CCP4_CompareISR:	
  7760                           ; 1 bytes @ 0x0
  7761                           
  7762  0070                     ?_TMR3_ISR:	
  7763                           ; 1 bytes @ 0x0
  7764                           
  7765  0070                     ?_SpeakerTone_Off:	
  7766                           ; 1 bytes @ 0x0
  7767                           
  7768  0070                     ?_TMR3_StopTimer:	
  7769                           ; 1 bytes @ 0x0
  7770                           
  7771  0070                     ?_TMR3_Reload:	
  7772                           ; 1 bytes @ 0x0
  7773                           
  7774  0070                     ?_MotorControl_Off:	
  7775                           ; 1 bytes @ 0x0
  7776                           
  7777  0070                     ?_TMR2_StopTimer:	
  7778                           ; 1 bytes @ 0x0
  7779                           
  7780  0070                     ?_TMR2_WriteTimer:	
  7781                           ; 1 bytes @ 0x0
  7782                           
  7783  0070                     ?_PIC16_Init:	
  7784                           ; 1 bytes @ 0x0
  7785                           
  7786  0070                     ?_ReadPin:	
  7787                           ; 1 bytes @ 0x0
  7788                           
  7789  0070                     ??_ReadPin:	
  7790                           ; 1 bytes @ 0x0
  7791                           
  7792  0070                     ?_TMR0_ReadTimer:	
  7793                           ; 1 bytes @ 0x0
  7794                           
  7795  0070                     ?_TMR0_ISR:	
  7796                           ; 1 bytes @ 0x0
  7797                           
  7798  0070                     ??_TMR0_ISR:	
  7799                           ; 1 bytes @ 0x0
  7800                           
  7801  0070                     ?_TMR0_GetCallBackNum:	
  7802                           ; 1 bytes @ 0x0
  7803                           
  7804  0070                     ?_CCP1_CaptureISR:	
  7805                           ; 1 bytes @ 0x0
  7806                           
  7807  0070                     ?_CCP2_CaptureISR:	
  7808                           ; 1 bytes @ 0x0
  7809                           
  7810  0070                     ?_CCP3_CaptureISR:	
  7811                           ; 1 bytes @ 0x0
  7812                           
  7813  0070                     ?_TMR1_WriteTimer:	
  7814                           ; 1 bytes @ 0x0
  7815                           
  7816  0070                     ?_TMR1_ISR:	
  7817                           ; 1 bytes @ 0x0
  7818                           
  7819  0070                     ?_EUSART_Write:	
  7820                           ; 1 bytes @ 0x0
  7821                           
  7822  0070                     ?_putch:	
  7823                           ; 1 bytes @ 0x0
  7824                           
  7825  0070                     ?_INTERRUPT_InterruptManager:	
  7826                           ; 1 bytes @ 0x0
  7827                           
  7828  0070                     ?_SpeakerTone_Init:	
  7829                           ; 1 bytes @ 0x0
  7830                           
  7831  0070                     ?_MotorControl_Init:	
  7832                           ; 1 bytes @ 0x0
  7833                           
  7834  0070                     ?i1_TMR3_WriteTimer:	
  7835                           ; 1 bytes @ 0x0
  7836                           
  7837  0070                     ?i1_TMR3_Reload:	
  7838                           ; 1 bytes @ 0x0
  7839                           
  7840  0070                     ?_JSN_GetLastTrig:	
  7841                           ; 1 bytes @ 0x0
  7842                           
  7843  0070                     ?_main:	
  7844                           ; 2 bytes @ 0x0
  7845                           
  7846  0070                     TMR1_WriteTimer@timerVal:	
  7847                           ; 2 bytes @ 0x0
  7848                           
  7849  0070                     i1TMR3_WriteTimer@timerVal:	
  7850                           ; 2 bytes @ 0x0
  7851                           
  7852                           
  7853                           ; 2 bytes @ 0x0
  7854  0070                     	ds	1
  7855  0071                     ??_EUSART_Receive_ISR:
  7856  0071                     ??_EUSART_DefaultErrorHandler:	
  7857                           ; 1 bytes @ 0x1
  7858                           
  7859                           
  7860                           ; 1 bytes @ 0x1
  7861  0071                     	ds	1
  7862  0072                     ??_JSN_GetLastTrig:
  7863  0072                     ??_TMR3_ISR:	
  7864                           ; 1 bytes @ 0x2
  7865                           
  7866  0072                     ??_TMR1_WriteTimer:	
  7867                           ; 1 bytes @ 0x2
  7868                           
  7869  0072                     ??_TMR1_ISR:	
  7870                           ; 1 bytes @ 0x2
  7871                           
  7872  0072                     ??i1_TMR3_WriteTimer:	
  7873                           ; 1 bytes @ 0x2
  7874                           
  7875  0072                     ??i1_TMR3_Reload:	
  7876                           ; 1 bytes @ 0x2
  7877                           
  7878  0072                     ReadPin@pin:	
  7879                           ; 1 bytes @ 0x2
  7880                           
  7881                           
  7882                           ; 1 bytes @ 0x2
  7883  0072                     	ds	1
  7884  0073                     ?_CCP1_DefaultCallBack:
  7885  0073                     ?_CCP2_DefaultCallBack:	
  7886                           ; 1 bytes @ 0x3
  7887                           
  7888  0073                     ?_CCP3_DefaultCallBack:	
  7889                           ; 1 bytes @ 0x3
  7890                           
  7891  0073                     CCP1_DefaultCallBack@capturedValue:	
  7892                           ; 1 bytes @ 0x3
  7893                           
  7894  0073                     CCP2_DefaultCallBack@capturedValue:	
  7895                           ; 2 bytes @ 0x3
  7896                           
  7897  0073                     CCP3_DefaultCallBack@capturedValue:	
  7898                           ; 2 bytes @ 0x3
  7899                           
  7900                           
  7901                           ; 2 bytes @ 0x3
  7902  0073                     	ds	2
  7903  0075                     ??_CCP1_DefaultCallBack:
  7904  0075                     ??_CCP2_DefaultCallBack:	
  7905                           ; 1 bytes @ 0x5
  7906                           
  7907  0075                     ??_CCP3_DefaultCallBack:	
  7908                           ; 1 bytes @ 0x5
  7909                           
  7910                           
  7911                           ; 1 bytes @ 0x5
  7912  0075                     	ds	1
  7913  0076                     ?_JSN_SensorGetPtr:
  7914                           
  7915                           ; 2 bytes @ 0x6
  7916  0076                     	ds	1
  7917  0077                     ??_CCP1_CaptureISR:
  7918  0077                     ??_CCP2_CaptureISR:	
  7919                           ; 1 bytes @ 0x7
  7920                           
  7921  0077                     ??_CCP3_CaptureISR:	
  7922                           ; 1 bytes @ 0x7
  7923                           
  7924                           
  7925                           ; 1 bytes @ 0x7
  7926  0077                     	ds	1
  7927  0078                     CCP1_CaptureISR@module:
  7928  0078                     CCP2_CaptureISR@module:	
  7929                           ; 2 bytes @ 0x8
  7930                           
  7931  0078                     CCP3_CaptureISR@module:	
  7932                           ; 2 bytes @ 0x8
  7933                           
  7934                           
  7935                           ; 2 bytes @ 0x8
  7936  0078                     	ds	2
  7937  007A                     ??_INTERRUPT_InterruptManager:
  7938                           
  7939                           	psect	cstackBANK0
  7940  0020                     __pcstackBANK0:	
  7941                           ; 1 bytes @ 0xA
  7942                           
  7943  0020                     ?_SetPin:
  7944  0020                     ?_WritePin:	
  7945                           ; 1 bytes @ 0x0
  7946                           
  7947  0020                     ??_JSN_SensorGetPtr:	
  7948                           ; 1 bytes @ 0x0
  7949                           
  7950  0020                     ??_PMD_Initialize:	
  7951                           ; 1 bytes @ 0x0
  7952                           
  7953  0020                     ??_PIN_MANAGER_Initialize:	
  7954                           ; 1 bytes @ 0x0
  7955                           
  7956  0020                     ??_OSCILLATOR_Initialize:	
  7957                           ; 1 bytes @ 0x0
  7958                           
  7959  0020                     ??_WDT_Initialize:	
  7960                           ; 1 bytes @ 0x0
  7961                           
  7962  0020                     ??_TMR2_Initialize:	
  7963                           ; 1 bytes @ 0x0
  7964                           
  7965  0020                     ??_CCP4_Initialize:	
  7966                           ; 1 bytes @ 0x0
  7967                           
  7968  0020                     ??_TMR3_Initialize:	
  7969                           ; 1 bytes @ 0x0
  7970                           
  7971  0020                     ??_PWM5_Initialize:	
  7972                           ; 1 bytes @ 0x0
  7973                           
  7974  0020                     ??_TMR1_Initialize:	
  7975                           ; 1 bytes @ 0x0
  7976                           
  7977  0020                     ?_TMR0_SetInterruptHandler:	
  7978                           ; 1 bytes @ 0x0
  7979                           
  7980  0020                     ?_CCP1_SetCallBack:	
  7981                           ; 1 bytes @ 0x0
  7982                           
  7983  0020                     ?_CCP2_SetCallBack:	
  7984                           ; 1 bytes @ 0x0
  7985                           
  7986  0020                     ?_CCP3_SetCallBack:	
  7987                           ; 1 bytes @ 0x0
  7988                           
  7989  0020                     ?_EUSART_SetRxInterruptHandler:	
  7990                           ; 1 bytes @ 0x0
  7991                           
  7992  0020                     ?_EUSART_SetTxInterruptHandler:	
  7993                           ; 1 bytes @ 0x0
  7994                           
  7995  0020                     ?_EUSART_SetFramingErrorHandler:	
  7996                           ; 1 bytes @ 0x0
  7997                           
  7998  0020                     ?_EUSART_SetOverrunErrorHandler:	
  7999                           ; 1 bytes @ 0x0
  8000                           
  8001  0020                     ?_EUSART_SetErrorHandler:	
  8002                           ; 1 bytes @ 0x0
  8003                           
  8004  0020                     ??_TMR3_StopTimer:	
  8005                           ; 1 bytes @ 0x0
  8006                           
  8007  0020                     ??_TMR2_StopTimer:	
  8008                           ; 1 bytes @ 0x0
  8009                           
  8010  0020                     ??_TMR2_WriteTimer:	
  8011                           ; 1 bytes @ 0x0
  8012                           
  8013  0020                     ??_TMR0_ReadTimer:	
  8014                           ; 1 bytes @ 0x0
  8015                           
  8016  0020                     ??_TMR0_GetCallBackNum:	
  8017                           ; 1 bytes @ 0x0
  8018                           
  8019  0020                     ??_EUSART_Write:	
  8020                           ; 1 bytes @ 0x0
  8021                           
  8022  0020                     ?_TMR3_WriteTimer:	
  8023                           ; 1 bytes @ 0x0
  8024                           
  8025  0020                     ?_strlen:	
  8026                           ; 1 bytes @ 0x0
  8027                           
  8028  0020                     ?___wmul:	
  8029                           ; 2 bytes @ 0x0
  8030                           
  8031  0020                     ?_FRT_GetMillis:	
  8032                           ; 2 bytes @ 0x0
  8033                           
  8034  0020                     ?___lmul:	
  8035                           ; 4 bytes @ 0x0
  8036                           
  8037  0020                     ?___lodiv:	
  8038                           ; 4 bytes @ 0x0
  8039                           
  8040  0020                     ?___lomod:	
  8041                           ; 8 bytes @ 0x0
  8042                           
  8043  0020                     SetPin@io:	
  8044                           ; 8 bytes @ 0x0
  8045                           
  8046  0020                     WritePin@val:	
  8047                           ; 1 bytes @ 0x0
  8048                           
  8049  0020                     TMR2_WriteTimer@timerVal:	
  8050                           ; 1 bytes @ 0x0
  8051                           
  8052  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  8053                           ; 1 bytes @ 0x0
  8054                           
  8055  0020                     CCP1_SetCallBack@customCallBack:	
  8056                           ; 2 bytes @ 0x0
  8057                           
  8058  0020                     CCP2_SetCallBack@customCallBack:	
  8059                           ; 2 bytes @ 0x0
  8060                           
  8061  0020                     CCP3_SetCallBack@customCallBack:	
  8062                           ; 2 bytes @ 0x0
  8063                           
  8064  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  8065                           ; 2 bytes @ 0x0
  8066                           
  8067  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  8068                           ; 2 bytes @ 0x0
  8069                           
  8070  0020                     EUSART_SetErrorHandler@interruptHandler:	
  8071                           ; 2 bytes @ 0x0
  8072                           
  8073  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  8074                           ; 2 bytes @ 0x0
  8075                           
  8076  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  8077                           ; 2 bytes @ 0x0
  8078                           
  8079  0020                     TMR3_WriteTimer@timerVal:	
  8080                           ; 2 bytes @ 0x0
  8081                           
  8082  0020                     ___wmul@multiplier:	
  8083                           ; 2 bytes @ 0x0
  8084                           
  8085  0020                     ___lmul@multiplier:	
  8086                           ; 2 bytes @ 0x0
  8087                           
  8088  0020                     ___lodiv@divisor:	
  8089                           ; 4 bytes @ 0x0
  8090                           
  8091  0020                     ___lomod@divisor:	
  8092                           ; 8 bytes @ 0x0
  8093                           
  8094                           
  8095                           ; 8 bytes @ 0x0
  8096  0020                     	ds	1
  8097  0021                     ??_SetPin:
  8098  0021                     ??_WritePin:	
  8099                           ; 1 bytes @ 0x1
  8100                           
  8101  0021                     ??_MotorControl_Off:	
  8102                           ; 1 bytes @ 0x1
  8103                           
  8104  0021                     ??_MotorControl_Init:	
  8105                           ; 1 bytes @ 0x1
  8106                           
  8107  0021                     TMR0_ReadTimer@readVal:	
  8108                           ; 1 bytes @ 0x1
  8109                           
  8110  0021                     EUSART_Write@txData:	
  8111                           ; 1 bytes @ 0x1
  8112                           
  8113                           
  8114                           ; 1 bytes @ 0x1
  8115  0021                     	ds	1
  8116  0022                     ??_CCP3_Initialize:
  8117  0022                     ??_CCP1_Initialize:	
  8118                           ; 1 bytes @ 0x2
  8119                           
  8120  0022                     ??_TMR0_Initialize:	
  8121                           ; 1 bytes @ 0x2
  8122                           
  8123  0022                     ??_CCP2_Initialize:	
  8124                           ; 1 bytes @ 0x2
  8125                           
  8126  0022                     ??_EUSART_Initialize:	
  8127                           ; 1 bytes @ 0x2
  8128                           
  8129  0022                     ??_TMR0_SetInterruptHandler:	
  8130                           ; 1 bytes @ 0x2
  8131                           
  8132  0022                     ??_CCP1_SetCallBack:	
  8133                           ; 1 bytes @ 0x2
  8134                           
  8135  0022                     ??_CCP2_SetCallBack:	
  8136                           ; 1 bytes @ 0x2
  8137                           
  8138  0022                     ??_CCP3_SetCallBack:	
  8139                           ; 1 bytes @ 0x2
  8140                           
  8141  0022                     ??_EUSART_SetRxInterruptHandler:	
  8142                           ; 1 bytes @ 0x2
  8143                           
  8144  0022                     ??_EUSART_SetTxInterruptHandler:	
  8145                           ; 1 bytes @ 0x2
  8146                           
  8147  0022                     ??_EUSART_SetFramingErrorHandler:	
  8148                           ; 1 bytes @ 0x2
  8149                           
  8150  0022                     ??_EUSART_SetOverrunErrorHandler:	
  8151                           ; 1 bytes @ 0x2
  8152                           
  8153  0022                     ??_EUSART_SetErrorHandler:	
  8154                           ; 1 bytes @ 0x2
  8155                           
  8156  0022                     ??_SpeakerTone_Off:	
  8157                           ; 1 bytes @ 0x2
  8158                           
  8159  0022                     ??_TMR3_Reload:	
  8160                           ; 1 bytes @ 0x2
  8161                           
  8162  0022                     ??_strlen:	
  8163                           ; 1 bytes @ 0x2
  8164                           
  8165  0022                     ??_putch:	
  8166                           ; 1 bytes @ 0x2
  8167                           
  8168  0022                     ??_TMR3_WriteTimer:	
  8169                           ; 1 bytes @ 0x2
  8170                           
  8171  0022                     JSN_SensorGetPtr@sensNum:	
  8172                           ; 1 bytes @ 0x2
  8173                           
  8174  0022                     putch@txData:	
  8175                           ; 1 bytes @ 0x2
  8176                           
  8177  0022                     ___wmul@multiplicand:	
  8178                           ; 1 bytes @ 0x2
  8179                           
  8180                           
  8181                           ; 2 bytes @ 0x2
  8182  0022                     	ds	1
  8183  0023                     ??_SYSTEM_Initialize:
  8184  0023                     ??_PIC16_Init:	
  8185                           ; 1 bytes @ 0x3
  8186                           
  8187  0023                     ?_fputc:	
  8188                           ; 1 bytes @ 0x3
  8189                           
  8190  0023                     SetPin@pin:	
  8191                           ; 2 bytes @ 0x3
  8192                           
  8193  0023                     WritePin@pin:	
  8194                           ; 1 bytes @ 0x3
  8195                           
  8196  0023                     strlen@a:	
  8197                           ; 1 bytes @ 0x3
  8198                           
  8199  0023                     fputc@c:	
  8200                           ; 1 bytes @ 0x3
  8201                           
  8202                           
  8203                           ; 2 bytes @ 0x3
  8204  0023                     	ds	1
  8205  0024                     ??_FRT_GetMillis:
  8206  0024                     ??_SpeakerTone_Init:	
  8207                           ; 1 bytes @ 0x4
  8208                           
  8209  0024                     ??___wmul:	
  8210                           ; 1 bytes @ 0x4
  8211                           
  8212  0024                     strlen@s:	
  8213                           ; 1 bytes @ 0x4
  8214                           
  8215  0024                     ___wmul@product:	
  8216                           ; 1 bytes @ 0x4
  8217                           
  8218  0024                     ___lmul@multiplicand:	
  8219                           ; 2 bytes @ 0x4
  8220                           
  8221                           
  8222                           ; 4 bytes @ 0x4
  8223  0024                     	ds	1
  8224  0025                     fputc@fp:
  8225                           
  8226                           ; 1 bytes @ 0x5
  8227  0025                     	ds	1
  8228  0026                     ??_fputc:
  8229  0026                     ?_FRT_GetMicros:	
  8230                           ; 1 bytes @ 0x6
  8231                           
  8232                           
  8233                           ; 4 bytes @ 0x6
  8234  0026                     	ds	2
  8235  0028                     ??___lmul:
  8236  0028                     ___lmul@product:	
  8237                           ; 1 bytes @ 0x8
  8238                           
  8239  0028                     ___lodiv@dividend:	
  8240                           ; 4 bytes @ 0x8
  8241                           
  8242  0028                     ___lomod@dividend:	
  8243                           ; 8 bytes @ 0x8
  8244                           
  8245                           
  8246                           ; 8 bytes @ 0x8
  8247  0028                     	ds	2
  8248  002A                     ??_FRT_GetMicros:
  8249                           
  8250                           ; 1 bytes @ 0xA
  8251  002A                     	ds	1
  8252  002B                     ?_fputs:
  8253  002B                     fputs@fp:	
  8254                           ; 2 bytes @ 0xB
  8255                           
  8256                           
  8257                           ; 1 bytes @ 0xB
  8258  002B                     	ds	1
  8259  002C                     ??_fputs:
  8260  002C                     ?___lldiv:	
  8261                           ; 1 bytes @ 0xC
  8262                           
  8263  002C                     ___lldiv@divisor:	
  8264                           ; 4 bytes @ 0xC
  8265                           
  8266                           
  8267                           ; 4 bytes @ 0xC
  8268  002C                     	ds	3
  8269  002F                     fputs@c:
  8270                           
  8271                           ; 1 bytes @ 0xF
  8272  002F                     	ds	1
  8273  0030                     ??___lodiv:
  8274  0030                     ??___lomod:	
  8275                           ; 1 bytes @ 0x10
  8276                           
  8277  0030                     fputs@i:	
  8278                           ; 1 bytes @ 0x10
  8279                           
  8280  0030                     ___lldiv@dividend:	
  8281                           ; 2 bytes @ 0x10
  8282                           
  8283                           
  8284                           ; 4 bytes @ 0x10
  8285  0030                     	ds	1
  8286  0031                     ___lomod@counter:
  8287  0031                     ___lodiv@quotient:	
  8288                           ; 1 bytes @ 0x11
  8289                           
  8290                           
  8291                           ; 8 bytes @ 0x11
  8292  0031                     	ds	1
  8293  0032                     fputs@s:
  8294                           
  8295                           ; 1 bytes @ 0x12
  8296  0032                     	ds	1
  8297  0033                     ?_pad:
  8298  0033                     pad@buf:	
  8299                           ; 2 bytes @ 0x13
  8300                           
  8301                           
  8302                           ; 1 bytes @ 0x13
  8303  0033                     	ds	1
  8304  0034                     ??___lldiv:
  8305  0034                     pad@p:	
  8306                           ; 1 bytes @ 0x14
  8307                           
  8308                           
  8309                           ; 2 bytes @ 0x14
  8310  0034                     	ds	1
  8311  0035                     ___lldiv@quotient:
  8312                           
  8313                           ; 4 bytes @ 0x15
  8314  0035                     	ds	1
  8315  0036                     ??_pad:
  8316                           
  8317                           ; 1 bytes @ 0x16
  8318  0036                     	ds	1
  8319  0037                     pad@i:
  8320                           
  8321                           ; 2 bytes @ 0x17
  8322  0037                     	ds	1
  8323  0038                     ?_JSN_Sensor_Trig:
  8324  0038                     JSN_Sensor_Trig@Sensor:	
  8325                           ; 1 bytes @ 0x18
  8326                           
  8327                           
  8328                           ; 2 bytes @ 0x18
  8329  0038                     	ds	1
  8330  0039                     ___lldiv@counter:
  8331  0039                     ___lodiv@counter:	
  8332                           ; 1 bytes @ 0x19
  8333                           
  8334  0039                     pad@w:	
  8335                           ; 1 bytes @ 0x19
  8336                           
  8337                           
  8338                           ; 2 bytes @ 0x19
  8339  0039                     	ds	1
  8340  003A                     ??_JSN_Sensor_Trig:
  8341  003A                     ?_JSN_Sensor_GetDistance:	
  8342                           ; 1 bytes @ 0x1A
  8343                           
  8344  003A                     JSN_Sensor_GetDistance@Sensor:	
  8345                           ; 2 bytes @ 0x1A
  8346                           
  8347                           
  8348                           ; 2 bytes @ 0x1A
  8349  003A                     	ds	1
  8350  003B                     pad@fp:
  8351                           
  8352                           ; 1 bytes @ 0x1B
  8353  003B                     	ds	1
  8354  003C                     ??_JSN_Sensor_GetDistance:
  8355  003C                     ?_utoa:	
  8356                           ; 1 bytes @ 0x1C
  8357                           
  8358  003C                     utoa@d:	
  8359                           ; 2 bytes @ 0x1C
  8360                           
  8361                           
  8362                           ; 8 bytes @ 0x1C
  8363  003C                     	ds	8
  8364  0044                     ??_utoa:
  8365                           
  8366                           ; 1 bytes @ 0x24
  8367  0044                     	ds	1
  8368  0045                     utoa@p:
  8369                           
  8370                           ; 2 bytes @ 0x25
  8371  0045                     	ds	2
  8372  0047                     utoa@fp:
  8373                           
  8374                           ; 1 bytes @ 0x27
  8375  0047                     	ds	1
  8376  0048                     utoa@w:
  8377                           
  8378                           ; 2 bytes @ 0x28
  8379  0048                     	ds	2
  8380  004A                     utoa@n:
  8381                           
  8382                           ; 8 bytes @ 0x2A
  8383  004A                     	ds	8
  8384  0052                     utoa@i:
  8385                           
  8386                           ; 2 bytes @ 0x32
  8387  0052                     	ds	2
  8388  0054                     ?_vfpfcnvrt:
  8389  0054                     vfpfcnvrt@fmt:	
  8390                           ; 2 bytes @ 0x34
  8391                           
  8392                           
  8393                           ; 1 bytes @ 0x34
  8394  0054                     	ds	1
  8395  0055                     vfpfcnvrt@ap:
  8396                           
  8397                           ; 1 bytes @ 0x35
  8398  0055                     	ds	1
  8399  0056                     ??_vfpfcnvrt:
  8400                           
  8401                           ; 1 bytes @ 0x36
  8402  0056                     	ds	5
  8403  005B                     vfpfcnvrt@llu:
  8404                           
  8405                           ; 8 bytes @ 0x3B
  8406  005B                     	ds	8
  8407  0063                     vfpfcnvrt@fp:
  8408                           
  8409                           ; 1 bytes @ 0x43
  8410  0063                     	ds	1
  8411  0064                     ?_vfprintf:
  8412  0064                     vfprintf@fmt:	
  8413                           ; 2 bytes @ 0x44
  8414                           
  8415                           
  8416                           ; 2 bytes @ 0x44
  8417  0064                     	ds	2
  8418  0066                     vfprintf@ap:
  8419                           
  8420                           ; 1 bytes @ 0x46
  8421  0066                     	ds	1
  8422  0067                     ??_vfprintf:
  8423                           
  8424                           ; 1 bytes @ 0x47
  8425  0067                     	ds	2
  8426  0069                     vfprintf@fp:
  8427                           
  8428                           ; 1 bytes @ 0x49
  8429  0069                     	ds	1
  8430  006A                     vfprintf@cfmt:
  8431                           
  8432                           ; 2 bytes @ 0x4A
  8433  006A                     	ds	2
  8434  006C                     ?_printf:
  8435  006C                     printf@fmt:	
  8436                           ; 2 bytes @ 0x4C
  8437                           
  8438                           
  8439                           ; 2 bytes @ 0x4C
  8440  006C                     	ds	4
  8441                           
  8442                           	psect	maintext
  8443  047B                     __pmaintext:	
  8444 ;;
  8445 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  8446 ;;
  8447 ;; *************** function _main *****************
  8448 ;; Defined at:
  8449 ;;		line 40 in file "WCSA_MainApp.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;		None
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;  currMilli       4   18[BANK1 ] unsigned long 
  8454 ;;  prevMilli       4   12[BANK1 ] unsigned long 
  8455 ;;  distance        2   16[BANK1 ] unsigned int 
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  2  993[None  ] int 
  8458 ;; Registers used:
  8459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8460 ;; Tracked objects:
  8461 ;;		On entry : B1F/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8466 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  8467 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8468 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8469 ;;Total ram usage:       14 bytes
  8470 ;; Hardware stack levels required when called: 14
  8471 ;; This function calls:
  8472 ;;		_FRT_GetMillis
  8473 ;;		_JSN_SensorGetPtr
  8474 ;;		_JSN_Sensor_GetDistance
  8475 ;;		_JSN_Sensor_Init
  8476 ;;		_JSN_Sensor_Trig
  8477 ;;		_MotorControl_Init
  8478 ;;		_PIC16_Init
  8479 ;;		_SpeakerTone_Init
  8480 ;;		_printf
  8481 ;; This function is called by:
  8482 ;;		Startup code after reset
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486  047B                     _main:	
  8487                           ;psect for function _main
  8488                           
  8489  047B                     l4342:	
  8490                           ;incstack = 0
  8491                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8492                           
  8493                           
  8494                           ;WCSA_MainApp.c: 42:     PIC16_Init();
  8495  047B  318B  2386  3184   	fcall	_PIC16_Init
  8496  047E                     l4344:
  8497                           
  8498                           ;WCSA_MainApp.c: 43:     JSN_Sensor_Init(JSN_SensorGetPtr(1), C6, C5);
  8499  047E  3001               	movlw	1
  8500  047F  318D  2521  3184   	fcall	_JSN_SensorGetPtr
  8501  0482  0877               	movf	?_JSN_SensorGetPtr+1,w
  8502  0483  0021               	movlb	1	; select bank1
  8503  0484  00DC               	movwf	(JSN_Sensor_Init@Sensor+1)^(0+128)
  8504  0485  0876               	movf	?_JSN_SensorGetPtr,w
  8505  0486  00DB               	movwf	JSN_Sensor_Init@Sensor^(0+128)
  8506  0487  3006               	movlw	6
  8507  0488  00E1               	movwf	??_main^(0+128)
  8508  0489  0861               	movf	??_main^(0+128),w
  8509  048A  00DD               	movwf	JSN_Sensor_Init@trigPin^(0+128)
  8510  048B  3003               	movlw	3
  8511  048C  00E2               	movwf	(??_main+1)^(0+128)
  8512  048D  0862               	movf	(??_main+1)^(0+128),w
  8513  048E  00DE               	movwf	JSN_Sensor_Init@echoPin^(0+128)
  8514  048F  3183  23DA  3184   	fcall	_JSN_Sensor_Init
  8515  0492                     l4346:
  8516                           
  8517                           ;WCSA_MainApp.c: 44:     SpeakerTone_Init();
  8518  0492  318C  2466  3184   	fcall	_SpeakerTone_Init
  8519  0495                     l4348:
  8520                           
  8521                           ;WCSA_MainApp.c: 45:     MotorControl_Init();
  8522  0495  318B  2304  3184   	fcall	_MotorControl_Init
  8523  0498                     l4350:
  8524  0498                     l4352:
  8525  0498                     l4354:
  8526  0498                     l4356:
  8527                           
  8528                           ;WCSA_MainApp.c: 58:     JSN_Sensor_Trig(JSN_SensorGetPtr(1));
  8529  0498  3001               	movlw	1
  8530  0499  318D  2521  3184   	fcall	_JSN_SensorGetPtr
  8531  049C  0877               	movf	?_JSN_SensorGetPtr+1,w
  8532  049D  0020               	movlb	0	; select bank0
  8533  049E  00B9               	movwf	JSN_Sensor_Trig@Sensor+1
  8534  049F  0876               	movf	?_JSN_SensorGetPtr,w
  8535  04A0  00B8               	movwf	JSN_Sensor_Trig@Sensor
  8536  04A1  3186  26FC  3184   	fcall	_JSN_Sensor_Trig
  8537  04A4                     l4358:
  8538                           
  8539                           ;WCSA_MainApp.c: 59:     currMilli = FRT_GetMillis();
  8540  04A4  318B  2353  3184   	fcall	_FRT_GetMillis
  8541  04A7  0020               	movlb	0	; select bank0
  8542  04A8  0823               	movf	?_FRT_GetMillis+3,w
  8543  04A9  0021               	movlb	1	; select bank1
  8544  04AA  00EE               	movwf	(main@currMilli+3)^(0+128)
  8545  04AB  0020               	movlb	0	; select bank0
  8546  04AC  0822               	movf	?_FRT_GetMillis+2,w
  8547  04AD  0021               	movlb	1	; select bank1
  8548  04AE  00ED               	movwf	(main@currMilli+2)^(0+128)
  8549  04AF  0020               	movlb	0	; select bank0
  8550  04B0  0821               	movf	?_FRT_GetMillis+1,w
  8551  04B1  0021               	movlb	1	; select bank1
  8552  04B2  00EC               	movwf	(main@currMilli+1)^(0+128)
  8553  04B3  0020               	movlb	0	; select bank0
  8554  04B4  0820               	movf	?_FRT_GetMillis,w
  8555  04B5  0021               	movlb	1	; select bank1
  8556  04B6  00EB               	movwf	main@currMilli^(0+128)
  8557  04B7                     l4360:
  8558                           
  8559                           ;WCSA_MainApp.c: 60:     prevMilli = currMilli;
  8560  04B7  0021               	movlb	1	; select bank1
  8561  04B8  086E               	movf	(main@currMilli+3)^(0+128),w
  8562  04B9  00E8               	movwf	(main@prevMilli+3)^(0+128)
  8563  04BA  086D               	movf	(main@currMilli+2)^(0+128),w
  8564  04BB  00E7               	movwf	(main@prevMilli+2)^(0+128)
  8565  04BC  086C               	movf	(main@currMilli+1)^(0+128),w
  8566  04BD  00E6               	movwf	(main@prevMilli+1)^(0+128)
  8567  04BE  086B               	movf	main@currMilli^(0+128),w
  8568  04BF  00E5               	movwf	main@prevMilli^(0+128)
  8569  04C0                     l4362:
  8570                           
  8571                           ;WCSA_MainApp.c: 64:         currMilli = FRT_GetMillis();
  8572  04C0  318B  2353  3184   	fcall	_FRT_GetMillis
  8573  04C3  0020               	movlb	0	; select bank0
  8574  04C4  0823               	movf	?_FRT_GetMillis+3,w
  8575  04C5  0021               	movlb	1	; select bank1
  8576  04C6  00EE               	movwf	(main@currMilli+3)^(0+128)
  8577  04C7  0020               	movlb	0	; select bank0
  8578  04C8  0822               	movf	?_FRT_GetMillis+2,w
  8579  04C9  0021               	movlb	1	; select bank1
  8580  04CA  00ED               	movwf	(main@currMilli+2)^(0+128)
  8581  04CB  0020               	movlb	0	; select bank0
  8582  04CC  0821               	movf	?_FRT_GetMillis+1,w
  8583  04CD  0021               	movlb	1	; select bank1
  8584  04CE  00EC               	movwf	(main@currMilli+1)^(0+128)
  8585  04CF  0020               	movlb	0	; select bank0
  8586  04D0  0820               	movf	?_FRT_GetMillis,w
  8587  04D1  0021               	movlb	1	; select bank1
  8588  04D2  00EB               	movwf	main@currMilli^(0+128)
  8589  04D3                     l4364:
  8590                           
  8591                           ;WCSA_MainApp.c: 67:         if ((currMilli - prevMilli) >= 50) {
  8592  04D3  0865               	movf	main@prevMilli^(0+128),w
  8593  04D4  026B               	subwf	main@currMilli^(0+128),w
  8594  04D5  00E1               	movwf	??_main^(0+128)
  8595  04D6  0866               	movf	(main@prevMilli+1)^(0+128),w
  8596  04D7  3B6C               	subwfb	(main@currMilli+1)^(0+128),w
  8597  04D8  00E2               	movwf	(??_main^(0+128)+1)
  8598  04D9  0867               	movf	(main@prevMilli+2)^(0+128),w
  8599  04DA  3B6D               	subwfb	(main@currMilli+2)^(0+128),w
  8600  04DB  00E3               	movwf	(??_main^(0+128)+2)
  8601  04DC  0868               	movf	(main@prevMilli+3)^(0+128),w
  8602  04DD  3B6E               	subwfb	(main@currMilli+3)^(0+128),w
  8603  04DE  00E4               	movwf	(??_main^(0+128)+3)
  8604  04DF  0864               	movf	(??_main^(0+128)+3),w
  8605  04E0  1D03               	btfss	3,2
  8606  04E1  2CEE               	goto	u1730
  8607  04E2  0863               	movf	(??_main^(0+128)+2),w
  8608  04E3  1D03               	btfss	3,2
  8609  04E4  2CEE               	goto	u1730
  8610  04E5  0862               	movf	(??_main^(0+128)+1),w
  8611  04E6  1D03               	btfss	3,2
  8612  04E7  2CEE               	goto	u1730
  8613  04E8  3032               	movlw	50
  8614  04E9  0261               	subwf	??_main^(0+128),w
  8615  04EA  1C03               	btfss	3,0
  8616  04EB  2CED               	goto	u1731
  8617  04EC  2CEE               	goto	u1730
  8618  04ED                     u1731:
  8619  04ED  2CC0               	goto	l4362
  8620  04EE                     u1730:
  8621  04EE                     l4366:
  8622                           
  8623                           ;WCSA_MainApp.c: 68:             distance = JSN_Sensor_GetDistance(JSN_SensorGetPtr(1));
  8624  04EE  3001               	movlw	1
  8625  04EF  318D  2521  3184   	fcall	_JSN_SensorGetPtr
  8626  04F2  0877               	movf	?_JSN_SensorGetPtr+1,w
  8627  04F3  0020               	movlb	0	; select bank0
  8628  04F4  00BB               	movwf	JSN_Sensor_GetDistance@Sensor+1
  8629  04F5  0876               	movf	?_JSN_SensorGetPtr,w
  8630  04F6  00BA               	movwf	JSN_Sensor_GetDistance@Sensor
  8631  04F7  318F  2735  3184   	fcall	_JSN_Sensor_GetDistance
  8632  04FA  0020               	movlb	0	; select bank0
  8633  04FB  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  8634  04FC  0021               	movlb	1	; select bank1
  8635  04FD  00EA               	movwf	(main@distance+1)^(0+128)
  8636  04FE  0020               	movlb	0	; select bank0
  8637  04FF  083A               	movf	?_JSN_Sensor_GetDistance,w
  8638  0500  0021               	movlb	1	; select bank1
  8639  0501  00E9               	movwf	main@distance^(0+128)
  8640                           
  8641                           ;WCSA_MainApp.c: 69:             printf("%u", distance);
  8642  0502  306C               	movlw	low (STR_3| (0+32768))
  8643  0503  0020               	movlb	0	; select bank0
  8644  0504  00EC               	movwf	printf@fmt
  8645  0505  3090               	movlw	high (STR_3| (0+32768))
  8646  0506  00ED               	movwf	printf@fmt+1
  8647  0507  0021               	movlb	1	; select bank1
  8648  0508  086A               	movf	(main@distance+1)^(0+128),w
  8649  0509  0020               	movlb	0	; select bank0
  8650  050A  00EF               	movwf	?_printf+3
  8651  050B  0021               	movlb	1	; select bank1
  8652  050C  0869               	movf	main@distance^(0+128),w
  8653  050D  0020               	movlb	0	; select bank0
  8654  050E  00EE               	movwf	?_printf+2
  8655  050F  318B  2398  3184   	fcall	_printf
  8656  0512  2CB7               	goto	l4360
  8657  0513  3180  2890         	ljmp	start
  8658  0515                     __end_of_main:
  8659                           
  8660                           	psect	text1
  8661  0C66                     __ptext1:	
  8662 ;; *************** function _SpeakerTone_Init *****************
  8663 ;; Defined at:
  8664 ;;		line 35 in file "SpeakerTone.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;		None
  8667 ;; Auto vars:     Size  Location     Type
  8668 ;;		None
  8669 ;; Return value:  Size  Location     Type
  8670 ;;                  1    wreg      void 
  8671 ;; Registers used:
  8672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8673 ;; Tracked objects:
  8674 ;;		On entry : 0/0
  8675 ;;		On exit  : 0/0
  8676 ;;		Unchanged: 0/0
  8677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8682 ;;Total ram usage:        0 bytes
  8683 ;; Hardware stack levels used: 1
  8684 ;; Hardware stack levels required when called: 7
  8685 ;; This function calls:
  8686 ;;		_SetPin
  8687 ;;		_SpeakerTone_Off
  8688 ;;		_WritePin
  8689 ;; This function is called by:
  8690 ;;		_main
  8691 ;; This function uses a non-reentrant model
  8692 ;;
  8693                           
  8694  0C66                     _SpeakerTone_Init:	
  8695                           ;psect for function _SpeakerTone_Init
  8696                           
  8697  0C66                     l4242:	
  8698                           ;incstack = 0
  8699                           ; Regs used in _SpeakerTone_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8700                           
  8701                           
  8702                           ;SpeakerTone.c: 37:     SetPin(C1, 0);
  8703  0C66  0020               	movlb	0	; select bank0
  8704  0C67  01A0               	clrf	SetPin@io
  8705  0C68  300D               	movlw	13
  8706  0C69  3183  231F  318C   	fcall	_SetPin
  8707                           
  8708                           ;SpeakerTone.c: 38:     WritePin(C1, 0);
  8709  0C6C  0020               	movlb	0	; select bank0
  8710  0C6D  01A0               	clrf	WritePin@val
  8711  0C6E  300D               	movlw	13
  8712  0C6F  3182  2264  318C   	fcall	_WritePin
  8713  0C72                     l4244:
  8714                           
  8715                           ;SpeakerTone.c: 41:     currFreq = 440;
  8716  0C72  30B8               	movlw	184
  8717  0C73  0022               	movlb	2	; select bank2
  8718  0C74  00C8               	movwf	_currFreq^(0+256)
  8719  0C75  3001               	movlw	1
  8720  0C76  00C9               	movwf	(_currFreq^(0+256)+1)
  8721  0C77                     l4246:
  8722                           
  8723                           ;SpeakerTone.c: 42:     ocCount = 0x11C1;
  8724  0C77  30C1               	movlw	193
  8725  0C78  0021               	movlb	1	; select bank1
  8726  0C79  00AA               	movwf	_ocCount^(0+128)
  8727  0C7A  3011               	movlw	17
  8728  0C7B  00AB               	movwf	(_ocCount^(0+128)+1)
  8729  0C7C                     l4248:
  8730                           
  8731                           ;SpeakerTone.c: 45:     SpeakerTone_Off();
  8732  0C7C  318A  2245  318C   	fcall	_SpeakerTone_Off
  8733  0C7F                     l804:
  8734  0C7F  0008               	return
  8735  0C80                     __end_of_SpeakerTone_Init:
  8736                           
  8737                           	psect	text2
  8738  0A45                     __ptext2:	
  8739 ;; *************** function _SpeakerTone_Off *****************
  8740 ;; Defined at:
  8741 ;;		line 78 in file "SpeakerTone.c"
  8742 ;; Parameters:    Size  Location     Type
  8743 ;;		None
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;		None
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  1    wreg      void 
  8748 ;; Registers used:
  8749 ;;		wreg, status,2, status,0, pclath, cstack
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8759 ;;Total ram usage:        0 bytes
  8760 ;; Hardware stack levels used: 1
  8761 ;; Hardware stack levels required when called: 6
  8762 ;; This function calls:
  8763 ;;		_TMR3_Reload
  8764 ;;		_TMR3_StopTimer
  8765 ;; This function is called by:
  8766 ;;		_SpeakerTone_Init
  8767 ;;		_SpeakerTone_SetFrequency
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771  0A45                     _SpeakerTone_Off:	
  8772                           ;psect for function _SpeakerTone_Off
  8773                           
  8774  0A45                     l3998:	
  8775                           ;incstack = 0
  8776                           ; Regs used in _SpeakerTone_Off: [wreg+status,2+status,0+pclath+cstack]
  8777                           
  8778                           
  8779                           ;SpeakerTone.c: 79:     TMR3_StopTimer();
  8780  0A45  318A  2210  318A   	fcall	_TMR3_StopTimer
  8781  0A48                     l4000:
  8782                           
  8783                           ;SpeakerTone.c: 80:     TMR3_Reload();
  8784  0A48  318A  22EB  318A   	fcall	_TMR3_Reload
  8785  0A4B                     l817:
  8786  0A4B  0008               	return
  8787  0A4C                     __end_of_SpeakerTone_Off:
  8788                           
  8789                           	psect	text3
  8790  0A10                     __ptext3:	
  8791 ;; *************** function _TMR3_StopTimer *****************
  8792 ;; Defined at:
  8793 ;;		line 59 in file "tmr3.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;		None
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;		None
  8798 ;; Return value:  Size  Location     Type
  8799 ;;                  1    wreg      void 
  8800 ;; Registers used:
  8801 ;;		None
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8811 ;;Total ram usage:        0 bytes
  8812 ;; Hardware stack levels used: 1
  8813 ;; Hardware stack levels required when called: 4
  8814 ;; This function calls:
  8815 ;;		Nothing
  8816 ;; This function is called by:
  8817 ;;		_SpeakerTone_Off
  8818 ;; This function uses a non-reentrant model
  8819 ;;
  8820                           
  8821  0A10                     _TMR3_StopTimer:	
  8822                           ;psect for function _TMR3_StopTimer
  8823                           
  8824  0A10                     l3702:	
  8825                           ;incstack = 0
  8826                           ; Regs used in _TMR3_StopTimer: []
  8827                           
  8828                           
  8829                           ;tmr3.c: 62:     T3CONbits.TMR3ON = 0;
  8830  0A10  0028               	movlb	8	; select bank8
  8831  0A11  1013               	bcf	19,0	;volatile
  8832  0A12                     l951:
  8833  0A12  0008               	return
  8834  0A13                     __end_of_TMR3_StopTimer:
  8835                           
  8836                           	psect	text4
  8837  0AEB                     __ptext4:	
  8838 ;; *************** function _TMR3_Reload *****************
  8839 ;; Defined at:
  8840 ;;		line 108 in file "tmr3.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;		None
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;		None
  8845 ;; Return value:  Size  Location     Type
  8846 ;;                  1    wreg      void 
  8847 ;; Registers used:
  8848 ;;		wreg, status,2, status,0, pclath, cstack
  8849 ;; Tracked objects:
  8850 ;;		On entry : 0/0
  8851 ;;		On exit  : 0/0
  8852 ;;		Unchanged: 0/0
  8853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8858 ;;Total ram usage:        0 bytes
  8859 ;; Hardware stack levels used: 1
  8860 ;; Hardware stack levels required when called: 5
  8861 ;; This function calls:
  8862 ;;		_TMR3_WriteTimer
  8863 ;; This function is called by:
  8864 ;;		_SpeakerTone_Off
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868  0AEB                     _TMR3_Reload:	
  8869                           ;psect for function _TMR3_Reload
  8870                           
  8871  0AEB                     l3704:	
  8872                           ;incstack = 0
  8873                           ; Regs used in _TMR3_Reload: [wreg+status,2+status,0+pclath+cstack]
  8874                           
  8875                           
  8876                           ;tmr3.c: 110:     TMR3_WriteTimer(timer3ReloadVal);
  8877  0AEB  0021               	movlb	1	; select bank1
  8878  0AEC  0827               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
  8879  0AED  0020               	movlb	0	; select bank0
  8880  0AEE  00A1               	movwf	TMR3_WriteTimer@timerVal+1
  8881  0AEF  0021               	movlb	1	; select bank1
  8882  0AF0  0826               	movf	_timer3ReloadVal^(0+128),w	;volatile
  8883  0AF1  0020               	movlb	0	; select bank0
  8884  0AF2  00A0               	movwf	TMR3_WriteTimer@timerVal
  8885  0AF3  318C  244D  318A   	fcall	_TMR3_WriteTimer
  8886  0AF6                     l962:
  8887  0AF6  0008               	return
  8888  0AF7                     __end_of_TMR3_Reload:
  8889                           
  8890                           	psect	text5
  8891  0C4D                     __ptext5:	
  8892 ;; *************** function _TMR3_WriteTimer *****************
  8893 ;; Defined at:
  8894 ;;		line 84 in file "tmr3.c"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;  timerVal        2    0[BANK0 ] unsigned short 
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;		None
  8899 ;; Return value:  Size  Location     Type
  8900 ;;                  1    wreg      void 
  8901 ;; Registers used:
  8902 ;;		wreg, status,2
  8903 ;; Tracked objects:
  8904 ;;		On entry : 0/0
  8905 ;;		On exit  : 0/0
  8906 ;;		Unchanged: 0/0
  8907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8908 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8911 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8912 ;;Total ram usage:        2 bytes
  8913 ;; Hardware stack levels used: 1
  8914 ;; Hardware stack levels required when called: 4
  8915 ;; This function calls:
  8916 ;;		Nothing
  8917 ;; This function is called by:
  8918 ;;		_TMR3_Reload
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922  0C4D                     _TMR3_WriteTimer:	
  8923                           ;psect for function _TMR3_WriteTimer
  8924                           
  8925  0C4D                     l3334:	
  8926                           ;incstack = 0
  8927                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
  8928                           
  8929                           
  8930                           ;tmr3.c: 84: void TMR3_WriteTimer(uint16_t timerVal);tmr3.c: 85: {;tmr3.c: 86:     if (T
      +                          3CONbits.T3SYNC == 1)
  8931  0C4D  0028               	movlb	8	; select bank8
  8932  0C4E  1D13               	btfss	19,2	;volatile
  8933  0C4F  2C51               	goto	u1171
  8934  0C50  2C52               	goto	u1170
  8935  0C51                     u1171:
  8936  0C51  2C5D               	goto	l3344
  8937  0C52                     u1170:
  8938  0C52                     l3336:
  8939                           
  8940                           ;tmr3.c: 87:     {;tmr3.c: 89:         T3CONbits.TMR3ON = 0;
  8941  0C52  1013               	bcf	19,0	;volatile
  8942  0C53                     l3338:
  8943                           
  8944                           ;tmr3.c: 92:         TMR3H = (uint8_t)(timerVal >> 8);
  8945  0C53  0020               	movlb	0	; select bank0
  8946  0C54  0821               	movf	TMR3_WriteTimer@timerVal+1,w
  8947  0C55  0028               	movlb	8	; select bank8
  8948  0C56  0092               	movwf	18	;volatile
  8949  0C57                     l3340:
  8950                           
  8951                           ;tmr3.c: 93:         TMR3L = (uint8_t)timerVal;
  8952  0C57  0020               	movlb	0	; select bank0
  8953  0C58  0820               	movf	TMR3_WriteTimer@timerVal,w
  8954  0C59  0028               	movlb	8	; select bank8
  8955  0C5A  0091               	movwf	17	;volatile
  8956  0C5B                     l3342:
  8957                           
  8958                           ;tmr3.c: 96:         T3CONbits.TMR3ON =1;
  8959  0C5B  1413               	bsf	19,0	;volatile
  8960                           
  8961                           ;tmr3.c: 97:     }
  8962  0C5C  2C65               	goto	l959
  8963  0C5D                     l3344:
  8964                           
  8965                           ;tmr3.c: 99:     {;tmr3.c: 101:         TMR3H = (uint8_t)(timerVal >> 8);
  8966  0C5D  0020               	movlb	0	; select bank0
  8967  0C5E  0821               	movf	TMR3_WriteTimer@timerVal+1,w
  8968  0C5F  0028               	movlb	8	; select bank8
  8969  0C60  0092               	movwf	18	;volatile
  8970  0C61                     l3346:
  8971                           
  8972                           ;tmr3.c: 102:         TMR3L = (uint8_t)timerVal;
  8973  0C61  0020               	movlb	0	; select bank0
  8974  0C62  0820               	movf	TMR3_WriteTimer@timerVal,w
  8975  0C63  0028               	movlb	8	; select bank8
  8976  0C64  0091               	movwf	17	;volatile
  8977  0C65                     l959:
  8978  0C65  0008               	return
  8979  0C66                     __end_of_TMR3_WriteTimer:
  8980                           
  8981                           	psect	text6
  8982  0B86                     __ptext6:	
  8983 ;; *************** function _PIC16_Init *****************
  8984 ;; Defined at:
  8985 ;;		line 16 in file "PIC16Xpress_DevBoard.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;		None
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;		None
  8990 ;; Return value:  Size  Location     Type
  8991 ;;                  1    wreg      void 
  8992 ;; Registers used:
  8993 ;;		wreg, status,2, status,0, pclath, cstack
  8994 ;; Tracked objects:
  8995 ;;		On entry : 0/0
  8996 ;;		On exit  : 0/0
  8997 ;;		Unchanged: 0/0
  8998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9003 ;;Total ram usage:        0 bytes
  9004 ;; Hardware stack levels used: 1
  9005 ;; Hardware stack levels required when called: 7
  9006 ;; This function calls:
  9007 ;;		_SYSTEM_Initialize
  9008 ;; This function is called by:
  9009 ;;		_main
  9010 ;; This function uses a non-reentrant model
  9011 ;;
  9012                           
  9013  0B86                     _PIC16_Init:	
  9014                           ;psect for function _PIC16_Init
  9015                           
  9016  0B86                     l4140:	
  9017                           ;incstack = 0
  9018                           ; Regs used in _PIC16_Init: [wreg+status,2+status,0+pclath+cstack]
  9019                           
  9020                           
  9021                           ;PIC16Xpress_DevBoard.c: 18:     PIE0 = 0x00;
  9022  0B86  0021               	movlb	1	; select bank1
  9023  0B87  0190               	clrf	16	;volatile
  9024                           
  9025                           ;PIC16Xpress_DevBoard.c: 19:     PIE1 = 0x00;
  9026  0B88  0191               	clrf	17	;volatile
  9027                           
  9028                           ;PIC16Xpress_DevBoard.c: 20:     PIE2 = 0x00;
  9029  0B89  0192               	clrf	18	;volatile
  9030                           
  9031                           ;PIC16Xpress_DevBoard.c: 21:     PIE3 = 0x00;
  9032  0B8A  0193               	clrf	19	;volatile
  9033                           
  9034                           ;PIC16Xpress_DevBoard.c: 22:     PIE4 = 0x00;
  9035  0B8B  0194               	clrf	20	;volatile
  9036                           
  9037                           ;PIC16Xpress_DevBoard.c: 25:     PIR0 = 0x00;
  9038  0B8C  0020               	movlb	0	; select bank0
  9039  0B8D  0190               	clrf	16	;volatile
  9040                           
  9041                           ;PIC16Xpress_DevBoard.c: 26:     PIR1 = 0x00;
  9042  0B8E  0191               	clrf	17	;volatile
  9043                           
  9044                           ;PIC16Xpress_DevBoard.c: 27:     PIR2 = 0x00;
  9045  0B8F  0192               	clrf	18	;volatile
  9046                           
  9047                           ;PIC16Xpress_DevBoard.c: 28:     PIR3 = 0x00;
  9048  0B90  0193               	clrf	19	;volatile
  9049                           
  9050                           ;PIC16Xpress_DevBoard.c: 29:     PIR4 = 0x00;
  9051  0B91  0194               	clrf	20	;volatile
  9052  0B92                     l4142:
  9053                           
  9054                           ;PIC16Xpress_DevBoard.c: 32:     SYSTEM_Initialize();
  9055  0B92  318D  254C  318B   	fcall	_SYSTEM_Initialize
  9056  0B95                     l4144:
  9057                           
  9058                           ;PIC16Xpress_DevBoard.c: 35:     (INTCONbits.PEIE = 1);
  9059  0B95  170B               	bsf	11,6	;volatile
  9060  0B96                     l4146:
  9061                           
  9062                           ;PIC16Xpress_DevBoard.c: 36:     (INTCONbits.GIE = 1);
  9063  0B96  178B               	bsf	11,7	;volatile
  9064  0B97                     l110:
  9065  0B97  0008               	return
  9066  0B98                     __end_of_PIC16_Init:
  9067                           
  9068                           	psect	text7
  9069  0D4C                     __ptext7:	
  9070 ;; *************** function _SYSTEM_Initialize *****************
  9071 ;; Defined at:
  9072 ;;		line 15 in file "mcc.c"
  9073 ;; Parameters:    Size  Location     Type
  9074 ;;		None
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;		None
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  1    wreg      void 
  9079 ;; Registers used:
  9080 ;;		wreg, status,2, status,0, pclath, cstack
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;Total ram usage:        0 bytes
  9091 ;; Hardware stack levels used: 1
  9092 ;; Hardware stack levels required when called: 6
  9093 ;; This function calls:
  9094 ;;		_CCP1_Initialize
  9095 ;;		_CCP2_Initialize
  9096 ;;		_CCP3_Initialize
  9097 ;;		_CCP4_Initialize
  9098 ;;		_EUSART_Initialize
  9099 ;;		_OSCILLATOR_Initialize
  9100 ;;		_PIN_MANAGER_Initialize
  9101 ;;		_PMD_Initialize
  9102 ;;		_PWM5_Initialize
  9103 ;;		_TMR0_Initialize
  9104 ;;		_TMR1_Initialize
  9105 ;;		_TMR2_Initialize
  9106 ;;		_TMR3_Initialize
  9107 ;;		_WDT_Initialize
  9108 ;; This function is called by:
  9109 ;;		_PIC16_Init
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113  0D4C                     _SYSTEM_Initialize:	
  9114                           ;psect for function _SYSTEM_Initialize
  9115                           
  9116  0D4C                     l3920:	
  9117                           ;incstack = 0
  9118                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9119                           
  9120                           
  9121                           ;mcc.c: 16:     PMD_Initialize();
  9122  0D4C  318A  22CA  318D   	fcall	_PMD_Initialize
  9123                           
  9124                           ;mcc.c: 17:     PIN_MANAGER_Initialize();
  9125  0D4F  318E  2609  318D   	fcall	_PIN_MANAGER_Initialize
  9126                           
  9127                           ;mcc.c: 18:     OSCILLATOR_Initialize();
  9128  0D52  318A  22DF  318D   	fcall	_OSCILLATOR_Initialize
  9129                           
  9130                           ;mcc.c: 19:     WDT_Initialize();
  9131  0D55  318A  221B  318D   	fcall	_WDT_Initialize
  9132                           
  9133                           ;mcc.c: 20:     CCP3_Initialize();
  9134  0D58  318C  2435  318D   	fcall	_CCP3_Initialize
  9135                           
  9136                           ;mcc.c: 21:     CCP1_Initialize();
  9137  0D5B  318C  2405  318D   	fcall	_CCP1_Initialize
  9138                           
  9139                           ;mcc.c: 22:     TMR2_Initialize();
  9140  0D5E  318A  2254  318D   	fcall	_TMR2_Initialize
  9141                           
  9142                           ;mcc.c: 23:     TMR0_Initialize();
  9143  0D61  318B  23EF  318D   	fcall	_TMR0_Initialize
  9144                           
  9145                           ;mcc.c: 24:     CCP2_Initialize();
  9146  0D64  318C  241D  318D   	fcall	_CCP2_Initialize
  9147                           
  9148                           ;mcc.c: 25:     CCP4_Initialize();
  9149  0D67  318B  2364  318D   	fcall	_CCP4_Initialize
  9150  0D6A                     l3922:
  9151                           
  9152                           ;mcc.c: 26:     TMR3_Initialize();
  9153  0D6A  318A  22F7  318D   	fcall	_TMR3_Initialize
  9154  0D6D                     l3924:
  9155                           
  9156                           ;mcc.c: 27:     PWM5_Initialize();
  9157  0D6D  318B  2312  318D   	fcall	_PWM5_Initialize
  9158  0D70                     l3926:
  9159                           
  9160                           ;mcc.c: 28:     TMR1_Initialize();
  9161  0D70  318B  2375  318D   	fcall	_TMR1_Initialize
  9162  0D73                     l3928:
  9163                           
  9164                           ;mcc.c: 29:     EUSART_Initialize();
  9165  0D73  318F  27BA  318D   	fcall	_EUSART_Initialize
  9166  0D76                     l239:
  9167  0D76  0008               	return
  9168  0D77                     __end_of_SYSTEM_Initialize:
  9169                           
  9170                           	psect	text8
  9171  0A1B                     __ptext8:	
  9172 ;; *************** function _WDT_Initialize *****************
  9173 ;; Defined at:
  9174 ;;		line 52 in file "mcc.c"
  9175 ;; Parameters:    Size  Location     Type
  9176 ;;		None
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;		None
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      void 
  9181 ;; Registers used:
  9182 ;;		wreg
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;Total ram usage:        0 bytes
  9193 ;; Hardware stack levels used: 1
  9194 ;; Hardware stack levels required when called: 4
  9195 ;; This function calls:
  9196 ;;		Nothing
  9197 ;; This function is called by:
  9198 ;;		_SYSTEM_Initialize
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202  0A1B                     _WDT_Initialize:	
  9203                           ;psect for function _WDT_Initialize
  9204                           
  9205  0A1B                     l3536:	
  9206                           ;incstack = 0
  9207                           ; Regs used in _WDT_Initialize: [wreg]
  9208                           
  9209                           
  9210                           ;mcc.c: 54:     WDTCON = 0x16;
  9211  0A1B  3016               	movlw	22
  9212  0A1C  0021               	movlb	1	; select bank1
  9213  0A1D  0097               	movwf	23	;volatile
  9214  0A1E                     l248:
  9215  0A1E  0008               	return
  9216  0A1F                     __end_of_WDT_Initialize:
  9217                           
  9218                           	psect	text9
  9219  0AF7                     __ptext9:	
  9220 ;; *************** function _TMR3_Initialize *****************
  9221 ;; Defined at:
  9222 ;;		line 25 in file "tmr3.c"
  9223 ;; Parameters:    Size  Location     Type
  9224 ;;		None
  9225 ;; Auto vars:     Size  Location     Type
  9226 ;;		None
  9227 ;; Return value:  Size  Location     Type
  9228 ;;                  1    wreg      void 
  9229 ;; Registers used:
  9230 ;;		status,2
  9231 ;; Tracked objects:
  9232 ;;		On entry : 0/0
  9233 ;;		On exit  : 0/0
  9234 ;;		Unchanged: 0/0
  9235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9240 ;;Total ram usage:        0 bytes
  9241 ;; Hardware stack levels used: 1
  9242 ;; Hardware stack levels required when called: 4
  9243 ;; This function calls:
  9244 ;;		Nothing
  9245 ;; This function is called by:
  9246 ;;		_SYSTEM_Initialize
  9247 ;; This function uses a non-reentrant model
  9248 ;;
  9249                           
  9250  0AF7                     _TMR3_Initialize:	
  9251                           ;psect for function _TMR3_Initialize
  9252                           
  9253  0AF7                     l3616:	
  9254                           ;incstack = 0
  9255                           ; Regs used in _TMR3_Initialize: [status,2]
  9256                           
  9257                           
  9258                           ;tmr3.c: 28:     T3GCON = 0x00;
  9259  0AF7  0028               	movlb	8	; select bank8
  9260  0AF8  0194               	clrf	20	;volatile
  9261                           
  9262                           ;tmr3.c: 31:     TMR3H = 0x00;
  9263  0AF9  0192               	clrf	18	;volatile
  9264                           
  9265                           ;tmr3.c: 34:     TMR3L = 0x00;
  9266  0AFA  0191               	clrf	17	;volatile
  9267  0AFB                     l3618:
  9268                           
  9269                           ;tmr3.c: 37:     PIR3bits.TMR3IF = 0;
  9270  0AFB  0020               	movlb	0	; select bank0
  9271  0AFC  1213               	bcf	19,4	;volatile
  9272                           
  9273                           ;tmr3.c: 40:     timer3ReloadVal = 0x0000;
  9274  0AFD  0021               	movlb	1	; select bank1
  9275  0AFE  01A6               	clrf	_timer3ReloadVal^(0+128)	;volatile
  9276  0AFF  01A7               	clrf	(_timer3ReloadVal+1)^(0+128)	;volatile
  9277  0B00                     l3620:
  9278                           
  9279                           ;tmr3.c: 43:     PIE3bits.TMR3IE = 1;
  9280  0B00  1613               	bsf	19,4	;volatile
  9281                           
  9282                           ;tmr3.c: 46:     T3CON = 0x00;
  9283  0B01  0028               	movlb	8	; select bank8
  9284  0B02  0193               	clrf	19	;volatile
  9285  0B03                     l945:
  9286  0B03  0008               	return
  9287  0B04                     __end_of_TMR3_Initialize:
  9288                           
  9289                           	psect	text10
  9290  0A54                     __ptext10:	
  9291 ;; *************** function _TMR2_Initialize *****************
  9292 ;; Defined at:
  9293 ;;		line 17 in file "tmr2.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;		None
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  1    wreg      void 
  9300 ;; Registers used:
  9301 ;;		wreg, status,2
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9311 ;;Total ram usage:        0 bytes
  9312 ;; Hardware stack levels used: 1
  9313 ;; Hardware stack levels required when called: 4
  9314 ;; This function calls:
  9315 ;;		Nothing
  9316 ;; This function is called by:
  9317 ;;		_SYSTEM_Initialize
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321  0A54                     _TMR2_Initialize:	
  9322                           ;psect for function _TMR2_Initialize
  9323                           
  9324  0A54                     l3570:	
  9325                           ;incstack = 0
  9326                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9327                           
  9328                           
  9329                           ;tmr2.c: 20:     PR2 = 0xF9;
  9330  0A54  30F9               	movlw	249
  9331  0A55  0020               	movlb	0	; select bank0
  9332  0A56  009E               	movwf	30	;volatile
  9333  0A57                     l3572:
  9334                           
  9335                           ;tmr2.c: 23:     TMR2 = 0x00;
  9336  0A57  019D               	clrf	29	;volatile
  9337  0A58                     l3574:
  9338                           
  9339                           ;tmr2.c: 26:     PIR1bits.TMR2IF = 0;
  9340  0A58  1091               	bcf	17,1	;volatile
  9341  0A59                     l3576:
  9342                           
  9343                           ;tmr2.c: 29:     T2CON = 0x04;
  9344  0A59  3004               	movlw	4
  9345  0A5A  009F               	movwf	31	;volatile
  9346  0A5B                     l905:
  9347  0A5B  0008               	return
  9348  0A5C                     __end_of_TMR2_Initialize:
  9349                           
  9350                           	psect	text11
  9351  0B75                     __ptext11:	
  9352 ;; *************** function _TMR1_Initialize *****************
  9353 ;; Defined at:
  9354 ;;		line 19 in file "tmr1.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;		None
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;		None
  9359 ;; Return value:  Size  Location     Type
  9360 ;;                  1    wreg      void 
  9361 ;; Registers used:
  9362 ;;		wreg, status,2
  9363 ;; Tracked objects:
  9364 ;;		On entry : 0/0
  9365 ;;		On exit  : 0/0
  9366 ;;		Unchanged: 0/0
  9367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9372 ;;Total ram usage:        0 bytes
  9373 ;; Hardware stack levels used: 1
  9374 ;; Hardware stack levels required when called: 4
  9375 ;; This function calls:
  9376 ;;		Nothing
  9377 ;; This function is called by:
  9378 ;;		_SYSTEM_Initialize
  9379 ;; This function uses a non-reentrant model
  9380 ;;
  9381                           
  9382  0B75                     _TMR1_Initialize:	
  9383                           ;psect for function _TMR1_Initialize
  9384                           
  9385  0B75                     l3634:	
  9386                           ;incstack = 0
  9387                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  9388                           
  9389                           
  9390                           ;tmr1.c: 24:     T1GCON = 0x00;
  9391  0B75  0020               	movlb	0	; select bank0
  9392  0B76  019C               	clrf	28	;volatile
  9393                           
  9394                           ;tmr1.c: 27:     TMR1H = 0x00;
  9395  0B77  019A               	clrf	26	;volatile
  9396                           
  9397                           ;tmr1.c: 30:     TMR1L = 0x00;
  9398  0B78  0199               	clrf	25	;volatile
  9399  0B79                     l3636:
  9400                           
  9401                           ;tmr1.c: 33:     PIR1bits.TMR1IF = 0;
  9402  0B79  1011               	bcf	17,0	;volatile
  9403  0B7A                     l3638:
  9404                           
  9405                           ;tmr1.c: 36:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  9406  0B7A  081A               	movf	26,w	;volatile
  9407  0B7B  0021               	movlb	1	; select bank1
  9408  0B7C  00B7               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  9409  0B7D  0020               	movlb	0	; select bank0
  9410  0B7E  0819               	movf	25,w	;volatile
  9411  0B7F  0021               	movlb	1	; select bank1
  9412  0B80  00B6               	movwf	_timer1ReloadVal^(0+128)	;volatile
  9413  0B81                     l3640:
  9414                           
  9415                           ;tmr1.c: 39:     PIE1bits.TMR1IE = 1;
  9416  0B81  1411               	bsf	17,0	;volatile
  9417  0B82                     l3642:
  9418                           
  9419                           ;tmr1.c: 42:     T1CON = 0b00100001;
  9420  0B82  3021               	movlw	33
  9421  0B83  0020               	movlb	0	; select bank0
  9422  0B84  009B               	movwf	27	;volatile
  9423  0B85                     l470:
  9424  0B85  0008               	return
  9425  0B86                     __end_of_TMR1_Initialize:
  9426                           
  9427                           	psect	text12
  9428  0BEF                     __ptext12:	
  9429 ;; *************** function _TMR0_Initialize *****************
  9430 ;; Defined at:
  9431 ;;		line 19 in file "tmr0.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;		None
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;		None
  9436 ;; Return value:  Size  Location     Type
  9437 ;;                  1    wreg      void 
  9438 ;; Registers used:
  9439 ;;		wreg, status,2, status,0, pclath, cstack
  9440 ;; Tracked objects:
  9441 ;;		On entry : 0/0
  9442 ;;		On exit  : 0/0
  9443 ;;		Unchanged: 0/0
  9444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9449 ;;Total ram usage:        0 bytes
  9450 ;; Hardware stack levels used: 1
  9451 ;; Hardware stack levels required when called: 5
  9452 ;; This function calls:
  9453 ;;		_TMR0_SetInterruptHandler
  9454 ;; This function is called by:
  9455 ;;		_SYSTEM_Initialize
  9456 ;; This function uses a non-reentrant model
  9457 ;;
  9458                           
  9459  0BEF                     _TMR0_Initialize:	
  9460                           ;psect for function _TMR0_Initialize
  9461                           
  9462  0BEF                     l3578:	
  9463                           ;incstack = 0
  9464                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9465                           
  9466                           
  9467                           ;tmr0.c: 22:     T0CON1 = 0x42;
  9468  0BEF  3042               	movlw	66
  9469  0BF0  0020               	movlb	0	; select bank0
  9470  0BF1  0098               	movwf	24	;volatile
  9471                           
  9472                           ;tmr0.c: 25:     TMR0H = 0xF9;
  9473  0BF2  30F9               	movlw	249
  9474  0BF3  0096               	movwf	22	;volatile
  9475  0BF4                     l3580:
  9476                           
  9477                           ;tmr0.c: 28:     TMR0L = 0x00;
  9478  0BF4  0195               	clrf	21	;volatile
  9479  0BF5                     l3582:
  9480                           
  9481                           ;tmr0.c: 31:     PIR0bits.TMR0IF = 0;
  9482  0BF5  1290               	bcf	16,5	;volatile
  9483  0BF6                     l3584:
  9484                           
  9485                           ;tmr0.c: 34:     PIE0bits.TMR0IE = 1;
  9486  0BF6  0021               	movlb	1	; select bank1
  9487  0BF7  1690               	bsf	16,5	;volatile
  9488  0BF8                     l3586:
  9489                           
  9490                           ;tmr0.c: 37:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  9491  0BF8  3000               	movlw	0
  9492  0BF9  0020               	movlb	0	; select bank0
  9493  0BFA  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  9494  0BFB  3000               	movlw	0
  9495  0BFC  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9496  0BFD  318A  22AD  318B   	fcall	_TMR0_SetInterruptHandler
  9497  0C00                     l3588:
  9498                           
  9499                           ;tmr0.c: 40:     T0CON0 = 0x80;
  9500  0C00  3080               	movlw	128
  9501  0C01  0020               	movlb	0	; select bank0
  9502  0C02  0097               	movwf	23	;volatile
  9503  0C03                     l3590:
  9504                           
  9505                           ;tmr0.c: 41:     CountCallBack = 0;
  9506  0C03  01FD               	clrf	_CountCallBack	;volatile
  9507  0C04                     l282:
  9508  0C04  0008               	return
  9509  0C05                     __end_of_TMR0_Initialize:
  9510                           
  9511                           	psect	text13
  9512  0AAD                     __ptext13:	
  9513 ;; *************** function _TMR0_SetInterruptHandler *****************
  9514 ;; Defined at:
  9515 ;;		line 117 in file "tmr0.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9518 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;		None
  9521 ;; Return value:  Size  Location     Type
  9522 ;;                  1    wreg      void 
  9523 ;; Registers used:
  9524 ;;		wreg
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9530 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9533 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9534 ;;Total ram usage:        2 bytes
  9535 ;; Hardware stack levels used: 1
  9536 ;; Hardware stack levels required when called: 4
  9537 ;; This function calls:
  9538 ;;		Nothing
  9539 ;; This function is called by:
  9540 ;;		_TMR0_Initialize
  9541 ;; This function uses a non-reentrant model
  9542 ;;
  9543                           
  9544  0AAD                     _TMR0_SetInterruptHandler:	
  9545                           ;psect for function _TMR0_SetInterruptHandler
  9546                           
  9547  0AAD                     l3316:	
  9548                           ;incstack = 0
  9549                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  9550                           
  9551                           
  9552                           ;tmr0.c: 118:     TMR0_InterruptHandler = InterruptHandler;
  9553  0AAD  0020               	movlb	0	; select bank0
  9554  0AAE  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  9555  0AAF  0022               	movlb	2	; select bank2
  9556  0AB0  00CB               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
  9557  0AB1  0020               	movlb	0	; select bank0
  9558  0AB2  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  9559  0AB3  0022               	movlb	2	; select bank2
  9560  0AB4  00CA               	movwf	_TMR0_InterruptHandler^(0+256)
  9561  0AB5                     l307:
  9562  0AB5  0008               	return
  9563  0AB6                     __end_of_TMR0_SetInterruptHandler:
  9564                           
  9565                           	psect	text14
  9566  0B12                     __ptext14:	
  9567 ;; *************** function _PWM5_Initialize *****************
  9568 ;; Defined at:
  9569 ;;		line 16 in file "pwm5.c"
  9570 ;; Parameters:    Size  Location     Type
  9571 ;;		None
  9572 ;; Auto vars:     Size  Location     Type
  9573 ;;		None
  9574 ;; Return value:  Size  Location     Type
  9575 ;;                  1    wreg      void 
  9576 ;; Registers used:
  9577 ;;		wreg, status,2, status,0
  9578 ;; Tracked objects:
  9579 ;;		On entry : 0/0
  9580 ;;		On exit  : 0/0
  9581 ;;		Unchanged: 0/0
  9582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9587 ;;Total ram usage:        0 bytes
  9588 ;; Hardware stack levels used: 1
  9589 ;; Hardware stack levels required when called: 4
  9590 ;; This function calls:
  9591 ;;		Nothing
  9592 ;; This function is called by:
  9593 ;;		_SYSTEM_Initialize
  9594 ;; This function uses a non-reentrant model
  9595 ;;
  9596                           
  9597  0B12                     _PWM5_Initialize:	
  9598                           ;psect for function _PWM5_Initialize
  9599                           
  9600  0B12                     l3622:	
  9601                           ;incstack = 0
  9602                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
  9603                           
  9604                           
  9605                           ;pwm5.c: 18:     PWM5CON = 0x80;
  9606  0B12  3080               	movlw	128
  9607  0B13  002C               	movlb	12	; select bank12
  9608  0B14  0099               	movwf	25	;volatile
  9609  0B15                     l3624:
  9610                           
  9611                           ;pwm5.c: 21:     PWM5DCH = 0x00;
  9612  0B15  0198               	clrf	24	;volatile
  9613  0B16                     l3626:
  9614                           
  9615                           ;pwm5.c: 24:     PWM5DCL = 0x00;
  9616  0B16  0197               	clrf	23	;volatile
  9617  0B17                     l3628:
  9618                           
  9619                           ;pwm5.c: 27:     PWMTMRSbits.P5TSEL = 1;
  9620  0B17  081F               	movf	31,w	;volatile
  9621  0B18  39FC               	andlw	-4
  9622  0B19  3801               	iorlw	1
  9623  0B1A  009F               	movwf	31	;volatile
  9624  0B1B                     l3630:
  9625                           
  9626                           ;pwm5.c: 30:     TRISBbits.TRISB6 = 0;
  9627  0B1B  0021               	movlb	1	; select bank1
  9628  0B1C  130D               	bcf	13,6	;volatile
  9629  0B1D                     l3632:
  9630                           
  9631                           ;pwm5.c: 31:     LATBbits.LATB6 = 0;
  9632  0B1D  0022               	movlb	2	; select bank2
  9633  0B1E  130D               	bcf	13,6	;volatile
  9634  0B1F                     l889:
  9635  0B1F  0008               	return
  9636  0B20                     __end_of_PWM5_Initialize:
  9637                           
  9638                           	psect	text15
  9639  0ACA                     __ptext15:	
  9640 ;; *************** function _PMD_Initialize *****************
  9641 ;; Defined at:
  9642 ;;		line 59 in file "mcc.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;		None
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;		None
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  1    wreg      void 
  9649 ;; Registers used:
  9650 ;;		wreg, status,2
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9660 ;;Total ram usage:        0 bytes
  9661 ;; Hardware stack levels used: 1
  9662 ;; Hardware stack levels required when called: 4
  9663 ;; This function calls:
  9664 ;;		Nothing
  9665 ;; This function is called by:
  9666 ;;		_SYSTEM_Initialize
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670  0ACA                     _PMD_Initialize:	
  9671                           ;psect for function _PMD_Initialize
  9672                           
  9673  0ACA                     l3480:	
  9674                           ;incstack = 0
  9675                           ; Regs used in _PMD_Initialize: [wreg+status,2]
  9676                           
  9677                           
  9678                           ;mcc.c: 62:     PMD0 = 0x00;
  9679  0ACA  0032               	movlb	18	; select bank18
  9680  0ACB  0191               	clrf	17	;volatile
  9681                           
  9682                           ;mcc.c: 63:     PMD1 = 0x00;
  9683  0ACC  0192               	clrf	18	;volatile
  9684  0ACD                     l3482:
  9685                           
  9686                           ;mcc.c: 66:     PMD2 = 0x66;
  9687  0ACD  3066               	movlw	102
  9688  0ACE  0093               	movwf	19	;volatile
  9689  0ACF                     l3484:
  9690                           
  9691                           ;mcc.c: 67:     PMD3 = 0x00;
  9692  0ACF  0194               	clrf	20	;volatile
  9693  0AD0                     l3486:
  9694                           
  9695                           ;mcc.c: 68:     PMD4 = 0x00;
  9696  0AD0  0195               	clrf	21	;volatile
  9697  0AD1                     l3488:
  9698                           
  9699                           ;mcc.c: 71:     PMD5 = 0x1F;
  9700  0AD1  301F               	movlw	31
  9701  0AD2  0096               	movwf	22	;volatile
  9702  0AD3                     l251:
  9703  0AD3  0008               	return
  9704  0AD4                     __end_of_PMD_Initialize:
  9705                           
  9706                           	psect	text16
  9707  0E09                     __ptext16:	
  9708 ;; *************** function _PIN_MANAGER_Initialize *****************
  9709 ;; Defined at:
  9710 ;;		line 14 in file "pin_manager.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;		None
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;		None
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  1    wreg      void 
  9717 ;; Registers used:
  9718 ;;		wreg, status,2
  9719 ;; Tracked objects:
  9720 ;;		On entry : 0/0
  9721 ;;		On exit  : 0/0
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9728 ;;Total ram usage:        0 bytes
  9729 ;; Hardware stack levels used: 1
  9730 ;; Hardware stack levels required when called: 4
  9731 ;; This function calls:
  9732 ;;		Nothing
  9733 ;; This function is called by:
  9734 ;;		_SYSTEM_Initialize
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738  0E09                     _PIN_MANAGER_Initialize:	
  9739                           ;psect for function _PIN_MANAGER_Initialize
  9740                           
  9741  0E09                     l3490:	
  9742                           ;incstack = 0
  9743                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9744                           
  9745                           
  9746                           ;pin_manager.c: 19:     LATA = 0x00;
  9747  0E09  0022               	movlb	2	; select bank2
  9748  0E0A  018C               	clrf	12	;volatile
  9749                           
  9750                           ;pin_manager.c: 20:     LATB = 0x00;
  9751  0E0B  018D               	clrf	13	;volatile
  9752                           
  9753                           ;pin_manager.c: 21:     LATC = 0x00;
  9754  0E0C  018E               	clrf	14	;volatile
  9755  0E0D                     l3492:
  9756                           
  9757                           ;pin_manager.c: 26:     TRISA = 0x37;
  9758  0E0D  3037               	movlw	55
  9759  0E0E  0021               	movlb	1	; select bank1
  9760  0E0F  008C               	movwf	12	;volatile
  9761  0E10                     l3494:
  9762                           
  9763                           ;pin_manager.c: 27:     TRISB = 0xF0;
  9764  0E10  30F0               	movlw	240
  9765  0E11  008D               	movwf	13	;volatile
  9766  0E12                     l3496:
  9767                           
  9768                           ;pin_manager.c: 28:     TRISC = 0xEF;
  9769  0E12  30EF               	movlw	239
  9770  0E13  008E               	movwf	14	;volatile
  9771  0E14                     l3498:
  9772                           
  9773                           ;pin_manager.c: 33:     ANSELC = 0xD7;
  9774  0E14  30D7               	movlw	215
  9775  0E15  0023               	movlb	3	; select bank3
  9776  0E16  008E               	movwf	14	;volatile
  9777  0E17                     l3500:
  9778                           
  9779                           ;pin_manager.c: 34:     ANSELB = 0xD0;
  9780  0E17  30D0               	movlw	208
  9781  0E18  008D               	movwf	13	;volatile
  9782  0E19                     l3502:
  9783                           
  9784                           ;pin_manager.c: 35:     ANSELA = 0x33;
  9785  0E19  3033               	movlw	51
  9786  0E1A  008C               	movwf	12	;volatile
  9787                           
  9788                           ;pin_manager.c: 40:     WPUB = 0x00;
  9789  0E1B  0024               	movlb	4	; select bank4
  9790  0E1C  018D               	clrf	13	;volatile
  9791                           
  9792                           ;pin_manager.c: 41:     WPUA = 0x00;
  9793  0E1D  018C               	clrf	12	;volatile
  9794                           
  9795                           ;pin_manager.c: 42:     WPUC = 0x00;
  9796  0E1E  018E               	clrf	14	;volatile
  9797                           
  9798                           ;pin_manager.c: 47:     ODCONA = 0x00;
  9799  0E1F  0025               	movlb	5	; select bank5
  9800  0E20  018C               	clrf	12	;volatile
  9801                           
  9802                           ;pin_manager.c: 48:     ODCONB = 0x00;
  9803  0E21  018D               	clrf	13	;volatile
  9804                           
  9805                           ;pin_manager.c: 49:     ODCONC = 0x00;
  9806  0E22  018E               	clrf	14	;volatile
  9807  0E23                     l3504:
  9808                           
  9809                           ;pin_manager.c: 54:     SLRCONA = 0x37;
  9810  0E23  3037               	movlw	55
  9811  0E24  0026               	movlb	6	; select bank6
  9812  0E25  008C               	movwf	12	;volatile
  9813  0E26                     l3506:
  9814                           
  9815                           ;pin_manager.c: 55:     SLRCONB = 0xF0;
  9816  0E26  30F0               	movlw	240
  9817  0E27  008D               	movwf	13	;volatile
  9818  0E28                     l3508:
  9819                           
  9820                           ;pin_manager.c: 56:     SLRCONC = 0xFF;
  9821  0E28  30FF               	movlw	255
  9822  0E29  008E               	movwf	14	;volatile
  9823  0E2A                     l3510:
  9824                           
  9825                           ;pin_manager.c: 61:     INLVLA = 0x3F;
  9826  0E2A  303F               	movlw	63
  9827  0E2B  0027               	movlb	7	; select bank7
  9828  0E2C  008C               	movwf	12	;volatile
  9829  0E2D                     l3512:
  9830                           
  9831                           ;pin_manager.c: 62:     INLVLB = 0xF0;
  9832  0E2D  30F0               	movlw	240
  9833  0E2E  008D               	movwf	13	;volatile
  9834  0E2F                     l3514:
  9835                           
  9836                           ;pin_manager.c: 63:     INLVLC = 0xFF;
  9837  0E2F  30FF               	movlw	255
  9838  0E30  008E               	movwf	14	;volatile
  9839  0E31                     l3516:
  9840                           
  9841                           ;pin_manager.c: 66:     RXPPS = 0x0D;
  9842  0E31  300D               	movlw	13
  9843  0E32  003C               	movlb	28	; select bank28
  9844  0E33  00A4               	movwf	36	;volatile
  9845  0E34                     l3518:
  9846                           
  9847                           ;pin_manager.c: 67:     RC4PPS = 0x14;
  9848  0E34  3014               	movlw	20
  9849  0E35  003D               	movlb	29	; select bank29
  9850  0E36  00A4               	movwf	36	;volatile
  9851  0E37                     l3520:
  9852                           
  9853                           ;pin_manager.c: 69:     CCP1PPS = 0x15;
  9854  0E37  3015               	movlw	21
  9855  0E38  003C               	movlb	28	; select bank28
  9856  0E39  0094               	movwf	20	;volatile
  9857  0E3A                     l3522:
  9858                           
  9859                           ;pin_manager.c: 70:     CCP2PPS = 0x13;
  9860  0E3A  3013               	movlw	19
  9861  0E3B  0095               	movwf	21	;volatile
  9862  0E3C                     l3524:
  9863                           
  9864                           ;pin_manager.c: 71:     CCP3PPS = 0x02;
  9865  0E3C  3002               	movlw	2
  9866  0E3D  0096               	movwf	22	;volatile
  9867  0E3E                     l3526:
  9868                           
  9869                           ;pin_manager.c: 73:     RC1PPS = 0x0F;
  9870  0E3E  300F               	movlw	15
  9871  0E3F  003D               	movlb	29	; select bank29
  9872  0E40  00A1               	movwf	33	;volatile
  9873  0E41                     l3528:
  9874                           
  9875                           ;pin_manager.c: 74:     RB6PPS = 0x02;
  9876  0E41  3002               	movlw	2
  9877  0E42  009E               	movwf	30	;volatile
  9878  0E43                     l758:
  9879  0E43  0008               	return
  9880  0E44                     __end_of_PIN_MANAGER_Initialize:
  9881                           
  9882                           	psect	text17
  9883  0ADF                     __ptext17:	
  9884 ;; *************** function _OSCILLATOR_Initialize *****************
  9885 ;; Defined at:
  9886 ;;		line 34 in file "mcc.c"
  9887 ;; Parameters:    Size  Location     Type
  9888 ;;		None
  9889 ;; Auto vars:     Size  Location     Type
  9890 ;;		None
  9891 ;; Return value:  Size  Location     Type
  9892 ;;                  1    wreg      void 
  9893 ;; Registers used:
  9894 ;;		wreg, status,2
  9895 ;; Tracked objects:
  9896 ;;		On entry : 0/0
  9897 ;;		On exit  : 0/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9904 ;;Total ram usage:        0 bytes
  9905 ;; Hardware stack levels used: 1
  9906 ;; Hardware stack levels required when called: 4
  9907 ;; This function calls:
  9908 ;;		Nothing
  9909 ;; This function is called by:
  9910 ;;		_SYSTEM_Initialize
  9911 ;; This function uses a non-reentrant model
  9912 ;;
  9913                           
  9914  0ADF                     _OSCILLATOR_Initialize:	
  9915                           ;psect for function _OSCILLATOR_Initialize
  9916                           
  9917  0ADF                     l3530:	
  9918                           ;incstack = 0
  9919                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9920                           
  9921                           
  9922                           ;mcc.c: 36:     OSCCON1 = 0x00;
  9923  0ADF  0032               	movlb	18	; select bank18
  9924  0AE0  0199               	clrf	25	;volatile
  9925                           
  9926                           ;mcc.c: 38:     OSCCON3 = 0x00;
  9927  0AE1  019B               	clrf	27	;volatile
  9928                           
  9929                           ;mcc.c: 40:     OSCEN = 0x00;
  9930  0AE2  019D               	clrf	29	;volatile
  9931  0AE3                     l3532:
  9932                           
  9933                           ;mcc.c: 42:     OSCFRQ = 0x04;
  9934  0AE3  3004               	movlw	4
  9935  0AE4  009F               	movwf	31	;volatile
  9936  0AE5                     l3534:
  9937                           
  9938                           ;mcc.c: 44:     OSCTUNE = 0x00;
  9939  0AE5  019E               	clrf	30	;volatile
  9940  0AE6                     l242:	
  9941                           ;mcc.c: 47:     }
  9942                           
  9943                           
  9944                           ;mcc.c: 46:     while (PLLR == 0) {
  9945  0AE6  1C1C               	btfss	28,0	;volatile
  9946  0AE7  2AE9               	goto	u1211
  9947  0AE8  2AEA               	goto	u1210
  9948  0AE9                     u1211:
  9949  0AE9  2AE6               	goto	l242
  9950  0AEA                     u1210:
  9951  0AEA                     l245:
  9952  0AEA  0008               	return
  9953  0AEB                     __end_of_OSCILLATOR_Initialize:
  9954                           
  9955                           	psect	text18
  9956  0FBA                     __ptext18:	
  9957 ;; *************** function _EUSART_Initialize *****************
  9958 ;; Defined at:
  9959 ;;		line 45 in file "eusart.c"
  9960 ;; Parameters:    Size  Location     Type
  9961 ;;		None
  9962 ;; Auto vars:     Size  Location     Type
  9963 ;;		None
  9964 ;; Return value:  Size  Location     Type
  9965 ;;                  1    wreg      void 
  9966 ;; Registers used:
  9967 ;;		wreg, status,2, status,0, pclath, cstack
  9968 ;; Tracked objects:
  9969 ;;		On entry : 0/0
  9970 ;;		On exit  : 0/0
  9971 ;;		Unchanged: 0/0
  9972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9975 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9976 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9977 ;;Total ram usage:        1 bytes
  9978 ;; Hardware stack levels used: 1
  9979 ;; Hardware stack levels required when called: 5
  9980 ;; This function calls:
  9981 ;;		_EUSART_SetErrorHandler
  9982 ;;		_EUSART_SetFramingErrorHandler
  9983 ;;		_EUSART_SetOverrunErrorHandler
  9984 ;;		_EUSART_SetRxInterruptHandler
  9985 ;;		_EUSART_SetTxInterruptHandler
  9986 ;; This function is called by:
  9987 ;;		_SYSTEM_Initialize
  9988 ;; This function uses a non-reentrant model
  9989 ;;
  9990                           
  9991  0FBA                     _EUSART_Initialize:	
  9992                           ;psect for function _EUSART_Initialize
  9993                           
  9994  0FBA                     l3644:	
  9995                           ;incstack = 0
  9996                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9997                           
  9998  0FBA  0021               	movlb	1	; select bank1
  9999  0FBB  1291               	bcf	17,5	;volatile
 10000  0FBC                     l3646:
 10001  0FBC  30F8               	movlw	low _EUSART_Receive_ISR
 10002  0FBD  0020               	movlb	0	; select bank0
 10003  0FBE  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 10004  0FBF  300E               	movlw	high _EUSART_Receive_ISR
 10005  0FC0  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 10006  0FC1  318A  229B  318F   	fcall	_EUSART_SetRxInterruptHandler
 10007  0FC4                     l3648:
 10008  0FC4  0021               	movlb	1	; select bank1
 10009  0FC5  1211               	bcf	17,4	;volatile
 10010  0FC6  30D6               	movlw	low _EUSART_Transmit_ISR
 10011  0FC7  0020               	movlb	0	; select bank0
 10012  0FC8  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 10013  0FC9  300C               	movlw	high _EUSART_Transmit_ISR
 10014  0FCA  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 10015  0FCB  318A  22A4  318F   	fcall	_EUSART_SetTxInterruptHandler
 10016  0FCE                     l3650:
 10017  0FCE  3008               	movlw	8
 10018  0FCF  0023               	movlb	3	; select bank3
 10019  0FD0  009F               	movwf	31	;volatile
 10020  0FD1                     l3652:
 10021  0FD1  3090               	movlw	144
 10022  0FD2  009D               	movwf	29	;volatile
 10023  0FD3                     l3654:
 10024  0FD3  3024               	movlw	36
 10025  0FD4  009E               	movwf	30	;volatile
 10026  0FD5                     l3656:
 10027  0FD5  30A0               	movlw	160
 10028  0FD6  009B               	movwf	27	;volatile
 10029  0FD7                     l3658:
 10030  0FD7  3001               	movlw	1
 10031  0FD8  009C               	movwf	28	;volatile
 10032  0FD9                     l3660:
 10033  0FD9  3009               	movlw	low _EUSART_DefaultFramingErrorHandler
 10034  0FDA  0020               	movlb	0	; select bank0
 10035  0FDB  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 10036  0FDC  300A               	movlw	high _EUSART_DefaultFramingErrorHandler
 10037  0FDD  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 10038  0FDE  318A  2289  318F   	fcall	_EUSART_SetFramingErrorHandler
 10039  0FE1                     l3662:
 10040  0FE1  3017               	movlw	low _EUSART_DefaultOverrunErrorHandler
 10041  0FE2  0020               	movlb	0	; select bank0
 10042  0FE3  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 10043  0FE4  300A               	movlw	high _EUSART_DefaultOverrunErrorHandler
 10044  0FE5  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 10045  0FE6  318A  2292  318F   	fcall	_EUSART_SetOverrunErrorHandler
 10046  0FE9                     l3664:
 10047  0FE9  3013               	movlw	low _EUSART_DefaultErrorHandler
 10048  0FEA  0020               	movlb	0	; select bank0
 10049  0FEB  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
 10050  0FEC  300A               	movlw	high _EUSART_DefaultErrorHandler
 10051  0FED  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 10052  0FEE  318A  2280  318F   	fcall	_EUSART_SetErrorHandler
 10053  0FF1                     l3666:
 10054  0FF1  0021               	movlb	1	; select bank1
 10055  0FF2  01D2               	clrf	_eusartRxLastError^(0+128)	;volatile
 10056  0FF3                     l3668:
 10057  0FF3  01FC               	clrf	_eusartTxHead	;volatile
 10058  0FF4                     l3670:
 10059  0FF4  01D5               	clrf	_eusartTxTail^(0+128)	;volatile
 10060  0FF5                     l3672:
 10061  0FF5  3008               	movlw	8
 10062  0FF6  0020               	movlb	0	; select bank0
 10063  0FF7  00A2               	movwf	??_EUSART_Initialize
 10064  0FF8  0822               	movf	??_EUSART_Initialize,w
 10065  0FF9  0021               	movlb	1	; select bank1
 10066  0FFA  00D4               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
 10067  0FFB  01FB               	clrf	_eusartRxHead	;volatile
 10068  0FFC  01FA               	clrf	_eusartRxTail	;volatile
 10069  0FFD  01D3               	clrf	_eusartRxCount^(0+128)	;volatile
 10070  0FFE                     l3674:
 10071  0FFE  1691               	bsf	17,5	;volatile
 10072  0FFF                     l565:
 10073  0FFF  0008               	return
 10074  1000                     __end_of_EUSART_Initialize:
 10075                           
 10076                           	psect	text19
 10077  0AA4                     __ptext19:	
 10078 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 10079 ;; Defined at:
 10080 ;;		line 278 in file "eusart.c"
 10081 ;; Parameters:    Size  Location     Type
 10082 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10083 ;;		 -> EUSART_Transmit_ISR(1), 
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;		None
 10086 ;; Return value:  Size  Location     Type
 10087 ;;                  1    wreg      void 
 10088 ;; Registers used:
 10089 ;;		wreg
 10090 ;; Tracked objects:
 10091 ;;		On entry : 0/0
 10092 ;;		On exit  : 0/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10098 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10099 ;;Total ram usage:        2 bytes
 10100 ;; Hardware stack levels used: 1
 10101 ;; Hardware stack levels required when called: 4
 10102 ;; This function calls:
 10103 ;;		Nothing
 10104 ;; This function is called by:
 10105 ;;		_EUSART_Initialize
 10106 ;; This function uses a non-reentrant model
 10107 ;;
 10108                           
 10109  0AA4                     _EUSART_SetTxInterruptHandler:	
 10110                           ;psect for function _EUSART_SetTxInterruptHandler
 10111                           
 10112  0AA4                     l3326:	
 10113                           ;incstack = 0
 10114                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 10115                           
 10116  0AA4  0020               	movlb	0	; select bank0
 10117  0AA5  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 10118  0AA6  0021               	movlb	1	; select bank1
 10119  0AA7  00B5               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
 10120  0AA8  0020               	movlb	0	; select bank0
 10121  0AA9  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 10122  0AAA  0021               	movlb	1	; select bank1
 10123  0AAB  00B4               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
 10124  0AAC                     l637:
 10125  0AAC  0008               	return
 10126  0AAD                     __end_of_EUSART_SetTxInterruptHandler:
 10127                           
 10128                           	psect	text20
 10129  0A9B                     __ptext20:	
 10130 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 10131 ;; Defined at:
 10132 ;;		line 284 in file "eusart.c"
 10133 ;; Parameters:    Size  Location     Type
 10134 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10135 ;;		 -> EUSART_Receive_ISR(1), 
 10136 ;; Auto vars:     Size  Location     Type
 10137 ;;		None
 10138 ;; Return value:  Size  Location     Type
 10139 ;;                  1    wreg      void 
 10140 ;; Registers used:
 10141 ;;		wreg
 10142 ;; Tracked objects:
 10143 ;;		On entry : 0/0
 10144 ;;		On exit  : 0/0
 10145 ;;		Unchanged: 0/0
 10146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10147 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10150 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10151 ;;Total ram usage:        2 bytes
 10152 ;; Hardware stack levels used: 1
 10153 ;; Hardware stack levels required when called: 4
 10154 ;; This function calls:
 10155 ;;		Nothing
 10156 ;; This function is called by:
 10157 ;;		_EUSART_Initialize
 10158 ;; This function uses a non-reentrant model
 10159 ;;
 10160                           
 10161  0A9B                     _EUSART_SetRxInterruptHandler:	
 10162                           ;psect for function _EUSART_SetRxInterruptHandler
 10163                           
 10164  0A9B                     l3324:	
 10165                           ;incstack = 0
 10166                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 10167                           
 10168  0A9B  0020               	movlb	0	; select bank0
 10169  0A9C  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 10170  0A9D  0021               	movlb	1	; select bank1
 10171  0A9E  00B3               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
 10172  0A9F  0020               	movlb	0	; select bank0
 10173  0AA0  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 10174  0AA1  0021               	movlb	1	; select bank1
 10175  0AA2  00B2               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
 10176  0AA3                     l640:
 10177  0AA3  0008               	return
 10178  0AA4                     __end_of_EUSART_SetRxInterruptHandler:
 10179                           
 10180                           	psect	text21
 10181  0A92                     __ptext21:	
 10182 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 10183 ;; Defined at:
 10184 ;;		line 266 in file "eusart.c"
 10185 ;; Parameters:    Size  Location     Type
 10186 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10187 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 10188 ;; Auto vars:     Size  Location     Type
 10189 ;;		None
 10190 ;; Return value:  Size  Location     Type
 10191 ;;                  1    wreg      void 
 10192 ;; Registers used:
 10193 ;;		wreg
 10194 ;; Tracked objects:
 10195 ;;		On entry : 0/0
 10196 ;;		On exit  : 0/0
 10197 ;;		Unchanged: 0/0
 10198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10199 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10202 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10203 ;;Total ram usage:        2 bytes
 10204 ;; Hardware stack levels used: 1
 10205 ;; Hardware stack levels required when called: 4
 10206 ;; This function calls:
 10207 ;;		Nothing
 10208 ;; This function is called by:
 10209 ;;		_EUSART_Initialize
 10210 ;; This function uses a non-reentrant model
 10211 ;;
 10212                           
 10213  0A92                     _EUSART_SetOverrunErrorHandler:	
 10214                           ;psect for function _EUSART_SetOverrunErrorHandler
 10215                           
 10216  0A92                     l3330:	
 10217                           ;incstack = 0
 10218                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 10219                           
 10220  0A92  0020               	movlb	0	; select bank0
 10221  0A93  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 10222  0A94  0021               	movlb	1	; select bank1
 10223  0A95  00AF               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
 10224  0A96  0020               	movlb	0	; select bank0
 10225  0A97  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 10226  0A98  0021               	movlb	1	; select bank1
 10227  0A99  00AE               	movwf	_EUSART_OverrunErrorHandler^(0+128)
 10228  0A9A                     l631:
 10229  0A9A  0008               	return
 10230  0A9B                     __end_of_EUSART_SetOverrunErrorHandler:
 10231                           
 10232                           	psect	text22
 10233  0A89                     __ptext22:	
 10234 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 10235 ;; Defined at:
 10236 ;;		line 260 in file "eusart.c"
 10237 ;; Parameters:    Size  Location     Type
 10238 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10239 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 10240 ;; Auto vars:     Size  Location     Type
 10241 ;;		None
 10242 ;; Return value:  Size  Location     Type
 10243 ;;                  1    wreg      void 
 10244 ;; Registers used:
 10245 ;;		wreg
 10246 ;; Tracked objects:
 10247 ;;		On entry : 0/0
 10248 ;;		On exit  : 0/0
 10249 ;;		Unchanged: 0/0
 10250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10251 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10254 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10255 ;;Total ram usage:        2 bytes
 10256 ;; Hardware stack levels used: 1
 10257 ;; Hardware stack levels required when called: 4
 10258 ;; This function calls:
 10259 ;;		Nothing
 10260 ;; This function is called by:
 10261 ;;		_EUSART_Initialize
 10262 ;; This function uses a non-reentrant model
 10263 ;;
 10264                           
 10265  0A89                     _EUSART_SetFramingErrorHandler:	
 10266                           ;psect for function _EUSART_SetFramingErrorHandler
 10267                           
 10268  0A89                     l3328:	
 10269                           ;incstack = 0
 10270                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 10271                           
 10272  0A89  0020               	movlb	0	; select bank0
 10273  0A8A  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 10274  0A8B  0021               	movlb	1	; select bank1
 10275  0A8C  00B1               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
 10276  0A8D  0020               	movlb	0	; select bank0
 10277  0A8E  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 10278  0A8F  0021               	movlb	1	; select bank1
 10279  0A90  00B0               	movwf	_EUSART_FramingErrorHandler^(0+128)
 10280  0A91                     l628:
 10281  0A91  0008               	return
 10282  0A92                     __end_of_EUSART_SetFramingErrorHandler:
 10283                           
 10284                           	psect	text23
 10285  0A80                     __ptext23:	
 10286 ;; *************** function _EUSART_SetErrorHandler *****************
 10287 ;; Defined at:
 10288 ;;		line 272 in file "eusart.c"
 10289 ;; Parameters:    Size  Location     Type
 10290 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10291 ;;		 -> EUSART_DefaultErrorHandler(1), 
 10292 ;; Auto vars:     Size  Location     Type
 10293 ;;		None
 10294 ;; Return value:  Size  Location     Type
 10295 ;;                  1    wreg      void 
 10296 ;; Registers used:
 10297 ;;		wreg
 10298 ;; Tracked objects:
 10299 ;;		On entry : 0/0
 10300 ;;		On exit  : 0/0
 10301 ;;		Unchanged: 0/0
 10302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10303 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10306 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10307 ;;Total ram usage:        2 bytes
 10308 ;; Hardware stack levels used: 1
 10309 ;; Hardware stack levels required when called: 4
 10310 ;; This function calls:
 10311 ;;		Nothing
 10312 ;; This function is called by:
 10313 ;;		_EUSART_Initialize
 10314 ;; This function uses a non-reentrant model
 10315 ;;
 10316                           
 10317  0A80                     _EUSART_SetErrorHandler:	
 10318                           ;psect for function _EUSART_SetErrorHandler
 10319                           
 10320  0A80                     l3332:	
 10321                           ;incstack = 0
 10322                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 10323                           
 10324  0A80  0020               	movlb	0	; select bank0
 10325  0A81  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 10326  0A82  0021               	movlb	1	; select bank1
 10327  0A83  00AD               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
 10328  0A84  0020               	movlb	0	; select bank0
 10329  0A85  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
 10330  0A86  0021               	movlb	1	; select bank1
 10331  0A87  00AC               	movwf	_EUSART_ErrorHandler^(0+128)
 10332  0A88                     l634:
 10333  0A88  0008               	return
 10334  0A89                     __end_of_EUSART_SetErrorHandler:
 10335                           
 10336                           	psect	text24
 10337  0B64                     __ptext24:	
 10338 ;; *************** function _CCP4_Initialize *****************
 10339 ;; Defined at:
 10340 ;;		line 18 in file "ccp4.c"
 10341 ;; Parameters:    Size  Location     Type
 10342 ;;		None
 10343 ;; Auto vars:     Size  Location     Type
 10344 ;;		None
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  1    wreg      void 
 10347 ;; Registers used:
 10348 ;;		wreg, status,2, status,0
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10358 ;;Total ram usage:        0 bytes
 10359 ;; Hardware stack levels used: 1
 10360 ;; Hardware stack levels required when called: 4
 10361 ;; This function calls:
 10362 ;;		Nothing
 10363 ;; This function is called by:
 10364 ;;		_SYSTEM_Initialize
 10365 ;; This function uses a non-reentrant model
 10366 ;;
 10367                           
 10368  0B64                     _CCP4_Initialize:	
 10369                           ;psect for function _CCP4_Initialize
 10370                           
 10371  0B64                     l3608:	
 10372                           ;incstack = 0
 10373                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0]
 10374                           
 10375                           
 10376                           ;ccp4.c: 21:  CCP4CON = 0x81;
 10377  0B64  3081               	movlw	129
 10378  0B65  0026               	movlb	6	; select bank6
 10379  0B66  0097               	movwf	23	;volatile
 10380                           
 10381                           ;ccp4.c: 24:  CCPR4H = 0x11;
 10382  0B67  3011               	movlw	17
 10383  0B68  0096               	movwf	22	;volatile
 10384                           
 10385                           ;ccp4.c: 25:  CCPR4L = 0xC1;
 10386  0B69  30C1               	movlw	193
 10387  0B6A  0095               	movwf	21	;volatile
 10388  0B6B                     l3610:
 10389                           
 10390                           ;ccp4.c: 28:  CCPTMRSbits.C4TSEL = 0x2;
 10391  0B6B  0025               	movlb	5	; select bank5
 10392  0B6C  081F               	movf	31,w	;volatile
 10393  0B6D  393F               	andlw	-193
 10394  0B6E  3880               	iorlw	128
 10395  0B6F  009F               	movwf	31	;volatile
 10396  0B70                     l3612:
 10397                           
 10398                           ;ccp4.c: 31:     PIR4bits.CCP4IF = 0;
 10399  0B70  0020               	movlb	0	; select bank0
 10400  0B71  1194               	bcf	20,3	;volatile
 10401  0B72                     l3614:
 10402                           
 10403                           ;ccp4.c: 34:     PIE4bits.CCP4IE = 1;
 10404  0B72  0021               	movlb	1	; select bank1
 10405  0B73  1594               	bsf	20,3	;volatile
 10406  0B74                     l865:
 10407  0B74  0008               	return
 10408  0B75                     __end_of_CCP4_Initialize:
 10409                           
 10410                           	psect	text25
 10411  0C35                     __ptext25:	
 10412 ;; *************** function _CCP3_Initialize *****************
 10413 ;; Defined at:
 10414 ;;		line 49 in file "ccp3.c"
 10415 ;; Parameters:    Size  Location     Type
 10416 ;;		None
 10417 ;; Auto vars:     Size  Location     Type
 10418 ;;		None
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  1    wreg      void 
 10421 ;; Registers used:
 10422 ;;		wreg, status,2, status,0, pclath, cstack
 10423 ;; Tracked objects:
 10424 ;;		On entry : 0/0
 10425 ;;		On exit  : 0/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10432 ;;Total ram usage:        0 bytes
 10433 ;; Hardware stack levels used: 1
 10434 ;; Hardware stack levels required when called: 5
 10435 ;; This function calls:
 10436 ;;		_CCP3_SetCallBack
 10437 ;; This function is called by:
 10438 ;;		_SYSTEM_Initialize
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442  0C35                     _CCP3_Initialize:	
 10443                           ;psect for function _CCP3_Initialize
 10444                           
 10445  0C35                     l3538:	
 10446                           ;incstack = 0
 10447                           ; Regs used in _CCP3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10448                           
 10449                           
 10450                           ;ccp3.c: 52:  CCP3CON = 0x83;
 10451  0C35  3083               	movlw	131
 10452  0C36  0026               	movlb	6	; select bank6
 10453  0C37  0093               	movwf	19	;volatile
 10454  0C38                     l3540:
 10455                           
 10456                           ;ccp3.c: 55:  CCP3CAP = 0x00;
 10457  0C38  0194               	clrf	20	;volatile
 10458  0C39                     l3542:
 10459                           
 10460                           ;ccp3.c: 58:  CCPR3H = 0x00;
 10461  0C39  0192               	clrf	18	;volatile
 10462  0C3A                     l3544:
 10463                           
 10464                           ;ccp3.c: 61:  CCPR3L = 0x00;
 10465  0C3A  0191               	clrf	17	;volatile
 10466  0C3B                     l3546:
 10467                           
 10468                           ;ccp3.c: 64:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 10469  0C3B  30BC               	movlw	low _CCP3_DefaultCallBack
 10470  0C3C  0020               	movlb	0	; select bank0
 10471  0C3D  00A0               	movwf	CCP3_SetCallBack@customCallBack
 10472  0C3E  300E               	movlw	high _CCP3_DefaultCallBack
 10473  0C3F  00A1               	movwf	CCP3_SetCallBack@customCallBack+1
 10474  0C40  318A  2277  318C   	fcall	_CCP3_SetCallBack
 10475  0C43                     l3548:
 10476                           
 10477                           ;ccp3.c: 67:  CCPTMRSbits.C3TSEL = 0x1;
 10478  0C43  0025               	movlb	5	; select bank5
 10479  0C44  081F               	movf	31,w	;volatile
 10480  0C45  39CF               	andlw	-49
 10481  0C46  3810               	iorlw	16
 10482  0C47  009F               	movwf	31	;volatile
 10483  0C48                     l3550:
 10484                           
 10485                           ;ccp3.c: 70:     PIR4bits.CCP3IF = 0;
 10486  0C48  0020               	movlb	0	; select bank0
 10487  0C49  1114               	bcf	20,2	;volatile
 10488  0C4A                     l3552:
 10489                           
 10490                           ;ccp3.c: 73:     PIE4bits.CCP3IE = 1;
 10491  0C4A  0021               	movlb	1	; select bank1
 10492  0C4B  1514               	bsf	20,2	;volatile
 10493  0C4C                     l445:
 10494  0C4C  0008               	return
 10495  0C4D                     __end_of_CCP3_Initialize:
 10496                           
 10497                           	psect	text26
 10498  0A77                     __ptext26:	
 10499 ;; *************** function _CCP3_SetCallBack *****************
 10500 ;; Defined at:
 10501 ;;		line 95 in file "ccp3.c"
 10502 ;; Parameters:    Size  Location     Type
 10503 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10504 ;;		 -> CCP3_DefaultCallBack(1), 
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;		None
 10507 ;; Return value:  Size  Location     Type
 10508 ;;                  1    wreg      void 
 10509 ;; Registers used:
 10510 ;;		wreg
 10511 ;; Tracked objects:
 10512 ;;		On entry : 0/0
 10513 ;;		On exit  : 0/0
 10514 ;;		Unchanged: 0/0
 10515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10516 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10519 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10520 ;;Total ram usage:        2 bytes
 10521 ;; Hardware stack levels used: 1
 10522 ;; Hardware stack levels required when called: 4
 10523 ;; This function calls:
 10524 ;;		Nothing
 10525 ;; This function is called by:
 10526 ;;		_CCP3_Initialize
 10527 ;; This function uses a non-reentrant model
 10528 ;;
 10529                           
 10530  0A77                     _CCP3_SetCallBack:	
 10531                           ;psect for function _CCP3_SetCallBack
 10532                           
 10533  0A77                     l3322:	
 10534                           ;incstack = 0
 10535                           ; Regs used in _CCP3_SetCallBack: [wreg]
 10536                           
 10537                           
 10538                           ;ccp3.c: 96:     CCP3_CallBack = customCallBack;
 10539  0A77  0020               	movlb	0	; select bank0
 10540  0A78  0821               	movf	CCP3_SetCallBack@customCallBack+1,w
 10541  0A79  0021               	movlb	1	; select bank1
 10542  0A7A  00BF               	movwf	(_CCP3_CallBack+1)^(0+128)
 10543  0A7B  0020               	movlb	0	; select bank0
 10544  0A7C  0820               	movf	CCP3_SetCallBack@customCallBack,w
 10545  0A7D  0021               	movlb	1	; select bank1
 10546  0A7E  00BE               	movwf	_CCP3_CallBack^(0+128)
 10547  0A7F                     l451:
 10548  0A7F  0008               	return
 10549  0A80                     __end_of_CCP3_SetCallBack:
 10550                           
 10551                           	psect	text27
 10552  0C1D                     __ptext27:	
 10553 ;; *************** function _CCP2_Initialize *****************
 10554 ;; Defined at:
 10555 ;;		line 49 in file "ccp2.c"
 10556 ;; Parameters:    Size  Location     Type
 10557 ;;		None
 10558 ;; Auto vars:     Size  Location     Type
 10559 ;;		None
 10560 ;; Return value:  Size  Location     Type
 10561 ;;                  1    wreg      void 
 10562 ;; Registers used:
 10563 ;;		wreg, status,2, status,0, pclath, cstack
 10564 ;; Tracked objects:
 10565 ;;		On entry : 0/0
 10566 ;;		On exit  : 0/0
 10567 ;;		Unchanged: 0/0
 10568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10573 ;;Total ram usage:        0 bytes
 10574 ;; Hardware stack levels used: 1
 10575 ;; Hardware stack levels required when called: 5
 10576 ;; This function calls:
 10577 ;;		_CCP2_SetCallBack
 10578 ;; This function is called by:
 10579 ;;		_SYSTEM_Initialize
 10580 ;; This function uses a non-reentrant model
 10581 ;;
 10582                           
 10583  0C1D                     _CCP2_Initialize:	
 10584                           ;psect for function _CCP2_Initialize
 10585                           
 10586  0C1D                     l3592:	
 10587                           ;incstack = 0
 10588                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10589                           
 10590                           
 10591                           ;ccp2.c: 52:  CCP2CON = 0x83;
 10592  0C1D  3083               	movlw	131
 10593  0C1E  0025               	movlb	5	; select bank5
 10594  0C1F  0097               	movwf	23	;volatile
 10595  0C20                     l3594:
 10596                           
 10597                           ;ccp2.c: 55:  CCP2CAP = 0x00;
 10598  0C20  0198               	clrf	24	;volatile
 10599  0C21                     l3596:
 10600                           
 10601                           ;ccp2.c: 58:  CCPR2H = 0x00;
 10602  0C21  0196               	clrf	22	;volatile
 10603  0C22                     l3598:
 10604                           
 10605                           ;ccp2.c: 61:  CCPR2L = 0x00;
 10606  0C22  0195               	clrf	21	;volatile
 10607  0C23                     l3600:
 10608                           
 10609                           ;ccp2.c: 64:     CCP2_SetCallBack(CCP2_DefaultCallBack);
 10610  0C23  3080               	movlw	low _CCP2_DefaultCallBack
 10611  0C24  0020               	movlb	0	; select bank0
 10612  0C25  00A0               	movwf	CCP2_SetCallBack@customCallBack
 10613  0C26  300E               	movlw	high _CCP2_DefaultCallBack
 10614  0C27  00A1               	movwf	CCP2_SetCallBack@customCallBack+1
 10615  0C28  318A  226E  318C   	fcall	_CCP2_SetCallBack
 10616  0C2B                     l3602:
 10617                           
 10618                           ;ccp2.c: 67:  CCPTMRSbits.C2TSEL = 0x1;
 10619  0C2B  0025               	movlb	5	; select bank5
 10620  0C2C  081F               	movf	31,w	;volatile
 10621  0C2D  39F3               	andlw	-13
 10622  0C2E  3804               	iorlw	4
 10623  0C2F  009F               	movwf	31	;volatile
 10624  0C30                     l3604:
 10625                           
 10626                           ;ccp2.c: 70:     PIR4bits.CCP2IF = 0;
 10627  0C30  0020               	movlb	0	; select bank0
 10628  0C31  1094               	bcf	20,1	;volatile
 10629  0C32                     l3606:
 10630                           
 10631                           ;ccp2.c: 73:     PIE4bits.CCP2IE = 1;
 10632  0C32  0021               	movlb	1	; select bank1
 10633  0C33  1494               	bsf	20,1	;volatile
 10634  0C34                     l399:
 10635  0C34  0008               	return
 10636  0C35                     __end_of_CCP2_Initialize:
 10637                           
 10638                           	psect	text28
 10639  0A6E                     __ptext28:	
 10640 ;; *************** function _CCP2_SetCallBack *****************
 10641 ;; Defined at:
 10642 ;;		line 95 in file "ccp2.c"
 10643 ;; Parameters:    Size  Location     Type
 10644 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10645 ;;		 -> CCP2_DefaultCallBack(1), 
 10646 ;; Auto vars:     Size  Location     Type
 10647 ;;		None
 10648 ;; Return value:  Size  Location     Type
 10649 ;;                  1    wreg      void 
 10650 ;; Registers used:
 10651 ;;		wreg
 10652 ;; Tracked objects:
 10653 ;;		On entry : 0/0
 10654 ;;		On exit  : 0/0
 10655 ;;		Unchanged: 0/0
 10656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10657 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10660 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10661 ;;Total ram usage:        2 bytes
 10662 ;; Hardware stack levels used: 1
 10663 ;; Hardware stack levels required when called: 4
 10664 ;; This function calls:
 10665 ;;		Nothing
 10666 ;; This function is called by:
 10667 ;;		_CCP2_Initialize
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671  0A6E                     _CCP2_SetCallBack:	
 10672                           ;psect for function _CCP2_SetCallBack
 10673                           
 10674  0A6E                     l3320:	
 10675                           ;incstack = 0
 10676                           ; Regs used in _CCP2_SetCallBack: [wreg]
 10677                           
 10678                           
 10679                           ;ccp2.c: 96:     CCP2_CallBack = customCallBack;
 10680  0A6E  0020               	movlb	0	; select bank0
 10681  0A6F  0821               	movf	CCP2_SetCallBack@customCallBack+1,w
 10682  0A70  0021               	movlb	1	; select bank1
 10683  0A71  00C7               	movwf	(_CCP2_CallBack+1)^(0+128)
 10684  0A72  0020               	movlb	0	; select bank0
 10685  0A73  0820               	movf	CCP2_SetCallBack@customCallBack,w
 10686  0A74  0021               	movlb	1	; select bank1
 10687  0A75  00C6               	movwf	_CCP2_CallBack^(0+128)
 10688  0A76                     l405:
 10689  0A76  0008               	return
 10690  0A77                     __end_of_CCP2_SetCallBack:
 10691                           
 10692                           	psect	text29
 10693  0C05                     __ptext29:	
 10694 ;; *************** function _CCP1_Initialize *****************
 10695 ;; Defined at:
 10696 ;;		line 49 in file "ccp1.c"
 10697 ;; Parameters:    Size  Location     Type
 10698 ;;		None
 10699 ;; Auto vars:     Size  Location     Type
 10700 ;;		None
 10701 ;; Return value:  Size  Location     Type
 10702 ;;                  1    wreg      void 
 10703 ;; Registers used:
 10704 ;;		wreg, status,2, status,0, pclath, cstack
 10705 ;; Tracked objects:
 10706 ;;		On entry : 0/0
 10707 ;;		On exit  : 0/0
 10708 ;;		Unchanged: 0/0
 10709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10714 ;;Total ram usage:        0 bytes
 10715 ;; Hardware stack levels used: 1
 10716 ;; Hardware stack levels required when called: 5
 10717 ;; This function calls:
 10718 ;;		_CCP1_SetCallBack
 10719 ;; This function is called by:
 10720 ;;		_SYSTEM_Initialize
 10721 ;; This function uses a non-reentrant model
 10722 ;;
 10723                           
 10724  0C05                     _CCP1_Initialize:	
 10725                           ;psect for function _CCP1_Initialize
 10726                           
 10727  0C05                     l3554:	
 10728                           ;incstack = 0
 10729                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10730                           
 10731                           
 10732                           ;ccp1.c: 52:  CCP1CON = 0x83;
 10733  0C05  3083               	movlw	131
 10734  0C06  0025               	movlb	5	; select bank5
 10735  0C07  0093               	movwf	19	;volatile
 10736  0C08                     l3556:
 10737                           
 10738                           ;ccp1.c: 55:  CCP1CAP = 0x00;
 10739  0C08  0194               	clrf	20	;volatile
 10740  0C09                     l3558:
 10741                           
 10742                           ;ccp1.c: 58:  CCPR1H = 0x00;
 10743  0C09  0192               	clrf	18	;volatile
 10744  0C0A                     l3560:
 10745                           
 10746                           ;ccp1.c: 61:  CCPR1L = 0x00;
 10747  0C0A  0191               	clrf	17	;volatile
 10748  0C0B                     l3562:
 10749                           
 10750                           ;ccp1.c: 64:     CCP1_SetCallBack(CCP1_DefaultCallBack);
 10751  0C0B  3044               	movlw	low _CCP1_DefaultCallBack
 10752  0C0C  0020               	movlb	0	; select bank0
 10753  0C0D  00A0               	movwf	CCP1_SetCallBack@customCallBack
 10754  0C0E  300E               	movlw	high _CCP1_DefaultCallBack
 10755  0C0F  00A1               	movwf	CCP1_SetCallBack@customCallBack+1
 10756  0C10  318A  2265  318C   	fcall	_CCP1_SetCallBack
 10757  0C13                     l3564:
 10758                           
 10759                           ;ccp1.c: 67:  CCPTMRSbits.C1TSEL = 0x1;
 10760  0C13  0025               	movlb	5	; select bank5
 10761  0C14  081F               	movf	31,w	;volatile
 10762  0C15  39FC               	andlw	-4
 10763  0C16  3801               	iorlw	1
 10764  0C17  009F               	movwf	31	;volatile
 10765  0C18                     l3566:
 10766                           
 10767                           ;ccp1.c: 70:     PIR4bits.CCP1IF = 0;
 10768  0C18  0020               	movlb	0	; select bank0
 10769  0C19  1014               	bcf	20,0	;volatile
 10770  0C1A                     l3568:
 10771                           
 10772                           ;ccp1.c: 73:     PIE4bits.CCP1IE = 1;
 10773  0C1A  0021               	movlb	1	; select bank1
 10774  0C1B  1414               	bsf	20,0	;volatile
 10775  0C1C                     l353:
 10776  0C1C  0008               	return
 10777  0C1D                     __end_of_CCP1_Initialize:
 10778                           
 10779                           	psect	text30
 10780  0A65                     __ptext30:	
 10781 ;; *************** function _CCP1_SetCallBack *****************
 10782 ;; Defined at:
 10783 ;;		line 95 in file "ccp1.c"
 10784 ;; Parameters:    Size  Location     Type
 10785 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10786 ;;		 -> CCP1_DefaultCallBack(1), 
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;		None
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  1    wreg      void 
 10791 ;; Registers used:
 10792 ;;		wreg
 10793 ;; Tracked objects:
 10794 ;;		On entry : 0/0
 10795 ;;		On exit  : 0/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10798 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10801 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10802 ;;Total ram usage:        2 bytes
 10803 ;; Hardware stack levels used: 1
 10804 ;; Hardware stack levels required when called: 4
 10805 ;; This function calls:
 10806 ;;		Nothing
 10807 ;; This function is called by:
 10808 ;;		_CCP1_Initialize
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812  0A65                     _CCP1_SetCallBack:	
 10813                           ;psect for function _CCP1_SetCallBack
 10814                           
 10815  0A65                     l3318:	
 10816                           ;incstack = 0
 10817                           ; Regs used in _CCP1_SetCallBack: [wreg]
 10818                           
 10819                           
 10820                           ;ccp1.c: 96:     CCP1_CallBack = customCallBack;
 10821  0A65  0020               	movlb	0	; select bank0
 10822  0A66  0821               	movf	CCP1_SetCallBack@customCallBack+1,w
 10823  0A67  0021               	movlb	1	; select bank1
 10824  0A68  00CF               	movwf	(_CCP1_CallBack+1)^(0+128)
 10825  0A69  0020               	movlb	0	; select bank0
 10826  0A6A  0820               	movf	CCP1_SetCallBack@customCallBack,w
 10827  0A6B  0021               	movlb	1	; select bank1
 10828  0A6C  00CE               	movwf	_CCP1_CallBack^(0+128)
 10829  0A6D                     l359:
 10830  0A6D  0008               	return
 10831  0A6E                     __end_of_CCP1_SetCallBack:
 10832                           
 10833                           	psect	text31
 10834  0B04                     __ptext31:	
 10835 ;; *************** function _MotorControl_Init *****************
 10836 ;; Defined at:
 10837 ;;		line 37 in file "MotorControl.c"
 10838 ;; Parameters:    Size  Location     Type
 10839 ;;		None
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;		None
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  1    wreg      void 
 10844 ;; Registers used:
 10845 ;;		wreg, status,2, status,0, pclath, cstack
 10846 ;; Tracked objects:
 10847 ;;		On entry : 0/0
 10848 ;;		On exit  : 0/0
 10849 ;;		Unchanged: 0/0
 10850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10855 ;;Total ram usage:        0 bytes
 10856 ;; Hardware stack levels used: 1
 10857 ;; Hardware stack levels required when called: 6
 10858 ;; This function calls:
 10859 ;;		_MotorControl_Off
 10860 ;; This function is called by:
 10861 ;;		_main
 10862 ;; This function uses a non-reentrant model
 10863 ;;
 10864                           
 10865  0B04                     _MotorControl_Init:	
 10866                           ;psect for function _MotorControl_Init
 10867                           
 10868  0B04                     l4250:	
 10869                           ;incstack = 0
 10870                           ; Regs used in _MotorControl_Init: [wreg+status,2+status,0+pclath+cstack]
 10871                           
 10872                           
 10873                           ;MotorControl.c: 39:     dutyCyclePerMilli = 500;
 10874  0B04  30F4               	movlw	244
 10875  0B05  0022               	movlb	2	; select bank2
 10876  0B06  00C6               	movwf	_dutyCyclePerMilli^(0+256)
 10877  0B07  3001               	movlw	1
 10878  0B08  00C7               	movwf	(_dutyCyclePerMilli^(0+256)+1)
 10879                           
 10880                           ;MotorControl.c: 40:     dutyCycle10bit = 512;
 10881  0B09  3000               	movlw	0
 10882  0B0A  0021               	movlb	1	; select bank1
 10883  0B0B  00A8               	movwf	_dutyCycle10bit^(0+128)
 10884  0B0C  3002               	movlw	2
 10885  0B0D  00A9               	movwf	(_dutyCycle10bit^(0+128)+1)
 10886  0B0E                     l4252:
 10887                           
 10888                           ;MotorControl.c: 41:     MotorControl_Off();
 10889  0B0E  318A  224C  318B   	fcall	_MotorControl_Off
 10890  0B11                     l837:
 10891  0B11  0008               	return
 10892  0B12                     __end_of_MotorControl_Init:
 10893                           
 10894                           	psect	text32
 10895  0A4C                     __ptext32:	
 10896 ;; *************** function _MotorControl_Off *****************
 10897 ;; Defined at:
 10898 ;;		line 76 in file "MotorControl.c"
 10899 ;; Parameters:    Size  Location     Type
 10900 ;;		None
 10901 ;; Auto vars:     Size  Location     Type
 10902 ;;		None
 10903 ;; Return value:  Size  Location     Type
 10904 ;;                  1    wreg      void 
 10905 ;; Registers used:
 10906 ;;		wreg, status,2, status,0, pclath, cstack
 10907 ;; Tracked objects:
 10908 ;;		On entry : 0/0
 10909 ;;		On exit  : 0/0
 10910 ;;		Unchanged: 0/0
 10911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10916 ;;Total ram usage:        0 bytes
 10917 ;; Hardware stack levels used: 1
 10918 ;; Hardware stack levels required when called: 5
 10919 ;; This function calls:
 10920 ;;		_TMR2_StopTimer
 10921 ;;		_TMR2_WriteTimer
 10922 ;; This function is called by:
 10923 ;;		_MotorControl_Init
 10924 ;; This function uses a non-reentrant model
 10925 ;;
 10926                           
 10927  0A4C                     _MotorControl_Off:	
 10928                           ;psect for function _MotorControl_Off
 10929                           
 10930  0A4C                     l4004:	
 10931                           ;incstack = 0
 10932                           ; Regs used in _MotorControl_Off: [wreg+status,2+status,0+pclath+cstack]
 10933                           
 10934                           
 10935                           ;MotorControl.c: 78:     TMR2_StopTimer();
 10936  0A4C  318A  220D  318A   	fcall	_TMR2_StopTimer
 10937  0A4F                     l4006:
 10938                           
 10939                           ;MotorControl.c: 79:     TMR2_WriteTimer(0x00);
 10940  0A4F  3000               	movlw	0
 10941  0A50  318A  221F  318A   	fcall	_TMR2_WriteTimer
 10942  0A53                     l848:
 10943  0A53  0008               	return
 10944  0A54                     __end_of_MotorControl_Off:
 10945                           
 10946                           	psect	text33
 10947  0A1F                     __ptext33:	
 10948 ;; *************** function _TMR2_WriteTimer *****************
 10949 ;; Defined at:
 10950 ;;		line 61 in file "tmr2.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;  timerVal        1    wreg     unsigned char 
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;  timerVal        1    0[BANK0 ] unsigned char 
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  1    wreg      void 
 10957 ;; Registers used:
 10958 ;;		wreg
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10965 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10967 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10968 ;;Total ram usage:        1 bytes
 10969 ;; Hardware stack levels used: 1
 10970 ;; Hardware stack levels required when called: 4
 10971 ;; This function calls:
 10972 ;;		Nothing
 10973 ;; This function is called by:
 10974 ;;		_MotorControl_Off
 10975 ;; This function uses a non-reentrant model
 10976 ;;
 10977                           
 10978  0A1F                     _TMR2_WriteTimer:	
 10979                           ;psect for function _TMR2_WriteTimer
 10980                           
 10981                           
 10982                           ;incstack = 0
 10983                           ; Regs used in _TMR2_WriteTimer: [wreg]
 10984                           ;TMR2_WriteTimer@timerVal stored from wreg
 10985  0A1F  0020               	movlb	0	; select bank0
 10986  0A20  00A0               	movwf	TMR2_WriteTimer@timerVal
 10987  0A21                     l3708:
 10988                           
 10989                           ;tmr2.c: 61: void TMR2_WriteTimer(uint8_t timerVal);tmr2.c: 62: {;tmr2.c: 64:     TMR2 =
      +                           timerVal;
 10990  0A21  0820               	movf	TMR2_WriteTimer@timerVal,w
 10991  0A22  009D               	movwf	29	;volatile
 10992  0A23                     l917:
 10993  0A23  0008               	return
 10994  0A24                     __end_of_TMR2_WriteTimer:
 10995                           
 10996                           	psect	text34
 10997  0A0D                     __ptext34:	
 10998 ;; *************** function _TMR2_StopTimer *****************
 10999 ;; Defined at:
 11000 ;;		line 42 in file "tmr2.c"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;		None
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;		None
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  1    wreg      void 
 11007 ;; Registers used:
 11008 ;;		None
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;Total ram usage:        0 bytes
 11019 ;; Hardware stack levels used: 1
 11020 ;; Hardware stack levels required when called: 4
 11021 ;; This function calls:
 11022 ;;		Nothing
 11023 ;; This function is called by:
 11024 ;;		_MotorControl_Off
 11025 ;; This function uses a non-reentrant model
 11026 ;;
 11027                           
 11028  0A0D                     _TMR2_StopTimer:	
 11029                           ;psect for function _TMR2_StopTimer
 11030                           
 11031  0A0D                     l3706:	
 11032                           ;incstack = 0
 11033                           ; Regs used in _TMR2_StopTimer: []
 11034                           
 11035                           
 11036                           ;tmr2.c: 45:     T2CONbits.TMR2ON = 0;
 11037  0A0D  0020               	movlb	0	; select bank0
 11038  0A0E  111F               	bcf	31,2	;volatile
 11039  0A0F                     l911:
 11040  0A0F  0008               	return
 11041  0A10                     __end_of_TMR2_StopTimer:
 11042                           
 11043                           	psect	text35
 11044  06FC                     __ptext35:	
 11045 ;; *************** function _JSN_Sensor_Trig *****************
 11046 ;; Defined at:
 11047 ;;		line 87 in file "JSN_Sensor.c"
 11048 ;; Parameters:    Size  Location     Type
 11049 ;;  Sensor          2   24[BANK0 ] PTR struct .
 11050 ;;		 -> RAM(4096), Sens3(6), Sens2(6), Sens1(6), 
 11051 ;; Auto vars:     Size  Location     Type
 11052 ;;		None
 11053 ;; Return value:  Size  Location     Type
 11054 ;;                  1    wreg      void 
 11055 ;; Registers used:
 11056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11057 ;; Tracked objects:
 11058 ;;		On entry : 0/0
 11059 ;;		On exit  : 0/0
 11060 ;;		Unchanged: 0/0
 11061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11062 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11064 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11065 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11066 ;;Total ram usage:        6 bytes
 11067 ;; Hardware stack levels used: 1
 11068 ;; Hardware stack levels required when called: 6
 11069 ;; This function calls:
 11070 ;;		_FRT_GetMicros
 11071 ;;		_WritePin
 11072 ;; This function is called by:
 11073 ;;		_main
 11074 ;; This function uses a non-reentrant model
 11075 ;;
 11076                           
 11077  06FC                     _JSN_Sensor_Trig:	
 11078                           ;psect for function _JSN_Sensor_Trig
 11079                           
 11080  06FC                     l4094:	
 11081                           ;incstack = 0
 11082                           ; Regs used in _JSN_Sensor_Trig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11083                           
 11084                           
 11085                           ;JSN_Sensor.c: 88:     micros = FRT_GetMicros();
 11086  06FC  3187  27AE  3186   	fcall	_FRT_GetMicros
 11087  06FF  0020               	movlb	0	; select bank0
 11088  0700  0829               	movf	?_FRT_GetMicros+3,w
 11089  0701  0022               	movlb	2	; select bank2
 11090  0702  00C3               	movwf	(_micros+3)^(0+256)
 11091  0703  0020               	movlb	0	; select bank0
 11092  0704  0828               	movf	?_FRT_GetMicros+2,w
 11093  0705  0022               	movlb	2	; select bank2
 11094  0706  00C2               	movwf	(_micros+2)^(0+256)
 11095  0707  0020               	movlb	0	; select bank0
 11096  0708  0827               	movf	?_FRT_GetMicros+1,w
 11097  0709  0022               	movlb	2	; select bank2
 11098  070A  00C1               	movwf	(_micros+1)^(0+256)
 11099  070B  0020               	movlb	0	; select bank0
 11100  070C  0826               	movf	?_FRT_GetMicros,w
 11101  070D  0022               	movlb	2	; select bank2
 11102  070E  00C0               	movwf	_micros^(0+256)
 11103  070F                     l4096:
 11104                           
 11105                           ;JSN_Sensor.c: 91:     WritePin(Sensor->trigPin, 1);
 11106  070F  0020               	movlb	0	; select bank0
 11107  0710  01A0               	clrf	WritePin@val
 11108  0711  0AA0               	incf	WritePin@val,f
 11109  0712  0838               	movf	JSN_Sensor_Trig@Sensor,w
 11110  0713  0086               	movwf	6
 11111  0714  0839               	movf	JSN_Sensor_Trig@Sensor+1,w
 11112  0715  0087               	movwf	7
 11113  0716  3144               	addfsr 1,4
 11114  0717  0801               	movf	1,w
 11115  0718  3182  2264  3186   	fcall	_WritePin
 11116  071B                     l4098:	
 11117                           ;JSN_Sensor.c: 94:     while ((FRT_GetMicros() - micros) < 11);
 11118                           
 11119  071B  3187  27AE  3186   	fcall	_FRT_GetMicros
 11120  071E  0022               	movlb	2	; select bank2
 11121  071F  0840               	movf	_micros^(0+256),w
 11122  0720  0020               	movlb	0	; select bank0
 11123  0721  0226               	subwf	?_FRT_GetMicros,w
 11124  0722  00BA               	movwf	??_JSN_Sensor_Trig
 11125  0723  0022               	movlb	2	; select bank2
 11126  0724  0841               	movf	(_micros+1)^(0+256),w
 11127  0725  0020               	movlb	0	; select bank0
 11128  0726  3B27               	subwfb	?_FRT_GetMicros+1,w
 11129  0727  00BB               	movwf	??_JSN_Sensor_Trig+1
 11130  0728  0022               	movlb	2	; select bank2
 11131  0729  0842               	movf	(_micros+2)^(0+256),w
 11132  072A  0020               	movlb	0	; select bank0
 11133  072B  3B28               	subwfb	?_FRT_GetMicros+2,w
 11134  072C  00BC               	movwf	??_JSN_Sensor_Trig+2
 11135  072D  0022               	movlb	2	; select bank2
 11136  072E  0843               	movf	(_micros+3)^(0+256),w
 11137  072F  0020               	movlb	0	; select bank0
 11138  0730  3B29               	subwfb	?_FRT_GetMicros+3,w
 11139  0731  00BD               	movwf	??_JSN_Sensor_Trig+3
 11140  0732  083D               	movf	??_JSN_Sensor_Trig+3,w
 11141  0733  1D03               	btfss	3,2
 11142  0734  2F41               	goto	u1410
 11143  0735  083C               	movf	??_JSN_Sensor_Trig+2,w
 11144  0736  1D03               	btfss	3,2
 11145  0737  2F41               	goto	u1410
 11146  0738  083B               	movf	??_JSN_Sensor_Trig+1,w
 11147  0739  1D03               	btfss	3,2
 11148  073A  2F41               	goto	u1410
 11149  073B  300B               	movlw	11
 11150  073C  023A               	subwf	??_JSN_Sensor_Trig,w
 11151  073D  1C03               	btfss	3,0
 11152  073E  2F40               	goto	u1411
 11153  073F  2F41               	goto	u1410
 11154  0740                     u1411:
 11155  0740  2F1B               	goto	l4098
 11156  0741                     u1410:
 11157  0741                     l4100:
 11158                           
 11159                           ;JSN_Sensor.c: 97:     WritePin(Sensor->trigPin, 0);
 11160  0741  0020               	movlb	0	; select bank0
 11161  0742  01A0               	clrf	WritePin@val
 11162  0743  0838               	movf	JSN_Sensor_Trig@Sensor,w
 11163  0744  0086               	movwf	6
 11164  0745  0839               	movf	JSN_Sensor_Trig@Sensor+1,w
 11165  0746  0087               	movwf	7
 11166  0747  3144               	addfsr 1,4
 11167  0748  0801               	movf	1,w
 11168  0749  3182  2264  3186   	fcall	_WritePin
 11169  074C                     l4102:
 11170                           
 11171                           ;JSN_Sensor.c: 100:     lastTrig = Sensor;
 11172  074C  0020               	movlb	0	; select bank0
 11173  074D  0839               	movf	JSN_Sensor_Trig@Sensor+1,w
 11174  074E  0021               	movlb	1	; select bank1
 11175  074F  00D1               	movwf	(_lastTrig+1)^(0+128)
 11176  0750  0020               	movlb	0	; select bank0
 11177  0751  0838               	movf	JSN_Sensor_Trig@Sensor,w
 11178  0752  0021               	movlb	1	; select bank1
 11179  0753  00D0               	movwf	_lastTrig^(0+128)
 11180  0754                     l50:
 11181  0754  0008               	return
 11182  0755                     __end_of_JSN_Sensor_Trig:
 11183                           
 11184                           	psect	text36
 11185  07AE                     __ptext36:	
 11186 ;; *************** function _FRT_GetMicros *****************
 11187 ;; Defined at:
 11188 ;;		line 32 in file "FRT.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;		None
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;		None
 11193 ;; Return value:  Size  Location     Type
 11194 ;;                  4    6[BANK0 ] unsigned long 
 11195 ;; Registers used:
 11196 ;;		wreg, status,2, status,0, pclath, cstack
 11197 ;; Tracked objects:
 11198 ;;		On entry : 0/0
 11199 ;;		On exit  : 0/0
 11200 ;;		Unchanged: 0/0
 11201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11202 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11204 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11205 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11206 ;;Total ram usage:       18 bytes
 11207 ;; Hardware stack levels used: 1
 11208 ;; Hardware stack levels required when called: 5
 11209 ;; This function calls:
 11210 ;;		_TMR0_GetCallBackNum
 11211 ;;		_TMR0_ReadTimer
 11212 ;;		___wmul
 11213 ;; This function is called by:
 11214 ;;		_JSN_Sensor_Trig
 11215 ;; This function uses a non-reentrant model
 11216 ;;
 11217                           
 11218  07AE                     _FRT_GetMicros:	
 11219                           ;psect for function _FRT_GetMicros
 11220                           
 11221  07AE                     l3916:	
 11222                           ;incstack = 0
 11223                           ; Regs used in _FRT_GetMicros: [wreg+status,2+status,0+pclath+cstack]
 11224                           
 11225                           
 11226                           ;FRT.c: 33:     return (micros + (250*TMR0_GetCallBackNum()) + TMR0_ReadTimer());
 11227  07AE  0022               	movlb	2	; select bank2
 11228  07AF  0838               	movf	_micros@FRT$F1518^(0+256),w
 11229  07B0  0020               	movlb	0	; select bank0
 11230  07B1  00AA               	movwf	??_FRT_GetMicros
 11231  07B2  0022               	movlb	2	; select bank2
 11232  07B3  0839               	movf	(_micros@FRT$F1518+1)^(0+256),w
 11233  07B4  0020               	movlb	0	; select bank0
 11234  07B5  00AB               	movwf	??_FRT_GetMicros+1
 11235  07B6  0022               	movlb	2	; select bank2
 11236  07B7  083A               	movf	(_micros@FRT$F1518+2)^(0+256),w
 11237  07B8  0020               	movlb	0	; select bank0
 11238  07B9  00AC               	movwf	??_FRT_GetMicros+2
 11239  07BA  0022               	movlb	2	; select bank2
 11240  07BB  083B               	movf	(_micros@FRT$F1518+3)^(0+256),w
 11241  07BC  0020               	movlb	0	; select bank0
 11242  07BD  00AD               	movwf	??_FRT_GetMicros+3
 11243  07BE  318A  223E  3187   	fcall	_TMR0_ReadTimer
 11244  07C1  0020               	movlb	0	; select bank0
 11245  07C2  00AE               	movwf	??_FRT_GetMicros+4
 11246  07C3  01AF               	clrf	??_FRT_GetMicros+5
 11247  07C4  01B0               	clrf	??_FRT_GetMicros+6
 11248  07C5  01B1               	clrf	??_FRT_GetMicros+7
 11249  07C6  3180  2002  3187   	fcall	_TMR0_GetCallBackNum
 11250  07C9  0020               	movlb	0	; select bank0
 11251  07CA  00B2               	movwf	??_FRT_GetMicros+8
 11252  07CB  01B3               	clrf	??_FRT_GetMicros+9
 11253  07CC  0832               	movf	??_FRT_GetMicros+8,w
 11254  07CD  00A0               	movwf	___wmul@multiplier
 11255  07CE  0833               	movf	??_FRT_GetMicros+9,w
 11256  07CF  00A1               	movwf	___wmul@multiplier+1
 11257  07D0  30FA               	movlw	250
 11258  07D1  00A2               	movwf	___wmul@multiplicand
 11259  07D2  3000               	movlw	0
 11260  07D3  00A3               	movwf	___wmul@multiplicand+1
 11261  07D4  318C  24B6  3187   	fcall	___wmul
 11262  07D7  0020               	movlb	0	; select bank0
 11263  07D8  0820               	movf	?___wmul,w
 11264  07D9  00B4               	movwf	??_FRT_GetMicros+10
 11265  07DA  0821               	movf	?___wmul+1,w
 11266  07DB  00B5               	movwf	??_FRT_GetMicros+11
 11267  07DC  3000               	movlw	0
 11268  07DD  1BB5               	btfsc	??_FRT_GetMicros+11,7
 11269  07DE  30FF               	movlw	255
 11270  07DF  00B6               	movwf	??_FRT_GetMicros+12
 11271  07E0  00B7               	movwf	??_FRT_GetMicros+13
 11272  07E1  0834               	movf	??_FRT_GetMicros+10,w
 11273  07E2  07AE               	addwf	??_FRT_GetMicros+4,f
 11274  07E3  0835               	movf	??_FRT_GetMicros+11,w
 11275  07E4  3DAF               	addwfc	??_FRT_GetMicros+5,f
 11276  07E5  0836               	movf	??_FRT_GetMicros+12,w
 11277  07E6  3DB0               	addwfc	??_FRT_GetMicros+6,f
 11278  07E7  0837               	movf	??_FRT_GetMicros+13,w
 11279  07E8  3DB1               	addwfc	??_FRT_GetMicros+7,f
 11280  07E9  082E               	movf	??_FRT_GetMicros+4,w
 11281  07EA  07AA               	addwf	??_FRT_GetMicros,f
 11282  07EB  082F               	movf	??_FRT_GetMicros+5,w
 11283  07EC  3DAB               	addwfc	??_FRT_GetMicros+1,f
 11284  07ED  0830               	movf	??_FRT_GetMicros+6,w
 11285  07EE  3DAC               	addwfc	??_FRT_GetMicros+2,f
 11286  07EF  0831               	movf	??_FRT_GetMicros+7,w
 11287  07F0  3DAD               	addwfc	??_FRT_GetMicros+3,f
 11288  07F1  082D               	movf	??_FRT_GetMicros+3,w
 11289  07F2  00A9               	movwf	?_FRT_GetMicros+3
 11290  07F3  082C               	movf	??_FRT_GetMicros+2,w
 11291  07F4  00A8               	movwf	?_FRT_GetMicros+2
 11292  07F5  082B               	movf	??_FRT_GetMicros+1,w
 11293  07F6  00A7               	movwf	?_FRT_GetMicros+1
 11294  07F7  082A               	movf	??_FRT_GetMicros,w
 11295  07F8  00A6               	movwf	?_FRT_GetMicros
 11296  07F9                     l775:
 11297  07F9  0008               	return
 11298  07FA                     __end_of_FRT_GetMicros:
 11299                           
 11300                           	psect	text37
 11301  0CB6                     __ptext37:	
 11302 ;; *************** function ___wmul *****************
 11303 ;; Defined at:
 11304 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 11305 ;; Parameters:    Size  Location     Type
 11306 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11307 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11308 ;; Auto vars:     Size  Location     Type
 11309 ;;  product         2    4[BANK0 ] unsigned int 
 11310 ;; Return value:  Size  Location     Type
 11311 ;;                  2    0[BANK0 ] unsigned int 
 11312 ;; Registers used:
 11313 ;;		wreg, status,2, status,0
 11314 ;; Tracked objects:
 11315 ;;		On entry : 0/0
 11316 ;;		On exit  : 0/0
 11317 ;;		Unchanged: 0/0
 11318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11319 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11320 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11322 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11323 ;;Total ram usage:        6 bytes
 11324 ;; Hardware stack levels used: 1
 11325 ;; Hardware stack levels required when called: 4
 11326 ;; This function calls:
 11327 ;;		Nothing
 11328 ;; This function is called by:
 11329 ;;		_FRT_GetMicros
 11330 ;; This function uses a non-reentrant model
 11331 ;;
 11332                           
 11333  0CB6                     ___wmul:	
 11334                           ;psect for function ___wmul
 11335                           
 11336  0CB6                     l3710:	
 11337                           ;incstack = 0
 11338                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11339                           
 11340  0CB6  0020               	movlb	0	; select bank0
 11341  0CB7  01A4               	clrf	___wmul@product
 11342  0CB8  01A5               	clrf	___wmul@product+1
 11343  0CB9                     l3712:
 11344  0CB9  1C20               	btfss	___wmul@multiplier,0
 11345  0CBA  2CBC               	goto	u1231
 11346  0CBB  2CBD               	goto	u1230
 11347  0CBC                     u1231:
 11348  0CBC  2CC1               	goto	l1152
 11349  0CBD                     u1230:
 11350  0CBD                     l3714:
 11351  0CBD  0822               	movf	___wmul@multiplicand,w
 11352  0CBE  07A4               	addwf	___wmul@product,f
 11353  0CBF  0823               	movf	___wmul@multiplicand+1,w
 11354  0CC0  3DA5               	addwfc	___wmul@product+1,f
 11355  0CC1                     l1152:
 11356  0CC1  3001               	movlw	1
 11357  0CC2                     u1245:
 11358  0CC2  35A2               	lslf	___wmul@multiplicand,f
 11359  0CC3  0DA3               	rlf	___wmul@multiplicand+1,f
 11360  0CC4  0B89               	decfsz	9,f
 11361  0CC5  2CC2               	goto	u1245
 11362  0CC6                     l3716:
 11363  0CC6  3001               	movlw	1
 11364  0CC7                     u1255:
 11365  0CC7  36A1               	lsrf	___wmul@multiplier+1,f
 11366  0CC8  0CA0               	rrf	___wmul@multiplier,f
 11367  0CC9  0B89               	decfsz	9,f
 11368  0CCA  2CC7               	goto	u1255
 11369  0CCB                     l3718:
 11370  0CCB  0820               	movf	___wmul@multiplier,w
 11371  0CCC  0421               	iorwf	___wmul@multiplier+1,w
 11372  0CCD  1D03               	btfss	3,2
 11373  0CCE  2CD0               	goto	u1261
 11374  0CCF  2CD1               	goto	u1260
 11375  0CD0                     u1261:
 11376  0CD0  2CB9               	goto	l3712
 11377  0CD1                     u1260:
 11378  0CD1                     l3720:
 11379  0CD1  0825               	movf	___wmul@product+1,w
 11380  0CD2  00A1               	movwf	?___wmul+1
 11381  0CD3  0824               	movf	___wmul@product,w
 11382  0CD4  00A0               	movwf	?___wmul
 11383  0CD5                     l1154:
 11384  0CD5  0008               	return
 11385  0CD6                     __end_of___wmul:
 11386                           
 11387                           	psect	text38
 11388  0A3E                     __ptext38:	
 11389 ;; *************** function _TMR0_ReadTimer *****************
 11390 ;; Defined at:
 11391 ;;		line 62 in file "tmr0.c"
 11392 ;; Parameters:    Size  Location     Type
 11393 ;;		None
 11394 ;; Auto vars:     Size  Location     Type
 11395 ;;  readVal         1    1[BANK0 ] unsigned char 
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  1    wreg      unsigned char 
 11398 ;; Registers used:
 11399 ;;		wreg
 11400 ;; Tracked objects:
 11401 ;;		On entry : 0/0
 11402 ;;		On exit  : 0/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11406 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11407 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11408 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11409 ;;Total ram usage:        2 bytes
 11410 ;; Hardware stack levels used: 1
 11411 ;; Hardware stack levels required when called: 4
 11412 ;; This function calls:
 11413 ;;		Nothing
 11414 ;; This function is called by:
 11415 ;;		_FRT_GetMicros
 11416 ;; This function uses a non-reentrant model
 11417 ;;
 11418                           
 11419  0A3E                     _TMR0_ReadTimer:	
 11420                           ;psect for function _TMR0_ReadTimer
 11421                           
 11422  0A3E                     l3676:	
 11423                           ;incstack = 0
 11424                           ; Regs used in _TMR0_ReadTimer: [wreg]
 11425                           
 11426                           
 11427                           ;tmr0.c: 64:     uint8_t readVal;;tmr0.c: 67:     readVal = TMR0L;
 11428  0A3E  0020               	movlb	0	; select bank0
 11429  0A3F  0815               	movf	21,w	;volatile
 11430  0A40  00A0               	movwf	??_TMR0_ReadTimer
 11431  0A41  0820               	movf	??_TMR0_ReadTimer,w
 11432  0A42  00A1               	movwf	TMR0_ReadTimer@readVal
 11433                           
 11434                           ;tmr0.c: 69:     return readVal;
 11435  0A43  0821               	movf	TMR0_ReadTimer@readVal,w
 11436  0A44                     l291:
 11437  0A44  0008               	return
 11438  0A45                     __end_of_TMR0_ReadTimer:
 11439                           
 11440                           	psect	text39
 11441  0002                     __ptext39:	
 11442 ;; *************** function _TMR0_GetCallBackNum *****************
 11443 ;; Defined at:
 11444 ;;		line 130 in file "tmr0.c"
 11445 ;; Parameters:    Size  Location     Type
 11446 ;;		None
 11447 ;; Auto vars:     Size  Location     Type
 11448 ;;		None
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  1    wreg      unsigned char 
 11451 ;; Registers used:
 11452 ;;		wreg
 11453 ;; Tracked objects:
 11454 ;;		On entry : 0/0
 11455 ;;		On exit  : 0/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11462 ;;Total ram usage:        0 bytes
 11463 ;; Hardware stack levels used: 1
 11464 ;; Hardware stack levels required when called: 4
 11465 ;; This function calls:
 11466 ;;		Nothing
 11467 ;; This function is called by:
 11468 ;;		_FRT_GetMicros
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472  0002                     _TMR0_GetCallBackNum:	
 11473                           ;psect for function _TMR0_GetCallBackNum
 11474                           
 11475  0002                     l3688:	
 11476                           ;incstack = 0
 11477                           ; Regs used in _TMR0_GetCallBackNum: [wreg]
 11478                           
 11479                           
 11480                           ;tmr0.c: 131:     return CountCallBack;
 11481  0002  087D               	movf	_CountCallBack,w	;volatile
 11482  0003                     l313:
 11483  0003  0008               	return
 11484  0004                     __end_of_TMR0_GetCallBackNum:
 11485                           
 11486                           	psect	text40
 11487  03DA                     __ptext40:	
 11488 ;; *************** function _JSN_Sensor_Init *****************
 11489 ;; Defined at:
 11490 ;;		line 32 in file "JSN_Sensor.c"
 11491 ;; Parameters:    Size  Location     Type
 11492 ;;  Sensor          2    2[BANK1 ] PTR struct .
 11493 ;;		 -> RAM(4096), Sens3(6), Sens2(6), Sens1(6), 
 11494 ;;  trigPin         1    4[BANK1 ] enum E7144
 11495 ;;  echoPin         1    5[BANK1 ] enum E7144
 11496 ;; Auto vars:     Size  Location     Type
 11497 ;;		None
 11498 ;; Return value:  Size  Location     Type
 11499 ;;                  1    wreg      unsigned char 
 11500 ;; Registers used:
 11501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11502 ;; Tracked objects:
 11503 ;;		On entry : 0/0
 11504 ;;		On exit  : 0/0
 11505 ;;		Unchanged: 0/0
 11506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11507 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11509 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11510 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11511 ;;Total ram usage:        6 bytes
 11512 ;; Hardware stack levels used: 1
 11513 ;; Hardware stack levels required when called: 13
 11514 ;; This function calls:
 11515 ;;		_SetPin
 11516 ;;		_WritePin
 11517 ;;		_printf
 11518 ;; This function is called by:
 11519 ;;		_main
 11520 ;; This function uses a non-reentrant model
 11521 ;;
 11522                           
 11523  03DA                     _JSN_Sensor_Init:	
 11524                           ;psect for function _JSN_Sensor_Init
 11525                           
 11526  03DA                     l4050:	
 11527                           ;incstack = 0
 11528                           ; Regs used in _JSN_Sensor_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11529                           
 11530                           
 11531                           ;JSN_Sensor.c: 39:     switch (echoPin) {
 11532  03DA  2BED               	goto	l4060
 11533  03DB                     l24:	
 11534                           ;JSN_Sensor.c: 42:         case C3:
 11535                           
 11536  03DB                     l4052:
 11537                           
 11538                           ;JSN_Sensor.c: 44:             SetPin(echoPin, 1);
 11539  03DB  0020               	movlb	0	; select bank0
 11540  03DC  01A0               	clrf	SetPin@io
 11541  03DD  0AA0               	incf	SetPin@io,f
 11542  03DE  0021               	movlb	1	; select bank1
 11543  03DF  085E               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 11544  03E0  3183  231F  3183   	fcall	_SetPin
 11545                           
 11546                           ;JSN_Sensor.c: 45:             break;
 11547  03E3  2C1C               	goto	l4070
 11548  03E4                     l4054:
 11549                           
 11550                           ;JSN_Sensor.c: 47:             printf("ERROR: Invalid echoPin (must be [A2, A4, C3, C5])
      +                          ");
 11551  03E4  303A               	movlw	low (STR_1| (0+32768))
 11552  03E5  0020               	movlb	0	; select bank0
 11553  03E6  00EC               	movwf	printf@fmt
 11554  03E7  3090               	movlw	high (STR_1| (0+32768))
 11555  03E8  00ED               	movwf	printf@fmt+1
 11556  03E9  318B  2398  3183   	fcall	_printf
 11557  03EC  2C7A               	goto	l28
 11558  03ED                     l4060:
 11559  03ED  0021               	movlb	1	; select bank1
 11560  03EE  085E               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 11561  03EF  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11562  03F0  01E0               	clrf	(??_JSN_Sensor_Init^(0+128)+1)
 11563                           
 11564                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11565                           ; Switch size 1, requested type "simple"
 11566                           ; Number of cases is 1, Range of values is 0 to 0
 11567                           ; switch strategies available:
 11568                           ; Name         Instructions Cycles
 11569                           ; simple_byte            4     3 (average)
 11570                           ; direct_byte            8     6 (fixed)
 11571                           ; jumptable            260     6 (fixed)
 11572                           ;	Chosen strategy is simple_byte
 11573  03F1  0860               	movf	(??_JSN_Sensor_Init+1)^(0+128),w
 11574  03F2  3A00               	xorlw	0	; case 0
 11575  03F3  1903               	skipnz
 11576  03F4  2BF6               	goto	l4604
 11577  03F5  2BE4               	goto	l4054
 11578  03F6                     l4604:
 11579                           
 11580                           ; Switch size 1, requested type "simple"
 11581                           ; Number of cases is 4, Range of values is 1 to 11
 11582                           ; switch strategies available:
 11583                           ; Name         Instructions Cycles
 11584                           ; simple_byte           13     7 (average)
 11585                           ; direct_byte           31     9 (fixed)
 11586                           ; jumptable            263     9 (fixed)
 11587                           ;	Chosen strategy is simple_byte
 11588  03F6  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11589  03F7  3A01               	xorlw	1	; case 1
 11590  03F8  1903               	skipnz
 11591  03F9  2BDB               	goto	l4052
 11592  03FA  3A02               	xorlw	2	; case 3
 11593  03FB  1903               	skipnz
 11594  03FC  2BDB               	goto	l4052
 11595  03FD  3A06               	xorlw	6	; case 5
 11596  03FE  1903               	skipnz
 11597  03FF  2BDB               	goto	l4052
 11598  0400  3A0E               	xorlw	14	; case 11
 11599  0401  1903               	skipnz
 11600  0402  2BDB               	goto	l24
 11601  0403  2BE4               	goto	l4054
 11602  0404                     l33:	
 11603                           ;JSN_Sensor.c: 56:         case C7:
 11604                           
 11605  0404                     l4062:
 11606                           
 11607                           ;JSN_Sensor.c: 66:             SetPin(trigPin, 0);
 11608  0404  0020               	movlb	0	; select bank0
 11609  0405  01A0               	clrf	SetPin@io
 11610  0406  0021               	movlb	1	; select bank1
 11611  0407  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 11612  0408  3183  231F  3183   	fcall	_SetPin
 11613                           
 11614                           ;JSN_Sensor.c: 67:             WritePin(trigPin, 0);
 11615  040B  0020               	movlb	0	; select bank0
 11616  040C  01A0               	clrf	WritePin@val
 11617  040D  0021               	movlb	1	; select bank1
 11618  040E  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 11619  040F  3182  2264  3183   	fcall	_WritePin
 11620                           
 11621                           ;JSN_Sensor.c: 68:             break;
 11622  0412  2C4E               	goto	l4072
 11623  0413                     l4064:
 11624                           
 11625                           ;JSN_Sensor.c: 70:             printf("ERROR: Invalid trigPin (must NOT be [A2, A3, A4, 
      +                          C3, C5])");
 11626  0413  3000               	movlw	low (STR_2| (0+32768))
 11627  0414  0020               	movlb	0	; select bank0
 11628  0415  00EC               	movwf	printf@fmt
 11629  0416  3090               	movlw	high (STR_2| (0+32768))
 11630  0417  00ED               	movwf	printf@fmt+1
 11631  0418  318B  2398  3183   	fcall	_printf
 11632  041B  2C7A               	goto	l28
 11633  041C                     l4070:
 11634  041C  0021               	movlb	1	; select bank1
 11635  041D  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 11636  041E  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11637  041F  01E0               	clrf	(??_JSN_Sensor_Init^(0+128)+1)
 11638                           
 11639                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11640                           ; Switch size 1, requested type "simple"
 11641                           ; Number of cases is 1, Range of values is 0 to 0
 11642                           ; switch strategies available:
 11643                           ; Name         Instructions Cycles
 11644                           ; simple_byte            4     3 (average)
 11645                           ; direct_byte            8     6 (fixed)
 11646                           ; jumptable            260     6 (fixed)
 11647                           ;	Chosen strategy is simple_byte
 11648  0420  0860               	movf	(??_JSN_Sensor_Init+1)^(0+128),w
 11649  0421  3A00               	xorlw	0	; case 0
 11650  0422  1903               	skipnz
 11651  0423  2C25               	goto	l4606
 11652  0424  2C13               	goto	l4064
 11653  0425                     l4606:
 11654                           
 11655                           ; Switch size 1, requested type "simple"
 11656                           ; Number of cases is 13, Range of values is 0 to 17
 11657                           ; switch strategies available:
 11658                           ; Name         Instructions Cycles
 11659                           ; simple_byte           40    21 (average)
 11660                           ; direct_byte           42     6 (fixed)
 11661                           ; jumptable            260     6 (fixed)
 11662                           ;	Chosen strategy is simple_byte
 11663  0425  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11664  0426  3A00               	xorlw	0	; case 0
 11665  0427  1903               	skipnz
 11666  0428  2C04               	goto	l33
 11667  0429  3A04               	xorlw	4	; case 4
 11668  042A  1903               	skipnz
 11669  042B  2C04               	goto	l33
 11670  042C  3A02               	xorlw	2	; case 6
 11671  042D  1903               	skipnz
 11672  042E  2C04               	goto	l33
 11673  042F  3A01               	xorlw	1	; case 7
 11674  0430  1903               	skipnz
 11675  0431  2C04               	goto	l4062
 11676  0432  3A0F               	xorlw	15	; case 8
 11677  0433  1903               	skipnz
 11678  0434  2C04               	goto	l4062
 11679  0435  3A01               	xorlw	1	; case 9
 11680  0436  1903               	skipnz
 11681  0437  2C04               	goto	l4062
 11682  0438  3A03               	xorlw	3	; case 10
 11683  0439  1903               	skipnz
 11684  043A  2C04               	goto	l4062
 11685  043B  3A06               	xorlw	6	; case 12
 11686  043C  1903               	skipnz
 11687  043D  2C04               	goto	l4062
 11688  043E  3A01               	xorlw	1	; case 13
 11689  043F  1903               	skipnz
 11690  0440  2C04               	goto	l4062
 11691  0441  3A03               	xorlw	3	; case 14
 11692  0442  1903               	skipnz
 11693  0443  2C04               	goto	l4062
 11694  0444  3A01               	xorlw	1	; case 15
 11695  0445  1903               	skipnz
 11696  0446  2C04               	goto	l4062
 11697  0447  3A1F               	xorlw	31	; case 16
 11698  0448  1903               	skipnz
 11699  0449  2C04               	goto	l4062
 11700  044A  3A01               	xorlw	1	; case 17
 11701  044B  1903               	skipnz
 11702  044C  2C04               	goto	l4062
 11703  044D  2C13               	goto	l4064
 11704  044E                     l4072:
 11705                           
 11706                           ;JSN_Sensor.c: 75:     Sensor->distance = 0;
 11707  044E  0021               	movlb	1	; select bank1
 11708  044F  085B               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11709  0450  0086               	movwf	6
 11710  0451  085C               	movf	(JSN_Sensor_Init@Sensor+1)^(0+128),w
 11711  0452  0087               	movwf	7
 11712  0453  3142               	addfsr 1,2
 11713  0454  3000               	movlw	0
 11714  0455  3FC0               	movwi [0]fsr1
 11715  0456  3FC1               	movwi [1]fsr1
 11716                           
 11717                           ;JSN_Sensor.c: 76:     Sensor->echoHighTime = 0;
 11718  0457  085B               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11719  0458  0086               	movwf	6
 11720  0459  085C               	movf	(JSN_Sensor_Init@Sensor+1)^(0+128),w
 11721  045A  0087               	movwf	7
 11722  045B  3000               	movlw	0
 11723  045C  3FC0               	movwi [0]fsr1
 11724  045D  3FC1               	movwi [1]fsr1
 11725  045E                     l4074:
 11726                           
 11727                           ;JSN_Sensor.c: 77:     Sensor->echoPin = echoPin;
 11728  045E  085B               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11729  045F  3E05               	addlw	5
 11730  0460  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11731  0461  3000               	movlw	0
 11732  0462  3D5C               	addwfc	(JSN_Sensor_Init@Sensor+1)^(0+128),w
 11733  0463  00E0               	movwf	(??_JSN_Sensor_Init+1)^(0+128)
 11734  0464  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11735  0465  0086               	movwf	6
 11736  0466  0860               	movf	(??_JSN_Sensor_Init+1)^(0+128),w
 11737  0467  0087               	movwf	7
 11738  0468  085E               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 11739  0469  0081               	movwf	1
 11740  046A                     l4076:
 11741                           
 11742                           ;JSN_Sensor.c: 78:     Sensor->trigPin = trigPin;
 11743  046A  085B               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11744  046B  3E04               	addlw	4
 11745  046C  00DF               	movwf	??_JSN_Sensor_Init^(0+128)
 11746  046D  3000               	movlw	0
 11747  046E  3D5C               	addwfc	(JSN_Sensor_Init@Sensor+1)^(0+128),w
 11748  046F  00E0               	movwf	(??_JSN_Sensor_Init+1)^(0+128)
 11749  0470  085F               	movf	??_JSN_Sensor_Init^(0+128),w
 11750  0471  0086               	movwf	6
 11751  0472  0860               	movf	(??_JSN_Sensor_Init+1)^(0+128),w
 11752  0473  0087               	movwf	7
 11753  0474  085D               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 11754  0475  0081               	movwf	1
 11755  0476                     l4078:
 11756                           
 11757                           ;JSN_Sensor.c: 80:     lastTrig = Sensor;
 11758  0476  085C               	movf	(JSN_Sensor_Init@Sensor+1)^(0+128),w
 11759  0477  00D1               	movwf	(_lastTrig+1)^(0+128)
 11760  0478  085B               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11761  0479  00D0               	movwf	_lastTrig^(0+128)
 11762  047A                     l28:
 11763  047A  0008               	return
 11764  047B                     __end_of_JSN_Sensor_Init:
 11765                           
 11766                           	psect	text41
 11767  0B98                     __ptext41:	
 11768 ;; *************** function _printf *****************
 11769 ;; Defined at:
 11770 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\printf.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
 11773 ;;		 -> STR_3(3), STR_2(58), STR_1(50), 
 11774 ;; Auto vars:     Size  Location     Type
 11775 ;;  ret             2    0        int 
 11776 ;;  ap              1    1[BANK1 ] PTR void [1]
 11777 ;;		 -> ?_printf(2), 
 11778 ;; Return value:  Size  Location     Type
 11779 ;;                  2   76[BANK0 ] int 
 11780 ;; Registers used:
 11781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11782 ;; Tracked objects:
 11783 ;;		On entry : 0/0
 11784 ;;		On exit  : 0/0
 11785 ;;		Unchanged: 0/0
 11786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11787 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11788 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11789 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11790 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11791 ;;Total ram usage:        6 bytes
 11792 ;; Hardware stack levels used: 1
 11793 ;; Hardware stack levels required when called: 12
 11794 ;; This function calls:
 11795 ;;		_vfprintf
 11796 ;; This function is called by:
 11797 ;;		_JSN_Sensor_Init
 11798 ;;		_main
 11799 ;; This function uses a non-reentrant model
 11800 ;;
 11801                           
 11802  0B98                     _printf:	
 11803                           ;psect for function _printf
 11804                           
 11805  0B98                     l3830:	
 11806                           ;incstack = 0
 11807                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11808                           
 11809  0B98  306E               	movlw	(low ((?_printf| 0+2)))& (0+255)
 11810  0B99  0021               	movlb	1	; select bank1
 11811  0B9A  00D9               	movwf	??_printf^(0+128)
 11812  0B9B  0859               	movf	??_printf^(0+128),w
 11813  0B9C  00DA               	movwf	printf@ap^(0+128)
 11814  0B9D                     l3832:
 11815  0B9D  0020               	movlb	0	; select bank0
 11816  0B9E  086D               	movf	printf@fmt+1,w
 11817  0B9F  00E5               	movwf	vfprintf@fmt+1
 11818  0BA0  086C               	movf	printf@fmt,w
 11819  0BA1  00E4               	movwf	vfprintf@fmt
 11820  0BA2  30DA               	movlw	(low (printf@ap| 0))& (0+255)
 11821  0BA3  0021               	movlb	1	; select bank1
 11822  0BA4  00D9               	movwf	??_printf^(0+128)
 11823  0BA5  0859               	movf	??_printf^(0+128),w
 11824  0BA6  0020               	movlb	0	; select bank0
 11825  0BA7  00E6               	movwf	vfprintf@ap
 11826  0BA8  3000               	movlw	0
 11827  0BA9  318D  25A4  318B   	fcall	_vfprintf
 11828  0BAC                     l1615:
 11829  0BAC  0008               	return
 11830  0BAD                     __end_of_printf:
 11831                           
 11832                           	psect	text42
 11833  0DA4                     __ptext42:	
 11834 ;; *************** function _vfprintf *****************
 11835 ;; Defined at:
 11836 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11837 ;; Parameters:    Size  Location     Type
 11838 ;;  fp              1    wreg     PTR struct _IO_FILE
 11839 ;;		 -> NULL(0), 
 11840 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
 11841 ;;		 -> STR_3(3), STR_2(58), STR_1(50), 
 11842 ;;  ap              1   70[BANK0 ] PTR PTR void 
 11843 ;;		 -> printf@ap(1), 
 11844 ;; Auto vars:     Size  Location     Type
 11845 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
 11846 ;;		 -> NULL(0), 
 11847 ;;  cfmt            2   74[BANK0 ] PTR unsigned char 
 11848 ;;		 -> STR_3(3), STR_2(58), STR_1(50), 
 11849 ;; Return value:  Size  Location     Type
 11850 ;;                  2   68[BANK0 ] int 
 11851 ;; Registers used:
 11852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11853 ;; Tracked objects:
 11854 ;;		On entry : 0/0
 11855 ;;		On exit  : 0/0
 11856 ;;		Unchanged: 0/0
 11857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11858 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11859 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11860 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11861 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11862 ;;Total ram usage:        8 bytes
 11863 ;; Hardware stack levels used: 1
 11864 ;; Hardware stack levels required when called: 11
 11865 ;; This function calls:
 11866 ;;		_vfpfcnvrt
 11867 ;; This function is called by:
 11868 ;;		_printf
 11869 ;; This function uses a non-reentrant model
 11870 ;;
 11871                           
 11872  0DA4                     _vfprintf:	
 11873                           ;psect for function _vfprintf
 11874                           
 11875                           
 11876                           ;incstack = 0
 11877                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11878                           ;vfprintf@fp stored from wreg
 11879  0DA4  0020               	movlb	0	; select bank0
 11880  0DA5  00E9               	movwf	vfprintf@fp
 11881  0DA6                     l3724:
 11882                           
 11883                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 11884  0DA6  0865               	movf	vfprintf@fmt+1,w
 11885  0DA7  00EB               	movwf	vfprintf@cfmt+1
 11886  0DA8  0864               	movf	vfprintf@fmt,w
 11887  0DA9  00EA               	movwf	vfprintf@cfmt
 11888  0DAA                     l3726:
 11889                           
 11890                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 11891  0DAA  0022               	movlb	2	; select bank2
 11892  0DAB  01C4               	clrf	_nout^(0+256)
 11893  0DAC  01C5               	clrf	(_nout+1)^(0+256)
 11894                           
 11895                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11896  0DAD  2DC2               	goto	l3730
 11897  0DAE                     l3728:
 11898                           
 11899                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 11900  0DAE  306A               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 11901  0DAF  00E7               	movwf	??_vfprintf
 11902  0DB0  0867               	movf	??_vfprintf,w
 11903  0DB1  00D4               	movwf	vfpfcnvrt@fmt
 11904  0DB2  0866               	movf	vfprintf@ap,w
 11905  0DB3  00E8               	movwf	??_vfprintf+1
 11906  0DB4  0868               	movf	??_vfprintf+1,w
 11907  0DB5  00D5               	movwf	vfpfcnvrt@ap
 11908  0DB6  0869               	movf	vfprintf@fp,w
 11909  0DB7  3181  21A1  318D   	fcall	_vfpfcnvrt
 11910  0DBA  0020               	movlb	0	; select bank0
 11911  0DBB  0854               	movf	?_vfpfcnvrt,w
 11912  0DBC  0022               	movlb	2	; select bank2
 11913  0DBD  07C4               	addwf	_nout^(0+256),f
 11914  0DBE  0020               	movlb	0	; select bank0
 11915  0DBF  0855               	movf	?_vfpfcnvrt+1,w
 11916  0DC0  0022               	movlb	2	; select bank2
 11917  0DC1  3DC5               	addwfc	(_nout+1)^(0+256),f
 11918  0DC2                     l3730:
 11919                           
 11920                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11921  0DC2  0020               	movlb	0	; select bank0
 11922  0DC3  086A               	movf	vfprintf@cfmt,w
 11923  0DC4  0084               	movwf	4
 11924  0DC5  086B               	movf	vfprintf@cfmt+1,w
 11925  0DC6  0085               	movwf	5
 11926  0DC7  0012               	moviw fsr0++
 11927  0DC8  1D03               	btfss	3,2
 11928  0DC9  2DCB               	goto	u1271
 11929  0DCA  2DCC               	goto	u1270
 11930  0DCB                     u1271:
 11931  0DCB  2DAE               	goto	l3728
 11932  0DCC                     u1270:
 11933  0DCC                     l3732:
 11934                           
 11935                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 11936  0DCC  0022               	movlb	2	; select bank2
 11937  0DCD  0845               	movf	(_nout+1)^(0+256),w
 11938  0DCE  0020               	movlb	0	; select bank0
 11939  0DCF  00E5               	movwf	?_vfprintf+1
 11940  0DD0  0022               	movlb	2	; select bank2
 11941  0DD1  0844               	movf	_nout^(0+256),w
 11942  0DD2  0020               	movlb	0	; select bank0
 11943  0DD3  00E4               	movwf	?_vfprintf
 11944  0DD4                     l1672:
 11945  0DD4  0008               	return
 11946  0DD5                     __end_of_vfprintf:
 11947                           
 11948                           	psect	text43
 11949  01A1                     __ptext43:	
 11950 ;; *************** function _vfpfcnvrt *****************
 11951 ;; Defined at:
 11952 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11953 ;; Parameters:    Size  Location     Type
 11954 ;;  fp              1    wreg     PTR struct _IO_FILE
 11955 ;;		 -> NULL(0), 
 11956 ;;  fmt             1   52[BANK0 ] PTR PTR unsigned char 
 11957 ;;		 -> vfprintf@cfmt(2), 
 11958 ;;  ap              1   53[BANK0 ] PTR PTR void 
 11959 ;;		 -> printf@ap(1), 
 11960 ;; Auto vars:     Size  Location     Type
 11961 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
 11962 ;;		 -> NULL(0), 
 11963 ;;  llu             8   59[BANK0 ] unsigned long long 
 11964 ;;  ll              8    0        long long 
 11965 ;;  f               4    0        long long 
 11966 ;;  ct              3    0        unsigned char [3]
 11967 ;;  vp              2    0        PTR void 
 11968 ;;  i               2    0        int 
 11969 ;;  done            2    0        int 
 11970 ;;  cp              2    0        PTR unsigned char 
 11971 ;;  c               1    0        unsigned char 
 11972 ;; Return value:  Size  Location     Type
 11973 ;;                  2   52[BANK0 ] int 
 11974 ;; Registers used:
 11975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11976 ;; Tracked objects:
 11977 ;;		On entry : 0/0
 11978 ;;		On exit  : 0/0
 11979 ;;		Unchanged: 0/0
 11980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11981 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11982 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11983 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11984 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11985 ;;Total ram usage:       16 bytes
 11986 ;; Hardware stack levels used: 1
 11987 ;; Hardware stack levels required when called: 10
 11988 ;; This function calls:
 11989 ;;		_fputc
 11990 ;;		_utoa
 11991 ;; This function is called by:
 11992 ;;		_vfprintf
 11993 ;; This function uses a non-reentrant model
 11994 ;;
 11995                           
 11996  01A1                     _vfpfcnvrt:	
 11997                           ;psect for function _vfpfcnvrt
 11998                           
 11999                           
 12000                           ;incstack = 0
 12001                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12002                           ;vfpfcnvrt@fp stored from wreg
 12003  01A1  0020               	movlb	0	; select bank0
 12004  01A2  00E3               	movwf	vfpfcnvrt@fp
 12005  01A3                     l3348:
 12006                           
 12007                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 12008  01A3  0854               	movf	vfpfcnvrt@fmt,w
 12009  01A4  0086               	movwf	6
 12010  01A5  0187               	clrf	7
 12011  01A6  3F40               	moviw [0]fsr1
 12012  01A7  00D6               	movwf	??_vfpfcnvrt
 12013  01A8  3F41               	moviw [1]fsr1
 12014  01A9  00D7               	movwf	??_vfpfcnvrt+1
 12015  01AA  0856               	movf	??_vfpfcnvrt,w
 12016  01AB  0084               	movwf	4
 12017  01AC  0857               	movf	??_vfpfcnvrt+1,w
 12018  01AD  0085               	movwf	5
 12019  01AE  0012               	moviw fsr0++
 12020  01AF  3A25               	xorlw	37
 12021  01B0  1D03               	btfss	3,2
 12022  01B1  29B3               	goto	u1181
 12023  01B2  29B4               	goto	u1180
 12024  01B3                     u1181:
 12025  01B3  2A40               	goto	l3382
 12026  01B4                     u1180:
 12027  01B4                     l3350:
 12028                           
 12029                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 12030  01B4  0854               	movf	vfpfcnvrt@fmt,w
 12031  01B5  0086               	movwf	6
 12032  01B6  0187               	clrf	7
 12033  01B7  3001               	movlw	1
 12034  01B8  0781               	addwf	1,f
 12035  01B9  3141               	addfsr 1,1
 12036  01BA  1803               	skipnc
 12037  01BB  0A81               	incf	1,f
 12038  01BC                     l3352:
 12039                           
 12040                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 12041  01BC  0021               	movlb	1	; select bank1
 12042  01BD  01A0               	clrf	_width^(0+128)
 12043  01BE  01A1               	clrf	(_width+1)^(0+128)
 12044  01BF  01A4               	clrf	_flags^(0+128)
 12045  01C0  01A5               	clrf	(_flags+1)^(0+128)
 12046  01C1                     l3354:
 12047                           
 12048                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 12049  01C1  30FF               	movlw	255
 12050  01C2  00A2               	movwf	_prec^(0+128)
 12051  01C3  30FF               	movlw	255
 12052  01C4  00A3               	movwf	(_prec^(0+128)+1)
 12053  01C5                     l3356:
 12054                           
 12055                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
 12056  01C5  0020               	movlb	0	; select bank0
 12057  01C6  0854               	movf	vfpfcnvrt@fmt,w
 12058  01C7  0086               	movwf	6
 12059  01C8  0187               	clrf	7
 12060  01C9  3F40               	moviw [0]fsr1
 12061  01CA  00D6               	movwf	??_vfpfcnvrt
 12062  01CB  3F41               	moviw [1]fsr1
 12063  01CC  00D7               	movwf	??_vfpfcnvrt+1
 12064  01CD  0856               	movf	??_vfpfcnvrt,w
 12065  01CE  0084               	movwf	4
 12066  01CF  0857               	movf	??_vfpfcnvrt+1,w
 12067  01D0  0085               	movwf	5
 12068  01D1  0012               	moviw fsr0++
 12069  01D2  3A75               	xorlw	117
 12070  01D3  1D03               	btfss	3,2
 12071  01D4  29D6               	goto	u1191
 12072  01D5  29D7               	goto	u1190
 12073  01D6                     u1191:
 12074  01D6  2A0B               	goto	l3366
 12075  01D7                     u1190:
 12076  01D7                     l3358:
 12077                           
 12078                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
 12079  01D7  0854               	movf	vfpfcnvrt@fmt,w
 12080  01D8  0086               	movwf	6
 12081  01D9  0187               	clrf	7
 12082  01DA  3001               	movlw	1
 12083  01DB  0781               	addwf	1,f
 12084  01DC  3141               	addfsr 1,1
 12085  01DD  1803               	skipnc
 12086  01DE  0A81               	incf	1,f
 12087  01DF                     l3360:
 12088                           
 12089                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 12090  01DF  0855               	movf	vfpfcnvrt@ap,w
 12091  01E0  0086               	movwf	6
 12092  01E1  0187               	clrf	7
 12093  01E2  0801               	movf	1,w
 12094  01E3  0084               	movwf	4
 12095  01E4  0185               	clrf	5
 12096  01E5  3002               	movlw	2
 12097  01E6  0781               	addwf	1,f
 12098  01E7  3F00               	moviw [0]fsr0
 12099  01E8  00DB               	movwf	vfpfcnvrt@llu
 12100  01E9  3F01               	moviw [1]fsr0
 12101  01EA  00DC               	movwf	vfpfcnvrt@llu+1
 12102  01EB  01DD               	clrf	vfpfcnvrt@llu+2
 12103  01EC  01DE               	clrf	vfpfcnvrt@llu+3
 12104  01ED  01DF               	clrf	vfpfcnvrt@llu+4
 12105  01EE  01E0               	clrf	vfpfcnvrt@llu+5
 12106  01EF  01E1               	clrf	vfpfcnvrt@llu+6
 12107  01F0  01E2               	clrf	vfpfcnvrt@llu+7
 12108  01F1                     l3362:
 12109                           
 12110                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
 12111  01F1  085B               	movf	vfpfcnvrt@llu,w
 12112  01F2  00BC               	movwf	utoa@d
 12113  01F3  085C               	movf	vfpfcnvrt@llu+1,w
 12114  01F4  00BD               	movwf	utoa@d+1
 12115  01F5  085D               	movf	vfpfcnvrt@llu+2,w
 12116  01F6  00BE               	movwf	utoa@d+2
 12117  01F7  085E               	movf	vfpfcnvrt@llu+3,w
 12118  01F8  00BF               	movwf	utoa@d+3
 12119  01F9  085F               	movf	vfpfcnvrt@llu+4,w
 12120  01FA  00C0               	movwf	utoa@d+4
 12121  01FB  0860               	movf	vfpfcnvrt@llu+5,w
 12122  01FC  00C1               	movwf	utoa@d+5
 12123  01FD  0861               	movf	vfpfcnvrt@llu+6,w
 12124  01FE  00C2               	movwf	utoa@d+6
 12125  01FF  0862               	movf	vfpfcnvrt@llu+7,w
 12126  0200  00C3               	movwf	utoa@d+7
 12127  0201  0863               	movf	vfpfcnvrt@fp,w
 12128  0202  3180  20B2  3181   	fcall	_utoa
 12129  0205  0020               	movlb	0	; select bank0
 12130  0206  083D               	movf	?_utoa+1,w
 12131  0207  00D5               	movwf	?_vfpfcnvrt+1
 12132  0208  083C               	movf	?_utoa,w
 12133  0209  00D4               	movwf	?_vfpfcnvrt
 12134  020A  2A63               	goto	l1665
 12135  020B                     l3366:
 12136                           
 12137                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 12138  020B  0854               	movf	vfpfcnvrt@fmt,w
 12139  020C  0086               	movwf	6
 12140  020D  0187               	clrf	7
 12141  020E  3F40               	moviw [0]fsr1
 12142  020F  00D6               	movwf	??_vfpfcnvrt
 12143  0210  3F41               	moviw [1]fsr1
 12144  0211  00D7               	movwf	??_vfpfcnvrt+1
 12145  0212  0856               	movf	??_vfpfcnvrt,w
 12146  0213  0084               	movwf	4
 12147  0214  0857               	movf	??_vfpfcnvrt+1,w
 12148  0215  0085               	movwf	5
 12149  0216  0012               	moviw fsr0++
 12150  0217  3A25               	xorlw	37
 12151  0218  1D03               	btfss	3,2
 12152  0219  2A1B               	goto	u1201
 12153  021A  2A1C               	goto	u1200
 12154  021B                     u1201:
 12155  021B  2A35               	goto	l3376
 12156  021C                     u1200:
 12157  021C                     l3368:
 12158                           
 12159                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 12160  021C  0854               	movf	vfpfcnvrt@fmt,w
 12161  021D  0086               	movwf	6
 12162  021E  0187               	clrf	7
 12163  021F  3001               	movlw	1
 12164  0220  0781               	addwf	1,f
 12165  0221  3141               	addfsr 1,1
 12166  0222  1803               	skipnc
 12167  0223  0A81               	incf	1,f
 12168  0224                     l3370:
 12169                           
 12170                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 12171  0224  3025               	movlw	37
 12172  0225  00A3               	movwf	fputc@c
 12173  0226  3000               	movlw	0
 12174  0227  00A4               	movwf	fputc@c+1
 12175  0228  0863               	movf	vfpfcnvrt@fp,w
 12176  0229  00D6               	movwf	??_vfpfcnvrt
 12177  022A  0856               	movf	??_vfpfcnvrt,w
 12178  022B  00A5               	movwf	fputc@fp
 12179  022C  318F  2777  3181   	fcall	_fputc
 12180  022F                     l3372:
 12181                           
 12182                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 12183  022F  3001               	movlw	1
 12184  0230  0020               	movlb	0	; select bank0
 12185  0231  00D4               	movwf	?_vfpfcnvrt
 12186  0232  3000               	movlw	0
 12187  0233  00D5               	movwf	?_vfpfcnvrt+1
 12188  0234  2A63               	goto	l1665
 12189  0235                     l3376:
 12190                           
 12191                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 12192  0235  0854               	movf	vfpfcnvrt@fmt,w
 12193  0236  0086               	movwf	6
 12194  0237  0187               	clrf	7
 12195  0238  3001               	movlw	1
 12196  0239  0781               	addwf	1,f
 12197  023A  3141               	addfsr 1,1
 12198  023B  1803               	skipnc
 12199  023C  0A81               	incf	1,f
 12200  023D                     l3378:
 12201                           
 12202                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 12203  023D  01D4               	clrf	?_vfpfcnvrt
 12204  023E  01D5               	clrf	?_vfpfcnvrt+1
 12205  023F  2A63               	goto	l1665
 12206  0240                     l3382:
 12207                           
 12208                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 12209  0240  0854               	movf	vfpfcnvrt@fmt,w
 12210  0241  0086               	movwf	6
 12211  0242  0187               	clrf	7
 12212  0243  3F40               	moviw [0]fsr1
 12213  0244  00D6               	movwf	??_vfpfcnvrt
 12214  0245  3F41               	moviw [1]fsr1
 12215  0246  00D7               	movwf	??_vfpfcnvrt+1
 12216  0247  0856               	movf	??_vfpfcnvrt,w
 12217  0248  0084               	movwf	4
 12218  0249  0857               	movf	??_vfpfcnvrt+1,w
 12219  024A  0085               	movwf	5
 12220  024B  0800               	movf	0,w	;code access
 12221  024C  00D8               	movwf	??_vfpfcnvrt+2
 12222  024D  01D9               	clrf	??_vfpfcnvrt+3
 12223  024E  0858               	movf	??_vfpfcnvrt+2,w
 12224  024F  00A3               	movwf	fputc@c
 12225  0250  0859               	movf	??_vfpfcnvrt+3,w
 12226  0251  00A4               	movwf	fputc@c+1
 12227  0252  0863               	movf	vfpfcnvrt@fp,w
 12228  0253  00DA               	movwf	??_vfpfcnvrt+4
 12229  0254  085A               	movf	??_vfpfcnvrt+4,w
 12230  0255  00A5               	movwf	fputc@fp
 12231  0256  318F  2777  3181   	fcall	_fputc
 12232  0259                     l3384:
 12233                           
 12234                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 12235  0259  0020               	movlb	0	; select bank0
 12236  025A  0854               	movf	vfpfcnvrt@fmt,w
 12237  025B  0086               	movwf	6
 12238  025C  0187               	clrf	7
 12239  025D  3001               	movlw	1
 12240  025E  0781               	addwf	1,f
 12241  025F  3141               	addfsr 1,1
 12242  0260  1803               	skipnc
 12243  0261  0A81               	incf	1,f
 12244  0262  2A2F               	goto	l3372
 12245  0263                     l1665:
 12246  0263  0008               	return
 12247  0264                     __end_of_vfpfcnvrt:
 12248                           
 12249                           	psect	text44
 12250  00B2                     __ptext44:	
 12251 ;; *************** function _utoa *****************
 12252 ;; Defined at:
 12253 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12254 ;; Parameters:    Size  Location     Type
 12255 ;;  fp              1    wreg     PTR struct _IO_FILE
 12256 ;;		 -> NULL(0), 
 12257 ;;  d               8   28[BANK0 ] unsigned long long 
 12258 ;; Auto vars:     Size  Location     Type
 12259 ;;  fp              1   39[BANK0 ] PTR struct _IO_FILE
 12260 ;;		 -> NULL(0), 
 12261 ;;  n               8   42[BANK0 ] unsigned long long 
 12262 ;;  i               2   50[BANK0 ] int 
 12263 ;;  w               2   40[BANK0 ] int 
 12264 ;;  p               2   37[BANK0 ] int 
 12265 ;; Return value:  Size  Location     Type
 12266 ;;                  2   28[BANK0 ] int 
 12267 ;; Registers used:
 12268 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12269 ;; Tracked objects:
 12270 ;;		On entry : 0/0
 12271 ;;		On exit  : 0/0
 12272 ;;		Unchanged: 0/0
 12273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12274 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12275 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12276 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12277 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12278 ;;Total ram usage:       24 bytes
 12279 ;; Hardware stack levels used: 1
 12280 ;; Hardware stack levels required when called: 9
 12281 ;; This function calls:
 12282 ;;		___lodiv
 12283 ;;		___lomod
 12284 ;;		_pad
 12285 ;; This function is called by:
 12286 ;;		_vfpfcnvrt
 12287 ;; This function uses a non-reentrant model
 12288 ;;
 12289                           
 12290  00B2                     _utoa:	
 12291                           ;psect for function _utoa
 12292                           
 12293                           
 12294                           ;incstack = 0
 12295                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12296                           ;utoa@fp stored from wreg
 12297  00B2  0020               	movlb	0	; select bank0
 12298  00B3  00C7               	movwf	utoa@fp
 12299  00B4                     l3280:
 12300                           
 12301                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
 12302  00B4  0021               	movlb	1	; select bank1
 12303  00B5  1BA3               	btfsc	(_prec+1)^(0+128),7
 12304  00B6  28B8               	goto	u1101
 12305  00B7  28B9               	goto	u1100
 12306  00B8                     u1101:
 12307  00B8  28BD               	goto	l1648
 12308  00B9                     u1100:
 12309  00B9                     l3282:
 12310                           
 12311                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
 12312  00B9  30FD               	movlw	253
 12313  00BA  05A4               	andwf	_flags^(0+128),f
 12314  00BB  30FF               	movlw	255
 12315  00BC  05A5               	andwf	(_flags+1)^(0+128),f
 12316  00BD                     l1648:	
 12317                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 623:     }
 12318                           
 12319                           
 12320                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
 12321  00BD  0823               	movf	(_prec+1)^(0+128),w
 12322  00BE  3A80               	xorlw	128
 12323  00BF  0020               	movlb	0	; select bank0
 12324  00C0  00C4               	movwf	??_utoa
 12325  00C1  3080               	movlw	128
 12326  00C2  0244               	subwf	??_utoa,w
 12327  00C3  1D03               	skipz
 12328  00C4  28C8               	goto	u1115
 12329  00C5  3001               	movlw	1
 12330  00C6  0021               	movlb	1	; select bank1
 12331  00C7  0222               	subwf	_prec^(0+128),w
 12332  00C8                     u1115:
 12333  00C8  1803               	skipnc
 12334  00C9  28CB               	goto	u1111
 12335  00CA  28CC               	goto	u1110
 12336  00CB                     u1111:
 12337  00CB  28D2               	goto	l3286
 12338  00CC                     u1110:
 12339  00CC                     l3284:
 12340  00CC  3001               	movlw	1
 12341  00CD  0020               	movlb	0	; select bank0
 12342  00CE  00C5               	movwf	utoa@p
 12343  00CF  3000               	movlw	0
 12344  00D0  00C6               	movwf	utoa@p+1
 12345  00D1  28DA               	goto	l1652
 12346  00D2                     l3286:
 12347  00D2  0021               	movlb	1	; select bank1
 12348  00D3  0823               	movf	(_prec+1)^(0+128),w
 12349  00D4  0020               	movlb	0	; select bank0
 12350  00D5  00C6               	movwf	utoa@p+1
 12351  00D6  0021               	movlb	1	; select bank1
 12352  00D7  0822               	movf	_prec^(0+128),w
 12353  00D8  0020               	movlb	0	; select bank0
 12354  00D9  00C5               	movwf	utoa@p
 12355  00DA                     l1652:
 12356                           
 12357                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
 12358  00DA  0021               	movlb	1	; select bank1
 12359  00DB  0821               	movf	(_width+1)^(0+128),w
 12360  00DC  0020               	movlb	0	; select bank0
 12361  00DD  00C9               	movwf	utoa@w+1
 12362  00DE  0021               	movlb	1	; select bank1
 12363  00DF  0820               	movf	_width^(0+128),w
 12364  00E0  0020               	movlb	0	; select bank0
 12365  00E1  00C8               	movwf	utoa@w
 12366  00E2                     l3288:
 12367                           
 12368                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 628:     n = d;
 12369  00E2  083C               	movf	utoa@d,w
 12370  00E3  00CA               	movwf	utoa@n
 12371  00E4  083D               	movf	utoa@d+1,w
 12372  00E5  00CB               	movwf	utoa@n+1
 12373  00E6  083E               	movf	utoa@d+2,w
 12374  00E7  00CC               	movwf	utoa@n+2
 12375  00E8  083F               	movf	utoa@d+3,w
 12376  00E9  00CD               	movwf	utoa@n+3
 12377  00EA  0840               	movf	utoa@d+4,w
 12378  00EB  00CE               	movwf	utoa@n+4
 12379  00EC  0841               	movf	utoa@d+5,w
 12380  00ED  00CF               	movwf	utoa@n+5
 12381  00EE  0842               	movf	utoa@d+6,w
 12382  00EF  00D0               	movwf	utoa@n+6
 12383  00F0  0843               	movf	utoa@d+7,w
 12384  00F1  00D1               	movwf	utoa@n+7
 12385                           
 12386                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
 12387  00F2  301F               	movlw	31
 12388  00F3  00D2               	movwf	utoa@i
 12389  00F4  3000               	movlw	0
 12390  00F5  00D3               	movwf	utoa@i+1
 12391  00F6                     l3290:
 12392                           
 12393                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
 12394  00F6  0023               	movlb	3	; select bank3
 12395  00F7  01BF               	clrf	(_dbuf^(0+384)+31)
 12396                           
 12397                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12398  00F8  295A               	goto	l3302
 12399  00F9                     l3292:
 12400                           
 12401                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 632:         --i;
 12402  00F9  30FF               	movlw	255
 12403  00FA  0020               	movlb	0	; select bank0
 12404  00FB  07D2               	addwf	utoa@i,f
 12405  00FC  30FF               	movlw	255
 12406  00FD  3DD3               	addwfc	utoa@i+1,f
 12407  00FE                     l3294:
 12408                           
 12409                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
 12410  00FE  300A               	movlw	10
 12411  00FF  00A0               	movwf	___lomod@divisor
 12412  0100  01A1               	clrf	___lomod@divisor+1
 12413  0101  01A2               	clrf	___lomod@divisor+2
 12414  0102  01A3               	clrf	___lomod@divisor+3
 12415  0103  01A4               	clrf	___lomod@divisor+4
 12416  0104  01A5               	clrf	___lomod@divisor+5
 12417  0105  01A6               	clrf	___lomod@divisor+6
 12418  0106  01A7               	clrf	___lomod@divisor+7
 12419  0107  084A               	movf	utoa@n,w
 12420  0108  00A8               	movwf	___lomod@dividend
 12421  0109  084B               	movf	utoa@n+1,w
 12422  010A  00A9               	movwf	___lomod@dividend+1
 12423  010B  084C               	movf	utoa@n+2,w
 12424  010C  00AA               	movwf	___lomod@dividend+2
 12425  010D  084D               	movf	utoa@n+3,w
 12426  010E  00AB               	movwf	___lomod@dividend+3
 12427  010F  084E               	movf	utoa@n+4,w
 12428  0110  00AC               	movwf	___lomod@dividend+4
 12429  0111  084F               	movf	utoa@n+5,w
 12430  0112  00AD               	movwf	___lomod@dividend+5
 12431  0113  0850               	movf	utoa@n+6,w
 12432  0114  00AE               	movwf	___lomod@dividend+6
 12433  0115  0851               	movf	utoa@n+7,w
 12434  0116  00AF               	movwf	___lomod@dividend+7
 12435  0117  3186  2630  3180   	fcall	___lomod
 12436  011A  0020               	movlb	0	; select bank0
 12437  011B  0820               	movf	?___lomod,w
 12438  011C  3E30               	addlw	48
 12439  011D  00C4               	movwf	??_utoa
 12440  011E  0852               	movf	utoa@i,w
 12441  011F  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12442  0120  0086               	movwf	6
 12443  0121  3001               	movlw	1	; select bank3/4
 12444  0122  0087               	movwf	7
 12445  0123  0844               	movf	??_utoa,w
 12446  0124  0081               	movwf	1
 12447  0125                     l3296:
 12448                           
 12449                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 634:         --p;
 12450  0125  30FF               	movlw	255
 12451  0126  07C5               	addwf	utoa@p,f
 12452  0127  30FF               	movlw	255
 12453  0128  3DC6               	addwfc	utoa@p+1,f
 12454  0129                     l3298:
 12455                           
 12456                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 635:         --w;
 12457  0129  30FF               	movlw	255
 12458  012A  07C8               	addwf	utoa@w,f
 12459  012B  30FF               	movlw	255
 12460  012C  3DC9               	addwfc	utoa@w+1,f
 12461  012D                     l3300:
 12462                           
 12463                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
 12464  012D  300A               	movlw	10
 12465  012E  00A0               	movwf	___lodiv@divisor
 12466  012F  01A1               	clrf	___lodiv@divisor+1
 12467  0130  01A2               	clrf	___lodiv@divisor+2
 12468  0131  01A3               	clrf	___lodiv@divisor+3
 12469  0132  01A4               	clrf	___lodiv@divisor+4
 12470  0133  01A5               	clrf	___lodiv@divisor+5
 12471  0134  01A6               	clrf	___lodiv@divisor+6
 12472  0135  01A7               	clrf	___lodiv@divisor+7
 12473  0136  084A               	movf	utoa@n,w
 12474  0137  00A8               	movwf	___lodiv@dividend
 12475  0138  084B               	movf	utoa@n+1,w
 12476  0139  00A9               	movwf	___lodiv@dividend+1
 12477  013A  084C               	movf	utoa@n+2,w
 12478  013B  00AA               	movwf	___lodiv@dividend+2
 12479  013C  084D               	movf	utoa@n+3,w
 12480  013D  00AB               	movwf	___lodiv@dividend+3
 12481  013E  084E               	movf	utoa@n+4,w
 12482  013F  00AC               	movwf	___lodiv@dividend+4
 12483  0140  084F               	movf	utoa@n+5,w
 12484  0141  00AD               	movwf	___lodiv@dividend+5
 12485  0142  0850               	movf	utoa@n+6,w
 12486  0143  00AE               	movwf	___lodiv@dividend+6
 12487  0144  0851               	movf	utoa@n+7,w
 12488  0145  00AF               	movwf	___lodiv@dividend+7
 12489  0146  3185  25AC  3180   	fcall	___lodiv
 12490  0149  0020               	movlb	0	; select bank0
 12491  014A  0820               	movf	?___lodiv,w
 12492  014B  00CA               	movwf	utoa@n
 12493  014C  0821               	movf	?___lodiv+1,w
 12494  014D  00CB               	movwf	utoa@n+1
 12495  014E  0822               	movf	?___lodiv+2,w
 12496  014F  00CC               	movwf	utoa@n+2
 12497  0150  0823               	movf	?___lodiv+3,w
 12498  0151  00CD               	movwf	utoa@n+3
 12499  0152  0824               	movf	?___lodiv+4,w
 12500  0153  00CE               	movwf	utoa@n+4
 12501  0154  0825               	movf	?___lodiv+5,w
 12502  0155  00CF               	movwf	utoa@n+5
 12503  0156  0826               	movf	?___lodiv+6,w
 12504  0157  00D0               	movwf	utoa@n+6
 12505  0158  0827               	movf	?___lodiv+7,w
 12506  0159  00D1               	movwf	utoa@n+7
 12507  015A                     l3302:
 12508                           
 12509                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12510  015A  0020               	movlb	0	; select bank0
 12511  015B  0852               	movf	utoa@i,w
 12512  015C  0453               	iorwf	utoa@i+1,w
 12513  015D  1903               	btfsc	3,2
 12514  015E  2960               	goto	u1121
 12515  015F  2961               	goto	u1120
 12516  0160                     u1121:
 12517  0160  298D               	goto	l3312
 12518  0161                     u1120:
 12519  0161                     l3304:
 12520  0161  084A               	movf	utoa@n,w
 12521  0162  044B               	iorwf	utoa@n+1,w
 12522  0163  044C               	iorwf	utoa@n+2,w
 12523  0164  044D               	iorwf	utoa@n+3,w
 12524  0165  044E               	iorwf	utoa@n+4,w
 12525  0166  044F               	iorwf	utoa@n+5,w
 12526  0167  0450               	iorwf	utoa@n+6,w
 12527  0168  0451               	iorwf	utoa@n+7,w
 12528  0169  1D03               	skipz
 12529  016A  296C               	goto	u1131
 12530  016B  296D               	goto	u1130
 12531  016C                     u1131:
 12532  016C  28F9               	goto	l3292
 12533  016D                     u1130:
 12534  016D                     l3306:
 12535  016D  0846               	movf	utoa@p+1,w
 12536  016E  3A80               	xorlw	128
 12537  016F  00C4               	movwf	??_utoa
 12538  0170  3080               	movlw	128
 12539  0171  0244               	subwf	??_utoa,w
 12540  0172  1D03               	skipz
 12541  0173  2976               	goto	u1145
 12542  0174  3001               	movlw	1
 12543  0175  0245               	subwf	utoa@p,w
 12544  0176                     u1145:
 12545  0176  1803               	skipnc
 12546  0177  2979               	goto	u1141
 12547  0178  297A               	goto	u1140
 12548  0179                     u1141:
 12549  0179  28F9               	goto	l3292
 12550  017A                     u1140:
 12551  017A                     l3308:
 12552  017A  0020               	movlb	0	; select bank0
 12553  017B  0849               	movf	utoa@w+1,w
 12554  017C  3A80               	xorlw	128
 12555  017D  00C4               	movwf	??_utoa
 12556  017E  3080               	movlw	128
 12557  017F  0244               	subwf	??_utoa,w
 12558  0180  1D03               	skipz
 12559  0181  2984               	goto	u1155
 12560  0182  3001               	movlw	1
 12561  0183  0248               	subwf	utoa@w,w
 12562  0184                     u1155:
 12563  0184  1C03               	skipc
 12564  0185  2987               	goto	u1151
 12565  0186  2988               	goto	u1150
 12566  0187                     u1151:
 12567  0187  298D               	goto	l3312
 12568  0188                     u1150:
 12569  0188                     l3310:
 12570  0188  0021               	movlb	1	; select bank1
 12571  0189  18A4               	btfsc	_flags^(0+128),1
 12572  018A  298C               	goto	u1161
 12573  018B  298D               	goto	u1160
 12574  018C                     u1161:
 12575  018C  28F9               	goto	l3292
 12576  018D                     u1160:
 12577  018D                     l3312:
 12578                           
 12579                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
 12580  018D  0020               	movlb	0	; select bank0
 12581  018E  0852               	movf	utoa@i,w
 12582  018F  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12583  0190  00C4               	movwf	??_utoa
 12584  0191  0844               	movf	??_utoa,w
 12585  0192  00B3               	movwf	pad@buf
 12586  0193  0849               	movf	utoa@w+1,w
 12587  0194  00B5               	movwf	pad@p+1
 12588  0195  0848               	movf	utoa@w,w
 12589  0196  00B4               	movwf	pad@p
 12590  0197  0847               	movf	utoa@fp,w
 12591  0198  3187  2755  3180   	fcall	_pad
 12592  019B  0020               	movlb	0	; select bank0
 12593  019C  0834               	movf	?_pad+1,w
 12594  019D  00BD               	movwf	?_utoa+1
 12595  019E  0833               	movf	?_pad,w
 12596  019F  00BC               	movwf	?_utoa
 12597  01A0                     l1660:
 12598  01A0  0008               	return
 12599  01A1                     __end_of_utoa:
 12600                           
 12601                           	psect	text45
 12602  0755                     __ptext45:	
 12603 ;; *************** function _pad *****************
 12604 ;; Defined at:
 12605 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12606 ;; Parameters:    Size  Location     Type
 12607 ;;  fp              1    wreg     PTR struct _IO_FILE
 12608 ;;		 -> NULL(0), 
 12609 ;;  buf             1   19[BANK0 ] PTR unsigned char 
 12610 ;;		 -> dbuf(32), 
 12611 ;;  p               2   20[BANK0 ] int 
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 12614 ;;		 -> NULL(0), 
 12615 ;;  w               2   25[BANK0 ] int 
 12616 ;;  i               2   23[BANK0 ] int 
 12617 ;; Return value:  Size  Location     Type
 12618 ;;                  2   19[BANK0 ] int 
 12619 ;; Registers used:
 12620 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12621 ;; Tracked objects:
 12622 ;;		On entry : 0/0
 12623 ;;		On exit  : 0/0
 12624 ;;		Unchanged: 0/0
 12625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12626 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12627 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12628 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12629 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12630 ;;Total ram usage:        9 bytes
 12631 ;; Hardware stack levels used: 1
 12632 ;; Hardware stack levels required when called: 8
 12633 ;; This function calls:
 12634 ;;		_fputc
 12635 ;;		_fputs
 12636 ;;		_strlen
 12637 ;; This function is called by:
 12638 ;;		_utoa
 12639 ;; This function uses a non-reentrant model
 12640 ;;
 12641                           
 12642  0755                     _pad:	
 12643                           ;psect for function _pad
 12644                           
 12645                           
 12646                           ;incstack = 0
 12647                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12648                           ;pad@fp stored from wreg
 12649  0755  0020               	movlb	0	; select bank0
 12650  0756  00BB               	movwf	pad@fp
 12651  0757                     l3260:
 12652                           
 12653                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12654  0757  0021               	movlb	1	; select bank1
 12655  0758  1C24               	btfss	_flags^(0+128),0
 12656  0759  2F5B               	goto	u1061
 12657  075A  2F5C               	goto	u1060
 12658  075B                     u1061:
 12659  075B  2F65               	goto	l3264
 12660  075C                     u1060:
 12661  075C                     l3262:
 12662                           
 12663                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12664  075C  0020               	movlb	0	; select bank0
 12665  075D  083B               	movf	pad@fp,w
 12666  075E  00B6               	movwf	??_pad
 12667  075F  0836               	movf	??_pad,w
 12668  0760  00AB               	movwf	fputs@fp
 12669  0761  0833               	movf	pad@buf,w
 12670  0762  318C  24F8  3187   	fcall	_fputs
 12671  0765                     l3264:
 12672                           
 12673                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12674  0765  0020               	movlb	0	; select bank0
 12675  0766  1BB5               	btfsc	pad@p+1,7
 12676  0767  2F69               	goto	u1071
 12677  0768  2F6A               	goto	u1070
 12678  0769                     u1071:
 12679  0769  2F6F               	goto	l3268
 12680  076A                     u1070:
 12681  076A                     l3266:
 12682  076A  0835               	movf	pad@p+1,w
 12683  076B  00BA               	movwf	pad@w+1
 12684  076C  0834               	movf	pad@p,w
 12685  076D  00B9               	movwf	pad@w
 12686  076E  2F71               	goto	l1640
 12687  076F                     l3268:
 12688  076F  01B9               	clrf	pad@w
 12689  0770  01BA               	clrf	pad@w+1
 12690  0771                     l1640:
 12691                           
 12692                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12693  0771  01B7               	clrf	pad@i
 12694  0772  01B8               	clrf	pad@i+1
 12695                           
 12696                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12697  0773  2F85               	goto	l3274
 12698  0774                     l3270:
 12699                           
 12700                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12701  0774  3020               	movlw	32
 12702  0775  0020               	movlb	0	; select bank0
 12703  0776  00A3               	movwf	fputc@c
 12704  0777  3000               	movlw	0
 12705  0778  00A4               	movwf	fputc@c+1
 12706  0779  083B               	movf	pad@fp,w
 12707  077A  00B6               	movwf	??_pad
 12708  077B  0836               	movf	??_pad,w
 12709  077C  00A5               	movwf	fputc@fp
 12710  077D  318F  2777  3187   	fcall	_fputc
 12711  0780                     l3272:
 12712                           
 12713                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12714  0780  3001               	movlw	1
 12715  0781  0020               	movlb	0	; select bank0
 12716  0782  07B7               	addwf	pad@i,f
 12717  0783  3000               	movlw	0
 12718  0784  3DB8               	addwfc	pad@i+1,f
 12719  0785                     l3274:
 12720                           
 12721                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12722  0785  0838               	movf	pad@i+1,w
 12723  0786  3A80               	xorlw	128
 12724  0787  00B6               	movwf	??_pad
 12725  0788  083A               	movf	pad@w+1,w
 12726  0789  3A80               	xorlw	128
 12727  078A  0236               	subwf	??_pad,w
 12728  078B  1D03               	skipz
 12729  078C  2F8F               	goto	u1085
 12730  078D  0839               	movf	pad@w,w
 12731  078E  0237               	subwf	pad@i,w
 12732  078F                     u1085:
 12733  078F  1C03               	skipc
 12734  0790  2F92               	goto	u1081
 12735  0791  2F93               	goto	u1080
 12736  0792                     u1081:
 12737  0792  2F74               	goto	l3270
 12738  0793                     u1080:
 12739  0793                     l1643:
 12740                           
 12741                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12742  0793  0021               	movlb	1	; select bank1
 12743  0794  1824               	btfsc	_flags^(0+128),0
 12744  0795  2F97               	goto	u1091
 12745  0796  2F98               	goto	u1090
 12746  0797                     u1091:
 12747  0797  2FA1               	goto	l1644
 12748  0798                     u1090:
 12749  0798                     l3276:
 12750                           
 12751                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12752  0798  0020               	movlb	0	; select bank0
 12753  0799  083B               	movf	pad@fp,w
 12754  079A  00B6               	movwf	??_pad
 12755  079B  0836               	movf	??_pad,w
 12756  079C  00AB               	movwf	fputs@fp
 12757  079D  0833               	movf	pad@buf,w
 12758  079E  318C  24F8  3187   	fcall	_fputs
 12759  07A1                     l1644:	
 12760                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 92:     }
 12761                           
 12762                           
 12763                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12764  07A1  0020               	movlb	0	; select bank0
 12765  07A2  0833               	movf	pad@buf,w
 12766  07A3  318C  249B  3187   	fcall	_strlen
 12767  07A6  0020               	movlb	0	; select bank0
 12768  07A7  0839               	movf	pad@w,w
 12769  07A8  0720               	addwf	?_strlen,w
 12770  07A9  00B3               	movwf	?_pad
 12771  07AA  083A               	movf	pad@w+1,w
 12772  07AB  3D21               	addwfc	?_strlen+1,w
 12773  07AC  00B4               	movwf	?_pad+1
 12774  07AD                     l1645:
 12775  07AD  0008               	return
 12776  07AE                     __end_of_pad:
 12777                           
 12778                           	psect	text46
 12779  0C9B                     __ptext46:	
 12780 ;; *************** function _strlen *****************
 12781 ;; Defined at:
 12782 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
 12783 ;; Parameters:    Size  Location     Type
 12784 ;;  s               1    wreg     PTR const unsigned char 
 12785 ;;		 -> dbuf(32), 
 12786 ;; Auto vars:     Size  Location     Type
 12787 ;;  s               1    4[BANK0 ] PTR const unsigned char 
 12788 ;;		 -> dbuf(32), 
 12789 ;;  a               1    3[BANK0 ] PTR const unsigned char 
 12790 ;;		 -> dbuf(32), 
 12791 ;; Return value:  Size  Location     Type
 12792 ;;                  2    0[BANK0 ] unsigned int 
 12793 ;; Registers used:
 12794 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12795 ;; Tracked objects:
 12796 ;;		On entry : 0/0
 12797 ;;		On exit  : 0/0
 12798 ;;		Unchanged: 0/0
 12799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12800 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12801 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12802 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12803 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12804 ;;Total ram usage:        5 bytes
 12805 ;; Hardware stack levels used: 1
 12806 ;; Hardware stack levels required when called: 4
 12807 ;; This function calls:
 12808 ;;		Nothing
 12809 ;; This function is called by:
 12810 ;;		_pad
 12811 ;; This function uses a non-reentrant model
 12812 ;;
 12813                           
 12814  0C9B                     _strlen:	
 12815                           ;psect for function _strlen
 12816                           
 12817                           
 12818                           ;incstack = 0
 12819                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 12820                           ;strlen@s stored from wreg
 12821  0C9B  0020               	movlb	0	; select bank0
 12822  0C9C  00A4               	movwf	strlen@s
 12823  0C9D                     l3212:
 12824  0C9D  0824               	movf	strlen@s,w
 12825  0C9E  00A2               	movwf	??_strlen
 12826  0C9F  0822               	movf	??_strlen,w
 12827  0CA0  00A3               	movwf	strlen@a
 12828  0CA1  2CA6               	goto	l3216
 12829  0CA2                     l3214:
 12830  0CA2  3001               	movlw	1
 12831  0CA3  00A2               	movwf	??_strlen
 12832  0CA4  0822               	movf	??_strlen,w
 12833  0CA5  07A4               	addwf	strlen@s,f
 12834  0CA6                     l3216:
 12835  0CA6  0824               	movf	strlen@s,w
 12836  0CA7  0086               	movwf	6
 12837  0CA8  3001               	movlw	1	; select bank2/3
 12838  0CA9  0087               	movwf	7
 12839  0CAA  0801               	movf	1,w
 12840  0CAB  1D03               	btfss	3,2
 12841  0CAC  2CAE               	goto	u961
 12842  0CAD  2CAF               	goto	u960
 12843  0CAE                     u961:
 12844  0CAE  2CA2               	goto	l3214
 12845  0CAF                     u960:
 12846  0CAF                     l3218:
 12847  0CAF  0823               	movf	strlen@a,w
 12848  0CB0  0224               	subwf	strlen@s,w
 12849  0CB1  00A0               	movwf	?_strlen
 12850  0CB2  01A1               	clrf	?_strlen+1
 12851  0CB3  1BA0               	btfsc	?_strlen,7
 12852  0CB4  03A1               	decf	?_strlen+1,f
 12853  0CB5                     l1698:
 12854  0CB5  0008               	return
 12855  0CB6                     __end_of_strlen:
 12856                           
 12857                           	psect	text47
 12858  0CF8                     __ptext47:	
 12859 ;; *************** function _fputs *****************
 12860 ;; Defined at:
 12861 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
 12862 ;; Parameters:    Size  Location     Type
 12863 ;;  s               1    wreg     PTR const unsigned char 
 12864 ;;		 -> dbuf(32), 
 12865 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
 12866 ;;		 -> NULL(0), 
 12867 ;; Auto vars:     Size  Location     Type
 12868 ;;  s               1   18[BANK0 ] PTR const unsigned char 
 12869 ;;		 -> dbuf(32), 
 12870 ;;  i               2   16[BANK0 ] int 
 12871 ;;  c               1   15[BANK0 ] unsigned char 
 12872 ;; Return value:  Size  Location     Type
 12873 ;;                  2   11[BANK0 ] int 
 12874 ;; Registers used:
 12875 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12876 ;; Tracked objects:
 12877 ;;		On entry : 0/0
 12878 ;;		On exit  : 0/0
 12879 ;;		Unchanged: 0/0
 12880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12881 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12882 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12883 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12884 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12885 ;;Total ram usage:        8 bytes
 12886 ;; Hardware stack levels used: 1
 12887 ;; Hardware stack levels required when called: 7
 12888 ;; This function calls:
 12889 ;;		_fputc
 12890 ;; This function is called by:
 12891 ;;		_pad
 12892 ;; This function uses a non-reentrant model
 12893 ;;
 12894                           
 12895  0CF8                     _fputs:	
 12896                           ;psect for function _fputs
 12897                           
 12898                           
 12899                           ;incstack = 0
 12900                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12901                           ;fputs@s stored from wreg
 12902  0CF8  0020               	movlb	0	; select bank0
 12903  0CF9  00B2               	movwf	fputs@s
 12904  0CFA                     l3204:
 12905  0CFA  01B0               	clrf	fputs@i
 12906  0CFB  01B1               	clrf	fputs@i+1
 12907  0CFC  2D10               	goto	l3210
 12908  0CFD                     l3206:
 12909  0CFD  082F               	movf	fputs@c,w
 12910  0CFE  00AC               	movwf	??_fputs
 12911  0CFF  01AD               	clrf	??_fputs+1
 12912  0D00  082C               	movf	??_fputs,w
 12913  0D01  00A3               	movwf	fputc@c
 12914  0D02  082D               	movf	??_fputs+1,w
 12915  0D03  00A4               	movwf	fputc@c+1
 12916  0D04  082B               	movf	fputs@fp,w
 12917  0D05  00AE               	movwf	??_fputs+2
 12918  0D06  082E               	movf	??_fputs+2,w
 12919  0D07  00A5               	movwf	fputc@fp
 12920  0D08  318F  2777  318C   	fcall	_fputc
 12921  0D0B                     l3208:
 12922  0D0B  3001               	movlw	1
 12923  0D0C  0020               	movlb	0	; select bank0
 12924  0D0D  07B0               	addwf	fputs@i,f
 12925  0D0E  3000               	movlw	0
 12926  0D0F  3DB1               	addwfc	fputs@i+1,f
 12927  0D10                     l3210:
 12928  0D10  0830               	movf	fputs@i,w
 12929  0D11  0732               	addwf	fputs@s,w
 12930  0D12  00AC               	movwf	??_fputs
 12931  0D13  082C               	movf	??_fputs,w
 12932  0D14  0086               	movwf	6
 12933  0D15  3001               	movlw	1	; select bank2/3
 12934  0D16  0087               	movwf	7
 12935  0D17  0801               	movf	1,w
 12936  0D18  00AD               	movwf	??_fputs+1
 12937  0D19  082D               	movf	??_fputs+1,w
 12938  0D1A  00AF               	movwf	fputs@c
 12939  0D1B  082F               	movf	fputs@c,w
 12940  0D1C  1D03               	btfss	3,2
 12941  0D1D  2D1F               	goto	u951
 12942  0D1E  2D20               	goto	u950
 12943  0D1F                     u951:
 12944  0D1F  2CFD               	goto	l3206
 12945  0D20                     u950:
 12946  0D20                     l1692:
 12947  0D20  0008               	return
 12948  0D21                     __end_of_fputs:
 12949                           
 12950                           	psect	text48
 12951  0F77                     __ptext48:	
 12952 ;; *************** function _fputc *****************
 12953 ;; Defined at:
 12954 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
 12955 ;; Parameters:    Size  Location     Type
 12956 ;;  c               2    3[BANK0 ] int 
 12957 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
 12958 ;;		 -> NULL(0), 
 12959 ;; Auto vars:     Size  Location     Type
 12960 ;;		None
 12961 ;; Return value:  Size  Location     Type
 12962 ;;                  2    3[BANK0 ] int 
 12963 ;; Registers used:
 12964 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12965 ;; Tracked objects:
 12966 ;;		On entry : 0/0
 12967 ;;		On exit  : 0/0
 12968 ;;		Unchanged: 0/0
 12969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12970 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12972 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12973 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12974 ;;Total ram usage:        8 bytes
 12975 ;; Hardware stack levels used: 1
 12976 ;; Hardware stack levels required when called: 6
 12977 ;; This function calls:
 12978 ;;		_putch
 12979 ;; This function is called by:
 12980 ;;		_pad
 12981 ;;		_vfpfcnvrt
 12982 ;;		_fputs
 12983 ;; This function uses a non-reentrant model
 12984 ;;
 12985                           
 12986  0F77                     _fputc:	
 12987                           ;psect for function _fputc
 12988                           
 12989  0F77                     l3190:	
 12990                           ;incstack = 0
 12991                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12992                           
 12993  0F77  0020               	movlb	0	; select bank0
 12994  0F78  0825               	movf	fputc@fp,w
 12995  0F79  1903               	btfsc	3,2
 12996  0F7A  2F7C               	goto	u911
 12997  0F7B  2F7D               	goto	u910
 12998  0F7C                     u911:
 12999  0F7C  2F82               	goto	l3194
 13000  0F7D                     u910:
 13001  0F7D                     l3192:
 13002  0F7D  0825               	movf	fputc@fp,w
 13003  0F7E  1D03               	btfss	3,2
 13004  0F7F  2F81               	goto	u921
 13005  0F80  2F82               	goto	u920
 13006  0F81                     u921:
 13007  0F81  2F87               	goto	l3196
 13008  0F82                     u920:
 13009  0F82                     l3194:
 13010  0F82  0823               	movf	fputc@c,w
 13011  0F83  318A  2237  318F   	fcall	_putch
 13012  0F86  2FB9               	goto	l1684
 13013  0F87                     l3196:
 13014  0F87  0825               	movf	fputc@fp,w
 13015  0F88  3E08               	addlw	8
 13016  0F89  0086               	movwf	6
 13017  0F8A  0187               	clrf	7
 13018  0F8B  0016               	moviw fsr1++
 13019  0F8C  0401               	iorwf	1,w
 13020  0F8D  1903               	btfsc	3,2
 13021  0F8E  2F90               	goto	u931
 13022  0F8F  2F91               	goto	u930
 13023  0F90                     u931:
 13024  0F90  2FAF               	goto	l3200
 13025  0F91                     u930:
 13026  0F91                     l3198:
 13027  0F91  0825               	movf	fputc@fp,w
 13028  0F92  3E08               	addlw	8
 13029  0F93  0086               	movwf	6
 13030  0F94  0187               	clrf	7
 13031  0F95  3F40               	moviw [0]fsr1
 13032  0F96  00A6               	movwf	??_fputc
 13033  0F97  3F41               	moviw [1]fsr1
 13034  0F98  00A7               	movwf	??_fputc+1
 13035  0F99  0825               	movf	fputc@fp,w
 13036  0F9A  3E02               	addlw	2
 13037  0F9B  0086               	movwf	6
 13038  0F9C  0187               	clrf	7
 13039  0F9D  3F40               	moviw [0]fsr1
 13040  0F9E  00A8               	movwf	??_fputc+2
 13041  0F9F  3F41               	moviw [1]fsr1
 13042  0FA0  00A9               	movwf	??_fputc+3
 13043  0FA1  0829               	movf	??_fputc+3,w
 13044  0FA2  3A80               	xorlw	128
 13045  0FA3  00AA               	movwf	??_fputc+4
 13046  0FA4  0827               	movf	??_fputc+1,w
 13047  0FA5  3A80               	xorlw	128
 13048  0FA6  022A               	subwf	??_fputc+4,w
 13049  0FA7  1D03               	skipz
 13050  0FA8  2FAB               	goto	u945
 13051  0FA9  0826               	movf	??_fputc,w
 13052  0FAA  0228               	subwf	??_fputc+2,w
 13053  0FAB                     u945:
 13054  0FAB  1803               	skipnc
 13055  0FAC  2FAE               	goto	u941
 13056  0FAD  2FAF               	goto	u940
 13057  0FAE                     u941:
 13058  0FAE  2FB9               	goto	l1684
 13059  0FAF                     u940:
 13060  0FAF                     l3200:
 13061  0FAF  0020               	movlb	0	; select bank0
 13062  0FB0  0825               	movf	fputc@fp,w
 13063  0FB1  3E02               	addlw	2
 13064  0FB2  0086               	movwf	6
 13065  0FB3  0187               	clrf	7
 13066  0FB4  3001               	movlw	1
 13067  0FB5  0781               	addwf	1,f
 13068  0FB6  3141               	addfsr 1,1
 13069  0FB7  1803               	skipnc
 13070  0FB8  0A81               	incf	1,f
 13071  0FB9                     l1684:
 13072  0FB9  0008               	return
 13073  0FBA                     __end_of_fputc:
 13074                           
 13075                           	psect	text49
 13076  0A37                     __ptext49:	
 13077 ;; *************** function _putch *****************
 13078 ;; Defined at:
 13079 ;;		line 174 in file "eusart.c"
 13080 ;; Parameters:    Size  Location     Type
 13081 ;;  txData          1    wreg     unsigned char 
 13082 ;; Auto vars:     Size  Location     Type
 13083 ;;  txData          1    2[BANK0 ] unsigned char 
 13084 ;; Return value:  Size  Location     Type
 13085 ;;                  1    wreg      void 
 13086 ;; Registers used:
 13087 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13088 ;; Tracked objects:
 13089 ;;		On entry : 0/0
 13090 ;;		On exit  : 0/0
 13091 ;;		Unchanged: 0/0
 13092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13094 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13096 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13097 ;;Total ram usage:        1 bytes
 13098 ;; Hardware stack levels used: 1
 13099 ;; Hardware stack levels required when called: 5
 13100 ;; This function calls:
 13101 ;;		_EUSART_Write
 13102 ;; This function is called by:
 13103 ;;		_fputc
 13104 ;; This function uses a non-reentrant model
 13105 ;;
 13106                           
 13107  0A37                     _putch:	
 13108                           ;psect for function _putch
 13109                           
 13110                           
 13111                           ;incstack = 0
 13112                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13113                           ;putch@txData stored from wreg
 13114  0A37  0020               	movlb	0	; select bank0
 13115  0A38  00A2               	movwf	putch@txData
 13116  0A39                     l3188:
 13117  0A39  0822               	movf	putch@txData,w
 13118  0A3A  318D  2577  318A   	fcall	_EUSART_Write
 13119  0A3D                     l599:
 13120  0A3D  0008               	return
 13121  0A3E                     __end_of_putch:
 13122                           
 13123                           	psect	text50
 13124  0D77                     __ptext50:	
 13125 ;; *************** function _EUSART_Write *****************
 13126 ;; Defined at:
 13127 ;;		line 142 in file "eusart.c"
 13128 ;; Parameters:    Size  Location     Type
 13129 ;;  txData          1    wreg     unsigned char 
 13130 ;; Auto vars:     Size  Location     Type
 13131 ;;  txData          1    1[BANK0 ] unsigned char 
 13132 ;; Return value:  Size  Location     Type
 13133 ;;                  1    wreg      void 
 13134 ;; Registers used:
 13135 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13136 ;; Tracked objects:
 13137 ;;		On entry : 0/0
 13138 ;;		On exit  : 0/0
 13139 ;;		Unchanged: 0/0
 13140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13142 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13143 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13144 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13145 ;;Total ram usage:        2 bytes
 13146 ;; Hardware stack levels used: 1
 13147 ;; Hardware stack levels required when called: 4
 13148 ;; This function calls:
 13149 ;;		Nothing
 13150 ;; This function is called by:
 13151 ;;		_putch
 13152 ;; This function uses a non-reentrant model
 13153 ;;
 13154                           
 13155  0D77                     _EUSART_Write:	
 13156                           ;psect for function _EUSART_Write
 13157                           
 13158                           
 13159                           ;incstack = 0
 13160                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 13161                           ;EUSART_Write@txData stored from wreg
 13162  0D77  0020               	movlb	0	; select bank0
 13163  0D78  00A1               	movwf	EUSART_Write@txData
 13164  0D79                     l3170:
 13165  0D79                     l3172:
 13166  0D79  0021               	movlb	1	; select bank1
 13167  0D7A  0854               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 13168  0D7B  1903               	btfsc	3,2
 13169  0D7C  2D7E               	goto	u881
 13170  0D7D  2D7F               	goto	u880
 13171  0D7E                     u881:
 13172  0D7E  2D79               	goto	l3172
 13173  0D7F                     u880:
 13174  0D7F                     l589:
 13175  0D7F  1A11               	btfsc	17,4	;volatile
 13176  0D80  2D82               	goto	u891
 13177  0D81  2D83               	goto	u890
 13178  0D82                     u891:
 13179  0D82  2D88               	goto	l590
 13180  0D83                     u890:
 13181  0D83                     l3174:
 13182  0D83  0020               	movlb	0	; select bank0
 13183  0D84  0821               	movf	EUSART_Write@txData,w
 13184  0D85  0023               	movlb	3	; select bank3
 13185  0D86  009A               	movwf	26	;volatile
 13186  0D87  2DA1               	goto	l3186
 13187  0D88                     l590:
 13188  0D88  1211               	bcf	17,4	;volatile
 13189  0D89                     l3176:
 13190  0D89  0020               	movlb	0	; select bank0
 13191  0D8A  0821               	movf	EUSART_Write@txData,w
 13192  0D8B  00A0               	movwf	??_EUSART_Write
 13193  0D8C  087C               	movf	_eusartTxHead,w
 13194  0D8D  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 13195  0D8E  0086               	movwf	6
 13196  0D8F  3001               	movlw	1	; select bank2/3
 13197  0D90  0087               	movwf	7
 13198  0D91  0820               	movf	??_EUSART_Write,w
 13199  0D92  0081               	movwf	1
 13200  0D93                     l3178:
 13201  0D93  3001               	movlw	1
 13202  0D94  00A0               	movwf	??_EUSART_Write
 13203  0D95  0820               	movf	??_EUSART_Write,w
 13204  0D96  07FC               	addwf	_eusartTxHead,f	;volatile
 13205  0D97                     l3180:
 13206  0D97  3008               	movlw	8
 13207  0D98  027C               	subwf	_eusartTxHead,w	;volatile
 13208  0D99  1C03               	skipc
 13209  0D9A  2D9C               	goto	u901
 13210  0D9B  2D9D               	goto	u900
 13211  0D9C                     u901:
 13212  0D9C  2D9E               	goto	l3184
 13213  0D9D                     u900:
 13214  0D9D                     l3182:
 13215  0D9D  01FC               	clrf	_eusartTxHead	;volatile
 13216  0D9E                     l3184:
 13217  0D9E  3001               	movlw	1
 13218  0D9F  0021               	movlb	1	; select bank1
 13219  0DA0  02D4               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 13220  0DA1                     l3186:
 13221  0DA1  0021               	movlb	1	; select bank1
 13222  0DA2  1611               	bsf	17,4	;volatile
 13223  0DA3                     l593:
 13224  0DA3  0008               	return
 13225  0DA4                     __end_of_EUSART_Write:
 13226                           
 13227                           	psect	text51
 13228  0630                     __ptext51:	
 13229 ;; *************** function ___lomod *****************
 13230 ;; Defined at:
 13231 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lomod.c"
 13232 ;; Parameters:    Size  Location     Type
 13233 ;;  divisor         8    0[BANK0 ] unsigned long long 
 13234 ;;  dividend        8    8[BANK0 ] unsigned long long 
 13235 ;; Auto vars:     Size  Location     Type
 13236 ;;  counter         1   17[BANK0 ] unsigned char 
 13237 ;; Return value:  Size  Location     Type
 13238 ;;                  8    0[BANK0 ] unsigned long long 
 13239 ;; Registers used:
 13240 ;;		wreg, status,2, status,0
 13241 ;; Tracked objects:
 13242 ;;		On entry : 0/0
 13243 ;;		On exit  : 0/0
 13244 ;;		Unchanged: 0/0
 13245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13246 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13247 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13248 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13249 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13250 ;;Total ram usage:       18 bytes
 13251 ;; Hardware stack levels used: 1
 13252 ;; Hardware stack levels required when called: 4
 13253 ;; This function calls:
 13254 ;;		Nothing
 13255 ;; This function is called by:
 13256 ;;		_utoa
 13257 ;; This function uses a non-reentrant model
 13258 ;;
 13259                           
 13260  0630                     ___lomod:	
 13261                           ;psect for function ___lomod
 13262                           
 13263  0630                     l3244:	
 13264                           ;incstack = 0
 13265                           ; Regs used in ___lomod: [wreg+status,2+status,0]
 13266                           
 13267  0630  0020               	movlb	0	; select bank0
 13268  0631  0820               	movf	___lomod@divisor,w
 13269  0632  0421               	iorwf	___lomod@divisor+1,w
 13270  0633  0422               	iorwf	___lomod@divisor+2,w
 13271  0634  0423               	iorwf	___lomod@divisor+3,w
 13272  0635  0424               	iorwf	___lomod@divisor+4,w
 13273  0636  0425               	iorwf	___lomod@divisor+5,w
 13274  0637  0426               	iorwf	___lomod@divisor+6,w
 13275  0638  0427               	iorwf	___lomod@divisor+7,w
 13276  0639  1903               	skipnz
 13277  063A  2E3C               	goto	u1021
 13278  063B  2E3D               	goto	u1020
 13279  063C                     u1021:
 13280  063C  2E90               	goto	l1395
 13281  063D                     u1020:
 13282  063D                     l3246:
 13283  063D  01B1               	clrf	___lomod@counter
 13284  063E  0AB1               	incf	___lomod@counter,f
 13285  063F  2E4C               	goto	l3252
 13286  0640                     l3248:
 13287  0640  35A0               	lslf	___lomod@divisor,f
 13288  0641  0DA1               	rlf	___lomod@divisor+1,f
 13289  0642  0DA2               	rlf	___lomod@divisor+2,f
 13290  0643  0DA3               	rlf	___lomod@divisor+3,f
 13291  0644  0DA4               	rlf	___lomod@divisor+4,f
 13292  0645  0DA5               	rlf	___lomod@divisor+5,f
 13293  0646  0DA6               	rlf	___lomod@divisor+6,f
 13294  0647  0DA7               	rlf	___lomod@divisor+7,f
 13295  0648                     l3250:
 13296  0648  3001               	movlw	1
 13297  0649  00B0               	movwf	??___lomod
 13298  064A  0830               	movf	??___lomod,w
 13299  064B  07B1               	addwf	___lomod@counter,f
 13300  064C                     l3252:
 13301  064C  1FA7               	btfss	___lomod@divisor+7,7
 13302  064D  2E4F               	goto	u1031
 13303  064E  2E50               	goto	u1030
 13304  064F                     u1031:
 13305  064F  2E40               	goto	l3248
 13306  0650                     u1030:
 13307  0650                     l3254:
 13308  0650  0827               	movf	___lomod@divisor+7,w
 13309  0651  022F               	subwf	___lomod@dividend+7,w
 13310  0652  1D03               	skipz
 13311  0653  2E6E               	goto	u1045
 13312  0654  0826               	movf	___lomod@divisor+6,w
 13313  0655  022E               	subwf	___lomod@dividend+6,w
 13314  0656  1D03               	skipz
 13315  0657  2E6E               	goto	u1045
 13316  0658  0825               	movf	___lomod@divisor+5,w
 13317  0659  022D               	subwf	___lomod@dividend+5,w
 13318  065A  1D03               	skipz
 13319  065B  2E6E               	goto	u1045
 13320  065C  0824               	movf	___lomod@divisor+4,w
 13321  065D  022C               	subwf	___lomod@dividend+4,w
 13322  065E  1D03               	skipz
 13323  065F  2E6E               	goto	u1045
 13324  0660  0823               	movf	___lomod@divisor+3,w
 13325  0661  022B               	subwf	___lomod@dividend+3,w
 13326  0662  1D03               	skipz
 13327  0663  2E6E               	goto	u1045
 13328  0664  0822               	movf	___lomod@divisor+2,w
 13329  0665  022A               	subwf	___lomod@dividend+2,w
 13330  0666  1D03               	skipz
 13331  0667  2E6E               	goto	u1045
 13332  0668  0821               	movf	___lomod@divisor+1,w
 13333  0669  0229               	subwf	___lomod@dividend+1,w
 13334  066A  1D03               	skipz
 13335  066B  2E6E               	goto	u1045
 13336  066C  0820               	movf	___lomod@divisor,w
 13337  066D  0228               	subwf	___lomod@dividend,w
 13338  066E                     u1045:
 13339  066E  1C03               	skipc
 13340  066F  2E71               	goto	u1041
 13341  0670  2E72               	goto	u1040
 13342  0671                     u1041:
 13343  0671  2E82               	goto	l3258
 13344  0672                     u1040:
 13345  0672                     l3256:
 13346  0672  0820               	movf	___lomod@divisor,w
 13347  0673  02A8               	subwf	___lomod@dividend,f
 13348  0674  0821               	movf	___lomod@divisor+1,w
 13349  0675  3BA9               	subwfb	___lomod@dividend+1,f
 13350  0676  0822               	movf	___lomod@divisor+2,w
 13351  0677  3BAA               	subwfb	___lomod@dividend+2,f
 13352  0678  0823               	movf	___lomod@divisor+3,w
 13353  0679  3BAB               	subwfb	___lomod@dividend+3,f
 13354  067A  0824               	movf	___lomod@divisor+4,w
 13355  067B  3BAC               	subwfb	___lomod@dividend+4,f
 13356  067C  0825               	movf	___lomod@divisor+5,w
 13357  067D  3BAD               	subwfb	___lomod@dividend+5,f
 13358  067E  0826               	movf	___lomod@divisor+6,w
 13359  067F  3BAE               	subwfb	___lomod@dividend+6,f
 13360  0680  0827               	movf	___lomod@divisor+7,w
 13361  0681  3BAF               	subwfb	___lomod@dividend+7,f
 13362  0682                     l3258:
 13363  0682  36A7               	lsrf	___lomod@divisor+7,f
 13364  0683  0CA6               	rrf	___lomod@divisor+6,f
 13365  0684  0CA5               	rrf	___lomod@divisor+5,f
 13366  0685  0CA4               	rrf	___lomod@divisor+4,f
 13367  0686  0CA3               	rrf	___lomod@divisor+3,f
 13368  0687  0CA2               	rrf	___lomod@divisor+2,f
 13369  0688  0CA1               	rrf	___lomod@divisor+1,f
 13370  0689  0CA0               	rrf	___lomod@divisor,f
 13371  068A  3001               	movlw	1
 13372  068B  02B1               	subwf	___lomod@counter,f
 13373  068C  1D03               	btfss	3,2
 13374  068D  2E8F               	goto	u1051
 13375  068E  2E90               	goto	u1050
 13376  068F                     u1051:
 13377  068F  2E50               	goto	l3254
 13378  0690                     u1050:
 13379  0690                     l1395:
 13380  0690  0828               	movf	___lomod@dividend,w
 13381  0691  00A0               	movwf	?___lomod
 13382  0692  0829               	movf	___lomod@dividend+1,w
 13383  0693  00A1               	movwf	?___lomod+1
 13384  0694  082A               	movf	___lomod@dividend+2,w
 13385  0695  00A2               	movwf	?___lomod+2
 13386  0696  082B               	movf	___lomod@dividend+3,w
 13387  0697  00A3               	movwf	?___lomod+3
 13388  0698  082C               	movf	___lomod@dividend+4,w
 13389  0699  00A4               	movwf	?___lomod+4
 13390  069A  082D               	movf	___lomod@dividend+5,w
 13391  069B  00A5               	movwf	?___lomod+5
 13392  069C  082E               	movf	___lomod@dividend+6,w
 13393  069D  00A6               	movwf	?___lomod+6
 13394  069E  082F               	movf	___lomod@dividend+7,w
 13395  069F  00A7               	movwf	?___lomod+7
 13396  06A0                     l1402:
 13397  06A0  0008               	return
 13398  06A1                     __end_of___lomod:
 13399                           
 13400                           	psect	text52
 13401  05AC                     __ptext52:	
 13402 ;; *************** function ___lodiv *****************
 13403 ;; Defined at:
 13404 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lodiv.c"
 13405 ;; Parameters:    Size  Location     Type
 13406 ;;  divisor         8    0[BANK0 ] unsigned long long 
 13407 ;;  dividend        8    8[BANK0 ] unsigned long long 
 13408 ;; Auto vars:     Size  Location     Type
 13409 ;;  quotient        8   17[BANK0 ] unsigned long long 
 13410 ;;  counter         1   25[BANK0 ] unsigned char 
 13411 ;; Return value:  Size  Location     Type
 13412 ;;                  8    0[BANK0 ] unsigned long long 
 13413 ;; Registers used:
 13414 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13415 ;; Tracked objects:
 13416 ;;		On entry : 0/0
 13417 ;;		On exit  : 0/0
 13418 ;;		Unchanged: 0/0
 13419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13420 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13421 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13422 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13423 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13424 ;;Total ram usage:       26 bytes
 13425 ;; Hardware stack levels used: 1
 13426 ;; Hardware stack levels required when called: 4
 13427 ;; This function calls:
 13428 ;;		Nothing
 13429 ;; This function is called by:
 13430 ;;		_utoa
 13431 ;; This function uses a non-reentrant model
 13432 ;;
 13433                           
 13434  05AC                     ___lodiv:	
 13435                           ;psect for function ___lodiv
 13436                           
 13437  05AC                     l3222:	
 13438                           ;incstack = 0
 13439                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 13440                           
 13441  05AC  3031               	movlw	low ___lodiv@quotient
 13442  05AD  0086               	movwf	6
 13443  05AE  3000               	movlw	high ___lodiv@quotient
 13444  05AF  0087               	movwf	7
 13445  05B0  3008               	movlw	8
 13446  05B1  0020               	movlb	0	; select bank0
 13447  05B2  00B0               	movwf	??___lodiv
 13448  05B3  3000               	movlw	0
 13449  05B4                     u970:
 13450  05B4  001E               	movwi fsr1++
 13451  05B5  0BB0               	decfsz	??___lodiv,f
 13452  05B6  2DB4               	goto	u970
 13453  05B7                     l3224:
 13454  05B7  0820               	movf	___lodiv@divisor,w
 13455  05B8  0421               	iorwf	___lodiv@divisor+1,w
 13456  05B9  0422               	iorwf	___lodiv@divisor+2,w
 13457  05BA  0423               	iorwf	___lodiv@divisor+3,w
 13458  05BB  0424               	iorwf	___lodiv@divisor+4,w
 13459  05BC  0425               	iorwf	___lodiv@divisor+5,w
 13460  05BD  0426               	iorwf	___lodiv@divisor+6,w
 13461  05BE  0427               	iorwf	___lodiv@divisor+7,w
 13462  05BF  1903               	skipnz
 13463  05C0  2DC2               	goto	u981
 13464  05C1  2DC3               	goto	u980
 13465  05C2                     u981:
 13466  05C2  2E1F               	goto	l1385
 13467  05C3                     u980:
 13468  05C3                     l3226:
 13469  05C3  01B9               	clrf	___lodiv@counter
 13470  05C4  0AB9               	incf	___lodiv@counter,f
 13471  05C5  2DD2               	goto	l3232
 13472  05C6                     l3228:
 13473  05C6  35A0               	lslf	___lodiv@divisor,f
 13474  05C7  0DA1               	rlf	___lodiv@divisor+1,f
 13475  05C8  0DA2               	rlf	___lodiv@divisor+2,f
 13476  05C9  0DA3               	rlf	___lodiv@divisor+3,f
 13477  05CA  0DA4               	rlf	___lodiv@divisor+4,f
 13478  05CB  0DA5               	rlf	___lodiv@divisor+5,f
 13479  05CC  0DA6               	rlf	___lodiv@divisor+6,f
 13480  05CD  0DA7               	rlf	___lodiv@divisor+7,f
 13481  05CE                     l3230:
 13482  05CE  3001               	movlw	1
 13483  05CF  00B0               	movwf	??___lodiv
 13484  05D0  0830               	movf	??___lodiv,w
 13485  05D1  07B9               	addwf	___lodiv@counter,f
 13486  05D2                     l3232:
 13487  05D2  1FA7               	btfss	___lodiv@divisor+7,7
 13488  05D3  2DD5               	goto	u991
 13489  05D4  2DD6               	goto	u990
 13490  05D5                     u991:
 13491  05D5  2DC6               	goto	l3228
 13492  05D6                     u990:
 13493  05D6                     l3234:
 13494  05D6  35B1               	lslf	___lodiv@quotient,f
 13495  05D7  0DB2               	rlf	___lodiv@quotient+1,f
 13496  05D8  0DB3               	rlf	___lodiv@quotient+2,f
 13497  05D9  0DB4               	rlf	___lodiv@quotient+3,f
 13498  05DA  0DB5               	rlf	___lodiv@quotient+4,f
 13499  05DB  0DB6               	rlf	___lodiv@quotient+5,f
 13500  05DC  0DB7               	rlf	___lodiv@quotient+6,f
 13501  05DD  0DB8               	rlf	___lodiv@quotient+7,f
 13502  05DE                     l3236:
 13503  05DE  0827               	movf	___lodiv@divisor+7,w
 13504  05DF  022F               	subwf	___lodiv@dividend+7,w
 13505  05E0  1D03               	skipz
 13506  05E1  2DFC               	goto	u1005
 13507  05E2  0826               	movf	___lodiv@divisor+6,w
 13508  05E3  022E               	subwf	___lodiv@dividend+6,w
 13509  05E4  1D03               	skipz
 13510  05E5  2DFC               	goto	u1005
 13511  05E6  0825               	movf	___lodiv@divisor+5,w
 13512  05E7  022D               	subwf	___lodiv@dividend+5,w
 13513  05E8  1D03               	skipz
 13514  05E9  2DFC               	goto	u1005
 13515  05EA  0824               	movf	___lodiv@divisor+4,w
 13516  05EB  022C               	subwf	___lodiv@dividend+4,w
 13517  05EC  1D03               	skipz
 13518  05ED  2DFC               	goto	u1005
 13519  05EE  0823               	movf	___lodiv@divisor+3,w
 13520  05EF  022B               	subwf	___lodiv@dividend+3,w
 13521  05F0  1D03               	skipz
 13522  05F1  2DFC               	goto	u1005
 13523  05F2  0822               	movf	___lodiv@divisor+2,w
 13524  05F3  022A               	subwf	___lodiv@dividend+2,w
 13525  05F4  1D03               	skipz
 13526  05F5  2DFC               	goto	u1005
 13527  05F6  0821               	movf	___lodiv@divisor+1,w
 13528  05F7  0229               	subwf	___lodiv@dividend+1,w
 13529  05F8  1D03               	skipz
 13530  05F9  2DFC               	goto	u1005
 13531  05FA  0820               	movf	___lodiv@divisor,w
 13532  05FB  0228               	subwf	___lodiv@dividend,w
 13533  05FC                     u1005:
 13534  05FC  1C03               	skipc
 13535  05FD  2DFF               	goto	u1001
 13536  05FE  2E00               	goto	u1000
 13537  05FF                     u1001:
 13538  05FF  2E11               	goto	l3242
 13539  0600                     u1000:
 13540  0600                     l3238:
 13541  0600  0820               	movf	___lodiv@divisor,w
 13542  0601  02A8               	subwf	___lodiv@dividend,f
 13543  0602  0821               	movf	___lodiv@divisor+1,w
 13544  0603  3BA9               	subwfb	___lodiv@dividend+1,f
 13545  0604  0822               	movf	___lodiv@divisor+2,w
 13546  0605  3BAA               	subwfb	___lodiv@dividend+2,f
 13547  0606  0823               	movf	___lodiv@divisor+3,w
 13548  0607  3BAB               	subwfb	___lodiv@dividend+3,f
 13549  0608  0824               	movf	___lodiv@divisor+4,w
 13550  0609  3BAC               	subwfb	___lodiv@dividend+4,f
 13551  060A  0825               	movf	___lodiv@divisor+5,w
 13552  060B  3BAD               	subwfb	___lodiv@dividend+5,f
 13553  060C  0826               	movf	___lodiv@divisor+6,w
 13554  060D  3BAE               	subwfb	___lodiv@dividend+6,f
 13555  060E  0827               	movf	___lodiv@divisor+7,w
 13556  060F  3BAF               	subwfb	___lodiv@dividend+7,f
 13557  0610                     l3240:
 13558  0610  1431               	bsf	___lodiv@quotient,0
 13559  0611                     l3242:
 13560  0611  36A7               	lsrf	___lodiv@divisor+7,f
 13561  0612  0CA6               	rrf	___lodiv@divisor+6,f
 13562  0613  0CA5               	rrf	___lodiv@divisor+5,f
 13563  0614  0CA4               	rrf	___lodiv@divisor+4,f
 13564  0615  0CA3               	rrf	___lodiv@divisor+3,f
 13565  0616  0CA2               	rrf	___lodiv@divisor+2,f
 13566  0617  0CA1               	rrf	___lodiv@divisor+1,f
 13567  0618  0CA0               	rrf	___lodiv@divisor,f
 13568  0619  3001               	movlw	1
 13569  061A  02B9               	subwf	___lodiv@counter,f
 13570  061B  1D03               	btfss	3,2
 13571  061C  2E1E               	goto	u1011
 13572  061D  2E1F               	goto	u1010
 13573  061E                     u1011:
 13574  061E  2DD6               	goto	l3234
 13575  061F                     u1010:
 13576  061F                     l1385:
 13577  061F  0831               	movf	___lodiv@quotient,w
 13578  0620  00A0               	movwf	?___lodiv
 13579  0621  0832               	movf	___lodiv@quotient+1,w
 13580  0622  00A1               	movwf	?___lodiv+1
 13581  0623  0833               	movf	___lodiv@quotient+2,w
 13582  0624  00A2               	movwf	?___lodiv+2
 13583  0625  0834               	movf	___lodiv@quotient+3,w
 13584  0626  00A3               	movwf	?___lodiv+3
 13585  0627  0835               	movf	___lodiv@quotient+4,w
 13586  0628  00A4               	movwf	?___lodiv+4
 13587  0629  0836               	movf	___lodiv@quotient+5,w
 13588  062A  00A5               	movwf	?___lodiv+5
 13589  062B  0837               	movf	___lodiv@quotient+6,w
 13590  062C  00A6               	movwf	?___lodiv+6
 13591  062D  0838               	movf	___lodiv@quotient+7,w
 13592  062E  00A7               	movwf	?___lodiv+7
 13593  062F                     l1392:
 13594  062F  0008               	return
 13595  0630                     __end_of___lodiv:
 13596                           
 13597                           	psect	text53
 13598  0264                     __ptext53:	
 13599 ;; *************** function _WritePin *****************
 13600 ;; Defined at:
 13601 ;;		line 148 in file "PIC16Xpress_DevBoard.c"
 13602 ;; Parameters:    Size  Location     Type
 13603 ;;  pin             1    wreg     enum E7144
 13604 ;;  val             1    0[BANK0 ] unsigned char 
 13605 ;; Auto vars:     Size  Location     Type
 13606 ;;  pin             1    3[BANK0 ] enum E7144
 13607 ;; Return value:  Size  Location     Type
 13608 ;;                  1    wreg      unsigned char 
 13609 ;; Registers used:
 13610 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13611 ;; Tracked objects:
 13612 ;;		On entry : 0/0
 13613 ;;		On exit  : 0/0
 13614 ;;		Unchanged: 0/0
 13615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13616 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13617 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13618 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13619 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13620 ;;Total ram usage:        4 bytes
 13621 ;; Hardware stack levels used: 1
 13622 ;; Hardware stack levels required when called: 4
 13623 ;; This function calls:
 13624 ;;		Nothing
 13625 ;; This function is called by:
 13626 ;;		_JSN_Sensor_Init
 13627 ;;		_JSN_Sensor_Trig
 13628 ;;		_SpeakerTone_Init
 13629 ;; This function uses a non-reentrant model
 13630 ;;
 13631                           
 13632  0264                     _WritePin:	
 13633                           ;psect for function _WritePin
 13634                           
 13635                           
 13636                           ;incstack = 0
 13637                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
 13638                           ;WritePin@pin stored from wreg
 13639  0264  0020               	movlb	0	; select bank0
 13640  0265  00A3               	movwf	WritePin@pin
 13641  0266                     l3836:
 13642                           
 13643                           ;PIC16Xpress_DevBoard.c: 149:     switch(pin) {
 13644  0266  2ADE               	goto	l3908
 13645  0267                     l3838:
 13646                           
 13647                           ;PIC16Xpress_DevBoard.c: 151:             LATAbits.LATA5 = val;
 13648  0267  0C20               	rrf	WritePin@val,w
 13649  0268  0022               	movlb	2	; select bank2
 13650  0269  1C03               	skipc
 13651  026A  128C               	bcf	12,5	;volatile
 13652  026B  1803               	skipnc
 13653  026C  168C               	bsf	12,5	;volatile
 13654  026D  2B1E               	goto	l163
 13655  026E                     l3842:
 13656                           
 13657                           ;PIC16Xpress_DevBoard.c: 154:             LATAbits.LATA4 = val;
 13658  026E  0C20               	rrf	WritePin@val,w
 13659  026F  0022               	movlb	2	; select bank2
 13660  0270  1C03               	skipc
 13661  0271  120C               	bcf	12,4	;volatile
 13662  0272  1803               	skipnc
 13663  0273  160C               	bsf	12,4	;volatile
 13664  0274  2B1E               	goto	l163
 13665  0275                     l3846:
 13666                           
 13667                           ;PIC16Xpress_DevBoard.c: 159:             LATCbits.LATC5 = val;
 13668  0275  0C20               	rrf	WritePin@val,w
 13669  0276  0022               	movlb	2	; select bank2
 13670  0277  1C03               	skipc
 13671  0278  128E               	bcf	14,5	;volatile
 13672  0279  1803               	skipnc
 13673  027A  168E               	bsf	14,5	;volatile
 13674  027B  2B1E               	goto	l163
 13675  027C                     l3850:
 13676                           
 13677                           ;PIC16Xpress_DevBoard.c: 162:             LATCbits.LATC4 = val;
 13678  027C  0C20               	rrf	WritePin@val,w
 13679  027D  0022               	movlb	2	; select bank2
 13680  027E  1C03               	skipc
 13681  027F  120E               	bcf	14,4	;volatile
 13682  0280  1803               	skipnc
 13683  0281  160E               	bsf	14,4	;volatile
 13684  0282  2B1E               	goto	l163
 13685  0283                     l3854:
 13686                           
 13687                           ;PIC16Xpress_DevBoard.c: 165:             LATCbits.LATC3 = val;
 13688  0283  0C20               	rrf	WritePin@val,w
 13689  0284  0022               	movlb	2	; select bank2
 13690  0285  1C03               	skipc
 13691  0286  118E               	bcf	14,3	;volatile
 13692  0287  1803               	skipnc
 13693  0288  158E               	bsf	14,3	;volatile
 13694  0289  2B1E               	goto	l163
 13695  028A                     l3858:
 13696                           
 13697                           ;PIC16Xpress_DevBoard.c: 168:             LATCbits.LATC6 = val;
 13698  028A  0C20               	rrf	WritePin@val,w
 13699  028B  0022               	movlb	2	; select bank2
 13700  028C  1C03               	skipc
 13701  028D  130E               	bcf	14,6	;volatile
 13702  028E  1803               	skipnc
 13703  028F  170E               	bsf	14,6	;volatile
 13704  0290  2B1E               	goto	l163
 13705  0291                     l3862:
 13706                           
 13707                           ;PIC16Xpress_DevBoard.c: 171:             LATCbits.LATC7 = val;
 13708  0291  0C20               	rrf	WritePin@val,w
 13709  0292  0022               	movlb	2	; select bank2
 13710  0293  1C03               	skipc
 13711  0294  138E               	bcf	14,7	;volatile
 13712  0295  1803               	skipnc
 13713  0296  178E               	bsf	14,7	;volatile
 13714  0297  2B1E               	goto	l163
 13715  0298                     l3866:
 13716                           
 13717                           ;PIC16Xpress_DevBoard.c: 174:             LATBbits.LATB7 = val;
 13718  0298  0C20               	rrf	WritePin@val,w
 13719  0299  0022               	movlb	2	; select bank2
 13720  029A  1C03               	skipc
 13721  029B  138D               	bcf	13,7	;volatile
 13722  029C  1803               	skipnc
 13723  029D  178D               	bsf	13,7	;volatile
 13724  029E  2B1E               	goto	l163
 13725  029F                     l3870:
 13726                           
 13727                           ;PIC16Xpress_DevBoard.c: 177:             LATAbits.LATA0 = val;
 13728  029F  0C20               	rrf	WritePin@val,w
 13729  02A0  0022               	movlb	2	; select bank2
 13730  02A1  1C03               	skipc
 13731  02A2  100C               	bcf	12,0	;volatile
 13732  02A3  1803               	skipnc
 13733  02A4  140C               	bsf	12,0	;volatile
 13734  02A5  2B1E               	goto	l163
 13735  02A6                     l3874:
 13736                           
 13737                           ;PIC16Xpress_DevBoard.c: 180:             LATAbits.LATA1 = val;
 13738  02A6  0C20               	rrf	WritePin@val,w
 13739  02A7  0022               	movlb	2	; select bank2
 13740  02A8  1C03               	skipc
 13741  02A9  108C               	bcf	12,1	;volatile
 13742  02AA  1803               	skipnc
 13743  02AB  148C               	bsf	12,1	;volatile
 13744  02AC  2B1E               	goto	l163
 13745  02AD                     l3878:
 13746                           
 13747                           ;PIC16Xpress_DevBoard.c: 183:             LATAbits.LATA2 = val;
 13748  02AD  0C20               	rrf	WritePin@val,w
 13749  02AE  0022               	movlb	2	; select bank2
 13750  02AF  1C03               	skipc
 13751  02B0  110C               	bcf	12,2	;volatile
 13752  02B1  1803               	skipnc
 13753  02B2  150C               	bsf	12,2	;volatile
 13754  02B3  2B1E               	goto	l163
 13755  02B4                     l3882:
 13756                           
 13757                           ;PIC16Xpress_DevBoard.c: 186:             LATCbits.LATC0 = val;
 13758  02B4  0C20               	rrf	WritePin@val,w
 13759  02B5  0022               	movlb	2	; select bank2
 13760  02B6  1C03               	skipc
 13761  02B7  100E               	bcf	14,0	;volatile
 13762  02B8  1803               	skipnc
 13763  02B9  140E               	bsf	14,0	;volatile
 13764  02BA  2B1E               	goto	l163
 13765  02BB                     l3886:
 13766                           
 13767                           ;PIC16Xpress_DevBoard.c: 189:             LATCbits.LATC1 = val;
 13768  02BB  0C20               	rrf	WritePin@val,w
 13769  02BC  0022               	movlb	2	; select bank2
 13770  02BD  1C03               	skipc
 13771  02BE  108E               	bcf	14,1	;volatile
 13772  02BF  1803               	skipnc
 13773  02C0  148E               	bsf	14,1	;volatile
 13774  02C1  2B1E               	goto	l163
 13775  02C2                     l3890:
 13776                           
 13777                           ;PIC16Xpress_DevBoard.c: 192:             LATCbits.LATC2 = val;
 13778  02C2  0C20               	rrf	WritePin@val,w
 13779  02C3  0022               	movlb	2	; select bank2
 13780  02C4  1C03               	skipc
 13781  02C5  110E               	bcf	14,2	;volatile
 13782  02C6  1803               	skipnc
 13783  02C7  150E               	bsf	14,2	;volatile
 13784  02C8  2B1E               	goto	l163
 13785  02C9                     l3894:
 13786                           
 13787                           ;PIC16Xpress_DevBoard.c: 195:             LATBbits.LATB4 = val;
 13788  02C9  0C20               	rrf	WritePin@val,w
 13789  02CA  0022               	movlb	2	; select bank2
 13790  02CB  1C03               	skipc
 13791  02CC  120D               	bcf	13,4	;volatile
 13792  02CD  1803               	skipnc
 13793  02CE  160D               	bsf	13,4	;volatile
 13794  02CF  2B1E               	goto	l163
 13795  02D0                     l3898:
 13796                           
 13797                           ;PIC16Xpress_DevBoard.c: 198:             LATBbits.LATB5 = val;
 13798  02D0  0C20               	rrf	WritePin@val,w
 13799  02D1  0022               	movlb	2	; select bank2
 13800  02D2  1C03               	skipc
 13801  02D3  128D               	bcf	13,5	;volatile
 13802  02D4  1803               	skipnc
 13803  02D5  168D               	bsf	13,5	;volatile
 13804  02D6  2B1E               	goto	l163
 13805  02D7                     l3902:
 13806                           
 13807                           ;PIC16Xpress_DevBoard.c: 201:             LATBbits.LATB6 = val;
 13808  02D7  0C20               	rrf	WritePin@val,w
 13809  02D8  0022               	movlb	2	; select bank2
 13810  02D9  1C03               	skipc
 13811  02DA  130D               	bcf	13,6	;volatile
 13812  02DB  1803               	skipnc
 13813  02DC  170D               	bsf	13,6	;volatile
 13814  02DD  2B1E               	goto	l163
 13815  02DE                     l3908:
 13816  02DE  0823               	movf	WritePin@pin,w
 13817  02DF  00A1               	movwf	??_WritePin
 13818  02E0  01A2               	clrf	??_WritePin+1
 13819                           
 13820                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13821                           ; Switch size 1, requested type "simple"
 13822                           ; Number of cases is 1, Range of values is 0 to 0
 13823                           ; switch strategies available:
 13824                           ; Name         Instructions Cycles
 13825                           ; simple_byte            4     3 (average)
 13826                           ; direct_byte            8     6 (fixed)
 13827                           ; jumptable            260     6 (fixed)
 13828                           ;	Chosen strategy is simple_byte
 13829  02E1  0822               	movf	??_WritePin+1,w
 13830  02E2  3A00               	xorlw	0	; case 0
 13831  02E3  1903               	skipnz
 13832  02E4  2AE6               	goto	l4608
 13833  02E5  2B1E               	goto	l163
 13834  02E6                     l4608:
 13835                           
 13836                           ; Switch size 1, requested type "simple"
 13837                           ; Number of cases is 18, Range of values is 0 to 17
 13838                           ; switch strategies available:
 13839                           ; Name         Instructions Cycles
 13840                           ; direct_byte           42     6 (fixed)
 13841                           ; simple_byte           55    28 (average)
 13842                           ; jumptable            260     6 (fixed)
 13843                           ;	Chosen strategy is simple_byte
 13844  02E6  0821               	movf	??_WritePin,w
 13845  02E7  3A00               	xorlw	0	; case 0
 13846  02E8  1903               	skipnz
 13847  02E9  2A67               	goto	l3838
 13848  02EA  3A01               	xorlw	1	; case 1
 13849  02EB  1903               	skipnz
 13850  02EC  2A6E               	goto	l3842
 13851  02ED  3A03               	xorlw	3	; case 2
 13852  02EE  1903               	skipnz
 13853  02EF  2B1E               	goto	l163
 13854  02F0  3A01               	xorlw	1	; case 3
 13855  02F1  1903               	skipnz
 13856  02F2  2A75               	goto	l3846
 13857  02F3  3A07               	xorlw	7	; case 4
 13858  02F4  1903               	skipnz
 13859  02F5  2A7C               	goto	l3850
 13860  02F6  3A01               	xorlw	1	; case 5
 13861  02F7  1903               	skipnz
 13862  02F8  2A83               	goto	l3854
 13863  02F9  3A03               	xorlw	3	; case 6
 13864  02FA  1903               	skipnz
 13865  02FB  2A8A               	goto	l3858
 13866  02FC  3A01               	xorlw	1	; case 7
 13867  02FD  1903               	skipnz
 13868  02FE  2A91               	goto	l3862
 13869  02FF  3A0F               	xorlw	15	; case 8
 13870  0300  1903               	skipnz
 13871  0301  2A98               	goto	l3866
 13872  0302  3A01               	xorlw	1	; case 9
 13873  0303  1903               	skipnz
 13874  0304  2A9F               	goto	l3870
 13875  0305  3A03               	xorlw	3	; case 10
 13876  0306  1903               	skipnz
 13877  0307  2AA6               	goto	l3874
 13878  0308  3A01               	xorlw	1	; case 11
 13879  0309  1903               	skipnz
 13880  030A  2AAD               	goto	l3878
 13881  030B  3A07               	xorlw	7	; case 12
 13882  030C  1903               	skipnz
 13883  030D  2AB4               	goto	l3882
 13884  030E  3A01               	xorlw	1	; case 13
 13885  030F  1903               	skipnz
 13886  0310  2ABB               	goto	l3886
 13887  0311  3A03               	xorlw	3	; case 14
 13888  0312  1903               	skipnz
 13889  0313  2AC2               	goto	l3890
 13890  0314  3A01               	xorlw	1	; case 15
 13891  0315  1903               	skipnz
 13892  0316  2AC9               	goto	l3894
 13893  0317  3A1F               	xorlw	31	; case 16
 13894  0318  1903               	skipnz
 13895  0319  2AD0               	goto	l3898
 13896  031A  3A01               	xorlw	1	; case 17
 13897  031B  1903               	skipnz
 13898  031C  2AD7               	goto	l3902
 13899  031D  2B1E               	goto	l163
 13900  031E                     l163:
 13901  031E  0008               	return
 13902  031F                     __end_of_WritePin:
 13903                           
 13904                           	psect	text54
 13905  031F                     __ptext54:	
 13906 ;; *************** function _SetPin *****************
 13907 ;; Defined at:
 13908 ;;		line 41 in file "PIC16Xpress_DevBoard.c"
 13909 ;; Parameters:    Size  Location     Type
 13910 ;;  pin             1    wreg     enum E7144
 13911 ;;  io              1    0[BANK0 ] unsigned char 
 13912 ;; Auto vars:     Size  Location     Type
 13913 ;;  pin             1    3[BANK0 ] enum E7144
 13914 ;; Return value:  Size  Location     Type
 13915 ;;                  1    wreg      unsigned char 
 13916 ;; Registers used:
 13917 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13918 ;; Tracked objects:
 13919 ;;		On entry : 0/0
 13920 ;;		On exit  : 0/0
 13921 ;;		Unchanged: 0/0
 13922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13923 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13924 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13925 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13926 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13927 ;;Total ram usage:        4 bytes
 13928 ;; Hardware stack levels used: 1
 13929 ;; Hardware stack levels required when called: 4
 13930 ;; This function calls:
 13931 ;;		Nothing
 13932 ;; This function is called by:
 13933 ;;		_JSN_Sensor_Init
 13934 ;;		_SpeakerTone_Init
 13935 ;; This function uses a non-reentrant model
 13936 ;;
 13937                           
 13938  031F                     _SetPin:	
 13939                           ;psect for function _SetPin
 13940                           
 13941                           
 13942                           ;incstack = 0
 13943                           ; Regs used in _SetPin: [wreg-fsr0h+status,2+status,0]
 13944                           ;SetPin@pin stored from wreg
 13945  031F  0020               	movlb	0	; select bank0
 13946  0320  00A3               	movwf	SetPin@pin
 13947  0321                     l3750:
 13948                           
 13949                           ;PIC16Xpress_DevBoard.c: 42:     switch(pin) {
 13950  0321  2B99               	goto	l3822
 13951  0322                     l3752:
 13952                           
 13953                           ;PIC16Xpress_DevBoard.c: 44:             TRISAbits.TRISA5 = io;
 13954  0322  0C20               	rrf	SetPin@io,w
 13955  0323  0021               	movlb	1	; select bank1
 13956  0324  1C03               	skipc
 13957  0325  128C               	bcf	12,5	;volatile
 13958  0326  1803               	skipnc
 13959  0327  168C               	bsf	12,5	;volatile
 13960  0328  2BD9               	goto	l115
 13961  0329                     l3756:
 13962                           
 13963                           ;PIC16Xpress_DevBoard.c: 47:             TRISAbits.TRISA4 = io;
 13964  0329  0C20               	rrf	SetPin@io,w
 13965  032A  0021               	movlb	1	; select bank1
 13966  032B  1C03               	skipc
 13967  032C  120C               	bcf	12,4	;volatile
 13968  032D  1803               	skipnc
 13969  032E  160C               	bsf	12,4	;volatile
 13970  032F  2BD9               	goto	l115
 13971  0330                     l3760:
 13972                           
 13973                           ;PIC16Xpress_DevBoard.c: 52:             TRISCbits.TRISC5 = io;
 13974  0330  0C20               	rrf	SetPin@io,w
 13975  0331  0021               	movlb	1	; select bank1
 13976  0332  1C03               	skipc
 13977  0333  128E               	bcf	14,5	;volatile
 13978  0334  1803               	skipnc
 13979  0335  168E               	bsf	14,5	;volatile
 13980  0336  2BD9               	goto	l115
 13981  0337                     l3764:
 13982                           
 13983                           ;PIC16Xpress_DevBoard.c: 55:             TRISCbits.TRISC4 = io;
 13984  0337  0C20               	rrf	SetPin@io,w
 13985  0338  0021               	movlb	1	; select bank1
 13986  0339  1C03               	skipc
 13987  033A  120E               	bcf	14,4	;volatile
 13988  033B  1803               	skipnc
 13989  033C  160E               	bsf	14,4	;volatile
 13990  033D  2BD9               	goto	l115
 13991  033E                     l3768:
 13992                           
 13993                           ;PIC16Xpress_DevBoard.c: 58:             TRISCbits.TRISC3 = io;
 13994  033E  0C20               	rrf	SetPin@io,w
 13995  033F  0021               	movlb	1	; select bank1
 13996  0340  1C03               	skipc
 13997  0341  118E               	bcf	14,3	;volatile
 13998  0342  1803               	skipnc
 13999  0343  158E               	bsf	14,3	;volatile
 14000  0344  2BD9               	goto	l115
 14001  0345                     l3772:
 14002                           
 14003                           ;PIC16Xpress_DevBoard.c: 61:             TRISCbits.TRISC6 = io;
 14004  0345  0C20               	rrf	SetPin@io,w
 14005  0346  0021               	movlb	1	; select bank1
 14006  0347  1C03               	skipc
 14007  0348  130E               	bcf	14,6	;volatile
 14008  0349  1803               	skipnc
 14009  034A  170E               	bsf	14,6	;volatile
 14010  034B  2BD9               	goto	l115
 14011  034C                     l3776:
 14012                           
 14013                           ;PIC16Xpress_DevBoard.c: 64:             TRISCbits.TRISC7 = io;
 14014  034C  0C20               	rrf	SetPin@io,w
 14015  034D  0021               	movlb	1	; select bank1
 14016  034E  1C03               	skipc
 14017  034F  138E               	bcf	14,7	;volatile
 14018  0350  1803               	skipnc
 14019  0351  178E               	bsf	14,7	;volatile
 14020  0352  2BD9               	goto	l115
 14021  0353                     l3780:
 14022                           
 14023                           ;PIC16Xpress_DevBoard.c: 67:             TRISBbits.TRISB7 = io;
 14024  0353  0C20               	rrf	SetPin@io,w
 14025  0354  0021               	movlb	1	; select bank1
 14026  0355  1C03               	skipc
 14027  0356  138D               	bcf	13,7	;volatile
 14028  0357  1803               	skipnc
 14029  0358  178D               	bsf	13,7	;volatile
 14030  0359  2BD9               	goto	l115
 14031  035A                     l3784:
 14032                           
 14033                           ;PIC16Xpress_DevBoard.c: 70:             TRISAbits.TRISA0 = io;
 14034  035A  0C20               	rrf	SetPin@io,w
 14035  035B  0021               	movlb	1	; select bank1
 14036  035C  1C03               	skipc
 14037  035D  100C               	bcf	12,0	;volatile
 14038  035E  1803               	skipnc
 14039  035F  140C               	bsf	12,0	;volatile
 14040  0360  2BD9               	goto	l115
 14041  0361                     l3788:
 14042                           
 14043                           ;PIC16Xpress_DevBoard.c: 73:             TRISAbits.TRISA1 = io;
 14044  0361  0C20               	rrf	SetPin@io,w
 14045  0362  0021               	movlb	1	; select bank1
 14046  0363  1C03               	skipc
 14047  0364  108C               	bcf	12,1	;volatile
 14048  0365  1803               	skipnc
 14049  0366  148C               	bsf	12,1	;volatile
 14050  0367  2BD9               	goto	l115
 14051  0368                     l3792:
 14052                           
 14053                           ;PIC16Xpress_DevBoard.c: 76:             TRISAbits.TRISA2 = io;
 14054  0368  0C20               	rrf	SetPin@io,w
 14055  0369  0021               	movlb	1	; select bank1
 14056  036A  1C03               	skipc
 14057  036B  110C               	bcf	12,2	;volatile
 14058  036C  1803               	skipnc
 14059  036D  150C               	bsf	12,2	;volatile
 14060  036E  2BD9               	goto	l115
 14061  036F                     l3796:
 14062                           
 14063                           ;PIC16Xpress_DevBoard.c: 79:             TRISCbits.TRISC0 = io;
 14064  036F  0C20               	rrf	SetPin@io,w
 14065  0370  0021               	movlb	1	; select bank1
 14066  0371  1C03               	skipc
 14067  0372  100E               	bcf	14,0	;volatile
 14068  0373  1803               	skipnc
 14069  0374  140E               	bsf	14,0	;volatile
 14070  0375  2BD9               	goto	l115
 14071  0376                     l3800:
 14072                           
 14073                           ;PIC16Xpress_DevBoard.c: 82:             TRISCbits.TRISC1 = io;
 14074  0376  0C20               	rrf	SetPin@io,w
 14075  0377  0021               	movlb	1	; select bank1
 14076  0378  1C03               	skipc
 14077  0379  108E               	bcf	14,1	;volatile
 14078  037A  1803               	skipnc
 14079  037B  148E               	bsf	14,1	;volatile
 14080  037C  2BD9               	goto	l115
 14081  037D                     l3804:
 14082                           
 14083                           ;PIC16Xpress_DevBoard.c: 85:             TRISCbits.TRISC2 = io;
 14084  037D  0C20               	rrf	SetPin@io,w
 14085  037E  0021               	movlb	1	; select bank1
 14086  037F  1C03               	skipc
 14087  0380  110E               	bcf	14,2	;volatile
 14088  0381  1803               	skipnc
 14089  0382  150E               	bsf	14,2	;volatile
 14090  0383  2BD9               	goto	l115
 14091  0384                     l3808:
 14092                           
 14093                           ;PIC16Xpress_DevBoard.c: 88:             TRISBbits.TRISB4 = io;
 14094  0384  0C20               	rrf	SetPin@io,w
 14095  0385  0021               	movlb	1	; select bank1
 14096  0386  1C03               	skipc
 14097  0387  120D               	bcf	13,4	;volatile
 14098  0388  1803               	skipnc
 14099  0389  160D               	bsf	13,4	;volatile
 14100  038A  2BD9               	goto	l115
 14101  038B                     l3812:
 14102                           
 14103                           ;PIC16Xpress_DevBoard.c: 91:             TRISBbits.TRISB5 = io;
 14104  038B  0C20               	rrf	SetPin@io,w
 14105  038C  0021               	movlb	1	; select bank1
 14106  038D  1C03               	skipc
 14107  038E  128D               	bcf	13,5	;volatile
 14108  038F  1803               	skipnc
 14109  0390  168D               	bsf	13,5	;volatile
 14110  0391  2BD9               	goto	l115
 14111  0392                     l3816:
 14112                           
 14113                           ;PIC16Xpress_DevBoard.c: 94:             TRISBbits.TRISB6 = io;
 14114  0392  0C20               	rrf	SetPin@io,w
 14115  0393  0021               	movlb	1	; select bank1
 14116  0394  1C03               	skipc
 14117  0395  130D               	bcf	13,6	;volatile
 14118  0396  1803               	skipnc
 14119  0397  170D               	bsf	13,6	;volatile
 14120  0398  2BD9               	goto	l115
 14121  0399                     l3822:
 14122  0399  0823               	movf	SetPin@pin,w
 14123  039A  00A1               	movwf	??_SetPin
 14124  039B  01A2               	clrf	??_SetPin+1
 14125                           
 14126                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14127                           ; Switch size 1, requested type "simple"
 14128                           ; Number of cases is 1, Range of values is 0 to 0
 14129                           ; switch strategies available:
 14130                           ; Name         Instructions Cycles
 14131                           ; simple_byte            4     3 (average)
 14132                           ; direct_byte            8     6 (fixed)
 14133                           ; jumptable            260     6 (fixed)
 14134                           ;	Chosen strategy is simple_byte
 14135  039C  0822               	movf	??_SetPin+1,w
 14136  039D  3A00               	xorlw	0	; case 0
 14137  039E  1903               	skipnz
 14138  039F  2BA1               	goto	l4610
 14139  03A0  2BD9               	goto	l115
 14140  03A1                     l4610:
 14141                           
 14142                           ; Switch size 1, requested type "simple"
 14143                           ; Number of cases is 18, Range of values is 0 to 17
 14144                           ; switch strategies available:
 14145                           ; Name         Instructions Cycles
 14146                           ; direct_byte           42     6 (fixed)
 14147                           ; simple_byte           55    28 (average)
 14148                           ; jumptable            260     6 (fixed)
 14149                           ;	Chosen strategy is simple_byte
 14150  03A1  0821               	movf	??_SetPin,w
 14151  03A2  3A00               	xorlw	0	; case 0
 14152  03A3  1903               	skipnz
 14153  03A4  2B22               	goto	l3752
 14154  03A5  3A01               	xorlw	1	; case 1
 14155  03A6  1903               	skipnz
 14156  03A7  2B29               	goto	l3756
 14157  03A8  3A03               	xorlw	3	; case 2
 14158  03A9  1903               	skipnz
 14159  03AA  2BD9               	goto	l115
 14160  03AB  3A01               	xorlw	1	; case 3
 14161  03AC  1903               	skipnz
 14162  03AD  2B30               	goto	l3760
 14163  03AE  3A07               	xorlw	7	; case 4
 14164  03AF  1903               	skipnz
 14165  03B0  2B37               	goto	l3764
 14166  03B1  3A01               	xorlw	1	; case 5
 14167  03B2  1903               	skipnz
 14168  03B3  2B3E               	goto	l3768
 14169  03B4  3A03               	xorlw	3	; case 6
 14170  03B5  1903               	skipnz
 14171  03B6  2B45               	goto	l3772
 14172  03B7  3A01               	xorlw	1	; case 7
 14173  03B8  1903               	skipnz
 14174  03B9  2B4C               	goto	l3776
 14175  03BA  3A0F               	xorlw	15	; case 8
 14176  03BB  1903               	skipnz
 14177  03BC  2B53               	goto	l3780
 14178  03BD  3A01               	xorlw	1	; case 9
 14179  03BE  1903               	skipnz
 14180  03BF  2B5A               	goto	l3784
 14181  03C0  3A03               	xorlw	3	; case 10
 14182  03C1  1903               	skipnz
 14183  03C2  2B61               	goto	l3788
 14184  03C3  3A01               	xorlw	1	; case 11
 14185  03C4  1903               	skipnz
 14186  03C5  2B68               	goto	l3792
 14187  03C6  3A07               	xorlw	7	; case 12
 14188  03C7  1903               	skipnz
 14189  03C8  2B6F               	goto	l3796
 14190  03C9  3A01               	xorlw	1	; case 13
 14191  03CA  1903               	skipnz
 14192  03CB  2B76               	goto	l3800
 14193  03CC  3A03               	xorlw	3	; case 14
 14194  03CD  1903               	skipnz
 14195  03CE  2B7D               	goto	l3804
 14196  03CF  3A01               	xorlw	1	; case 15
 14197  03D0  1903               	skipnz
 14198  03D1  2B84               	goto	l3808
 14199  03D2  3A1F               	xorlw	31	; case 16
 14200  03D3  1903               	skipnz
 14201  03D4  2B8B               	goto	l3812
 14202  03D5  3A01               	xorlw	1	; case 17
 14203  03D6  1903               	skipnz
 14204  03D7  2B92               	goto	l3816
 14205  03D8  2BD9               	goto	l115
 14206  03D9                     l115:
 14207  03D9  0008               	return
 14208  03DA                     __end_of_SetPin:
 14209                           
 14210                           	psect	text55
 14211  0F35                     __ptext55:	
 14212 ;; *************** function _JSN_Sensor_GetDistance *****************
 14213 ;; Defined at:
 14214 ;;		line 106 in file "JSN_Sensor.c"
 14215 ;; Parameters:    Size  Location     Type
 14216 ;;  Sensor          2   26[BANK0 ] PTR struct .
 14217 ;;		 -> RAM(4096), Sens3(6), Sens2(6), Sens1(6), 
 14218 ;; Auto vars:     Size  Location     Type
 14219 ;;		None
 14220 ;; Return value:  Size  Location     Type
 14221 ;;                  2   26[BANK0 ] unsigned int 
 14222 ;; Registers used:
 14223 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14224 ;; Tracked objects:
 14225 ;;		On entry : 0/0
 14226 ;;		On exit  : 0/0
 14227 ;;		Unchanged: 0/0
 14228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14231 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14232 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14233 ;;Total ram usage:        4 bytes
 14234 ;; Hardware stack levels used: 1
 14235 ;; Hardware stack levels required when called: 5
 14236 ;; This function calls:
 14237 ;;		___lldiv
 14238 ;;		___lmul
 14239 ;; This function is called by:
 14240 ;;		_main
 14241 ;; This function uses a non-reentrant model
 14242 ;;
 14243                           
 14244  0F35                     _JSN_Sensor_GetDistance:	
 14245                           ;psect for function _JSN_Sensor_GetDistance
 14246                           
 14247  0F35                     l4106:	
 14248                           ;incstack = 0
 14249                           ; Regs used in _JSN_Sensor_GetDistance: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 14250                           
 14251                           
 14252                           ;JSN_Sensor.c: 111:     Sensor->distance = (unsigned int) (((uint32_t) Sensor->echoHighT
      +                          ime *
 14253  0F35  3000               	movlw	0
 14254  0F36  0020               	movlb	0	; select bank0
 14255  0F37  00AF               	movwf	___lldiv@divisor+3
 14256  0F38  3000               	movlw	0
 14257  0F39  00AE               	movwf	___lldiv@divisor+2
 14258  0F3A  3007               	movlw	7
 14259  0F3B  00AD               	movwf	___lldiv@divisor+1
 14260  0F3C  30D0               	movlw	208
 14261  0F3D  00AC               	movwf	___lldiv@divisor
 14262  0F3E  083A               	movf	JSN_Sensor_GetDistance@Sensor,w
 14263  0F3F  0086               	movwf	6
 14264  0F40  083B               	movf	JSN_Sensor_GetDistance@Sensor+1,w
 14265  0F41  0087               	movwf	7
 14266  0F42  3F40               	moviw [0]fsr1
 14267  0F43  00BC               	movwf	??_JSN_Sensor_GetDistance
 14268  0F44  3F41               	moviw [1]fsr1
 14269  0F45  00BD               	movwf	??_JSN_Sensor_GetDistance+1
 14270  0F46  083C               	movf	??_JSN_Sensor_GetDistance,w
 14271  0F47  00A0               	movwf	___lmul@multiplier
 14272  0F48  083D               	movf	??_JSN_Sensor_GetDistance+1,w
 14273  0F49  00A1               	movwf	___lmul@multiplier+1
 14274  0F4A  01A2               	clrf	___lmul@multiplier+2
 14275  0F4B  01A3               	clrf	___lmul@multiplier+3
 14276  0F4C  3000               	movlw	0
 14277  0F4D  00A7               	movwf	___lmul@multiplicand+3
 14278  0F4E  3000               	movlw	0
 14279  0F4F  00A6               	movwf	___lmul@multiplicand+2
 14280  0F50  3001               	movlw	1
 14281  0F51  00A5               	movwf	___lmul@multiplicand+1
 14282  0F52  3057               	movlw	87
 14283  0F53  00A4               	movwf	___lmul@multiplicand
 14284  0F54  318D  25D5  318F   	fcall	___lmul
 14285  0F57  0020               	movlb	0	; select bank0
 14286  0F58  0823               	movf	?___lmul+3,w
 14287  0F59  00B3               	movwf	___lldiv@dividend+3
 14288  0F5A  0822               	movf	?___lmul+2,w
 14289  0F5B  00B2               	movwf	___lldiv@dividend+2
 14290  0F5C  0821               	movf	?___lmul+1,w
 14291  0F5D  00B1               	movwf	___lldiv@dividend+1
 14292  0F5E  0820               	movf	?___lmul,w
 14293  0F5F  00B0               	movwf	___lldiv@dividend
 14294  0F60  3186  26A1  318F   	fcall	___lldiv
 14295  0F63  0020               	movlb	0	; select bank0
 14296  0F64  083A               	movf	JSN_Sensor_GetDistance@Sensor,w
 14297  0F65  0086               	movwf	6
 14298  0F66  083B               	movf	JSN_Sensor_GetDistance@Sensor+1,w
 14299  0F67  0087               	movwf	7
 14300  0F68  3142               	addfsr 1,2
 14301  0F69  082C               	movf	?___lldiv,w
 14302  0F6A  3FC0               	movwi [0]fsr1
 14303  0F6B  082D               	movf	?___lldiv+1,w
 14304  0F6C  3FC1               	movwi [1]fsr1
 14305  0F6D                     l4108:
 14306                           
 14307                           ;JSN_Sensor.c: 113:     return Sensor->distance;
 14308  0F6D  083A               	movf	JSN_Sensor_GetDistance@Sensor,w
 14309  0F6E  0086               	movwf	6
 14310  0F6F  083B               	movf	JSN_Sensor_GetDistance@Sensor+1,w
 14311  0F70  0087               	movwf	7
 14312  0F71  3142               	addfsr 1,2
 14313  0F72  3F40               	moviw [0]fsr1
 14314  0F73  00BA               	movwf	?_JSN_Sensor_GetDistance
 14315  0F74  3F41               	moviw [1]fsr1
 14316  0F75  00BB               	movwf	?_JSN_Sensor_GetDistance+1
 14317  0F76                     l53:
 14318  0F76  0008               	return
 14319  0F77                     __end_of_JSN_Sensor_GetDistance:
 14320                           
 14321                           	psect	text56
 14322  0DD5                     __ptext56:	
 14323 ;; *************** function ___lmul *****************
 14324 ;; Defined at:
 14325 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul32.c"
 14326 ;; Parameters:    Size  Location     Type
 14327 ;;  multiplier      4    0[BANK0 ] unsigned long 
 14328 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 14329 ;; Auto vars:     Size  Location     Type
 14330 ;;  product         4    8[BANK0 ] unsigned long 
 14331 ;; Return value:  Size  Location     Type
 14332 ;;                  4    0[BANK0 ] unsigned long 
 14333 ;; Registers used:
 14334 ;;		wreg, status,2, status,0
 14335 ;; Tracked objects:
 14336 ;;		On entry : 0/0
 14337 ;;		On exit  : 0/0
 14338 ;;		Unchanged: 0/0
 14339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14340 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14341 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14343 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14344 ;;Total ram usage:       12 bytes
 14345 ;; Hardware stack levels used: 1
 14346 ;; Hardware stack levels required when called: 4
 14347 ;; This function calls:
 14348 ;;		Nothing
 14349 ;; This function is called by:
 14350 ;;		_JSN_Sensor_GetDistance
 14351 ;;		_MotorControl_SetIntensity
 14352 ;; This function uses a non-reentrant model
 14353 ;;
 14354                           
 14355  0DD5                     ___lmul:	
 14356                           ;psect for function ___lmul
 14357                           
 14358  0DD5                     l4010:	
 14359                           ;incstack = 0
 14360                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 14361                           
 14362  0DD5  3000               	movlw	0
 14363  0DD6  0020               	movlb	0	; select bank0
 14364  0DD7  00AB               	movwf	___lmul@product+3
 14365  0DD8  3000               	movlw	0
 14366  0DD9  00AA               	movwf	___lmul@product+2
 14367  0DDA  3000               	movlw	0
 14368  0DDB  00A9               	movwf	___lmul@product+1
 14369  0DDC  3000               	movlw	0
 14370  0DDD  00A8               	movwf	___lmul@product
 14371  0DDE                     l4012:
 14372  0DDE  1C20               	btfss	___lmul@multiplier,0
 14373  0DDF  2DE1               	goto	u1301
 14374  0DE0  2DE2               	goto	u1300
 14375  0DE1                     u1301:
 14376  0DE1  2DEA               	goto	l4016
 14377  0DE2                     u1300:
 14378  0DE2                     l4014:
 14379  0DE2  0824               	movf	___lmul@multiplicand,w
 14380  0DE3  07A8               	addwf	___lmul@product,f
 14381  0DE4  0825               	movf	___lmul@multiplicand+1,w
 14382  0DE5  3DA9               	addwfc	___lmul@product+1,f
 14383  0DE6  0826               	movf	___lmul@multiplicand+2,w
 14384  0DE7  3DAA               	addwfc	___lmul@product+2,f
 14385  0DE8  0827               	movf	___lmul@multiplicand+3,w
 14386  0DE9  3DAB               	addwfc	___lmul@product+3,f
 14387  0DEA                     l4016:
 14388  0DEA  3001               	movlw	1
 14389  0DEB                     u1315:
 14390  0DEB  35A4               	lslf	___lmul@multiplicand,f
 14391  0DEC  0DA5               	rlf	___lmul@multiplicand+1,f
 14392  0DED  0DA6               	rlf	___lmul@multiplicand+2,f
 14393  0DEE  0DA7               	rlf	___lmul@multiplicand+3,f
 14394  0DEF  0B89               	decfsz	9,f
 14395  0DF0  2DEB               	goto	u1315
 14396  0DF1                     l4018:
 14397  0DF1  3001               	movlw	1
 14398  0DF2                     u1325:
 14399  0DF2  36A3               	lsrf	___lmul@multiplier+3,f
 14400  0DF3  0CA2               	rrf	___lmul@multiplier+2,f
 14401  0DF4  0CA1               	rrf	___lmul@multiplier+1,f
 14402  0DF5  0CA0               	rrf	___lmul@multiplier,f
 14403  0DF6  0B89               	decfsz	9,f
 14404  0DF7  2DF2               	goto	u1325
 14405  0DF8  0823               	movf	___lmul@multiplier+3,w
 14406  0DF9  0422               	iorwf	___lmul@multiplier+2,w
 14407  0DFA  0421               	iorwf	___lmul@multiplier+1,w
 14408  0DFB  0420               	iorwf	___lmul@multiplier,w
 14409  0DFC  1D03               	skipz
 14410  0DFD  2DFF               	goto	u1331
 14411  0DFE  2E00               	goto	u1330
 14412  0DFF                     u1331:
 14413  0DFF  2DDE               	goto	l4012
 14414  0E00                     u1330:
 14415  0E00                     l4020:
 14416  0E00  082B               	movf	___lmul@product+3,w
 14417  0E01  00A3               	movwf	?___lmul+3
 14418  0E02  082A               	movf	___lmul@product+2,w
 14419  0E03  00A2               	movwf	?___lmul+2
 14420  0E04  0829               	movf	___lmul@product+1,w
 14421  0E05  00A1               	movwf	?___lmul+1
 14422  0E06  0828               	movf	___lmul@product,w
 14423  0E07  00A0               	movwf	?___lmul
 14424  0E08                     l1166:
 14425  0E08  0008               	return
 14426  0E09                     __end_of___lmul:
 14427                           
 14428                           	psect	text57
 14429  06A1                     __ptext57:	
 14430 ;; *************** function ___lldiv *****************
 14431 ;; Defined at:
 14432 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\__lldiv.c"
 14433 ;; Parameters:    Size  Location     Type
 14434 ;;  divisor         4   12[BANK0 ] unsigned long 
 14435 ;;  dividend        4   16[BANK0 ] unsigned long 
 14436 ;; Auto vars:     Size  Location     Type
 14437 ;;  quotient        4   21[BANK0 ] unsigned long 
 14438 ;;  counter         1   25[BANK0 ] unsigned char 
 14439 ;; Return value:  Size  Location     Type
 14440 ;;                  4   12[BANK0 ] unsigned long 
 14441 ;; Registers used:
 14442 ;;		wreg, status,2, status,0
 14443 ;; Tracked objects:
 14444 ;;		On entry : 0/0
 14445 ;;		On exit  : 0/0
 14446 ;;		Unchanged: 0/0
 14447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14448 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14449 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14450 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14451 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14452 ;;Total ram usage:       14 bytes
 14453 ;; Hardware stack levels used: 1
 14454 ;; Hardware stack levels required when called: 4
 14455 ;; This function calls:
 14456 ;;		Nothing
 14457 ;; This function is called by:
 14458 ;;		_JSN_Sensor_GetDistance
 14459 ;;		_SpeakerTone_SetFrequency
 14460 ;;		_MotorControl_SetIntensity
 14461 ;; This function uses a non-reentrant model
 14462 ;;
 14463                           
 14464  06A1                     ___lldiv:	
 14465                           ;psect for function ___lldiv
 14466                           
 14467  06A1                     l4024:	
 14468                           ;incstack = 0
 14469                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 14470                           
 14471  06A1  3000               	movlw	0
 14472  06A2  0020               	movlb	0	; select bank0
 14473  06A3  00B8               	movwf	___lldiv@quotient+3
 14474  06A4  3000               	movlw	0
 14475  06A5  00B7               	movwf	___lldiv@quotient+2
 14476  06A6  3000               	movlw	0
 14477  06A7  00B6               	movwf	___lldiv@quotient+1
 14478  06A8  3000               	movlw	0
 14479  06A9  00B5               	movwf	___lldiv@quotient
 14480  06AA  082F               	movf	___lldiv@divisor+3,w
 14481  06AB  042E               	iorwf	___lldiv@divisor+2,w
 14482  06AC  042D               	iorwf	___lldiv@divisor+1,w
 14483  06AD  042C               	iorwf	___lldiv@divisor,w
 14484  06AE  1903               	skipnz
 14485  06AF  2EB1               	goto	u1341
 14486  06B0  2EB2               	goto	u1340
 14487  06B1                     u1341:
 14488  06B1  2EF3               	goto	l4044
 14489  06B2                     u1340:
 14490  06B2                     l4026:
 14491  06B2  01B9               	clrf	___lldiv@counter
 14492  06B3  0AB9               	incf	___lldiv@counter,f
 14493  06B4  2EC0               	goto	l4030
 14494  06B5                     l4028:
 14495  06B5  3001               	movlw	1
 14496  06B6                     u1355:
 14497  06B6  35AC               	lslf	___lldiv@divisor,f
 14498  06B7  0DAD               	rlf	___lldiv@divisor+1,f
 14499  06B8  0DAE               	rlf	___lldiv@divisor+2,f
 14500  06B9  0DAF               	rlf	___lldiv@divisor+3,f
 14501  06BA  0B89               	decfsz	9,f
 14502  06BB  2EB6               	goto	u1355
 14503  06BC  3001               	movlw	1
 14504  06BD  00B4               	movwf	??___lldiv
 14505  06BE  0834               	movf	??___lldiv,w
 14506  06BF  07B9               	addwf	___lldiv@counter,f
 14507  06C0                     l4030:
 14508  06C0  1FAF               	btfss	___lldiv@divisor+3,7
 14509  06C1  2EC3               	goto	u1361
 14510  06C2  2EC4               	goto	u1360
 14511  06C3                     u1361:
 14512  06C3  2EB5               	goto	l4028
 14513  06C4                     u1360:
 14514  06C4                     l4032:
 14515  06C4  3001               	movlw	1
 14516  06C5                     u1375:
 14517  06C5  35B5               	lslf	___lldiv@quotient,f
 14518  06C6  0DB6               	rlf	___lldiv@quotient+1,f
 14519  06C7  0DB7               	rlf	___lldiv@quotient+2,f
 14520  06C8  0DB8               	rlf	___lldiv@quotient+3,f
 14521  06C9  0B89               	decfsz	9,f
 14522  06CA  2EC5               	goto	u1375
 14523  06CB                     l4034:
 14524  06CB  082F               	movf	___lldiv@divisor+3,w
 14525  06CC  0233               	subwf	___lldiv@dividend+3,w
 14526  06CD  1D03               	skipz
 14527  06CE  2ED9               	goto	u1385
 14528  06CF  082E               	movf	___lldiv@divisor+2,w
 14529  06D0  0232               	subwf	___lldiv@dividend+2,w
 14530  06D1  1D03               	skipz
 14531  06D2  2ED9               	goto	u1385
 14532  06D3  082D               	movf	___lldiv@divisor+1,w
 14533  06D4  0231               	subwf	___lldiv@dividend+1,w
 14534  06D5  1D03               	skipz
 14535  06D6  2ED9               	goto	u1385
 14536  06D7  082C               	movf	___lldiv@divisor,w
 14537  06D8  0230               	subwf	___lldiv@dividend,w
 14538  06D9                     u1385:
 14539  06D9  1C03               	skipc
 14540  06DA  2EDC               	goto	u1381
 14541  06DB  2EDD               	goto	u1380
 14542  06DC                     u1381:
 14543  06DC  2EE6               	goto	l4040
 14544  06DD                     u1380:
 14545  06DD                     l4036:
 14546  06DD  082C               	movf	___lldiv@divisor,w
 14547  06DE  02B0               	subwf	___lldiv@dividend,f
 14548  06DF  082D               	movf	___lldiv@divisor+1,w
 14549  06E0  3BB1               	subwfb	___lldiv@dividend+1,f
 14550  06E1  082E               	movf	___lldiv@divisor+2,w
 14551  06E2  3BB2               	subwfb	___lldiv@dividend+2,f
 14552  06E3  082F               	movf	___lldiv@divisor+3,w
 14553  06E4  3BB3               	subwfb	___lldiv@dividend+3,f
 14554  06E5                     l4038:
 14555  06E5  1435               	bsf	___lldiv@quotient,0
 14556  06E6                     l4040:
 14557  06E6  3001               	movlw	1
 14558  06E7                     u1395:
 14559  06E7  36AF               	lsrf	___lldiv@divisor+3,f
 14560  06E8  0CAE               	rrf	___lldiv@divisor+2,f
 14561  06E9  0CAD               	rrf	___lldiv@divisor+1,f
 14562  06EA  0CAC               	rrf	___lldiv@divisor,f
 14563  06EB  0B89               	decfsz	9,f
 14564  06EC  2EE7               	goto	u1395
 14565  06ED                     l4042:
 14566  06ED  3001               	movlw	1
 14567  06EE  02B9               	subwf	___lldiv@counter,f
 14568  06EF  1D03               	btfss	3,2
 14569  06F0  2EF2               	goto	u1401
 14570  06F1  2EF3               	goto	u1400
 14571  06F2                     u1401:
 14572  06F2  2EC4               	goto	l4032
 14573  06F3                     u1400:
 14574  06F3                     l4044:
 14575  06F3  0838               	movf	___lldiv@quotient+3,w
 14576  06F4  00AF               	movwf	?___lldiv+3
 14577  06F5  0837               	movf	___lldiv@quotient+2,w
 14578  06F6  00AE               	movwf	?___lldiv+2
 14579  06F7  0836               	movf	___lldiv@quotient+1,w
 14580  06F8  00AD               	movwf	?___lldiv+1
 14581  06F9  0835               	movf	___lldiv@quotient,w
 14582  06FA  00AC               	movwf	?___lldiv
 14583  06FB                     l1188:
 14584  06FB  0008               	return
 14585  06FC                     __end_of___lldiv:
 14586                           
 14587                           	psect	text58
 14588  0D21                     __ptext58:	
 14589 ;; *************** function _JSN_SensorGetPtr *****************
 14590 ;; Defined at:
 14591 ;;		line 124 in file "JSN_Sensor.c"
 14592 ;; Parameters:    Size  Location     Type
 14593 ;;  sensNum         1    wreg     unsigned char 
 14594 ;; Auto vars:     Size  Location     Type
 14595 ;;  sensNum         1    2[BANK0 ] unsigned char 
 14596 ;; Return value:  Size  Location     Type
 14597 ;;                  2    6[COMMON] PTR struct .
 14598 ;; Registers used:
 14599 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14600 ;; Tracked objects:
 14601 ;;		On entry : 0/0
 14602 ;;		On exit  : 0/0
 14603 ;;		Unchanged: 0/0
 14604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14606 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14607 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14608 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14609 ;;Total ram usage:        3 bytes
 14610 ;; Hardware stack levels used: 1
 14611 ;; Hardware stack levels required when called: 4
 14612 ;; This function calls:
 14613 ;;		Nothing
 14614 ;; This function is called by:
 14615 ;;		_main
 14616 ;; This function uses a non-reentrant model
 14617 ;;
 14618                           
 14619  0D21                     _JSN_SensorGetPtr:	
 14620                           ;psect for function _JSN_SensorGetPtr
 14621                           
 14622                           
 14623                           ;incstack = 0
 14624                           ; Regs used in _JSN_SensorGetPtr: [wreg-fsr0h+status,2+status,0]
 14625                           ;JSN_SensorGetPtr@sensNum stored from wreg
 14626  0D21  0020               	movlb	0	; select bank0
 14627  0D22  00A2               	movwf	JSN_SensorGetPtr@sensNum
 14628  0D23                     l4112:
 14629                           
 14630                           ;JSN_Sensor.c: 125:     switch(sensNum) {
 14631  0D23  2D38               	goto	l4132
 14632  0D24                     l4114:
 14633                           
 14634                           ;JSN_Sensor.c: 127:             return &Sens1;
 14635  0D24  3058               	movlw	low _Sens1
 14636  0D25  00F6               	movwf	?_JSN_SensorGetPtr
 14637  0D26  3001               	movlw	high _Sens1
 14638  0D27  00F7               	movwf	?_JSN_SensorGetPtr+1
 14639  0D28  2D4B               	goto	l61
 14640  0D29                     l4118:
 14641                           
 14642                           ;JSN_Sensor.c: 129:             return &Sens2;
 14643  0D29  3052               	movlw	low _Sens2
 14644  0D2A  00F6               	movwf	?_JSN_SensorGetPtr
 14645  0D2B  3001               	movlw	high _Sens2
 14646  0D2C  00F7               	movwf	?_JSN_SensorGetPtr+1
 14647  0D2D  2D4B               	goto	l61
 14648  0D2E                     l4122:
 14649                           
 14650                           ;JSN_Sensor.c: 131:             return &Sens3;
 14651  0D2E  304C               	movlw	low _Sens3
 14652  0D2F  00F6               	movwf	?_JSN_SensorGetPtr
 14653  0D30  3001               	movlw	high _Sens3
 14654  0D31  00F7               	movwf	?_JSN_SensorGetPtr+1
 14655  0D32  2D4B               	goto	l61
 14656  0D33                     l4126:
 14657                           
 14658                           ;JSN_Sensor.c: 133:             return 0xFF;
 14659  0D33  30FF               	movlw	255
 14660  0D34  00F6               	movwf	?_JSN_SensorGetPtr
 14661  0D35  3000               	movlw	0
 14662  0D36  00F7               	movwf	?_JSN_SensorGetPtr+1
 14663  0D37  2D4B               	goto	l61
 14664  0D38                     l4132:
 14665  0D38  0822               	movf	JSN_SensorGetPtr@sensNum,w
 14666  0D39  00A0               	movwf	??_JSN_SensorGetPtr
 14667  0D3A  01A1               	clrf	??_JSN_SensorGetPtr+1
 14668                           
 14669                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14670                           ; Switch size 1, requested type "simple"
 14671                           ; Number of cases is 1, Range of values is 0 to 0
 14672                           ; switch strategies available:
 14673                           ; Name         Instructions Cycles
 14674                           ; simple_byte            4     3 (average)
 14675                           ; direct_byte            8     6 (fixed)
 14676                           ; jumptable            260     6 (fixed)
 14677                           ;	Chosen strategy is simple_byte
 14678  0D3B  0821               	movf	??_JSN_SensorGetPtr+1,w
 14679  0D3C  3A00               	xorlw	0	; case 0
 14680  0D3D  1903               	skipnz
 14681  0D3E  2D40               	goto	l4612
 14682  0D3F  2D33               	goto	l4126
 14683  0D40                     l4612:
 14684                           
 14685                           ; Switch size 1, requested type "simple"
 14686                           ; Number of cases is 3, Range of values is 1 to 3
 14687                           ; switch strategies available:
 14688                           ; Name         Instructions Cycles
 14689                           ; simple_byte           10     6 (average)
 14690                           ; direct_byte           15     9 (fixed)
 14691                           ; jumptable            263     9 (fixed)
 14692                           ;	Chosen strategy is simple_byte
 14693  0D40  0820               	movf	??_JSN_SensorGetPtr,w
 14694  0D41  3A01               	xorlw	1	; case 1
 14695  0D42  1903               	skipnz
 14696  0D43  2D24               	goto	l4114
 14697  0D44  3A03               	xorlw	3	; case 2
 14698  0D45  1903               	skipnz
 14699  0D46  2D29               	goto	l4118
 14700  0D47  3A01               	xorlw	1	; case 3
 14701  0D48  1903               	skipnz
 14702  0D49  2D2E               	goto	l4122
 14703  0D4A  2D33               	goto	l4126
 14704  0D4B                     l61:
 14705  0D4B  0008               	return
 14706  0D4C                     __end_of_JSN_SensorGetPtr:
 14707                           
 14708                           	psect	text59
 14709  0B53                     __ptext59:	
 14710 ;; *************** function _FRT_GetMillis *****************
 14711 ;; Defined at:
 14712 ;;		line 26 in file "FRT.c"
 14713 ;; Parameters:    Size  Location     Type
 14714 ;;		None
 14715 ;; Auto vars:     Size  Location     Type
 14716 ;;		None
 14717 ;; Return value:  Size  Location     Type
 14718 ;;                  4    0[BANK0 ] unsigned long 
 14719 ;; Registers used:
 14720 ;;		wreg
 14721 ;; Tracked objects:
 14722 ;;		On entry : 0/0
 14723 ;;		On exit  : 0/0
 14724 ;;		Unchanged: 0/0
 14725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14726 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14729 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14730 ;;Total ram usage:        4 bytes
 14731 ;; Hardware stack levels used: 1
 14732 ;; Hardware stack levels required when called: 4
 14733 ;; This function calls:
 14734 ;;		Nothing
 14735 ;; This function is called by:
 14736 ;;		_main
 14737 ;; This function uses a non-reentrant model
 14738 ;;
 14739                           
 14740  0B53                     _FRT_GetMillis:	
 14741                           ;psect for function _FRT_GetMillis
 14742                           
 14743  0B53                     l4238:	
 14744                           ;incstack = 0
 14745                           ; Regs used in _FRT_GetMillis: [wreg]
 14746                           
 14747                           
 14748                           ;FRT.c: 27:     return millis;
 14749  0B53  0022               	movlb	2	; select bank2
 14750  0B54  083F               	movf	(_millis+3)^(0+256),w
 14751  0B55  0020               	movlb	0	; select bank0
 14752  0B56  00A3               	movwf	?_FRT_GetMillis+3
 14753  0B57  0022               	movlb	2	; select bank2
 14754  0B58  083E               	movf	(_millis+2)^(0+256),w
 14755  0B59  0020               	movlb	0	; select bank0
 14756  0B5A  00A2               	movwf	?_FRT_GetMillis+2
 14757  0B5B  0022               	movlb	2	; select bank2
 14758  0B5C  083D               	movf	(_millis+1)^(0+256),w
 14759  0B5D  0020               	movlb	0	; select bank0
 14760  0B5E  00A1               	movwf	?_FRT_GetMillis+1
 14761  0B5F  0022               	movlb	2	; select bank2
 14762  0B60  083C               	movf	_millis^(0+256),w
 14763  0B61  0020               	movlb	0	; select bank0
 14764  0B62  00A0               	movwf	?_FRT_GetMillis
 14765  0B63                     l772:
 14766  0B63  0008               	return
 14767  0B64                     __end_of_FRT_GetMillis:
 14768                           
 14769                           	psect	intentry
 14770  0004                     __pintentry:	
 14771 ;; *************** function _INTERRUPT_InterruptManager *****************
 14772 ;; Defined at:
 14773 ;;		line 16 in file "interrupt_manager.c"
 14774 ;; Parameters:    Size  Location     Type
 14775 ;;		None
 14776 ;; Auto vars:     Size  Location     Type
 14777 ;;		None
 14778 ;; Return value:  Size  Location     Type
 14779 ;;                  1    wreg      void 
 14780 ;; Registers used:
 14781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14782 ;; Tracked objects:
 14783 ;;		On entry : 0/0
 14784 ;;		On exit  : 0/0
 14785 ;;		Unchanged: 0/0
 14786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14791 ;;Total ram usage:        0 bytes
 14792 ;; Hardware stack levels used: 1
 14793 ;; Hardware stack levels required when called: 3
 14794 ;; This function calls:
 14795 ;;		Absolute function
 14796 ;;		_CCP1_CaptureISR
 14797 ;;		_CCP2_CaptureISR
 14798 ;;		_CCP3_CaptureISR
 14799 ;;		_CCP4_CompareISR
 14800 ;;		_EUSART_Receive_ISR
 14801 ;;		_EUSART_Transmit_ISR
 14802 ;;		_TMR0_ISR
 14803 ;;		_TMR1_ISR
 14804 ;;		_TMR3_ISR
 14805 ;; This function is called by:
 14806 ;;		Interrupt level 1
 14807 ;; This function uses a non-reentrant model
 14808 ;;
 14809                           
 14810  0004                     _INTERRUPT_InterruptManager:
 14811                           
 14812                           ;incstack = 0
 14813  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 14814                           
 14815                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14816  0005  3180               	pagesel	$
 14817  0006                     i1l4262:
 14818                           
 14819                           ;interrupt_manager.c: 19:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 14820  0006  0021               	movlb	1	; select bank1
 14821  0007  1E90               	btfss	16,5	;volatile
 14822  0008  280A               	goto	u150_21
 14823  0009  280B               	goto	u150_20
 14824  000A                     u150_21:
 14825  000A  2814               	goto	i1l681
 14826  000B                     u150_20:
 14827  000B                     i1l4264:
 14828  000B  0020               	movlb	0	; select bank0
 14829  000C  1E90               	btfss	16,5	;volatile
 14830  000D  280F               	goto	u151_21
 14831  000E  2810               	goto	u151_20
 14832  000F                     u151_21:
 14833  000F  2814               	goto	i1l681
 14834  0010                     u151_20:
 14835  0010                     i1l4266:
 14836                           
 14837                           ;interrupt_manager.c: 20:     {;interrupt_manager.c: 21:         TMR0_ISR();
 14838  0010  318B  2320  3180   	fcall	_TMR0_ISR
 14839                           
 14840                           ;interrupt_manager.c: 22:     }
 14841  0013  288E               	goto	i1l699
 14842  0014                     i1l681:	
 14843                           ;interrupt_manager.c: 23:     else if(INTCONbits.PEIE == 1)
 14844                           
 14845  0014  1F0B               	btfss	11,6	;volatile
 14846  0015  2817               	goto	u152_21
 14847  0016  2818               	goto	u152_20
 14848  0017                     u152_21:
 14849  0017  288E               	goto	i1l699
 14850  0018                     u152_20:
 14851  0018                     i1l4268:
 14852                           
 14853                           ;interrupt_manager.c: 24:     {;interrupt_manager.c: 25:         if(PIE4bits.CCP4IE == 1
      +                           && PIR4bits.CCP4IF == 1)
 14854  0018  0021               	movlb	1	; select bank1
 14855  0019  1D94               	btfss	20,3	;volatile
 14856  001A  281C               	goto	u153_21
 14857  001B  281D               	goto	u153_20
 14858  001C                     u153_21:
 14859  001C  2826               	goto	i1l684
 14860  001D                     u153_20:
 14861  001D                     i1l4270:
 14862  001D  0020               	movlb	0	; select bank0
 14863  001E  1D94               	btfss	20,3	;volatile
 14864  001F  2821               	goto	u154_21
 14865  0020  2822               	goto	u154_20
 14866  0021                     u154_21:
 14867  0021  2826               	goto	i1l684
 14868  0022                     u154_20:
 14869  0022                     i1l4272:
 14870                           
 14871                           ;interrupt_manager.c: 26:         {;interrupt_manager.c: 27:             CCP4_CompareISR
      +                          ();
 14872  0022  318A  220A  3180   	fcall	_CCP4_CompareISR
 14873                           
 14874                           ;interrupt_manager.c: 28:         }
 14875  0025  288E               	goto	i1l699
 14876  0026                     i1l684:	
 14877                           ;interrupt_manager.c: 29:         else if(PIE3bits.TMR3IE == 1 && PIR3bits.TMR3IF == 1)
 14878                           
 14879  0026  0021               	movlb	1	; select bank1
 14880  0027  1E13               	btfss	19,4	;volatile
 14881  0028  282A               	goto	u155_21
 14882  0029  282B               	goto	u155_20
 14883  002A                     u155_21:
 14884  002A  2834               	goto	i1l686
 14885  002B                     u155_20:
 14886  002B                     i1l4274:
 14887  002B  0020               	movlb	0	; select bank0
 14888  002C  1E13               	btfss	19,4	;volatile
 14889  002D  282F               	goto	u156_21
 14890  002E  2830               	goto	u156_20
 14891  002F                     u156_21:
 14892  002F  2834               	goto	i1l686
 14893  0030                     u156_20:
 14894  0030                     i1l4276:
 14895                           
 14896                           ;interrupt_manager.c: 30:         {;interrupt_manager.c: 31:             TMR3_ISR();
 14897  0030  318A  222A  3180   	fcall	_TMR3_ISR
 14898                           
 14899                           ;interrupt_manager.c: 32:         }
 14900  0033  288E               	goto	i1l699
 14901  0034                     i1l686:	
 14902                           ;interrupt_manager.c: 33:         else if(PIE4bits.CCP1IE == 1 && PIR4bits.CCP1IF == 1)
 14903                           
 14904  0034  0021               	movlb	1	; select bank1
 14905  0035  1C14               	btfss	20,0	;volatile
 14906  0036  2838               	goto	u157_21
 14907  0037  2839               	goto	u157_20
 14908  0038                     u157_21:
 14909  0038  2842               	goto	i1l688
 14910  0039                     u157_20:
 14911  0039                     i1l4278:
 14912  0039  0020               	movlb	0	; select bank0
 14913  003A  1C14               	btfss	20,0	;volatile
 14914  003B  283D               	goto	u158_21
 14915  003C  283E               	goto	u158_20
 14916  003D                     u158_21:
 14917  003D  2842               	goto	i1l688
 14918  003E                     u158_20:
 14919  003E                     i1l4280:
 14920                           
 14921                           ;interrupt_manager.c: 34:         {;interrupt_manager.c: 35:             CCP1_CaptureISR
      +                          ();
 14922  003E  318B  23AD  3180   	fcall	_CCP1_CaptureISR
 14923                           
 14924                           ;interrupt_manager.c: 36:         }
 14925  0041  288E               	goto	i1l699
 14926  0042                     i1l688:	
 14927                           ;interrupt_manager.c: 37:         else if(PIE4bits.CCP3IE == 1 && PIR4bits.CCP3IF == 1)
 14928                           
 14929  0042  0021               	movlb	1	; select bank1
 14930  0043  1D14               	btfss	20,2	;volatile
 14931  0044  2846               	goto	u159_21
 14932  0045  2847               	goto	u159_20
 14933  0046                     u159_21:
 14934  0046  2850               	goto	i1l690
 14935  0047                     u159_20:
 14936  0047                     i1l4282:
 14937  0047  0020               	movlb	0	; select bank0
 14938  0048  1D14               	btfss	20,2	;volatile
 14939  0049  284B               	goto	u160_21
 14940  004A  284C               	goto	u160_20
 14941  004B                     u160_21:
 14942  004B  2850               	goto	i1l690
 14943  004C                     u160_20:
 14944  004C                     i1l4284:
 14945                           
 14946                           ;interrupt_manager.c: 38:         {;interrupt_manager.c: 39:             CCP3_CaptureISR
      +                          ();
 14947  004C  318B  23D9  3180   	fcall	_CCP3_CaptureISR
 14948                           
 14949                           ;interrupt_manager.c: 40:         }
 14950  004F  288E               	goto	i1l699
 14951  0050                     i1l690:	
 14952                           ;interrupt_manager.c: 41:         else if(PIE4bits.CCP2IE == 1 && PIR4bits.CCP2IF == 1)
 14953                           
 14954  0050  0021               	movlb	1	; select bank1
 14955  0051  1C94               	btfss	20,1	;volatile
 14956  0052  2854               	goto	u161_21
 14957  0053  2855               	goto	u161_20
 14958  0054                     u161_21:
 14959  0054  285E               	goto	i1l692
 14960  0055                     u161_20:
 14961  0055                     i1l4286:
 14962  0055  0020               	movlb	0	; select bank0
 14963  0056  1C94               	btfss	20,1	;volatile
 14964  0057  2859               	goto	u162_21
 14965  0058  285A               	goto	u162_20
 14966  0059                     u162_21:
 14967  0059  285E               	goto	i1l692
 14968  005A                     u162_20:
 14969  005A                     i1l4288:
 14970                           
 14971                           ;interrupt_manager.c: 42:         {;interrupt_manager.c: 43:             CCP2_CaptureISR
      +                          ();
 14972  005A  318B  23C3  3180   	fcall	_CCP2_CaptureISR
 14973                           
 14974                           ;interrupt_manager.c: 44:         }
 14975  005D  288E               	goto	i1l699
 14976  005E                     i1l692:	
 14977                           ;interrupt_manager.c: 45:         else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 14978                           
 14979  005E  0021               	movlb	1	; select bank1
 14980  005F  1C11               	btfss	17,0	;volatile
 14981  0060  2862               	goto	u163_21
 14982  0061  2863               	goto	u163_20
 14983  0062                     u163_21:
 14984  0062  286C               	goto	i1l694
 14985  0063                     u163_20:
 14986  0063                     i1l4290:
 14987  0063  0020               	movlb	0	; select bank0
 14988  0064  1C11               	btfss	17,0	;volatile
 14989  0065  2867               	goto	u164_21
 14990  0066  2868               	goto	u164_20
 14991  0067                     u164_21:
 14992  0067  286C               	goto	i1l694
 14993  0068                     u164_20:
 14994  0068                     i1l4292:
 14995                           
 14996                           ;interrupt_manager.c: 46:         {;interrupt_manager.c: 47:             TMR1_ISR();
 14997  0068  318A  22D4  3180   	fcall	_TMR1_ISR
 14998                           
 14999                           ;interrupt_manager.c: 48:         }
 15000  006B  288E               	goto	i1l699
 15001  006C                     i1l694:	
 15002                           ;interrupt_manager.c: 49:         else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 15003                           
 15004  006C  0021               	movlb	1	; select bank1
 15005  006D  1E91               	btfss	17,5	;volatile
 15006  006E  2870               	goto	u165_21
 15007  006F  2871               	goto	u165_20
 15008  0070                     u165_21:
 15009  0070  287D               	goto	i1l696
 15010  0071                     u165_20:
 15011  0071                     i1l4294:
 15012  0071  0020               	movlb	0	; select bank0
 15013  0072  1E91               	btfss	17,5	;volatile
 15014  0073  2875               	goto	u166_21
 15015  0074  2876               	goto	u166_20
 15016  0075                     u166_21:
 15017  0075  287D               	goto	i1l696
 15018  0076                     u166_20:
 15019  0076                     i1l4296:
 15020                           
 15021                           ;interrupt_manager.c: 50:         {;interrupt_manager.c: 51:             EUSART_RxDefaul
      +                          tInterruptHandler();
 15022  0076  0021               	movlb	1	; select bank1
 15023  0077  0833               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 15024  0078  008A               	movwf	10
 15025  0079  0832               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 15026  007A  000A               	callw
 15027  007B  3180               	pagesel	$
 15028                           
 15029                           ;interrupt_manager.c: 52:         }
 15030  007C  288E               	goto	i1l699
 15031  007D                     i1l696:	
 15032                           ;interrupt_manager.c: 53:         else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 15033                           
 15034  007D  0021               	movlb	1	; select bank1
 15035  007E  1E11               	btfss	17,4	;volatile
 15036  007F  2881               	goto	u167_21
 15037  0080  2882               	goto	u167_20
 15038  0081                     u167_21:
 15039  0081  288E               	goto	i1l693
 15040  0082                     u167_20:
 15041  0082                     i1l4298:
 15042  0082  0020               	movlb	0	; select bank0
 15043  0083  1E11               	btfss	17,4	;volatile
 15044  0084  2886               	goto	u168_21
 15045  0085  2887               	goto	u168_20
 15046  0086                     u168_21:
 15047  0086  288E               	goto	i1l693
 15048  0087                     u168_20:
 15049  0087                     i1l4300:
 15050                           
 15051                           ;interrupt_manager.c: 54:         {;interrupt_manager.c: 55:             EUSART_TxDefaul
      +                          tInterruptHandler();
 15052  0087  0021               	movlb	1	; select bank1
 15053  0088  0835               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 15054  0089  008A               	movwf	10
 15055  008A  0834               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 15056  008B  000A               	callw
 15057  008C  3180               	pagesel	$
 15058  008D  288E               	goto	i1l699
 15059  008E                     i1l693:
 15060  008E                     i1l699:
 15061  008E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 15062  008F  0009               	retfie
 15063  0090                     __end_of_INTERRUPT_InterruptManager:
 15064                           
 15065                           	psect	text61
 15066  0A2A                     __ptext61:	
 15067 ;; *************** function _TMR3_ISR *****************
 15068 ;; Defined at:
 15069 ;;		line 129 in file "tmr3.c"
 15070 ;; Parameters:    Size  Location     Type
 15071 ;;		None
 15072 ;; Auto vars:     Size  Location     Type
 15073 ;;		None
 15074 ;; Return value:  Size  Location     Type
 15075 ;;                  1    wreg      void 
 15076 ;; Registers used:
 15077 ;;		wreg, status,2, status,0, pclath, cstack
 15078 ;; Tracked objects:
 15079 ;;		On entry : 0/0
 15080 ;;		On exit  : 0/0
 15081 ;;		Unchanged: 0/0
 15082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15087 ;;Total ram usage:        0 bytes
 15088 ;; Hardware stack levels used: 1
 15089 ;; Hardware stack levels required when called: 2
 15090 ;; This function calls:
 15091 ;;		i1_TMR3_Reload
 15092 ;; This function is called by:
 15093 ;;		_INTERRUPT_InterruptManager
 15094 ;; This function uses a non-reentrant model
 15095 ;;
 15096                           
 15097  0A2A                     _TMR3_ISR:	
 15098                           ;psect for function _TMR3_ISR
 15099                           
 15100  0A2A                     i1l4234:	
 15101                           ;incstack = 0
 15102                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 15103                           
 15104                           
 15105                           ;tmr3.c: 132:     PIR3bits.TMR3IF = 0;
 15106  0A2A  0020               	movlb	0	; select bank0
 15107  0A2B  1213               	bcf	19,4	;volatile
 15108  0A2C                     i1l4236:
 15109                           
 15110                           ;tmr3.c: 133:     TMR3_Reload();
 15111  0A2C  318A  225C  318A   	fcall	i1_TMR3_Reload
 15112  0A2F                     i1l971:
 15113  0A2F  0008               	return
 15114  0A30                     __end_of_TMR3_ISR:
 15115                           
 15116                           	psect	text62
 15117  0A5C                     __ptext62:	
 15118 ;; *************** function i1_TMR3_Reload *****************
 15119 ;; Defined at:
 15120 ;;		line 108 in file "tmr3.c"
 15121 ;; Parameters:    Size  Location     Type
 15122 ;;		None
 15123 ;; Auto vars:     Size  Location     Type
 15124 ;;		None
 15125 ;; Return value:  Size  Location     Type
 15126 ;;                  1    wreg      void 
 15127 ;; Registers used:
 15128 ;;		wreg, status,2, status,0, pclath, cstack
 15129 ;; Tracked objects:
 15130 ;;		On entry : 0/0
 15131 ;;		On exit  : 0/0
 15132 ;;		Unchanged: 0/0
 15133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15138 ;;Total ram usage:        0 bytes
 15139 ;; Hardware stack levels used: 1
 15140 ;; Hardware stack levels required when called: 1
 15141 ;; This function calls:
 15142 ;;		i1_TMR3_WriteTimer
 15143 ;; This function is called by:
 15144 ;;		_TMR3_ISR
 15145 ;; This function uses a non-reentrant model
 15146 ;;
 15147                           
 15148  0A5C                     i1_TMR3_Reload:	
 15149                           ;psect for function i1_TMR3_Reload
 15150                           
 15151  0A5C                     i1l4048:	
 15152                           ;incstack = 0
 15153                           ; Regs used in i1_TMR3_Reload: [wreg+status,2+status,0+pclath+cstack]
 15154                           
 15155                           
 15156                           ;tmr3.c: 110:     TMR3_WriteTimer(timer3ReloadVal);
 15157  0A5C  0021               	movlb	1	; select bank1
 15158  0A5D  0827               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
 15159  0A5E  00F1               	movwf	i1TMR3_WriteTimer@timerVal+1
 15160  0A5F  0826               	movf	_timer3ReloadVal^(0+128),w	;volatile
 15161  0A60  00F0               	movwf	i1TMR3_WriteTimer@timerVal
 15162  0A61  318B  2342  318A   	fcall	i1_TMR3_WriteTimer
 15163  0A64                     i1l962:
 15164  0A64  0008               	return
 15165  0A65                     __end_ofi1_TMR3_Reload:
 15166                           
 15167                           	psect	text63
 15168  0B42                     __ptext63:	
 15169 ;; *************** function i1_TMR3_WriteTimer *****************
 15170 ;; Defined at:
 15171 ;;		line 84 in file "tmr3.c"
 15172 ;; Parameters:    Size  Location     Type
 15173 ;;  timerVal        2    0[COMMON] unsigned short 
 15174 ;; Auto vars:     Size  Location     Type
 15175 ;;		None
 15176 ;; Return value:  Size  Location     Type
 15177 ;;                  1    wreg      void 
 15178 ;; Registers used:
 15179 ;;		wreg, status,2
 15180 ;; Tracked objects:
 15181 ;;		On entry : 0/0
 15182 ;;		On exit  : 0/0
 15183 ;;		Unchanged: 0/0
 15184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15188 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15189 ;;Total ram usage:        2 bytes
 15190 ;; Hardware stack levels used: 1
 15191 ;; This function calls:
 15192 ;;		Nothing
 15193 ;; This function is called by:
 15194 ;;		i1_TMR3_Reload
 15195 ;; This function uses a non-reentrant model
 15196 ;;
 15197                           
 15198  0B42                     i1_TMR3_WriteTimer:	
 15199                           ;psect for function i1_TMR3_WriteTimer
 15200                           
 15201  0B42                     i1l3736:	
 15202                           ;incstack = 0
 15203                           ; Regs used in i1_TMR3_WriteTimer: [wreg+status,2]
 15204                           
 15205                           
 15206                           ;tmr3.c: 84: void TMR3_WriteTimer(uint16_t timerVal);tmr3.c: 85: {;tmr3.c: 86:     if (T
      +                          3CONbits.T3SYNC == 1)
 15207  0B42  0028               	movlb	8	; select bank8
 15208  0B43  1D13               	btfss	19,2	;volatile
 15209  0B44  2B46               	goto	u128_21
 15210  0B45  2B47               	goto	u128_20
 15211  0B46                     u128_21:
 15212  0B46  2B4E               	goto	i1l3746
 15213  0B47                     u128_20:
 15214  0B47                     i1l3738:
 15215                           
 15216                           ;tmr3.c: 87:     {;tmr3.c: 89:         T3CONbits.TMR3ON = 0;
 15217  0B47  1013               	bcf	19,0	;volatile
 15218  0B48                     i1l3740:
 15219                           
 15220                           ;tmr3.c: 92:         TMR3H = (uint8_t)(timerVal >> 8);
 15221  0B48  0871               	movf	i1TMR3_WriteTimer@timerVal+1,w
 15222  0B49  0092               	movwf	18	;volatile
 15223  0B4A                     i1l3742:
 15224                           
 15225                           ;tmr3.c: 93:         TMR3L = (uint8_t)timerVal;
 15226  0B4A  0870               	movf	i1TMR3_WriteTimer@timerVal,w
 15227  0B4B  0091               	movwf	17	;volatile
 15228  0B4C                     i1l3744:
 15229                           
 15230                           ;tmr3.c: 96:         T3CONbits.TMR3ON =1;
 15231  0B4C  1413               	bsf	19,0	;volatile
 15232                           
 15233                           ;tmr3.c: 97:     }
 15234  0B4D  2B52               	goto	i1l959
 15235  0B4E                     i1l3746:
 15236                           
 15237                           ;tmr3.c: 99:     {;tmr3.c: 101:         TMR3H = (uint8_t)(timerVal >> 8);
 15238  0B4E  0871               	movf	i1TMR3_WriteTimer@timerVal+1,w
 15239  0B4F  0092               	movwf	18	;volatile
 15240  0B50                     i1l3748:
 15241                           
 15242                           ;tmr3.c: 102:         TMR3L = (uint8_t)timerVal;
 15243  0B50  0870               	movf	i1TMR3_WriteTimer@timerVal,w
 15244  0B51  0091               	movwf	17	;volatile
 15245  0B52                     i1l959:
 15246  0B52  0008               	return
 15247  0B53                     __end_ofi1_TMR3_WriteTimer:
 15248                           
 15249                           	psect	text64
 15250  0AD4                     __ptext64:	
 15251 ;; *************** function _TMR1_ISR *****************
 15252 ;; Defined at:
 15253 ;;		line 111 in file "tmr1.c"
 15254 ;; Parameters:    Size  Location     Type
 15255 ;;		None
 15256 ;; Auto vars:     Size  Location     Type
 15257 ;;		None
 15258 ;; Return value:  Size  Location     Type
 15259 ;;                  1    wreg      void 
 15260 ;; Registers used:
 15261 ;;		wreg, status,2, status,0, pclath, cstack
 15262 ;; Tracked objects:
 15263 ;;		On entry : 0/0
 15264 ;;		On exit  : 0/0
 15265 ;;		Unchanged: 0/0
 15266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15271 ;;Total ram usage:        0 bytes
 15272 ;; Hardware stack levels used: 1
 15273 ;; Hardware stack levels required when called: 1
 15274 ;; This function calls:
 15275 ;;		_TMR1_WriteTimer
 15276 ;; This function is called by:
 15277 ;;		_INTERRUPT_InterruptManager
 15278 ;; This function uses a non-reentrant model
 15279 ;;
 15280                           
 15281  0AD4                     _TMR1_ISR:	
 15282                           ;psect for function _TMR1_ISR
 15283                           
 15284  0AD4                     i1l4174:	
 15285                           ;incstack = 0
 15286                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 15287                           
 15288                           
 15289                           ;tmr1.c: 114:     PIR1bits.TMR1IF = 0;
 15290  0AD4  0020               	movlb	0	; select bank0
 15291  0AD5  1011               	bcf	17,0	;volatile
 15292  0AD6                     i1l4176:
 15293                           
 15294                           ;tmr1.c: 115:     TMR1_WriteTimer(timer1ReloadVal);
 15295  0AD6  0021               	movlb	1	; select bank1
 15296  0AD7  0837               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 15297  0AD8  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 15298  0AD9  0836               	movf	_timer1ReloadVal^(0+128),w	;volatile
 15299  0ADA  00F0               	movwf	TMR1_WriteTimer@timerVal
 15300  0ADB  318B  2331  318A   	fcall	_TMR1_WriteTimer
 15301  0ADE                     i1l490:
 15302  0ADE  0008               	return
 15303  0ADF                     __end_of_TMR1_ISR:
 15304                           
 15305                           	psect	text65
 15306  0B31                     __ptext65:	
 15307 ;; *************** function _TMR1_WriteTimer *****************
 15308 ;; Defined at:
 15309 ;;		line 80 in file "tmr1.c"
 15310 ;; Parameters:    Size  Location     Type
 15311 ;;  timerVal        2    0[COMMON] unsigned short 
 15312 ;; Auto vars:     Size  Location     Type
 15313 ;;		None
 15314 ;; Return value:  Size  Location     Type
 15315 ;;                  1    wreg      void 
 15316 ;; Registers used:
 15317 ;;		wreg, status,2
 15318 ;; Tracked objects:
 15319 ;;		On entry : 0/0
 15320 ;;		On exit  : 0/0
 15321 ;;		Unchanged: 0/0
 15322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15327 ;;Total ram usage:        2 bytes
 15328 ;; Hardware stack levels used: 1
 15329 ;; This function calls:
 15330 ;;		Nothing
 15331 ;; This function is called by:
 15332 ;;		_TMR1_ISR
 15333 ;;		_TMR1_Reload
 15334 ;; This function uses a non-reentrant model
 15335 ;;
 15336                           
 15337  0B31                     _TMR1_WriteTimer:	
 15338                           ;psect for function _TMR1_WriteTimer
 15339                           
 15340  0B31                     i1l3980:	
 15341                           ;incstack = 0
 15342                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 15343                           
 15344                           
 15345                           ;tmr1.c: 80: void TMR1_WriteTimer(uint16_t timerVal);tmr1.c: 81: {;tmr1.c: 82:     if (T
      +                          1CONbits.T1SYNC == 1)
 15346  0B31  0020               	movlb	0	; select bank0
 15347  0B32  1D1B               	btfss	27,2	;volatile
 15348  0B33  2B35               	goto	u129_21
 15349  0B34  2B36               	goto	u129_20
 15350  0B35                     u129_21:
 15351  0B35  2B3D               	goto	i1l3990
 15352  0B36                     u129_20:
 15353  0B36                     i1l3982:
 15354                           
 15355                           ;tmr1.c: 83:     {;tmr1.c: 85:         T1CONbits.TMR1ON = 0;
 15356  0B36  101B               	bcf	27,0	;volatile
 15357  0B37                     i1l3984:
 15358                           
 15359                           ;tmr1.c: 88:         TMR1H = (uint8_t)(timerVal >> 8);
 15360  0B37  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15361  0B38  009A               	movwf	26	;volatile
 15362  0B39                     i1l3986:
 15363                           
 15364                           ;tmr1.c: 89:         TMR1L = (uint8_t)timerVal;
 15365  0B39  0870               	movf	TMR1_WriteTimer@timerVal,w
 15366  0B3A  0099               	movwf	25	;volatile
 15367  0B3B                     i1l3988:
 15368                           
 15369                           ;tmr1.c: 92:         T1CONbits.TMR1ON =1;
 15370  0B3B  141B               	bsf	27,0	;volatile
 15371                           
 15372                           ;tmr1.c: 93:     }
 15373  0B3C  2B41               	goto	i1l484
 15374  0B3D                     i1l3990:
 15375                           
 15376                           ;tmr1.c: 95:     {;tmr1.c: 97:         TMR1H = (uint8_t)(timerVal >> 8);
 15377  0B3D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15378  0B3E  009A               	movwf	26	;volatile
 15379  0B3F                     i1l3992:
 15380                           
 15381                           ;tmr1.c: 98:         TMR1L = (uint8_t)timerVal;
 15382  0B3F  0870               	movf	TMR1_WriteTimer@timerVal,w
 15383  0B40  0099               	movwf	25	;volatile
 15384  0B41                     i1l484:
 15385  0B41  0008               	return
 15386  0B42                     __end_of_TMR1_WriteTimer:
 15387                           
 15388                           	psect	text66
 15389  0B20                     __ptext66:	
 15390 ;; *************** function _TMR0_ISR *****************
 15391 ;; Defined at:
 15392 ;;		line 90 in file "tmr0.c"
 15393 ;; Parameters:    Size  Location     Type
 15394 ;;		None
 15395 ;; Auto vars:     Size  Location     Type
 15396 ;;		None
 15397 ;; Return value:  Size  Location     Type
 15398 ;;                  1    wreg      void 
 15399 ;; Registers used:
 15400 ;;		wreg, status,2, status,0, pclath, cstack
 15401 ;; Tracked objects:
 15402 ;;		On entry : 0/0
 15403 ;;		On exit  : 0/0
 15404 ;;		Unchanged: 0/0
 15405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15408 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15409 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15410 ;;Total ram usage:        1 bytes
 15411 ;; Hardware stack levels used: 1
 15412 ;; Hardware stack levels required when called: 2
 15413 ;; This function calls:
 15414 ;;		_TMR0_CallBack
 15415 ;; This function is called by:
 15416 ;;		_INTERRUPT_InterruptManager
 15417 ;; This function uses a non-reentrant model
 15418 ;;
 15419                           
 15420  0B20                     _TMR0_ISR:	
 15421                           ;psect for function _TMR0_ISR
 15422                           
 15423  0B20                     i1l4148:	
 15424                           ;incstack = 0
 15425                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 15426                           
 15427                           
 15428                           ;tmr0.c: 93:     PIR0bits.TMR0IF = 0;
 15429  0B20  0020               	movlb	0	; select bank0
 15430  0B21  1290               	bcf	16,5	;volatile
 15431  0B22                     i1l4150:
 15432                           
 15433                           ;tmr0.c: 95:     if (++CountCallBack >= 4)
 15434  0B22  3001               	movlw	1
 15435  0B23  00F0               	movwf	??_TMR0_ISR
 15436  0B24  0870               	movf	??_TMR0_ISR,w
 15437  0B25  07FD               	addwf	_CountCallBack,f	;volatile
 15438  0B26  3004               	movlw	4
 15439  0B27  027D               	subwf	_CountCallBack,w	;volatile
 15440  0B28  1C03               	skipc
 15441  0B29  2B2B               	goto	u142_21
 15442  0B2A  2B2C               	goto	u142_20
 15443  0B2B                     u142_21:
 15444  0B2B  2B30               	goto	i1l301
 15445  0B2C                     u142_20:
 15446  0B2C                     i1l4152:
 15447                           
 15448                           ;tmr0.c: 96:     {;tmr0.c: 98:         TMR0_CallBack();
 15449  0B2C  318A  2230  318B   	fcall	_TMR0_CallBack
 15450  0B2F                     i1l4154:
 15451                           
 15452                           ;tmr0.c: 101:         CountCallBack = 0;
 15453  0B2F  01FD               	clrf	_CountCallBack	;volatile
 15454  0B30                     i1l301:
 15455  0B30  0008               	return
 15456  0B31                     __end_of_TMR0_ISR:
 15457                           
 15458                           	psect	text67
 15459  0A30                     __ptext67:	
 15460 ;; *************** function _TMR0_CallBack *****************
 15461 ;; Defined at:
 15462 ;;		line 109 in file "tmr0.c"
 15463 ;; Parameters:    Size  Location     Type
 15464 ;;		None
 15465 ;; Auto vars:     Size  Location     Type
 15466 ;;		None
 15467 ;; Return value:  Size  Location     Type
 15468 ;;                  1    wreg      void 
 15469 ;; Registers used:
 15470 ;;		wreg, status,2, status,0, pclath, cstack
 15471 ;; Tracked objects:
 15472 ;;		On entry : 0/0
 15473 ;;		On exit  : 0/0
 15474 ;;		Unchanged: 0/0
 15475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15480 ;;Total ram usage:        0 bytes
 15481 ;; Hardware stack levels used: 1
 15482 ;; Hardware stack levels required when called: 1
 15483 ;; This function calls:
 15484 ;;		_FRT_IncMicros
 15485 ;;		_FRT_IncMillis
 15486 ;; This function is called by:
 15487 ;;		_TMR0_ISR
 15488 ;; This function uses a non-reentrant model
 15489 ;;
 15490                           
 15491  0A30                     _TMR0_CallBack:	
 15492                           ;psect for function _TMR0_CallBack
 15493                           
 15494  0A30                     i1l3930:	
 15495                           ;incstack = 0
 15496                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 15497                           
 15498                           
 15499                           ;tmr0.c: 111:     FRT_IncMillis();
 15500  0A30  318A  22C0  318A   	fcall	_FRT_IncMillis
 15501                           
 15502                           ;tmr0.c: 112:     FRT_IncMicros();
 15503  0A33  318A  22B6  318A   	fcall	_FRT_IncMicros
 15504  0A36                     i1l304:
 15505  0A36  0008               	return
 15506  0A37                     __end_of_TMR0_CallBack:
 15507                           
 15508                           	psect	text68
 15509  0AC0                     __ptext68:	
 15510 ;; *************** function _FRT_IncMillis *****************
 15511 ;; Defined at:
 15512 ;;		line 38 in file "FRT.c"
 15513 ;; Parameters:    Size  Location     Type
 15514 ;;		None
 15515 ;; Auto vars:     Size  Location     Type
 15516 ;;		None
 15517 ;; Return value:  Size  Location     Type
 15518 ;;                  1    wreg      void 
 15519 ;; Registers used:
 15520 ;;		wreg
 15521 ;; Tracked objects:
 15522 ;;		On entry : 0/0
 15523 ;;		On exit  : 0/0
 15524 ;;		Unchanged: 0/0
 15525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15530 ;;Total ram usage:        0 bytes
 15531 ;; Hardware stack levels used: 1
 15532 ;; This function calls:
 15533 ;;		Nothing
 15534 ;; This function is called by:
 15535 ;;		_TMR0_CallBack
 15536 ;; This function uses a non-reentrant model
 15537 ;;
 15538                           
 15539  0AC0                     _FRT_IncMillis:	
 15540                           ;psect for function _FRT_IncMillis
 15541                           
 15542  0AC0                     i1l3680:	
 15543                           ;incstack = 0
 15544                           ; Regs used in _FRT_IncMillis: [wreg]
 15545                           
 15546                           
 15547                           ;FRT.c: 39:     millis ++;
 15548  0AC0  3001               	movlw	1
 15549  0AC1  0022               	movlb	2	; select bank2
 15550  0AC2  07BC               	addwf	_millis^(0+256),f
 15551  0AC3  3000               	movlw	0
 15552  0AC4  3DBD               	addwfc	(_millis+1)^(0+256),f
 15553  0AC5  3000               	movlw	0
 15554  0AC6  3DBE               	addwfc	(_millis+2)^(0+256),f
 15555  0AC7  3000               	movlw	0
 15556  0AC8  3DBF               	addwfc	(_millis+3)^(0+256),f
 15557  0AC9                     i1l778:
 15558  0AC9  0008               	return
 15559  0ACA                     __end_of_FRT_IncMillis:
 15560                           
 15561                           	psect	text69
 15562  0AB6                     __ptext69:	
 15563 ;; *************** function _FRT_IncMicros *****************
 15564 ;; Defined at:
 15565 ;;		line 45 in file "FRT.c"
 15566 ;; Parameters:    Size  Location     Type
 15567 ;;		None
 15568 ;; Auto vars:     Size  Location     Type
 15569 ;;		None
 15570 ;; Return value:  Size  Location     Type
 15571 ;;                  1    wreg      void 
 15572 ;; Registers used:
 15573 ;;		wreg
 15574 ;; Tracked objects:
 15575 ;;		On entry : 0/0
 15576 ;;		On exit  : 0/0
 15577 ;;		Unchanged: 0/0
 15578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15583 ;;Total ram usage:        0 bytes
 15584 ;; Hardware stack levels used: 1
 15585 ;; This function calls:
 15586 ;;		Nothing
 15587 ;; This function is called by:
 15588 ;;		_TMR0_CallBack
 15589 ;; This function uses a non-reentrant model
 15590 ;;
 15591                           
 15592  0AB6                     _FRT_IncMicros:	
 15593                           ;psect for function _FRT_IncMicros
 15594                           
 15595  0AB6                     i1l3684:	
 15596                           ;incstack = 0
 15597                           ; Regs used in _FRT_IncMicros: [wreg]
 15598                           
 15599                           
 15600                           ;FRT.c: 46:     micros += 1000;
 15601  0AB6  30E8               	movlw	232
 15602  0AB7  0022               	movlb	2	; select bank2
 15603  0AB8  07B8               	addwf	_micros@FRT$F1518^(0+256),f
 15604  0AB9  3003               	movlw	3
 15605  0ABA  3DB9               	addwfc	(_micros@FRT$F1518+1)^(0+256),f
 15606  0ABB  3000               	movlw	0
 15607  0ABC  3DBA               	addwfc	(_micros@FRT$F1518+2)^(0+256),f
 15608  0ABD  3000               	movlw	0
 15609  0ABE  3DBB               	addwfc	(_micros@FRT$F1518+3)^(0+256),f
 15610  0ABF                     i1l781:
 15611  0ABF  0008               	return
 15612  0AC0                     __end_of_FRT_IncMicros:
 15613                           
 15614                           	psect	text70
 15615  0CD6                     __ptext70:	
 15616 ;; *************** function _EUSART_Transmit_ISR *****************
 15617 ;; Defined at:
 15618 ;;		line 181 in file "eusart.c"
 15619 ;; Parameters:    Size  Location     Type
 15620 ;;		None
 15621 ;; Auto vars:     Size  Location     Type
 15622 ;;		None
 15623 ;; Return value:  Size  Location     Type
 15624 ;;                  1    wreg      void 
 15625 ;; Registers used:
 15626 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15627 ;; Tracked objects:
 15628 ;;		On entry : 0/0
 15629 ;;		On exit  : 0/0
 15630 ;;		Unchanged: 0/0
 15631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15636 ;;Total ram usage:        1 bytes
 15637 ;; Hardware stack levels used: 1
 15638 ;; This function calls:
 15639 ;;		Nothing
 15640 ;; This function is called by:
 15641 ;;		_EUSART_Initialize
 15642 ;;		_INTERRUPT_InterruptManager
 15643 ;; This function uses a non-reentrant model
 15644 ;;
 15645                           
 15646  0CD6                     _EUSART_Transmit_ISR:	
 15647                           ;psect for function _EUSART_Transmit_ISR
 15648                           
 15649  0CD6                     i1l4200:	
 15650                           ;incstack = 0
 15651                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 15652                           
 15653  0CD6  3008               	movlw	8
 15654  0CD7  0021               	movlb	1	; select bank1
 15655  0CD8  0254               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 15656  0CD9  1803               	skipnc
 15657  0CDA  2CDC               	goto	u145_21
 15658  0CDB  2CDD               	goto	u145_20
 15659  0CDC                     u145_21:
 15660  0CDC  2CF6               	goto	i1l602
 15661  0CDD                     u145_20:
 15662  0CDD                     i1l4202:
 15663  0CDD  0855               	movf	_eusartTxTail^(0+128),w
 15664  0CDE  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 15665  0CDF  0086               	movwf	6
 15666  0CE0  3001               	movlw	1	; select bank2/3
 15667  0CE1  0087               	movwf	7
 15668  0CE2  0801               	movf	1,w
 15669  0CE3  0023               	movlb	3	; select bank3
 15670  0CE4  009A               	movwf	26	;volatile
 15671  0CE5                     i1l4204:
 15672  0CE5  3001               	movlw	1
 15673  0CE6  00F0               	movwf	??_EUSART_Transmit_ISR
 15674  0CE7  0870               	movf	??_EUSART_Transmit_ISR,w
 15675  0CE8  0021               	movlb	1	; select bank1
 15676  0CE9  07D5               	addwf	_eusartTxTail^(0+128),f	;volatile
 15677  0CEA                     i1l4206:
 15678  0CEA  3008               	movlw	8
 15679  0CEB  0255               	subwf	_eusartTxTail^(0+128),w	;volatile
 15680  0CEC  1C03               	skipc
 15681  0CED  2CEF               	goto	u146_21
 15682  0CEE  2CF0               	goto	u146_20
 15683  0CEF                     u146_21:
 15684  0CEF  2CF1               	goto	i1l4210
 15685  0CF0                     u146_20:
 15686  0CF0                     i1l4208:
 15687  0CF0  01D5               	clrf	_eusartTxTail^(0+128)	;volatile
 15688  0CF1                     i1l4210:
 15689  0CF1  3001               	movlw	1
 15690  0CF2  00F0               	movwf	??_EUSART_Transmit_ISR
 15691  0CF3  0870               	movf	??_EUSART_Transmit_ISR,w
 15692  0CF4  07D4               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 15693  0CF5  2CF7               	goto	i1l605
 15694  0CF6                     i1l602:
 15695  0CF6  1211               	bcf	17,4	;volatile
 15696  0CF7                     i1l605:
 15697  0CF7  0008               	return
 15698  0CF8                     __end_of_EUSART_Transmit_ISR:
 15699                           
 15700                           	psect	text71
 15701  0EF8                     __ptext71:	
 15702 ;; *************** function _EUSART_Receive_ISR *****************
 15703 ;; Defined at:
 15704 ;;		line 202 in file "eusart.c"
 15705 ;; Parameters:    Size  Location     Type
 15706 ;;		None
 15707 ;; Auto vars:     Size  Location     Type
 15708 ;;		None
 15709 ;; Return value:  Size  Location     Type
 15710 ;;                  1    wreg      void 
 15711 ;; Registers used:
 15712 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15713 ;; Tracked objects:
 15714 ;;		On entry : 0/0
 15715 ;;		On exit  : 0/0
 15716 ;;		Unchanged: 0/0
 15717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15722 ;;Total ram usage:        0 bytes
 15723 ;; Hardware stack levels used: 1
 15724 ;; Hardware stack levels required when called: 2
 15725 ;; This function calls:
 15726 ;;		Absolute function
 15727 ;;		_EUSART_DefaultErrorHandler
 15728 ;;		_EUSART_DefaultFramingErrorHandler
 15729 ;;		_EUSART_DefaultOverrunErrorHandler
 15730 ;;		_EUSART_RxDataHandler
 15731 ;; This function is called by:
 15732 ;;		_EUSART_Initialize
 15733 ;;		_INTERRUPT_InterruptManager
 15734 ;; This function uses a non-reentrant model
 15735 ;;
 15736                           
 15737  0EF8                     _EUSART_Receive_ISR:	
 15738                           ;psect for function _EUSART_Receive_ISR
 15739                           
 15740  0EF8                     i1l4212:	
 15741                           ;incstack = 0
 15742                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15743                           
 15744  0EF8  087B               	movf	_eusartRxHead,w	;volatile
 15745  0EF9  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15746  0EFA  0086               	movwf	6
 15747  0EFB  3001               	movlw	1	; select bank2/3
 15748  0EFC  0087               	movwf	7
 15749  0EFD  0181               	clrf	1
 15750  0EFE                     i1l4214:
 15751  0EFE  0023               	movlb	3	; select bank3
 15752  0EFF  1D1D               	btfss	29,2	;volatile
 15753  0F00  2F02               	goto	u147_21
 15754  0F01  2F03               	goto	u147_20
 15755  0F02                     u147_21:
 15756  0F02  2F0F               	goto	i1l4220
 15757  0F03                     u147_20:
 15758  0F03                     i1l4216:
 15759  0F03  087B               	movf	_eusartRxHead,w	;volatile
 15760  0F04  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15761  0F05  0086               	movwf	6
 15762  0F06  3001               	movlw	1	; select bank2/3
 15763  0F07  0087               	movwf	7
 15764  0F08  1481               	bsf	1,1
 15765  0F09                     i1l4218:
 15766  0F09  0021               	movlb	1	; select bank1
 15767  0F0A  0831               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 15768  0F0B  008A               	movwf	10
 15769  0F0C  0830               	movf	_EUSART_FramingErrorHandler^(0+128),w
 15770  0F0D  000A               	callw
 15771  0F0E  318E               	pagesel	$
 15772  0F0F                     i1l4220:
 15773  0F0F  0023               	movlb	3	; select bank3
 15774  0F10  1C9D               	btfss	29,1	;volatile
 15775  0F11  2F13               	goto	u148_21
 15776  0F12  2F14               	goto	u148_20
 15777  0F13                     u148_21:
 15778  0F13  2F20               	goto	i1l4226
 15779  0F14                     u148_20:
 15780  0F14                     i1l4222:
 15781  0F14  087B               	movf	_eusartRxHead,w	;volatile
 15782  0F15  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15783  0F16  0086               	movwf	6
 15784  0F17  3001               	movlw	1	; select bank2/3
 15785  0F18  0087               	movwf	7
 15786  0F19  1501               	bsf	1,2
 15787  0F1A                     i1l4224:
 15788  0F1A  0021               	movlb	1	; select bank1
 15789  0F1B  082F               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 15790  0F1C  008A               	movwf	10
 15791  0F1D  082E               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 15792  0F1E  000A               	callw
 15793  0F1F  318E               	pagesel	$
 15794  0F20                     i1l4226:
 15795  0F20  087B               	movf	_eusartRxHead,w	;volatile
 15796  0F21  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15797  0F22  0086               	movwf	6
 15798  0F23  3001               	movlw	1	; select bank2/3
 15799  0F24  0087               	movwf	7
 15800  0F25  0801               	movf	1,w
 15801  0F26  1903               	btfsc	3,2
 15802  0F27  2F29               	goto	u149_21
 15803  0F28  2F2A               	goto	u149_20
 15804  0F29                     u149_21:
 15805  0F29  2F31               	goto	i1l4230
 15806  0F2A                     u149_20:
 15807  0F2A                     i1l4228:
 15808  0F2A  0021               	movlb	1	; select bank1
 15809  0F2B  082D               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 15810  0F2C  008A               	movwf	10
 15811  0F2D  082C               	movf	_EUSART_ErrorHandler^(0+128),w
 15812  0F2E  000A               	callw
 15813  0F2F  318E               	pagesel	$
 15814  0F30  2F34               	goto	i1l612
 15815  0F31                     i1l4230:
 15816  0F31  318C  2480  318E   	fcall	_EUSART_RxDataHandler
 15817  0F34                     i1l612:
 15818  0F34  0008               	return
 15819  0F35                     __end_of_EUSART_Receive_ISR:
 15820                           
 15821                           	psect	text72
 15822  0A17                     __ptext72:	
 15823 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 15824 ;; Defined at:
 15825 ;;		line 244 in file "eusart.c"
 15826 ;; Parameters:    Size  Location     Type
 15827 ;;		None
 15828 ;; Auto vars:     Size  Location     Type
 15829 ;;		None
 15830 ;; Return value:  Size  Location     Type
 15831 ;;                  1    wreg      void 
 15832 ;; Registers used:
 15833 ;;		None
 15834 ;; Tracked objects:
 15835 ;;		On entry : 0/0
 15836 ;;		On exit  : 0/0
 15837 ;;		Unchanged: 0/0
 15838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15843 ;;Total ram usage:        0 bytes
 15844 ;; Hardware stack levels used: 1
 15845 ;; This function calls:
 15846 ;;		Nothing
 15847 ;; This function is called by:
 15848 ;;		_EUSART_Initialize
 15849 ;;		_EUSART_Receive_ISR
 15850 ;; This function uses a non-reentrant model
 15851 ;;
 15852                           
 15853  0A17                     _EUSART_DefaultOverrunErrorHandler:	
 15854                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 15855                           
 15856  0A17                     i1l3994:	
 15857                           ;incstack = 0
 15858                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 15859                           
 15860  0A17  0023               	movlb	3	; select bank3
 15861  0A18  121D               	bcf	29,4	;volatile
 15862  0A19  161D               	bsf	29,4	;volatile
 15863  0A1A                     i1l622:
 15864  0A1A  0008               	return
 15865  0A1B                     __end_of_EUSART_DefaultOverrunErrorHandler:
 15866                           
 15867                           	psect	text73
 15868  0A09                     __ptext73:	
 15869 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 15870 ;; Defined at:
 15871 ;;		line 240 in file "eusart.c"
 15872 ;; Parameters:    Size  Location     Type
 15873 ;;		None
 15874 ;; Auto vars:     Size  Location     Type
 15875 ;;		None
 15876 ;; Return value:  Size  Location     Type
 15877 ;;                  1    wreg      void 
 15878 ;; Registers used:
 15879 ;;		None
 15880 ;; Tracked objects:
 15881 ;;		On entry : 0/0
 15882 ;;		On exit  : 0/0
 15883 ;;		Unchanged: 0/0
 15884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15889 ;;Total ram usage:        0 bytes
 15890 ;; Hardware stack levels used: 1
 15891 ;; This function calls:
 15892 ;;		Nothing
 15893 ;; This function is called by:
 15894 ;;		_EUSART_Initialize
 15895 ;;		_EUSART_Receive_ISR
 15896 ;; This function uses a non-reentrant model
 15897 ;;
 15898                           
 15899  0A09                     _EUSART_DefaultFramingErrorHandler:	
 15900                           ;psect for function _EUSART_DefaultFramingErrorHandler
 15901                           
 15902  0A09                     i1l619:	
 15903                           ;incstack = 0
 15904                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 15905                           
 15906  0A09  0008               	return
 15907  0A0A                     __end_of_EUSART_DefaultFramingErrorHandler:
 15908                           
 15909                           	psect	text74
 15910  0A13                     __ptext74:	
 15911 ;; *************** function _EUSART_DefaultErrorHandler *****************
 15912 ;; Defined at:
 15913 ;;		line 254 in file "eusart.c"
 15914 ;; Parameters:    Size  Location     Type
 15915 ;;		None
 15916 ;; Auto vars:     Size  Location     Type
 15917 ;;		None
 15918 ;; Return value:  Size  Location     Type
 15919 ;;                  1    wreg      void 
 15920 ;; Registers used:
 15921 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15922 ;; Tracked objects:
 15923 ;;		On entry : 0/0
 15924 ;;		On exit  : 0/0
 15925 ;;		Unchanged: 0/0
 15926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15931 ;;Total ram usage:        0 bytes
 15932 ;; Hardware stack levels used: 1
 15933 ;; Hardware stack levels required when called: 1
 15934 ;; This function calls:
 15935 ;;		_EUSART_RxDataHandler
 15936 ;; This function is called by:
 15937 ;;		_EUSART_Initialize
 15938 ;;		_EUSART_Receive_ISR
 15939 ;; This function uses a non-reentrant model
 15940 ;;
 15941                           
 15942  0A13                     _EUSART_DefaultErrorHandler:	
 15943                           ;psect for function _EUSART_DefaultErrorHandler
 15944                           
 15945  0A13                     i1l3996:	
 15946                           ;incstack = 0
 15947                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 15948                           
 15949  0A13  318C  2480  318A   	fcall	_EUSART_RxDataHandler
 15950  0A16                     i1l625:
 15951  0A16  0008               	return
 15952  0A17                     __end_of_EUSART_DefaultErrorHandler:
 15953                           
 15954                           	psect	text75
 15955  0C80                     __ptext75:	
 15956 ;; *************** function _EUSART_RxDataHandler *****************
 15957 ;; Defined at:
 15958 ;;		line 228 in file "eusart.c"
 15959 ;; Parameters:    Size  Location     Type
 15960 ;;		None
 15961 ;; Auto vars:     Size  Location     Type
 15962 ;;		None
 15963 ;; Return value:  Size  Location     Type
 15964 ;;                  1    wreg      void 
 15965 ;; Registers used:
 15966 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15967 ;; Tracked objects:
 15968 ;;		On entry : 0/0
 15969 ;;		On exit  : 0/0
 15970 ;;		Unchanged: 0/0
 15971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15976 ;;Total ram usage:        1 bytes
 15977 ;; Hardware stack levels used: 1
 15978 ;; This function calls:
 15979 ;;		Nothing
 15980 ;; This function is called by:
 15981 ;;		_EUSART_Receive_ISR
 15982 ;;		_EUSART_DefaultErrorHandler
 15983 ;; This function uses a non-reentrant model
 15984 ;;
 15985                           
 15986  0C80                     _EUSART_RxDataHandler:	
 15987                           ;psect for function _EUSART_RxDataHandler
 15988                           
 15989  0C80                     i1l3692:	
 15990                           ;incstack = 0
 15991                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 15992                           
 15993  0C80  0023               	movlb	3	; select bank3
 15994  0C81  0819               	movf	25,w	;volatile
 15995  0C82  00F0               	movwf	??_EUSART_RxDataHandler
 15996  0C83  087B               	movf	_eusartRxHead,w
 15997  0C84  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 15998  0C85  0086               	movwf	6
 15999  0C86  3001               	movlw	1	; select bank2/3
 16000  0C87  0087               	movwf	7
 16001  0C88  0870               	movf	??_EUSART_RxDataHandler,w
 16002  0C89  0081               	movwf	1
 16003  0C8A                     i1l3694:
 16004  0C8A  3001               	movlw	1
 16005  0C8B  00F0               	movwf	??_EUSART_RxDataHandler
 16006  0C8C  0870               	movf	??_EUSART_RxDataHandler,w
 16007  0C8D  07FB               	addwf	_eusartRxHead,f	;volatile
 16008  0C8E                     i1l3696:
 16009  0C8E  3008               	movlw	8
 16010  0C8F  027B               	subwf	_eusartRxHead,w	;volatile
 16011  0C90  1C03               	skipc
 16012  0C91  2C93               	goto	u122_21
 16013  0C92  2C94               	goto	u122_20
 16014  0C93                     u122_21:
 16015  0C93  2C95               	goto	i1l3700
 16016  0C94                     u122_20:
 16017  0C94                     i1l3698:
 16018  0C94  01FB               	clrf	_eusartRxHead	;volatile
 16019  0C95                     i1l3700:
 16020  0C95  3001               	movlw	1
 16021  0C96  00F0               	movwf	??_EUSART_RxDataHandler
 16022  0C97  0870               	movf	??_EUSART_RxDataHandler,w
 16023  0C98  0021               	movlb	1	; select bank1
 16024  0C99  07D3               	addwf	_eusartRxCount^(0+128),f	;volatile
 16025  0C9A                     i1l616:
 16026  0C9A  0008               	return
 16027  0C9B                     __end_of_EUSART_RxDataHandler:
 16028                           
 16029                           	psect	text76
 16030  0A0A                     __ptext76:	
 16031 ;; *************** function _CCP4_CompareISR *****************
 16032 ;; Defined at:
 16033 ;;		line 60 in file "ccp4.c"
 16034 ;; Parameters:    Size  Location     Type
 16035 ;;		None
 16036 ;; Auto vars:     Size  Location     Type
 16037 ;;		None
 16038 ;; Return value:  Size  Location     Type
 16039 ;;                  1    wreg      void 
 16040 ;; Registers used:
 16041 ;;		None
 16042 ;; Tracked objects:
 16043 ;;		On entry : 0/0
 16044 ;;		On exit  : 0/0
 16045 ;;		Unchanged: 0/0
 16046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16051 ;;Total ram usage:        0 bytes
 16052 ;; Hardware stack levels used: 1
 16053 ;; This function calls:
 16054 ;;		Nothing
 16055 ;; This function is called by:
 16056 ;;		_INTERRUPT_InterruptManager
 16057 ;; This function uses a non-reentrant model
 16058 ;;
 16059                           
 16060  0A0A                     _CCP4_CompareISR:	
 16061                           ;psect for function _CCP4_CompareISR
 16062                           
 16063  0A0A                     i1l4232:	
 16064                           ;incstack = 0
 16065                           ; Regs used in _CCP4_CompareISR: []
 16066                           
 16067                           
 16068                           ;ccp4.c: 63:     PIR4bits.CCP4IF = 0;
 16069  0A0A  0020               	movlb	0	; select bank0
 16070  0A0B  1194               	bcf	20,3	;volatile
 16071  0A0C                     i1l874:
 16072  0A0C  0008               	return
 16073  0A0D                     __end_of_CCP4_CompareISR:
 16074                           
 16075                           	psect	text77
 16076  0BD9                     __ptext77:	
 16077 ;; *************** function _CCP3_CaptureISR *****************
 16078 ;; Defined at:
 16079 ;;		line 78 in file "ccp3.c"
 16080 ;; Parameters:    Size  Location     Type
 16081 ;;		None
 16082 ;; Auto vars:     Size  Location     Type
 16083 ;;  module          2    8[COMMON] struct CCPR3Reg_tag
 16084 ;; Return value:  Size  Location     Type
 16085 ;;                  1    wreg      void 
 16086 ;; Registers used:
 16087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16088 ;; Tracked objects:
 16089 ;;		On entry : 0/0
 16090 ;;		On exit  : 0/0
 16091 ;;		Unchanged: 0/0
 16092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16094 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16096 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16097 ;;Total ram usage:        3 bytes
 16098 ;; Hardware stack levels used: 1
 16099 ;; Hardware stack levels required when called: 2
 16100 ;; This function calls:
 16101 ;;		Absolute function
 16102 ;;		_CCP3_DefaultCallBack
 16103 ;; This function is called by:
 16104 ;;		_INTERRUPT_InterruptManager
 16105 ;; This function uses a non-reentrant model
 16106 ;;
 16107                           
 16108  0BD9                     _CCP3_CaptureISR:	
 16109                           ;psect for function _CCP3_CaptureISR
 16110                           
 16111  0BD9                     i1l4168:	
 16112                           ;incstack = 0
 16113                           ; Regs used in _CCP3_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16114                           
 16115                           
 16116                           ;ccp3.c: 80:     CCP3_PERIOD_REG_T module;;ccp3.c: 83:     PIR4bits.CCP3IF = 0;
 16117  0BD9  0020               	movlb	0	; select bank0
 16118  0BDA  1114               	bcf	20,2	;volatile
 16119  0BDB                     i1l4170:
 16120                           
 16121                           ;ccp3.c: 86:     module.ccpr3l = CCPR3L;
 16122  0BDB  0026               	movlb	6	; select bank6
 16123  0BDC  0811               	movf	17,w	;volatile
 16124  0BDD  00F7               	movwf	??_CCP3_CaptureISR
 16125  0BDE  0877               	movf	??_CCP3_CaptureISR,w
 16126  0BDF  00F8               	movwf	CCP3_CaptureISR@module
 16127                           
 16128                           ;ccp3.c: 87:     module.ccpr3h = CCPR3H;
 16129  0BE0  0812               	movf	18,w	;volatile
 16130  0BE1  00F7               	movwf	??_CCP3_CaptureISR
 16131  0BE2  0877               	movf	??_CCP3_CaptureISR,w
 16132  0BE3  00F9               	movwf	CCP3_CaptureISR@module+1
 16133  0BE4                     i1l4172:
 16134                           
 16135                           ;ccp3.c: 90:     CCP3_CallBack(module.ccpr3_16Bit);
 16136  0BE4  0879               	movf	CCP3_CaptureISR@module+1,w
 16137  0BE5  00F4               	movwf	CCP3_DefaultCallBack@capturedValue+1
 16138  0BE6  0878               	movf	CCP3_CaptureISR@module,w
 16139  0BE7  00F3               	movwf	CCP3_DefaultCallBack@capturedValue
 16140  0BE8  0021               	movlb	1	; select bank1
 16141  0BE9  083F               	movf	(_CCP3_CallBack+1)^(0+128),w
 16142  0BEA  008A               	movwf	10
 16143  0BEB  083E               	movf	_CCP3_CallBack^(0+128),w
 16144  0BEC  000A               	callw
 16145  0BED  318B               	pagesel	$
 16146  0BEE                     i1l448:
 16147  0BEE  0008               	return
 16148  0BEF                     __end_of_CCP3_CaptureISR:
 16149                           
 16150                           	psect	text78
 16151  0EBC                     __ptext78:	
 16152 ;; *************** function _CCP3_DefaultCallBack *****************
 16153 ;; Defined at:
 16154 ;;		line 29 in file "ccp3.c"
 16155 ;; Parameters:    Size  Location     Type
 16156 ;;  capturedValu    2    3[COMMON] unsigned short 
 16157 ;; Auto vars:     Size  Location     Type
 16158 ;;		None
 16159 ;; Return value:  Size  Location     Type
 16160 ;;                  1    wreg      void 
 16161 ;; Registers used:
 16162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16163 ;; Tracked objects:
 16164 ;;		On entry : 0/0
 16165 ;;		On exit  : 0/0
 16166 ;;		Unchanged: 0/0
 16167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16171 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16172 ;;Total ram usage:        4 bytes
 16173 ;; Hardware stack levels used: 1
 16174 ;; Hardware stack levels required when called: 1
 16175 ;; This function calls:
 16176 ;;		_JSN_GetLastTrig
 16177 ;;		_ReadPin
 16178 ;; This function is called by:
 16179 ;;		_CCP3_Initialize
 16180 ;;		_CCP3_CaptureISR
 16181 ;; This function uses a non-reentrant model
 16182 ;;
 16183                           
 16184  0EBC                     _CCP3_DefaultCallBack:	
 16185                           ;psect for function _CCP3_DefaultCallBack
 16186                           
 16187  0EBC                     i1l3964:	
 16188                           ;incstack = 0
 16189                           ; Regs used in _CCP3_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16190                           
 16191                           
 16192                           ;ccp3.c: 29: static void CCP3_DefaultCallBack(uint16_t capturedValue);ccp3.c: 30: {;ccp3
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 16193  0EBC  318A  2224  318E   	fcall	_JSN_GetLastTrig
 16194  0EBF  0871               	movf	?_JSN_GetLastTrig+1,w
 16195  0EC0  0021               	movlb	1	; select bank1
 16196  0EC1  00B9               	movwf	(_lastTrig@ccp3$F979+1)^(0+128)
 16197  0EC2  0870               	movf	?_JSN_GetLastTrig,w
 16198  0EC3  00B8               	movwf	_lastTrig@ccp3$F979^(0+128)
 16199                           
 16200                           ;ccp3.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 16201  0EC4  2EDF               	goto	i1l3974
 16202  0EC5                     i1l3966:
 16203                           
 16204                           ;ccp3.c: 35:             ticksUp = capturedValue;
 16205  0EC5  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 16206  0EC6  0021               	movlb	1	; select bank1
 16207  0EC7  00BD               	movwf	(_ticksUp@ccp3$F976+1)^(0+128)
 16208  0EC8  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 16209  0EC9  00BC               	movwf	_ticksUp@ccp3$F976^(0+128)
 16210                           
 16211                           ;ccp3.c: 36:             break;
 16212  0ECA  2EF7               	goto	i1l442
 16213  0ECB                     i1l3968:
 16214                           
 16215                           ;ccp3.c: 39:             ticksDown = capturedValue;
 16216  0ECB  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 16217  0ECC  0021               	movlb	1	; select bank1
 16218  0ECD  00BB               	movwf	(_ticksDown@ccp3$F977+1)^(0+128)
 16219  0ECE  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 16220  0ECF  00BA               	movwf	_ticksDown@ccp3$F977^(0+128)
 16221  0ED0                     i1l3970:
 16222                           
 16223                           ;ccp3.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 16224  0ED0  083C               	movf	_ticksUp@ccp3$F976^(0+128),w
 16225  0ED1  023A               	subwf	_ticksDown@ccp3$F977^(0+128),w
 16226  0ED2  00F5               	movwf	??_CCP3_DefaultCallBack
 16227  0ED3  083D               	movf	(_ticksUp@ccp3$F976+1)^(0+128),w
 16228  0ED4  3B3B               	subwfb	(_ticksDown@ccp3$F977+1)^(0+128),w
 16229  0ED5  00F6               	movwf	??_CCP3_DefaultCallBack+1
 16230  0ED6  0838               	movf	_lastTrig@ccp3$F979^(0+128),w
 16231  0ED7  0086               	movwf	6
 16232  0ED8  0839               	movf	(_lastTrig@ccp3$F979+1)^(0+128),w
 16233  0ED9  0087               	movwf	7
 16234  0EDA  0875               	movf	??_CCP3_DefaultCallBack,w
 16235  0EDB  3FC0               	movwi [0]fsr1
 16236  0EDC  0876               	movf	??_CCP3_DefaultCallBack+1,w
 16237  0EDD  3FC1               	movwi [1]fsr1
 16238                           
 16239                           ;ccp3.c: 43:             break;
 16240  0EDE  2EF7               	goto	i1l442
 16241  0EDF                     i1l3974:
 16242  0EDF  0838               	movf	_lastTrig@ccp3$F979^(0+128),w
 16243  0EE0  0086               	movwf	6
 16244  0EE1  0839               	movf	(_lastTrig@ccp3$F979+1)^(0+128),w
 16245  0EE2  0087               	movwf	7
 16246  0EE3  3145               	addfsr 1,5
 16247  0EE4  0801               	movf	1,w
 16248  0EE5  3185  2515  318E   	fcall	_ReadPin
 16249  0EE8  00F5               	movwf	??_CCP3_DefaultCallBack
 16250  0EE9  01F6               	clrf	??_CCP3_DefaultCallBack+1
 16251                           
 16252                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16253                           ; Switch size 1, requested type "simple"
 16254                           ; Number of cases is 1, Range of values is 0 to 0
 16255                           ; switch strategies available:
 16256                           ; Name         Instructions Cycles
 16257                           ; simple_byte            4     3 (average)
 16258                           ; direct_byte            8     6 (fixed)
 16259                           ; jumptable            260     6 (fixed)
 16260                           ;	Chosen strategy is simple_byte
 16261  0EEA  0876               	movf	??_CCP3_DefaultCallBack+1,w
 16262  0EEB  3A00               	xorlw	0	; case 0
 16263  0EEC  1903               	skipnz
 16264  0EED  2EEF               	goto	i1l4614
 16265  0EEE  2EF7               	goto	i1l442
 16266  0EEF                     i1l4614:
 16267                           
 16268                           ; Switch size 1, requested type "simple"
 16269                           ; Number of cases is 2, Range of values is 0 to 1
 16270                           ; switch strategies available:
 16271                           ; Name         Instructions Cycles
 16272                           ; simple_byte            7     4 (average)
 16273                           ; direct_byte           10     6 (fixed)
 16274                           ; jumptable            260     6 (fixed)
 16275                           ;	Chosen strategy is simple_byte
 16276  0EEF  0875               	movf	??_CCP3_DefaultCallBack,w
 16277  0EF0  3A00               	xorlw	0	; case 0
 16278  0EF1  1903               	skipnz
 16279  0EF2  2ECB               	goto	i1l3968
 16280  0EF3  3A01               	xorlw	1	; case 1
 16281  0EF4  1903               	skipnz
 16282  0EF5  2EC5               	goto	i1l3966
 16283  0EF6  2EF7               	goto	i1l442
 16284  0EF7                     i1l442:
 16285  0EF7  0008               	return
 16286  0EF8                     __end_of_CCP3_DefaultCallBack:
 16287                           
 16288                           	psect	text79
 16289  0BC3                     __ptext79:	
 16290 ;; *************** function _CCP2_CaptureISR *****************
 16291 ;; Defined at:
 16292 ;;		line 78 in file "ccp2.c"
 16293 ;; Parameters:    Size  Location     Type
 16294 ;;		None
 16295 ;; Auto vars:     Size  Location     Type
 16296 ;;  module          2    8[COMMON] struct CCPR2Reg_tag
 16297 ;; Return value:  Size  Location     Type
 16298 ;;                  1    wreg      void 
 16299 ;; Registers used:
 16300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16301 ;; Tracked objects:
 16302 ;;		On entry : 0/0
 16303 ;;		On exit  : 0/0
 16304 ;;		Unchanged: 0/0
 16305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16309 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16310 ;;Total ram usage:        3 bytes
 16311 ;; Hardware stack levels used: 1
 16312 ;; Hardware stack levels required when called: 2
 16313 ;; This function calls:
 16314 ;;		Absolute function
 16315 ;;		_CCP2_DefaultCallBack
 16316 ;; This function is called by:
 16317 ;;		_INTERRUPT_InterruptManager
 16318 ;; This function uses a non-reentrant model
 16319 ;;
 16320                           
 16321  0BC3                     _CCP2_CaptureISR:	
 16322                           ;psect for function _CCP2_CaptureISR
 16323                           
 16324  0BC3                     i1l4162:	
 16325                           ;incstack = 0
 16326                           ; Regs used in _CCP2_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16327                           
 16328                           
 16329                           ;ccp2.c: 80:     CCP2_PERIOD_REG_T module;;ccp2.c: 83:     PIR4bits.CCP2IF = 0;
 16330  0BC3  0020               	movlb	0	; select bank0
 16331  0BC4  1094               	bcf	20,1	;volatile
 16332  0BC5                     i1l4164:
 16333                           
 16334                           ;ccp2.c: 86:     module.ccpr2l = CCPR2L;
 16335  0BC5  0025               	movlb	5	; select bank5
 16336  0BC6  0815               	movf	21,w	;volatile
 16337  0BC7  00F7               	movwf	??_CCP2_CaptureISR
 16338  0BC8  0877               	movf	??_CCP2_CaptureISR,w
 16339  0BC9  00F8               	movwf	CCP2_CaptureISR@module
 16340                           
 16341                           ;ccp2.c: 87:     module.ccpr2h = CCPR2H;
 16342  0BCA  0816               	movf	22,w	;volatile
 16343  0BCB  00F7               	movwf	??_CCP2_CaptureISR
 16344  0BCC  0877               	movf	??_CCP2_CaptureISR,w
 16345  0BCD  00F9               	movwf	CCP2_CaptureISR@module+1
 16346  0BCE                     i1l4166:
 16347                           
 16348                           ;ccp2.c: 90:     CCP2_CallBack(module.ccpr2_16Bit);
 16349  0BCE  0879               	movf	CCP2_CaptureISR@module+1,w
 16350  0BCF  00F4               	movwf	CCP2_DefaultCallBack@capturedValue+1
 16351  0BD0  0878               	movf	CCP2_CaptureISR@module,w
 16352  0BD1  00F3               	movwf	CCP2_DefaultCallBack@capturedValue
 16353  0BD2  0021               	movlb	1	; select bank1
 16354  0BD3  0847               	movf	(_CCP2_CallBack+1)^(0+128),w
 16355  0BD4  008A               	movwf	10
 16356  0BD5  0846               	movf	_CCP2_CallBack^(0+128),w
 16357  0BD6  000A               	callw
 16358  0BD7  318B               	pagesel	$
 16359  0BD8                     i1l402:
 16360  0BD8  0008               	return
 16361  0BD9                     __end_of_CCP2_CaptureISR:
 16362                           
 16363                           	psect	text80
 16364  0E80                     __ptext80:	
 16365 ;; *************** function _CCP2_DefaultCallBack *****************
 16366 ;; Defined at:
 16367 ;;		line 29 in file "ccp2.c"
 16368 ;; Parameters:    Size  Location     Type
 16369 ;;  capturedValu    2    3[COMMON] unsigned short 
 16370 ;; Auto vars:     Size  Location     Type
 16371 ;;		None
 16372 ;; Return value:  Size  Location     Type
 16373 ;;                  1    wreg      void 
 16374 ;; Registers used:
 16375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16376 ;; Tracked objects:
 16377 ;;		On entry : 0/0
 16378 ;;		On exit  : 0/0
 16379 ;;		Unchanged: 0/0
 16380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16383 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16384 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16385 ;;Total ram usage:        4 bytes
 16386 ;; Hardware stack levels used: 1
 16387 ;; Hardware stack levels required when called: 1
 16388 ;; This function calls:
 16389 ;;		_JSN_GetLastTrig
 16390 ;;		_ReadPin
 16391 ;; This function is called by:
 16392 ;;		_CCP2_Initialize
 16393 ;;		_CCP2_CaptureISR
 16394 ;; This function uses a non-reentrant model
 16395 ;;
 16396                           
 16397  0E80                     _CCP2_DefaultCallBack:	
 16398                           ;psect for function _CCP2_DefaultCallBack
 16399                           
 16400  0E80                     i1l3948:	
 16401                           ;incstack = 0
 16402                           ; Regs used in _CCP2_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16403                           
 16404                           
 16405                           ;ccp2.c: 29: static void CCP2_DefaultCallBack(uint16_t capturedValue);ccp2.c: 30: {;ccp2
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 16406  0E80  318A  2224  318E   	fcall	_JSN_GetLastTrig
 16407  0E83  0871               	movf	?_JSN_GetLastTrig+1,w
 16408  0E84  0021               	movlb	1	; select bank1
 16409  0E85  00C1               	movwf	(_lastTrig@ccp2$F858+1)^(0+128)
 16410  0E86  0870               	movf	?_JSN_GetLastTrig,w
 16411  0E87  00C0               	movwf	_lastTrig@ccp2$F858^(0+128)
 16412                           
 16413                           ;ccp2.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 16414  0E88  2EA3               	goto	i1l3958
 16415  0E89                     i1l3950:
 16416                           
 16417                           ;ccp2.c: 35:             ticksUp = capturedValue;
 16418  0E89  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 16419  0E8A  0021               	movlb	1	; select bank1
 16420  0E8B  00C5               	movwf	(_ticksUp@ccp2$F855+1)^(0+128)
 16421  0E8C  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 16422  0E8D  00C4               	movwf	_ticksUp@ccp2$F855^(0+128)
 16423                           
 16424                           ;ccp2.c: 36:             break;
 16425  0E8E  2EBB               	goto	i1l396
 16426  0E8F                     i1l3952:
 16427                           
 16428                           ;ccp2.c: 39:             ticksDown = capturedValue;
 16429  0E8F  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 16430  0E90  0021               	movlb	1	; select bank1
 16431  0E91  00C3               	movwf	(_ticksDown@ccp2$F856+1)^(0+128)
 16432  0E92  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 16433  0E93  00C2               	movwf	_ticksDown@ccp2$F856^(0+128)
 16434  0E94                     i1l3954:
 16435                           
 16436                           ;ccp2.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 16437  0E94  0844               	movf	_ticksUp@ccp2$F855^(0+128),w
 16438  0E95  0242               	subwf	_ticksDown@ccp2$F856^(0+128),w
 16439  0E96  00F5               	movwf	??_CCP2_DefaultCallBack
 16440  0E97  0845               	movf	(_ticksUp@ccp2$F855+1)^(0+128),w
 16441  0E98  3B43               	subwfb	(_ticksDown@ccp2$F856+1)^(0+128),w
 16442  0E99  00F6               	movwf	??_CCP2_DefaultCallBack+1
 16443  0E9A  0840               	movf	_lastTrig@ccp2$F858^(0+128),w
 16444  0E9B  0086               	movwf	6
 16445  0E9C  0841               	movf	(_lastTrig@ccp2$F858+1)^(0+128),w
 16446  0E9D  0087               	movwf	7
 16447  0E9E  0875               	movf	??_CCP2_DefaultCallBack,w
 16448  0E9F  3FC0               	movwi [0]fsr1
 16449  0EA0  0876               	movf	??_CCP2_DefaultCallBack+1,w
 16450  0EA1  3FC1               	movwi [1]fsr1
 16451                           
 16452                           ;ccp2.c: 43:             break;
 16453  0EA2  2EBB               	goto	i1l396
 16454  0EA3                     i1l3958:
 16455  0EA3  0840               	movf	_lastTrig@ccp2$F858^(0+128),w
 16456  0EA4  0086               	movwf	6
 16457  0EA5  0841               	movf	(_lastTrig@ccp2$F858+1)^(0+128),w
 16458  0EA6  0087               	movwf	7
 16459  0EA7  3145               	addfsr 1,5
 16460  0EA8  0801               	movf	1,w
 16461  0EA9  3185  2515  318E   	fcall	_ReadPin
 16462  0EAC  00F5               	movwf	??_CCP2_DefaultCallBack
 16463  0EAD  01F6               	clrf	??_CCP2_DefaultCallBack+1
 16464                           
 16465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16466                           ; Switch size 1, requested type "simple"
 16467                           ; Number of cases is 1, Range of values is 0 to 0
 16468                           ; switch strategies available:
 16469                           ; Name         Instructions Cycles
 16470                           ; simple_byte            4     3 (average)
 16471                           ; direct_byte            8     6 (fixed)
 16472                           ; jumptable            260     6 (fixed)
 16473                           ;	Chosen strategy is simple_byte
 16474  0EAE  0876               	movf	??_CCP2_DefaultCallBack+1,w
 16475  0EAF  3A00               	xorlw	0	; case 0
 16476  0EB0  1903               	skipnz
 16477  0EB1  2EB3               	goto	i1l4616
 16478  0EB2  2EBB               	goto	i1l396
 16479  0EB3                     i1l4616:
 16480                           
 16481                           ; Switch size 1, requested type "simple"
 16482                           ; Number of cases is 2, Range of values is 0 to 1
 16483                           ; switch strategies available:
 16484                           ; Name         Instructions Cycles
 16485                           ; simple_byte            7     4 (average)
 16486                           ; direct_byte           10     6 (fixed)
 16487                           ; jumptable            260     6 (fixed)
 16488                           ;	Chosen strategy is simple_byte
 16489  0EB3  0875               	movf	??_CCP2_DefaultCallBack,w
 16490  0EB4  3A00               	xorlw	0	; case 0
 16491  0EB5  1903               	skipnz
 16492  0EB6  2E8F               	goto	i1l3952
 16493  0EB7  3A01               	xorlw	1	; case 1
 16494  0EB8  1903               	skipnz
 16495  0EB9  2E89               	goto	i1l3950
 16496  0EBA  2EBB               	goto	i1l396
 16497  0EBB                     i1l396:
 16498  0EBB  0008               	return
 16499  0EBC                     __end_of_CCP2_DefaultCallBack:
 16500                           
 16501                           	psect	text81
 16502  0BAD                     __ptext81:	
 16503 ;; *************** function _CCP1_CaptureISR *****************
 16504 ;; Defined at:
 16505 ;;		line 78 in file "ccp1.c"
 16506 ;; Parameters:    Size  Location     Type
 16507 ;;		None
 16508 ;; Auto vars:     Size  Location     Type
 16509 ;;  module          2    8[COMMON] struct CCPR1Reg_tag
 16510 ;; Return value:  Size  Location     Type
 16511 ;;                  1    wreg      void 
 16512 ;; Registers used:
 16513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16514 ;; Tracked objects:
 16515 ;;		On entry : 0/0
 16516 ;;		On exit  : 0/0
 16517 ;;		Unchanged: 0/0
 16518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16522 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16523 ;;Total ram usage:        3 bytes
 16524 ;; Hardware stack levels used: 1
 16525 ;; Hardware stack levels required when called: 2
 16526 ;; This function calls:
 16527 ;;		Absolute function
 16528 ;;		_CCP1_DefaultCallBack
 16529 ;; This function is called by:
 16530 ;;		_INTERRUPT_InterruptManager
 16531 ;; This function uses a non-reentrant model
 16532 ;;
 16533                           
 16534  0BAD                     _CCP1_CaptureISR:	
 16535                           ;psect for function _CCP1_CaptureISR
 16536                           
 16537  0BAD                     i1l4156:	
 16538                           ;incstack = 0
 16539                           ; Regs used in _CCP1_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16540                           
 16541                           
 16542                           ;ccp1.c: 80:     CCP1_PERIOD_REG_T module;;ccp1.c: 83:     PIR4bits.CCP1IF = 0;
 16543  0BAD  0020               	movlb	0	; select bank0
 16544  0BAE  1014               	bcf	20,0	;volatile
 16545  0BAF                     i1l4158:
 16546                           
 16547                           ;ccp1.c: 86:     module.ccpr1l = CCPR1L;
 16548  0BAF  0025               	movlb	5	; select bank5
 16549  0BB0  0811               	movf	17,w	;volatile
 16550  0BB1  00F7               	movwf	??_CCP1_CaptureISR
 16551  0BB2  0877               	movf	??_CCP1_CaptureISR,w
 16552  0BB3  00F8               	movwf	CCP1_CaptureISR@module
 16553                           
 16554                           ;ccp1.c: 87:     module.ccpr1h = CCPR1H;
 16555  0BB4  0812               	movf	18,w	;volatile
 16556  0BB5  00F7               	movwf	??_CCP1_CaptureISR
 16557  0BB6  0877               	movf	??_CCP1_CaptureISR,w
 16558  0BB7  00F9               	movwf	CCP1_CaptureISR@module+1
 16559  0BB8                     i1l4160:
 16560                           
 16561                           ;ccp1.c: 90:     CCP1_CallBack(module.ccpr1_16Bit);
 16562  0BB8  0879               	movf	CCP1_CaptureISR@module+1,w
 16563  0BB9  00F4               	movwf	CCP1_DefaultCallBack@capturedValue+1
 16564  0BBA  0878               	movf	CCP1_CaptureISR@module,w
 16565  0BBB  00F3               	movwf	CCP1_DefaultCallBack@capturedValue
 16566  0BBC  0021               	movlb	1	; select bank1
 16567  0BBD  084F               	movf	(_CCP1_CallBack+1)^(0+128),w
 16568  0BBE  008A               	movwf	10
 16569  0BBF  084E               	movf	_CCP1_CallBack^(0+128),w
 16570  0BC0  000A               	callw
 16571  0BC1  318B               	pagesel	$
 16572  0BC2                     i1l356:
 16573  0BC2  0008               	return
 16574  0BC3                     __end_of_CCP1_CaptureISR:
 16575                           
 16576                           	psect	text82
 16577  0E44                     __ptext82:	
 16578 ;; *************** function _CCP1_DefaultCallBack *****************
 16579 ;; Defined at:
 16580 ;;		line 29 in file "ccp1.c"
 16581 ;; Parameters:    Size  Location     Type
 16582 ;;  capturedValu    2    3[COMMON] unsigned short 
 16583 ;; Auto vars:     Size  Location     Type
 16584 ;;		None
 16585 ;; Return value:  Size  Location     Type
 16586 ;;                  1    wreg      void 
 16587 ;; Registers used:
 16588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16589 ;; Tracked objects:
 16590 ;;		On entry : 0/0
 16591 ;;		On exit  : 0/0
 16592 ;;		Unchanged: 0/0
 16593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16596 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16597 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16598 ;;Total ram usage:        4 bytes
 16599 ;; Hardware stack levels used: 1
 16600 ;; Hardware stack levels required when called: 1
 16601 ;; This function calls:
 16602 ;;		_JSN_GetLastTrig
 16603 ;;		_ReadPin
 16604 ;; This function is called by:
 16605 ;;		_CCP1_Initialize
 16606 ;;		_CCP1_CaptureISR
 16607 ;; This function uses a non-reentrant model
 16608 ;;
 16609                           
 16610  0E44                     _CCP1_DefaultCallBack:	
 16611                           ;psect for function _CCP1_DefaultCallBack
 16612                           
 16613  0E44                     i1l3932:	
 16614                           ;incstack = 0
 16615                           ; Regs used in _CCP1_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16616                           
 16617                           
 16618                           ;ccp1.c: 29: static void CCP1_DefaultCallBack(uint16_t capturedValue);ccp1.c: 30: {;ccp1
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 16619  0E44  318A  2224  318E   	fcall	_JSN_GetLastTrig
 16620  0E47  0871               	movf	?_JSN_GetLastTrig+1,w
 16621  0E48  0021               	movlb	1	; select bank1
 16622  0E49  00C9               	movwf	(_lastTrig@ccp1$F716+1)^(0+128)
 16623  0E4A  0870               	movf	?_JSN_GetLastTrig,w
 16624  0E4B  00C8               	movwf	_lastTrig@ccp1$F716^(0+128)
 16625                           
 16626                           ;ccp1.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 16627  0E4C  2E67               	goto	i1l3942
 16628  0E4D                     i1l3934:
 16629                           
 16630                           ;ccp1.c: 35:             ticksUp = capturedValue;
 16631  0E4D  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 16632  0E4E  0021               	movlb	1	; select bank1
 16633  0E4F  00CD               	movwf	(_ticksUp+1)^(0+128)
 16634  0E50  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 16635  0E51  00CC               	movwf	_ticksUp^(0+128)
 16636                           
 16637                           ;ccp1.c: 36:             break;
 16638  0E52  2E7F               	goto	i1l350
 16639  0E53                     i1l3936:
 16640                           
 16641                           ;ccp1.c: 39:             ticksDown = capturedValue;
 16642  0E53  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 16643  0E54  0021               	movlb	1	; select bank1
 16644  0E55  00CB               	movwf	(_ticksDown+1)^(0+128)
 16645  0E56  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 16646  0E57  00CA               	movwf	_ticksDown^(0+128)
 16647  0E58                     i1l3938:
 16648                           
 16649                           ;ccp1.c: 42:             lastTrig->echoHighTime = (ticksDown - ticksUp);
 16650  0E58  084C               	movf	_ticksUp^(0+128),w
 16651  0E59  024A               	subwf	_ticksDown^(0+128),w
 16652  0E5A  00F5               	movwf	??_CCP1_DefaultCallBack
 16653  0E5B  084D               	movf	(_ticksUp+1)^(0+128),w
 16654  0E5C  3B4B               	subwfb	(_ticksDown+1)^(0+128),w
 16655  0E5D  00F6               	movwf	??_CCP1_DefaultCallBack+1
 16656  0E5E  0848               	movf	_lastTrig@ccp1$F716^(0+128),w
 16657  0E5F  0086               	movwf	6
 16658  0E60  0849               	movf	(_lastTrig@ccp1$F716+1)^(0+128),w
 16659  0E61  0087               	movwf	7
 16660  0E62  0875               	movf	??_CCP1_DefaultCallBack,w
 16661  0E63  3FC0               	movwi [0]fsr1
 16662  0E64  0876               	movf	??_CCP1_DefaultCallBack+1,w
 16663  0E65  3FC1               	movwi [1]fsr1
 16664                           
 16665                           ;ccp1.c: 43:             break;
 16666  0E66  2E7F               	goto	i1l350
 16667  0E67                     i1l3942:
 16668  0E67  0848               	movf	_lastTrig@ccp1$F716^(0+128),w
 16669  0E68  0086               	movwf	6
 16670  0E69  0849               	movf	(_lastTrig@ccp1$F716+1)^(0+128),w
 16671  0E6A  0087               	movwf	7
 16672  0E6B  3145               	addfsr 1,5
 16673  0E6C  0801               	movf	1,w
 16674  0E6D  3185  2515  318E   	fcall	_ReadPin
 16675  0E70  00F5               	movwf	??_CCP1_DefaultCallBack
 16676  0E71  01F6               	clrf	??_CCP1_DefaultCallBack+1
 16677                           
 16678                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16679                           ; Switch size 1, requested type "simple"
 16680                           ; Number of cases is 1, Range of values is 0 to 0
 16681                           ; switch strategies available:
 16682                           ; Name         Instructions Cycles
 16683                           ; simple_byte            4     3 (average)
 16684                           ; direct_byte            8     6 (fixed)
 16685                           ; jumptable            260     6 (fixed)
 16686                           ;	Chosen strategy is simple_byte
 16687  0E72  0876               	movf	??_CCP1_DefaultCallBack+1,w
 16688  0E73  3A00               	xorlw	0	; case 0
 16689  0E74  1903               	skipnz
 16690  0E75  2E77               	goto	i1l4618
 16691  0E76  2E7F               	goto	i1l350
 16692  0E77                     i1l4618:
 16693                           
 16694                           ; Switch size 1, requested type "simple"
 16695                           ; Number of cases is 2, Range of values is 0 to 1
 16696                           ; switch strategies available:
 16697                           ; Name         Instructions Cycles
 16698                           ; simple_byte            7     4 (average)
 16699                           ; direct_byte           10     6 (fixed)
 16700                           ; jumptable            260     6 (fixed)
 16701                           ;	Chosen strategy is simple_byte
 16702  0E77  0875               	movf	??_CCP1_DefaultCallBack,w
 16703  0E78  3A00               	xorlw	0	; case 0
 16704  0E79  1903               	skipnz
 16705  0E7A  2E53               	goto	i1l3936
 16706  0E7B  3A01               	xorlw	1	; case 1
 16707  0E7C  1903               	skipnz
 16708  0E7D  2E4D               	goto	i1l3934
 16709  0E7E  2E7F               	goto	i1l350
 16710  0E7F                     i1l350:
 16711  0E7F  0008               	return
 16712  0E80                     __end_of_CCP1_DefaultCallBack:
 16713                           
 16714                           	psect	text83
 16715  0515                     __ptext83:	
 16716 ;; *************** function _ReadPin *****************
 16717 ;; Defined at:
 16718 ;;		line 103 in file "PIC16Xpress_DevBoard.c"
 16719 ;; Parameters:    Size  Location     Type
 16720 ;;  pin             1    wreg     enum E7144
 16721 ;; Auto vars:     Size  Location     Type
 16722 ;;  pin             1    2[COMMON] enum E7144
 16723 ;; Return value:  Size  Location     Type
 16724 ;;                  1    wreg      unsigned char 
 16725 ;; Registers used:
 16726 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 16727 ;; Tracked objects:
 16728 ;;		On entry : 0/0
 16729 ;;		On exit  : 0/0
 16730 ;;		Unchanged: 0/0
 16731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16734 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16735 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16736 ;;Total ram usage:        3 bytes
 16737 ;; Hardware stack levels used: 1
 16738 ;; This function calls:
 16739 ;;		Nothing
 16740 ;; This function is called by:
 16741 ;;		_CCP1_DefaultCallBack
 16742 ;;		_CCP2_DefaultCallBack
 16743 ;;		_CCP3_DefaultCallBack
 16744 ;; This function uses a non-reentrant model
 16745 ;;
 16746                           
 16747  0515                     _ReadPin:	
 16748                           ;psect for function _ReadPin
 16749                           
 16750                           
 16751                           ;incstack = 0
 16752                           ; Regs used in _ReadPin: [wreg-fsr0h+status,2+status,0]
 16753                           ;ReadPin@pin stored from wreg
 16754  0515  00F2               	movwf	ReadPin@pin
 16755  0516                     i1l3394:
 16756                           
 16757                           ;PIC16Xpress_DevBoard.c: 104:     switch(pin) {
 16758  0516  2D6B               	goto	i1l3474
 16759  0517                     i1l3396:
 16760                           
 16761                           ;PIC16Xpress_DevBoard.c: 106:             return PORTAbits.RA5;
 16762  0517  0020               	movlb	0	; select bank0
 16763  0518  0E0C               	swapf	12,w	;volatile
 16764  0519  0C89               	rrf	9,f
 16765  051A  3901               	andlw	1
 16766  051B  2DAB               	goto	i1l139
 16767  051C                     i1l3400:
 16768                           
 16769                           ;PIC16Xpress_DevBoard.c: 108:             return PORTAbits.RA4;
 16770  051C  0020               	movlb	0	; select bank0
 16771  051D  0E0C               	swapf	12,w	;volatile
 16772  051E  3901               	andlw	1
 16773  051F  2DAB               	goto	i1l139
 16774  0520                     i1l3404:
 16775                           
 16776                           ;PIC16Xpress_DevBoard.c: 110:             return 0xFF;
 16777  0520  30FF               	movlw	255
 16778  0521  2DAB               	goto	i1l139
 16779  0522                     i1l3408:
 16780                           
 16781                           ;PIC16Xpress_DevBoard.c: 112:             return PORTCbits.RC5;
 16782  0522  0020               	movlb	0	; select bank0
 16783  0523  0E0E               	swapf	14,w	;volatile
 16784  0524  0C89               	rrf	9,f
 16785  0525  3901               	andlw	1
 16786  0526  2DAB               	goto	i1l139
 16787  0527                     i1l3412:
 16788                           
 16789                           ;PIC16Xpress_DevBoard.c: 114:             return PORTCbits.RC4;
 16790  0527  0020               	movlb	0	; select bank0
 16791  0528  0E0E               	swapf	14,w	;volatile
 16792  0529  3901               	andlw	1
 16793  052A  2DAB               	goto	i1l139
 16794  052B                     i1l3416:
 16795                           
 16796                           ;PIC16Xpress_DevBoard.c: 116:             return PORTCbits.RC3;
 16797  052B  0020               	movlb	0	; select bank0
 16798  052C  0C0E               	rrf	14,w	;volatile
 16799  052D  00F0               	movwf	??_ReadPin
 16800  052E  0CF0               	rrf	??_ReadPin,f
 16801  052F  0C70               	rrf	??_ReadPin,w
 16802  0530  3901               	andlw	1
 16803  0531  2DAB               	goto	i1l139
 16804  0532                     i1l3420:
 16805                           
 16806                           ;PIC16Xpress_DevBoard.c: 118:             return PORTCbits.RC6;
 16807  0532  0020               	movlb	0	; select bank0
 16808  0533  0E0E               	swapf	14,w	;volatile
 16809  0534  0C89               	rrf	9,f
 16810  0535  0C89               	rrf	9,f
 16811  0536  3901               	andlw	1
 16812  0537  2DAB               	goto	i1l139
 16813  0538                     i1l3424:
 16814                           
 16815                           ;PIC16Xpress_DevBoard.c: 120:             return PORTCbits.RC7;
 16816  0538  0020               	movlb	0	; select bank0
 16817  0539  0D0E               	rlf	14,w	;volatile
 16818  053A  0D0E               	rlf	14,w	;volatile
 16819  053B  3901               	andlw	1
 16820  053C  2DAB               	goto	i1l139
 16821  053D                     i1l3428:
 16822                           
 16823                           ;PIC16Xpress_DevBoard.c: 122:             return PORTBbits.RB7;
 16824  053D  0020               	movlb	0	; select bank0
 16825  053E  0D0D               	rlf	13,w	;volatile
 16826  053F  0D0D               	rlf	13,w	;volatile
 16827  0540  3901               	andlw	1
 16828  0541  2DAB               	goto	i1l139
 16829  0542                     i1l3432:
 16830                           
 16831                           ;PIC16Xpress_DevBoard.c: 124:             return PORTAbits.RA0;
 16832  0542  0020               	movlb	0	; select bank0
 16833  0543  080C               	movf	12,w	;volatile
 16834  0544  3901               	andlw	1
 16835  0545  2DAB               	goto	i1l139
 16836  0546                     i1l3436:
 16837                           
 16838                           ;PIC16Xpress_DevBoard.c: 126:             return PORTAbits.RA1;
 16839  0546  0020               	movlb	0	; select bank0
 16840  0547  0C0C               	rrf	12,w	;volatile
 16841  0548  3901               	andlw	1
 16842  0549  2DAB               	goto	i1l139
 16843  054A                     i1l3440:
 16844                           
 16845                           ;PIC16Xpress_DevBoard.c: 128:             return PORTAbits.RA2;
 16846  054A  0020               	movlb	0	; select bank0
 16847  054B  0C0C               	rrf	12,w	;volatile
 16848  054C  0C89               	rrf	9,f
 16849  054D  3901               	andlw	1
 16850  054E  2DAB               	goto	i1l139
 16851  054F                     i1l3444:
 16852                           
 16853                           ;PIC16Xpress_DevBoard.c: 130:             return PORTCbits.RC0;
 16854  054F  0020               	movlb	0	; select bank0
 16855  0550  080E               	movf	14,w	;volatile
 16856  0551  3901               	andlw	1
 16857  0552  2DAB               	goto	i1l139
 16858  0553                     i1l3448:
 16859                           
 16860                           ;PIC16Xpress_DevBoard.c: 132:             return PORTCbits.RC1;
 16861  0553  0020               	movlb	0	; select bank0
 16862  0554  0C0E               	rrf	14,w	;volatile
 16863  0555  3901               	andlw	1
 16864  0556  2DAB               	goto	i1l139
 16865  0557                     i1l3452:
 16866                           
 16867                           ;PIC16Xpress_DevBoard.c: 134:             return PORTCbits.RC2;
 16868  0557  0020               	movlb	0	; select bank0
 16869  0558  0C0E               	rrf	14,w	;volatile
 16870  0559  0C89               	rrf	9,f
 16871  055A  3901               	andlw	1
 16872  055B  2DAB               	goto	i1l139
 16873  055C                     i1l3456:
 16874                           
 16875                           ;PIC16Xpress_DevBoard.c: 136:             return PORTBbits.RB4;
 16876  055C  0020               	movlb	0	; select bank0
 16877  055D  0E0D               	swapf	13,w	;volatile
 16878  055E  3901               	andlw	1
 16879  055F  2DAB               	goto	i1l139
 16880  0560                     i1l3460:
 16881                           
 16882                           ;PIC16Xpress_DevBoard.c: 138:             return PORTBbits.RB5;
 16883  0560  0020               	movlb	0	; select bank0
 16884  0561  0E0D               	swapf	13,w	;volatile
 16885  0562  0C89               	rrf	9,f
 16886  0563  3901               	andlw	1
 16887  0564  2DAB               	goto	i1l139
 16888  0565                     i1l3464:
 16889                           
 16890                           ;PIC16Xpress_DevBoard.c: 140:             return PORTBbits.RB6;
 16891  0565  0020               	movlb	0	; select bank0
 16892  0566  0E0D               	swapf	13,w	;volatile
 16893  0567  0C89               	rrf	9,f
 16894  0568  0C89               	rrf	9,f
 16895  0569  3901               	andlw	1
 16896  056A  2DAB               	goto	i1l139
 16897  056B                     i1l3474:
 16898  056B  0872               	movf	ReadPin@pin,w
 16899  056C  00F0               	movwf	??_ReadPin
 16900  056D  01F1               	clrf	??_ReadPin+1
 16901                           
 16902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16903                           ; Switch size 1, requested type "simple"
 16904                           ; Number of cases is 1, Range of values is 0 to 0
 16905                           ; switch strategies available:
 16906                           ; Name         Instructions Cycles
 16907                           ; simple_byte            4     3 (average)
 16908                           ; direct_byte            8     6 (fixed)
 16909                           ; jumptable            260     6 (fixed)
 16910                           ;	Chosen strategy is simple_byte
 16911  056E  0871               	movf	??_ReadPin+1,w
 16912  056F  3A00               	xorlw	0	; case 0
 16913  0570  1903               	skipnz
 16914  0571  2D73               	goto	i1l4620
 16915  0572  2D20               	goto	i1l3404
 16916  0573                     i1l4620:
 16917                           
 16918                           ; Switch size 1, requested type "simple"
 16919                           ; Number of cases is 18, Range of values is 0 to 17
 16920                           ; switch strategies available:
 16921                           ; Name         Instructions Cycles
 16922                           ; direct_byte           42     6 (fixed)
 16923                           ; simple_byte           55    28 (average)
 16924                           ; jumptable            260     6 (fixed)
 16925                           ;	Chosen strategy is simple_byte
 16926  0573  0870               	movf	??_ReadPin,w
 16927  0574  3A00               	xorlw	0	; case 0
 16928  0575  1903               	skipnz
 16929  0576  2D17               	goto	i1l3396
 16930  0577  3A01               	xorlw	1	; case 1
 16931  0578  1903               	skipnz
 16932  0579  2D1C               	goto	i1l3400
 16933  057A  3A03               	xorlw	3	; case 2
 16934  057B  1903               	skipnz
 16935  057C  2D20               	goto	i1l3404
 16936  057D  3A01               	xorlw	1	; case 3
 16937  057E  1903               	skipnz
 16938  057F  2D22               	goto	i1l3408
 16939  0580  3A07               	xorlw	7	; case 4
 16940  0581  1903               	skipnz
 16941  0582  2D27               	goto	i1l3412
 16942  0583  3A01               	xorlw	1	; case 5
 16943  0584  1903               	skipnz
 16944  0585  2D2B               	goto	i1l3416
 16945  0586  3A03               	xorlw	3	; case 6
 16946  0587  1903               	skipnz
 16947  0588  2D32               	goto	i1l3420
 16948  0589  3A01               	xorlw	1	; case 7
 16949  058A  1903               	skipnz
 16950  058B  2D38               	goto	i1l3424
 16951  058C  3A0F               	xorlw	15	; case 8
 16952  058D  1903               	skipnz
 16953  058E  2D3D               	goto	i1l3428
 16954  058F  3A01               	xorlw	1	; case 9
 16955  0590  1903               	skipnz
 16956  0591  2D42               	goto	i1l3432
 16957  0592  3A03               	xorlw	3	; case 10
 16958  0593  1903               	skipnz
 16959  0594  2D46               	goto	i1l3436
 16960  0595  3A01               	xorlw	1	; case 11
 16961  0596  1903               	skipnz
 16962  0597  2D4A               	goto	i1l3440
 16963  0598  3A07               	xorlw	7	; case 12
 16964  0599  1903               	skipnz
 16965  059A  2D4F               	goto	i1l3444
 16966  059B  3A01               	xorlw	1	; case 13
 16967  059C  1903               	skipnz
 16968  059D  2D53               	goto	i1l3448
 16969  059E  3A03               	xorlw	3	; case 14
 16970  059F  1903               	skipnz
 16971  05A0  2D57               	goto	i1l3452
 16972  05A1  3A01               	xorlw	1	; case 15
 16973  05A2  1903               	skipnz
 16974  05A3  2D5C               	goto	i1l3456
 16975  05A4  3A1F               	xorlw	31	; case 16
 16976  05A5  1903               	skipnz
 16977  05A6  2D60               	goto	i1l3460
 16978  05A7  3A01               	xorlw	1	; case 17
 16979  05A8  1903               	skipnz
 16980  05A9  2D65               	goto	i1l3464
 16981  05AA  2D20               	goto	i1l3404
 16982  05AB                     i1l139:
 16983  05AB  0008               	return
 16984  05AC                     __end_of_ReadPin:
 16985                           
 16986                           	psect	text84
 16987  0A24                     __ptext84:	
 16988 ;; *************** function _JSN_GetLastTrig *****************
 16989 ;; Defined at:
 16990 ;;		line 118 in file "JSN_Sensor.c"
 16991 ;; Parameters:    Size  Location     Type
 16992 ;;		None
 16993 ;; Auto vars:     Size  Location     Type
 16994 ;;		None
 16995 ;; Return value:  Size  Location     Type
 16996 ;;                  2    0[COMMON] PTR struct .
 16997 ;; Registers used:
 16998 ;;		wreg
 16999 ;; Tracked objects:
 17000 ;;		On entry : 0/0
 17001 ;;		On exit  : 0/0
 17002 ;;		Unchanged: 0/0
 17003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17007 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17008 ;;Total ram usage:        2 bytes
 17009 ;; Hardware stack levels used: 1
 17010 ;; This function calls:
 17011 ;;		Nothing
 17012 ;; This function is called by:
 17013 ;;		_CCP1_DefaultCallBack
 17014 ;;		_CCP2_DefaultCallBack
 17015 ;;		_CCP3_DefaultCallBack
 17016 ;; This function uses a non-reentrant model
 17017 ;;
 17018                           
 17019  0A24                     _JSN_GetLastTrig:	
 17020                           ;psect for function _JSN_GetLastTrig
 17021                           
 17022  0A24                     i1l3390:	
 17023                           ;incstack = 0
 17024                           ; Regs used in _JSN_GetLastTrig: [wreg]
 17025                           
 17026                           
 17027                           ;JSN_Sensor.c: 119:     return lastTrig;
 17028  0A24  0021               	movlb	1	; select bank1
 17029  0A25  0851               	movf	(_lastTrig+1)^(0+128),w
 17030  0A26  00F1               	movwf	?_JSN_GetLastTrig+1
 17031  0A27  0850               	movf	_lastTrig^(0+128),w
 17032  0A28  00F0               	movwf	?_JSN_GetLastTrig
 17033  0A29                     i1l56:
 17034  0A29  0008               	return
 17035  0A2A                     __end_of_JSN_GetLastTrig:
 17036  007E                     btemp	set	126	;btemp
 17037  007E                     int$flags	set	126
 17038  007E                     wtemp0	set	126
 17039                           
 17040                           	psect	idloc
 17041                           
 17042                           ;Config register IDLOC0 @ 0x8000
 17043                           ;	unspecified, using default values
 17044  8000                     	org	32768
 17045  8000  3FFF               	dw	16383
 17046                           
 17047                           ;Config register IDLOC1 @ 0x8001
 17048                           ;	unspecified, using default values
 17049  8001                     	org	32769
 17050  8001  3FFF               	dw	16383
 17051                           
 17052                           ;Config register IDLOC2 @ 0x8002
 17053                           ;	unspecified, using default values
 17054  8002                     	org	32770
 17055  8002  3FFF               	dw	16383
 17056                           
 17057                           ;Config register IDLOC3 @ 0x8003
 17058                           ;	unspecified, using default values
 17059  8003                     	org	32771
 17060  8003  3FFF               	dw	16383
 17061                           
 17062                           	psect	config
 17063                           
 17064                           ;Config register CONFIG1 @ 0x8007
 17065                           ;	FEXTOSC External Oscillator mode Selection bits
 17066                           ;	FEXTOSC = OFF, Oscillator not enabled
 17067                           ;	Power-up default value for COSC bits
 17068                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 17069                           ;	Clock Out Enable bit
 17070                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 17071                           ;	Clock Switch Enable bit
 17072                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17073                           ;	Fail-Safe Clock Monitor Enable
 17074                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 17075  8007                     	org	32775
 17076  8007  3F8C               	dw	16268
 17077                           
 17078                           ;Config register CONFIG2 @ 0x8008
 17079                           ;	Master Clear Enable bit
 17080                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 17081                           ;	Power-up Timer Enable bit
 17082                           ;	PWRTE = OFF, PWRT disabled
 17083                           ;	Watchdog Timer Enable bits
 17084                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 17085                           ;	Low-power BOR enable bit
 17086                           ;	LPBOREN = OFF, ULPBOR disabled
 17087                           ;	Brown-out Reset Enable bits
 17088                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 17089                           ;	Brown-out Reset Voltage selection bit
 17090                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 17091                           ;	PPSLOCK bit One-Way Set Enable bit
 17092                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 17093                           ;	Stack Overflow/Underflow Reset Enable bit
 17094                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 17095                           ;	Debugger enable bit
 17096                           ;	DEBUG = OFF, Background debugger disabled
 17097  8008                     	org	32776
 17098  8008  3FF3               	dw	16371
 17099                           
 17100                           ;Config register CONFIG3 @ 0x8009
 17101                           ;	User NVM self-write protection bits
 17102                           ;	WRT = OFF, Write protection off
 17103                           ;	Low Voltage Programming Enable bit
 17104                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 17105  8009                     	org	32777
 17106  8009  3FFF               	dw	16383
 17107                           
 17108                           ;Config register CONFIG4 @ 0x800A
 17109                           ;	User NVM Program Memory Code Protection bit
 17110                           ;	CP = OFF, User NVM code protection disabled
 17111                           ;	Data NVM Memory Code Protection bit
 17112                           ;	CPD = OFF, Data NVM code protection disabled
 17113  800A                     	org	32778
 17114  800A  3FFF               	dw	16383

Data Sizes:
    Strings     111
    Constant    0
    Data        0
    BSS         155
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     80      80
    BANK1            80     22      79
    BANK2            80      0      62
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sameSens@ccp3$F978	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sameSens@ccp2$F857	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sameSens	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2413$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    S2413$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_3(CODE[3]), STR_2(CODE[58]), STR_1(CODE[50]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 58
		 -> STR_3(CODE[3]), STR_2(CODE[58]), STR_1(CODE[50]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_3(CODE[3]), STR_2(CODE[58]), STR_1(CODE[50]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP3_DefaultCallBack(), 

    lastTrig@ccp3$F979	PTR struct . size(2) Largest target is 4096
		 -> NULL(NULL[0]), RAM(DATA[4096]), Sens3(BANK2[6]), Sens2(BANK2[6]), 
		 -> Sens1(BANK2[6]), 

    CCP2_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP2_DefaultCallBack(), 

    CCP2_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP2_DefaultCallBack(), 

    lastTrig@ccp2$F858	PTR struct . size(2) Largest target is 4096
		 -> NULL(NULL[0]), RAM(DATA[4096]), Sens3(BANK2[6]), Sens2(BANK2[6]), 
		 -> Sens1(BANK2[6]), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP1_DefaultCallBack(), 

    lastTrig@ccp1$F716	PTR struct . size(2) Largest target is 4096
		 -> NULL(NULL[0]), RAM(DATA[4096]), Sens3(BANK2[6]), Sens2(BANK2[6]), 
		 -> Sens1(BANK2[6]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    sp__JSN_SensorGetPtr	PTR struct . size(2) Largest target is 4096
		 -> RAM(DATA[4096]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    sp__JSN_GetLastTrig	PTR struct . size(2) Largest target is 4096
		 -> NULL(NULL[0]), RAM(DATA[4096]), Sens3(BANK2[6]), Sens2(BANK2[6]), 
		 -> Sens1(BANK2[6]), 

    JSN_Sensor_GetDistance@Sensor	PTR struct . size(2) Largest target is 4096
		 -> RAM(DATA[4096]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    JSN_Sensor_Trig@Sensor	PTR struct . size(2) Largest target is 4096
		 -> RAM(DATA[4096]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    lastTrig	PTR struct . size(2) Largest target is 4096
		 -> NULL(NULL[0]), RAM(DATA[4096]), Sens3(BANK2[6]), Sens2(BANK2[6]), 
		 -> Sens1(BANK2[6]), 

    JSN_Sensor_Init@Sensor	PTR struct . size(2) Largest target is 4096
		 -> RAM(DATA[4096]), Sens3(BANK2[6]), Sens2(BANK2[6]), Sens1(BANK2[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _INTERRUPT_InterruptManager->_CCP2_CaptureISR
    _INTERRUPT_InterruptManager->_CCP3_CaptureISR
    i1_TMR3_Reload->i1_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _CCP3_CaptureISR->_CCP3_DefaultCallBack
    _CCP3_DefaultCallBack->_ReadPin
    _CCP2_CaptureISR->_CCP2_DefaultCallBack
    _CCP2_DefaultCallBack->_ReadPin
    _CCP1_CaptureISR->_CCP1_DefaultCallBack
    _CCP1_DefaultCallBack->_ReadPin

Critical Paths under _main in BANK0

    _main->_printf
    _SpeakerTone_Init->_SetPin
    _SpeakerTone_Init->_WritePin
    _TMR3_Reload->_TMR3_WriteTimer
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _CCP3_Initialize->_CCP3_SetCallBack
    _CCP2_Initialize->_CCP2_SetCallBack
    _CCP1_Initialize->_CCP1_SetCallBack
    _MotorControl_Off->_TMR2_WriteTimer
    _JSN_Sensor_Trig->_FRT_GetMicros
    _FRT_GetMicros->___wmul
    _JSN_Sensor_Init->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _JSN_Sensor_GetDistance->___lldiv
    ___lldiv->___lmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_JSN_Sensor_Init
    _JSN_Sensor_Init->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   17699
                                              8 BANK1     14    14      0
                      _FRT_GetMillis
                   _JSN_SensorGetPtr
             _JSN_Sensor_GetDistance
                    _JSN_Sensor_Init
                    _JSN_Sensor_Trig
                  _MotorControl_Init
                         _PIC16_Init
                   _SpeakerTone_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SpeakerTone_Init                                     0     0      0    1488
                             _SetPin
                    _SpeakerTone_Off
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _SpeakerTone_Off                                      0     0      0     164
                        _TMR3_Reload
                     _TMR3_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR3_Reload                                          0     0      0     164
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (4) _TMR3_WriteTimer                                      2     0      2     164
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _PIC16_Init                                           0     0      0     882
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     882
                    _CCP1_Initialize
                    _CCP2_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Initialize                                    1     1      0     490
                                              2 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP3_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP2_Initialize                                      0     0      0      98
                   _CCP2_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP2_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP1_Initialize                                      0     0      0      98
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP1_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _MotorControl_Init                                    0     0      0      22
                   _MotorControl_Off
 ---------------------------------------------------------------------------------
 (2) _MotorControl_Off                                     0     0      0      22
                     _TMR2_StopTimer
                    _TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_WriteTimer                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Trig                                      6     4      2    1109
                                             24 BANK0      6     4      2
                      _FRT_GetMicros
                   _JSN_SensorGetPtr (ARG)
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _FRT_GetMicros                                       18    14      4     267
                                              6 BANK0     18    14      4
                _TMR0_GetCallBackNum
                     _TMR0_ReadTimer
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
                _TMR0_GetCallBackNum (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR0_ReadTimer                                       2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _TMR0_GetCallBackNum                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Init                                      6     2      4    7348
                                              2 BANK1      6     2      4
                   _JSN_SensorGetPtr (ARG)
                             _SetPin
                           _WritePin
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5532
                                             76 BANK0      4     0      4
                                              0 BANK1      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5250
                                             68 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    4923
                                             52 BANK0     16    14      2
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                24    16      8    3578
                                             28 BANK0     24    16      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2554
                                             19 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                             11 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     834
                                              3 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      66
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             18     2     16     311
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             26    10     16     314
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (2) _WritePin                                             4     3      1     700
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _SetPin                                               4     3      1     624
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_GetDistance                               4     2      2    1156
                                             26 BANK0      4     2      2
                   _JSN_SensorGetPtr (ARG)
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     396
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _JSN_SensorGetPtr                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _FRT_GetMillis                                        4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0     852
                   Absolute function *
                    _CCP1_CaptureISR
                    _CCP2_CaptureISR
                    _CCP3_CaptureISR
                    _CCP4_CompareISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR3_ISR                                            0     0      0     114
                      i1_TMR3_Reload
 ---------------------------------------------------------------------------------
 (13) i1_TMR3_Reload                                       0     0      0     114
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (14) i1_TMR3_WriteTimer                                   2     0      2     114
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            1     1      0       0
                                              0 COMMON     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR0_CallBack                                       0     0      0       0
                      _FRT_IncMicros
                      _FRT_IncMillis
 ---------------------------------------------------------------------------------
 (14) _FRT_IncMillis                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _FRT_IncMicros                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _CCP4_CompareISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CCP3_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP3_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (12) _CCP2_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP2_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP2_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (12) _CCP1_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP1_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP1_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (14) _ReadPin                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (14) _JSN_GetLastTrig                                     2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FRT_GetMillis
   _JSN_SensorGetPtr
   _JSN_Sensor_GetDistance
     _JSN_SensorGetPtr (ARG)
     ___lldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)
   _JSN_Sensor_Init
     _JSN_SensorGetPtr (ARG)
     _SetPin (ARG)
     _WritePin (ARG)
     _printf (ARG)
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
               _EUSART_Write
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
   _JSN_Sensor_Trig
     _FRT_GetMicros
       _TMR0_GetCallBackNum
       _TMR0_ReadTimer
       ___wmul
         _TMR0_GetCallBackNum (ARG)
     _JSN_SensorGetPtr (ARG)
     _WritePin (ARG)
   _MotorControl_Init
     _MotorControl_Off
       _TMR2_StopTimer
       _TMR2_WriteTimer
   _PIC16_Init
     _SYSTEM_Initialize
       _CCP1_Initialize
         _CCP1_SetCallBack
       _CCP2_Initialize
         _CCP2_SetCallBack
       _CCP3_Initialize
         _CCP3_SetCallBack
       _CCP4_Initialize
       _EUSART_Initialize
         _EUSART_SetErrorHandler
         _EUSART_SetFramingErrorHandler
         _EUSART_SetOverrunErrorHandler
         _EUSART_SetRxInterruptHandler
         _EUSART_SetTxInterruptHandler
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _PWM5_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR1_Initialize
       _TMR2_Initialize
       _TMR3_Initialize
       _WDT_Initialize
   _SpeakerTone_Init
     _SetPin
     _SpeakerTone_Off
       _TMR3_Reload
         _TMR3_WriteTimer
       _TMR3_StopTimer
     _WritePin
   _printf

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _CCP1_CaptureISR *
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP2_CaptureISR *
     Absolute function(Fake) *
     _CCP2_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP3_CaptureISR *
     Absolute function(Fake) *
     _CCP3_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP4_CompareISR *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     _TMR0_CallBack
       _FRT_IncMicros
       _FRT_IncMillis
   _TMR1_ISR *
     _TMR1_WriteTimer
   _TMR3_ISR *
     i1_TMR3_Reload
       i1_TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     16      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3E       9       77.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     10B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     10B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun Feb 20 15:18:43 2022

                              _CCP4_Initialize 0B64                  ?_EUSART_SetRxInterruptHandler 0020  
                       ??_CCP3_DefaultCallBack 0075                          __end_ofi1_TMR3_Reload 0A65  
                                           l24 03DB                                             l33 0404  
                                           l50 0754                                             l28 047A  
                                           l61 0D4B                                             l53 0F76  
                          ___wmul@multiplicand 0022                        __end_of_CCP1_Initialize 0C1D  
                                          l110 0B97                                            l115 03D9  
                                          l313 0003                                            l242 0AE6  
                                          l163 031E                                            l251 0AD3  
                                          l307 0AB5                                            l405 0A76  
                                          l245 0AEA                                            l239 0D76  
                                          l248 0A1E                                            l353 0C1C  
                                          l282 0C04                                            l291 0A44  
                                          l451 0A7F                                            l445 0C4C  
                                          l470 0B85                                            l359 0A6D  
                                          l631 0A9A                                            l640 0AA3  
                                          l634 0A88                                            l628 0A91  
                                          l804 0C7F                                            l637 0AAC  
                                          l565 0FFF                                            l590 0D88  
                                          l911 0A0F                                            l399 0C34  
                                          l593 0DA3                                            l905 0A5B  
                                          l817 0A4B                                            l772 0B63  
                                          l589 0D7F                                            l917 0A23  
                                          l837 0B11                                            l758 0E43  
                                          l599 0A3D                                            l775 07F9  
                                          l951 0A12                                            l848 0A53  
                                          l865 0B74                                            l945 0B03  
                                          l962 0AF6                                            l959 0C65  
                                          l889 0B1F                                            _PR2 001E  
                                          u900 0D9D                                            u901 0D9C  
                                          u910 0F7D                                            u911 0F7C  
                                          u920 0F82                                            u921 0F81  
                                          u930 0F91                                            u931 0F90  
                                          u940 0FAF                                            u941 0FAE  
                                          u950 0D20                                            u951 0D1F  
                                          u880 0D7F                                            u960 0CAF  
                                          u881 0D7E                                            u945 0FAB  
                                          u961 0CAE                                            u970 05B4  
                                          u890 0D83                                            u891 0D82  
                                          u980 05C3                                            u981 05C2  
                                          u990 05D6                                            u991 05D5  
                              _timer1ReloadVal 00B6                         ??_EUSART_RxDataHandler 0070  
                                          _pad 0755                 ?_EUSART_SetFramingErrorHandler 0020  
                     __end_of_MotorControl_Off 0A54                                _TMR2_Initialize 0A54  
                                          wreg 0009                               ?_SpeakerTone_Off 0070  
                                         l1152 0CC1                                           l1402 06A0  
                                         l1154 0CD5                                           l1166 0E08  
                 JSN_Sensor_GetDistance@Sensor 003A                                           l3200 0FAF  
                                         l4000 0A48                                           l4010 0DD5  
                                         l3210 0D10                                _timer3ReloadVal 00A6  
                                         l1188 06FB                                           l4020 0E00  
                                         l4012 0DDE                                           l3204 0CFA  
                                         l3212 0C9D                                           l3300 012D  
                                         l4100 0741                                           l4004 0A4C  
                                         l4030 06C0                                           l4014 0DE2  
                                         l3230 05CE                                           l3222 05AC  
                                         l3206 0CFD                                           l3214 0CA2  
                                         l3310 0188                                           l3302 015A  
                                         l4102 074C                                           l4006 0A4F  
                                         l1615 0BAC                                           l4112 0D23  
                                         l4040 06E6                                           l4032 06C4  
                                         l4024 06A1                                           l4016 0DEA  
                                         l1392 062F                                           l3240 0610  
                                         l3232 05D2                                           l3224 05B7  
                                         l3208 0D0B                                           l3216 0CA6  
                                         l1640 0771                                           l3304 0161  
                                         l3312 018D                                           l3320 0A6E  
                                         l1385 061F                                           l4122 0D2E  
                                         l4114 0D24                                           l4042 06ED  
                                         l4034 06CB                                           l4026 06B2  
                                         l4018 0DF1                                           l4106 0F35  
                                         l3242 0611                                           l3234 05D6  
                                         l3226 05C3                                           l3250 0648  
                                         l3170 0D79                                           l3218 0CAF  
                                         l3306 016D                                           l4050 03DA  
                                         l3322 0A77                                           l3330 0A92  
                                         l1395 0690                                           l1643 0793  
                                         l4132 0D38                                           l4036 06DD  
                                         l4028 06B5                                           l4044 06F3  
                                         l4108 0F6D                                           l3236 05DE  
                                         l3228 05C6                                           l3252 064C  
                                         l3244 0630                                           l3180 0D97  
                                         l3172 0D79                                           l1644 07A1  
                                         l3260 0757                                           l1660 01A0  
                                         l3308 017A                                           l1652 00DA  
                                         l4052 03DB                                           l4060 03ED  
                                         l3332 0A80                                           l3324 0A9B  
                                         l3500 0E17                                           l3316 0AAD  
                                         l4140 0B86                                           l3340 0C57  
                                         l1645 07AD                                           l4126 0D33  
                                         l4118 0D29                                           l4038 06E5  
                                         l3238 0600                                           l3254 0650  
                                         l3246 063D                                           l3182 0D9D  
                                         l3174 0D83                                           l3190 0F77  
                                         l3270 0774                                           l3262 075C  
                                         l3350 01B4                                           l4062 0404  
                                         l4054 03E4                                           l4070 041C  
                                         l3318 0A65                                           l3326 0AA4  
                                         l3510 0E2A                                           l3502 0E19  
                                         l4142 0B92                                           l3342 0C5B  
                                         l3334 0C4D                                           l3256 0672  
                                         l3248 0640                                           l3184 0D9E  
                                         l3176 0D89                                           l3192 0F7D  
                                         l3272 0780                                           l3264 0765  
                                         l1648 00BD                                           l3280 00B4  
                                         l3360 01DF                                           l3352 01BC  
                                         l1672 0DD4                                           l4064 0413  
                                         l4072 044E                                           l3600 0C23  
                                         l3328 0A89                                           l3520 0E37  
                                         l3512 0E2D                                           l3504 0E23  
                                         l4144 0B95                                           l3336 0C52  
                                         l3344 0C5D                                           l1665 0263  
                                         l3258 0682                                           l3178 0D93  
                                         l3186 0DA1                                           l3194 0F82  
                                         l3274 0785                                           l3266 076A  
                                         l3290 00F6                                           l3282 00B9  
                                         l3370 0224                                           l3362 01F1  
                                         l3354 01C1                                           l4074 045E  
                                         l4250 0B04                                           l3602 0C2B  
                                         l3610 0B6B                                           l3530 0ADF  
                                         l3522 0E3A                                           l3514 0E2F  
                                         l3506 0E26                                           l4146 0B96  
                                         l3346 0C61                                           l3338 0C53  
                                         l4242 0C66                                           l3188 0A39  
                                         l1684 0FB9                                           l3196 0F87  
                                         l1692 0D20                                           l3276 0798  
                                         l3268 076F                                           l3292 00F9  
                                         l3284 00CC                                           l3372 022F  
                                         l3356 01C5                                           l3348 01A3  
                                         l4076 046A                                           l4252 0B0E  
                                         l3604 0C30                                           l3540 0C38  
                                         l3612 0B70                                           l3532 0AE3  
                                         l3524 0E3C                                           l3516 0E31  
                                         l3508 0E28                                           l3620 0B00  
                                         l4244 0C72                                           l4238 0B53  
                                         l3198 0F91                                           l3294 00FE  
                                         l3286 00D2                                           l3358 01D7  
                                         l3366 020B                                           l3382 0240  
                                         l4078 0476                                           l3710 0CB6  
                                         l4094 06FC                                           l3606 0C32  
                                         l3550 0C48                                           l3542 0C39  
                                         l3614 0B72                                           l3534 0AE5  
                                         l3526 0E3E                                           l3518 0E34  
                                         l3630 0B1B                                           l3622 0B12  
                                         l3702 0A10                                           l4246 0C77  
                                         l4350 0498                                           l4342 047B  
                                         l3800 0376                                           l3296 0125  
                                         l3288 00E2                                           l3384 0259  
                                         l3368 021C                                           l3376 0235  
                                         l3720 0CD1                                           l3712 0CB9  
                                         l4096 070F                                           l3560 0C0A  
                                         l3552 0C4A                                           l3544 0C3A  
                                         l3608 0B64                                           l3528 0E41  
                                         l3480 0ACA                                           l3632 0B1D  
                                         l3624 0B15                                           l3640 0B81  
                                         l3616 0AF7                                           l3536 0A1B  
                                         l3704 0AEB                                           l4248 0C7C  
                                         l4360 04B7                                           l4352 0498  
                                         l4344 047E                                           l4610 03A1  
                                         l1698 0CB5                                           l3298 0129  
                                         l3378 023D                                           l3730 0DC2  
                                         l3714 0CBD                                           l4098 071B  
                                         l3706 0A0D                                           l3562 0C0B  
                                         l3554 0C05                                           l3546 0C3B  
                                         l3538 0C35                                           l3650 0FCE  
                                         l3490 0E09                                           l3482 0ACD  
                                         l3626 0B16                                           l3642 0B82  
                                         l3634 0B75                                           l3570 0A54  
                                         l3618 0AFB                                           l4362 04C0  
                                         l4354 0498                                           l4346 0492  
                                         l4612 0D40                                           l3812 038B  
                                         l3804 037D                                           l3732 0DCC  
                                         l3724 0DA6                                           l4604 03F6  
                                         l3716 0CC6                                           l3708 0A21  
                                         l3564 0C13                                           l3556 0C08  
                                         l3548 0C43                                           l3660 0FD9  
                                         l3652 0FD1                                           l3644 0FBA  
                                         l3492 0E0D                                           l3484 0ACF  
                                         l3628 0B17                                           l3580 0BF4  
                                         l3636 0B79                                           l3572 0A57  
                                         l4364 04D3                                           l4356 0498  
                                         l4348 0495                                           l3822 0399  
                                         l3750 0321                                           l3902 02D7  
                                         l3726 0DAA                                           l3830 0B98  
                                         l4606 0425                                           l3718 0CCB  
                                         l3566 0C18                                           l3558 0C09  
                                         l3670 0FF4                                           l3662 0FE1  
                                         l3654 0FD3                                           l3646 0FBC  
                                         l3494 0E10                                           l3486 0AD0  
                                         l3590 0C03                                           l3582 0BF5  
                                         l3638 0B7A                                           l3574 0A58  
                                         l4366 04EE                                           l4358 04A4  
                                         ?_pad 0033                                           l3816 0392  
                                         l3808 0384                                           l3760 0330  
                                         l3752 0322                                           l4608 02E6  
                                         l3728 0DAE                                           l3832 0B9D  
                                         l3568 0C1A                                           l3592 0C1D  
                                         l3672 0FF5                                           l3664 0FE9  
                                         l3656 0FD5                                           l3648 0FC4  
                                         l3496 0E12                                           l3488 0AD1  
                                         l3584 0BF6                                           l3576 0A59  
                                         l3920 0D4C                                           l3850 027C  
                                         l3842 026E                                           l3594 0C20  
                                         l3674 0FFE                                           l3666 0FF1  
                                         l3658 0FD7                                           l3498 0E14  
                                         l3586 0BF8                                           l3578 0BEF  
                                         l3922 0D6A                                           l3780 0353  
                                         l3772 0345                                           l3764 0337  
                                         l3756 0329                                           l3908 02DE  
                                         l3836 0266                                           l3676 0A3E  
                                         l3916 07AE                                           l3596 0C21  
                                         l3668 0FF3                                           l3588 0C00  
                                         l3924 0D6D                                           l3870 029F  
                                         l3862 0291                                           l3854 0283  
                                         l3846 0275                                           l3838 0267  
                                         l3598 0C22                                           l3926 0D70  
                                         l3792 0368                                           l3784 035A  
                                         l3776 034C                                           l3768 033E  
                                         l3688 0002                                           l3928 0D73  
                                         l3890 02C2                                           l3882 02B4  
                                         l3874 02A6                                           l3866 0298  
                                         l3858 028A                                           l3796 036F  
                                         l3788 0361                                           l3894 02C9  
                                         l3886 02BB                                           l3878 02AD  
                                         l3898 02D0                                           l3998 0A45  
                                         STR_1 103A                                           STR_2 1000  
                                         STR_3 106C                                           u1000 0600  
                                         u1001 05FF                                           u1010 061F  
                                         u1011 061E                                           u1020 063D  
                                         u1100 00B9                                           u1005 05FC  
                                         u1021 063C                                           u1101 00B8  
                                         u1030 0650                                           u1110 00CC  
                                         u1031 064F                                           u1111 00CB  
                                         u1040 0672                                           u1120 0161  
                                         u1200 021C                                           u1041 0671  
                                         u1121 0160                                           u1201 021B  
                                         u1050 0690                                           u1130 016D  
                                         u1210 0AEA                                           u1051 068F  
                                         u1131 016C                                           u1115 00C8  
                                         u1211 0AE9                                           u1300 0DE2  
                                         u1060 075C                                           u1140 017A  
                                         u1301 0DE1                                           u1045 066E  
                                         u1061 075B                                           u1141 0179  
                                         u1070 076A                                           u1150 0188  
                                         u1230 0CBD                                           u1071 0769  
                                         u1151 0187                                           u1231 0CBC  
                                         u1400 06F3                                           u1080 0793  
                                         u1160 018D                                           u1401 06F2  
                                         u1081 0792                                           u1161 018C  
                                         u1145 0176                                           u1330 0E00  
                                         u1090 0798                                           u1410 0741  
                                         u1170 0C52                                           u1331 0DFF  
                                         u1315 0DEB                                           u1091 0797  
                                         u1155 0184                                           u1411 0740  
                                         u1171 0C51                                           u1340 06B2  
                                         u1180 01B4                                           u1260 0CD1  
                                         u1341 06B1                                           u1325 0DF2  
                                         u1085 078F                                           u1181 01B3  
                                         u1261 0CD0                                           u1245 0CC2  
                                         _LATA 010C                                           u1190 01D7  
                                         u1270 0DCC                                           _LATB 010D  
                                         u1191 01D6                                           u1271 0DCB  
                                         u1255 0CC7                                           _LATC 010E  
                                         u1360 06C4                                           u1361 06C3  
                                         u1355 06B6                                           u1380 06DD  
                                         u1381 06DC                                           u1375 06C5  
                                         u1385 06D9                                           u1730 04EE  
                                         u1395 06E7                                           u1731 04ED  
                                         _PIE0 0090                                           _PIE1 0091  
                                         _PIE2 0092                                           _PIE3 0093  
                                         _PIE4 0094                                           _PMD0 0911  
                                         _PMD1 0912                                           _PMD2 0913  
                                         _PMD3 0914                                           _PMD4 0915  
                                         _PMD5 0916                                           i1l56 0A29  
                                         _PIR0 0010                                           _PIR1 0011  
                                         _PIR2 0012                                           _PIR3 0013  
                                         _PIR4 0014                                           _PLLR 48E0  
                                         _TMR2 001D                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                         _dbuf 01A0                        __end_of_CCP2_Initialize 0C35  
                                         _main 047B                                           _prec 00A2  
                                         _nout 0144                                           pad@i 0037  
                                         pad@p 0034                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 0039  
                                         btemp 007E                                           _utoa 00B2  
                                   ReadPin@pin 0072                                           start 0090  
                              _TMR3_Initialize 0AF7                                _PWM5_Initialize 0B12  
                     __end_of_CCP1_SetCallBack 0A6E                          ??_TMR0_GetCallBackNum 0020  
                             ?_CCP1_CaptureISR 0070                              ?_SpeakerTone_Init 0070  
                              __end_of_ReadPin 05AC                        __end_of_CCP4_CompareISR 0A0D  
                                        ??_pad 0036                             ??_SpeakerTone_Init 0024  
                      __end_of_TMR0_Initialize 0C05                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 0AEB                                   main@distance 00E9  
                      __end_of_CCP3_Initialize 0C4D                                          ?_main 0070  
                              __end_of___lldiv 06FC                                          ?_utoa 003C  
                              __end_of___lodiv 0630                                          _T1CON 001B  
                                        _T2CON 001F                                          _T3CON 0413  
                              __end_of___lomod 06A1                                          i1l301 0B30  
                                        i1l304 0A36                                          i1l402 0BD8  
                                        i1l139 05AB                                          i1l350 0E7F  
                                        i1l442 0EF7                                          i1l602 0CF6  
                                        i1l356 0BC2                                          i1l612 0F34  
                                        i1l605 0CF7                                          i1l622 0A1A  
                                        i1l448 0BEE                                          i1l616 0C9A  
                                        i1l625 0A16                                          i1l490 0ADE  
                                        i1l619 0A09                                          i1l396 0EBB  
                                        i1l484 0B41                                          i1l681 0014  
                                        i1l690 0050                                          i1l692 005E  
                                        i1l684 0026                                          i1l781 0ABF  
                                        i1l693 008E                                          i1l694 006C  
                                        i1l686 0034                                          i1l696 007D  
                                        i1l688 0042                                          i1l874 0A0C  
                                        i1l778 0AC9                                          i1l962 0A64  
                                        i1l971 0A2F                                          i1l699 008E  
                                        i1l959 0B52                                          _OSCEN 091D  
                                 vfpfcnvrt@fmt 0054                                          _TMR0H 0016  
                                 vfpfcnvrt@llu 005B                                          _TMR1H 001A  
                                        _TMR0L 0015                                          _TMR3H 0412  
                                        _TMR1L 0019                                          _TMR3L 0411  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _RXPPS 0E24  
                          ___lmul@multiplicand 0024                      ?_TMR0_SetInterruptHandler 0020  
                     __end_of_JSN_SensorGetPtr 0D4C                                          _Sens1 0158  
                                        _Sens2 0152                                          _Sens3 014C  
                             __end_of_TMR0_ISR 0B31                               __end_of_TMR1_ISR 0ADF  
                             __end_of_TMR3_ISR 0A30                               ?_CCP2_CaptureISR 0070  
                                        _flags 00A4                                 _WDT_Initialize 0A1B  
                                        _fputc 0F77                                          _fputs 0CF8  
                                        pad@fp 003B                                          _width 00A0  
                                        _putch 0A37                        __end_of_TMR1_Initialize 0B86  
                                        pclath 000A                                          utoa@d 003C  
                                        utoa@i 0052                                          utoa@n 004A  
                                        utoa@p 0045                                          utoa@w 0048  
                                        status 0003                        __end_of_CCP4_Initialize 0B75  
                                        wtemp0 007E                               ___lodiv@dividend 0028  
                              _TMR1_WriteTimer 0B31                       __end_of_CCP2_SetCallBack 0A77  
                              __initialization 0092                               ?_CCP3_CaptureISR 0070  
                                 __end_of_main 0515                                   __end_of_utoa 01A1  
                               ??_EUSART_Write 0020                        __end_of_TMR2_Initialize 0A5C  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0022  
                                       ??_main 00E1                               ?_CCP1_Initialize 0070  
                                       ??_utoa 0044                                _TMR2_WriteTimer 0A1F  
                             ___lodiv@quotient 0031                         __end_of_WDT_Initialize 0A1F  
                              _JSN_GetLastTrig 0A24      __end_of_EUSART_DefaultFramingErrorHandler 0A0A  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0A09                     _EUSART_OverrunErrorHandler 00AE  
                                       ?_fputc 0023                                         ?_fputs 002B  
                                       _CCPR1H 0292                                         _CCPR2H 0296  
                                       _CCPR3H 0312                                         _CCPR1L 0291  
                                       _CCPR4H 0316                                         _CCPR2L 0295  
                                       _CCPR3L 0311                                         _CCPR4L 0315  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _T0CON0 0017                                         _T0CON1 0018  
                                       _T1GCON 001C                                         _T3GCON 0414  
                                       _RC1REG 0199                               __end_of_WritePin 031F  
                                       _RC1PPS 0EA1                                         _RC1STA 019D  
                      TMR1_WriteTimer@timerVal 0070                                         _RC4PPS 0EA4  
                                       _RB6PPS 0E9E                                         _ODCONA 028C  
                                       _ODCONB 028D                                         _ODCONC 028E  
                                       i1l3400 051C                                         i1l4200 0CD6  
                                       i1l4210 0CF1                                         i1l4202 0CDD  
                                       i1l3420 0532                                         i1l3412 0527  
                                       i1l3404 0520                                         i1l4220 0F0F  
                                       i1l4212 0EF8                                         i1l4204 0CE5  
                                       i1l4300 0087                                         i1l4230 0F31  
                                       i1l4222 0F14                                         i1l4214 0EFE  
                                       i1l4206 0CEA                                         i1l4150 0B22  
                                       i1l3440 054A                                         i1l3432 0542  
                                       i1l3424 0538                                         i1l3416 052B  
                                       i1l3408 0522                                         i1l4160 0BB8  
                                       i1l4232 0A0A                                         u122_20 0C94  
                                       i1l4224 0F1A                                         i1l4216 0F03  
                                       i1l4208 0CF0                                         i1l4152 0B2C  
                                       i1l4048 0A5C                                         u122_21 0C93  
                                       i1l4162 0BC3                                         i1l4170 0BDB  
                                       i1l4226 0F20                                         i1l4218 0F09  
                                       i1l4154 0B2F                                         i1l4234 0A2A  
                                       i1l3460 0560                                         i1l3452 0557  
                                       i1l3444 054F                                         i1l3436 0546  
                                       i1l3428 053D                                         i1l4156 0BAD  
                                       i1l4164 0BC5                                         i1l4172 0BE4  
                                       i1l3700 0C95                                         i1l4228 0F2A  
                                       i1l4148 0B20                                         i1l4236 0A2C  
                      __end_of_PWM5_Initialize 0B20                        __end_of_TMR3_Initialize 0B04  
                                       i1l3390 0A24                                         i1l4158 0BAF  
                                       i1l4166 0BCE                                         i1l4174 0AD4  
                                       i1l4270 001D                                         i1l4262 0006  
                                       i1l3464 0565                                         i1l3456 055C  
                                       i1l3448 0553                                         i1l4168 0BD9  
                                       i1l4176 0AD6                                         i1l4280 003E  
                                       i1l4272 0022                                         i1l4264 000B  
                                       i1l3474 056B                                         i1l3394 0516  
                                       i1l4290 0063                                         i1l4282 0047  
                                       i1l4274 002B                                         i1l4266 0010  
                                       i1l4620 0573                                         i1l3396 0517  
                                       i1l3740 0B48                                         i1l4292 0068  
                                       i1l4284 004C                                         i1l4276 0030  
                                       i1l4268 0018                                         i1l4614 0EEF  
                                       i1l3742 0B4A                                         i1l4294 0071  
                                       i1l4286 0055                                         i1l4278 0039  
                                       i1l4616 0EB3                                         i1l3680 0AC0  
                                       i1l3744 0B4C                                         i1l3736 0B42  
                                       i1l4296 0076                                         i1l4288 005A  
                                       i1l4618 0E77                                         i1l3930 0A30  
                                       i1l3738 0B47                                         i1l3746 0B4E  
                                       i1l4298 0082                                         i1l3932 0E44  
                                       i1l3692 0C80                                         i1l3684 0AB6  
                                       i1l3748 0B50                                         i1l3934 0E4D  
                                       i1l3942 0E67                                         i1l3950 0E89  
                                       i1l3694 0C8A                                         i1l3936 0E53  
                                       i1l3952 0E8F                                         i1l3696 0C8E  
                                       i1l3938 0E58                                         i1l3954 0E94  
                                       i1l3970 0ED0                                         i1l3698 0C94  
                                       i1l3948 0E80                                         i1l3964 0EBC  
                                       i1l3980 0B31                                         i1l3958 0EA3  
                                       i1l3966 0EC5                                         i1l3974 0EDF  
                                       i1l3982 0B36                                         i1l3990 0B3D  
                                       i1l3968 0ECB                                         u142_20 0B2C  
                                       i1l3992 0B3F                                         i1l3984 0B37  
                                       u150_20 000B                                         u142_21 0B2B  
                                       u150_21 000A                                         i1l3994 0A17  
                                       i1l3986 0B39                                         i1l3996 0A13  
                                       i1l3988 0B3B                                         u151_20 0010  
                                       u151_21 000F                                         u128_20 0B47  
                                       u160_20 004C                                         u152_20 0018  
                                       u128_21 0B46                                         u160_21 004B  
                                       u152_21 0017                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       u145_20 0CDD                                         u129_20 0B36  
                                       u161_20 0055                                         u153_20 001D  
                                       u145_21 0CDC                                         u129_21 0B35  
                                       u161_21 0054                                         u153_21 001C  
                                       u146_20 0CF0                                         u162_20 005A  
                                       u154_20 0022                                         u146_21 0CEF  
                                       u162_21 0059                                         u154_21 0021  
                                       u147_20 0F03                                         u163_20 0063  
                                       u155_20 002B                                         u147_21 0F02  
                                       u163_21 0062                                         u155_21 002A  
                                       u148_20 0F14                                         u164_20 0068  
                                       u156_20 0030                                         u148_21 0F13  
                                       u164_21 0067                                         u156_21 002F  
                                       u149_20 0F2A                                         u165_20 0071  
                                       u157_20 0039                                         u149_21 0F29  
                                       u165_21 0070                                         u157_21 0038  
                                       u166_20 0076                                         u158_20 003E  
                                       u166_21 0075                                         u158_21 003D  
                                       u167_20 0082                                         u159_20 0047  
                                       u167_21 0081                                         u159_21 0046  
                                       u168_20 0087                                         u168_21 0086  
                                main@currMilli 00EB                                         _OSCFRQ 091F  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                               ?_CCP2_Initialize 0070  
                            ??_JSN_Sensor_Init 00DF                                      ??_ReadPin 0070  
                              _TMR3_WriteTimer 0C4D                              ??_JSN_Sensor_Trig 003A  
                                _CCP1_CallBack 00CE                       __end_of_CCP3_SetCallBack 0A80  
                                       _SetPin 031F                                  _CCP2_CallBack 00C6  
                                 vfprintf@cfmt 006A                                         ___lmul 0DD5  
                                       ___wmul 0CB6                                      ??___lldiv 0034  
                             ?_CCP4_CompareISR 0070                                      ??___lodiv 0030  
                                    ??___lomod 0030                                   ?_TMR3_Reload 0070  
                                _CCP3_CallBack 00BE                            _EUSART_Transmit_ISR 0CD6  
                             ?_TMR0_Initialize 0070                                         _micros 0140  
                                       _millis 013C                             _lastTrig@ccp1$F716 00C8  
                           _lastTrig@ccp2$F858 00C0                             _lastTrig@ccp3$F979 00B8  
                                       _printf 0B98                                         pad@buf 0033  
                                main@prevMilli 00E5                               ?_CCP3_Initialize 0070  
                                       _strlen 0C9B                                         fputc@c 0023  
                               _PMD_Initialize 0ACA                                         fputs@c 002F  
                                       fputs@i 0030                                         fputs@s 0032  
            CCP2_DefaultCallBack@capturedValue 0073                                ?_WDT_Initialize 0070  
                        __end_of_TMR0_CallBack 0A37                               __end_of_vfprintf 0DD5  
                                       utoa@fp 0047       TMR0_SetInterruptHandler@InterruptHandler 0020  
                      __end_of_TMR1_WriteTimer 0B42                           ?_EUSART_Transmit_ISR 0070  
                             ?_TMR1_Initialize 0070                              _SYSTEM_Initialize 0D4C  
                      __end_of__initialization 00AE                               ?_CCP4_Initialize 0070  
                           ?_SYSTEM_Initialize 0070           __end_of_EUSART_SetTxInterruptHandler 0AAD  
                 _EUSART_SetTxInterruptHandler 0AA4                                   ??_PIC16_Init 0023  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0023  
                                    ?_TMR0_ISR 0070                                      ?_TMR1_ISR 0070  
                                    ?_TMR3_ISR 0070                        __end_of_TMR2_WriteTimer 0A24  
                                __end_of_fputc 0FBA                                  __end_of_fputs 0D21  
                                __end_of_putch 0A3E                               ?_TMR2_Initialize 0070  
                       __end_of_PMD_Initialize 0AD4                        __end_of_JSN_GetLastTrig 0A2A  
                        CCP3_CaptureISR@module 0078                           _eusartRxStatusBuffer 0120  
               CCP3_SetCallBack@customCallBack 0020                              ?_MotorControl_Off 0070  
              ??_EUSART_SetOverrunErrorHandler 0022                             ??_MotorControl_Off 0021  
                           __end_of_PIC16_Init 0B98                                        ??_fputc 0026  
                    __end_of_SYSTEM_Initialize 0D77                                        ??_fputs 002C  
                        ??_EUSART_Transmit_ISR 0070                        __end_of_TMR3_WriteTimer 0C66  
                                      ??_putch 0022                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                                     __pbssBANK3 01A0  
                         __end_of_EUSART_Write 0DA4                               ?_PWM5_Initialize 0070  
                             ?_TMR3_Initialize 0070                       ??_JSN_Sensor_GetDistance 003C  
                                      ?_SetPin 0020                              ?_CCP1_SetCallBack 0020  
                                   __pmaintext 047B                  ?_EUSART_SetTxInterruptHandler 0020  
             _EUSART_TxDefaultInterruptHandler 00B4               __end_of_TMR0_SetInterruptHandler 0AB6  
                                      ?___lmul 0020                                        ?___wmul 0020  
                                _FRT_GetMicros 07AE                                     ??_TMR0_ISR 0070  
                                   ??_TMR1_ISR 0072                                  _FRT_GetMillis 0B53  
                                   ??_TMR3_ISR 0072                             ??_CCP1_SetCallBack 0022  
                                   __pintentry 0004                                        _CCP1CAP 0294  
                                      _CCP2CAP 0298                                        _CCP3CAP 0314  
                                      _CCP1CON 0293                                        _CCP2CON 0297  
                                      _CCP3CON 0313                                        _CCP4CON 0317  
                                      _CCP1PPS 0E14                                        _CCP2PPS 0E15  
                                      _CCP3PPS 0E16                                 ___lmul@product 0028  
                                _FRT_IncMicros 0AB6                   ??_EUSART_DefaultErrorHandler 0071  
                                _FRT_IncMillis 0AC0                                        ?_printf 006C  
                              ?_PMD_Initialize 0070                                      ?_WritePin 0020  
                                      ?_strlen 0020                                  _eusartRxCount 00D3  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                                      _OSCCON1 0919                                        _OSCCON3 091B  
                                      _OSCTUNE 091E                              ?_JSN_SensorGetPtr 0076  
                                      _PWM5DCH 0618                                        _PWM5DCL 0617  
                                      _PWM5CON 0619                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 0022                             ??_JSN_SensorGetPtr 0020  
                             ?_TMR1_WriteTimer 0070                               ___lomod@dividend 0028  
            CCP1_DefaultCallBack@capturedValue 0073                    __end_of_TMR0_GetCallBackNum 0004  
                             _micros@FRT$F1518 0138                              _dutyCyclePerMilli 0146  
                                      _ReadPin 0515                              ?_CCP2_SetCallBack 0020  
                               ?_FRT_GetMicros 0026                                 ?_FRT_GetMillis 0020  
                                      ___lldiv 06A1                                        ___lodiv 05AC  
                           ??_CCP2_SetCallBack 0022                                        ___lomod 0630  
                             ?_TMR2_WriteTimer 0070                                      ?_vfprintf 0064  
                               ?_FRT_IncMicros 0070                                 ?_FRT_IncMillis 0070  
                                      _ocCount 00AA                                     ??_WritePin 0021  
                                      __ptext1 0C66                                        __ptext2 0A45  
                                      __ptext3 0A10                                        __ptext4 0AEB  
                                      __ptext5 0C4D                                        __ptext6 0B86  
                                      __ptext7 0D4C                                        __ptext8 0A1B  
                                      __ptext9 0AF7                               ?_JSN_GetLastTrig 0070  
                                    _T1CONbits 001B                          _OSCILLATOR_Initialize 0ADF  
                                    _T2CONbits 001F                                      _T3CONbits 0413  
                           _sameSens@ccp2$F857 00D7                             _sameSens@ccp3$F978 00D6  
                     ??_PIN_MANAGER_Initialize 0020                                        _ticksUp 00CC  
                              _JSN_Sensor_Init 03DA                                _JSN_Sensor_Trig 06FC  
                                      clrloop0 07FB                           end_of_initialization 00AE  
                             ?_TMR3_WriteTimer 0020          __end_of_EUSART_SetOverrunErrorHandler 0A9B  
                _EUSART_SetOverrunErrorHandler 0A92                                        fputc@fp 0025  
                                      fputs@fp 002B                              _EUSART_Initialize 0FBA  
                              ___lldiv@divisor 002C                                ___lldiv@counter 0039  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 0264  
                            ?_CCP3_SetCallBack 0020                          TMR0_ReadTimer@readVal 0021  
                 __end_of_CCP1_DefaultCallBack 0E80                             ??_CCP3_SetCallBack 0022  
                                   ??_vfprintf 0067                                 _TMR0_ReadTimer 0A3E  
                                i1_TMR3_Reload 0A5C                                        strlen@a 0023  
                                      strlen@s 0024                            ??_EUSART_Initialize 0022  
                             ??_WDT_Initialize 0020                 ??_EUSART_SetTxInterruptHandler 0022  
                     _TMR0_SetInterruptHandler 0AAD                                      _PORTAbits 000C  
                                    _PORTBbits 000D                                      _PORTCbits 000E  
                                    _TRISAbits 008C                                      _TRISBbits 008D  
                                    _TRISCbits 008E                        TMR2_WriteTimer@timerVal 0020  
                    __end_of_EUSART_Initialize 1000                                    _CCP4CONbits 0317  
                              ??_FRT_GetMicros 002A                                ??_FRT_GetMillis 0024  
                       __end_of_TMR0_ReadTimer 0A45                              ??_SpeakerTone_Off 0022  
                              ??_FRT_IncMicros 0070                                 __end_of_SetPin 03DA  
                              ??_FRT_IncMillis 0070                                 ?i1_TMR3_Reload 0070  
                               __end_of___lmul 0E09             __end_of_EUSART_DefaultErrorHandler 0A17  
                   _EUSART_DefaultErrorHandler 0A13                                    vfpfcnvrt@ap 0055  
                                  vfpfcnvrt@fp 0063                                 __end_of___wmul 0CD6  
                                 _EUSART_Write 0D77                        __end_of_JSN_Sensor_Init 047B  
                       _JSN_Sensor_GetDistance 0F35                         ?_OSCILLATOR_Initialize 0070  
                      __end_of_JSN_Sensor_Trig 0755                   __end_of_CCP2_DefaultCallBack 0EBC  
                               __end_of_printf 0BAD                                 __end_of_strlen 0CB6  
                          start_initialization 0092                                ___lodiv@divisor 0020  
                              ___lodiv@counter 0039                               _SpeakerTone_Init 0C66  
               CCP2_SetCallBack@customCallBack 0020                                      SetPin@pin 0023  
                                  __end_of_pad 07AE                                 _TMR2_StopTimer 0A0D  
                            ??_CCP1_CaptureISR 0077   EUSART_SetRxInterruptHandler@interruptHandler 0020  
 EUSART_SetTxInterruptHandler@interruptHandler 0020                                    putch@txData 0022  
                               _TMR3_StopTimer 0A10                              _MotorControl_Init 0B04  
                            _ticksUp@ccp2$F855 00C4                              _ticksUp@ccp3$F976 00BC  
                           ?_MotorControl_Init 0070                 ?_EUSART_SetOverrunErrorHandler 0020  
                                     ??_SetPin 0021                                    vfprintf@fmt 0064  
                   _EUSART_FramingErrorHandler 00B0                               ??_PMD_Initialize 0020  
                              ?_TMR0_ReadTimer 0070                                       ??___lmul 0028  
                                     ??___wmul 0024                              ??_CCP2_CaptureISR 0077  
                       _EUSART_SetErrorHandler 0A80                         JSN_Sensor_Init@echoPin 00DE  
                                  _CCPTMRSbits 029F                            ??_MotorControl_Init 0021  
                                     ??_printf 00D9                                       ??_strlen 0022  
                        CCP1_CaptureISR@module 0078                    __end_of_EUSART_Transmit_ISR 0CF8  
                       __end_of_TMR2_StopTimer 0A10                                    __pbssCOMMON 007A  
                                    ___latbits 0002                         JSN_Sensor_Init@trigPin 00DD  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00D9  
                            ??_CCP3_CaptureISR 0077                   __end_of_CCP3_DefaultCallBack 0EF8  
                       __end_of_TMR3_StopTimer 0A13                           _CCP1_DefaultCallBack 0E44  
                    __end_of_MotorControl_Init 0B12                     __end_of_EUSART_Receive_ISR 0F35  
             _EUSART_RxDefaultInterruptHandler 00B2                          _TMR0_InterruptHandler 014A  
                            ??_CCP1_Initialize 0022                                 _dutyCycle10bit 00A8  
                                     ?_ReadPin 0070                                    WritePin@pin 0023  
                                  WritePin@val 0020                   __end_of_EUSART_RxDataHandler 0C9B  
                       _PIN_MANAGER_Initialize 0E09                                ??i1_TMR3_Reload 0072  
            CCP3_DefaultCallBack@capturedValue 0073                                       ?___lldiv 002C  
                                     ?___lodiv 0020                                       ?___lomod 0020  
                                 _eusartRxHead 007B                                   _eusartTxHead 007C  
                                 _eusartRxTail 007A                                   _eusartTxTail 00D5  
                 ??_INTERRUPT_InterruptManager 007A                               ?_JSN_Sensor_Init 00DB  
                             ?_JSN_Sensor_Trig 0038                        _eusartTxBufferRemaining 00D4  
                              ___lomod@divisor 0020                                       _BAUD1CON 019F  
                            ??_CCP2_Initialize 0022                                ___lomod@counter 0031  
                              ?_TMR2_StopTimer 0070                                  _TMR0_CallBack 0A30  
                        ?_CCP1_DefaultCallBack 0073                                ?_TMR3_StopTimer 0070  
                            ??_CCP4_CompareISR 0070                                 _eusartRxBuffer 0128  
                            ??_TMR0_Initialize 0022                                 _eusartTxBuffer 0130  
                               ___wmul@product 0024                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0020                                       _LATBbits 010D  
                                     _LATCbits 010E                                      clear_ram0 07FA  
                            ??_CCP3_Initialize 0022                                       _PIE0bits 0090  
                                     _PIE1bits 0091                                       _PIE3bits 0093  
                                     _PIE4bits 0094                              _eusartRxLastError 00D2  
                         _CCP2_DefaultCallBack 0E80                     ??_TMR0_SetInterruptHandler 0022  
                                     _PIR0bits 0010                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0022                                      _ticksDown 00CA  
                                     _PIR3bits 0013                                       _PIR4bits 0014  
                                     _TMR0_ISR 0B20      __end_of_EUSART_DefaultOverrunErrorHandler 0A1B  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 0A17                                       _TMR1_ISR 0AD4  
                                ??_TMR3_Reload 0022                                       _TMR3_ISR 0A2A  
                                    _vfpfcnvrt 01A1                              ??_TMR1_Initialize 0020  
                            ___wmul@multiplier 0020                              ??_CCP4_Initialize 0020  
                               ?_TMR0_CallBack 0070                              ___lmul@multiplier 0020  
                              _SpeakerTone_Off 0A45                                       SetPin@io 0020  
                            i1_TMR3_WriteTimer 0B42                              ??_TMR2_Initialize 0020  
                           ?i1_TMR3_WriteTimer 0070                        JSN_SensorGetPtr@sensNum 0022  
                        ?_CCP2_DefaultCallBack 0073                               _MotorControl_Off 0A4C  
                        JSN_Sensor_Init@Sensor 00DB                       __end_of_SpeakerTone_Init 0C80  
                                   vfprintf@ap 0066                                     vfprintf@fp 0069  
                          ??i1_TMR3_WriteTimer 0072                        ?_JSN_Sensor_GetDistance 003A  
                      ??_OSCILLATOR_Initialize 0020                            _EUSART_ErrorHandler 00AC  
                         _CCP3_DefaultCallBack 0EBC                    ?_EUSART_DefaultErrorHandler 0070  
                                   ?_vfpfcnvrt 0054                                _CCP1_CaptureISR 0BAD  
                                     _WritePin 0264                              ??_PWM5_Initialize 0020  
                            ??_TMR3_Initialize 0020                            __end_of_TMR3_Reload 0AF7  
                                   _T0CON0bits 0017                               _CCP1_SetCallBack 0A65  
                         _EUSART_RxDataHandler 0C80                 CCP1_SetCallBack@customCallBack 0020  
                                     __ptext10 0A54                                       __ptext11 0B75  
                                     __ptext20 0A9B                                       __ptext12 0BEF  
                                     __ptext21 0A92                                       __ptext13 0AAD  
                                     __ptext30 0A65                                       __ptext22 0A89  
                                     __ptext14 0B12                                       __ptext31 0B04  
                                     __ptext23 0A80                                       __ptext15 0ACA  
                                     __ptext40 03DA                                       __ptext32 0A4C  
                                     __ptext24 0B64                                       __ptext16 0E09  
                                     __ptext41 0B98                                       __ptext33 0A1F  
                                     __ptext25 0C35                                       __ptext17 0ADF  
                                     __ptext50 0D77                                       __ptext42 0DA4  
                                     __ptext34 0A0D                                       __ptext26 0A77  
                                     __ptext18 0FBA                                       __ptext51 0630  
                                     __ptext43 01A1                                       __ptext35 06FC  
                                     __ptext27 0C1D                                       __ptext19 0AA4  
                                     __ptext52 05AC                                       __ptext44 00B2  
                                     __ptext36 07AE                                       __ptext28 0A6E  
                                     __ptext61 0A2A                                       __ptext53 0264  
                                     __ptext45 0755                                       __ptext37 0CB6  
                                     __ptext29 0C05                                       __ptext70 0CD6  
                                     __ptext62 0A5C                                       __ptext54 031F  
                                     __ptext46 0C9B                                       __ptext38 0A3E  
                                     __ptext71 0EF8                                       __ptext63 0B42  
                                     __ptext55 0F35                                       __ptext47 0CF8  
                                     __ptext39 0002                                       __ptext80 0E80  
                                     __ptext72 0A17                                       __ptext64 0AD4  
                                     __ptext56 0DD5                                       __ptext48 0F77  
                                     __ptext81 0BAD                                       __ptext73 0A09  
                                     __ptext65 0B31                                       __ptext57 06A1  
                                     __ptext49 0A37                                       __ptext82 0E44  
                                     __ptext74 0A13                                       __ptext66 0B20  
                                     __ptext58 0D21                                       __ptext83 0515  
                                     __ptext75 0C80                                       __ptext67 0A30  
                                     __ptext59 0B53                                       __ptext84 0A24  
                                     __ptext76 0A0A                                       __ptext68 0AC0  
                                     __ptext77 0BD9                                       __ptext69 0AB6  
                                     __ptext78 0EBC                                       __ptext79 0BC3  
                       ??_CCP1_DefaultCallBack 0075                      __end_ofi1_TMR3_WriteTimer 0B53  
                                   _T3GCONbits 0414                        TMR3_WriteTimer@timerVal 0020  
                                     _currFreq 0148                                       _lastTrig 00D0  
                              _CCP2_CaptureISR 0BC3                               ??_TMR0_ReadTimer 0020  
                                     _sameSens 00D8                   _TMR0_DefaultInterruptHandler 0000  
                      ?_EUSART_SetErrorHandler 0020                            _ticksDown@ccp2$F856 00C2  
                          _ticksDown@ccp3$F977 00BA                               _JSN_SensorGetPtr 0D21  
                                   _PIC16_Init 0B86                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0020                 __end_of_JSN_Sensor_GetDistance 0F77  
                        __end_of_FRT_GetMicros 07FA                          __end_of_FRT_GetMillis 0B64  
                    i1TMR3_WriteTimer@timerVal 0070                                       int$flags 007E  
                        ?_CCP3_DefaultCallBack 0073                                       _vfprintf 0DA4  
           __end_of_INTERRUPT_InterruptManager 0090                     _INTERRUPT_InterruptManager 0004  
                        __end_of_FRT_IncMicros 0AC0                          __end_of_FRT_IncMillis 0ACA  
                                    printf@fmt 006C          __end_of_EUSART_SetFramingErrorHandler 0A92  
                _EUSART_SetFramingErrorHandler 0A89                              ??_TMR1_WriteTimer 0072  
                              _CCP3_CaptureISR 0BD9                                     _INTCONbits 000B  
                              ??_TMR0_CallBack 0070                               _CCP2_SetCallBack 0A6E  
                        ?_EUSART_RxDataHandler 0070                        __end_of_SpeakerTone_Off 0A4C  
                              _CCP1_Initialize 0C05                                       intlevel1 0000  
                                _CountCallBack 007D                              ??_TMR2_WriteTimer 0020  
                             ___lldiv@dividend 0030                        ?_PIN_MANAGER_Initialize 0070  
                       ??_CCP2_DefaultCallBack 0075                 __end_of_EUSART_SetErrorHandler 0A89  
                            ??_JSN_GetLastTrig 0072           __end_of_EUSART_SetRxInterruptHandler 0AA4  
                 _EUSART_SetRxInterruptHandler 0A9B                        __end_of_CCP1_CaptureISR 0BC3  
                              _CCP2_Initialize 0C1D                                       printf@ap 00DA  
                           _EUSART_Receive_ISR 0EF8  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                                  _TMR3_Reload 0AEB                                    ??_vfpfcnvrt 0056  
                             ??_TMR2_StopTimer 0020                              ??_TMR3_WriteTimer 0022  
                                __pstringtext1 1000                                  __pstringtext2 103A  
                                __pstringtext3 106C                                  __pstringtext4 0000  
                        CCP2_CaptureISR@module 0078                                _CCP4_CompareISR 0A0A  
                          ?_EUSART_Receive_ISR 0070                               ___lldiv@quotient 0035  
                              _TMR0_Initialize 0BEF                               ??_TMR3_StopTimer 0020  
                             _CCP3_SetCallBack 0A77                        __end_of_CCP2_CaptureISR 0BD9  
                          _TMR0_GetCallBackNum 0002                                _CCP3_Initialize 0C35  
                                   _TX1STAbits 019E                             EUSART_Write@txData 0021  
               __end_of_PIN_MANAGER_Initialize 0E44                                    _PWMTMRSbits 061F  
                         ??_EUSART_Receive_ISR 0071                          JSN_Sensor_Trig@Sensor 0038  
                              _TMR1_Initialize 0B75                                    ?_PIC16_Init 0070  
                         ?_TMR0_GetCallBackNum 0070                        __end_of_CCP3_CaptureISR 0BEF  
