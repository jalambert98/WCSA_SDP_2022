

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Jan 27 19:39:50 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	psect	text42,local,class=CODE,merge=1,delta=2
    54                           	psect	text43,local,class=CODE,merge=1,delta=2
    55                           	psect	text44,local,class=CODE,merge=1,delta=2
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 2.40
    61                           ; Generated 19/01/2022 GMT
    62                           ; 
    63                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F18345 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001C                     	;# 
   126  001D                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0097                     	;# 
   138  009B                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  0111                     	;# 
   148  0112                     	;# 
   149  0113                     	;# 
   150  0114                     	;# 
   151  0115                     	;# 
   152  0116                     	;# 
   153  0117                     	;# 
   154  0118                     	;# 
   155  0119                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  018E                     	;# 
   159  0197                     	;# 
   160  0199                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019D                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019E                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  020C                     	;# 
   186  020D                     	;# 
   187  020E                     	;# 
   188  0211                     	;# 
   189  0211                     	;# 
   190  0212                     	;# 
   191  0212                     	;# 
   192  0213                     	;# 
   193  0213                     	;# 
   194  0214                     	;# 
   195  0214                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0216                     	;# 
   201  0216                     	;# 
   202  0217                     	;# 
   203  0217                     	;# 
   204  0219                     	;# 
   205  021A                     	;# 
   206  021B                     	;# 
   207  021C                     	;# 
   208  021D                     	;# 
   209  021D                     	;# 
   210  021E                     	;# 
   211  021F                     	;# 
   212  028C                     	;# 
   213  028D                     	;# 
   214  028E                     	;# 
   215  0291                     	;# 
   216  0291                     	;# 
   217  0292                     	;# 
   218  0293                     	;# 
   219  0294                     	;# 
   220  0295                     	;# 
   221  0295                     	;# 
   222  0296                     	;# 
   223  0297                     	;# 
   224  0298                     	;# 
   225  029F                     	;# 
   226  030C                     	;# 
   227  030D                     	;# 
   228  030E                     	;# 
   229  0311                     	;# 
   230  0311                     	;# 
   231  0312                     	;# 
   232  0313                     	;# 
   233  0314                     	;# 
   234  0315                     	;# 
   235  0315                     	;# 
   236  0316                     	;# 
   237  0317                     	;# 
   238  0318                     	;# 
   239  038C                     	;# 
   240  038D                     	;# 
   241  038E                     	;# 
   242  0391                     	;# 
   243  0392                     	;# 
   244  0393                     	;# 
   245  0394                     	;# 
   246  0395                     	;# 
   247  0396                     	;# 
   248  0397                     	;# 
   249  0398                     	;# 
   250  0399                     	;# 
   251  039A                     	;# 
   252  039C                     	;# 
   253  039D                     	;# 
   254  039E                     	;# 
   255  039F                     	;# 
   256  0411                     	;# 
   257  0411                     	;# 
   258  0412                     	;# 
   259  0413                     	;# 
   260  0414                     	;# 
   261  0415                     	;# 
   262  0416                     	;# 
   263  0417                     	;# 
   264  0418                     	;# 
   265  0418                     	;# 
   266  0419                     	;# 
   267  041A                     	;# 
   268  041B                     	;# 
   269  041C                     	;# 
   270  041D                     	;# 
   271  041E                     	;# 
   272  041F                     	;# 
   273  0498                     	;# 
   274  0498                     	;# 
   275  0499                     	;# 
   276  049A                     	;# 
   277  049B                     	;# 
   278  049B                     	;# 
   279  049C                     	;# 
   280  049D                     	;# 
   281  049E                     	;# 
   282  049F                     	;# 
   283  0617                     	;# 
   284  0618                     	;# 
   285  0619                     	;# 
   286  0619                     	;# 
   287  061A                     	;# 
   288  061B                     	;# 
   289  061C                     	;# 
   290  061C                     	;# 
   291  061F                     	;# 
   292  0691                     	;# 
   293  0692                     	;# 
   294  0693                     	;# 
   295  0694                     	;# 
   296  0695                     	;# 
   297  0696                     	;# 
   298  0697                     	;# 
   299  0698                     	;# 
   300  0699                     	;# 
   301  0711                     	;# 
   302  0712                     	;# 
   303  0713                     	;# 
   304  0714                     	;# 
   305  0715                     	;# 
   306  0716                     	;# 
   307  0717                     	;# 
   308  0718                     	;# 
   309  0719                     	;# 
   310  0891                     	;# 
   311  0891                     	;# 
   312  0891                     	;# 
   313  0891                     	;# 
   314  0891                     	;# 
   315  0891                     	;# 
   316  0892                     	;# 
   317  0892                     	;# 
   318  0892                     	;# 
   319  0893                     	;# 
   320  0893                     	;# 
   321  0893                     	;# 
   322  0893                     	;# 
   323  0893                     	;# 
   324  0893                     	;# 
   325  0894                     	;# 
   326  0894                     	;# 
   327  0894                     	;# 
   328  0895                     	;# 
   329  0895                     	;# 
   330  0895                     	;# 
   331  0896                     	;# 
   332  0896                     	;# 
   333  0896                     	;# 
   334  089B                     	;# 
   335  0911                     	;# 
   336  0912                     	;# 
   337  0913                     	;# 
   338  0914                     	;# 
   339  0915                     	;# 
   340  0916                     	;# 
   341  0918                     	;# 
   342  0919                     	;# 
   343  091A                     	;# 
   344  091B                     	;# 
   345  091C                     	;# 
   346  091D                     	;# 
   347  091E                     	;# 
   348  091F                     	;# 
   349  0E0F                     	;# 
   350  0E10                     	;# 
   351  0E11                     	;# 
   352  0E12                     	;# 
   353  0E13                     	;# 
   354  0E14                     	;# 
   355  0E15                     	;# 
   356  0E16                     	;# 
   357  0E17                     	;# 
   358  0E18                     	;# 
   359  0E19                     	;# 
   360  0E1A                     	;# 
   361  0E1B                     	;# 
   362  0E1C                     	;# 
   363  0E1D                     	;# 
   364  0E1E                     	;# 
   365  0E1F                     	;# 
   366  0E20                     	;# 
   367  0E21                     	;# 
   368  0E22                     	;# 
   369  0E24                     	;# 
   370  0E25                     	;# 
   371  0E28                     	;# 
   372  0E29                     	;# 
   373  0E2A                     	;# 
   374  0E2B                     	;# 
   375  0E2C                     	;# 
   376  0E2D                     	;# 
   377  0E2E                     	;# 
   378  0E2F                     	;# 
   379  0E90                     	;# 
   380  0E91                     	;# 
   381  0E92                     	;# 
   382  0E94                     	;# 
   383  0E95                     	;# 
   384  0E9C                     	;# 
   385  0E9D                     	;# 
   386  0E9E                     	;# 
   387  0E9F                     	;# 
   388  0EA0                     	;# 
   389  0EA1                     	;# 
   390  0EA2                     	;# 
   391  0EA3                     	;# 
   392  0EA4                     	;# 
   393  0EA5                     	;# 
   394  0EA6                     	;# 
   395  0EA7                     	;# 
   396  0F0F                     	;# 
   397  0F10                     	;# 
   398  0F11                     	;# 
   399  0F12                     	;# 
   400  0F13                     	;# 
   401  0F14                     	;# 
   402  0F15                     	;# 
   403  0F16                     	;# 
   404  0F17                     	;# 
   405  0F18                     	;# 
   406  0F19                     	;# 
   407  0F1A                     	;# 
   408  0F1B                     	;# 
   409  0F1C                     	;# 
   410  0F1D                     	;# 
   411  0F1E                     	;# 
   412  0F1F                     	;# 
   413  0F20                     	;# 
   414  0F21                     	;# 
   415  0F22                     	;# 
   416  0F23                     	;# 
   417  0F24                     	;# 
   418  0F25                     	;# 
   419  0F26                     	;# 
   420  0F27                     	;# 
   421  0F28                     	;# 
   422  0F29                     	;# 
   423  0F2A                     	;# 
   424  0F2B                     	;# 
   425  0F2C                     	;# 
   426  0F2D                     	;# 
   427  0F2E                     	;# 
   428  0F2F                     	;# 
   429  0F30                     	;# 
   430  0F31                     	;# 
   431  0F32                     	;# 
   432  0F33                     	;# 
   433  0F34                     	;# 
   434  0F35                     	;# 
   435  0F36                     	;# 
   436  0F37                     	;# 
   437  0FE4                     	;# 
   438  0FE5                     	;# 
   439  0FE6                     	;# 
   440  0FE7                     	;# 
   441  0FE8                     	;# 
   442  0FE9                     	;# 
   443  0FEA                     	;# 
   444  0FEB                     	;# 
   445  0FED                     	;# 
   446  0FEE                     	;# 
   447  0FEF                     	;# 
   448  0000                     	;# 
   449  0001                     	;# 
   450  0002                     	;# 
   451  0003                     	;# 
   452  0004                     	;# 
   453  0005                     	;# 
   454  0006                     	;# 
   455  0007                     	;# 
   456  0008                     	;# 
   457  0009                     	;# 
   458  000A                     	;# 
   459  000B                     	;# 
   460  000C                     	;# 
   461  000D                     	;# 
   462  000E                     	;# 
   463  0010                     	;# 
   464  0011                     	;# 
   465  0012                     	;# 
   466  0013                     	;# 
   467  0014                     	;# 
   468  0015                     	;# 
   469  0015                     	;# 
   470  0016                     	;# 
   471  0016                     	;# 
   472  0017                     	;# 
   473  0018                     	;# 
   474  0019                     	;# 
   475  0019                     	;# 
   476  001A                     	;# 
   477  001B                     	;# 
   478  001C                     	;# 
   479  001D                     	;# 
   480  001E                     	;# 
   481  001F                     	;# 
   482  008C                     	;# 
   483  008D                     	;# 
   484  008E                     	;# 
   485  0090                     	;# 
   486  0091                     	;# 
   487  0092                     	;# 
   488  0093                     	;# 
   489  0094                     	;# 
   490  0097                     	;# 
   491  009B                     	;# 
   492  009B                     	;# 
   493  009C                     	;# 
   494  009D                     	;# 
   495  009E                     	;# 
   496  009F                     	;# 
   497  010C                     	;# 
   498  010D                     	;# 
   499  010E                     	;# 
   500  0111                     	;# 
   501  0112                     	;# 
   502  0113                     	;# 
   503  0114                     	;# 
   504  0115                     	;# 
   505  0116                     	;# 
   506  0117                     	;# 
   507  0118                     	;# 
   508  0119                     	;# 
   509  018C                     	;# 
   510  018D                     	;# 
   511  018E                     	;# 
   512  0197                     	;# 
   513  0199                     	;# 
   514  0199                     	;# 
   515  0199                     	;# 
   516  019A                     	;# 
   517  019A                     	;# 
   518  019A                     	;# 
   519  019B                     	;# 
   520  019B                     	;# 
   521  019B                     	;# 
   522  019B                     	;# 
   523  019B                     	;# 
   524  019C                     	;# 
   525  019C                     	;# 
   526  019C                     	;# 
   527  019D                     	;# 
   528  019D                     	;# 
   529  019D                     	;# 
   530  019E                     	;# 
   531  019E                     	;# 
   532  019E                     	;# 
   533  019F                     	;# 
   534  019F                     	;# 
   535  019F                     	;# 
   536  019F                     	;# 
   537  019F                     	;# 
   538  020C                     	;# 
   539  020D                     	;# 
   540  020E                     	;# 
   541  0211                     	;# 
   542  0211                     	;# 
   543  0212                     	;# 
   544  0212                     	;# 
   545  0213                     	;# 
   546  0213                     	;# 
   547  0214                     	;# 
   548  0214                     	;# 
   549  0215                     	;# 
   550  0215                     	;# 
   551  0215                     	;# 
   552  0215                     	;# 
   553  0216                     	;# 
   554  0216                     	;# 
   555  0217                     	;# 
   556  0217                     	;# 
   557  0219                     	;# 
   558  021A                     	;# 
   559  021B                     	;# 
   560  021C                     	;# 
   561  021D                     	;# 
   562  021D                     	;# 
   563  021E                     	;# 
   564  021F                     	;# 
   565  028C                     	;# 
   566  028D                     	;# 
   567  028E                     	;# 
   568  0291                     	;# 
   569  0291                     	;# 
   570  0292                     	;# 
   571  0293                     	;# 
   572  0294                     	;# 
   573  0295                     	;# 
   574  0295                     	;# 
   575  0296                     	;# 
   576  0297                     	;# 
   577  0298                     	;# 
   578  029F                     	;# 
   579  030C                     	;# 
   580  030D                     	;# 
   581  030E                     	;# 
   582  0311                     	;# 
   583  0311                     	;# 
   584  0312                     	;# 
   585  0313                     	;# 
   586  0314                     	;# 
   587  0315                     	;# 
   588  0315                     	;# 
   589  0316                     	;# 
   590  0317                     	;# 
   591  0318                     	;# 
   592  038C                     	;# 
   593  038D                     	;# 
   594  038E                     	;# 
   595  0391                     	;# 
   596  0392                     	;# 
   597  0393                     	;# 
   598  0394                     	;# 
   599  0395                     	;# 
   600  0396                     	;# 
   601  0397                     	;# 
   602  0398                     	;# 
   603  0399                     	;# 
   604  039A                     	;# 
   605  039C                     	;# 
   606  039D                     	;# 
   607  039E                     	;# 
   608  039F                     	;# 
   609  0411                     	;# 
   610  0411                     	;# 
   611  0412                     	;# 
   612  0413                     	;# 
   613  0414                     	;# 
   614  0415                     	;# 
   615  0416                     	;# 
   616  0417                     	;# 
   617  0418                     	;# 
   618  0418                     	;# 
   619  0419                     	;# 
   620  041A                     	;# 
   621  041B                     	;# 
   622  041C                     	;# 
   623  041D                     	;# 
   624  041E                     	;# 
   625  041F                     	;# 
   626  0498                     	;# 
   627  0498                     	;# 
   628  0499                     	;# 
   629  049A                     	;# 
   630  049B                     	;# 
   631  049B                     	;# 
   632  049C                     	;# 
   633  049D                     	;# 
   634  049E                     	;# 
   635  049F                     	;# 
   636  0617                     	;# 
   637  0618                     	;# 
   638  0619                     	;# 
   639  0619                     	;# 
   640  061A                     	;# 
   641  061B                     	;# 
   642  061C                     	;# 
   643  061C                     	;# 
   644  061F                     	;# 
   645  0691                     	;# 
   646  0692                     	;# 
   647  0693                     	;# 
   648  0694                     	;# 
   649  0695                     	;# 
   650  0696                     	;# 
   651  0697                     	;# 
   652  0698                     	;# 
   653  0699                     	;# 
   654  0711                     	;# 
   655  0712                     	;# 
   656  0713                     	;# 
   657  0714                     	;# 
   658  0715                     	;# 
   659  0716                     	;# 
   660  0717                     	;# 
   661  0718                     	;# 
   662  0719                     	;# 
   663  0891                     	;# 
   664  0891                     	;# 
   665  0891                     	;# 
   666  0891                     	;# 
   667  0891                     	;# 
   668  0891                     	;# 
   669  0892                     	;# 
   670  0892                     	;# 
   671  0892                     	;# 
   672  0893                     	;# 
   673  0893                     	;# 
   674  0893                     	;# 
   675  0893                     	;# 
   676  0893                     	;# 
   677  0893                     	;# 
   678  0894                     	;# 
   679  0894                     	;# 
   680  0894                     	;# 
   681  0895                     	;# 
   682  0895                     	;# 
   683  0895                     	;# 
   684  0896                     	;# 
   685  0896                     	;# 
   686  0896                     	;# 
   687  089B                     	;# 
   688  0911                     	;# 
   689  0912                     	;# 
   690  0913                     	;# 
   691  0914                     	;# 
   692  0915                     	;# 
   693  0916                     	;# 
   694  0918                     	;# 
   695  0919                     	;# 
   696  091A                     	;# 
   697  091B                     	;# 
   698  091C                     	;# 
   699  091D                     	;# 
   700  091E                     	;# 
   701  091F                     	;# 
   702  0E0F                     	;# 
   703  0E10                     	;# 
   704  0E11                     	;# 
   705  0E12                     	;# 
   706  0E13                     	;# 
   707  0E14                     	;# 
   708  0E15                     	;# 
   709  0E16                     	;# 
   710  0E17                     	;# 
   711  0E18                     	;# 
   712  0E19                     	;# 
   713  0E1A                     	;# 
   714  0E1B                     	;# 
   715  0E1C                     	;# 
   716  0E1D                     	;# 
   717  0E1E                     	;# 
   718  0E1F                     	;# 
   719  0E20                     	;# 
   720  0E21                     	;# 
   721  0E22                     	;# 
   722  0E24                     	;# 
   723  0E25                     	;# 
   724  0E28                     	;# 
   725  0E29                     	;# 
   726  0E2A                     	;# 
   727  0E2B                     	;# 
   728  0E2C                     	;# 
   729  0E2D                     	;# 
   730  0E2E                     	;# 
   731  0E2F                     	;# 
   732  0E90                     	;# 
   733  0E91                     	;# 
   734  0E92                     	;# 
   735  0E94                     	;# 
   736  0E95                     	;# 
   737  0E9C                     	;# 
   738  0E9D                     	;# 
   739  0E9E                     	;# 
   740  0E9F                     	;# 
   741  0EA0                     	;# 
   742  0EA1                     	;# 
   743  0EA2                     	;# 
   744  0EA3                     	;# 
   745  0EA4                     	;# 
   746  0EA5                     	;# 
   747  0EA6                     	;# 
   748  0EA7                     	;# 
   749  0F0F                     	;# 
   750  0F10                     	;# 
   751  0F11                     	;# 
   752  0F12                     	;# 
   753  0F13                     	;# 
   754  0F14                     	;# 
   755  0F15                     	;# 
   756  0F16                     	;# 
   757  0F17                     	;# 
   758  0F18                     	;# 
   759  0F19                     	;# 
   760  0F1A                     	;# 
   761  0F1B                     	;# 
   762  0F1C                     	;# 
   763  0F1D                     	;# 
   764  0F1E                     	;# 
   765  0F1F                     	;# 
   766  0F20                     	;# 
   767  0F21                     	;# 
   768  0F22                     	;# 
   769  0F23                     	;# 
   770  0F24                     	;# 
   771  0F25                     	;# 
   772  0F26                     	;# 
   773  0F27                     	;# 
   774  0F28                     	;# 
   775  0F29                     	;# 
   776  0F2A                     	;# 
   777  0F2B                     	;# 
   778  0F2C                     	;# 
   779  0F2D                     	;# 
   780  0F2E                     	;# 
   781  0F2F                     	;# 
   782  0F30                     	;# 
   783  0F31                     	;# 
   784  0F32                     	;# 
   785  0F33                     	;# 
   786  0F34                     	;# 
   787  0F35                     	;# 
   788  0F36                     	;# 
   789  0F37                     	;# 
   790  0FE4                     	;# 
   791  0FE5                     	;# 
   792  0FE6                     	;# 
   793  0FE7                     	;# 
   794  0FE8                     	;# 
   795  0FE9                     	;# 
   796  0FEA                     	;# 
   797  0FEB                     	;# 
   798  0FED                     	;# 
   799  0FEE                     	;# 
   800  0FEF                     	;# 
   801  0000                     	;# 
   802  0001                     	;# 
   803  0002                     	;# 
   804  0003                     	;# 
   805  0004                     	;# 
   806  0005                     	;# 
   807  0006                     	;# 
   808  0007                     	;# 
   809  0008                     	;# 
   810  0009                     	;# 
   811  000A                     	;# 
   812  000B                     	;# 
   813  000C                     	;# 
   814  000D                     	;# 
   815  000E                     	;# 
   816  0010                     	;# 
   817  0011                     	;# 
   818  0012                     	;# 
   819  0013                     	;# 
   820  0014                     	;# 
   821  0015                     	;# 
   822  0015                     	;# 
   823  0016                     	;# 
   824  0016                     	;# 
   825  0017                     	;# 
   826  0018                     	;# 
   827  0019                     	;# 
   828  0019                     	;# 
   829  001A                     	;# 
   830  001B                     	;# 
   831  001C                     	;# 
   832  001D                     	;# 
   833  001E                     	;# 
   834  001F                     	;# 
   835  008C                     	;# 
   836  008D                     	;# 
   837  008E                     	;# 
   838  0090                     	;# 
   839  0091                     	;# 
   840  0092                     	;# 
   841  0093                     	;# 
   842  0094                     	;# 
   843  0097                     	;# 
   844  009B                     	;# 
   845  009B                     	;# 
   846  009C                     	;# 
   847  009D                     	;# 
   848  009E                     	;# 
   849  009F                     	;# 
   850  010C                     	;# 
   851  010D                     	;# 
   852  010E                     	;# 
   853  0111                     	;# 
   854  0112                     	;# 
   855  0113                     	;# 
   856  0114                     	;# 
   857  0115                     	;# 
   858  0116                     	;# 
   859  0117                     	;# 
   860  0118                     	;# 
   861  0119                     	;# 
   862  018C                     	;# 
   863  018D                     	;# 
   864  018E                     	;# 
   865  0197                     	;# 
   866  0199                     	;# 
   867  0199                     	;# 
   868  0199                     	;# 
   869  019A                     	;# 
   870  019A                     	;# 
   871  019A                     	;# 
   872  019B                     	;# 
   873  019B                     	;# 
   874  019B                     	;# 
   875  019B                     	;# 
   876  019B                     	;# 
   877  019C                     	;# 
   878  019C                     	;# 
   879  019C                     	;# 
   880  019D                     	;# 
   881  019D                     	;# 
   882  019D                     	;# 
   883  019E                     	;# 
   884  019E                     	;# 
   885  019E                     	;# 
   886  019F                     	;# 
   887  019F                     	;# 
   888  019F                     	;# 
   889  019F                     	;# 
   890  019F                     	;# 
   891  020C                     	;# 
   892  020D                     	;# 
   893  020E                     	;# 
   894  0211                     	;# 
   895  0211                     	;# 
   896  0212                     	;# 
   897  0212                     	;# 
   898  0213                     	;# 
   899  0213                     	;# 
   900  0214                     	;# 
   901  0214                     	;# 
   902  0215                     	;# 
   903  0215                     	;# 
   904  0215                     	;# 
   905  0215                     	;# 
   906  0216                     	;# 
   907  0216                     	;# 
   908  0217                     	;# 
   909  0217                     	;# 
   910  0219                     	;# 
   911  021A                     	;# 
   912  021B                     	;# 
   913  021C                     	;# 
   914  021D                     	;# 
   915  021D                     	;# 
   916  021E                     	;# 
   917  021F                     	;# 
   918  028C                     	;# 
   919  028D                     	;# 
   920  028E                     	;# 
   921  0291                     	;# 
   922  0291                     	;# 
   923  0292                     	;# 
   924  0293                     	;# 
   925  0294                     	;# 
   926  0295                     	;# 
   927  0295                     	;# 
   928  0296                     	;# 
   929  0297                     	;# 
   930  0298                     	;# 
   931  029F                     	;# 
   932  030C                     	;# 
   933  030D                     	;# 
   934  030E                     	;# 
   935  0311                     	;# 
   936  0311                     	;# 
   937  0312                     	;# 
   938  0313                     	;# 
   939  0314                     	;# 
   940  0315                     	;# 
   941  0315                     	;# 
   942  0316                     	;# 
   943  0317                     	;# 
   944  0318                     	;# 
   945  038C                     	;# 
   946  038D                     	;# 
   947  038E                     	;# 
   948  0391                     	;# 
   949  0392                     	;# 
   950  0393                     	;# 
   951  0394                     	;# 
   952  0395                     	;# 
   953  0396                     	;# 
   954  0397                     	;# 
   955  0398                     	;# 
   956  0399                     	;# 
   957  039A                     	;# 
   958  039C                     	;# 
   959  039D                     	;# 
   960  039E                     	;# 
   961  039F                     	;# 
   962  0411                     	;# 
   963  0411                     	;# 
   964  0412                     	;# 
   965  0413                     	;# 
   966  0414                     	;# 
   967  0415                     	;# 
   968  0416                     	;# 
   969  0417                     	;# 
   970  0418                     	;# 
   971  0418                     	;# 
   972  0419                     	;# 
   973  041A                     	;# 
   974  041B                     	;# 
   975  041C                     	;# 
   976  041D                     	;# 
   977  041E                     	;# 
   978  041F                     	;# 
   979  0498                     	;# 
   980  0498                     	;# 
   981  0499                     	;# 
   982  049A                     	;# 
   983  049B                     	;# 
   984  049B                     	;# 
   985  049C                     	;# 
   986  049D                     	;# 
   987  049E                     	;# 
   988  049F                     	;# 
   989  0617                     	;# 
   990  0618                     	;# 
   991  0619                     	;# 
   992  0619                     	;# 
   993  061A                     	;# 
   994  061B                     	;# 
   995  061C                     	;# 
   996  061C                     	;# 
   997  061F                     	;# 
   998  0691                     	;# 
   999  0692                     	;# 
  1000  0693                     	;# 
  1001  0694                     	;# 
  1002  0695                     	;# 
  1003  0696                     	;# 
  1004  0697                     	;# 
  1005  0698                     	;# 
  1006  0699                     	;# 
  1007  0711                     	;# 
  1008  0712                     	;# 
  1009  0713                     	;# 
  1010  0714                     	;# 
  1011  0715                     	;# 
  1012  0716                     	;# 
  1013  0717                     	;# 
  1014  0718                     	;# 
  1015  0719                     	;# 
  1016  0891                     	;# 
  1017  0891                     	;# 
  1018  0891                     	;# 
  1019  0891                     	;# 
  1020  0891                     	;# 
  1021  0891                     	;# 
  1022  0892                     	;# 
  1023  0892                     	;# 
  1024  0892                     	;# 
  1025  0893                     	;# 
  1026  0893                     	;# 
  1027  0893                     	;# 
  1028  0893                     	;# 
  1029  0893                     	;# 
  1030  0893                     	;# 
  1031  0894                     	;# 
  1032  0894                     	;# 
  1033  0894                     	;# 
  1034  0895                     	;# 
  1035  0895                     	;# 
  1036  0895                     	;# 
  1037  0896                     	;# 
  1038  0896                     	;# 
  1039  0896                     	;# 
  1040  089B                     	;# 
  1041  0911                     	;# 
  1042  0912                     	;# 
  1043  0913                     	;# 
  1044  0914                     	;# 
  1045  0915                     	;# 
  1046  0916                     	;# 
  1047  0918                     	;# 
  1048  0919                     	;# 
  1049  091A                     	;# 
  1050  091B                     	;# 
  1051  091C                     	;# 
  1052  091D                     	;# 
  1053  091E                     	;# 
  1054  091F                     	;# 
  1055  0E0F                     	;# 
  1056  0E10                     	;# 
  1057  0E11                     	;# 
  1058  0E12                     	;# 
  1059  0E13                     	;# 
  1060  0E14                     	;# 
  1061  0E15                     	;# 
  1062  0E16                     	;# 
  1063  0E17                     	;# 
  1064  0E18                     	;# 
  1065  0E19                     	;# 
  1066  0E1A                     	;# 
  1067  0E1B                     	;# 
  1068  0E1C                     	;# 
  1069  0E1D                     	;# 
  1070  0E1E                     	;# 
  1071  0E1F                     	;# 
  1072  0E20                     	;# 
  1073  0E21                     	;# 
  1074  0E22                     	;# 
  1075  0E24                     	;# 
  1076  0E25                     	;# 
  1077  0E28                     	;# 
  1078  0E29                     	;# 
  1079  0E2A                     	;# 
  1080  0E2B                     	;# 
  1081  0E2C                     	;# 
  1082  0E2D                     	;# 
  1083  0E2E                     	;# 
  1084  0E2F                     	;# 
  1085  0E90                     	;# 
  1086  0E91                     	;# 
  1087  0E92                     	;# 
  1088  0E94                     	;# 
  1089  0E95                     	;# 
  1090  0E9C                     	;# 
  1091  0E9D                     	;# 
  1092  0E9E                     	;# 
  1093  0E9F                     	;# 
  1094  0EA0                     	;# 
  1095  0EA1                     	;# 
  1096  0EA2                     	;# 
  1097  0EA3                     	;# 
  1098  0EA4                     	;# 
  1099  0EA5                     	;# 
  1100  0EA6                     	;# 
  1101  0EA7                     	;# 
  1102  0F0F                     	;# 
  1103  0F10                     	;# 
  1104  0F11                     	;# 
  1105  0F12                     	;# 
  1106  0F13                     	;# 
  1107  0F14                     	;# 
  1108  0F15                     	;# 
  1109  0F16                     	;# 
  1110  0F17                     	;# 
  1111  0F18                     	;# 
  1112  0F19                     	;# 
  1113  0F1A                     	;# 
  1114  0F1B                     	;# 
  1115  0F1C                     	;# 
  1116  0F1D                     	;# 
  1117  0F1E                     	;# 
  1118  0F1F                     	;# 
  1119  0F20                     	;# 
  1120  0F21                     	;# 
  1121  0F22                     	;# 
  1122  0F23                     	;# 
  1123  0F24                     	;# 
  1124  0F25                     	;# 
  1125  0F26                     	;# 
  1126  0F27                     	;# 
  1127  0F28                     	;# 
  1128  0F29                     	;# 
  1129  0F2A                     	;# 
  1130  0F2B                     	;# 
  1131  0F2C                     	;# 
  1132  0F2D                     	;# 
  1133  0F2E                     	;# 
  1134  0F2F                     	;# 
  1135  0F30                     	;# 
  1136  0F31                     	;# 
  1137  0F32                     	;# 
  1138  0F33                     	;# 
  1139  0F34                     	;# 
  1140  0F35                     	;# 
  1141  0F36                     	;# 
  1142  0F37                     	;# 
  1143  0FE4                     	;# 
  1144  0FE5                     	;# 
  1145  0FE6                     	;# 
  1146  0FE7                     	;# 
  1147  0FE8                     	;# 
  1148  0FE9                     	;# 
  1149  0FEA                     	;# 
  1150  0FEB                     	;# 
  1151  0FED                     	;# 
  1152  0FEE                     	;# 
  1153  0FEF                     	;# 
  1154  0000                     	;# 
  1155  0001                     	;# 
  1156  0002                     	;# 
  1157  0003                     	;# 
  1158  0004                     	;# 
  1159  0005                     	;# 
  1160  0006                     	;# 
  1161  0007                     	;# 
  1162  0008                     	;# 
  1163  0009                     	;# 
  1164  000A                     	;# 
  1165  000B                     	;# 
  1166  000C                     	;# 
  1167  000D                     	;# 
  1168  000E                     	;# 
  1169  0010                     	;# 
  1170  0011                     	;# 
  1171  0012                     	;# 
  1172  0013                     	;# 
  1173  0014                     	;# 
  1174  0015                     	;# 
  1175  0015                     	;# 
  1176  0016                     	;# 
  1177  0016                     	;# 
  1178  0017                     	;# 
  1179  0018                     	;# 
  1180  0019                     	;# 
  1181  0019                     	;# 
  1182  001A                     	;# 
  1183  001B                     	;# 
  1184  001C                     	;# 
  1185  001D                     	;# 
  1186  001E                     	;# 
  1187  001F                     	;# 
  1188  008C                     	;# 
  1189  008D                     	;# 
  1190  008E                     	;# 
  1191  0090                     	;# 
  1192  0091                     	;# 
  1193  0092                     	;# 
  1194  0093                     	;# 
  1195  0094                     	;# 
  1196  0097                     	;# 
  1197  009B                     	;# 
  1198  009B                     	;# 
  1199  009C                     	;# 
  1200  009D                     	;# 
  1201  009E                     	;# 
  1202  009F                     	;# 
  1203  010C                     	;# 
  1204  010D                     	;# 
  1205  010E                     	;# 
  1206  0111                     	;# 
  1207  0112                     	;# 
  1208  0113                     	;# 
  1209  0114                     	;# 
  1210  0115                     	;# 
  1211  0116                     	;# 
  1212  0117                     	;# 
  1213  0118                     	;# 
  1214  0119                     	;# 
  1215  018C                     	;# 
  1216  018D                     	;# 
  1217  018E                     	;# 
  1218  0197                     	;# 
  1219  0199                     	;# 
  1220  0199                     	;# 
  1221  0199                     	;# 
  1222  019A                     	;# 
  1223  019A                     	;# 
  1224  019A                     	;# 
  1225  019B                     	;# 
  1226  019B                     	;# 
  1227  019B                     	;# 
  1228  019B                     	;# 
  1229  019B                     	;# 
  1230  019C                     	;# 
  1231  019C                     	;# 
  1232  019C                     	;# 
  1233  019D                     	;# 
  1234  019D                     	;# 
  1235  019D                     	;# 
  1236  019E                     	;# 
  1237  019E                     	;# 
  1238  019E                     	;# 
  1239  019F                     	;# 
  1240  019F                     	;# 
  1241  019F                     	;# 
  1242  019F                     	;# 
  1243  019F                     	;# 
  1244  020C                     	;# 
  1245  020D                     	;# 
  1246  020E                     	;# 
  1247  0211                     	;# 
  1248  0211                     	;# 
  1249  0212                     	;# 
  1250  0212                     	;# 
  1251  0213                     	;# 
  1252  0213                     	;# 
  1253  0214                     	;# 
  1254  0214                     	;# 
  1255  0215                     	;# 
  1256  0215                     	;# 
  1257  0215                     	;# 
  1258  0215                     	;# 
  1259  0216                     	;# 
  1260  0216                     	;# 
  1261  0217                     	;# 
  1262  0217                     	;# 
  1263  0219                     	;# 
  1264  021A                     	;# 
  1265  021B                     	;# 
  1266  021C                     	;# 
  1267  021D                     	;# 
  1268  021D                     	;# 
  1269  021E                     	;# 
  1270  021F                     	;# 
  1271  028C                     	;# 
  1272  028D                     	;# 
  1273  028E                     	;# 
  1274  0291                     	;# 
  1275  0291                     	;# 
  1276  0292                     	;# 
  1277  0293                     	;# 
  1278  0294                     	;# 
  1279  0295                     	;# 
  1280  0295                     	;# 
  1281  0296                     	;# 
  1282  0297                     	;# 
  1283  0298                     	;# 
  1284  029F                     	;# 
  1285  030C                     	;# 
  1286  030D                     	;# 
  1287  030E                     	;# 
  1288  0311                     	;# 
  1289  0311                     	;# 
  1290  0312                     	;# 
  1291  0313                     	;# 
  1292  0314                     	;# 
  1293  0315                     	;# 
  1294  0315                     	;# 
  1295  0316                     	;# 
  1296  0317                     	;# 
  1297  0318                     	;# 
  1298  038C                     	;# 
  1299  038D                     	;# 
  1300  038E                     	;# 
  1301  0391                     	;# 
  1302  0392                     	;# 
  1303  0393                     	;# 
  1304  0394                     	;# 
  1305  0395                     	;# 
  1306  0396                     	;# 
  1307  0397                     	;# 
  1308  0398                     	;# 
  1309  0399                     	;# 
  1310  039A                     	;# 
  1311  039C                     	;# 
  1312  039D                     	;# 
  1313  039E                     	;# 
  1314  039F                     	;# 
  1315  0411                     	;# 
  1316  0411                     	;# 
  1317  0412                     	;# 
  1318  0413                     	;# 
  1319  0414                     	;# 
  1320  0415                     	;# 
  1321  0416                     	;# 
  1322  0417                     	;# 
  1323  0418                     	;# 
  1324  0418                     	;# 
  1325  0419                     	;# 
  1326  041A                     	;# 
  1327  041B                     	;# 
  1328  041C                     	;# 
  1329  041D                     	;# 
  1330  041E                     	;# 
  1331  041F                     	;# 
  1332  0498                     	;# 
  1333  0498                     	;# 
  1334  0499                     	;# 
  1335  049A                     	;# 
  1336  049B                     	;# 
  1337  049B                     	;# 
  1338  049C                     	;# 
  1339  049D                     	;# 
  1340  049E                     	;# 
  1341  049F                     	;# 
  1342  0617                     	;# 
  1343  0618                     	;# 
  1344  0619                     	;# 
  1345  0619                     	;# 
  1346  061A                     	;# 
  1347  061B                     	;# 
  1348  061C                     	;# 
  1349  061C                     	;# 
  1350  061F                     	;# 
  1351  0691                     	;# 
  1352  0692                     	;# 
  1353  0693                     	;# 
  1354  0694                     	;# 
  1355  0695                     	;# 
  1356  0696                     	;# 
  1357  0697                     	;# 
  1358  0698                     	;# 
  1359  0699                     	;# 
  1360  0711                     	;# 
  1361  0712                     	;# 
  1362  0713                     	;# 
  1363  0714                     	;# 
  1364  0715                     	;# 
  1365  0716                     	;# 
  1366  0717                     	;# 
  1367  0718                     	;# 
  1368  0719                     	;# 
  1369  0891                     	;# 
  1370  0891                     	;# 
  1371  0891                     	;# 
  1372  0891                     	;# 
  1373  0891                     	;# 
  1374  0891                     	;# 
  1375  0892                     	;# 
  1376  0892                     	;# 
  1377  0892                     	;# 
  1378  0893                     	;# 
  1379  0893                     	;# 
  1380  0893                     	;# 
  1381  0893                     	;# 
  1382  0893                     	;# 
  1383  0893                     	;# 
  1384  0894                     	;# 
  1385  0894                     	;# 
  1386  0894                     	;# 
  1387  0895                     	;# 
  1388  0895                     	;# 
  1389  0895                     	;# 
  1390  0896                     	;# 
  1391  0896                     	;# 
  1392  0896                     	;# 
  1393  089B                     	;# 
  1394  0911                     	;# 
  1395  0912                     	;# 
  1396  0913                     	;# 
  1397  0914                     	;# 
  1398  0915                     	;# 
  1399  0916                     	;# 
  1400  0918                     	;# 
  1401  0919                     	;# 
  1402  091A                     	;# 
  1403  091B                     	;# 
  1404  091C                     	;# 
  1405  091D                     	;# 
  1406  091E                     	;# 
  1407  091F                     	;# 
  1408  0E0F                     	;# 
  1409  0E10                     	;# 
  1410  0E11                     	;# 
  1411  0E12                     	;# 
  1412  0E13                     	;# 
  1413  0E14                     	;# 
  1414  0E15                     	;# 
  1415  0E16                     	;# 
  1416  0E17                     	;# 
  1417  0E18                     	;# 
  1418  0E19                     	;# 
  1419  0E1A                     	;# 
  1420  0E1B                     	;# 
  1421  0E1C                     	;# 
  1422  0E1D                     	;# 
  1423  0E1E                     	;# 
  1424  0E1F                     	;# 
  1425  0E20                     	;# 
  1426  0E21                     	;# 
  1427  0E22                     	;# 
  1428  0E24                     	;# 
  1429  0E25                     	;# 
  1430  0E28                     	;# 
  1431  0E29                     	;# 
  1432  0E2A                     	;# 
  1433  0E2B                     	;# 
  1434  0E2C                     	;# 
  1435  0E2D                     	;# 
  1436  0E2E                     	;# 
  1437  0E2F                     	;# 
  1438  0E90                     	;# 
  1439  0E91                     	;# 
  1440  0E92                     	;# 
  1441  0E94                     	;# 
  1442  0E95                     	;# 
  1443  0E9C                     	;# 
  1444  0E9D                     	;# 
  1445  0E9E                     	;# 
  1446  0E9F                     	;# 
  1447  0EA0                     	;# 
  1448  0EA1                     	;# 
  1449  0EA2                     	;# 
  1450  0EA3                     	;# 
  1451  0EA4                     	;# 
  1452  0EA5                     	;# 
  1453  0EA6                     	;# 
  1454  0EA7                     	;# 
  1455  0F0F                     	;# 
  1456  0F10                     	;# 
  1457  0F11                     	;# 
  1458  0F12                     	;# 
  1459  0F13                     	;# 
  1460  0F14                     	;# 
  1461  0F15                     	;# 
  1462  0F16                     	;# 
  1463  0F17                     	;# 
  1464  0F18                     	;# 
  1465  0F19                     	;# 
  1466  0F1A                     	;# 
  1467  0F1B                     	;# 
  1468  0F1C                     	;# 
  1469  0F1D                     	;# 
  1470  0F1E                     	;# 
  1471  0F1F                     	;# 
  1472  0F20                     	;# 
  1473  0F21                     	;# 
  1474  0F22                     	;# 
  1475  0F23                     	;# 
  1476  0F24                     	;# 
  1477  0F25                     	;# 
  1478  0F26                     	;# 
  1479  0F27                     	;# 
  1480  0F28                     	;# 
  1481  0F29                     	;# 
  1482  0F2A                     	;# 
  1483  0F2B                     	;# 
  1484  0F2C                     	;# 
  1485  0F2D                     	;# 
  1486  0F2E                     	;# 
  1487  0F2F                     	;# 
  1488  0F30                     	;# 
  1489  0F31                     	;# 
  1490  0F32                     	;# 
  1491  0F33                     	;# 
  1492  0F34                     	;# 
  1493  0F35                     	;# 
  1494  0F36                     	;# 
  1495  0F37                     	;# 
  1496  0FE4                     	;# 
  1497  0FE5                     	;# 
  1498  0FE6                     	;# 
  1499  0FE7                     	;# 
  1500  0FE8                     	;# 
  1501  0FE9                     	;# 
  1502  0FEA                     	;# 
  1503  0FEB                     	;# 
  1504  0FED                     	;# 
  1505  0FEE                     	;# 
  1506  0FEF                     	;# 
  1507  0000                     	;# 
  1508  0001                     	;# 
  1509  0002                     	;# 
  1510  0003                     	;# 
  1511  0004                     	;# 
  1512  0005                     	;# 
  1513  0006                     	;# 
  1514  0007                     	;# 
  1515  0008                     	;# 
  1516  0009                     	;# 
  1517  000A                     	;# 
  1518  000B                     	;# 
  1519  000C                     	;# 
  1520  000D                     	;# 
  1521  000E                     	;# 
  1522  0010                     	;# 
  1523  0011                     	;# 
  1524  0012                     	;# 
  1525  0013                     	;# 
  1526  0014                     	;# 
  1527  0015                     	;# 
  1528  0015                     	;# 
  1529  0016                     	;# 
  1530  0016                     	;# 
  1531  0017                     	;# 
  1532  0018                     	;# 
  1533  0019                     	;# 
  1534  0019                     	;# 
  1535  001A                     	;# 
  1536  001B                     	;# 
  1537  001C                     	;# 
  1538  001D                     	;# 
  1539  001E                     	;# 
  1540  001F                     	;# 
  1541  008C                     	;# 
  1542  008D                     	;# 
  1543  008E                     	;# 
  1544  0090                     	;# 
  1545  0091                     	;# 
  1546  0092                     	;# 
  1547  0093                     	;# 
  1548  0094                     	;# 
  1549  0097                     	;# 
  1550  009B                     	;# 
  1551  009B                     	;# 
  1552  009C                     	;# 
  1553  009D                     	;# 
  1554  009E                     	;# 
  1555  009F                     	;# 
  1556  010C                     	;# 
  1557  010D                     	;# 
  1558  010E                     	;# 
  1559  0111                     	;# 
  1560  0112                     	;# 
  1561  0113                     	;# 
  1562  0114                     	;# 
  1563  0115                     	;# 
  1564  0116                     	;# 
  1565  0117                     	;# 
  1566  0118                     	;# 
  1567  0119                     	;# 
  1568  018C                     	;# 
  1569  018D                     	;# 
  1570  018E                     	;# 
  1571  0197                     	;# 
  1572  0199                     	;# 
  1573  0199                     	;# 
  1574  0199                     	;# 
  1575  019A                     	;# 
  1576  019A                     	;# 
  1577  019A                     	;# 
  1578  019B                     	;# 
  1579  019B                     	;# 
  1580  019B                     	;# 
  1581  019B                     	;# 
  1582  019B                     	;# 
  1583  019C                     	;# 
  1584  019C                     	;# 
  1585  019C                     	;# 
  1586  019D                     	;# 
  1587  019D                     	;# 
  1588  019D                     	;# 
  1589  019E                     	;# 
  1590  019E                     	;# 
  1591  019E                     	;# 
  1592  019F                     	;# 
  1593  019F                     	;# 
  1594  019F                     	;# 
  1595  019F                     	;# 
  1596  019F                     	;# 
  1597  020C                     	;# 
  1598  020D                     	;# 
  1599  020E                     	;# 
  1600  0211                     	;# 
  1601  0211                     	;# 
  1602  0212                     	;# 
  1603  0212                     	;# 
  1604  0213                     	;# 
  1605  0213                     	;# 
  1606  0214                     	;# 
  1607  0214                     	;# 
  1608  0215                     	;# 
  1609  0215                     	;# 
  1610  0215                     	;# 
  1611  0215                     	;# 
  1612  0216                     	;# 
  1613  0216                     	;# 
  1614  0217                     	;# 
  1615  0217                     	;# 
  1616  0219                     	;# 
  1617  021A                     	;# 
  1618  021B                     	;# 
  1619  021C                     	;# 
  1620  021D                     	;# 
  1621  021D                     	;# 
  1622  021E                     	;# 
  1623  021F                     	;# 
  1624  028C                     	;# 
  1625  028D                     	;# 
  1626  028E                     	;# 
  1627  0291                     	;# 
  1628  0291                     	;# 
  1629  0292                     	;# 
  1630  0293                     	;# 
  1631  0294                     	;# 
  1632  0295                     	;# 
  1633  0295                     	;# 
  1634  0296                     	;# 
  1635  0297                     	;# 
  1636  0298                     	;# 
  1637  029F                     	;# 
  1638  030C                     	;# 
  1639  030D                     	;# 
  1640  030E                     	;# 
  1641  0311                     	;# 
  1642  0311                     	;# 
  1643  0312                     	;# 
  1644  0313                     	;# 
  1645  0314                     	;# 
  1646  0315                     	;# 
  1647  0315                     	;# 
  1648  0316                     	;# 
  1649  0317                     	;# 
  1650  0318                     	;# 
  1651  038C                     	;# 
  1652  038D                     	;# 
  1653  038E                     	;# 
  1654  0391                     	;# 
  1655  0392                     	;# 
  1656  0393                     	;# 
  1657  0394                     	;# 
  1658  0395                     	;# 
  1659  0396                     	;# 
  1660  0397                     	;# 
  1661  0398                     	;# 
  1662  0399                     	;# 
  1663  039A                     	;# 
  1664  039C                     	;# 
  1665  039D                     	;# 
  1666  039E                     	;# 
  1667  039F                     	;# 
  1668  0411                     	;# 
  1669  0411                     	;# 
  1670  0412                     	;# 
  1671  0413                     	;# 
  1672  0414                     	;# 
  1673  0415                     	;# 
  1674  0416                     	;# 
  1675  0417                     	;# 
  1676  0418                     	;# 
  1677  0418                     	;# 
  1678  0419                     	;# 
  1679  041A                     	;# 
  1680  041B                     	;# 
  1681  041C                     	;# 
  1682  041D                     	;# 
  1683  041E                     	;# 
  1684  041F                     	;# 
  1685  0498                     	;# 
  1686  0498                     	;# 
  1687  0499                     	;# 
  1688  049A                     	;# 
  1689  049B                     	;# 
  1690  049B                     	;# 
  1691  049C                     	;# 
  1692  049D                     	;# 
  1693  049E                     	;# 
  1694  049F                     	;# 
  1695  0617                     	;# 
  1696  0618                     	;# 
  1697  0619                     	;# 
  1698  0619                     	;# 
  1699  061A                     	;# 
  1700  061B                     	;# 
  1701  061C                     	;# 
  1702  061C                     	;# 
  1703  061F                     	;# 
  1704  0691                     	;# 
  1705  0692                     	;# 
  1706  0693                     	;# 
  1707  0694                     	;# 
  1708  0695                     	;# 
  1709  0696                     	;# 
  1710  0697                     	;# 
  1711  0698                     	;# 
  1712  0699                     	;# 
  1713  0711                     	;# 
  1714  0712                     	;# 
  1715  0713                     	;# 
  1716  0714                     	;# 
  1717  0715                     	;# 
  1718  0716                     	;# 
  1719  0717                     	;# 
  1720  0718                     	;# 
  1721  0719                     	;# 
  1722  0891                     	;# 
  1723  0891                     	;# 
  1724  0891                     	;# 
  1725  0891                     	;# 
  1726  0891                     	;# 
  1727  0891                     	;# 
  1728  0892                     	;# 
  1729  0892                     	;# 
  1730  0892                     	;# 
  1731  0893                     	;# 
  1732  0893                     	;# 
  1733  0893                     	;# 
  1734  0893                     	;# 
  1735  0893                     	;# 
  1736  0893                     	;# 
  1737  0894                     	;# 
  1738  0894                     	;# 
  1739  0894                     	;# 
  1740  0895                     	;# 
  1741  0895                     	;# 
  1742  0895                     	;# 
  1743  0896                     	;# 
  1744  0896                     	;# 
  1745  0896                     	;# 
  1746  089B                     	;# 
  1747  0911                     	;# 
  1748  0912                     	;# 
  1749  0913                     	;# 
  1750  0914                     	;# 
  1751  0915                     	;# 
  1752  0916                     	;# 
  1753  0918                     	;# 
  1754  0919                     	;# 
  1755  091A                     	;# 
  1756  091B                     	;# 
  1757  091C                     	;# 
  1758  091D                     	;# 
  1759  091E                     	;# 
  1760  091F                     	;# 
  1761  0E0F                     	;# 
  1762  0E10                     	;# 
  1763  0E11                     	;# 
  1764  0E12                     	;# 
  1765  0E13                     	;# 
  1766  0E14                     	;# 
  1767  0E15                     	;# 
  1768  0E16                     	;# 
  1769  0E17                     	;# 
  1770  0E18                     	;# 
  1771  0E19                     	;# 
  1772  0E1A                     	;# 
  1773  0E1B                     	;# 
  1774  0E1C                     	;# 
  1775  0E1D                     	;# 
  1776  0E1E                     	;# 
  1777  0E1F                     	;# 
  1778  0E20                     	;# 
  1779  0E21                     	;# 
  1780  0E22                     	;# 
  1781  0E24                     	;# 
  1782  0E25                     	;# 
  1783  0E28                     	;# 
  1784  0E29                     	;# 
  1785  0E2A                     	;# 
  1786  0E2B                     	;# 
  1787  0E2C                     	;# 
  1788  0E2D                     	;# 
  1789  0E2E                     	;# 
  1790  0E2F                     	;# 
  1791  0E90                     	;# 
  1792  0E91                     	;# 
  1793  0E92                     	;# 
  1794  0E94                     	;# 
  1795  0E95                     	;# 
  1796  0E9C                     	;# 
  1797  0E9D                     	;# 
  1798  0E9E                     	;# 
  1799  0E9F                     	;# 
  1800  0EA0                     	;# 
  1801  0EA1                     	;# 
  1802  0EA2                     	;# 
  1803  0EA3                     	;# 
  1804  0EA4                     	;# 
  1805  0EA5                     	;# 
  1806  0EA6                     	;# 
  1807  0EA7                     	;# 
  1808  0F0F                     	;# 
  1809  0F10                     	;# 
  1810  0F11                     	;# 
  1811  0F12                     	;# 
  1812  0F13                     	;# 
  1813  0F14                     	;# 
  1814  0F15                     	;# 
  1815  0F16                     	;# 
  1816  0F17                     	;# 
  1817  0F18                     	;# 
  1818  0F19                     	;# 
  1819  0F1A                     	;# 
  1820  0F1B                     	;# 
  1821  0F1C                     	;# 
  1822  0F1D                     	;# 
  1823  0F1E                     	;# 
  1824  0F1F                     	;# 
  1825  0F20                     	;# 
  1826  0F21                     	;# 
  1827  0F22                     	;# 
  1828  0F23                     	;# 
  1829  0F24                     	;# 
  1830  0F25                     	;# 
  1831  0F26                     	;# 
  1832  0F27                     	;# 
  1833  0F28                     	;# 
  1834  0F29                     	;# 
  1835  0F2A                     	;# 
  1836  0F2B                     	;# 
  1837  0F2C                     	;# 
  1838  0F2D                     	;# 
  1839  0F2E                     	;# 
  1840  0F2F                     	;# 
  1841  0F30                     	;# 
  1842  0F31                     	;# 
  1843  0F32                     	;# 
  1844  0F33                     	;# 
  1845  0F34                     	;# 
  1846  0F35                     	;# 
  1847  0F36                     	;# 
  1848  0F37                     	;# 
  1849  0FE4                     	;# 
  1850  0FE5                     	;# 
  1851  0FE6                     	;# 
  1852  0FE7                     	;# 
  1853  0FE8                     	;# 
  1854  0FE9                     	;# 
  1855  0FEA                     	;# 
  1856  0FEB                     	;# 
  1857  0FED                     	;# 
  1858  0FEE                     	;# 
  1859  0FEF                     	;# 
  1860  0000                     	;# 
  1861  0001                     	;# 
  1862  0002                     	;# 
  1863  0003                     	;# 
  1864  0004                     	;# 
  1865  0005                     	;# 
  1866  0006                     	;# 
  1867  0007                     	;# 
  1868  0008                     	;# 
  1869  0009                     	;# 
  1870  000A                     	;# 
  1871  000B                     	;# 
  1872  000C                     	;# 
  1873  000D                     	;# 
  1874  000E                     	;# 
  1875  0010                     	;# 
  1876  0011                     	;# 
  1877  0012                     	;# 
  1878  0013                     	;# 
  1879  0014                     	;# 
  1880  0015                     	;# 
  1881  0015                     	;# 
  1882  0016                     	;# 
  1883  0016                     	;# 
  1884  0017                     	;# 
  1885  0018                     	;# 
  1886  0019                     	;# 
  1887  0019                     	;# 
  1888  001A                     	;# 
  1889  001B                     	;# 
  1890  001C                     	;# 
  1891  001D                     	;# 
  1892  001E                     	;# 
  1893  001F                     	;# 
  1894  008C                     	;# 
  1895  008D                     	;# 
  1896  008E                     	;# 
  1897  0090                     	;# 
  1898  0091                     	;# 
  1899  0092                     	;# 
  1900  0093                     	;# 
  1901  0094                     	;# 
  1902  0097                     	;# 
  1903  009B                     	;# 
  1904  009B                     	;# 
  1905  009C                     	;# 
  1906  009D                     	;# 
  1907  009E                     	;# 
  1908  009F                     	;# 
  1909  010C                     	;# 
  1910  010D                     	;# 
  1911  010E                     	;# 
  1912  0111                     	;# 
  1913  0112                     	;# 
  1914  0113                     	;# 
  1915  0114                     	;# 
  1916  0115                     	;# 
  1917  0116                     	;# 
  1918  0117                     	;# 
  1919  0118                     	;# 
  1920  0119                     	;# 
  1921  018C                     	;# 
  1922  018D                     	;# 
  1923  018E                     	;# 
  1924  0197                     	;# 
  1925  0199                     	;# 
  1926  0199                     	;# 
  1927  0199                     	;# 
  1928  019A                     	;# 
  1929  019A                     	;# 
  1930  019A                     	;# 
  1931  019B                     	;# 
  1932  019B                     	;# 
  1933  019B                     	;# 
  1934  019B                     	;# 
  1935  019B                     	;# 
  1936  019C                     	;# 
  1937  019C                     	;# 
  1938  019C                     	;# 
  1939  019D                     	;# 
  1940  019D                     	;# 
  1941  019D                     	;# 
  1942  019E                     	;# 
  1943  019E                     	;# 
  1944  019E                     	;# 
  1945  019F                     	;# 
  1946  019F                     	;# 
  1947  019F                     	;# 
  1948  019F                     	;# 
  1949  019F                     	;# 
  1950  020C                     	;# 
  1951  020D                     	;# 
  1952  020E                     	;# 
  1953  0211                     	;# 
  1954  0211                     	;# 
  1955  0212                     	;# 
  1956  0212                     	;# 
  1957  0213                     	;# 
  1958  0213                     	;# 
  1959  0214                     	;# 
  1960  0214                     	;# 
  1961  0215                     	;# 
  1962  0215                     	;# 
  1963  0215                     	;# 
  1964  0215                     	;# 
  1965  0216                     	;# 
  1966  0216                     	;# 
  1967  0217                     	;# 
  1968  0217                     	;# 
  1969  0219                     	;# 
  1970  021A                     	;# 
  1971  021B                     	;# 
  1972  021C                     	;# 
  1973  021D                     	;# 
  1974  021D                     	;# 
  1975  021E                     	;# 
  1976  021F                     	;# 
  1977  028C                     	;# 
  1978  028D                     	;# 
  1979  028E                     	;# 
  1980  0291                     	;# 
  1981  0291                     	;# 
  1982  0292                     	;# 
  1983  0293                     	;# 
  1984  0294                     	;# 
  1985  0295                     	;# 
  1986  0295                     	;# 
  1987  0296                     	;# 
  1988  0297                     	;# 
  1989  0298                     	;# 
  1990  029F                     	;# 
  1991  030C                     	;# 
  1992  030D                     	;# 
  1993  030E                     	;# 
  1994  0311                     	;# 
  1995  0311                     	;# 
  1996  0312                     	;# 
  1997  0313                     	;# 
  1998  0314                     	;# 
  1999  0315                     	;# 
  2000  0315                     	;# 
  2001  0316                     	;# 
  2002  0317                     	;# 
  2003  0318                     	;# 
  2004  038C                     	;# 
  2005  038D                     	;# 
  2006  038E                     	;# 
  2007  0391                     	;# 
  2008  0392                     	;# 
  2009  0393                     	;# 
  2010  0394                     	;# 
  2011  0395                     	;# 
  2012  0396                     	;# 
  2013  0397                     	;# 
  2014  0398                     	;# 
  2015  0399                     	;# 
  2016  039A                     	;# 
  2017  039C                     	;# 
  2018  039D                     	;# 
  2019  039E                     	;# 
  2020  039F                     	;# 
  2021  0411                     	;# 
  2022  0411                     	;# 
  2023  0412                     	;# 
  2024  0413                     	;# 
  2025  0414                     	;# 
  2026  0415                     	;# 
  2027  0416                     	;# 
  2028  0417                     	;# 
  2029  0418                     	;# 
  2030  0418                     	;# 
  2031  0419                     	;# 
  2032  041A                     	;# 
  2033  041B                     	;# 
  2034  041C                     	;# 
  2035  041D                     	;# 
  2036  041E                     	;# 
  2037  041F                     	;# 
  2038  0498                     	;# 
  2039  0498                     	;# 
  2040  0499                     	;# 
  2041  049A                     	;# 
  2042  049B                     	;# 
  2043  049B                     	;# 
  2044  049C                     	;# 
  2045  049D                     	;# 
  2046  049E                     	;# 
  2047  049F                     	;# 
  2048  0617                     	;# 
  2049  0618                     	;# 
  2050  0619                     	;# 
  2051  0619                     	;# 
  2052  061A                     	;# 
  2053  061B                     	;# 
  2054  061C                     	;# 
  2055  061C                     	;# 
  2056  061F                     	;# 
  2057  0691                     	;# 
  2058  0692                     	;# 
  2059  0693                     	;# 
  2060  0694                     	;# 
  2061  0695                     	;# 
  2062  0696                     	;# 
  2063  0697                     	;# 
  2064  0698                     	;# 
  2065  0699                     	;# 
  2066  0711                     	;# 
  2067  0712                     	;# 
  2068  0713                     	;# 
  2069  0714                     	;# 
  2070  0715                     	;# 
  2071  0716                     	;# 
  2072  0717                     	;# 
  2073  0718                     	;# 
  2074  0719                     	;# 
  2075  0891                     	;# 
  2076  0891                     	;# 
  2077  0891                     	;# 
  2078  0891                     	;# 
  2079  0891                     	;# 
  2080  0891                     	;# 
  2081  0892                     	;# 
  2082  0892                     	;# 
  2083  0892                     	;# 
  2084  0893                     	;# 
  2085  0893                     	;# 
  2086  0893                     	;# 
  2087  0893                     	;# 
  2088  0893                     	;# 
  2089  0893                     	;# 
  2090  0894                     	;# 
  2091  0894                     	;# 
  2092  0894                     	;# 
  2093  0895                     	;# 
  2094  0895                     	;# 
  2095  0895                     	;# 
  2096  0896                     	;# 
  2097  0896                     	;# 
  2098  0896                     	;# 
  2099  089B                     	;# 
  2100  0911                     	;# 
  2101  0912                     	;# 
  2102  0913                     	;# 
  2103  0914                     	;# 
  2104  0915                     	;# 
  2105  0916                     	;# 
  2106  0918                     	;# 
  2107  0919                     	;# 
  2108  091A                     	;# 
  2109  091B                     	;# 
  2110  091C                     	;# 
  2111  091D                     	;# 
  2112  091E                     	;# 
  2113  091F                     	;# 
  2114  0E0F                     	;# 
  2115  0E10                     	;# 
  2116  0E11                     	;# 
  2117  0E12                     	;# 
  2118  0E13                     	;# 
  2119  0E14                     	;# 
  2120  0E15                     	;# 
  2121  0E16                     	;# 
  2122  0E17                     	;# 
  2123  0E18                     	;# 
  2124  0E19                     	;# 
  2125  0E1A                     	;# 
  2126  0E1B                     	;# 
  2127  0E1C                     	;# 
  2128  0E1D                     	;# 
  2129  0E1E                     	;# 
  2130  0E1F                     	;# 
  2131  0E20                     	;# 
  2132  0E21                     	;# 
  2133  0E22                     	;# 
  2134  0E24                     	;# 
  2135  0E25                     	;# 
  2136  0E28                     	;# 
  2137  0E29                     	;# 
  2138  0E2A                     	;# 
  2139  0E2B                     	;# 
  2140  0E2C                     	;# 
  2141  0E2D                     	;# 
  2142  0E2E                     	;# 
  2143  0E2F                     	;# 
  2144  0E90                     	;# 
  2145  0E91                     	;# 
  2146  0E92                     	;# 
  2147  0E94                     	;# 
  2148  0E95                     	;# 
  2149  0E9C                     	;# 
  2150  0E9D                     	;# 
  2151  0E9E                     	;# 
  2152  0E9F                     	;# 
  2153  0EA0                     	;# 
  2154  0EA1                     	;# 
  2155  0EA2                     	;# 
  2156  0EA3                     	;# 
  2157  0EA4                     	;# 
  2158  0EA5                     	;# 
  2159  0EA6                     	;# 
  2160  0EA7                     	;# 
  2161  0F0F                     	;# 
  2162  0F10                     	;# 
  2163  0F11                     	;# 
  2164  0F12                     	;# 
  2165  0F13                     	;# 
  2166  0F14                     	;# 
  2167  0F15                     	;# 
  2168  0F16                     	;# 
  2169  0F17                     	;# 
  2170  0F18                     	;# 
  2171  0F19                     	;# 
  2172  0F1A                     	;# 
  2173  0F1B                     	;# 
  2174  0F1C                     	;# 
  2175  0F1D                     	;# 
  2176  0F1E                     	;# 
  2177  0F1F                     	;# 
  2178  0F20                     	;# 
  2179  0F21                     	;# 
  2180  0F22                     	;# 
  2181  0F23                     	;# 
  2182  0F24                     	;# 
  2183  0F25                     	;# 
  2184  0F26                     	;# 
  2185  0F27                     	;# 
  2186  0F28                     	;# 
  2187  0F29                     	;# 
  2188  0F2A                     	;# 
  2189  0F2B                     	;# 
  2190  0F2C                     	;# 
  2191  0F2D                     	;# 
  2192  0F2E                     	;# 
  2193  0F2F                     	;# 
  2194  0F30                     	;# 
  2195  0F31                     	;# 
  2196  0F32                     	;# 
  2197  0F33                     	;# 
  2198  0F34                     	;# 
  2199  0F35                     	;# 
  2200  0F36                     	;# 
  2201  0F37                     	;# 
  2202  0FE4                     	;# 
  2203  0FE5                     	;# 
  2204  0FE6                     	;# 
  2205  0FE7                     	;# 
  2206  0FE8                     	;# 
  2207  0FE9                     	;# 
  2208  0FEA                     	;# 
  2209  0FEB                     	;# 
  2210  0FED                     	;# 
  2211  0FEE                     	;# 
  2212  0FEF                     	;# 
  2213  0000                     	;# 
  2214  0001                     	;# 
  2215  0002                     	;# 
  2216  0003                     	;# 
  2217  0004                     	;# 
  2218  0005                     	;# 
  2219  0006                     	;# 
  2220  0007                     	;# 
  2221  0008                     	;# 
  2222  0009                     	;# 
  2223  000A                     	;# 
  2224  000B                     	;# 
  2225  000C                     	;# 
  2226  000D                     	;# 
  2227  000E                     	;# 
  2228  0010                     	;# 
  2229  0011                     	;# 
  2230  0012                     	;# 
  2231  0013                     	;# 
  2232  0014                     	;# 
  2233  0015                     	;# 
  2234  0015                     	;# 
  2235  0016                     	;# 
  2236  0016                     	;# 
  2237  0017                     	;# 
  2238  0018                     	;# 
  2239  0019                     	;# 
  2240  0019                     	;# 
  2241  001A                     	;# 
  2242  001B                     	;# 
  2243  001C                     	;# 
  2244  001D                     	;# 
  2245  001E                     	;# 
  2246  001F                     	;# 
  2247  008C                     	;# 
  2248  008D                     	;# 
  2249  008E                     	;# 
  2250  0090                     	;# 
  2251  0091                     	;# 
  2252  0092                     	;# 
  2253  0093                     	;# 
  2254  0094                     	;# 
  2255  0097                     	;# 
  2256  009B                     	;# 
  2257  009B                     	;# 
  2258  009C                     	;# 
  2259  009D                     	;# 
  2260  009E                     	;# 
  2261  009F                     	;# 
  2262  010C                     	;# 
  2263  010D                     	;# 
  2264  010E                     	;# 
  2265  0111                     	;# 
  2266  0112                     	;# 
  2267  0113                     	;# 
  2268  0114                     	;# 
  2269  0115                     	;# 
  2270  0116                     	;# 
  2271  0117                     	;# 
  2272  0118                     	;# 
  2273  0119                     	;# 
  2274  018C                     	;# 
  2275  018D                     	;# 
  2276  018E                     	;# 
  2277  0197                     	;# 
  2278  0199                     	;# 
  2279  0199                     	;# 
  2280  0199                     	;# 
  2281  019A                     	;# 
  2282  019A                     	;# 
  2283  019A                     	;# 
  2284  019B                     	;# 
  2285  019B                     	;# 
  2286  019B                     	;# 
  2287  019B                     	;# 
  2288  019B                     	;# 
  2289  019C                     	;# 
  2290  019C                     	;# 
  2291  019C                     	;# 
  2292  019D                     	;# 
  2293  019D                     	;# 
  2294  019D                     	;# 
  2295  019E                     	;# 
  2296  019E                     	;# 
  2297  019E                     	;# 
  2298  019F                     	;# 
  2299  019F                     	;# 
  2300  019F                     	;# 
  2301  019F                     	;# 
  2302  019F                     	;# 
  2303  020C                     	;# 
  2304  020D                     	;# 
  2305  020E                     	;# 
  2306  0211                     	;# 
  2307  0211                     	;# 
  2308  0212                     	;# 
  2309  0212                     	;# 
  2310  0213                     	;# 
  2311  0213                     	;# 
  2312  0214                     	;# 
  2313  0214                     	;# 
  2314  0215                     	;# 
  2315  0215                     	;# 
  2316  0215                     	;# 
  2317  0215                     	;# 
  2318  0216                     	;# 
  2319  0216                     	;# 
  2320  0217                     	;# 
  2321  0217                     	;# 
  2322  0219                     	;# 
  2323  021A                     	;# 
  2324  021B                     	;# 
  2325  021C                     	;# 
  2326  021D                     	;# 
  2327  021D                     	;# 
  2328  021E                     	;# 
  2329  021F                     	;# 
  2330  028C                     	;# 
  2331  028D                     	;# 
  2332  028E                     	;# 
  2333  0291                     	;# 
  2334  0291                     	;# 
  2335  0292                     	;# 
  2336  0293                     	;# 
  2337  0294                     	;# 
  2338  0295                     	;# 
  2339  0295                     	;# 
  2340  0296                     	;# 
  2341  0297                     	;# 
  2342  0298                     	;# 
  2343  029F                     	;# 
  2344  030C                     	;# 
  2345  030D                     	;# 
  2346  030E                     	;# 
  2347  0311                     	;# 
  2348  0311                     	;# 
  2349  0312                     	;# 
  2350  0313                     	;# 
  2351  0314                     	;# 
  2352  0315                     	;# 
  2353  0315                     	;# 
  2354  0316                     	;# 
  2355  0317                     	;# 
  2356  0318                     	;# 
  2357  038C                     	;# 
  2358  038D                     	;# 
  2359  038E                     	;# 
  2360  0391                     	;# 
  2361  0392                     	;# 
  2362  0393                     	;# 
  2363  0394                     	;# 
  2364  0395                     	;# 
  2365  0396                     	;# 
  2366  0397                     	;# 
  2367  0398                     	;# 
  2368  0399                     	;# 
  2369  039A                     	;# 
  2370  039C                     	;# 
  2371  039D                     	;# 
  2372  039E                     	;# 
  2373  039F                     	;# 
  2374  0411                     	;# 
  2375  0411                     	;# 
  2376  0412                     	;# 
  2377  0413                     	;# 
  2378  0414                     	;# 
  2379  0415                     	;# 
  2380  0416                     	;# 
  2381  0417                     	;# 
  2382  0418                     	;# 
  2383  0418                     	;# 
  2384  0419                     	;# 
  2385  041A                     	;# 
  2386  041B                     	;# 
  2387  041C                     	;# 
  2388  041D                     	;# 
  2389  041E                     	;# 
  2390  041F                     	;# 
  2391  0498                     	;# 
  2392  0498                     	;# 
  2393  0499                     	;# 
  2394  049A                     	;# 
  2395  049B                     	;# 
  2396  049B                     	;# 
  2397  049C                     	;# 
  2398  049D                     	;# 
  2399  049E                     	;# 
  2400  049F                     	;# 
  2401  0617                     	;# 
  2402  0618                     	;# 
  2403  0619                     	;# 
  2404  0619                     	;# 
  2405  061A                     	;# 
  2406  061B                     	;# 
  2407  061C                     	;# 
  2408  061C                     	;# 
  2409  061F                     	;# 
  2410  0691                     	;# 
  2411  0692                     	;# 
  2412  0693                     	;# 
  2413  0694                     	;# 
  2414  0695                     	;# 
  2415  0696                     	;# 
  2416  0697                     	;# 
  2417  0698                     	;# 
  2418  0699                     	;# 
  2419  0711                     	;# 
  2420  0712                     	;# 
  2421  0713                     	;# 
  2422  0714                     	;# 
  2423  0715                     	;# 
  2424  0716                     	;# 
  2425  0717                     	;# 
  2426  0718                     	;# 
  2427  0719                     	;# 
  2428  0891                     	;# 
  2429  0891                     	;# 
  2430  0891                     	;# 
  2431  0891                     	;# 
  2432  0891                     	;# 
  2433  0891                     	;# 
  2434  0892                     	;# 
  2435  0892                     	;# 
  2436  0892                     	;# 
  2437  0893                     	;# 
  2438  0893                     	;# 
  2439  0893                     	;# 
  2440  0893                     	;# 
  2441  0893                     	;# 
  2442  0893                     	;# 
  2443  0894                     	;# 
  2444  0894                     	;# 
  2445  0894                     	;# 
  2446  0895                     	;# 
  2447  0895                     	;# 
  2448  0895                     	;# 
  2449  0896                     	;# 
  2450  0896                     	;# 
  2451  0896                     	;# 
  2452  089B                     	;# 
  2453  0911                     	;# 
  2454  0912                     	;# 
  2455  0913                     	;# 
  2456  0914                     	;# 
  2457  0915                     	;# 
  2458  0916                     	;# 
  2459  0918                     	;# 
  2460  0919                     	;# 
  2461  091A                     	;# 
  2462  091B                     	;# 
  2463  091C                     	;# 
  2464  091D                     	;# 
  2465  091E                     	;# 
  2466  091F                     	;# 
  2467  0E0F                     	;# 
  2468  0E10                     	;# 
  2469  0E11                     	;# 
  2470  0E12                     	;# 
  2471  0E13                     	;# 
  2472  0E14                     	;# 
  2473  0E15                     	;# 
  2474  0E16                     	;# 
  2475  0E17                     	;# 
  2476  0E18                     	;# 
  2477  0E19                     	;# 
  2478  0E1A                     	;# 
  2479  0E1B                     	;# 
  2480  0E1C                     	;# 
  2481  0E1D                     	;# 
  2482  0E1E                     	;# 
  2483  0E1F                     	;# 
  2484  0E20                     	;# 
  2485  0E21                     	;# 
  2486  0E22                     	;# 
  2487  0E24                     	;# 
  2488  0E25                     	;# 
  2489  0E28                     	;# 
  2490  0E29                     	;# 
  2491  0E2A                     	;# 
  2492  0E2B                     	;# 
  2493  0E2C                     	;# 
  2494  0E2D                     	;# 
  2495  0E2E                     	;# 
  2496  0E2F                     	;# 
  2497  0E90                     	;# 
  2498  0E91                     	;# 
  2499  0E92                     	;# 
  2500  0E94                     	;# 
  2501  0E95                     	;# 
  2502  0E9C                     	;# 
  2503  0E9D                     	;# 
  2504  0E9E                     	;# 
  2505  0E9F                     	;# 
  2506  0EA0                     	;# 
  2507  0EA1                     	;# 
  2508  0EA2                     	;# 
  2509  0EA3                     	;# 
  2510  0EA4                     	;# 
  2511  0EA5                     	;# 
  2512  0EA6                     	;# 
  2513  0EA7                     	;# 
  2514  0F0F                     	;# 
  2515  0F10                     	;# 
  2516  0F11                     	;# 
  2517  0F12                     	;# 
  2518  0F13                     	;# 
  2519  0F14                     	;# 
  2520  0F15                     	;# 
  2521  0F16                     	;# 
  2522  0F17                     	;# 
  2523  0F18                     	;# 
  2524  0F19                     	;# 
  2525  0F1A                     	;# 
  2526  0F1B                     	;# 
  2527  0F1C                     	;# 
  2528  0F1D                     	;# 
  2529  0F1E                     	;# 
  2530  0F1F                     	;# 
  2531  0F20                     	;# 
  2532  0F21                     	;# 
  2533  0F22                     	;# 
  2534  0F23                     	;# 
  2535  0F24                     	;# 
  2536  0F25                     	;# 
  2537  0F26                     	;# 
  2538  0F27                     	;# 
  2539  0F28                     	;# 
  2540  0F29                     	;# 
  2541  0F2A                     	;# 
  2542  0F2B                     	;# 
  2543  0F2C                     	;# 
  2544  0F2D                     	;# 
  2545  0F2E                     	;# 
  2546  0F2F                     	;# 
  2547  0F30                     	;# 
  2548  0F31                     	;# 
  2549  0F32                     	;# 
  2550  0F33                     	;# 
  2551  0F34                     	;# 
  2552  0F35                     	;# 
  2553  0F36                     	;# 
  2554  0F37                     	;# 
  2555  0FE4                     	;# 
  2556  0FE5                     	;# 
  2557  0FE6                     	;# 
  2558  0FE7                     	;# 
  2559  0FE8                     	;# 
  2560  0FE9                     	;# 
  2561  0FEA                     	;# 
  2562  0FEB                     	;# 
  2563  0FED                     	;# 
  2564  0FEE                     	;# 
  2565  0FEF                     	;# 
  2566  0000                     	;# 
  2567  0001                     	;# 
  2568  0002                     	;# 
  2569  0003                     	;# 
  2570  0004                     	;# 
  2571  0005                     	;# 
  2572  0006                     	;# 
  2573  0007                     	;# 
  2574  0008                     	;# 
  2575  0009                     	;# 
  2576  000A                     	;# 
  2577  000B                     	;# 
  2578  000C                     	;# 
  2579  000D                     	;# 
  2580  000E                     	;# 
  2581  0010                     	;# 
  2582  0011                     	;# 
  2583  0012                     	;# 
  2584  0013                     	;# 
  2585  0014                     	;# 
  2586  0015                     	;# 
  2587  0015                     	;# 
  2588  0016                     	;# 
  2589  0016                     	;# 
  2590  0017                     	;# 
  2591  0018                     	;# 
  2592  0019                     	;# 
  2593  0019                     	;# 
  2594  001A                     	;# 
  2595  001B                     	;# 
  2596  001C                     	;# 
  2597  001D                     	;# 
  2598  001E                     	;# 
  2599  001F                     	;# 
  2600  008C                     	;# 
  2601  008D                     	;# 
  2602  008E                     	;# 
  2603  0090                     	;# 
  2604  0091                     	;# 
  2605  0092                     	;# 
  2606  0093                     	;# 
  2607  0094                     	;# 
  2608  0097                     	;# 
  2609  009B                     	;# 
  2610  009B                     	;# 
  2611  009C                     	;# 
  2612  009D                     	;# 
  2613  009E                     	;# 
  2614  009F                     	;# 
  2615  010C                     	;# 
  2616  010D                     	;# 
  2617  010E                     	;# 
  2618  0111                     	;# 
  2619  0112                     	;# 
  2620  0113                     	;# 
  2621  0114                     	;# 
  2622  0115                     	;# 
  2623  0116                     	;# 
  2624  0117                     	;# 
  2625  0118                     	;# 
  2626  0119                     	;# 
  2627  018C                     	;# 
  2628  018D                     	;# 
  2629  018E                     	;# 
  2630  0197                     	;# 
  2631  0199                     	;# 
  2632  0199                     	;# 
  2633  0199                     	;# 
  2634  019A                     	;# 
  2635  019A                     	;# 
  2636  019A                     	;# 
  2637  019B                     	;# 
  2638  019B                     	;# 
  2639  019B                     	;# 
  2640  019B                     	;# 
  2641  019B                     	;# 
  2642  019C                     	;# 
  2643  019C                     	;# 
  2644  019C                     	;# 
  2645  019D                     	;# 
  2646  019D                     	;# 
  2647  019D                     	;# 
  2648  019E                     	;# 
  2649  019E                     	;# 
  2650  019E                     	;# 
  2651  019F                     	;# 
  2652  019F                     	;# 
  2653  019F                     	;# 
  2654  019F                     	;# 
  2655  019F                     	;# 
  2656  020C                     	;# 
  2657  020D                     	;# 
  2658  020E                     	;# 
  2659  0211                     	;# 
  2660  0211                     	;# 
  2661  0212                     	;# 
  2662  0212                     	;# 
  2663  0213                     	;# 
  2664  0213                     	;# 
  2665  0214                     	;# 
  2666  0214                     	;# 
  2667  0215                     	;# 
  2668  0215                     	;# 
  2669  0215                     	;# 
  2670  0215                     	;# 
  2671  0216                     	;# 
  2672  0216                     	;# 
  2673  0217                     	;# 
  2674  0217                     	;# 
  2675  0219                     	;# 
  2676  021A                     	;# 
  2677  021B                     	;# 
  2678  021C                     	;# 
  2679  021D                     	;# 
  2680  021D                     	;# 
  2681  021E                     	;# 
  2682  021F                     	;# 
  2683  028C                     	;# 
  2684  028D                     	;# 
  2685  028E                     	;# 
  2686  0291                     	;# 
  2687  0291                     	;# 
  2688  0292                     	;# 
  2689  0293                     	;# 
  2690  0294                     	;# 
  2691  0295                     	;# 
  2692  0295                     	;# 
  2693  0296                     	;# 
  2694  0297                     	;# 
  2695  0298                     	;# 
  2696  029F                     	;# 
  2697  030C                     	;# 
  2698  030D                     	;# 
  2699  030E                     	;# 
  2700  0311                     	;# 
  2701  0311                     	;# 
  2702  0312                     	;# 
  2703  0313                     	;# 
  2704  0314                     	;# 
  2705  0315                     	;# 
  2706  0315                     	;# 
  2707  0316                     	;# 
  2708  0317                     	;# 
  2709  0318                     	;# 
  2710  038C                     	;# 
  2711  038D                     	;# 
  2712  038E                     	;# 
  2713  0391                     	;# 
  2714  0392                     	;# 
  2715  0393                     	;# 
  2716  0394                     	;# 
  2717  0395                     	;# 
  2718  0396                     	;# 
  2719  0397                     	;# 
  2720  0398                     	;# 
  2721  0399                     	;# 
  2722  039A                     	;# 
  2723  039C                     	;# 
  2724  039D                     	;# 
  2725  039E                     	;# 
  2726  039F                     	;# 
  2727  0411                     	;# 
  2728  0411                     	;# 
  2729  0412                     	;# 
  2730  0413                     	;# 
  2731  0414                     	;# 
  2732  0415                     	;# 
  2733  0416                     	;# 
  2734  0417                     	;# 
  2735  0418                     	;# 
  2736  0418                     	;# 
  2737  0419                     	;# 
  2738  041A                     	;# 
  2739  041B                     	;# 
  2740  041C                     	;# 
  2741  041D                     	;# 
  2742  041E                     	;# 
  2743  041F                     	;# 
  2744  0498                     	;# 
  2745  0498                     	;# 
  2746  0499                     	;# 
  2747  049A                     	;# 
  2748  049B                     	;# 
  2749  049B                     	;# 
  2750  049C                     	;# 
  2751  049D                     	;# 
  2752  049E                     	;# 
  2753  049F                     	;# 
  2754  0617                     	;# 
  2755  0618                     	;# 
  2756  0619                     	;# 
  2757  0619                     	;# 
  2758  061A                     	;# 
  2759  061B                     	;# 
  2760  061C                     	;# 
  2761  061C                     	;# 
  2762  061F                     	;# 
  2763  0691                     	;# 
  2764  0692                     	;# 
  2765  0693                     	;# 
  2766  0694                     	;# 
  2767  0695                     	;# 
  2768  0696                     	;# 
  2769  0697                     	;# 
  2770  0698                     	;# 
  2771  0699                     	;# 
  2772  0711                     	;# 
  2773  0712                     	;# 
  2774  0713                     	;# 
  2775  0714                     	;# 
  2776  0715                     	;# 
  2777  0716                     	;# 
  2778  0717                     	;# 
  2779  0718                     	;# 
  2780  0719                     	;# 
  2781  0891                     	;# 
  2782  0891                     	;# 
  2783  0891                     	;# 
  2784  0891                     	;# 
  2785  0891                     	;# 
  2786  0891                     	;# 
  2787  0892                     	;# 
  2788  0892                     	;# 
  2789  0892                     	;# 
  2790  0893                     	;# 
  2791  0893                     	;# 
  2792  0893                     	;# 
  2793  0893                     	;# 
  2794  0893                     	;# 
  2795  0893                     	;# 
  2796  0894                     	;# 
  2797  0894                     	;# 
  2798  0894                     	;# 
  2799  0895                     	;# 
  2800  0895                     	;# 
  2801  0895                     	;# 
  2802  0896                     	;# 
  2803  0896                     	;# 
  2804  0896                     	;# 
  2805  089B                     	;# 
  2806  0911                     	;# 
  2807  0912                     	;# 
  2808  0913                     	;# 
  2809  0914                     	;# 
  2810  0915                     	;# 
  2811  0916                     	;# 
  2812  0918                     	;# 
  2813  0919                     	;# 
  2814  091A                     	;# 
  2815  091B                     	;# 
  2816  091C                     	;# 
  2817  091D                     	;# 
  2818  091E                     	;# 
  2819  091F                     	;# 
  2820  0E0F                     	;# 
  2821  0E10                     	;# 
  2822  0E11                     	;# 
  2823  0E12                     	;# 
  2824  0E13                     	;# 
  2825  0E14                     	;# 
  2826  0E15                     	;# 
  2827  0E16                     	;# 
  2828  0E17                     	;# 
  2829  0E18                     	;# 
  2830  0E19                     	;# 
  2831  0E1A                     	;# 
  2832  0E1B                     	;# 
  2833  0E1C                     	;# 
  2834  0E1D                     	;# 
  2835  0E1E                     	;# 
  2836  0E1F                     	;# 
  2837  0E20                     	;# 
  2838  0E21                     	;# 
  2839  0E22                     	;# 
  2840  0E24                     	;# 
  2841  0E25                     	;# 
  2842  0E28                     	;# 
  2843  0E29                     	;# 
  2844  0E2A                     	;# 
  2845  0E2B                     	;# 
  2846  0E2C                     	;# 
  2847  0E2D                     	;# 
  2848  0E2E                     	;# 
  2849  0E2F                     	;# 
  2850  0E90                     	;# 
  2851  0E91                     	;# 
  2852  0E92                     	;# 
  2853  0E94                     	;# 
  2854  0E95                     	;# 
  2855  0E9C                     	;# 
  2856  0E9D                     	;# 
  2857  0E9E                     	;# 
  2858  0E9F                     	;# 
  2859  0EA0                     	;# 
  2860  0EA1                     	;# 
  2861  0EA2                     	;# 
  2862  0EA3                     	;# 
  2863  0EA4                     	;# 
  2864  0EA5                     	;# 
  2865  0EA6                     	;# 
  2866  0EA7                     	;# 
  2867  0F0F                     	;# 
  2868  0F10                     	;# 
  2869  0F11                     	;# 
  2870  0F12                     	;# 
  2871  0F13                     	;# 
  2872  0F14                     	;# 
  2873  0F15                     	;# 
  2874  0F16                     	;# 
  2875  0F17                     	;# 
  2876  0F18                     	;# 
  2877  0F19                     	;# 
  2878  0F1A                     	;# 
  2879  0F1B                     	;# 
  2880  0F1C                     	;# 
  2881  0F1D                     	;# 
  2882  0F1E                     	;# 
  2883  0F1F                     	;# 
  2884  0F20                     	;# 
  2885  0F21                     	;# 
  2886  0F22                     	;# 
  2887  0F23                     	;# 
  2888  0F24                     	;# 
  2889  0F25                     	;# 
  2890  0F26                     	;# 
  2891  0F27                     	;# 
  2892  0F28                     	;# 
  2893  0F29                     	;# 
  2894  0F2A                     	;# 
  2895  0F2B                     	;# 
  2896  0F2C                     	;# 
  2897  0F2D                     	;# 
  2898  0F2E                     	;# 
  2899  0F2F                     	;# 
  2900  0F30                     	;# 
  2901  0F31                     	;# 
  2902  0F32                     	;# 
  2903  0F33                     	;# 
  2904  0F34                     	;# 
  2905  0F35                     	;# 
  2906  0F36                     	;# 
  2907  0F37                     	;# 
  2908  0FE4                     	;# 
  2909  0FE5                     	;# 
  2910  0FE6                     	;# 
  2911  0FE7                     	;# 
  2912  0FE8                     	;# 
  2913  0FE9                     	;# 
  2914  0FEA                     	;# 
  2915  0FEB                     	;# 
  2916  0FED                     	;# 
  2917  0FEE                     	;# 
  2918  0FEF                     	;# 
  2919  0000                     	;# 
  2920  0001                     	;# 
  2921  0002                     	;# 
  2922  0003                     	;# 
  2923  0004                     	;# 
  2924  0005                     	;# 
  2925  0006                     	;# 
  2926  0007                     	;# 
  2927  0008                     	;# 
  2928  0009                     	;# 
  2929  000A                     	;# 
  2930  000B                     	;# 
  2931  000C                     	;# 
  2932  000D                     	;# 
  2933  000E                     	;# 
  2934  0010                     	;# 
  2935  0011                     	;# 
  2936  0012                     	;# 
  2937  0013                     	;# 
  2938  0014                     	;# 
  2939  0015                     	;# 
  2940  0015                     	;# 
  2941  0016                     	;# 
  2942  0016                     	;# 
  2943  0017                     	;# 
  2944  0018                     	;# 
  2945  0019                     	;# 
  2946  0019                     	;# 
  2947  001A                     	;# 
  2948  001B                     	;# 
  2949  001C                     	;# 
  2950  001D                     	;# 
  2951  001E                     	;# 
  2952  001F                     	;# 
  2953  008C                     	;# 
  2954  008D                     	;# 
  2955  008E                     	;# 
  2956  0090                     	;# 
  2957  0091                     	;# 
  2958  0092                     	;# 
  2959  0093                     	;# 
  2960  0094                     	;# 
  2961  0097                     	;# 
  2962  009B                     	;# 
  2963  009B                     	;# 
  2964  009C                     	;# 
  2965  009D                     	;# 
  2966  009E                     	;# 
  2967  009F                     	;# 
  2968  010C                     	;# 
  2969  010D                     	;# 
  2970  010E                     	;# 
  2971  0111                     	;# 
  2972  0112                     	;# 
  2973  0113                     	;# 
  2974  0114                     	;# 
  2975  0115                     	;# 
  2976  0116                     	;# 
  2977  0117                     	;# 
  2978  0118                     	;# 
  2979  0119                     	;# 
  2980  018C                     	;# 
  2981  018D                     	;# 
  2982  018E                     	;# 
  2983  0197                     	;# 
  2984  0199                     	;# 
  2985  0199                     	;# 
  2986  0199                     	;# 
  2987  019A                     	;# 
  2988  019A                     	;# 
  2989  019A                     	;# 
  2990  019B                     	;# 
  2991  019B                     	;# 
  2992  019B                     	;# 
  2993  019B                     	;# 
  2994  019B                     	;# 
  2995  019C                     	;# 
  2996  019C                     	;# 
  2997  019C                     	;# 
  2998  019D                     	;# 
  2999  019D                     	;# 
  3000  019D                     	;# 
  3001  019E                     	;# 
  3002  019E                     	;# 
  3003  019E                     	;# 
  3004  019F                     	;# 
  3005  019F                     	;# 
  3006  019F                     	;# 
  3007  019F                     	;# 
  3008  019F                     	;# 
  3009  020C                     	;# 
  3010  020D                     	;# 
  3011  020E                     	;# 
  3012  0211                     	;# 
  3013  0211                     	;# 
  3014  0212                     	;# 
  3015  0212                     	;# 
  3016  0213                     	;# 
  3017  0213                     	;# 
  3018  0214                     	;# 
  3019  0214                     	;# 
  3020  0215                     	;# 
  3021  0215                     	;# 
  3022  0215                     	;# 
  3023  0215                     	;# 
  3024  0216                     	;# 
  3025  0216                     	;# 
  3026  0217                     	;# 
  3027  0217                     	;# 
  3028  0219                     	;# 
  3029  021A                     	;# 
  3030  021B                     	;# 
  3031  021C                     	;# 
  3032  021D                     	;# 
  3033  021D                     	;# 
  3034  021E                     	;# 
  3035  021F                     	;# 
  3036  028C                     	;# 
  3037  028D                     	;# 
  3038  028E                     	;# 
  3039  0291                     	;# 
  3040  0291                     	;# 
  3041  0292                     	;# 
  3042  0293                     	;# 
  3043  0294                     	;# 
  3044  0295                     	;# 
  3045  0295                     	;# 
  3046  0296                     	;# 
  3047  0297                     	;# 
  3048  0298                     	;# 
  3049  029F                     	;# 
  3050  030C                     	;# 
  3051  030D                     	;# 
  3052  030E                     	;# 
  3053  0311                     	;# 
  3054  0311                     	;# 
  3055  0312                     	;# 
  3056  0313                     	;# 
  3057  0314                     	;# 
  3058  0315                     	;# 
  3059  0315                     	;# 
  3060  0316                     	;# 
  3061  0317                     	;# 
  3062  0318                     	;# 
  3063  038C                     	;# 
  3064  038D                     	;# 
  3065  038E                     	;# 
  3066  0391                     	;# 
  3067  0392                     	;# 
  3068  0393                     	;# 
  3069  0394                     	;# 
  3070  0395                     	;# 
  3071  0396                     	;# 
  3072  0397                     	;# 
  3073  0398                     	;# 
  3074  0399                     	;# 
  3075  039A                     	;# 
  3076  039C                     	;# 
  3077  039D                     	;# 
  3078  039E                     	;# 
  3079  039F                     	;# 
  3080  0411                     	;# 
  3081  0411                     	;# 
  3082  0412                     	;# 
  3083  0413                     	;# 
  3084  0414                     	;# 
  3085  0415                     	;# 
  3086  0416                     	;# 
  3087  0417                     	;# 
  3088  0418                     	;# 
  3089  0418                     	;# 
  3090  0419                     	;# 
  3091  041A                     	;# 
  3092  041B                     	;# 
  3093  041C                     	;# 
  3094  041D                     	;# 
  3095  041E                     	;# 
  3096  041F                     	;# 
  3097  0498                     	;# 
  3098  0498                     	;# 
  3099  0499                     	;# 
  3100  049A                     	;# 
  3101  049B                     	;# 
  3102  049B                     	;# 
  3103  049C                     	;# 
  3104  049D                     	;# 
  3105  049E                     	;# 
  3106  049F                     	;# 
  3107  0617                     	;# 
  3108  0618                     	;# 
  3109  0619                     	;# 
  3110  0619                     	;# 
  3111  061A                     	;# 
  3112  061B                     	;# 
  3113  061C                     	;# 
  3114  061C                     	;# 
  3115  061F                     	;# 
  3116  0691                     	;# 
  3117  0692                     	;# 
  3118  0693                     	;# 
  3119  0694                     	;# 
  3120  0695                     	;# 
  3121  0696                     	;# 
  3122  0697                     	;# 
  3123  0698                     	;# 
  3124  0699                     	;# 
  3125  0711                     	;# 
  3126  0712                     	;# 
  3127  0713                     	;# 
  3128  0714                     	;# 
  3129  0715                     	;# 
  3130  0716                     	;# 
  3131  0717                     	;# 
  3132  0718                     	;# 
  3133  0719                     	;# 
  3134  0891                     	;# 
  3135  0891                     	;# 
  3136  0891                     	;# 
  3137  0891                     	;# 
  3138  0891                     	;# 
  3139  0891                     	;# 
  3140  0892                     	;# 
  3141  0892                     	;# 
  3142  0892                     	;# 
  3143  0893                     	;# 
  3144  0893                     	;# 
  3145  0893                     	;# 
  3146  0893                     	;# 
  3147  0893                     	;# 
  3148  0893                     	;# 
  3149  0894                     	;# 
  3150  0894                     	;# 
  3151  0894                     	;# 
  3152  0895                     	;# 
  3153  0895                     	;# 
  3154  0895                     	;# 
  3155  0896                     	;# 
  3156  0896                     	;# 
  3157  0896                     	;# 
  3158  089B                     	;# 
  3159  0911                     	;# 
  3160  0912                     	;# 
  3161  0913                     	;# 
  3162  0914                     	;# 
  3163  0915                     	;# 
  3164  0916                     	;# 
  3165  0918                     	;# 
  3166  0919                     	;# 
  3167  091A                     	;# 
  3168  091B                     	;# 
  3169  091C                     	;# 
  3170  091D                     	;# 
  3171  091E                     	;# 
  3172  091F                     	;# 
  3173  0E0F                     	;# 
  3174  0E10                     	;# 
  3175  0E11                     	;# 
  3176  0E12                     	;# 
  3177  0E13                     	;# 
  3178  0E14                     	;# 
  3179  0E15                     	;# 
  3180  0E16                     	;# 
  3181  0E17                     	;# 
  3182  0E18                     	;# 
  3183  0E19                     	;# 
  3184  0E1A                     	;# 
  3185  0E1B                     	;# 
  3186  0E1C                     	;# 
  3187  0E1D                     	;# 
  3188  0E1E                     	;# 
  3189  0E1F                     	;# 
  3190  0E20                     	;# 
  3191  0E21                     	;# 
  3192  0E22                     	;# 
  3193  0E24                     	;# 
  3194  0E25                     	;# 
  3195  0E28                     	;# 
  3196  0E29                     	;# 
  3197  0E2A                     	;# 
  3198  0E2B                     	;# 
  3199  0E2C                     	;# 
  3200  0E2D                     	;# 
  3201  0E2E                     	;# 
  3202  0E2F                     	;# 
  3203  0E90                     	;# 
  3204  0E91                     	;# 
  3205  0E92                     	;# 
  3206  0E94                     	;# 
  3207  0E95                     	;# 
  3208  0E9C                     	;# 
  3209  0E9D                     	;# 
  3210  0E9E                     	;# 
  3211  0E9F                     	;# 
  3212  0EA0                     	;# 
  3213  0EA1                     	;# 
  3214  0EA2                     	;# 
  3215  0EA3                     	;# 
  3216  0EA4                     	;# 
  3217  0EA5                     	;# 
  3218  0EA6                     	;# 
  3219  0EA7                     	;# 
  3220  0F0F                     	;# 
  3221  0F10                     	;# 
  3222  0F11                     	;# 
  3223  0F12                     	;# 
  3224  0F13                     	;# 
  3225  0F14                     	;# 
  3226  0F15                     	;# 
  3227  0F16                     	;# 
  3228  0F17                     	;# 
  3229  0F18                     	;# 
  3230  0F19                     	;# 
  3231  0F1A                     	;# 
  3232  0F1B                     	;# 
  3233  0F1C                     	;# 
  3234  0F1D                     	;# 
  3235  0F1E                     	;# 
  3236  0F1F                     	;# 
  3237  0F20                     	;# 
  3238  0F21                     	;# 
  3239  0F22                     	;# 
  3240  0F23                     	;# 
  3241  0F24                     	;# 
  3242  0F25                     	;# 
  3243  0F26                     	;# 
  3244  0F27                     	;# 
  3245  0F28                     	;# 
  3246  0F29                     	;# 
  3247  0F2A                     	;# 
  3248  0F2B                     	;# 
  3249  0F2C                     	;# 
  3250  0F2D                     	;# 
  3251  0F2E                     	;# 
  3252  0F2F                     	;# 
  3253  0F30                     	;# 
  3254  0F31                     	;# 
  3255  0F32                     	;# 
  3256  0F33                     	;# 
  3257  0F34                     	;# 
  3258  0F35                     	;# 
  3259  0F36                     	;# 
  3260  0F37                     	;# 
  3261  0FE4                     	;# 
  3262  0FE5                     	;# 
  3263  0FE6                     	;# 
  3264  0FE7                     	;# 
  3265  0FE8                     	;# 
  3266  0FE9                     	;# 
  3267  0FEA                     	;# 
  3268  0FEB                     	;# 
  3269  0FED                     	;# 
  3270  0FEE                     	;# 
  3271  0FEF                     	;# 
  3272  0000                     	;# 
  3273  0001                     	;# 
  3274  0002                     	;# 
  3275  0003                     	;# 
  3276  0004                     	;# 
  3277  0005                     	;# 
  3278  0006                     	;# 
  3279  0007                     	;# 
  3280  0008                     	;# 
  3281  0009                     	;# 
  3282  000A                     	;# 
  3283  000B                     	;# 
  3284  000C                     	;# 
  3285  000D                     	;# 
  3286  000E                     	;# 
  3287  0010                     	;# 
  3288  0011                     	;# 
  3289  0012                     	;# 
  3290  0013                     	;# 
  3291  0014                     	;# 
  3292  0015                     	;# 
  3293  0015                     	;# 
  3294  0016                     	;# 
  3295  0016                     	;# 
  3296  0017                     	;# 
  3297  0018                     	;# 
  3298  0019                     	;# 
  3299  0019                     	;# 
  3300  001A                     	;# 
  3301  001B                     	;# 
  3302  001C                     	;# 
  3303  001D                     	;# 
  3304  001E                     	;# 
  3305  001F                     	;# 
  3306  008C                     	;# 
  3307  008D                     	;# 
  3308  008E                     	;# 
  3309  0090                     	;# 
  3310  0091                     	;# 
  3311  0092                     	;# 
  3312  0093                     	;# 
  3313  0094                     	;# 
  3314  0097                     	;# 
  3315  009B                     	;# 
  3316  009B                     	;# 
  3317  009C                     	;# 
  3318  009D                     	;# 
  3319  009E                     	;# 
  3320  009F                     	;# 
  3321  010C                     	;# 
  3322  010D                     	;# 
  3323  010E                     	;# 
  3324  0111                     	;# 
  3325  0112                     	;# 
  3326  0113                     	;# 
  3327  0114                     	;# 
  3328  0115                     	;# 
  3329  0116                     	;# 
  3330  0117                     	;# 
  3331  0118                     	;# 
  3332  0119                     	;# 
  3333  018C                     	;# 
  3334  018D                     	;# 
  3335  018E                     	;# 
  3336  0197                     	;# 
  3337  0199                     	;# 
  3338  0199                     	;# 
  3339  0199                     	;# 
  3340  019A                     	;# 
  3341  019A                     	;# 
  3342  019A                     	;# 
  3343  019B                     	;# 
  3344  019B                     	;# 
  3345  019B                     	;# 
  3346  019B                     	;# 
  3347  019B                     	;# 
  3348  019C                     	;# 
  3349  019C                     	;# 
  3350  019C                     	;# 
  3351  019D                     	;# 
  3352  019D                     	;# 
  3353  019D                     	;# 
  3354  019E                     	;# 
  3355  019E                     	;# 
  3356  019E                     	;# 
  3357  019F                     	;# 
  3358  019F                     	;# 
  3359  019F                     	;# 
  3360  019F                     	;# 
  3361  019F                     	;# 
  3362  020C                     	;# 
  3363  020D                     	;# 
  3364  020E                     	;# 
  3365  0211                     	;# 
  3366  0211                     	;# 
  3367  0212                     	;# 
  3368  0212                     	;# 
  3369  0213                     	;# 
  3370  0213                     	;# 
  3371  0214                     	;# 
  3372  0214                     	;# 
  3373  0215                     	;# 
  3374  0215                     	;# 
  3375  0215                     	;# 
  3376  0215                     	;# 
  3377  0216                     	;# 
  3378  0216                     	;# 
  3379  0217                     	;# 
  3380  0217                     	;# 
  3381  0219                     	;# 
  3382  021A                     	;# 
  3383  021B                     	;# 
  3384  021C                     	;# 
  3385  021D                     	;# 
  3386  021D                     	;# 
  3387  021E                     	;# 
  3388  021F                     	;# 
  3389  028C                     	;# 
  3390  028D                     	;# 
  3391  028E                     	;# 
  3392  0291                     	;# 
  3393  0291                     	;# 
  3394  0292                     	;# 
  3395  0293                     	;# 
  3396  0294                     	;# 
  3397  0295                     	;# 
  3398  0295                     	;# 
  3399  0296                     	;# 
  3400  0297                     	;# 
  3401  0298                     	;# 
  3402  029F                     	;# 
  3403  030C                     	;# 
  3404  030D                     	;# 
  3405  030E                     	;# 
  3406  0311                     	;# 
  3407  0311                     	;# 
  3408  0312                     	;# 
  3409  0313                     	;# 
  3410  0314                     	;# 
  3411  0315                     	;# 
  3412  0315                     	;# 
  3413  0316                     	;# 
  3414  0317                     	;# 
  3415  0318                     	;# 
  3416  038C                     	;# 
  3417  038D                     	;# 
  3418  038E                     	;# 
  3419  0391                     	;# 
  3420  0392                     	;# 
  3421  0393                     	;# 
  3422  0394                     	;# 
  3423  0395                     	;# 
  3424  0396                     	;# 
  3425  0397                     	;# 
  3426  0398                     	;# 
  3427  0399                     	;# 
  3428  039A                     	;# 
  3429  039C                     	;# 
  3430  039D                     	;# 
  3431  039E                     	;# 
  3432  039F                     	;# 
  3433  0411                     	;# 
  3434  0411                     	;# 
  3435  0412                     	;# 
  3436  0413                     	;# 
  3437  0414                     	;# 
  3438  0415                     	;# 
  3439  0416                     	;# 
  3440  0417                     	;# 
  3441  0418                     	;# 
  3442  0418                     	;# 
  3443  0419                     	;# 
  3444  041A                     	;# 
  3445  041B                     	;# 
  3446  041C                     	;# 
  3447  041D                     	;# 
  3448  041E                     	;# 
  3449  041F                     	;# 
  3450  0498                     	;# 
  3451  0498                     	;# 
  3452  0499                     	;# 
  3453  049A                     	;# 
  3454  049B                     	;# 
  3455  049B                     	;# 
  3456  049C                     	;# 
  3457  049D                     	;# 
  3458  049E                     	;# 
  3459  049F                     	;# 
  3460  0617                     	;# 
  3461  0618                     	;# 
  3462  0619                     	;# 
  3463  0619                     	;# 
  3464  061A                     	;# 
  3465  061B                     	;# 
  3466  061C                     	;# 
  3467  061C                     	;# 
  3468  061F                     	;# 
  3469  0691                     	;# 
  3470  0692                     	;# 
  3471  0693                     	;# 
  3472  0694                     	;# 
  3473  0695                     	;# 
  3474  0696                     	;# 
  3475  0697                     	;# 
  3476  0698                     	;# 
  3477  0699                     	;# 
  3478  0711                     	;# 
  3479  0712                     	;# 
  3480  0713                     	;# 
  3481  0714                     	;# 
  3482  0715                     	;# 
  3483  0716                     	;# 
  3484  0717                     	;# 
  3485  0718                     	;# 
  3486  0719                     	;# 
  3487  0891                     	;# 
  3488  0891                     	;# 
  3489  0891                     	;# 
  3490  0891                     	;# 
  3491  0891                     	;# 
  3492  0891                     	;# 
  3493  0892                     	;# 
  3494  0892                     	;# 
  3495  0892                     	;# 
  3496  0893                     	;# 
  3497  0893                     	;# 
  3498  0893                     	;# 
  3499  0893                     	;# 
  3500  0893                     	;# 
  3501  0893                     	;# 
  3502  0894                     	;# 
  3503  0894                     	;# 
  3504  0894                     	;# 
  3505  0895                     	;# 
  3506  0895                     	;# 
  3507  0895                     	;# 
  3508  0896                     	;# 
  3509  0896                     	;# 
  3510  0896                     	;# 
  3511  089B                     	;# 
  3512  0911                     	;# 
  3513  0912                     	;# 
  3514  0913                     	;# 
  3515  0914                     	;# 
  3516  0915                     	;# 
  3517  0916                     	;# 
  3518  0918                     	;# 
  3519  0919                     	;# 
  3520  091A                     	;# 
  3521  091B                     	;# 
  3522  091C                     	;# 
  3523  091D                     	;# 
  3524  091E                     	;# 
  3525  091F                     	;# 
  3526  0E0F                     	;# 
  3527  0E10                     	;# 
  3528  0E11                     	;# 
  3529  0E12                     	;# 
  3530  0E13                     	;# 
  3531  0E14                     	;# 
  3532  0E15                     	;# 
  3533  0E16                     	;# 
  3534  0E17                     	;# 
  3535  0E18                     	;# 
  3536  0E19                     	;# 
  3537  0E1A                     	;# 
  3538  0E1B                     	;# 
  3539  0E1C                     	;# 
  3540  0E1D                     	;# 
  3541  0E1E                     	;# 
  3542  0E1F                     	;# 
  3543  0E20                     	;# 
  3544  0E21                     	;# 
  3545  0E22                     	;# 
  3546  0E24                     	;# 
  3547  0E25                     	;# 
  3548  0E28                     	;# 
  3549  0E29                     	;# 
  3550  0E2A                     	;# 
  3551  0E2B                     	;# 
  3552  0E2C                     	;# 
  3553  0E2D                     	;# 
  3554  0E2E                     	;# 
  3555  0E2F                     	;# 
  3556  0E90                     	;# 
  3557  0E91                     	;# 
  3558  0E92                     	;# 
  3559  0E94                     	;# 
  3560  0E95                     	;# 
  3561  0E9C                     	;# 
  3562  0E9D                     	;# 
  3563  0E9E                     	;# 
  3564  0E9F                     	;# 
  3565  0EA0                     	;# 
  3566  0EA1                     	;# 
  3567  0EA2                     	;# 
  3568  0EA3                     	;# 
  3569  0EA4                     	;# 
  3570  0EA5                     	;# 
  3571  0EA6                     	;# 
  3572  0EA7                     	;# 
  3573  0F0F                     	;# 
  3574  0F10                     	;# 
  3575  0F11                     	;# 
  3576  0F12                     	;# 
  3577  0F13                     	;# 
  3578  0F14                     	;# 
  3579  0F15                     	;# 
  3580  0F16                     	;# 
  3581  0F17                     	;# 
  3582  0F18                     	;# 
  3583  0F19                     	;# 
  3584  0F1A                     	;# 
  3585  0F1B                     	;# 
  3586  0F1C                     	;# 
  3587  0F1D                     	;# 
  3588  0F1E                     	;# 
  3589  0F1F                     	;# 
  3590  0F20                     	;# 
  3591  0F21                     	;# 
  3592  0F22                     	;# 
  3593  0F23                     	;# 
  3594  0F24                     	;# 
  3595  0F25                     	;# 
  3596  0F26                     	;# 
  3597  0F27                     	;# 
  3598  0F28                     	;# 
  3599  0F29                     	;# 
  3600  0F2A                     	;# 
  3601  0F2B                     	;# 
  3602  0F2C                     	;# 
  3603  0F2D                     	;# 
  3604  0F2E                     	;# 
  3605  0F2F                     	;# 
  3606  0F30                     	;# 
  3607  0F31                     	;# 
  3608  0F32                     	;# 
  3609  0F33                     	;# 
  3610  0F34                     	;# 
  3611  0F35                     	;# 
  3612  0F36                     	;# 
  3613  0F37                     	;# 
  3614  0FE4                     	;# 
  3615  0FE5                     	;# 
  3616  0FE6                     	;# 
  3617  0FE7                     	;# 
  3618  0FE8                     	;# 
  3619  0FE9                     	;# 
  3620  0FEA                     	;# 
  3621  0FEB                     	;# 
  3622  0FED                     	;# 
  3623  0FEE                     	;# 
  3624  0FEF                     	;# 
  3625  0000                     	;# 
  3626  0001                     	;# 
  3627  0002                     	;# 
  3628  0003                     	;# 
  3629  0004                     	;# 
  3630  0005                     	;# 
  3631  0006                     	;# 
  3632  0007                     	;# 
  3633  0008                     	;# 
  3634  0009                     	;# 
  3635  000A                     	;# 
  3636  000B                     	;# 
  3637  000C                     	;# 
  3638  000D                     	;# 
  3639  000E                     	;# 
  3640  0010                     	;# 
  3641  0011                     	;# 
  3642  0012                     	;# 
  3643  0013                     	;# 
  3644  0014                     	;# 
  3645  0015                     	;# 
  3646  0015                     	;# 
  3647  0016                     	;# 
  3648  0016                     	;# 
  3649  0017                     	;# 
  3650  0018                     	;# 
  3651  0019                     	;# 
  3652  0019                     	;# 
  3653  001A                     	;# 
  3654  001B                     	;# 
  3655  001C                     	;# 
  3656  001D                     	;# 
  3657  001E                     	;# 
  3658  001F                     	;# 
  3659  008C                     	;# 
  3660  008D                     	;# 
  3661  008E                     	;# 
  3662  0090                     	;# 
  3663  0091                     	;# 
  3664  0092                     	;# 
  3665  0093                     	;# 
  3666  0094                     	;# 
  3667  0097                     	;# 
  3668  009B                     	;# 
  3669  009B                     	;# 
  3670  009C                     	;# 
  3671  009D                     	;# 
  3672  009E                     	;# 
  3673  009F                     	;# 
  3674  010C                     	;# 
  3675  010D                     	;# 
  3676  010E                     	;# 
  3677  0111                     	;# 
  3678  0112                     	;# 
  3679  0113                     	;# 
  3680  0114                     	;# 
  3681  0115                     	;# 
  3682  0116                     	;# 
  3683  0117                     	;# 
  3684  0118                     	;# 
  3685  0119                     	;# 
  3686  018C                     	;# 
  3687  018D                     	;# 
  3688  018E                     	;# 
  3689  0197                     	;# 
  3690  0199                     	;# 
  3691  0199                     	;# 
  3692  0199                     	;# 
  3693  019A                     	;# 
  3694  019A                     	;# 
  3695  019A                     	;# 
  3696  019B                     	;# 
  3697  019B                     	;# 
  3698  019B                     	;# 
  3699  019B                     	;# 
  3700  019B                     	;# 
  3701  019C                     	;# 
  3702  019C                     	;# 
  3703  019C                     	;# 
  3704  019D                     	;# 
  3705  019D                     	;# 
  3706  019D                     	;# 
  3707  019E                     	;# 
  3708  019E                     	;# 
  3709  019E                     	;# 
  3710  019F                     	;# 
  3711  019F                     	;# 
  3712  019F                     	;# 
  3713  019F                     	;# 
  3714  019F                     	;# 
  3715  020C                     	;# 
  3716  020D                     	;# 
  3717  020E                     	;# 
  3718  0211                     	;# 
  3719  0211                     	;# 
  3720  0212                     	;# 
  3721  0212                     	;# 
  3722  0213                     	;# 
  3723  0213                     	;# 
  3724  0214                     	;# 
  3725  0214                     	;# 
  3726  0215                     	;# 
  3727  0215                     	;# 
  3728  0215                     	;# 
  3729  0215                     	;# 
  3730  0216                     	;# 
  3731  0216                     	;# 
  3732  0217                     	;# 
  3733  0217                     	;# 
  3734  0219                     	;# 
  3735  021A                     	;# 
  3736  021B                     	;# 
  3737  021C                     	;# 
  3738  021D                     	;# 
  3739  021D                     	;# 
  3740  021E                     	;# 
  3741  021F                     	;# 
  3742  028C                     	;# 
  3743  028D                     	;# 
  3744  028E                     	;# 
  3745  0291                     	;# 
  3746  0291                     	;# 
  3747  0292                     	;# 
  3748  0293                     	;# 
  3749  0294                     	;# 
  3750  0295                     	;# 
  3751  0295                     	;# 
  3752  0296                     	;# 
  3753  0297                     	;# 
  3754  0298                     	;# 
  3755  029F                     	;# 
  3756  030C                     	;# 
  3757  030D                     	;# 
  3758  030E                     	;# 
  3759  0311                     	;# 
  3760  0311                     	;# 
  3761  0312                     	;# 
  3762  0313                     	;# 
  3763  0314                     	;# 
  3764  0315                     	;# 
  3765  0315                     	;# 
  3766  0316                     	;# 
  3767  0317                     	;# 
  3768  0318                     	;# 
  3769  038C                     	;# 
  3770  038D                     	;# 
  3771  038E                     	;# 
  3772  0391                     	;# 
  3773  0392                     	;# 
  3774  0393                     	;# 
  3775  0394                     	;# 
  3776  0395                     	;# 
  3777  0396                     	;# 
  3778  0397                     	;# 
  3779  0398                     	;# 
  3780  0399                     	;# 
  3781  039A                     	;# 
  3782  039C                     	;# 
  3783  039D                     	;# 
  3784  039E                     	;# 
  3785  039F                     	;# 
  3786  0411                     	;# 
  3787  0411                     	;# 
  3788  0412                     	;# 
  3789  0413                     	;# 
  3790  0414                     	;# 
  3791  0415                     	;# 
  3792  0416                     	;# 
  3793  0417                     	;# 
  3794  0418                     	;# 
  3795  0418                     	;# 
  3796  0419                     	;# 
  3797  041A                     	;# 
  3798  041B                     	;# 
  3799  041C                     	;# 
  3800  041D                     	;# 
  3801  041E                     	;# 
  3802  041F                     	;# 
  3803  0498                     	;# 
  3804  0498                     	;# 
  3805  0499                     	;# 
  3806  049A                     	;# 
  3807  049B                     	;# 
  3808  049B                     	;# 
  3809  049C                     	;# 
  3810  049D                     	;# 
  3811  049E                     	;# 
  3812  049F                     	;# 
  3813  0617                     	;# 
  3814  0618                     	;# 
  3815  0619                     	;# 
  3816  0619                     	;# 
  3817  061A                     	;# 
  3818  061B                     	;# 
  3819  061C                     	;# 
  3820  061C                     	;# 
  3821  061F                     	;# 
  3822  0691                     	;# 
  3823  0692                     	;# 
  3824  0693                     	;# 
  3825  0694                     	;# 
  3826  0695                     	;# 
  3827  0696                     	;# 
  3828  0697                     	;# 
  3829  0698                     	;# 
  3830  0699                     	;# 
  3831  0711                     	;# 
  3832  0712                     	;# 
  3833  0713                     	;# 
  3834  0714                     	;# 
  3835  0715                     	;# 
  3836  0716                     	;# 
  3837  0717                     	;# 
  3838  0718                     	;# 
  3839  0719                     	;# 
  3840  0891                     	;# 
  3841  0891                     	;# 
  3842  0891                     	;# 
  3843  0891                     	;# 
  3844  0891                     	;# 
  3845  0891                     	;# 
  3846  0892                     	;# 
  3847  0892                     	;# 
  3848  0892                     	;# 
  3849  0893                     	;# 
  3850  0893                     	;# 
  3851  0893                     	;# 
  3852  0893                     	;# 
  3853  0893                     	;# 
  3854  0893                     	;# 
  3855  0894                     	;# 
  3856  0894                     	;# 
  3857  0894                     	;# 
  3858  0895                     	;# 
  3859  0895                     	;# 
  3860  0895                     	;# 
  3861  0896                     	;# 
  3862  0896                     	;# 
  3863  0896                     	;# 
  3864  089B                     	;# 
  3865  0911                     	;# 
  3866  0912                     	;# 
  3867  0913                     	;# 
  3868  0914                     	;# 
  3869  0915                     	;# 
  3870  0916                     	;# 
  3871  0918                     	;# 
  3872  0919                     	;# 
  3873  091A                     	;# 
  3874  091B                     	;# 
  3875  091C                     	;# 
  3876  091D                     	;# 
  3877  091E                     	;# 
  3878  091F                     	;# 
  3879  0E0F                     	;# 
  3880  0E10                     	;# 
  3881  0E11                     	;# 
  3882  0E12                     	;# 
  3883  0E13                     	;# 
  3884  0E14                     	;# 
  3885  0E15                     	;# 
  3886  0E16                     	;# 
  3887  0E17                     	;# 
  3888  0E18                     	;# 
  3889  0E19                     	;# 
  3890  0E1A                     	;# 
  3891  0E1B                     	;# 
  3892  0E1C                     	;# 
  3893  0E1D                     	;# 
  3894  0E1E                     	;# 
  3895  0E1F                     	;# 
  3896  0E20                     	;# 
  3897  0E21                     	;# 
  3898  0E22                     	;# 
  3899  0E24                     	;# 
  3900  0E25                     	;# 
  3901  0E28                     	;# 
  3902  0E29                     	;# 
  3903  0E2A                     	;# 
  3904  0E2B                     	;# 
  3905  0E2C                     	;# 
  3906  0E2D                     	;# 
  3907  0E2E                     	;# 
  3908  0E2F                     	;# 
  3909  0E90                     	;# 
  3910  0E91                     	;# 
  3911  0E92                     	;# 
  3912  0E94                     	;# 
  3913  0E95                     	;# 
  3914  0E9C                     	;# 
  3915  0E9D                     	;# 
  3916  0E9E                     	;# 
  3917  0E9F                     	;# 
  3918  0EA0                     	;# 
  3919  0EA1                     	;# 
  3920  0EA2                     	;# 
  3921  0EA3                     	;# 
  3922  0EA4                     	;# 
  3923  0EA5                     	;# 
  3924  0EA6                     	;# 
  3925  0EA7                     	;# 
  3926  0F0F                     	;# 
  3927  0F10                     	;# 
  3928  0F11                     	;# 
  3929  0F12                     	;# 
  3930  0F13                     	;# 
  3931  0F14                     	;# 
  3932  0F15                     	;# 
  3933  0F16                     	;# 
  3934  0F17                     	;# 
  3935  0F18                     	;# 
  3936  0F19                     	;# 
  3937  0F1A                     	;# 
  3938  0F1B                     	;# 
  3939  0F1C                     	;# 
  3940  0F1D                     	;# 
  3941  0F1E                     	;# 
  3942  0F1F                     	;# 
  3943  0F20                     	;# 
  3944  0F21                     	;# 
  3945  0F22                     	;# 
  3946  0F23                     	;# 
  3947  0F24                     	;# 
  3948  0F25                     	;# 
  3949  0F26                     	;# 
  3950  0F27                     	;# 
  3951  0F28                     	;# 
  3952  0F29                     	;# 
  3953  0F2A                     	;# 
  3954  0F2B                     	;# 
  3955  0F2C                     	;# 
  3956  0F2D                     	;# 
  3957  0F2E                     	;# 
  3958  0F2F                     	;# 
  3959  0F30                     	;# 
  3960  0F31                     	;# 
  3961  0F32                     	;# 
  3962  0F33                     	;# 
  3963  0F34                     	;# 
  3964  0F35                     	;# 
  3965  0F36                     	;# 
  3966  0F37                     	;# 
  3967  0FE4                     	;# 
  3968  0FE5                     	;# 
  3969  0FE6                     	;# 
  3970  0FE7                     	;# 
  3971  0FE8                     	;# 
  3972  0FE9                     	;# 
  3973  0FEA                     	;# 
  3974  0FEB                     	;# 
  3975  0FED                     	;# 
  3976  0FEE                     	;# 
  3977  0FEF                     	;# 
  3978  0000                     	;# 
  3979  0001                     	;# 
  3980  0002                     	;# 
  3981  0003                     	;# 
  3982  0004                     	;# 
  3983  0005                     	;# 
  3984  0006                     	;# 
  3985  0007                     	;# 
  3986  0008                     	;# 
  3987  0009                     	;# 
  3988  000A                     	;# 
  3989  000B                     	;# 
  3990  000C                     	;# 
  3991  000D                     	;# 
  3992  000E                     	;# 
  3993  0010                     	;# 
  3994  0011                     	;# 
  3995  0012                     	;# 
  3996  0013                     	;# 
  3997  0014                     	;# 
  3998  0015                     	;# 
  3999  0015                     	;# 
  4000  0016                     	;# 
  4001  0016                     	;# 
  4002  0017                     	;# 
  4003  0018                     	;# 
  4004  0019                     	;# 
  4005  0019                     	;# 
  4006  001A                     	;# 
  4007  001B                     	;# 
  4008  001C                     	;# 
  4009  001D                     	;# 
  4010  001E                     	;# 
  4011  001F                     	;# 
  4012  008C                     	;# 
  4013  008D                     	;# 
  4014  008E                     	;# 
  4015  0090                     	;# 
  4016  0091                     	;# 
  4017  0092                     	;# 
  4018  0093                     	;# 
  4019  0094                     	;# 
  4020  0097                     	;# 
  4021  009B                     	;# 
  4022  009B                     	;# 
  4023  009C                     	;# 
  4024  009D                     	;# 
  4025  009E                     	;# 
  4026  009F                     	;# 
  4027  010C                     	;# 
  4028  010D                     	;# 
  4029  010E                     	;# 
  4030  0111                     	;# 
  4031  0112                     	;# 
  4032  0113                     	;# 
  4033  0114                     	;# 
  4034  0115                     	;# 
  4035  0116                     	;# 
  4036  0117                     	;# 
  4037  0118                     	;# 
  4038  0119                     	;# 
  4039  018C                     	;# 
  4040  018D                     	;# 
  4041  018E                     	;# 
  4042  0197                     	;# 
  4043  0199                     	;# 
  4044  0199                     	;# 
  4045  0199                     	;# 
  4046  019A                     	;# 
  4047  019A                     	;# 
  4048  019A                     	;# 
  4049  019B                     	;# 
  4050  019B                     	;# 
  4051  019B                     	;# 
  4052  019B                     	;# 
  4053  019B                     	;# 
  4054  019C                     	;# 
  4055  019C                     	;# 
  4056  019C                     	;# 
  4057  019D                     	;# 
  4058  019D                     	;# 
  4059  019D                     	;# 
  4060  019E                     	;# 
  4061  019E                     	;# 
  4062  019E                     	;# 
  4063  019F                     	;# 
  4064  019F                     	;# 
  4065  019F                     	;# 
  4066  019F                     	;# 
  4067  019F                     	;# 
  4068  020C                     	;# 
  4069  020D                     	;# 
  4070  020E                     	;# 
  4071  0211                     	;# 
  4072  0211                     	;# 
  4073  0212                     	;# 
  4074  0212                     	;# 
  4075  0213                     	;# 
  4076  0213                     	;# 
  4077  0214                     	;# 
  4078  0214                     	;# 
  4079  0215                     	;# 
  4080  0215                     	;# 
  4081  0215                     	;# 
  4082  0215                     	;# 
  4083  0216                     	;# 
  4084  0216                     	;# 
  4085  0217                     	;# 
  4086  0217                     	;# 
  4087  0219                     	;# 
  4088  021A                     	;# 
  4089  021B                     	;# 
  4090  021C                     	;# 
  4091  021D                     	;# 
  4092  021D                     	;# 
  4093  021E                     	;# 
  4094  021F                     	;# 
  4095  028C                     	;# 
  4096  028D                     	;# 
  4097  028E                     	;# 
  4098  0291                     	;# 
  4099  0291                     	;# 
  4100  0292                     	;# 
  4101  0293                     	;# 
  4102  0294                     	;# 
  4103  0295                     	;# 
  4104  0295                     	;# 
  4105  0296                     	;# 
  4106  0297                     	;# 
  4107  0298                     	;# 
  4108  029F                     	;# 
  4109  030C                     	;# 
  4110  030D                     	;# 
  4111  030E                     	;# 
  4112  0311                     	;# 
  4113  0311                     	;# 
  4114  0312                     	;# 
  4115  0313                     	;# 
  4116  0314                     	;# 
  4117  0315                     	;# 
  4118  0315                     	;# 
  4119  0316                     	;# 
  4120  0317                     	;# 
  4121  0318                     	;# 
  4122  038C                     	;# 
  4123  038D                     	;# 
  4124  038E                     	;# 
  4125  0391                     	;# 
  4126  0392                     	;# 
  4127  0393                     	;# 
  4128  0394                     	;# 
  4129  0395                     	;# 
  4130  0396                     	;# 
  4131  0397                     	;# 
  4132  0398                     	;# 
  4133  0399                     	;# 
  4134  039A                     	;# 
  4135  039C                     	;# 
  4136  039D                     	;# 
  4137  039E                     	;# 
  4138  039F                     	;# 
  4139  0411                     	;# 
  4140  0411                     	;# 
  4141  0412                     	;# 
  4142  0413                     	;# 
  4143  0414                     	;# 
  4144  0415                     	;# 
  4145  0416                     	;# 
  4146  0417                     	;# 
  4147  0418                     	;# 
  4148  0418                     	;# 
  4149  0419                     	;# 
  4150  041A                     	;# 
  4151  041B                     	;# 
  4152  041C                     	;# 
  4153  041D                     	;# 
  4154  041E                     	;# 
  4155  041F                     	;# 
  4156  0498                     	;# 
  4157  0498                     	;# 
  4158  0499                     	;# 
  4159  049A                     	;# 
  4160  049B                     	;# 
  4161  049B                     	;# 
  4162  049C                     	;# 
  4163  049D                     	;# 
  4164  049E                     	;# 
  4165  049F                     	;# 
  4166  0617                     	;# 
  4167  0618                     	;# 
  4168  0619                     	;# 
  4169  0619                     	;# 
  4170  061A                     	;# 
  4171  061B                     	;# 
  4172  061C                     	;# 
  4173  061C                     	;# 
  4174  061F                     	;# 
  4175  0691                     	;# 
  4176  0692                     	;# 
  4177  0693                     	;# 
  4178  0694                     	;# 
  4179  0695                     	;# 
  4180  0696                     	;# 
  4181  0697                     	;# 
  4182  0698                     	;# 
  4183  0699                     	;# 
  4184  0711                     	;# 
  4185  0712                     	;# 
  4186  0713                     	;# 
  4187  0714                     	;# 
  4188  0715                     	;# 
  4189  0716                     	;# 
  4190  0717                     	;# 
  4191  0718                     	;# 
  4192  0719                     	;# 
  4193  0891                     	;# 
  4194  0891                     	;# 
  4195  0891                     	;# 
  4196  0891                     	;# 
  4197  0891                     	;# 
  4198  0891                     	;# 
  4199  0892                     	;# 
  4200  0892                     	;# 
  4201  0892                     	;# 
  4202  0893                     	;# 
  4203  0893                     	;# 
  4204  0893                     	;# 
  4205  0893                     	;# 
  4206  0893                     	;# 
  4207  0893                     	;# 
  4208  0894                     	;# 
  4209  0894                     	;# 
  4210  0894                     	;# 
  4211  0895                     	;# 
  4212  0895                     	;# 
  4213  0895                     	;# 
  4214  0896                     	;# 
  4215  0896                     	;# 
  4216  0896                     	;# 
  4217  089B                     	;# 
  4218  0911                     	;# 
  4219  0912                     	;# 
  4220  0913                     	;# 
  4221  0914                     	;# 
  4222  0915                     	;# 
  4223  0916                     	;# 
  4224  0918                     	;# 
  4225  0919                     	;# 
  4226  091A                     	;# 
  4227  091B                     	;# 
  4228  091C                     	;# 
  4229  091D                     	;# 
  4230  091E                     	;# 
  4231  091F                     	;# 
  4232  0E0F                     	;# 
  4233  0E10                     	;# 
  4234  0E11                     	;# 
  4235  0E12                     	;# 
  4236  0E13                     	;# 
  4237  0E14                     	;# 
  4238  0E15                     	;# 
  4239  0E16                     	;# 
  4240  0E17                     	;# 
  4241  0E18                     	;# 
  4242  0E19                     	;# 
  4243  0E1A                     	;# 
  4244  0E1B                     	;# 
  4245  0E1C                     	;# 
  4246  0E1D                     	;# 
  4247  0E1E                     	;# 
  4248  0E1F                     	;# 
  4249  0E20                     	;# 
  4250  0E21                     	;# 
  4251  0E22                     	;# 
  4252  0E24                     	;# 
  4253  0E25                     	;# 
  4254  0E28                     	;# 
  4255  0E29                     	;# 
  4256  0E2A                     	;# 
  4257  0E2B                     	;# 
  4258  0E2C                     	;# 
  4259  0E2D                     	;# 
  4260  0E2E                     	;# 
  4261  0E2F                     	;# 
  4262  0E90                     	;# 
  4263  0E91                     	;# 
  4264  0E92                     	;# 
  4265  0E94                     	;# 
  4266  0E95                     	;# 
  4267  0E9C                     	;# 
  4268  0E9D                     	;# 
  4269  0E9E                     	;# 
  4270  0E9F                     	;# 
  4271  0EA0                     	;# 
  4272  0EA1                     	;# 
  4273  0EA2                     	;# 
  4274  0EA3                     	;# 
  4275  0EA4                     	;# 
  4276  0EA5                     	;# 
  4277  0EA6                     	;# 
  4278  0EA7                     	;# 
  4279  0F0F                     	;# 
  4280  0F10                     	;# 
  4281  0F11                     	;# 
  4282  0F12                     	;# 
  4283  0F13                     	;# 
  4284  0F14                     	;# 
  4285  0F15                     	;# 
  4286  0F16                     	;# 
  4287  0F17                     	;# 
  4288  0F18                     	;# 
  4289  0F19                     	;# 
  4290  0F1A                     	;# 
  4291  0F1B                     	;# 
  4292  0F1C                     	;# 
  4293  0F1D                     	;# 
  4294  0F1E                     	;# 
  4295  0F1F                     	;# 
  4296  0F20                     	;# 
  4297  0F21                     	;# 
  4298  0F22                     	;# 
  4299  0F23                     	;# 
  4300  0F24                     	;# 
  4301  0F25                     	;# 
  4302  0F26                     	;# 
  4303  0F27                     	;# 
  4304  0F28                     	;# 
  4305  0F29                     	;# 
  4306  0F2A                     	;# 
  4307  0F2B                     	;# 
  4308  0F2C                     	;# 
  4309  0F2D                     	;# 
  4310  0F2E                     	;# 
  4311  0F2F                     	;# 
  4312  0F30                     	;# 
  4313  0F31                     	;# 
  4314  0F32                     	;# 
  4315  0F33                     	;# 
  4316  0F34                     	;# 
  4317  0F35                     	;# 
  4318  0F36                     	;# 
  4319  0F37                     	;# 
  4320  0FE4                     	;# 
  4321  0FE5                     	;# 
  4322  0FE6                     	;# 
  4323  0FE7                     	;# 
  4324  0FE8                     	;# 
  4325  0FE9                     	;# 
  4326  0FEA                     	;# 
  4327  0FEB                     	;# 
  4328  0FED                     	;# 
  4329  0FEE                     	;# 
  4330  0FEF                     	;# 
  4331  0000                     	;# 
  4332  0001                     	;# 
  4333  0002                     	;# 
  4334  0003                     	;# 
  4335  0004                     	;# 
  4336  0005                     	;# 
  4337  0006                     	;# 
  4338  0007                     	;# 
  4339  0008                     	;# 
  4340  0009                     	;# 
  4341  000A                     	;# 
  4342  000B                     	;# 
  4343  000C                     	;# 
  4344  000D                     	;# 
  4345  000E                     	;# 
  4346  0010                     	;# 
  4347  0011                     	;# 
  4348  0012                     	;# 
  4349  0013                     	;# 
  4350  0014                     	;# 
  4351  0015                     	;# 
  4352  0015                     	;# 
  4353  0016                     	;# 
  4354  0016                     	;# 
  4355  0017                     	;# 
  4356  0018                     	;# 
  4357  0019                     	;# 
  4358  0019                     	;# 
  4359  001A                     	;# 
  4360  001B                     	;# 
  4361  001C                     	;# 
  4362  001D                     	;# 
  4363  001E                     	;# 
  4364  001F                     	;# 
  4365  008C                     	;# 
  4366  008D                     	;# 
  4367  008E                     	;# 
  4368  0090                     	;# 
  4369  0091                     	;# 
  4370  0092                     	;# 
  4371  0093                     	;# 
  4372  0094                     	;# 
  4373  0097                     	;# 
  4374  009B                     	;# 
  4375  009B                     	;# 
  4376  009C                     	;# 
  4377  009D                     	;# 
  4378  009E                     	;# 
  4379  009F                     	;# 
  4380  010C                     	;# 
  4381  010D                     	;# 
  4382  010E                     	;# 
  4383  0111                     	;# 
  4384  0112                     	;# 
  4385  0113                     	;# 
  4386  0114                     	;# 
  4387  0115                     	;# 
  4388  0116                     	;# 
  4389  0117                     	;# 
  4390  0118                     	;# 
  4391  0119                     	;# 
  4392  018C                     	;# 
  4393  018D                     	;# 
  4394  018E                     	;# 
  4395  0197                     	;# 
  4396  0199                     	;# 
  4397  0199                     	;# 
  4398  0199                     	;# 
  4399  019A                     	;# 
  4400  019A                     	;# 
  4401  019A                     	;# 
  4402  019B                     	;# 
  4403  019B                     	;# 
  4404  019B                     	;# 
  4405  019B                     	;# 
  4406  019B                     	;# 
  4407  019C                     	;# 
  4408  019C                     	;# 
  4409  019C                     	;# 
  4410  019D                     	;# 
  4411  019D                     	;# 
  4412  019D                     	;# 
  4413  019E                     	;# 
  4414  019E                     	;# 
  4415  019E                     	;# 
  4416  019F                     	;# 
  4417  019F                     	;# 
  4418  019F                     	;# 
  4419  019F                     	;# 
  4420  019F                     	;# 
  4421  020C                     	;# 
  4422  020D                     	;# 
  4423  020E                     	;# 
  4424  0211                     	;# 
  4425  0211                     	;# 
  4426  0212                     	;# 
  4427  0212                     	;# 
  4428  0213                     	;# 
  4429  0213                     	;# 
  4430  0214                     	;# 
  4431  0214                     	;# 
  4432  0215                     	;# 
  4433  0215                     	;# 
  4434  0215                     	;# 
  4435  0215                     	;# 
  4436  0216                     	;# 
  4437  0216                     	;# 
  4438  0217                     	;# 
  4439  0217                     	;# 
  4440  0219                     	;# 
  4441  021A                     	;# 
  4442  021B                     	;# 
  4443  021C                     	;# 
  4444  021D                     	;# 
  4445  021D                     	;# 
  4446  021E                     	;# 
  4447  021F                     	;# 
  4448  028C                     	;# 
  4449  028D                     	;# 
  4450  028E                     	;# 
  4451  0291                     	;# 
  4452  0291                     	;# 
  4453  0292                     	;# 
  4454  0293                     	;# 
  4455  0294                     	;# 
  4456  0295                     	;# 
  4457  0295                     	;# 
  4458  0296                     	;# 
  4459  0297                     	;# 
  4460  0298                     	;# 
  4461  029F                     	;# 
  4462  030C                     	;# 
  4463  030D                     	;# 
  4464  030E                     	;# 
  4465  0311                     	;# 
  4466  0311                     	;# 
  4467  0312                     	;# 
  4468  0313                     	;# 
  4469  0314                     	;# 
  4470  0315                     	;# 
  4471  0315                     	;# 
  4472  0316                     	;# 
  4473  0317                     	;# 
  4474  0318                     	;# 
  4475  038C                     	;# 
  4476  038D                     	;# 
  4477  038E                     	;# 
  4478  0391                     	;# 
  4479  0392                     	;# 
  4480  0393                     	;# 
  4481  0394                     	;# 
  4482  0395                     	;# 
  4483  0396                     	;# 
  4484  0397                     	;# 
  4485  0398                     	;# 
  4486  0399                     	;# 
  4487  039A                     	;# 
  4488  039C                     	;# 
  4489  039D                     	;# 
  4490  039E                     	;# 
  4491  039F                     	;# 
  4492  0411                     	;# 
  4493  0411                     	;# 
  4494  0412                     	;# 
  4495  0413                     	;# 
  4496  0414                     	;# 
  4497  0415                     	;# 
  4498  0416                     	;# 
  4499  0417                     	;# 
  4500  0418                     	;# 
  4501  0418                     	;# 
  4502  0419                     	;# 
  4503  041A                     	;# 
  4504  041B                     	;# 
  4505  041C                     	;# 
  4506  041D                     	;# 
  4507  041E                     	;# 
  4508  041F                     	;# 
  4509  0498                     	;# 
  4510  0498                     	;# 
  4511  0499                     	;# 
  4512  049A                     	;# 
  4513  049B                     	;# 
  4514  049B                     	;# 
  4515  049C                     	;# 
  4516  049D                     	;# 
  4517  049E                     	;# 
  4518  049F                     	;# 
  4519  0617                     	;# 
  4520  0618                     	;# 
  4521  0619                     	;# 
  4522  0619                     	;# 
  4523  061A                     	;# 
  4524  061B                     	;# 
  4525  061C                     	;# 
  4526  061C                     	;# 
  4527  061F                     	;# 
  4528  0691                     	;# 
  4529  0692                     	;# 
  4530  0693                     	;# 
  4531  0694                     	;# 
  4532  0695                     	;# 
  4533  0696                     	;# 
  4534  0697                     	;# 
  4535  0698                     	;# 
  4536  0699                     	;# 
  4537  0711                     	;# 
  4538  0712                     	;# 
  4539  0713                     	;# 
  4540  0714                     	;# 
  4541  0715                     	;# 
  4542  0716                     	;# 
  4543  0717                     	;# 
  4544  0718                     	;# 
  4545  0719                     	;# 
  4546  0891                     	;# 
  4547  0891                     	;# 
  4548  0891                     	;# 
  4549  0891                     	;# 
  4550  0891                     	;# 
  4551  0891                     	;# 
  4552  0892                     	;# 
  4553  0892                     	;# 
  4554  0892                     	;# 
  4555  0893                     	;# 
  4556  0893                     	;# 
  4557  0893                     	;# 
  4558  0893                     	;# 
  4559  0893                     	;# 
  4560  0893                     	;# 
  4561  0894                     	;# 
  4562  0894                     	;# 
  4563  0894                     	;# 
  4564  0895                     	;# 
  4565  0895                     	;# 
  4566  0895                     	;# 
  4567  0896                     	;# 
  4568  0896                     	;# 
  4569  0896                     	;# 
  4570  089B                     	;# 
  4571  0911                     	;# 
  4572  0912                     	;# 
  4573  0913                     	;# 
  4574  0914                     	;# 
  4575  0915                     	;# 
  4576  0916                     	;# 
  4577  0918                     	;# 
  4578  0919                     	;# 
  4579  091A                     	;# 
  4580  091B                     	;# 
  4581  091C                     	;# 
  4582  091D                     	;# 
  4583  091E                     	;# 
  4584  091F                     	;# 
  4585  0E0F                     	;# 
  4586  0E10                     	;# 
  4587  0E11                     	;# 
  4588  0E12                     	;# 
  4589  0E13                     	;# 
  4590  0E14                     	;# 
  4591  0E15                     	;# 
  4592  0E16                     	;# 
  4593  0E17                     	;# 
  4594  0E18                     	;# 
  4595  0E19                     	;# 
  4596  0E1A                     	;# 
  4597  0E1B                     	;# 
  4598  0E1C                     	;# 
  4599  0E1D                     	;# 
  4600  0E1E                     	;# 
  4601  0E1F                     	;# 
  4602  0E20                     	;# 
  4603  0E21                     	;# 
  4604  0E22                     	;# 
  4605  0E24                     	;# 
  4606  0E25                     	;# 
  4607  0E28                     	;# 
  4608  0E29                     	;# 
  4609  0E2A                     	;# 
  4610  0E2B                     	;# 
  4611  0E2C                     	;# 
  4612  0E2D                     	;# 
  4613  0E2E                     	;# 
  4614  0E2F                     	;# 
  4615  0E90                     	;# 
  4616  0E91                     	;# 
  4617  0E92                     	;# 
  4618  0E94                     	;# 
  4619  0E95                     	;# 
  4620  0E9C                     	;# 
  4621  0E9D                     	;# 
  4622  0E9E                     	;# 
  4623  0E9F                     	;# 
  4624  0EA0                     	;# 
  4625  0EA1                     	;# 
  4626  0EA2                     	;# 
  4627  0EA3                     	;# 
  4628  0EA4                     	;# 
  4629  0EA5                     	;# 
  4630  0EA6                     	;# 
  4631  0EA7                     	;# 
  4632  0F0F                     	;# 
  4633  0F10                     	;# 
  4634  0F11                     	;# 
  4635  0F12                     	;# 
  4636  0F13                     	;# 
  4637  0F14                     	;# 
  4638  0F15                     	;# 
  4639  0F16                     	;# 
  4640  0F17                     	;# 
  4641  0F18                     	;# 
  4642  0F19                     	;# 
  4643  0F1A                     	;# 
  4644  0F1B                     	;# 
  4645  0F1C                     	;# 
  4646  0F1D                     	;# 
  4647  0F1E                     	;# 
  4648  0F1F                     	;# 
  4649  0F20                     	;# 
  4650  0F21                     	;# 
  4651  0F22                     	;# 
  4652  0F23                     	;# 
  4653  0F24                     	;# 
  4654  0F25                     	;# 
  4655  0F26                     	;# 
  4656  0F27                     	;# 
  4657  0F28                     	;# 
  4658  0F29                     	;# 
  4659  0F2A                     	;# 
  4660  0F2B                     	;# 
  4661  0F2C                     	;# 
  4662  0F2D                     	;# 
  4663  0F2E                     	;# 
  4664  0F2F                     	;# 
  4665  0F30                     	;# 
  4666  0F31                     	;# 
  4667  0F32                     	;# 
  4668  0F33                     	;# 
  4669  0F34                     	;# 
  4670  0F35                     	;# 
  4671  0F36                     	;# 
  4672  0F37                     	;# 
  4673  0FE4                     	;# 
  4674  0FE5                     	;# 
  4675  0FE6                     	;# 
  4676  0FE7                     	;# 
  4677  0FE8                     	;# 
  4678  0FE9                     	;# 
  4679  0FEA                     	;# 
  4680  0FEB                     	;# 
  4681  0FED                     	;# 
  4682  0FEE                     	;# 
  4683  0FEF                     	;# 
  4684                           
  4685 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
  4686  0000                     
  4687 ;; Function _EUSART_Transmit_ISR is unused but had its address taken
  4688  0000                     
  4689 ;; Function _EUSART_Receive_ISR is unused but had its address taken
  4690  0000                     
  4691 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  4692  0000                     
  4693 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  4694  0000                     
  4695 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  4696  001C                     _T1GCONbits	set	28
  4697  001B                     _T1CONbits	set	27
  4698  001B                     _T1CON	set	27
  4699  0011                     _PIR1bits	set	17
  4700  0019                     _TMR1L	set	25
  4701  001A                     _TMR1H	set	26
  4702  001C                     _T1GCON	set	28
  4703  0014                     _PIR4bits	set	20
  4704  0017                     _T0CON0bits	set	23
  4705  0017                     _T0CON0	set	23
  4706  0010                     _PIR0bits	set	16
  4707  0015                     _TMR0L	set	21
  4708  0016                     _TMR0H	set	22
  4709  0018                     _T0CON1	set	24
  4710  000D                     _PORTBbits	set	13
  4711  000E                     _PORTCbits	set	14
  4712  000C                     _PORTAbits	set	12
  4713  000B                     _INTCONbits	set	11
  4714  0014                     _PIR4	set	20
  4715  0013                     _PIR3	set	19
  4716  0012                     _PIR2	set	18
  4717  0011                     _PIR1	set	17
  4718  0010                     _PIR0	set	16
  4719  0091                     _PIE1bits	set	145
  4720  0094                     _PIE4bits	set	148
  4721  0090                     _PIE0bits	set	144
  4722  0097                     _WDTCON	set	151
  4723  008D                     _TRISBbits	set	141
  4724  008E                     _TRISCbits	set	142
  4725  008C                     _TRISAbits	set	140
  4726  008E                     _TRISC	set	142
  4727  008D                     _TRISB	set	141
  4728  008C                     _TRISA	set	140
  4729  0094                     _PIE4	set	148
  4730  0093                     _PIE3	set	147
  4731  0092                     _PIE2	set	146
  4732  0091                     _PIE1	set	145
  4733  0090                     _PIE0	set	144
  4734  010D                     _LATBbits	set	269
  4735  010E                     _LATCbits	set	270
  4736  010C                     _LATAbits	set	268
  4737  010E                     _LATC	set	270
  4738  010D                     _LATB	set	269
  4739  010C                     _LATA	set	268
  4740  0199                     _RC1REG	set	409
  4741  019D                     _RC1STAbits	set	413
  4742  019A                     _TX1REG	set	410
  4743  019E                     _TX1STAbits	set	414
  4744  019C                     _SP1BRGH	set	412
  4745  019B                     _SP1BRGL	set	411
  4746  019E                     _TX1STA	set	414
  4747  019D                     _RC1STA	set	413
  4748  019F                     _BAUD1CON	set	415
  4749  018C                     _ANSELA	set	396
  4750  018D                     _ANSELB	set	397
  4751  018E                     _ANSELC	set	398
  4752  020E                     _WPUC	set	526
  4753  020C                     _WPUA	set	524
  4754  020D                     _WPUB	set	525
  4755  0295                     _CCPR2L	set	661
  4756  0296                     _CCPR2H	set	662
  4757  0298                     _CCP2CAP	set	664
  4758  0297                     _CCP2CON	set	663
  4759  029F                     _CCPTMRSbits	set	671
  4760  0291                     _CCPR1L	set	657
  4761  0292                     _CCPR1H	set	658
  4762  0294                     _CCP1CAP	set	660
  4763  0293                     _CCP1CON	set	659
  4764  028E                     _ODCONC	set	654
  4765  028D                     _ODCONB	set	653
  4766  028C                     _ODCONA	set	652
  4767  0311                     _CCPR3L	set	785
  4768  0312                     _CCPR3H	set	786
  4769  0314                     _CCP3CAP	set	788
  4770  0313                     _CCP3CON	set	787
  4771  030E                     _SLRCONC	set	782
  4772  030D                     _SLRCONB	set	781
  4773  030C                     _SLRCONA	set	780
  4774  038E                     _INLVLC	set	910
  4775  038D                     _INLVLB	set	909
  4776  038C                     _INLVLA	set	908
  4777  0916                     _PMD5	set	2326
  4778  0915                     _PMD4	set	2325
  4779  0914                     _PMD3	set	2324
  4780  0913                     _PMD2	set	2323
  4781  0912                     _PMD1	set	2322
  4782  0911                     _PMD0	set	2321
  4783  091E                     _OSCTUNE	set	2334
  4784  091F                     _OSCFRQ	set	2335
  4785  091D                     _OSCEN	set	2333
  4786  091B                     _OSCCON3	set	2331
  4787  0919                     _OSCCON1	set	2329
  4788  48E0                     _PLLR	set	18656
  4789  0E14                     _CCP1PPS	set	3604
  4790  0E16                     _CCP3PPS	set	3606
  4791  0E15                     _CCP2PPS	set	3605
  4792                           
  4793                           	psect	cinit
  4794  0054                     start_initialization:	
  4795                           ; #config settings
  4796                           
  4797  0054                     __initialization:
  4798                           
  4799                           ; Clear objects allocated to COMMON
  4800  0054  01F0               	clrf	__pbssCOMMON& (0+127)
  4801  0055  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  4802  0056  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  4803  0057  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  4804  0058  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  4805  0059  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  4806  005A  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  4807                           
  4808                           ; Clear objects allocated to BANK0
  4809  005B  3020               	movlw	low __pbssBANK0
  4810  005C  0084               	movwf	4
  4811  005D  3000               	movlw	high __pbssBANK0
  4812  005E  0085               	movwf	5
  4813  005F  302F               	movlw	47
  4814  0060  3185  25BC  3180   	fcall	clear_ram0
  4815                           
  4816                           ; Clear objects allocated to BANK1
  4817  0063  30A0               	movlw	low __pbssBANK1
  4818  0064  0084               	movwf	4
  4819  0065  3000               	movlw	high __pbssBANK1
  4820  0066  0085               	movwf	5
  4821  0067  3024               	movlw	36
  4822  0068  3185  25BC  3180   	fcall	clear_ram0
  4823  006B                     end_of_initialization:	
  4824                           ;End of C runtime variable initialization code
  4825                           
  4826  006B                     __end_of__initialization:
  4827  006B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4828  006C  0020               	movlb	0
  4829  006D  3182  2A66         	ljmp	_main	;jump to C main() function
  4830                           
  4831                           	psect	bssCOMMON
  4832  0070                     __pbssCOMMON:
  4833  0070                     _eusartRxLastError:
  4834  0070                     	ds	1
  4835  0071                     _eusartRxCount:
  4836  0071                     	ds	1
  4837  0072                     _eusartRxTail:
  4838  0072                     	ds	1
  4839  0073                     _eusartRxHead:
  4840  0073                     	ds	1
  4841  0074                     _eusartTxBufferRemaining:
  4842  0074                     	ds	1
  4843  0075                     _eusartTxTail:
  4844  0075                     	ds	1
  4845  0076                     _eusartTxHead:
  4846  0076                     	ds	1
  4847                           
  4848                           	psect	bssBANK0
  4849  0020                     __pbssBANK0:
  4850  0020                     _micros@FR_Timer$F158:
  4851  0020                     	ds	4
  4852  0024                     _millis:
  4853  0024                     	ds	4
  4854  0028                     _micros:
  4855  0028                     	ds	4
  4856  002C                     _EUSART_ErrorHandler:
  4857  002C                     	ds	2
  4858  002E                     _EUSART_OverrunErrorHandler:
  4859  002E                     	ds	2
  4860  0030                     _EUSART_FramingErrorHandler:
  4861  0030                     	ds	2
  4862  0032                     _EUSART_RxDefaultInterruptHandler:
  4863  0032                     	ds	2
  4864  0034                     _EUSART_TxDefaultInterruptHandler:
  4865  0034                     	ds	2
  4866  0036                     _TMR1_InterruptHandler:
  4867  0036                     	ds	2
  4868  0038                     _timer1ReloadVal:
  4869  0038                     	ds	2
  4870  003A                     _CCP3_CallBack:
  4871  003A                     	ds	2
  4872  003C                     _CCP2_CallBack:
  4873  003C                     	ds	2
  4874  003E                     _ticksDown:
  4875  003E                     	ds	2
  4876  0040                     _ticksUp:
  4877  0040                     	ds	2
  4878  0042                     _CCP1_CallBack:
  4879  0042                     	ds	2
  4880  0044                     TMR0_ISR@CountCallBack:
  4881  0044                     	ds	2
  4882  0046                     _TMR0_InterruptHandler:
  4883  0046                     	ds	2
  4884  0048                     _lastTrig:
  4885  0048                     	ds	1
  4886  0049                     _Sens1:
  4887  0049                     	ds	6
  4888                           
  4889                           	psect	bssBANK1
  4890  00A0                     __pbssBANK1:
  4891  00A0                     _eusartRxStatusBuffer:
  4892  00A0                     	ds	8
  4893  00A8                     _eusartRxBuffer:
  4894  00A8                     	ds	8
  4895  00B0                     _eusartTxBuffer:
  4896  00B0                     	ds	8
  4897  00B8                     _Sens3:
  4898  00B8                     	ds	6
  4899  00BE                     _Sens2:
  4900  00BE                     	ds	6
  4901                           
  4902                           	psect	clrtext
  4903  05BC                     clear_ram0:	
  4904                           ;	Called with FSR0 containing the base address, and
  4905                           ;	WREG with the size to clear
  4906                           
  4907  05BC  0064               	clrwdt	;clear the watchdog before getting into this loop
  4908  05BD                     clrloop0:
  4909  05BD  0180               	clrf	0	;clear RAM location pointed to by FSR
  4910  05BE  3101               	addfsr 0,1
  4911  05BF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4912  05C0  2DBD               	goto	clrloop0	;have we reached the end yet?
  4913  05C1  3400               	retlw	0	;all done for this memory range, return
  4914                           
  4915                           	psect	cstackCOMMON
  4916  0077                     __pcstackCOMMON:
  4917  0077                     ?_TMR1_Initialize:
  4918  0077                     ?_CCP1_Initialize:	
  4919                           ; 1 bytes @ 0x0
  4920                           
  4921  0077                     ?_PIC16_Init:	
  4922                           ; 1 bytes @ 0x0
  4923                           
  4924  0077                     ?_FR_Timer_Init:	
  4925                           ; 1 bytes @ 0x0
  4926                           
  4927  0077                     ?_JSN_GetLastTrig:	
  4928                           ; 1 bytes @ 0x0
  4929                           
  4930  0077                     ??_JSN_GetLastTrig:	
  4931                           ; 1 bytes @ 0x0
  4932                           
  4933  0077                     ?_TMR0_Initialize:	
  4934                           ; 1 bytes @ 0x0
  4935                           
  4936  0077                     ?_TMR0_ReadTimer:	
  4937                           ; 1 bytes @ 0x0
  4938                           
  4939  0077                     ?_SYSTEM_Initialize:	
  4940                           ; 1 bytes @ 0x0
  4941                           
  4942  0077                     ?_PMD_Initialize:	
  4943                           ; 1 bytes @ 0x0
  4944                           
  4945  0077                     ?_PIN_MANAGER_Initialize:	
  4946                           ; 1 bytes @ 0x0
  4947                           
  4948  0077                     ?_OSCILLATOR_Initialize:	
  4949                           ; 1 bytes @ 0x0
  4950                           
  4951  0077                     ?_WDT_Initialize:	
  4952                           ; 1 bytes @ 0x0
  4953                           
  4954  0077                     ?_CCP2_Initialize:	
  4955                           ; 1 bytes @ 0x0
  4956                           
  4957  0077                     ?_CCP3_Initialize:	
  4958                           ; 1 bytes @ 0x0
  4959                           
  4960  0077                     ?_TMR0_CallBack:	
  4961                           ; 1 bytes @ 0x0
  4962                           
  4963  0077                     ??_TMR0_CallBack:	
  4964                           ; 1 bytes @ 0x0
  4965                           
  4966  0077                     ?_TMR1_DefaultInterruptHandler:	
  4967                           ; 1 bytes @ 0x0
  4968                           
  4969  0077                     ??_TMR1_DefaultInterruptHandler:	
  4970                           ; 1 bytes @ 0x0
  4971                           
  4972  0077                     ?_TMR1_CallBack:	
  4973                           ; 1 bytes @ 0x0
  4974                           
  4975  0077                     ??_TMR1_CallBack:	
  4976                           ; 1 bytes @ 0x0
  4977                           
  4978  0077                     ?_JSN_Library_Init:	
  4979                           ; 1 bytes @ 0x0
  4980                           
  4981  0077                     ?_JSN_Sensor_Trig:	
  4982                           ; 1 bytes @ 0x0
  4983                           
  4984  0077                     ?_FR_Timer_IncMillis:	
  4985                           ; 1 bytes @ 0x0
  4986                           
  4987  0077                     ??_FR_Timer_IncMillis:	
  4988                           ; 1 bytes @ 0x0
  4989                           
  4990  0077                     ?_FR_Timer_IncMicros:	
  4991                           ; 1 bytes @ 0x0
  4992                           
  4993  0077                     ??_FR_Timer_IncMicros:	
  4994                           ; 1 bytes @ 0x0
  4995                           
  4996  0077                     ?_TMR0_ISR:	
  4997                           ; 1 bytes @ 0x0
  4998                           
  4999  0077                     ??_TMR0_ISR:	
  5000                           ; 1 bytes @ 0x0
  5001                           
  5002  0077                     ?_CCP1_DefaultCallBack:	
  5003                           ; 1 bytes @ 0x0
  5004                           
  5005  0077                     ?_CCP1_CaptureISR:	
  5006                           ; 1 bytes @ 0x0
  5007                           
  5008  0077                     ?_CCP2_DefaultCallBack:	
  5009                           ; 1 bytes @ 0x0
  5010                           
  5011  0077                     ?_CCP2_CaptureISR:	
  5012                           ; 1 bytes @ 0x0
  5013                           
  5014  0077                     ?_CCP3_DefaultCallBack:	
  5015                           ; 1 bytes @ 0x0
  5016                           
  5017  0077                     ?_CCP3_CaptureISR:	
  5018                           ; 1 bytes @ 0x0
  5019                           
  5020  0077                     ?_TMR1_WriteTimer:	
  5021                           ; 1 bytes @ 0x0
  5022                           
  5023  0077                     ?_TMR1_ISR:	
  5024                           ; 1 bytes @ 0x0
  5025                           
  5026  0077                     ?_INTERRUPT_InterruptManager:	
  5027                           ; 1 bytes @ 0x0
  5028                           
  5029  0077                     ?_main:	
  5030                           ; 1 bytes @ 0x0
  5031                           
  5032  0077                     CCP1_DefaultCallBack@capturedValue:	
  5033                           ; 2 bytes @ 0x0
  5034                           
  5035  0077                     CCP2_DefaultCallBack@capturedValue:	
  5036                           ; 2 bytes @ 0x0
  5037                           
  5038  0077                     CCP3_DefaultCallBack@capturedValue:	
  5039                           ; 2 bytes @ 0x0
  5040                           
  5041  0077                     TMR1_WriteTimer@timerVal:	
  5042                           ; 2 bytes @ 0x0
  5043                           
  5044                           
  5045                           ; 2 bytes @ 0x0
  5046  0077                     	ds	2
  5047  0079                     ??_CCP1_DefaultCallBack:
  5048  0079                     ??_CCP2_DefaultCallBack:	
  5049                           ; 1 bytes @ 0x2
  5050                           
  5051  0079                     ??_CCP2_CaptureISR:	
  5052                           ; 1 bytes @ 0x2
  5053                           
  5054  0079                     ??_CCP3_DefaultCallBack:	
  5055                           ; 1 bytes @ 0x2
  5056                           
  5057  0079                     ??_CCP3_CaptureISR:	
  5058                           ; 1 bytes @ 0x2
  5059                           
  5060  0079                     ??_TMR1_WriteTimer:	
  5061                           ; 1 bytes @ 0x2
  5062                           
  5063  0079                     ??_TMR1_ISR:	
  5064                           ; 1 bytes @ 0x2
  5065                           
  5066                           
  5067                           ; 1 bytes @ 0x2
  5068  0079                     	ds	1
  5069  007A                     CCP2_CaptureISR@module:
  5070  007A                     CCP3_CaptureISR@module:	
  5071                           ; 2 bytes @ 0x3
  5072                           
  5073                           
  5074                           ; 2 bytes @ 0x3
  5075  007A                     	ds	1
  5076  007B                     ??_CCP1_CaptureISR:
  5077                           
  5078                           ; 1 bytes @ 0x4
  5079  007B                     	ds	1
  5080  007C                     CCP1_CaptureISR@module:
  5081                           
  5082                           ; 2 bytes @ 0x5
  5083  007C                     	ds	2
  5084  007E                     ??_INTERRUPT_InterruptManager:
  5085                           
  5086                           	psect	cstackBANK0
  5087  004F                     __pcstackBANK0:	
  5088                           ; 1 bytes @ 0x7
  5089                           
  5090  004F                     ?_SetPin:
  5091  004F                     ?_WritePin:	
  5092                           ; 1 bytes @ 0x0
  5093                           
  5094  004F                     ??_TMR0_ReadTimer:	
  5095                           ; 1 bytes @ 0x0
  5096                           
  5097  004F                     ??_PMD_Initialize:	
  5098                           ; 1 bytes @ 0x0
  5099                           
  5100  004F                     ??_PIN_MANAGER_Initialize:	
  5101                           ; 1 bytes @ 0x0
  5102                           
  5103  004F                     ??_OSCILLATOR_Initialize:	
  5104                           ; 1 bytes @ 0x0
  5105                           
  5106  004F                     ??_WDT_Initialize:	
  5107                           ; 1 bytes @ 0x0
  5108                           
  5109  004F                     ?_TMR0_SetInterruptHandler:	
  5110                           ; 1 bytes @ 0x0
  5111                           
  5112  004F                     ?_CCP1_SetCallBack:	
  5113                           ; 1 bytes @ 0x0
  5114                           
  5115  004F                     ?_CCP2_SetCallBack:	
  5116                           ; 1 bytes @ 0x0
  5117                           
  5118  004F                     ?_CCP3_SetCallBack:	
  5119                           ; 1 bytes @ 0x0
  5120                           
  5121  004F                     ?_TMR1_SetInterruptHandler:	
  5122                           ; 1 bytes @ 0x0
  5123                           
  5124  004F                     ?___wmul:	
  5125                           ; 1 bytes @ 0x0
  5126                           
  5127  004F                     ?_FR_Timer_GetMillis:	
  5128                           ; 2 bytes @ 0x0
  5129                           
  5130  004F                     SetPin@io:	
  5131                           ; 4 bytes @ 0x0
  5132                           
  5133  004F                     WritePin@val:	
  5134                           ; 1 bytes @ 0x0
  5135                           
  5136  004F                     TMR0_SetInterruptHandler@InterruptHandler:	
  5137                           ; 1 bytes @ 0x0
  5138                           
  5139  004F                     CCP1_SetCallBack@customCallBack:	
  5140                           ; 2 bytes @ 0x0
  5141                           
  5142  004F                     CCP2_SetCallBack@customCallBack:	
  5143                           ; 2 bytes @ 0x0
  5144                           
  5145  004F                     CCP3_SetCallBack@customCallBack:	
  5146                           ; 2 bytes @ 0x0
  5147                           
  5148  004F                     TMR1_SetInterruptHandler@InterruptHandler:	
  5149                           ; 2 bytes @ 0x0
  5150                           
  5151  004F                     ___wmul@multiplier:	
  5152                           ; 2 bytes @ 0x0
  5153                           
  5154                           
  5155                           ; 2 bytes @ 0x0
  5156  004F                     	ds	1
  5157  0050                     ??_SetPin:
  5158  0050                     ??_WritePin:	
  5159                           ; 1 bytes @ 0x1
  5160                           
  5161  0050                     TMR0_ReadTimer@readVal:	
  5162                           ; 1 bytes @ 0x1
  5163                           
  5164                           
  5165                           ; 1 bytes @ 0x1
  5166  0050                     	ds	1
  5167  0051                     ??_TMR1_Initialize:
  5168  0051                     ??_CCP1_Initialize:	
  5169                           ; 1 bytes @ 0x2
  5170                           
  5171  0051                     ??_PIC16_Init:	
  5172                           ; 1 bytes @ 0x2
  5173                           
  5174  0051                     ??_FR_Timer_Init:	
  5175                           ; 1 bytes @ 0x2
  5176                           
  5177  0051                     ??_TMR0_Initialize:	
  5178                           ; 1 bytes @ 0x2
  5179                           
  5180  0051                     ??_SYSTEM_Initialize:	
  5181                           ; 1 bytes @ 0x2
  5182                           
  5183  0051                     ??_CCP2_Initialize:	
  5184                           ; 1 bytes @ 0x2
  5185                           
  5186  0051                     ??_CCP3_Initialize:	
  5187                           ; 1 bytes @ 0x2
  5188                           
  5189  0051                     ??_TMR0_SetInterruptHandler:	
  5190                           ; 1 bytes @ 0x2
  5191                           
  5192  0051                     ??_CCP1_SetCallBack:	
  5193                           ; 1 bytes @ 0x2
  5194                           
  5195  0051                     ??_CCP2_SetCallBack:	
  5196                           ; 1 bytes @ 0x2
  5197                           
  5198  0051                     ??_CCP3_SetCallBack:	
  5199                           ; 1 bytes @ 0x2
  5200                           
  5201  0051                     ??_TMR1_SetInterruptHandler:	
  5202                           ; 1 bytes @ 0x2
  5203                           
  5204  0051                     ?_FR_Timer_GetMicros:	
  5205                           ; 1 bytes @ 0x2
  5206                           
  5207  0051                     ___wmul@multiplicand:	
  5208                           ; 4 bytes @ 0x2
  5209                           
  5210                           
  5211                           ; 2 bytes @ 0x2
  5212  0051                     	ds	1
  5213  0052                     SetPin@pin:
  5214  0052                     WritePin@pin:	
  5215                           ; 1 bytes @ 0x3
  5216                           
  5217                           
  5218                           ; 1 bytes @ 0x3
  5219  0052                     	ds	1
  5220  0053                     ?_JSN_Sensor_Init:
  5221  0053                     ??_FR_Timer_GetMillis:	
  5222                           ; 1 bytes @ 0x4
  5223                           
  5224  0053                     ??___wmul:	
  5225                           ; 1 bytes @ 0x4
  5226                           
  5227  0053                     JSN_Sensor_Init@trigPin:	
  5228                           ; 1 bytes @ 0x4
  5229                           
  5230  0053                     ___wmul@product:	
  5231                           ; 1 bytes @ 0x4
  5232                           
  5233                           
  5234                           ; 2 bytes @ 0x4
  5235  0053                     	ds	1
  5236  0054                     JSN_Sensor_Init@echoPin:
  5237                           
  5238                           ; 1 bytes @ 0x5
  5239  0054                     	ds	1
  5240  0055                     ??_JSN_Sensor_Init:
  5241  0055                     ??_FR_Timer_GetMicros:	
  5242                           ; 1 bytes @ 0x6
  5243                           
  5244  0055                     ??_JSN_Sensor_Trig:	
  5245                           ; 1 bytes @ 0x6
  5246                           
  5247  0055                     ?___lwdiv:	
  5248                           ; 1 bytes @ 0x6
  5249                           
  5250  0055                     ___lwdiv@divisor:	
  5251                           ; 2 bytes @ 0x6
  5252                           
  5253                           
  5254                           ; 2 bytes @ 0x6
  5255  0055                     	ds	2
  5256  0057                     JSN_Sensor_Init@Sensor:
  5257  0057                     ___lwdiv@dividend:	
  5258                           ; 1 bytes @ 0x8
  5259                           
  5260                           
  5261                           ; 2 bytes @ 0x8
  5262  0057                     	ds	1
  5263  0058                     ??_JSN_Library_Init:
  5264                           
  5265                           ; 1 bytes @ 0x9
  5266  0058                     	ds	1
  5267  0059                     ??___lwdiv:
  5268  0059                     JSN_Sensor_Trig@Sensor:	
  5269                           ; 1 bytes @ 0xA
  5270                           
  5271                           
  5272                           ; 1 bytes @ 0xA
  5273  0059                     	ds	1
  5274  005A                     ___lwdiv@quotient:
  5275                           
  5276                           ; 2 bytes @ 0xB
  5277  005A                     	ds	2
  5278  005C                     ___lwdiv@counter:
  5279                           
  5280                           ; 1 bytes @ 0xD
  5281  005C                     	ds	1
  5282  005D                     ?_JSN_Sensor_GetDistance:
  5283                           
  5284                           ; 2 bytes @ 0xE
  5285  005D                     	ds	2
  5286  005F                     ??_JSN_Sensor_GetDistance:
  5287  005F                     JSN_Sensor_GetDistance@Sensor:	
  5288                           ; 1 bytes @ 0x10
  5289                           
  5290                           
  5291                           ; 1 bytes @ 0x10
  5292  005F                     	ds	1
  5293  0060                     ??_main:
  5294                           
  5295                           ; 1 bytes @ 0x11
  5296  0060                     	ds	4
  5297  0064                     main@prevMilli:
  5298                           
  5299                           ; 4 bytes @ 0x15
  5300  0064                     	ds	4
  5301  0068                     main@currMilli:
  5302                           
  5303                           ; 4 bytes @ 0x19
  5304  0068                     	ds	4
  5305                           
  5306                           	psect	maintext
  5307  0266                     __pmaintext:	
  5308 ;;
  5309 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  5310 ;;
  5311 ;; *************** function _main *****************
  5312 ;; Defined at:
  5313 ;;		line 130 in file "JSN_Sensor.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;		None
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;  currMilli       4   25[BANK0 ] unsigned long 
  5318 ;;  prevMilli       4   21[BANK0 ] unsigned long 
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  2   73[None  ] int 
  5321 ;; Registers used:
  5322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : B1F/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5329 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5330 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5331 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5332 ;;Total ram usage:       12 bytes
  5333 ;; Hardware stack levels required when called: 8
  5334 ;; This function calls:
  5335 ;;		_FR_Timer_GetMillis
  5336 ;;		_FR_Timer_Init
  5337 ;;		_JSN_Library_Init
  5338 ;;		_JSN_Sensor_GetDistance
  5339 ;;		_JSN_Sensor_Trig
  5340 ;;		_PIC16_Init
  5341 ;;		_SetPin
  5342 ;;		_WritePin
  5343 ;; This function is called by:
  5344 ;;		Startup code after reset
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348  0266                     _main:	
  5349                           ;psect for function _main
  5350                           
  5351  0266                     l3313:	
  5352                           ;incstack = 0
  5353                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5354                           
  5355                           
  5356                           ;JSN_Sensor.c: 132:     PIC16_Init();
  5357  0266  3183  2355  3182   	fcall	_PIC16_Init
  5358                           
  5359                           ;JSN_Sensor.c: 133:     FR_Timer_Init();
  5360  0269  3185  25E4  3182   	fcall	_FR_Timer_Init
  5361  026C                     l3315:
  5362                           
  5363                           ;JSN_Sensor.c: 134:     JSN_Library_Init();
  5364  026C  3185  2539  3182   	fcall	_JSN_Library_Init
  5365  026F                     l3317:
  5366  026F                     l3319:
  5367                           
  5368                           ;JSN_Sensor.c: 138:     unsigned long prevMilli = 0;
  5369  026F  3000               	movlw	0
  5370  0270  0020               	movlb	0	; select bank0
  5371  0271  00E7               	movwf	main@prevMilli+3
  5372  0272  3000               	movlw	0
  5373  0273  00E6               	movwf	main@prevMilli+2
  5374  0274  3000               	movlw	0
  5375  0275  00E5               	movwf	main@prevMilli+1
  5376  0276  3000               	movlw	0
  5377  0277  00E4               	movwf	main@prevMilli
  5378  0278                     l3321:
  5379                           
  5380                           ;JSN_Sensor.c: 139:     SetPin(C0, 0);
  5381  0278  01CF               	clrf	SetPin@io
  5382  0279  300C               	movlw	12
  5383  027A  3181  212A  3182   	fcall	_SetPin
  5384  027D                     l3323:
  5385                           
  5386                           ;JSN_Sensor.c: 140:     WritePin(C0, 0);
  5387  027D  0020               	movlb	0	; select bank0
  5388  027E  01CF               	clrf	WritePin@val
  5389  027F  300C               	movlw	12
  5390  0280  3180  206F  3182   	fcall	_WritePin
  5391  0283                     l3325:
  5392                           
  5393                           ;JSN_Sensor.c: 142:     JSN_Sensor_Trig(&Sens1);
  5394  0283  3049               	movlw	(low (_Sens1| 0))& (0+255)
  5395  0284  3182  22D1  3182   	fcall	_JSN_Sensor_Trig
  5396  0287                     l3327:
  5397                           
  5398                           ;JSN_Sensor.c: 144:         currMilli = FR_Timer_GetMillis();
  5399  0287  3185  2590  3182   	fcall	_FR_Timer_GetMillis
  5400  028A  0020               	movlb	0	; select bank0
  5401  028B  0852               	movf	?_FR_Timer_GetMillis+3,w
  5402  028C  00EB               	movwf	main@currMilli+3
  5403  028D  0851               	movf	?_FR_Timer_GetMillis+2,w
  5404  028E  00EA               	movwf	main@currMilli+2
  5405  028F  0850               	movf	?_FR_Timer_GetMillis+1,w
  5406  0290  00E9               	movwf	main@currMilli+1
  5407  0291  084F               	movf	?_FR_Timer_GetMillis,w
  5408  0292  00E8               	movwf	main@currMilli
  5409  0293                     l3329:
  5410                           
  5411                           ;JSN_Sensor.c: 147:         if((currMilli - prevMilli) >= 500) {
  5412  0293  0864               	movf	main@prevMilli,w
  5413  0294  0268               	subwf	main@currMilli,w
  5414  0295  00E0               	movwf	??_main
  5415  0296  0865               	movf	main@prevMilli+1,w
  5416  0297  3B69               	subwfb	main@currMilli+1,w
  5417  0298  00E1               	movwf	??_main+1
  5418  0299  0866               	movf	main@prevMilli+2,w
  5419  029A  3B6A               	subwfb	main@currMilli+2,w
  5420  029B  00E2               	movwf	??_main+2
  5421  029C  0867               	movf	main@prevMilli+3,w
  5422  029D  3B6B               	subwfb	main@currMilli+3,w
  5423  029E  00E3               	movwf	??_main+3
  5424  029F  0863               	movf	??_main+3,w
  5425  02A0  1D03               	btfss	3,2
  5426  02A1  2AAD               	goto	u870
  5427  02A2  0862               	movf	??_main+2,w
  5428  02A3  1D03               	btfss	3,2
  5429  02A4  2AAD               	goto	u870
  5430  02A5  30F4               	movlw	244
  5431  02A6  0260               	subwf	??_main,w
  5432  02A7  3001               	movlw	1
  5433  02A8  3B61               	subwfb	??_main+1,w
  5434  02A9  1C03               	btfss	3,0
  5435  02AA  2AAC               	goto	u871
  5436  02AB  2AAD               	goto	u870
  5437  02AC                     u871:
  5438  02AC  2A87               	goto	l3327
  5439  02AD                     u870:
  5440  02AD                     l3331:
  5441                           
  5442                           ;JSN_Sensor.c: 149:             if(JSN_Sensor_GetDistance(&Sens1) > 300) {
  5443  02AD  3049               	movlw	(low (_Sens1| 0))& (0+255)
  5444  02AE  3183  23EE  3182   	fcall	_JSN_Sensor_GetDistance
  5445  02B1  3001               	movlw	1
  5446  02B2  0020               	movlb	0	; select bank0
  5447  02B3  025E               	subwf	?_JSN_Sensor_GetDistance+1,w
  5448  02B4  302D               	movlw	45
  5449  02B5  1903               	skipnz
  5450  02B6  025D               	subwf	?_JSN_Sensor_GetDistance,w
  5451  02B7  1C03               	skipc
  5452  02B8  2ABA               	goto	u881
  5453  02B9  2ABB               	goto	u880
  5454  02BA                     u881:
  5455  02BA  2AC1               	goto	l3335
  5456  02BB                     u880:
  5457  02BB                     l3333:
  5458                           
  5459                           ;JSN_Sensor.c: 150:                 WritePin(C0, 1);
  5460  02BB  01CF               	clrf	WritePin@val
  5461  02BC  0ACF               	incf	WritePin@val,f
  5462  02BD  300C               	movlw	12
  5463  02BE  3180  206F  3182   	fcall	_WritePin
  5464  02C1                     l3335:
  5465                           
  5466                           ;JSN_Sensor.c: 154:             JSN_Sensor_Trig(&Sens1);
  5467  02C1  3049               	movlw	(low (_Sens1| 0))& (0+255)
  5468  02C2  3182  22D1  3182   	fcall	_JSN_Sensor_Trig
  5469  02C5                     l3337:
  5470                           
  5471                           ;JSN_Sensor.c: 155:             prevMilli = currMilli;
  5472  02C5  0020               	movlb	0	; select bank0
  5473  02C6  086B               	movf	main@currMilli+3,w
  5474  02C7  00E7               	movwf	main@prevMilli+3
  5475  02C8  086A               	movf	main@currMilli+2,w
  5476  02C9  00E6               	movwf	main@prevMilli+2
  5477  02CA  0869               	movf	main@currMilli+1,w
  5478  02CB  00E5               	movwf	main@prevMilli+1
  5479  02CC  0868               	movf	main@currMilli,w
  5480  02CD  00E4               	movwf	main@prevMilli
  5481  02CE  2A87               	goto	l3327
  5482  02CF  3180  2852         	ljmp	start
  5483  02D1                     __end_of_main:
  5484                           
  5485                           	psect	text1
  5486  0355                     __ptext1:	
  5487 ;; *************** function _PIC16_Init *****************
  5488 ;; Defined at:
  5489 ;;		line 16 in file "PIC16Xpress_DevBoard.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;		None
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;		None
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  1    wreg      void 
  5496 ;; Registers used:
  5497 ;;		wreg, status,2, status,0, pclath, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5507 ;;Total ram usage:        0 bytes
  5508 ;; Hardware stack levels used: 1
  5509 ;; Hardware stack levels required when called: 7
  5510 ;; This function calls:
  5511 ;;		_SYSTEM_Initialize
  5512 ;; This function is called by:
  5513 ;;		_main
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517  0355                     _PIC16_Init:	
  5518                           ;psect for function _PIC16_Init
  5519                           
  5520  0355                     l3275:	
  5521                           ;incstack = 0
  5522                           ; Regs used in _PIC16_Init: [wreg+status,2+status,0+pclath+cstack]
  5523                           
  5524                           
  5525                           ;PIC16Xpress_DevBoard.c: 18:     PIE0 = 0x00;
  5526  0355  0021               	movlb	1	; select bank1
  5527  0356  0190               	clrf	16	;volatile
  5528                           
  5529                           ;PIC16Xpress_DevBoard.c: 19:     PIE1 = 0x00;
  5530  0357  0191               	clrf	17	;volatile
  5531                           
  5532                           ;PIC16Xpress_DevBoard.c: 20:     PIE2 = 0x00;
  5533  0358  0192               	clrf	18	;volatile
  5534                           
  5535                           ;PIC16Xpress_DevBoard.c: 21:     PIE3 = 0x00;
  5536  0359  0193               	clrf	19	;volatile
  5537                           
  5538                           ;PIC16Xpress_DevBoard.c: 22:     PIE4 = 0x00;
  5539  035A  0194               	clrf	20	;volatile
  5540                           
  5541                           ;PIC16Xpress_DevBoard.c: 25:     LATA = 0x00;
  5542  035B  0022               	movlb	2	; select bank2
  5543  035C  018C               	clrf	12	;volatile
  5544                           
  5545                           ;PIC16Xpress_DevBoard.c: 26:     LATB = 0x00;
  5546  035D  018D               	clrf	13	;volatile
  5547                           
  5548                           ;PIC16Xpress_DevBoard.c: 27:     LATC = 0x00;
  5549  035E  018E               	clrf	14	;volatile
  5550  035F                     l3277:
  5551                           
  5552                           ;PIC16Xpress_DevBoard.c: 29:     TRISA = 0x37;
  5553  035F  3037               	movlw	55
  5554  0360  0021               	movlb	1	; select bank1
  5555  0361  008C               	movwf	12	;volatile
  5556  0362                     l3279:
  5557                           
  5558                           ;PIC16Xpress_DevBoard.c: 30:     TRISB = 0xF0;
  5559  0362  30F0               	movlw	240
  5560  0363  008D               	movwf	13	;volatile
  5561  0364                     l3281:
  5562                           
  5563                           ;PIC16Xpress_DevBoard.c: 31:     TRISC = 0xFF;
  5564  0364  30FF               	movlw	255
  5565  0365  008E               	movwf	14	;volatile
  5566  0366                     l3283:
  5567                           
  5568                           ;PIC16Xpress_DevBoard.c: 33:     ANSELC = 0xFF;
  5569  0366  30FF               	movlw	255
  5570  0367  0023               	movlb	3	; select bank3
  5571  0368  008E               	movwf	14	;volatile
  5572  0369                     l3285:
  5573                           
  5574                           ;PIC16Xpress_DevBoard.c: 34:     ANSELB = 0xF0;
  5575  0369  30F0               	movlw	240
  5576  036A  008D               	movwf	13	;volatile
  5577  036B                     l3287:
  5578                           
  5579                           ;PIC16Xpress_DevBoard.c: 35:     ANSELA = 0x37;
  5580  036B  3037               	movlw	55
  5581  036C  008C               	movwf	12	;volatile
  5582                           
  5583                           ;PIC16Xpress_DevBoard.c: 37:     WPUB = 0x00;
  5584  036D  0024               	movlb	4	; select bank4
  5585  036E  018D               	clrf	13	;volatile
  5586                           
  5587                           ;PIC16Xpress_DevBoard.c: 38:     WPUA = 0x00;
  5588  036F  018C               	clrf	12	;volatile
  5589                           
  5590                           ;PIC16Xpress_DevBoard.c: 39:     WPUC = 0x00;
  5591  0370  018E               	clrf	14	;volatile
  5592                           
  5593                           ;PIC16Xpress_DevBoard.c: 41:     ODCONA = 0x00;
  5594  0371  0025               	movlb	5	; select bank5
  5595  0372  018C               	clrf	12	;volatile
  5596                           
  5597                           ;PIC16Xpress_DevBoard.c: 42:     ODCONB = 0x00;
  5598  0373  018D               	clrf	13	;volatile
  5599                           
  5600                           ;PIC16Xpress_DevBoard.c: 43:     ODCONC = 0x00;
  5601  0374  018E               	clrf	14	;volatile
  5602  0375                     l3289:
  5603                           
  5604                           ;PIC16Xpress_DevBoard.c: 45:     SLRCONA = 0x37;
  5605  0375  3037               	movlw	55
  5606  0376  0026               	movlb	6	; select bank6
  5607  0377  008C               	movwf	12	;volatile
  5608  0378                     l3291:
  5609                           
  5610                           ;PIC16Xpress_DevBoard.c: 46:     SLRCONB = 0xF0;
  5611  0378  30F0               	movlw	240
  5612  0379  008D               	movwf	13	;volatile
  5613  037A                     l3293:
  5614                           
  5615                           ;PIC16Xpress_DevBoard.c: 47:     SLRCONC = 0xFF;
  5616  037A  30FF               	movlw	255
  5617  037B  008E               	movwf	14	;volatile
  5618  037C                     l3295:
  5619                           
  5620                           ;PIC16Xpress_DevBoard.c: 49:     INLVLA = 0x3F;
  5621  037C  303F               	movlw	63
  5622  037D  0027               	movlb	7	; select bank7
  5623  037E  008C               	movwf	12	;volatile
  5624  037F                     l3297:
  5625                           
  5626                           ;PIC16Xpress_DevBoard.c: 50:     INLVLB = 0xF0;
  5627  037F  30F0               	movlw	240
  5628  0380  008D               	movwf	13	;volatile
  5629  0381                     l3299:
  5630                           
  5631                           ;PIC16Xpress_DevBoard.c: 51:     INLVLC = 0xFF;
  5632  0381  30FF               	movlw	255
  5633  0382  008E               	movwf	14	;volatile
  5634                           
  5635                           ;PIC16Xpress_DevBoard.c: 54:     PIR0 = 0x00;
  5636  0383  0020               	movlb	0	; select bank0
  5637  0384  0190               	clrf	16	;volatile
  5638                           
  5639                           ;PIC16Xpress_DevBoard.c: 55:     PIR1 = 0x00;
  5640  0385  0191               	clrf	17	;volatile
  5641                           
  5642                           ;PIC16Xpress_DevBoard.c: 56:     PIR2 = 0x00;
  5643  0386  0192               	clrf	18	;volatile
  5644                           
  5645                           ;PIC16Xpress_DevBoard.c: 57:     PIR3 = 0x00;
  5646  0387  0193               	clrf	19	;volatile
  5647                           
  5648                           ;PIC16Xpress_DevBoard.c: 58:     PIR4 = 0x00;
  5649  0388  0194               	clrf	20	;volatile
  5650  0389                     l3301:
  5651                           
  5652                           ;PIC16Xpress_DevBoard.c: 60:     SYSTEM_Initialize();
  5653  0389  3184  243C  3183   	fcall	_SYSTEM_Initialize
  5654  038C                     l3303:
  5655                           
  5656                           ;PIC16Xpress_DevBoard.c: 62:     INTCONbits.GIE = 1;
  5657  038C  178B               	bsf	11,7	;volatile
  5658  038D                     l189:
  5659  038D  0008               	return
  5660  038E                     __end_of_PIC16_Init:
  5661                           
  5662                           	psect	text2
  5663  043C                     __ptext2:	
  5664 ;; *************** function _SYSTEM_Initialize *****************
  5665 ;; Defined at:
  5666 ;;		line 14 in file "mcc.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;		None
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;		None
  5671 ;; Return value:  Size  Location     Type
  5672 ;;                  1    wreg      void 
  5673 ;; Registers used:
  5674 ;;		wreg, status,2, status,0, pclath, cstack
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5684 ;;Total ram usage:        0 bytes
  5685 ;; Hardware stack levels used: 1
  5686 ;; Hardware stack levels required when called: 6
  5687 ;; This function calls:
  5688 ;;		_CCP1_Initialize
  5689 ;;		_CCP2_Initialize
  5690 ;;		_CCP3_Initialize
  5691 ;;		_OSCILLATOR_Initialize
  5692 ;;		_PIN_MANAGER_Initialize
  5693 ;;		_PMD_Initialize
  5694 ;;		_TMR0_Initialize
  5695 ;;		_TMR1_Initialize
  5696 ;;		_WDT_Initialize
  5697 ;; This function is called by:
  5698 ;;		_PIC16_Init
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702  043C                     _SYSTEM_Initialize:	
  5703                           ;psect for function _SYSTEM_Initialize
  5704                           
  5705  043C                     l3235:	
  5706                           ;incstack = 0
  5707                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5708                           
  5709                           
  5710                           ;mcc.c: 16:     PMD_Initialize();
  5711  043C  3185  2578  3184   	fcall	_PMD_Initialize
  5712                           
  5713                           ;mcc.c: 17:     PIN_MANAGER_Initialize();
  5714  043F  3183  238E  3184   	fcall	_PIN_MANAGER_Initialize
  5715                           
  5716                           ;mcc.c: 18:     OSCILLATOR_Initialize();
  5717  0442  3185  2584  3184   	fcall	_OSCILLATOR_Initialize
  5718                           
  5719                           ;mcc.c: 19:     WDT_Initialize();
  5720  0445  3185  25E0  3184   	fcall	_WDT_Initialize
  5721                           
  5722                           ;mcc.c: 20:     CCP2_Initialize();
  5723  0448  3184  2470  3184   	fcall	_CCP2_Initialize
  5724                           
  5725                           ;mcc.c: 21:     CCP3_Initialize();
  5726  044B  3184  2458  3184   	fcall	_CCP3_Initialize
  5727                           
  5728                           ;mcc.c: 22:     CCP1_Initialize();
  5729  044E  3184  2488  3184   	fcall	_CCP1_Initialize
  5730                           
  5731                           ;mcc.c: 23:     TMR1_Initialize();
  5732  0451  3184  24A0  3184   	fcall	_TMR1_Initialize
  5733                           
  5734                           ;mcc.c: 24:     TMR0_Initialize();
  5735  0454  3185  2524  3184   	fcall	_TMR0_Initialize
  5736  0457                     l308:
  5737  0457  0008               	return
  5738  0458                     __end_of_SYSTEM_Initialize:
  5739                           
  5740                           	psect	text3
  5741  05E0                     __ptext3:	
  5742 ;; *************** function _WDT_Initialize *****************
  5743 ;; Defined at:
  5744 ;;		line 49 in file "mcc.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;		None
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;		None
  5749 ;; Return value:  Size  Location     Type
  5750 ;;                  1    wreg      void 
  5751 ;; Registers used:
  5752 ;;		wreg
  5753 ;; Tracked objects:
  5754 ;;		On entry : 0/0
  5755 ;;		On exit  : 0/0
  5756 ;;		Unchanged: 0/0
  5757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5762 ;;Total ram usage:        0 bytes
  5763 ;; Hardware stack levels used: 1
  5764 ;; Hardware stack levels required when called: 4
  5765 ;; This function calls:
  5766 ;;		Nothing
  5767 ;; This function is called by:
  5768 ;;		_SYSTEM_Initialize
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772  05E0                     _WDT_Initialize:	
  5773                           ;psect for function _WDT_Initialize
  5774                           
  5775  05E0                     l3197:	
  5776                           ;incstack = 0
  5777                           ; Regs used in _WDT_Initialize: [wreg]
  5778                           
  5779                           
  5780                           ;mcc.c: 52:     WDTCON = 0x16;
  5781  05E0  3016               	movlw	22
  5782  05E1  0021               	movlb	1	; select bank1
  5783  05E2  0097               	movwf	23	;volatile
  5784  05E3                     l317:
  5785  05E3  0008               	return
  5786  05E4                     __end_of_WDT_Initialize:
  5787                           
  5788                           	psect	text4
  5789  0578                     __ptext4:	
  5790 ;; *************** function _PMD_Initialize *****************
  5791 ;; Defined at:
  5792 ;;		line 57 in file "mcc.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;		None
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;		None
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  1    wreg      void 
  5799 ;; Registers used:
  5800 ;;		wreg, status,2
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5810 ;;Total ram usage:        0 bytes
  5811 ;; Hardware stack levels used: 1
  5812 ;; Hardware stack levels required when called: 4
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_SYSTEM_Initialize
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820  0578                     _PMD_Initialize:	
  5821                           ;psect for function _PMD_Initialize
  5822                           
  5823  0578                     l3149:	
  5824                           ;incstack = 0
  5825                           ; Regs used in _PMD_Initialize: [wreg+status,2]
  5826                           
  5827                           
  5828                           ;mcc.c: 60:     PMD0 = 0x00;
  5829  0578  0032               	movlb	18	; select bank18
  5830  0579  0191               	clrf	17	;volatile
  5831  057A                     l3151:
  5832                           
  5833                           ;mcc.c: 62:     PMD1 = 0x7C;
  5834  057A  307C               	movlw	124
  5835  057B  0092               	movwf	18	;volatile
  5836  057C                     l3153:
  5837                           
  5838                           ;mcc.c: 64:     PMD2 = 0x66;
  5839  057C  3066               	movlw	102
  5840  057D  0093               	movwf	19	;volatile
  5841  057E                     l3155:
  5842                           
  5843                           ;mcc.c: 66:     PMD3 = 0xC8;
  5844  057E  30C8               	movlw	200
  5845  057F  0094               	movwf	20	;volatile
  5846  0580                     l3157:
  5847                           
  5848                           ;mcc.c: 68:     PMD4 = 0x00;
  5849  0580  0195               	clrf	21	;volatile
  5850                           
  5851                           ;mcc.c: 70:     PMD5 = 0x1F;
  5852  0581  301F               	movlw	31
  5853  0582  0096               	movwf	22	;volatile
  5854  0583                     l320:
  5855  0583  0008               	return
  5856  0584                     __end_of_PMD_Initialize:
  5857                           
  5858                           	psect	text5
  5859  038E                     __ptext5:	
  5860 ;; *************** function _PIN_MANAGER_Initialize *****************
  5861 ;; Defined at:
  5862 ;;		line 4 in file "pin_manager.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;		None
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg, status,2
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5880 ;;Total ram usage:        0 bytes
  5881 ;; Hardware stack levels used: 1
  5882 ;; Hardware stack levels required when called: 4
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_SYSTEM_Initialize
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890  038E                     _PIN_MANAGER_Initialize:	
  5891                           ;psect for function _PIN_MANAGER_Initialize
  5892                           
  5893  038E                     l3159:	
  5894                           ;incstack = 0
  5895                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5896                           
  5897                           
  5898                           ;pin_manager.c: 9:     LATA = 0x00;
  5899  038E  0022               	movlb	2	; select bank2
  5900  038F  018C               	clrf	12	;volatile
  5901                           
  5902                           ;pin_manager.c: 10:     LATB = 0x00;
  5903  0390  018D               	clrf	13	;volatile
  5904                           
  5905                           ;pin_manager.c: 11:     LATC = 0x00;
  5906  0391  018E               	clrf	14	;volatile
  5907  0392                     l3161:
  5908                           
  5909                           ;pin_manager.c: 16:     TRISA = 0x37;
  5910  0392  3037               	movlw	55
  5911  0393  0021               	movlb	1	; select bank1
  5912  0394  008C               	movwf	12	;volatile
  5913  0395                     l3163:
  5914                           
  5915                           ;pin_manager.c: 17:     TRISB = 0xF0;
  5916  0395  30F0               	movlw	240
  5917  0396  008D               	movwf	13	;volatile
  5918  0397                     l3165:
  5919                           
  5920                           ;pin_manager.c: 18:     TRISC = 0xFF;
  5921  0397  30FF               	movlw	255
  5922  0398  008E               	movwf	14	;volatile
  5923  0399                     l3167:
  5924                           
  5925                           ;pin_manager.c: 23:     ANSELC = 0xD7;
  5926  0399  30D7               	movlw	215
  5927  039A  0023               	movlb	3	; select bank3
  5928  039B  008E               	movwf	14	;volatile
  5929  039C                     l3169:
  5930                           
  5931                           ;pin_manager.c: 24:     ANSELB = 0xF0;
  5932  039C  30F0               	movlw	240
  5933  039D  008D               	movwf	13	;volatile
  5934  039E                     l3171:
  5935                           
  5936                           ;pin_manager.c: 25:     ANSELA = 0x33;
  5937  039E  3033               	movlw	51
  5938  039F  008C               	movwf	12	;volatile
  5939                           
  5940                           ;pin_manager.c: 30:     WPUB = 0x00;
  5941  03A0  0024               	movlb	4	; select bank4
  5942  03A1  018D               	clrf	13	;volatile
  5943                           
  5944                           ;pin_manager.c: 31:     WPUA = 0x00;
  5945  03A2  018C               	clrf	12	;volatile
  5946                           
  5947                           ;pin_manager.c: 32:     WPUC = 0x00;
  5948  03A3  018E               	clrf	14	;volatile
  5949                           
  5950                           ;pin_manager.c: 37:     ODCONA = 0x00;
  5951  03A4  0025               	movlb	5	; select bank5
  5952  03A5  018C               	clrf	12	;volatile
  5953                           
  5954                           ;pin_manager.c: 38:     ODCONB = 0x00;
  5955  03A6  018D               	clrf	13	;volatile
  5956                           
  5957                           ;pin_manager.c: 39:     ODCONC = 0x00;
  5958  03A7  018E               	clrf	14	;volatile
  5959  03A8                     l3173:
  5960                           
  5961                           ;pin_manager.c: 44:     SLRCONA = 0x37;
  5962  03A8  3037               	movlw	55
  5963  03A9  0026               	movlb	6	; select bank6
  5964  03AA  008C               	movwf	12	;volatile
  5965  03AB                     l3175:
  5966                           
  5967                           ;pin_manager.c: 45:     SLRCONB = 0xF0;
  5968  03AB  30F0               	movlw	240
  5969  03AC  008D               	movwf	13	;volatile
  5970  03AD                     l3177:
  5971                           
  5972                           ;pin_manager.c: 46:     SLRCONC = 0xFF;
  5973  03AD  30FF               	movlw	255
  5974  03AE  008E               	movwf	14	;volatile
  5975  03AF                     l3179:
  5976                           
  5977                           ;pin_manager.c: 51:     INLVLA = 0x3F;
  5978  03AF  303F               	movlw	63
  5979  03B0  0027               	movlb	7	; select bank7
  5980  03B1  008C               	movwf	12	;volatile
  5981  03B2                     l3181:
  5982                           
  5983                           ;pin_manager.c: 52:     INLVLB = 0xF0;
  5984  03B2  30F0               	movlw	240
  5985  03B3  008D               	movwf	13	;volatile
  5986  03B4                     l3183:
  5987                           
  5988                           ;pin_manager.c: 53:     INLVLC = 0xFF;
  5989  03B4  30FF               	movlw	255
  5990  03B5  008E               	movwf	14	;volatile
  5991  03B6                     l3185:
  5992                           
  5993                           ;pin_manager.c: 55:     CCP2PPS = 0x13;
  5994  03B6  3013               	movlw	19
  5995  03B7  003C               	movlb	28	; select bank28
  5996  03B8  0095               	movwf	21	;volatile
  5997  03B9                     l3187:
  5998                           
  5999                           ;pin_manager.c: 56:     CCP3PPS = 0x02;
  6000  03B9  3002               	movlw	2
  6001  03BA  0096               	movwf	22	;volatile
  6002  03BB                     l3189:
  6003                           
  6004                           ;pin_manager.c: 57:     CCP1PPS = 0x15;
  6005  03BB  3015               	movlw	21
  6006  03BC  0094               	movwf	20	;volatile
  6007  03BD                     l788:
  6008  03BD  0008               	return
  6009  03BE                     __end_of_PIN_MANAGER_Initialize:
  6010                           
  6011                           	psect	text6
  6012  0584                     __ptext6:	
  6013 ;; *************** function _OSCILLATOR_Initialize *****************
  6014 ;; Defined at:
  6015 ;;		line 29 in file "mcc.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;		None
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;		None
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  1    wreg      void 
  6022 ;; Registers used:
  6023 ;;		wreg, status,2
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6033 ;;Total ram usage:        0 bytes
  6034 ;; Hardware stack levels used: 1
  6035 ;; Hardware stack levels required when called: 4
  6036 ;; This function calls:
  6037 ;;		Nothing
  6038 ;; This function is called by:
  6039 ;;		_SYSTEM_Initialize
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043  0584                     _OSCILLATOR_Initialize:	
  6044                           ;psect for function _OSCILLATOR_Initialize
  6045                           
  6046  0584                     l3191:	
  6047                           ;incstack = 0
  6048                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6049                           
  6050                           
  6051                           ;mcc.c: 32:     OSCCON1 = 0x00;
  6052  0584  0032               	movlb	18	; select bank18
  6053  0585  0199               	clrf	25	;volatile
  6054                           
  6055                           ;mcc.c: 34:     OSCCON3 = 0x00;
  6056  0586  019B               	clrf	27	;volatile
  6057                           
  6058                           ;mcc.c: 36:     OSCEN = 0x00;
  6059  0587  019D               	clrf	29	;volatile
  6060  0588                     l3193:
  6061                           
  6062                           ;mcc.c: 38:     OSCFRQ = 0x04;
  6063  0588  3004               	movlw	4
  6064  0589  009F               	movwf	31	;volatile
  6065  058A                     l3195:
  6066                           
  6067                           ;mcc.c: 40:     OSCTUNE = 0x00;
  6068  058A  019E               	clrf	30	;volatile
  6069  058B                     l311:	
  6070                           ;mcc.c: 43:     {;mcc.c: 44:     }
  6071                           
  6072                           
  6073                           ;mcc.c: 42:     while(PLLR == 0)
  6074  058B  1C1C               	btfss	28,0	;volatile
  6075  058C  2D8E               	goto	u811
  6076  058D  2D8F               	goto	u810
  6077  058E                     u811:
  6078  058E  2D8B               	goto	l311
  6079  058F                     u810:
  6080  058F                     l314:
  6081  058F  0008               	return
  6082  0590                     __end_of_OSCILLATOR_Initialize:
  6083                           
  6084                           	psect	text7
  6085  0458                     __ptext7:	
  6086 ;; *************** function _CCP3_Initialize *****************
  6087 ;; Defined at:
  6088 ;;		line 65 in file "ccp3.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;		None
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;		None
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  1    wreg      void 
  6095 ;; Registers used:
  6096 ;;		wreg, status,2, status,0, pclath, cstack
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6106 ;;Total ram usage:        0 bytes
  6107 ;; Hardware stack levels used: 1
  6108 ;; Hardware stack levels required when called: 5
  6109 ;; This function calls:
  6110 ;;		_CCP3_SetCallBack
  6111 ;; This function is called by:
  6112 ;;		_SYSTEM_Initialize
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116  0458                     _CCP3_Initialize:	
  6117                           ;psect for function _CCP3_Initialize
  6118                           
  6119  0458                     l3215:	
  6120                           ;incstack = 0
  6121                           ; Regs used in _CCP3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6122                           
  6123                           
  6124                           ;ccp3.c: 70:  CCP3CON = 0x83;
  6125  0458  3083               	movlw	131
  6126  0459  0026               	movlb	6	; select bank6
  6127  045A  0093               	movwf	19	;volatile
  6128  045B                     l3217:
  6129                           
  6130                           ;ccp3.c: 73:  CCP3CAP = 0x00;
  6131  045B  0194               	clrf	20	;volatile
  6132  045C                     l3219:
  6133                           
  6134                           ;ccp3.c: 76:  CCPR3H = 0x00;
  6135  045C  0192               	clrf	18	;volatile
  6136  045D                     l3221:
  6137                           
  6138                           ;ccp3.c: 79:  CCPR3L = 0x00;
  6139  045D  0191               	clrf	17	;volatile
  6140  045E                     l3223:
  6141                           
  6142                           ;ccp3.c: 82:     CCP3_SetCallBack(CCP3_DefaultCallBack);
  6143  045E  30EC               	movlw	low _CCP3_DefaultCallBack
  6144  045F  0020               	movlb	0	; select bank0
  6145  0460  00CF               	movwf	CCP3_SetCallBack@customCallBack
  6146  0461  3005               	movlw	high _CCP3_DefaultCallBack
  6147  0462  00D0               	movwf	CCP3_SetCallBack@customCallBack+1
  6148  0463  3185  25C2  3184   	fcall	_CCP3_SetCallBack
  6149  0466                     l3225:
  6150                           
  6151                           ;ccp3.c: 85:  CCPTMRSbits.C3TSEL = 0x1;
  6152  0466  0025               	movlb	5	; select bank5
  6153  0467  081F               	movf	31,w	;volatile
  6154  0468  39CF               	andlw	-49
  6155  0469  3810               	iorlw	16
  6156  046A  009F               	movwf	31	;volatile
  6157  046B                     l3227:
  6158                           
  6159                           ;ccp3.c: 88:     PIR4bits.CCP3IF = 0;
  6160  046B  0020               	movlb	0	; select bank0
  6161  046C  1114               	bcf	20,2	;volatile
  6162  046D                     l3229:
  6163                           
  6164                           ;ccp3.c: 91:     PIE4bits.CCP3IE = 1;
  6165  046D  0021               	movlb	1	; select bank1
  6166  046E  1514               	bsf	20,2	;volatile
  6167  046F                     l475:
  6168  046F  0008               	return
  6169  0470                     __end_of_CCP3_Initialize:
  6170                           
  6171                           	psect	text8
  6172  05C2                     __ptext8:	
  6173 ;; *************** function _CCP3_SetCallBack *****************
  6174 ;; Defined at:
  6175 ;;		line 109 in file "ccp3.c"
  6176 ;; Parameters:    Size  Location     Type
  6177 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  6178 ;;		 -> CCP3_DefaultCallBack(1), 
  6179 ;; Auto vars:     Size  Location     Type
  6180 ;;		None
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  1    wreg      void 
  6183 ;; Registers used:
  6184 ;;		wreg
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6190 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6193 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6194 ;;Total ram usage:        2 bytes
  6195 ;; Hardware stack levels used: 1
  6196 ;; Hardware stack levels required when called: 4
  6197 ;; This function calls:
  6198 ;;		Nothing
  6199 ;; This function is called by:
  6200 ;;		_CCP3_Initialize
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204  05C2                     _CCP3_SetCallBack:	
  6205                           ;psect for function _CCP3_SetCallBack
  6206                           
  6207  05C2                     l3105:	
  6208                           ;incstack = 0
  6209                           ; Regs used in _CCP3_SetCallBack: [wreg]
  6210                           
  6211                           
  6212                           ;ccp3.c: 110:     CCP3_CallBack = customCallBack;
  6213  05C2  0020               	movlb	0	; select bank0
  6214  05C3  0850               	movf	CCP3_SetCallBack@customCallBack+1,w
  6215  05C4  00BB               	movwf	_CCP3_CallBack+1
  6216  05C5  084F               	movf	CCP3_SetCallBack@customCallBack,w
  6217  05C6  00BA               	movwf	_CCP3_CallBack
  6218  05C7                     l481:
  6219  05C7  0008               	return
  6220  05C8                     __end_of_CCP3_SetCallBack:
  6221                           
  6222                           	psect	text9
  6223  0470                     __ptext9:	
  6224 ;; *************** function _CCP2_Initialize *****************
  6225 ;; Defined at:
  6226 ;;		line 65 in file "ccp2.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;		None
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;		None
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  1    wreg      void 
  6233 ;; Registers used:
  6234 ;;		wreg, status,2, status,0, pclath, cstack
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6244 ;;Total ram usage:        0 bytes
  6245 ;; Hardware stack levels used: 1
  6246 ;; Hardware stack levels required when called: 5
  6247 ;; This function calls:
  6248 ;;		_CCP2_SetCallBack
  6249 ;; This function is called by:
  6250 ;;		_SYSTEM_Initialize
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254  0470                     _CCP2_Initialize:	
  6255                           ;psect for function _CCP2_Initialize
  6256                           
  6257  0470                     l3199:	
  6258                           ;incstack = 0
  6259                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6260                           
  6261                           
  6262                           ;ccp2.c: 70:  CCP2CON = 0x83;
  6263  0470  3083               	movlw	131
  6264  0471  0025               	movlb	5	; select bank5
  6265  0472  0097               	movwf	23	;volatile
  6266  0473                     l3201:
  6267                           
  6268                           ;ccp2.c: 73:  CCP2CAP = 0x00;
  6269  0473  0198               	clrf	24	;volatile
  6270  0474                     l3203:
  6271                           
  6272                           ;ccp2.c: 76:  CCPR2H = 0x00;
  6273  0474  0196               	clrf	22	;volatile
  6274  0475                     l3205:
  6275                           
  6276                           ;ccp2.c: 79:  CCPR2L = 0x00;
  6277  0475  0195               	clrf	21	;volatile
  6278  0476                     l3207:
  6279                           
  6280                           ;ccp2.c: 82:     CCP2_SetCallBack(CCP2_DefaultCallBack);
  6281  0476  30ED               	movlw	low _CCP2_DefaultCallBack
  6282  0477  0020               	movlb	0	; select bank0
  6283  0478  00CF               	movwf	CCP2_SetCallBack@customCallBack
  6284  0479  3005               	movlw	high _CCP2_DefaultCallBack
  6285  047A  00D0               	movwf	CCP2_SetCallBack@customCallBack+1
  6286  047B  3185  25C8  3184   	fcall	_CCP2_SetCallBack
  6287  047E                     l3209:
  6288                           
  6289                           ;ccp2.c: 85:  CCPTMRSbits.C2TSEL = 0x1;
  6290  047E  0025               	movlb	5	; select bank5
  6291  047F  081F               	movf	31,w	;volatile
  6292  0480  39F3               	andlw	-13
  6293  0481  3804               	iorlw	4
  6294  0482  009F               	movwf	31	;volatile
  6295  0483                     l3211:
  6296                           
  6297                           ;ccp2.c: 88:     PIR4bits.CCP2IF = 0;
  6298  0483  0020               	movlb	0	; select bank0
  6299  0484  1094               	bcf	20,1	;volatile
  6300  0485                     l3213:
  6301                           
  6302                           ;ccp2.c: 91:     PIE4bits.CCP2IE = 1;
  6303  0485  0021               	movlb	1	; select bank1
  6304  0486  1494               	bsf	20,1	;volatile
  6305  0487                     l445:
  6306  0487  0008               	return
  6307  0488                     __end_of_CCP2_Initialize:
  6308                           
  6309                           	psect	text10
  6310  05C8                     __ptext10:	
  6311 ;; *************** function _CCP2_SetCallBack *****************
  6312 ;; Defined at:
  6313 ;;		line 109 in file "ccp2.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  6316 ;;		 -> CCP2_DefaultCallBack(1), 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		wreg
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6328 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6331 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;Total ram usage:        2 bytes
  6333 ;; Hardware stack levels used: 1
  6334 ;; Hardware stack levels required when called: 4
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_CCP2_Initialize
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342  05C8                     _CCP2_SetCallBack:	
  6343                           ;psect for function _CCP2_SetCallBack
  6344                           
  6345  05C8                     l3103:	
  6346                           ;incstack = 0
  6347                           ; Regs used in _CCP2_SetCallBack: [wreg]
  6348                           
  6349                           
  6350                           ;ccp2.c: 110:     CCP2_CallBack = customCallBack;
  6351  05C8  0020               	movlb	0	; select bank0
  6352  05C9  0850               	movf	CCP2_SetCallBack@customCallBack+1,w
  6353  05CA  00BD               	movwf	_CCP2_CallBack+1
  6354  05CB  084F               	movf	CCP2_SetCallBack@customCallBack,w
  6355  05CC  00BC               	movwf	_CCP2_CallBack
  6356  05CD                     l451:
  6357  05CD  0008               	return
  6358  05CE                     __end_of_CCP2_SetCallBack:
  6359                           
  6360                           	psect	text11
  6361  02D1                     __ptext11:	
  6362 ;; *************** function _JSN_Sensor_Trig *****************
  6363 ;; Defined at:
  6364 ;;		line 93 in file "JSN_Sensor.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;  Sensor          1    wreg     PTR struct .
  6367 ;;		 -> Sens1(6), 
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;  Sensor          1   10[BANK0 ] PTR struct .
  6370 ;;		 -> Sens1(6), 
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  1    wreg      void 
  6373 ;; Registers used:
  6374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6381 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6382 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6384 ;;Total ram usage:        5 bytes
  6385 ;; Hardware stack levels used: 1
  6386 ;; Hardware stack levels required when called: 6
  6387 ;; This function calls:
  6388 ;;		_FR_Timer_GetMicros
  6389 ;;		_WritePin
  6390 ;; This function is called by:
  6391 ;;		_main
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395  02D1                     _JSN_Sensor_Trig:	
  6396                           ;psect for function _JSN_Sensor_Trig
  6397                           
  6398                           
  6399                           ;incstack = 0
  6400                           ; Regs used in _JSN_Sensor_Trig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6401                           ;JSN_Sensor_Trig@Sensor stored from wreg
  6402  02D1  0020               	movlb	0	; select bank0
  6403  02D2  00D9               	movwf	JSN_Sensor_Trig@Sensor
  6404  02D3                     l3257:
  6405                           
  6406                           ;JSN_Sensor.c: 94:     micros = FR_Timer_GetMicros();
  6407  02D3  3185  250F  3182   	fcall	_FR_Timer_GetMicros
  6408  02D6  0020               	movlb	0	; select bank0
  6409  02D7  0854               	movf	?_FR_Timer_GetMicros+3,w
  6410  02D8  00AB               	movwf	_micros+3
  6411  02D9  0853               	movf	?_FR_Timer_GetMicros+2,w
  6412  02DA  00AA               	movwf	_micros+2
  6413  02DB  0852               	movf	?_FR_Timer_GetMicros+1,w
  6414  02DC  00A9               	movwf	_micros+1
  6415  02DD  0851               	movf	?_FR_Timer_GetMicros,w
  6416  02DE  00A8               	movwf	_micros
  6417  02DF                     l3259:
  6418                           
  6419                           ;JSN_Sensor.c: 97:     WritePin(Sensor->trigPin, 1);
  6420  02DF  01CF               	clrf	WritePin@val
  6421  02E0  0ACF               	incf	WritePin@val,f
  6422  02E1  0859               	movf	JSN_Sensor_Trig@Sensor,w
  6423  02E2  3E04               	addlw	4
  6424  02E3  0086               	movwf	6
  6425  02E4  0187               	clrf	7
  6426  02E5  0801               	movf	1,w
  6427  02E6  3180  206F  3182   	fcall	_WritePin
  6428  02E9                     l3261:	
  6429                           ;JSN_Sensor.c: 100:     while((FR_Timer_GetMicros() - micros) < 11);
  6430                           
  6431  02E9  3185  250F  3182   	fcall	_FR_Timer_GetMicros
  6432  02EC  0020               	movlb	0	; select bank0
  6433  02ED  0828               	movf	_micros,w
  6434  02EE  0251               	subwf	?_FR_Timer_GetMicros,w
  6435  02EF  00D5               	movwf	??_JSN_Sensor_Trig
  6436  02F0  0829               	movf	_micros+1,w
  6437  02F1  3B52               	subwfb	?_FR_Timer_GetMicros+1,w
  6438  02F2  00D6               	movwf	??_JSN_Sensor_Trig+1
  6439  02F3  082A               	movf	_micros+2,w
  6440  02F4  3B53               	subwfb	?_FR_Timer_GetMicros+2,w
  6441  02F5  00D7               	movwf	??_JSN_Sensor_Trig+2
  6442  02F6  082B               	movf	_micros+3,w
  6443  02F7  3B54               	subwfb	?_FR_Timer_GetMicros+3,w
  6444  02F8  00D8               	movwf	??_JSN_Sensor_Trig+3
  6445  02F9  0858               	movf	??_JSN_Sensor_Trig+3,w
  6446  02FA  1D03               	btfss	3,2
  6447  02FB  2B08               	goto	u860
  6448  02FC  0857               	movf	??_JSN_Sensor_Trig+2,w
  6449  02FD  1D03               	btfss	3,2
  6450  02FE  2B08               	goto	u860
  6451  02FF  0856               	movf	??_JSN_Sensor_Trig+1,w
  6452  0300  1D03               	btfss	3,2
  6453  0301  2B08               	goto	u860
  6454  0302  300B               	movlw	11
  6455  0303  0255               	subwf	??_JSN_Sensor_Trig,w
  6456  0304  1C03               	btfss	3,0
  6457  0305  2B07               	goto	u861
  6458  0306  2B08               	goto	u860
  6459  0307                     u861:
  6460  0307  2AE9               	goto	l3261
  6461  0308                     u860:
  6462  0308                     l3263:
  6463                           
  6464                           ;JSN_Sensor.c: 103:     WritePin(Sensor->trigPin, 0);
  6465  0308  0020               	movlb	0	; select bank0
  6466  0309  01CF               	clrf	WritePin@val
  6467  030A  0859               	movf	JSN_Sensor_Trig@Sensor,w
  6468  030B  3E04               	addlw	4
  6469  030C  0086               	movwf	6
  6470  030D  0187               	clrf	7
  6471  030E  0801               	movf	1,w
  6472  030F  3180  206F  3182   	fcall	_WritePin
  6473  0312                     l3265:
  6474                           
  6475                           ;JSN_Sensor.c: 106:     lastTrig = Sensor;
  6476  0312  0020               	movlb	0	; select bank0
  6477  0313  0859               	movf	JSN_Sensor_Trig@Sensor,w
  6478  0314  00D5               	movwf	??_JSN_Sensor_Trig
  6479  0315  0855               	movf	??_JSN_Sensor_Trig,w
  6480  0316  00C8               	movwf	_lastTrig
  6481  0317                     l63:
  6482  0317  0008               	return
  6483  0318                     __end_of_JSN_Sensor_Trig:
  6484                           
  6485                           	psect	text12
  6486  050F                     __ptext12:	
  6487 ;; *************** function _FR_Timer_GetMicros *****************
  6488 ;; Defined at:
  6489 ;;		line 46 in file "FR_Timer.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;		None
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;		None
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  4    2[BANK0 ] unsigned long 
  6496 ;; Registers used:
  6497 ;;		wreg, pclath, cstack
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6503 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6506 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6507 ;;Total ram usage:        4 bytes
  6508 ;; Hardware stack levels used: 1
  6509 ;; Hardware stack levels required when called: 5
  6510 ;; This function calls:
  6511 ;;		_TMR0_ReadTimer
  6512 ;; This function is called by:
  6513 ;;		_JSN_Sensor_Trig
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517  050F                     _FR_Timer_GetMicros:	
  6518                           ;psect for function _FR_Timer_GetMicros
  6519                           
  6520  050F                     l3231:	
  6521                           ;incstack = 0
  6522                           ; Regs used in _FR_Timer_GetMicros: [wreg+pclath+cstack]
  6523                           
  6524                           
  6525                           ;FR_Timer.c: 47:     return (micros + TMR0_ReadTimer());
  6526  050F  3185  25AE  3185   	fcall	_TMR0_ReadTimer
  6527  0512  0020               	movlb	0	; select bank0
  6528  0513  0720               	addwf	_micros@FR_Timer$F158,w
  6529  0514  00D1               	movwf	?_FR_Timer_GetMicros
  6530  0515  0821               	movf	_micros@FR_Timer$F158+1,w
  6531  0516  1803               	skipnc
  6532  0517  0F21               	incfsz	_micros@FR_Timer$F158+1,w
  6533  0518  1003               	clrc
  6534  0519  00D2               	movwf	?_FR_Timer_GetMicros+1
  6535  051A  0822               	movf	_micros@FR_Timer$F158+2,w
  6536  051B  1803               	skipnc
  6537  051C  0F22               	incfsz	_micros@FR_Timer$F158+2,w
  6538  051D  1003               	clrc
  6539  051E  00D3               	movwf	?_FR_Timer_GetMicros+2
  6540  051F  0823               	movf	_micros@FR_Timer$F158+3,w
  6541  0520  1803               	skipnc
  6542  0521  0A23               	incf	_micros@FR_Timer$F158+3,w
  6543  0522  00D4               	movwf	?_FR_Timer_GetMicros+3
  6544  0523                     l96:
  6545  0523  0008               	return
  6546  0524                     __end_of_FR_Timer_GetMicros:
  6547                           
  6548                           	psect	text13
  6549  05AE                     __ptext13:	
  6550 ;; *************** function _TMR0_ReadTimer *****************
  6551 ;; Defined at:
  6552 ;;		line 62 in file "tmr0.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;		None
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  readVal         1    1[BANK0 ] unsigned char 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  1    wreg      unsigned char 
  6559 ;; Registers used:
  6560 ;;		wreg
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6567 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6569 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6570 ;;Total ram usage:        2 bytes
  6571 ;; Hardware stack levels used: 1
  6572 ;; Hardware stack levels required when called: 4
  6573 ;; This function calls:
  6574 ;;		Nothing
  6575 ;; This function is called by:
  6576 ;;		_FR_Timer_GetMicros
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580  05AE                     _TMR0_ReadTimer:	
  6581                           ;psect for function _TMR0_ReadTimer
  6582                           
  6583  05AE                     l2467:	
  6584                           ;incstack = 0
  6585                           ; Regs used in _TMR0_ReadTimer: [wreg]
  6586                           
  6587                           
  6588                           ;tmr0.c: 64:     uint8_t readVal;;tmr0.c: 67:     readVal = TMR0L;
  6589  05AE  0020               	movlb	0	; select bank0
  6590  05AF  0815               	movf	21,w	;volatile
  6591  05B0  00CF               	movwf	??_TMR0_ReadTimer
  6592  05B1  084F               	movf	??_TMR0_ReadTimer,w
  6593  05B2  00D0               	movwf	TMR0_ReadTimer@readVal
  6594                           
  6595                           ;tmr0.c: 69:     return readVal;
  6596  05B3  0850               	movf	TMR0_ReadTimer@readVal,w
  6597  05B4                     l358:
  6598  05B4  0008               	return
  6599  05B5                     __end_of_TMR0_ReadTimer:
  6600                           
  6601                           	psect	text14
  6602  03EE                     __ptext14:	
  6603 ;; *************** function _JSN_Sensor_GetDistance *****************
  6604 ;; Defined at:
  6605 ;;		line 112 in file "JSN_Sensor.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;  Sensor          1    wreg     PTR struct .
  6608 ;;		 -> Sens1(6), 
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  Sensor          1   16[BANK0 ] PTR struct .
  6611 ;;		 -> Sens1(6), 
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  2   14[BANK0 ] unsigned int 
  6614 ;; Registers used:
  6615 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6621 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6622 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6624 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6625 ;;Total ram usage:        3 bytes
  6626 ;; Hardware stack levels used: 1
  6627 ;; Hardware stack levels required when called: 5
  6628 ;; This function calls:
  6629 ;;		___lwdiv
  6630 ;;		___wmul
  6631 ;; This function is called by:
  6632 ;;		_main
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636  03EE                     _JSN_Sensor_GetDistance:	
  6637                           ;psect for function _JSN_Sensor_GetDistance
  6638                           
  6639                           
  6640                           ;incstack = 0
  6641                           ; Regs used in _JSN_Sensor_GetDistance: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  6642                           ;JSN_Sensor_GetDistance@Sensor stored from wreg
  6643  03EE  0020               	movlb	0	; select bank0
  6644  03EF  00DF               	movwf	JSN_Sensor_GetDistance@Sensor
  6645  03F0                     l3269:
  6646                           
  6647                           ;JSN_Sensor.c: 113:     Sensor->distance = (Sensor->echoHighTime*343)/(1000<<1);
  6648  03F0  30D0               	movlw	208
  6649  03F1  00D5               	movwf	___lwdiv@divisor
  6650  03F2  3007               	movlw	7
  6651  03F3  00D6               	movwf	___lwdiv@divisor+1
  6652  03F4  085F               	movf	JSN_Sensor_GetDistance@Sensor,w
  6653  03F5  0086               	movwf	6
  6654  03F6  0187               	clrf	7
  6655  03F7  3F40               	moviw [0]fsr1
  6656  03F8  00CF               	movwf	___wmul@multiplier
  6657  03F9  3F41               	moviw [1]fsr1
  6658  03FA  00D0               	movwf	___wmul@multiplier+1
  6659  03FB  3057               	movlw	87
  6660  03FC  00D1               	movwf	___wmul@multiplicand
  6661  03FD  3001               	movlw	1
  6662  03FE  00D2               	movwf	___wmul@multiplicand+1
  6663  03FF  3184  241C  3183   	fcall	___wmul
  6664  0402  0020               	movlb	0	; select bank0
  6665  0403  0850               	movf	?___wmul+1,w
  6666  0404  00D8               	movwf	___lwdiv@dividend+1
  6667  0405  084F               	movf	?___wmul,w
  6668  0406  00D7               	movwf	___lwdiv@dividend
  6669  0407  3183  2318  3183   	fcall	___lwdiv
  6670  040A  0020               	movlb	0	; select bank0
  6671  040B  085F               	movf	JSN_Sensor_GetDistance@Sensor,w
  6672  040C  3E02               	addlw	2
  6673  040D  0086               	movwf	6
  6674  040E  0187               	clrf	7
  6675  040F  0855               	movf	?___lwdiv,w
  6676  0410  3FC0               	movwi [0]fsr1
  6677  0411  0856               	movf	?___lwdiv+1,w
  6678  0412  3FC1               	movwi [1]fsr1
  6679  0413                     l3271:
  6680                           
  6681                           ;JSN_Sensor.c: 114:     return Sensor->distance;
  6682  0413  085F               	movf	JSN_Sensor_GetDistance@Sensor,w
  6683  0414  3E02               	addlw	2
  6684  0415  0086               	movwf	6
  6685  0416  0187               	clrf	7
  6686  0417  3F40               	moviw [0]fsr1
  6687  0418  00DD               	movwf	?_JSN_Sensor_GetDistance
  6688  0419  3F41               	moviw [1]fsr1
  6689  041A  00DE               	movwf	?_JSN_Sensor_GetDistance+1
  6690  041B                     l66:
  6691  041B  0008               	return
  6692  041C                     __end_of_JSN_Sensor_GetDistance:
  6693                           
  6694                           	psect	text15
  6695  041C                     __ptext15:	
  6696 ;; *************** function ___wmul *****************
  6697 ;; Defined at:
  6698 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6701 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;  product         2    4[BANK0 ] unsigned int 
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  2    0[BANK0 ] unsigned int 
  6706 ;; Registers used:
  6707 ;;		wreg, status,2, status,0
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6713 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6714 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6716 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6717 ;;Total ram usage:        6 bytes
  6718 ;; Hardware stack levels used: 1
  6719 ;; Hardware stack levels required when called: 4
  6720 ;; This function calls:
  6721 ;;		Nothing
  6722 ;; This function is called by:
  6723 ;;		_JSN_Sensor_GetDistance
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727  041C                     ___wmul:	
  6728                           ;psect for function ___wmul
  6729                           
  6730  041C                     l3237:	
  6731                           ;incstack = 0
  6732                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6733                           
  6734  041C  0020               	movlb	0	; select bank0
  6735  041D  01D3               	clrf	___wmul@product
  6736  041E  01D4               	clrf	___wmul@product+1
  6737  041F                     l3239:
  6738  041F  1C4F               	btfss	___wmul@multiplier,0
  6739  0420  2C22               	goto	u821
  6740  0421  2C23               	goto	u820
  6741  0422                     u821:
  6742  0422  2C27               	goto	l943
  6743  0423                     u820:
  6744  0423                     l3241:
  6745  0423  0851               	movf	___wmul@multiplicand,w
  6746  0424  07D3               	addwf	___wmul@product,f
  6747  0425  0852               	movf	___wmul@multiplicand+1,w
  6748  0426  3DD4               	addwfc	___wmul@product+1,f
  6749  0427                     l943:
  6750  0427  3001               	movlw	1
  6751  0428                     u835:
  6752  0428  35D1               	lslf	___wmul@multiplicand,f
  6753  0429  0DD2               	rlf	___wmul@multiplicand+1,f
  6754  042A  0B89               	decfsz	9,f
  6755  042B  2C28               	goto	u835
  6756  042C                     l3243:
  6757  042C  3001               	movlw	1
  6758  042D                     u845:
  6759  042D  36D0               	lsrf	___wmul@multiplier+1,f
  6760  042E  0CCF               	rrf	___wmul@multiplier,f
  6761  042F  0B89               	decfsz	9,f
  6762  0430  2C2D               	goto	u845
  6763  0431                     l3245:
  6764  0431  084F               	movf	___wmul@multiplier,w
  6765  0432  0450               	iorwf	___wmul@multiplier+1,w
  6766  0433  1D03               	btfss	3,2
  6767  0434  2C36               	goto	u851
  6768  0435  2C37               	goto	u850
  6769  0436                     u851:
  6770  0436  2C1F               	goto	l3239
  6771  0437                     u850:
  6772  0437                     l3247:
  6773  0437  0854               	movf	___wmul@product+1,w
  6774  0438  00D0               	movwf	?___wmul+1
  6775  0439  0853               	movf	___wmul@product,w
  6776  043A  00CF               	movwf	?___wmul
  6777  043B                     l945:
  6778  043B  0008               	return
  6779  043C                     __end_of___wmul:
  6780                           
  6781                           	psect	text16
  6782  0318                     __ptext16:	
  6783 ;; *************** function ___lwdiv *****************
  6784 ;; Defined at:
  6785 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lwdiv.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;  divisor         2    6[BANK0 ] unsigned int 
  6788 ;;  dividend        2    8[BANK0 ] unsigned int 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;  quotient        2   11[BANK0 ] unsigned int 
  6791 ;;  counter         1   13[BANK0 ] unsigned char 
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  2    6[BANK0 ] unsigned int 
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6801 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6802 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6803 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6804 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6805 ;;Total ram usage:        8 bytes
  6806 ;; Hardware stack levels used: 1
  6807 ;; Hardware stack levels required when called: 4
  6808 ;; This function calls:
  6809 ;;		Nothing
  6810 ;; This function is called by:
  6811 ;;		_JSN_Sensor_GetDistance
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815  0318                     ___lwdiv:	
  6816                           ;psect for function ___lwdiv
  6817                           
  6818  0318                     l2655:	
  6819                           ;incstack = 0
  6820                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6821                           
  6822  0318  0020               	movlb	0	; select bank0
  6823  0319  01DA               	clrf	___lwdiv@quotient
  6824  031A  01DB               	clrf	___lwdiv@quotient+1
  6825  031B                     l2657:
  6826  031B  0855               	movf	___lwdiv@divisor,w
  6827  031C  0456               	iorwf	___lwdiv@divisor+1,w
  6828  031D  1903               	btfsc	3,2
  6829  031E  2B20               	goto	u481
  6830  031F  2B21               	goto	u480
  6831  0320                     u481:
  6832  0320  2B50               	goto	l2677
  6833  0321                     u480:
  6834  0321                     l2659:
  6835  0321  01DC               	clrf	___lwdiv@counter
  6836  0322  0ADC               	incf	___lwdiv@counter,f
  6837  0323  2B2D               	goto	l2665
  6838  0324                     l2661:
  6839  0324  3001               	movlw	1
  6840  0325                     u495:
  6841  0325  35D5               	lslf	___lwdiv@divisor,f
  6842  0326  0DD6               	rlf	___lwdiv@divisor+1,f
  6843  0327  0B89               	decfsz	9,f
  6844  0328  2B25               	goto	u495
  6845  0329                     l2663:
  6846  0329  3001               	movlw	1
  6847  032A  00D9               	movwf	??___lwdiv
  6848  032B  0859               	movf	??___lwdiv,w
  6849  032C  07DC               	addwf	___lwdiv@counter,f
  6850  032D                     l2665:
  6851  032D  1FD6               	btfss	___lwdiv@divisor+1,7
  6852  032E  2B30               	goto	u501
  6853  032F  2B31               	goto	u500
  6854  0330                     u501:
  6855  0330  2B24               	goto	l2661
  6856  0331                     u500:
  6857  0331                     l2667:
  6858  0331  3001               	movlw	1
  6859  0332                     u515:
  6860  0332  35DA               	lslf	___lwdiv@quotient,f
  6861  0333  0DDB               	rlf	___lwdiv@quotient+1,f
  6862  0334  0B89               	decfsz	9,f
  6863  0335  2B32               	goto	u515
  6864  0336  0856               	movf	___lwdiv@divisor+1,w
  6865  0337  0258               	subwf	___lwdiv@dividend+1,w
  6866  0338  1D03               	skipz
  6867  0339  2B3C               	goto	u525
  6868  033A  0855               	movf	___lwdiv@divisor,w
  6869  033B  0257               	subwf	___lwdiv@dividend,w
  6870  033C                     u525:
  6871  033C  1C03               	skipc
  6872  033D  2B3F               	goto	u521
  6873  033E  2B40               	goto	u520
  6874  033F                     u521:
  6875  033F  2B45               	goto	l2673
  6876  0340                     u520:
  6877  0340                     l2669:
  6878  0340  0855               	movf	___lwdiv@divisor,w
  6879  0341  02D7               	subwf	___lwdiv@dividend,f
  6880  0342  0856               	movf	___lwdiv@divisor+1,w
  6881  0343  3BD8               	subwfb	___lwdiv@dividend+1,f
  6882  0344                     l2671:
  6883  0344  145A               	bsf	___lwdiv@quotient,0
  6884  0345                     l2673:
  6885  0345  3001               	movlw	1
  6886  0346                     u535:
  6887  0346  36D6               	lsrf	___lwdiv@divisor+1,f
  6888  0347  0CD5               	rrf	___lwdiv@divisor,f
  6889  0348  0B89               	decfsz	9,f
  6890  0349  2B46               	goto	u535
  6891  034A                     l2675:
  6892  034A  3001               	movlw	1
  6893  034B  02DC               	subwf	___lwdiv@counter,f
  6894  034C  1D03               	btfss	3,2
  6895  034D  2B4F               	goto	u541
  6896  034E  2B50               	goto	u540
  6897  034F                     u541:
  6898  034F  2B31               	goto	l2667
  6899  0350                     u540:
  6900  0350                     l2677:
  6901  0350  085B               	movf	___lwdiv@quotient+1,w
  6902  0351  00D6               	movwf	?___lwdiv+1
  6903  0352  085A               	movf	___lwdiv@quotient,w
  6904  0353  00D5               	movwf	?___lwdiv
  6905  0354                     l1223:
  6906  0354  0008               	return
  6907  0355                     __end_of___lwdiv:
  6908                           
  6909                           	psect	text17
  6910  0539                     __ptext17:	
  6911 ;; *************** function _JSN_Library_Init *****************
  6912 ;; Defined at:
  6913 ;;		line 32 in file "JSN_Sensor.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;		None
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;		None
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1    wreg      void 
  6920 ;; Registers used:
  6921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6929 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6930 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6931 ;;Total ram usage:        2 bytes
  6932 ;; Hardware stack levels used: 1
  6933 ;; Hardware stack levels required when called: 6
  6934 ;; This function calls:
  6935 ;;		_CCP1_Initialize
  6936 ;;		_JSN_Sensor_Init
  6937 ;;		_TMR1_Initialize
  6938 ;; This function is called by:
  6939 ;;		_main
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943  0539                     _JSN_Library_Init:	
  6944                           ;psect for function _JSN_Library_Init
  6945                           
  6946  0539                     l3251:	
  6947                           ;incstack = 0
  6948                           ; Regs used in _JSN_Library_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6949                           
  6950                           
  6951                           ;JSN_Sensor.c: 34:     TMR1_Initialize();
  6952  0539  3184  24A0  3185   	fcall	_TMR1_Initialize
  6953                           
  6954                           ;JSN_Sensor.c: 35:     CCP1_Initialize();
  6955  053C  3184  2488  3185   	fcall	_CCP1_Initialize
  6956  053F                     l3253:
  6957                           
  6958                           ;JSN_Sensor.c: 36:     JSN_Sensor_Init(&Sens1, C4, C5);
  6959  053F  3004               	movlw	4
  6960  0540  0020               	movlb	0	; select bank0
  6961  0541  00D8               	movwf	??_JSN_Library_Init
  6962  0542  0858               	movf	??_JSN_Library_Init,w
  6963  0543  00D3               	movwf	JSN_Sensor_Init@trigPin
  6964  0544  3003               	movlw	3
  6965  0545  00D9               	movwf	??_JSN_Library_Init+1
  6966  0546  0859               	movf	??_JSN_Library_Init+1,w
  6967  0547  00D4               	movwf	JSN_Sensor_Init@echoPin
  6968  0548  3049               	movlw	(low (_Sens1| 0))& (0+255)
  6969  0549  3181  21E5  3185   	fcall	_JSN_Sensor_Init
  6970  054C                     l31:
  6971  054C  0008               	return
  6972  054D                     __end_of_JSN_Library_Init:
  6973                           
  6974                           	psect	text18
  6975  04A0                     __ptext18:	
  6976 ;; *************** function _TMR1_Initialize *****************
  6977 ;; Defined at:
  6978 ;;		line 7 in file "tmr1.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;		None
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;		None
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  1    wreg      void 
  6985 ;; Registers used:
  6986 ;;		wreg, status,2, status,0, pclath, cstack
  6987 ;; Tracked objects:
  6988 ;;		On entry : 0/0
  6989 ;;		On exit  : 0/0
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6996 ;;Total ram usage:        0 bytes
  6997 ;; Hardware stack levels used: 1
  6998 ;; Hardware stack levels required when called: 5
  6999 ;; This function calls:
  7000 ;;		_TMR1_SetInterruptHandler
  7001 ;; This function is called by:
  7002 ;;		_JSN_Library_Init
  7003 ;;		_SYSTEM_Initialize
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007  04A0                     _TMR1_Initialize:	
  7008                           ;psect for function _TMR1_Initialize
  7009                           
  7010  04A0                     l3109:	
  7011                           ;incstack = 0
  7012                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7013                           
  7014                           
  7015                           ;tmr1.c: 12:     T1GCON = 0x00;
  7016  04A0  0020               	movlb	0	; select bank0
  7017  04A1  019C               	clrf	28	;volatile
  7018                           
  7019                           ;tmr1.c: 15:     TMR1H = 0x00;
  7020  04A2  019A               	clrf	26	;volatile
  7021                           
  7022                           ;tmr1.c: 18:     TMR1L = 0x00;
  7023  04A3  0199               	clrf	25	;volatile
  7024  04A4                     l3111:
  7025                           
  7026                           ;tmr1.c: 21:     PIR1bits.TMR1IF = 0;
  7027  04A4  1011               	bcf	17,0	;volatile
  7028  04A5                     l3113:
  7029                           
  7030                           ;tmr1.c: 24:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7031  04A5  081A               	movf	26,w	;volatile
  7032  04A6  00B9               	movwf	_timer1ReloadVal+1	;volatile
  7033  04A7  0819               	movf	25,w	;volatile
  7034  04A8  00B8               	movwf	_timer1ReloadVal	;volatile
  7035  04A9                     l3115:
  7036                           
  7037                           ;tmr1.c: 27:     PIE1bits.TMR1IE = 1;
  7038  04A9  0021               	movlb	1	; select bank1
  7039  04AA  1411               	bsf	17,0	;volatile
  7040  04AB                     l3117:
  7041                           
  7042                           ;tmr1.c: 30:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  7043  04AB  30EB               	movlw	low _TMR1_DefaultInterruptHandler
  7044  04AC  0020               	movlb	0	; select bank0
  7045  04AD  00CF               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  7046  04AE  3005               	movlw	high _TMR1_DefaultInterruptHandler
  7047  04AF  00D0               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  7048  04B0  3185  25CE  3184   	fcall	_TMR1_SetInterruptHandler
  7049  04B3                     l3119:
  7050                           
  7051                           ;tmr1.c: 33:     T1CON = 0x21;
  7052  04B3  3021               	movlw	33
  7053  04B4  0020               	movlb	0	; select bank0
  7054  04B5  009B               	movwf	27	;volatile
  7055  04B6                     l510:
  7056  04B6  0008               	return
  7057  04B7                     __end_of_TMR1_Initialize:
  7058                           
  7059                           	psect	text19
  7060  05CE                     __ptext19:	
  7061 ;; *************** function _TMR1_SetInterruptHandler *****************
  7062 ;; Defined at:
  7063 ;;		line 121 in file "tmr1.c"
  7064 ;; Parameters:    Size  Location     Type
  7065 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  7066 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;		None
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  1    wreg      void 
  7071 ;; Registers used:
  7072 ;;		wreg
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7078 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7081 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7082 ;;Total ram usage:        2 bytes
  7083 ;; Hardware stack levels used: 1
  7084 ;; Hardware stack levels required when called: 4
  7085 ;; This function calls:
  7086 ;;		Nothing
  7087 ;; This function is called by:
  7088 ;;		_TMR1_Initialize
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092  05CE                     _TMR1_SetInterruptHandler:	
  7093                           ;psect for function _TMR1_SetInterruptHandler
  7094                           
  7095  05CE                     l3107:	
  7096                           ;incstack = 0
  7097                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  7098                           
  7099                           
  7100                           ;tmr1.c: 122:     TMR1_InterruptHandler = InterruptHandler;
  7101  05CE  0020               	movlb	0	; select bank0
  7102  05CF  0850               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  7103  05D0  00B7               	movwf	_TMR1_InterruptHandler+1
  7104  05D1  084F               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  7105  05D2  00B6               	movwf	_TMR1_InterruptHandler
  7106  05D3                     l543:
  7107  05D3  0008               	return
  7108  05D4                     __end_of_TMR1_SetInterruptHandler:
  7109                           
  7110                           	psect	text20
  7111  01E5                     __ptext20:	
  7112 ;; *************** function _JSN_Sensor_Init *****************
  7113 ;; Defined at:
  7114 ;;		line 42 in file "JSN_Sensor.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;  Sensor          1    wreg     PTR struct .
  7117 ;;		 -> Sens1(6), 
  7118 ;;  trigPin         1    4[BANK0 ] enum E7110
  7119 ;;  echoPin         1    5[BANK0 ] enum E7110
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  Sensor          1    8[BANK0 ] PTR struct .
  7122 ;;		 -> Sens1(6), 
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  1    wreg      unsigned char 
  7125 ;; Registers used:
  7126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/0
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7132 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7133 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7134 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7135 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7136 ;;Total ram usage:        5 bytes
  7137 ;; Hardware stack levels used: 1
  7138 ;; Hardware stack levels required when called: 5
  7139 ;; This function calls:
  7140 ;;		_SetPin
  7141 ;;		_WritePin
  7142 ;; This function is called by:
  7143 ;;		_JSN_Library_Init
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147  01E5                     _JSN_Sensor_Init:	
  7148                           ;psect for function _JSN_Sensor_Init
  7149                           
  7150                           
  7151                           ;incstack = 0
  7152                           ; Regs used in _JSN_Sensor_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7153                           ;JSN_Sensor_Init@Sensor stored from wreg
  7154  01E5  0020               	movlb	0	; select bank0
  7155  01E6  00D7               	movwf	JSN_Sensor_Init@Sensor
  7156  01E7                     l2561:
  7157                           
  7158                           ;JSN_Sensor.c: 45:     switch(echoPin) {
  7159  01E7  29EF               	goto	l2567
  7160  01E8                     l37:	
  7161                           ;JSN_Sensor.c: 48:         case C3:
  7162                           
  7163  01E8                     l2563:
  7164                           
  7165                           ;JSN_Sensor.c: 50:             SetPin(echoPin, 1);
  7166  01E8  01CF               	clrf	SetPin@io
  7167  01E9  0ACF               	incf	SetPin@io,f
  7168  01EA  0854               	movf	JSN_Sensor_Init@echoPin,w
  7169  01EB  3181  212A  3181   	fcall	_SetPin
  7170                           
  7171                           ;JSN_Sensor.c: 51:             break;
  7172  01EE  2A11               	goto	l2573
  7173  01EF                     l2567:
  7174  01EF  0854               	movf	JSN_Sensor_Init@echoPin,w
  7175  01F0  00D5               	movwf	??_JSN_Sensor_Init
  7176  01F1  01D6               	clrf	??_JSN_Sensor_Init+1
  7177                           
  7178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7179                           ; Switch size 1, requested type "simple"
  7180                           ; Number of cases is 1, Range of values is 0 to 0
  7181                           ; switch strategies available:
  7182                           ; Name         Instructions Cycles
  7183                           ; simple_byte            4     3 (average)
  7184                           ; direct_byte            8     6 (fixed)
  7185                           ; jumptable            260     6 (fixed)
  7186                           ;	Chosen strategy is simple_byte
  7187  01F2  0856               	movf	??_JSN_Sensor_Init+1,w
  7188  01F3  3A00               	xorlw	0	; case 0
  7189  01F4  1903               	skipnz
  7190  01F5  29F7               	goto	l3479
  7191  01F6  2A65               	goto	l41
  7192  01F7                     l3479:
  7193                           
  7194                           ; Switch size 1, requested type "simple"
  7195                           ; Number of cases is 4, Range of values is 1 to 11
  7196                           ; switch strategies available:
  7197                           ; Name         Instructions Cycles
  7198                           ; simple_byte           13     7 (average)
  7199                           ; direct_byte           31     9 (fixed)
  7200                           ; jumptable            263     9 (fixed)
  7201                           ;	Chosen strategy is simple_byte
  7202  01F7  0855               	movf	??_JSN_Sensor_Init,w
  7203  01F8  3A01               	xorlw	1	; case 1
  7204  01F9  1903               	skipnz
  7205  01FA  29E8               	goto	l2563
  7206  01FB  3A02               	xorlw	2	; case 3
  7207  01FC  1903               	skipnz
  7208  01FD  29E8               	goto	l2563
  7209  01FE  3A06               	xorlw	6	; case 5
  7210  01FF  1903               	skipnz
  7211  0200  29E8               	goto	l2563
  7212  0201  3A0E               	xorlw	14	; case 11
  7213  0202  1903               	skipnz
  7214  0203  29E8               	goto	l37
  7215  0204  2A65               	goto	l41
  7216  0205                     l46:	
  7217                           ;JSN_Sensor.c: 61:         case C7:
  7218                           
  7219  0205                     l2569:
  7220                           
  7221                           ;JSN_Sensor.c: 71:             SetPin(trigPin, 0);
  7222  0205  01CF               	clrf	SetPin@io
  7223  0206  0853               	movf	JSN_Sensor_Init@trigPin,w
  7224  0207  3181  212A  3181   	fcall	_SetPin
  7225                           
  7226                           ;JSN_Sensor.c: 72:             WritePin(trigPin, 0);
  7227  020A  0020               	movlb	0	; select bank0
  7228  020B  01CF               	clrf	WritePin@val
  7229  020C  0853               	movf	JSN_Sensor_Init@trigPin,w
  7230  020D  3180  206F  3181   	fcall	_WritePin
  7231                           
  7232                           ;JSN_Sensor.c: 73:             break;
  7233  0210  2A43               	goto	l2575
  7234  0211                     l2573:
  7235  0211  0020               	movlb	0	; select bank0
  7236  0212  0853               	movf	JSN_Sensor_Init@trigPin,w
  7237  0213  00D5               	movwf	??_JSN_Sensor_Init
  7238  0214  01D6               	clrf	??_JSN_Sensor_Init+1
  7239                           
  7240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7241                           ; Switch size 1, requested type "simple"
  7242                           ; Number of cases is 1, Range of values is 0 to 0
  7243                           ; switch strategies available:
  7244                           ; Name         Instructions Cycles
  7245                           ; simple_byte            4     3 (average)
  7246                           ; direct_byte            8     6 (fixed)
  7247                           ; jumptable            260     6 (fixed)
  7248                           ;	Chosen strategy is simple_byte
  7249  0215  0856               	movf	??_JSN_Sensor_Init+1,w
  7250  0216  3A00               	xorlw	0	; case 0
  7251  0217  1903               	skipnz
  7252  0218  2A1A               	goto	l3481
  7253  0219  2A65               	goto	l41
  7254  021A                     l3481:
  7255                           
  7256                           ; Switch size 1, requested type "simple"
  7257                           ; Number of cases is 13, Range of values is 0 to 17
  7258                           ; switch strategies available:
  7259                           ; Name         Instructions Cycles
  7260                           ; simple_byte           40    21 (average)
  7261                           ; direct_byte           42     6 (fixed)
  7262                           ; jumptable            260     6 (fixed)
  7263                           ;	Chosen strategy is simple_byte
  7264  021A  0855               	movf	??_JSN_Sensor_Init,w
  7265  021B  3A00               	xorlw	0	; case 0
  7266  021C  1903               	skipnz
  7267  021D  2A05               	goto	l46
  7268  021E  3A04               	xorlw	4	; case 4
  7269  021F  1903               	skipnz
  7270  0220  2A05               	goto	l46
  7271  0221  3A02               	xorlw	2	; case 6
  7272  0222  1903               	skipnz
  7273  0223  2A05               	goto	l46
  7274  0224  3A01               	xorlw	1	; case 7
  7275  0225  1903               	skipnz
  7276  0226  2A05               	goto	l2569
  7277  0227  3A0F               	xorlw	15	; case 8
  7278  0228  1903               	skipnz
  7279  0229  2A05               	goto	l2569
  7280  022A  3A01               	xorlw	1	; case 9
  7281  022B  1903               	skipnz
  7282  022C  2A05               	goto	l2569
  7283  022D  3A03               	xorlw	3	; case 10
  7284  022E  1903               	skipnz
  7285  022F  2A05               	goto	l2569
  7286  0230  3A06               	xorlw	6	; case 12
  7287  0231  1903               	skipnz
  7288  0232  2A05               	goto	l2569
  7289  0233  3A01               	xorlw	1	; case 13
  7290  0234  1903               	skipnz
  7291  0235  2A05               	goto	l2569
  7292  0236  3A03               	xorlw	3	; case 14
  7293  0237  1903               	skipnz
  7294  0238  2A05               	goto	l2569
  7295  0239  3A01               	xorlw	1	; case 15
  7296  023A  1903               	skipnz
  7297  023B  2A05               	goto	l2569
  7298  023C  3A1F               	xorlw	31	; case 16
  7299  023D  1903               	skipnz
  7300  023E  2A05               	goto	l2569
  7301  023F  3A01               	xorlw	1	; case 17
  7302  0240  1903               	skipnz
  7303  0241  2A05               	goto	l2569
  7304  0242  2A65               	goto	l41
  7305  0243                     l2575:
  7306                           
  7307                           ;JSN_Sensor.c: 79:     Sensor->distance = 0;
  7308  0243  0020               	movlb	0	; select bank0
  7309  0244  0857               	movf	JSN_Sensor_Init@Sensor,w
  7310  0245  3E02               	addlw	2
  7311  0246  0086               	movwf	6
  7312  0247  0187               	clrf	7
  7313  0248  3000               	movlw	0
  7314  0249  3FC0               	movwi [0]fsr1
  7315  024A  3FC1               	movwi [1]fsr1
  7316  024B                     l2577:
  7317                           
  7318                           ;JSN_Sensor.c: 80:     Sensor->echoHighTime = 0;
  7319  024B  0857               	movf	JSN_Sensor_Init@Sensor,w
  7320  024C  0086               	movwf	6
  7321  024D  0187               	clrf	7
  7322  024E  3000               	movlw	0
  7323  024F  3FC0               	movwi [0]fsr1
  7324  0250  3FC1               	movwi [1]fsr1
  7325  0251                     l2579:
  7326                           
  7327                           ;JSN_Sensor.c: 81:     Sensor->echoPin = echoPin;
  7328  0251  0854               	movf	JSN_Sensor_Init@echoPin,w
  7329  0252  00D5               	movwf	??_JSN_Sensor_Init
  7330  0253  0857               	movf	JSN_Sensor_Init@Sensor,w
  7331  0254  3E05               	addlw	5
  7332  0255  0086               	movwf	6
  7333  0256  0187               	clrf	7
  7334  0257  0855               	movf	??_JSN_Sensor_Init,w
  7335  0258  0081               	movwf	1
  7336  0259                     l2581:
  7337                           
  7338                           ;JSN_Sensor.c: 82:     Sensor->trigPin = trigPin;
  7339  0259  0853               	movf	JSN_Sensor_Init@trigPin,w
  7340  025A  00D5               	movwf	??_JSN_Sensor_Init
  7341  025B  0857               	movf	JSN_Sensor_Init@Sensor,w
  7342  025C  3E04               	addlw	4
  7343  025D  0086               	movwf	6
  7344  025E  0187               	clrf	7
  7345  025F  0855               	movf	??_JSN_Sensor_Init,w
  7346  0260  0081               	movwf	1
  7347  0261                     l2583:
  7348                           
  7349                           ;JSN_Sensor.c: 84:     lastTrig = Sensor;
  7350  0261  0857               	movf	JSN_Sensor_Init@Sensor,w
  7351  0262  00D5               	movwf	??_JSN_Sensor_Init
  7352  0263  0855               	movf	??_JSN_Sensor_Init,w
  7353  0264  00C8               	movwf	_lastTrig
  7354  0265                     l41:
  7355  0265  0008               	return
  7356  0266                     __end_of_JSN_Sensor_Init:
  7357                           
  7358                           	psect	text21
  7359  006F                     __ptext21:	
  7360 ;; *************** function _WritePin *****************
  7361 ;; Defined at:
  7362 ;;		line 174 in file "PIC16Xpress_DevBoard.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  pin             1    wreg     enum E7110
  7365 ;;  val             1    0[BANK0 ] unsigned char 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  pin             1    3[BANK0 ] enum E7110
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  1    wreg      unsigned char 
  7370 ;; Registers used:
  7371 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7377 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7378 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7379 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7380 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7381 ;;Total ram usage:        4 bytes
  7382 ;; Hardware stack levels used: 1
  7383 ;; Hardware stack levels required when called: 4
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		_JSN_Sensor_Init
  7388 ;;		_JSN_Sensor_Trig
  7389 ;;		_main
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393  006F                     _WritePin:	
  7394                           ;psect for function _WritePin
  7395                           
  7396                           
  7397                           ;incstack = 0
  7398                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
  7399                           ;WritePin@pin stored from wreg
  7400  006F  0020               	movlb	0	; select bank0
  7401  0070  00D2               	movwf	WritePin@pin
  7402  0071                     l2371:
  7403                           
  7404                           ;PIC16Xpress_DevBoard.c: 175:     switch(pin) {
  7405  0071  28E9               	goto	l2443
  7406  0072                     l2373:
  7407                           
  7408                           ;PIC16Xpress_DevBoard.c: 177:             LATAbits.LATA5 = val;
  7409  0072  0C4F               	rrf	WritePin@val,w
  7410  0073  0022               	movlb	2	; select bank2
  7411  0074  1C03               	skipc
  7412  0075  128C               	bcf	12,5	;volatile
  7413  0076  1803               	skipnc
  7414  0077  168C               	bsf	12,5	;volatile
  7415  0078  2929               	goto	l242
  7416  0079                     l2377:
  7417                           
  7418                           ;PIC16Xpress_DevBoard.c: 180:             LATAbits.LATA4 = val;
  7419  0079  0C4F               	rrf	WritePin@val,w
  7420  007A  0022               	movlb	2	; select bank2
  7421  007B  1C03               	skipc
  7422  007C  120C               	bcf	12,4	;volatile
  7423  007D  1803               	skipnc
  7424  007E  160C               	bsf	12,4	;volatile
  7425  007F  2929               	goto	l242
  7426  0080                     l2381:
  7427                           
  7428                           ;PIC16Xpress_DevBoard.c: 185:             LATCbits.LATC5 = val;
  7429  0080  0C4F               	rrf	WritePin@val,w
  7430  0081  0022               	movlb	2	; select bank2
  7431  0082  1C03               	skipc
  7432  0083  128E               	bcf	14,5	;volatile
  7433  0084  1803               	skipnc
  7434  0085  168E               	bsf	14,5	;volatile
  7435  0086  2929               	goto	l242
  7436  0087                     l2385:
  7437                           
  7438                           ;PIC16Xpress_DevBoard.c: 188:             LATCbits.LATC4 = val;
  7439  0087  0C4F               	rrf	WritePin@val,w
  7440  0088  0022               	movlb	2	; select bank2
  7441  0089  1C03               	skipc
  7442  008A  120E               	bcf	14,4	;volatile
  7443  008B  1803               	skipnc
  7444  008C  160E               	bsf	14,4	;volatile
  7445  008D  2929               	goto	l242
  7446  008E                     l2389:
  7447                           
  7448                           ;PIC16Xpress_DevBoard.c: 191:             LATCbits.LATC3 = val;
  7449  008E  0C4F               	rrf	WritePin@val,w
  7450  008F  0022               	movlb	2	; select bank2
  7451  0090  1C03               	skipc
  7452  0091  118E               	bcf	14,3	;volatile
  7453  0092  1803               	skipnc
  7454  0093  158E               	bsf	14,3	;volatile
  7455  0094  2929               	goto	l242
  7456  0095                     l2393:
  7457                           
  7458                           ;PIC16Xpress_DevBoard.c: 194:             LATCbits.LATC6 = val;
  7459  0095  0C4F               	rrf	WritePin@val,w
  7460  0096  0022               	movlb	2	; select bank2
  7461  0097  1C03               	skipc
  7462  0098  130E               	bcf	14,6	;volatile
  7463  0099  1803               	skipnc
  7464  009A  170E               	bsf	14,6	;volatile
  7465  009B  2929               	goto	l242
  7466  009C                     l2397:
  7467                           
  7468                           ;PIC16Xpress_DevBoard.c: 197:             LATCbits.LATC7 = val;
  7469  009C  0C4F               	rrf	WritePin@val,w
  7470  009D  0022               	movlb	2	; select bank2
  7471  009E  1C03               	skipc
  7472  009F  138E               	bcf	14,7	;volatile
  7473  00A0  1803               	skipnc
  7474  00A1  178E               	bsf	14,7	;volatile
  7475  00A2  2929               	goto	l242
  7476  00A3                     l2401:
  7477                           
  7478                           ;PIC16Xpress_DevBoard.c: 200:             LATBbits.LATB7 = val;
  7479  00A3  0C4F               	rrf	WritePin@val,w
  7480  00A4  0022               	movlb	2	; select bank2
  7481  00A5  1C03               	skipc
  7482  00A6  138D               	bcf	13,7	;volatile
  7483  00A7  1803               	skipnc
  7484  00A8  178D               	bsf	13,7	;volatile
  7485  00A9  2929               	goto	l242
  7486  00AA                     l2405:
  7487                           
  7488                           ;PIC16Xpress_DevBoard.c: 203:             LATAbits.LATA0 = val;
  7489  00AA  0C4F               	rrf	WritePin@val,w
  7490  00AB  0022               	movlb	2	; select bank2
  7491  00AC  1C03               	skipc
  7492  00AD  100C               	bcf	12,0	;volatile
  7493  00AE  1803               	skipnc
  7494  00AF  140C               	bsf	12,0	;volatile
  7495  00B0  2929               	goto	l242
  7496  00B1                     l2409:
  7497                           
  7498                           ;PIC16Xpress_DevBoard.c: 206:             LATAbits.LATA1 = val;
  7499  00B1  0C4F               	rrf	WritePin@val,w
  7500  00B2  0022               	movlb	2	; select bank2
  7501  00B3  1C03               	skipc
  7502  00B4  108C               	bcf	12,1	;volatile
  7503  00B5  1803               	skipnc
  7504  00B6  148C               	bsf	12,1	;volatile
  7505  00B7  2929               	goto	l242
  7506  00B8                     l2413:
  7507                           
  7508                           ;PIC16Xpress_DevBoard.c: 209:             LATAbits.LATA2 = val;
  7509  00B8  0C4F               	rrf	WritePin@val,w
  7510  00B9  0022               	movlb	2	; select bank2
  7511  00BA  1C03               	skipc
  7512  00BB  110C               	bcf	12,2	;volatile
  7513  00BC  1803               	skipnc
  7514  00BD  150C               	bsf	12,2	;volatile
  7515  00BE  2929               	goto	l242
  7516  00BF                     l2417:
  7517                           
  7518                           ;PIC16Xpress_DevBoard.c: 212:             LATCbits.LATC0 = val;
  7519  00BF  0C4F               	rrf	WritePin@val,w
  7520  00C0  0022               	movlb	2	; select bank2
  7521  00C1  1C03               	skipc
  7522  00C2  100E               	bcf	14,0	;volatile
  7523  00C3  1803               	skipnc
  7524  00C4  140E               	bsf	14,0	;volatile
  7525  00C5  2929               	goto	l242
  7526  00C6                     l2421:
  7527                           
  7528                           ;PIC16Xpress_DevBoard.c: 215:             LATCbits.LATC1 = val;
  7529  00C6  0C4F               	rrf	WritePin@val,w
  7530  00C7  0022               	movlb	2	; select bank2
  7531  00C8  1C03               	skipc
  7532  00C9  108E               	bcf	14,1	;volatile
  7533  00CA  1803               	skipnc
  7534  00CB  148E               	bsf	14,1	;volatile
  7535  00CC  2929               	goto	l242
  7536  00CD                     l2425:
  7537                           
  7538                           ;PIC16Xpress_DevBoard.c: 218:             LATCbits.LATC2 = val;
  7539  00CD  0C4F               	rrf	WritePin@val,w
  7540  00CE  0022               	movlb	2	; select bank2
  7541  00CF  1C03               	skipc
  7542  00D0  110E               	bcf	14,2	;volatile
  7543  00D1  1803               	skipnc
  7544  00D2  150E               	bsf	14,2	;volatile
  7545  00D3  2929               	goto	l242
  7546  00D4                     l2429:
  7547                           
  7548                           ;PIC16Xpress_DevBoard.c: 221:             LATBbits.LATB4 = val;
  7549  00D4  0C4F               	rrf	WritePin@val,w
  7550  00D5  0022               	movlb	2	; select bank2
  7551  00D6  1C03               	skipc
  7552  00D7  120D               	bcf	13,4	;volatile
  7553  00D8  1803               	skipnc
  7554  00D9  160D               	bsf	13,4	;volatile
  7555  00DA  2929               	goto	l242
  7556  00DB                     l2433:
  7557                           
  7558                           ;PIC16Xpress_DevBoard.c: 224:             LATBbits.LATB5 = val;
  7559  00DB  0C4F               	rrf	WritePin@val,w
  7560  00DC  0022               	movlb	2	; select bank2
  7561  00DD  1C03               	skipc
  7562  00DE  128D               	bcf	13,5	;volatile
  7563  00DF  1803               	skipnc
  7564  00E0  168D               	bsf	13,5	;volatile
  7565  00E1  2929               	goto	l242
  7566  00E2                     l2437:
  7567                           
  7568                           ;PIC16Xpress_DevBoard.c: 227:             LATBbits.LATB6 = val;
  7569  00E2  0C4F               	rrf	WritePin@val,w
  7570  00E3  0022               	movlb	2	; select bank2
  7571  00E4  1C03               	skipc
  7572  00E5  130D               	bcf	13,6	;volatile
  7573  00E6  1803               	skipnc
  7574  00E7  170D               	bsf	13,6	;volatile
  7575  00E8  2929               	goto	l242
  7576  00E9                     l2443:
  7577  00E9  0852               	movf	WritePin@pin,w
  7578  00EA  00D0               	movwf	??_WritePin
  7579  00EB  01D1               	clrf	??_WritePin+1
  7580                           
  7581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7582                           ; Switch size 1, requested type "simple"
  7583                           ; Number of cases is 1, Range of values is 0 to 0
  7584                           ; switch strategies available:
  7585                           ; Name         Instructions Cycles
  7586                           ; simple_byte            4     3 (average)
  7587                           ; direct_byte            8     6 (fixed)
  7588                           ; jumptable            260     6 (fixed)
  7589                           ;	Chosen strategy is simple_byte
  7590  00EC  0851               	movf	??_WritePin+1,w
  7591  00ED  3A00               	xorlw	0	; case 0
  7592  00EE  1903               	skipnz
  7593  00EF  28F1               	goto	l3483
  7594  00F0  2929               	goto	l242
  7595  00F1                     l3483:
  7596                           
  7597                           ; Switch size 1, requested type "simple"
  7598                           ; Number of cases is 18, Range of values is 0 to 17
  7599                           ; switch strategies available:
  7600                           ; Name         Instructions Cycles
  7601                           ; direct_byte           42     6 (fixed)
  7602                           ; simple_byte           55    28 (average)
  7603                           ; jumptable            260     6 (fixed)
  7604                           ;	Chosen strategy is simple_byte
  7605  00F1  0850               	movf	??_WritePin,w
  7606  00F2  3A00               	xorlw	0	; case 0
  7607  00F3  1903               	skipnz
  7608  00F4  2872               	goto	l2373
  7609  00F5  3A01               	xorlw	1	; case 1
  7610  00F6  1903               	skipnz
  7611  00F7  2879               	goto	l2377
  7612  00F8  3A03               	xorlw	3	; case 2
  7613  00F9  1903               	skipnz
  7614  00FA  2929               	goto	l242
  7615  00FB  3A01               	xorlw	1	; case 3
  7616  00FC  1903               	skipnz
  7617  00FD  2880               	goto	l2381
  7618  00FE  3A07               	xorlw	7	; case 4
  7619  00FF  1903               	skipnz
  7620  0100  2887               	goto	l2385
  7621  0101  3A01               	xorlw	1	; case 5
  7622  0102  1903               	skipnz
  7623  0103  288E               	goto	l2389
  7624  0104  3A03               	xorlw	3	; case 6
  7625  0105  1903               	skipnz
  7626  0106  2895               	goto	l2393
  7627  0107  3A01               	xorlw	1	; case 7
  7628  0108  1903               	skipnz
  7629  0109  289C               	goto	l2397
  7630  010A  3A0F               	xorlw	15	; case 8
  7631  010B  1903               	skipnz
  7632  010C  28A3               	goto	l2401
  7633  010D  3A01               	xorlw	1	; case 9
  7634  010E  1903               	skipnz
  7635  010F  28AA               	goto	l2405
  7636  0110  3A03               	xorlw	3	; case 10
  7637  0111  1903               	skipnz
  7638  0112  28B1               	goto	l2409
  7639  0113  3A01               	xorlw	1	; case 11
  7640  0114  1903               	skipnz
  7641  0115  28B8               	goto	l2413
  7642  0116  3A07               	xorlw	7	; case 12
  7643  0117  1903               	skipnz
  7644  0118  28BF               	goto	l2417
  7645  0119  3A01               	xorlw	1	; case 13
  7646  011A  1903               	skipnz
  7647  011B  28C6               	goto	l2421
  7648  011C  3A03               	xorlw	3	; case 14
  7649  011D  1903               	skipnz
  7650  011E  28CD               	goto	l2425
  7651  011F  3A01               	xorlw	1	; case 15
  7652  0120  1903               	skipnz
  7653  0121  28D4               	goto	l2429
  7654  0122  3A1F               	xorlw	31	; case 16
  7655  0123  1903               	skipnz
  7656  0124  28DB               	goto	l2433
  7657  0125  3A01               	xorlw	1	; case 17
  7658  0126  1903               	skipnz
  7659  0127  28E2               	goto	l2437
  7660  0128  2929               	goto	l242
  7661  0129                     l242:
  7662  0129  0008               	return
  7663  012A                     __end_of_WritePin:
  7664                           
  7665                           	psect	text22
  7666  012A                     __ptext22:	
  7667 ;; *************** function _SetPin *****************
  7668 ;; Defined at:
  7669 ;;		line 67 in file "PIC16Xpress_DevBoard.c"
  7670 ;; Parameters:    Size  Location     Type
  7671 ;;  pin             1    wreg     enum E7110
  7672 ;;  io              1    0[BANK0 ] unsigned char 
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;  pin             1    3[BANK0 ] enum E7110
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  1    wreg      unsigned char 
  7677 ;; Registers used:
  7678 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7679 ;; Tracked objects:
  7680 ;;		On entry : 0/0
  7681 ;;		On exit  : 0/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7684 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7687 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;Total ram usage:        4 bytes
  7689 ;; Hardware stack levels used: 1
  7690 ;; Hardware stack levels required when called: 4
  7691 ;; This function calls:
  7692 ;;		Nothing
  7693 ;; This function is called by:
  7694 ;;		_JSN_Sensor_Init
  7695 ;;		_main
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699  012A                     _SetPin:	
  7700                           ;psect for function _SetPin
  7701                           
  7702                           
  7703                           ;incstack = 0
  7704                           ; Regs used in _SetPin: [wreg-fsr0h+status,2+status,0]
  7705                           ;SetPin@pin stored from wreg
  7706  012A  0020               	movlb	0	; select bank0
  7707  012B  00D2               	movwf	SetPin@pin
  7708  012C                     l2291:
  7709                           
  7710                           ;PIC16Xpress_DevBoard.c: 68:     switch(pin) {
  7711  012C  29A4               	goto	l2363
  7712  012D                     l2293:
  7713                           
  7714                           ;PIC16Xpress_DevBoard.c: 70:             TRISAbits.TRISA5 = io;
  7715  012D  0C4F               	rrf	SetPin@io,w
  7716  012E  0021               	movlb	1	; select bank1
  7717  012F  1C03               	skipc
  7718  0130  128C               	bcf	12,5	;volatile
  7719  0131  1803               	skipnc
  7720  0132  168C               	bsf	12,5	;volatile
  7721  0133  29E4               	goto	l194
  7722  0134                     l2297:
  7723                           
  7724                           ;PIC16Xpress_DevBoard.c: 73:             TRISAbits.TRISA4 = io;
  7725  0134  0C4F               	rrf	SetPin@io,w
  7726  0135  0021               	movlb	1	; select bank1
  7727  0136  1C03               	skipc
  7728  0137  120C               	bcf	12,4	;volatile
  7729  0138  1803               	skipnc
  7730  0139  160C               	bsf	12,4	;volatile
  7731  013A  29E4               	goto	l194
  7732  013B                     l2301:
  7733                           
  7734                           ;PIC16Xpress_DevBoard.c: 78:             TRISCbits.TRISC5 = io;
  7735  013B  0C4F               	rrf	SetPin@io,w
  7736  013C  0021               	movlb	1	; select bank1
  7737  013D  1C03               	skipc
  7738  013E  128E               	bcf	14,5	;volatile
  7739  013F  1803               	skipnc
  7740  0140  168E               	bsf	14,5	;volatile
  7741  0141  29E4               	goto	l194
  7742  0142                     l2305:
  7743                           
  7744                           ;PIC16Xpress_DevBoard.c: 81:             TRISCbits.TRISC4 = io;
  7745  0142  0C4F               	rrf	SetPin@io,w
  7746  0143  0021               	movlb	1	; select bank1
  7747  0144  1C03               	skipc
  7748  0145  120E               	bcf	14,4	;volatile
  7749  0146  1803               	skipnc
  7750  0147  160E               	bsf	14,4	;volatile
  7751  0148  29E4               	goto	l194
  7752  0149                     l2309:
  7753                           
  7754                           ;PIC16Xpress_DevBoard.c: 84:             TRISCbits.TRISC3 = io;
  7755  0149  0C4F               	rrf	SetPin@io,w
  7756  014A  0021               	movlb	1	; select bank1
  7757  014B  1C03               	skipc
  7758  014C  118E               	bcf	14,3	;volatile
  7759  014D  1803               	skipnc
  7760  014E  158E               	bsf	14,3	;volatile
  7761  014F  29E4               	goto	l194
  7762  0150                     l2313:
  7763                           
  7764                           ;PIC16Xpress_DevBoard.c: 87:             TRISCbits.TRISC6 = io;
  7765  0150  0C4F               	rrf	SetPin@io,w
  7766  0151  0021               	movlb	1	; select bank1
  7767  0152  1C03               	skipc
  7768  0153  130E               	bcf	14,6	;volatile
  7769  0154  1803               	skipnc
  7770  0155  170E               	bsf	14,6	;volatile
  7771  0156  29E4               	goto	l194
  7772  0157                     l2317:
  7773                           
  7774                           ;PIC16Xpress_DevBoard.c: 90:             TRISCbits.TRISC7 = io;
  7775  0157  0C4F               	rrf	SetPin@io,w
  7776  0158  0021               	movlb	1	; select bank1
  7777  0159  1C03               	skipc
  7778  015A  138E               	bcf	14,7	;volatile
  7779  015B  1803               	skipnc
  7780  015C  178E               	bsf	14,7	;volatile
  7781  015D  29E4               	goto	l194
  7782  015E                     l2321:
  7783                           
  7784                           ;PIC16Xpress_DevBoard.c: 93:             TRISBbits.TRISB7 = io;
  7785  015E  0C4F               	rrf	SetPin@io,w
  7786  015F  0021               	movlb	1	; select bank1
  7787  0160  1C03               	skipc
  7788  0161  138D               	bcf	13,7	;volatile
  7789  0162  1803               	skipnc
  7790  0163  178D               	bsf	13,7	;volatile
  7791  0164  29E4               	goto	l194
  7792  0165                     l2325:
  7793                           
  7794                           ;PIC16Xpress_DevBoard.c: 96:             TRISAbits.TRISA0 = io;
  7795  0165  0C4F               	rrf	SetPin@io,w
  7796  0166  0021               	movlb	1	; select bank1
  7797  0167  1C03               	skipc
  7798  0168  100C               	bcf	12,0	;volatile
  7799  0169  1803               	skipnc
  7800  016A  140C               	bsf	12,0	;volatile
  7801  016B  29E4               	goto	l194
  7802  016C                     l2329:
  7803                           
  7804                           ;PIC16Xpress_DevBoard.c: 99:             TRISAbits.TRISA1 = io;
  7805  016C  0C4F               	rrf	SetPin@io,w
  7806  016D  0021               	movlb	1	; select bank1
  7807  016E  1C03               	skipc
  7808  016F  108C               	bcf	12,1	;volatile
  7809  0170  1803               	skipnc
  7810  0171  148C               	bsf	12,1	;volatile
  7811  0172  29E4               	goto	l194
  7812  0173                     l2333:
  7813                           
  7814                           ;PIC16Xpress_DevBoard.c: 102:             TRISAbits.TRISA2 = io;
  7815  0173  0C4F               	rrf	SetPin@io,w
  7816  0174  0021               	movlb	1	; select bank1
  7817  0175  1C03               	skipc
  7818  0176  110C               	bcf	12,2	;volatile
  7819  0177  1803               	skipnc
  7820  0178  150C               	bsf	12,2	;volatile
  7821  0179  29E4               	goto	l194
  7822  017A                     l2337:
  7823                           
  7824                           ;PIC16Xpress_DevBoard.c: 105:             TRISCbits.TRISC0 = io;
  7825  017A  0C4F               	rrf	SetPin@io,w
  7826  017B  0021               	movlb	1	; select bank1
  7827  017C  1C03               	skipc
  7828  017D  100E               	bcf	14,0	;volatile
  7829  017E  1803               	skipnc
  7830  017F  140E               	bsf	14,0	;volatile
  7831  0180  29E4               	goto	l194
  7832  0181                     l2341:
  7833                           
  7834                           ;PIC16Xpress_DevBoard.c: 108:             TRISCbits.TRISC1 = io;
  7835  0181  0C4F               	rrf	SetPin@io,w
  7836  0182  0021               	movlb	1	; select bank1
  7837  0183  1C03               	skipc
  7838  0184  108E               	bcf	14,1	;volatile
  7839  0185  1803               	skipnc
  7840  0186  148E               	bsf	14,1	;volatile
  7841  0187  29E4               	goto	l194
  7842  0188                     l2345:
  7843                           
  7844                           ;PIC16Xpress_DevBoard.c: 111:             TRISCbits.TRISC2 = io;
  7845  0188  0C4F               	rrf	SetPin@io,w
  7846  0189  0021               	movlb	1	; select bank1
  7847  018A  1C03               	skipc
  7848  018B  110E               	bcf	14,2	;volatile
  7849  018C  1803               	skipnc
  7850  018D  150E               	bsf	14,2	;volatile
  7851  018E  29E4               	goto	l194
  7852  018F                     l2349:
  7853                           
  7854                           ;PIC16Xpress_DevBoard.c: 114:             TRISBbits.TRISB4 = io;
  7855  018F  0C4F               	rrf	SetPin@io,w
  7856  0190  0021               	movlb	1	; select bank1
  7857  0191  1C03               	skipc
  7858  0192  120D               	bcf	13,4	;volatile
  7859  0193  1803               	skipnc
  7860  0194  160D               	bsf	13,4	;volatile
  7861  0195  29E4               	goto	l194
  7862  0196                     l2353:
  7863                           
  7864                           ;PIC16Xpress_DevBoard.c: 117:             TRISBbits.TRISB5 = io;
  7865  0196  0C4F               	rrf	SetPin@io,w
  7866  0197  0021               	movlb	1	; select bank1
  7867  0198  1C03               	skipc
  7868  0199  128D               	bcf	13,5	;volatile
  7869  019A  1803               	skipnc
  7870  019B  168D               	bsf	13,5	;volatile
  7871  019C  29E4               	goto	l194
  7872  019D                     l2357:
  7873                           
  7874                           ;PIC16Xpress_DevBoard.c: 120:             TRISBbits.TRISB6 = io;
  7875  019D  0C4F               	rrf	SetPin@io,w
  7876  019E  0021               	movlb	1	; select bank1
  7877  019F  1C03               	skipc
  7878  01A0  130D               	bcf	13,6	;volatile
  7879  01A1  1803               	skipnc
  7880  01A2  170D               	bsf	13,6	;volatile
  7881  01A3  29E4               	goto	l194
  7882  01A4                     l2363:
  7883  01A4  0852               	movf	SetPin@pin,w
  7884  01A5  00D0               	movwf	??_SetPin
  7885  01A6  01D1               	clrf	??_SetPin+1
  7886                           
  7887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7888                           ; Switch size 1, requested type "simple"
  7889                           ; Number of cases is 1, Range of values is 0 to 0
  7890                           ; switch strategies available:
  7891                           ; Name         Instructions Cycles
  7892                           ; simple_byte            4     3 (average)
  7893                           ; direct_byte            8     6 (fixed)
  7894                           ; jumptable            260     6 (fixed)
  7895                           ;	Chosen strategy is simple_byte
  7896  01A7  0851               	movf	??_SetPin+1,w
  7897  01A8  3A00               	xorlw	0	; case 0
  7898  01A9  1903               	skipnz
  7899  01AA  29AC               	goto	l3485
  7900  01AB  29E4               	goto	l194
  7901  01AC                     l3485:
  7902                           
  7903                           ; Switch size 1, requested type "simple"
  7904                           ; Number of cases is 18, Range of values is 0 to 17
  7905                           ; switch strategies available:
  7906                           ; Name         Instructions Cycles
  7907                           ; direct_byte           42     6 (fixed)
  7908                           ; simple_byte           55    28 (average)
  7909                           ; jumptable            260     6 (fixed)
  7910                           ;	Chosen strategy is simple_byte
  7911  01AC  0850               	movf	??_SetPin,w
  7912  01AD  3A00               	xorlw	0	; case 0
  7913  01AE  1903               	skipnz
  7914  01AF  292D               	goto	l2293
  7915  01B0  3A01               	xorlw	1	; case 1
  7916  01B1  1903               	skipnz
  7917  01B2  2934               	goto	l2297
  7918  01B3  3A03               	xorlw	3	; case 2
  7919  01B4  1903               	skipnz
  7920  01B5  29E4               	goto	l194
  7921  01B6  3A01               	xorlw	1	; case 3
  7922  01B7  1903               	skipnz
  7923  01B8  293B               	goto	l2301
  7924  01B9  3A07               	xorlw	7	; case 4
  7925  01BA  1903               	skipnz
  7926  01BB  2942               	goto	l2305
  7927  01BC  3A01               	xorlw	1	; case 5
  7928  01BD  1903               	skipnz
  7929  01BE  2949               	goto	l2309
  7930  01BF  3A03               	xorlw	3	; case 6
  7931  01C0  1903               	skipnz
  7932  01C1  2950               	goto	l2313
  7933  01C2  3A01               	xorlw	1	; case 7
  7934  01C3  1903               	skipnz
  7935  01C4  2957               	goto	l2317
  7936  01C5  3A0F               	xorlw	15	; case 8
  7937  01C6  1903               	skipnz
  7938  01C7  295E               	goto	l2321
  7939  01C8  3A01               	xorlw	1	; case 9
  7940  01C9  1903               	skipnz
  7941  01CA  2965               	goto	l2325
  7942  01CB  3A03               	xorlw	3	; case 10
  7943  01CC  1903               	skipnz
  7944  01CD  296C               	goto	l2329
  7945  01CE  3A01               	xorlw	1	; case 11
  7946  01CF  1903               	skipnz
  7947  01D0  2973               	goto	l2333
  7948  01D1  3A07               	xorlw	7	; case 12
  7949  01D2  1903               	skipnz
  7950  01D3  297A               	goto	l2337
  7951  01D4  3A01               	xorlw	1	; case 13
  7952  01D5  1903               	skipnz
  7953  01D6  2981               	goto	l2341
  7954  01D7  3A03               	xorlw	3	; case 14
  7955  01D8  1903               	skipnz
  7956  01D9  2988               	goto	l2345
  7957  01DA  3A01               	xorlw	1	; case 15
  7958  01DB  1903               	skipnz
  7959  01DC  298F               	goto	l2349
  7960  01DD  3A1F               	xorlw	31	; case 16
  7961  01DE  1903               	skipnz
  7962  01DF  2996               	goto	l2353
  7963  01E0  3A01               	xorlw	1	; case 17
  7964  01E1  1903               	skipnz
  7965  01E2  299D               	goto	l2357
  7966  01E3  29E4               	goto	l194
  7967  01E4                     l194:
  7968  01E4  0008               	return
  7969  01E5                     __end_of_SetPin:
  7970                           
  7971                           	psect	text23
  7972  0488                     __ptext23:	
  7973 ;; *************** function _CCP1_Initialize *****************
  7974 ;; Defined at:
  7975 ;;		line 39 in file "ccp1.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;		None
  7978 ;; Auto vars:     Size  Location     Type
  7979 ;;		None
  7980 ;; Return value:  Size  Location     Type
  7981 ;;                  1    wreg      void 
  7982 ;; Registers used:
  7983 ;;		wreg, status,2, status,0, pclath, cstack
  7984 ;; Tracked objects:
  7985 ;;		On entry : 0/0
  7986 ;;		On exit  : 0/0
  7987 ;;		Unchanged: 0/0
  7988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7993 ;;Total ram usage:        0 bytes
  7994 ;; Hardware stack levels used: 1
  7995 ;; Hardware stack levels required when called: 5
  7996 ;; This function calls:
  7997 ;;		_CCP1_SetCallBack
  7998 ;; This function is called by:
  7999 ;;		_JSN_Library_Init
  8000 ;;		_SYSTEM_Initialize
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004  0488                     _CCP1_Initialize:	
  8005                           ;psect for function _CCP1_Initialize
  8006                           
  8007  0488                     l3121:	
  8008                           ;incstack = 0
  8009                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8010                           
  8011                           
  8012                           ;ccp1.c: 44:  CCP1CON = 0x83;
  8013  0488  3083               	movlw	131
  8014  0489  0025               	movlb	5	; select bank5
  8015  048A  0093               	movwf	19	;volatile
  8016  048B                     l3123:
  8017                           
  8018                           ;ccp1.c: 47:  CCP1CAP = 0x00;
  8019  048B  0194               	clrf	20	;volatile
  8020  048C                     l3125:
  8021                           
  8022                           ;ccp1.c: 50:  CCPR1H = 0x00;
  8023  048C  0192               	clrf	18	;volatile
  8024  048D                     l3127:
  8025                           
  8026                           ;ccp1.c: 53:  CCPR1L = 0x00;
  8027  048D  0191               	clrf	17	;volatile
  8028  048E                     l3129:
  8029                           
  8030                           ;ccp1.c: 56:     CCP1_SetCallBack(CCP1_DefaultCallBack);
  8031  048E  30BE               	movlw	low _CCP1_DefaultCallBack
  8032  048F  0020               	movlb	0	; select bank0
  8033  0490  00CF               	movwf	CCP1_SetCallBack@customCallBack
  8034  0491  3003               	movlw	high _CCP1_DefaultCallBack
  8035  0492  00D0               	movwf	CCP1_SetCallBack@customCallBack+1
  8036  0493  3185  25D4  3184   	fcall	_CCP1_SetCallBack
  8037  0496                     l3131:
  8038                           
  8039                           ;ccp1.c: 59:  CCPTMRSbits.C1TSEL = 0x1;
  8040  0496  0025               	movlb	5	; select bank5
  8041  0497  081F               	movf	31,w	;volatile
  8042  0498  39FC               	andlw	-4
  8043  0499  3801               	iorlw	1
  8044  049A  009F               	movwf	31	;volatile
  8045  049B                     l3133:
  8046                           
  8047                           ;ccp1.c: 62:     PIR4bits.CCP1IF = 0;
  8048  049B  0020               	movlb	0	; select bank0
  8049  049C  1014               	bcf	20,0	;volatile
  8050  049D                     l3135:
  8051                           
  8052                           ;ccp1.c: 65:     PIE4bits.CCP1IE = 1;
  8053  049D  0021               	movlb	1	; select bank1
  8054  049E  1414               	bsf	20,0	;volatile
  8055  049F                     l415:
  8056  049F  0008               	return
  8057  04A0                     __end_of_CCP1_Initialize:
  8058                           
  8059                           	psect	text24
  8060  05D4                     __ptext24:	
  8061 ;; *************** function _CCP1_SetCallBack *****************
  8062 ;; Defined at:
  8063 ;;		line 87 in file "ccp1.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  8066 ;;		 -> CCP1_DefaultCallBack(1), 
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;		None
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  1    wreg      void 
  8071 ;; Registers used:
  8072 ;;		wreg
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8078 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8081 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8082 ;;Total ram usage:        2 bytes
  8083 ;; Hardware stack levels used: 1
  8084 ;; Hardware stack levels required when called: 4
  8085 ;; This function calls:
  8086 ;;		Nothing
  8087 ;; This function is called by:
  8088 ;;		_CCP1_Initialize
  8089 ;; This function uses a non-reentrant model
  8090 ;;
  8091                           
  8092  05D4                     _CCP1_SetCallBack:	
  8093                           ;psect for function _CCP1_SetCallBack
  8094                           
  8095  05D4                     l3101:	
  8096                           ;incstack = 0
  8097                           ; Regs used in _CCP1_SetCallBack: [wreg]
  8098                           
  8099                           
  8100                           ;ccp1.c: 88:     CCP1_CallBack = customCallBack;
  8101  05D4  0020               	movlb	0	; select bank0
  8102  05D5  0850               	movf	CCP1_SetCallBack@customCallBack+1,w
  8103  05D6  00C3               	movwf	_CCP1_CallBack+1
  8104  05D7  084F               	movf	CCP1_SetCallBack@customCallBack,w
  8105  05D8  00C2               	movwf	_CCP1_CallBack
  8106  05D9                     l421:
  8107  05D9  0008               	return
  8108  05DA                     __end_of_CCP1_SetCallBack:
  8109                           
  8110                           	psect	text25
  8111  05E4                     __ptext25:	
  8112 ;; *************** function _FR_Timer_Init *****************
  8113 ;; Defined at:
  8114 ;;		line 33 in file "FR_Timer.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;		None
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;		None
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  1    wreg      void 
  8121 ;; Registers used:
  8122 ;;		wreg, status,2, status,0, pclath, cstack
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;Total ram usage:        0 bytes
  8133 ;; Hardware stack levels used: 1
  8134 ;; Hardware stack levels required when called: 6
  8135 ;; This function calls:
  8136 ;;		_TMR0_Initialize
  8137 ;; This function is called by:
  8138 ;;		_main
  8139 ;; This function uses a non-reentrant model
  8140 ;;
  8141                           
  8142  05E4                     _FR_Timer_Init:	
  8143                           ;psect for function _FR_Timer_Init
  8144                           
  8145  05E4                     l3305:	
  8146                           ;incstack = 0
  8147                           ; Regs used in _FR_Timer_Init: [wreg+status,2+status,0+pclath+cstack]
  8148                           
  8149                           
  8150                           ;FR_Timer.c: 34:     TMR0_Initialize();
  8151  05E4  3185  2524  3185   	fcall	_TMR0_Initialize
  8152  05E7                     l90:
  8153  05E7  0008               	return
  8154  05E8                     __end_of_FR_Timer_Init:
  8155                           
  8156                           	psect	text26
  8157  0524                     __ptext26:	
  8158 ;; *************** function _TMR0_Initialize *****************
  8159 ;; Defined at:
  8160 ;;		line 18 in file "tmr0.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;		None
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;		None
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1    wreg      void 
  8167 ;; Registers used:
  8168 ;;		wreg, status,2, status,0, pclath, cstack
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8178 ;;Total ram usage:        0 bytes
  8179 ;; Hardware stack levels used: 1
  8180 ;; Hardware stack levels required when called: 5
  8181 ;; This function calls:
  8182 ;;		_TMR0_SetInterruptHandler
  8183 ;; This function is called by:
  8184 ;;		_FR_Timer_Init
  8185 ;;		_SYSTEM_Initialize
  8186 ;; This function uses a non-reentrant model
  8187 ;;
  8188                           
  8189  0524                     _TMR0_Initialize:	
  8190                           ;psect for function _TMR0_Initialize
  8191                           
  8192  0524                     l3137:	
  8193                           ;incstack = 0
  8194                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8195                           
  8196                           
  8197                           ;tmr0.c: 23:     T0CON1 = 0x42;
  8198  0524  3042               	movlw	66
  8199  0525  0020               	movlb	0	; select bank0
  8200  0526  0098               	movwf	24	;volatile
  8201                           
  8202                           ;tmr0.c: 26:     TMR0H = 0xF9;
  8203  0527  30F9               	movlw	249
  8204  0528  0096               	movwf	22	;volatile
  8205  0529                     l3139:
  8206                           
  8207                           ;tmr0.c: 29:     TMR0L = 0x00;
  8208  0529  0195               	clrf	21	;volatile
  8209  052A                     l3141:
  8210                           
  8211                           ;tmr0.c: 32:     PIR0bits.TMR0IF = 0;
  8212  052A  1290               	bcf	16,5	;volatile
  8213  052B                     l3143:
  8214                           
  8215                           ;tmr0.c: 35:     PIE0bits.TMR0IE = 1;
  8216  052B  0021               	movlb	1	; select bank1
  8217  052C  1690               	bsf	16,5	;volatile
  8218  052D                     l3145:
  8219                           
  8220                           ;tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  8221  052D  3000               	movlw	0
  8222  052E  0020               	movlb	0	; select bank0
  8223  052F  00CF               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8224  0530  3000               	movlw	0
  8225  0531  00D0               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8226  0532  3185  25DA  3185   	fcall	_TMR0_SetInterruptHandler
  8227  0535                     l3147:
  8228                           
  8229                           ;tmr0.c: 41:     T0CON0 = 0x80;
  8230  0535  3080               	movlw	128
  8231  0536  0020               	movlb	0	; select bank0
  8232  0537  0097               	movwf	23	;volatile
  8233  0538                     l349:
  8234  0538  0008               	return
  8235  0539                     __end_of_TMR0_Initialize:
  8236                           
  8237                           	psect	text27
  8238  05DA                     __ptext27:	
  8239 ;; *************** function _TMR0_SetInterruptHandler *****************
  8240 ;; Defined at:
  8241 ;;		line 119 in file "tmr0.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8244 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  8245 ;; Auto vars:     Size  Location     Type
  8246 ;;		None
  8247 ;; Return value:  Size  Location     Type
  8248 ;;                  1    wreg      void 
  8249 ;; Registers used:
  8250 ;;		wreg
  8251 ;; Tracked objects:
  8252 ;;		On entry : 0/0
  8253 ;;		On exit  : 0/0
  8254 ;;		Unchanged: 0/0
  8255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8256 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8259 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8260 ;;Total ram usage:        2 bytes
  8261 ;; Hardware stack levels used: 1
  8262 ;; Hardware stack levels required when called: 4
  8263 ;; This function calls:
  8264 ;;		Nothing
  8265 ;; This function is called by:
  8266 ;;		_TMR0_Initialize
  8267 ;; This function uses a non-reentrant model
  8268 ;;
  8269                           
  8270  05DA                     _TMR0_SetInterruptHandler:	
  8271                           ;psect for function _TMR0_SetInterruptHandler
  8272                           
  8273  05DA                     l3099:	
  8274                           ;incstack = 0
  8275                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  8276                           
  8277                           
  8278                           ;tmr0.c: 120:     TMR0_InterruptHandler = InterruptHandler;
  8279  05DA  0020               	movlb	0	; select bank0
  8280  05DB  0850               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  8281  05DC  00C7               	movwf	_TMR0_InterruptHandler+1
  8282  05DD  084F               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  8283  05DE  00C6               	movwf	_TMR0_InterruptHandler
  8284  05DF                     l376:
  8285  05DF  0008               	return
  8286  05E0                     __end_of_TMR0_SetInterruptHandler:
  8287                           
  8288                           	psect	text28
  8289  0590                     __ptext28:	
  8290 ;; *************** function _FR_Timer_GetMillis *****************
  8291 ;; Defined at:
  8292 ;;		line 40 in file "FR_Timer.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;		None
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;		None
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  4    0[BANK0 ] unsigned long 
  8299 ;; Registers used:
  8300 ;;		wreg
  8301 ;; Tracked objects:
  8302 ;;		On entry : 0/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8306 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8309 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8310 ;;Total ram usage:        4 bytes
  8311 ;; Hardware stack levels used: 1
  8312 ;; Hardware stack levels required when called: 4
  8313 ;; This function calls:
  8314 ;;		Nothing
  8315 ;; This function is called by:
  8316 ;;		_main
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320  0590                     _FR_Timer_GetMillis:	
  8321                           ;psect for function _FR_Timer_GetMillis
  8322                           
  8323  0590                     l3309:	
  8324                           ;incstack = 0
  8325                           ; Regs used in _FR_Timer_GetMillis: [wreg]
  8326                           
  8327                           
  8328                           ;FR_Timer.c: 41:     return millis;
  8329  0590  0020               	movlb	0	; select bank0
  8330  0591  0827               	movf	_millis+3,w
  8331  0592  00D2               	movwf	?_FR_Timer_GetMillis+3
  8332  0593  0826               	movf	_millis+2,w
  8333  0594  00D1               	movwf	?_FR_Timer_GetMillis+2
  8334  0595  0825               	movf	_millis+1,w
  8335  0596  00D0               	movwf	?_FR_Timer_GetMillis+1
  8336  0597  0824               	movf	_millis,w
  8337  0598  00CF               	movwf	?_FR_Timer_GetMillis
  8338  0599                     l93:
  8339  0599  0008               	return
  8340  059A                     __end_of_FR_Timer_GetMillis:
  8341                           
  8342                           	psect	intentry
  8343  0004                     __pintentry:	
  8344 ;; *************** function _INTERRUPT_InterruptManager *****************
  8345 ;; Defined at:
  8346 ;;		line 5 in file "interrupt_manager.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;		None
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;		None
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  1    wreg      void 
  8353 ;; Registers used:
  8354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8364 ;;Total ram usage:        0 bytes
  8365 ;; Hardware stack levels used: 1
  8366 ;; Hardware stack levels required when called: 3
  8367 ;; This function calls:
  8368 ;;		_CCP1_CaptureISR
  8369 ;;		_CCP2_CaptureISR
  8370 ;;		_CCP3_CaptureISR
  8371 ;;		_TMR0_ISR
  8372 ;;		_TMR1_ISR
  8373 ;; This function is called by:
  8374 ;;		Interrupt level 1
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378  0004                     _INTERRUPT_InterruptManager:
  8379                           
  8380                           ;incstack = 0
  8381  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8382                           
  8383                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8384  0005  3180               	pagesel	$
  8385  0006                     i1l2935:
  8386                           
  8387                           ;interrupt_manager.c: 8:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  8388  0006  0021               	movlb	1	; select bank1
  8389  0007  1E90               	btfss	16,5	;volatile
  8390  0008  280A               	goto	u70_21
  8391  0009  280B               	goto	u70_20
  8392  000A                     u70_21:
  8393  000A  2814               	goto	i1l725
  8394  000B                     u70_20:
  8395  000B                     i1l2937:
  8396  000B  0020               	movlb	0	; select bank0
  8397  000C  1E90               	btfss	16,5	;volatile
  8398  000D  280F               	goto	u71_21
  8399  000E  2810               	goto	u71_20
  8400  000F                     u71_21:
  8401  000F  2814               	goto	i1l725
  8402  0010                     u71_20:
  8403  0010                     i1l2939:
  8404                           
  8405                           ;interrupt_manager.c: 9:     {;interrupt_manager.c: 10:         TMR0_ISR();
  8406  0010  3184  24B7  3180   	fcall	_TMR0_ISR
  8407                           
  8408                           ;interrupt_manager.c: 11:     }
  8409  0013  2850               	goto	i1l737
  8410  0014                     i1l725:	
  8411                           ;interrupt_manager.c: 12:     else if(INTCONbits.PEIE == 1)
  8412                           
  8413  0014  1F0B               	btfss	11,6	;volatile
  8414  0015  2817               	goto	u72_21
  8415  0016  2818               	goto	u72_20
  8416  0017                     u72_21:
  8417  0017  2850               	goto	i1l737
  8418  0018                     u72_20:
  8419  0018                     i1l2941:
  8420                           
  8421                           ;interrupt_manager.c: 13:     {;interrupt_manager.c: 14:         if(PIE4bits.CCP1IE == 1
      +                           && PIR4bits.CCP1IF == 1)
  8422  0018  0021               	movlb	1	; select bank1
  8423  0019  1C14               	btfss	20,0	;volatile
  8424  001A  281C               	goto	u73_21
  8425  001B  281D               	goto	u73_20
  8426  001C                     u73_21:
  8427  001C  2826               	goto	i1l728
  8428  001D                     u73_20:
  8429  001D                     i1l2943:
  8430  001D  0020               	movlb	0	; select bank0
  8431  001E  1C14               	btfss	20,0	;volatile
  8432  001F  2821               	goto	u74_21
  8433  0020  2822               	goto	u74_20
  8434  0021                     u74_21:
  8435  0021  2826               	goto	i1l728
  8436  0022                     u74_20:
  8437  0022                     i1l2945:
  8438                           
  8439                           ;interrupt_manager.c: 15:         {;interrupt_manager.c: 16:             CCP1_CaptureISR
      +                          ();
  8440  0022  3184  24F9  3180   	fcall	_CCP1_CaptureISR
  8441                           
  8442                           ;interrupt_manager.c: 17:         }
  8443  0025  2850               	goto	i1l737
  8444  0026                     i1l728:	
  8445                           ;interrupt_manager.c: 18:         else if(PIE4bits.CCP2IE == 1 && PIR4bits.CCP2IF == 1)
  8446                           
  8447  0026  0021               	movlb	1	; select bank1
  8448  0027  1C94               	btfss	20,1	;volatile
  8449  0028  282A               	goto	u75_21
  8450  0029  282B               	goto	u75_20
  8451  002A                     u75_21:
  8452  002A  2834               	goto	i1l730
  8453  002B                     u75_20:
  8454  002B                     i1l2947:
  8455  002B  0020               	movlb	0	; select bank0
  8456  002C  1C94               	btfss	20,1	;volatile
  8457  002D  282F               	goto	u76_21
  8458  002E  2830               	goto	u76_20
  8459  002F                     u76_21:
  8460  002F  2834               	goto	i1l730
  8461  0030                     u76_20:
  8462  0030                     i1l2949:
  8463                           
  8464                           ;interrupt_manager.c: 19:         {;interrupt_manager.c: 20:             CCP2_CaptureISR
      +                          ();
  8465  0030  3184  24E3  3180   	fcall	_CCP2_CaptureISR
  8466                           
  8467                           ;interrupt_manager.c: 21:         }
  8468  0033  2850               	goto	i1l737
  8469  0034                     i1l730:	
  8470                           ;interrupt_manager.c: 22:         else if(PIE4bits.CCP3IE == 1 && PIR4bits.CCP3IF == 1)
  8471                           
  8472  0034  0021               	movlb	1	; select bank1
  8473  0035  1D14               	btfss	20,2	;volatile
  8474  0036  2838               	goto	u77_21
  8475  0037  2839               	goto	u77_20
  8476  0038                     u77_21:
  8477  0038  2842               	goto	i1l732
  8478  0039                     u77_20:
  8479  0039                     i1l2951:
  8480  0039  0020               	movlb	0	; select bank0
  8481  003A  1D14               	btfss	20,2	;volatile
  8482  003B  283D               	goto	u78_21
  8483  003C  283E               	goto	u78_20
  8484  003D                     u78_21:
  8485  003D  2842               	goto	i1l732
  8486  003E                     u78_20:
  8487  003E                     i1l2953:
  8488                           
  8489                           ;interrupt_manager.c: 23:         {;interrupt_manager.c: 24:             CCP3_CaptureISR
      +                          ();
  8490  003E  3184  24CD  3180   	fcall	_CCP3_CaptureISR
  8491                           
  8492                           ;interrupt_manager.c: 25:         }
  8493  0041  2850               	goto	i1l737
  8494  0042                     i1l732:	
  8495                           ;interrupt_manager.c: 26:         else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  8496                           
  8497  0042  0021               	movlb	1	; select bank1
  8498  0043  1C11               	btfss	17,0	;volatile
  8499  0044  2846               	goto	u79_21
  8500  0045  2847               	goto	u79_20
  8501  0046                     u79_21:
  8502  0046  2850               	goto	i1l731
  8503  0047                     u79_20:
  8504  0047                     i1l2955:
  8505  0047  0020               	movlb	0	; select bank0
  8506  0048  1C11               	btfss	17,0	;volatile
  8507  0049  284B               	goto	u80_21
  8508  004A  284C               	goto	u80_20
  8509  004B                     u80_21:
  8510  004B  2850               	goto	i1l731
  8511  004C                     u80_20:
  8512  004C                     i1l2957:
  8513                           
  8514                           ;interrupt_manager.c: 27:         {;interrupt_manager.c: 28:             TMR1_ISR();
  8515  004C  3185  255E  3180   	fcall	_TMR1_ISR
  8516                           
  8517                           ;interrupt_manager.c: 29:         }
  8518  004F  2850               	goto	i1l737
  8519  0050                     i1l731:
  8520  0050                     i1l737:
  8521  0050  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8522  0051  0009               	retfie
  8523  0052                     __end_of_INTERRUPT_InterruptManager:
  8524                           
  8525                           	psect	text30
  8526  055E                     __ptext30:	
  8527 ;; *************** function _TMR1_ISR *****************
  8528 ;; Defined at:
  8529 ;;		line 100 in file "tmr1.c"
  8530 ;; Parameters:    Size  Location     Type
  8531 ;;		None
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;		None
  8534 ;; Return value:  Size  Location     Type
  8535 ;;                  1    wreg      void 
  8536 ;; Registers used:
  8537 ;;		wreg, status,2, status,0, pclath, cstack
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;Total ram usage:        0 bytes
  8548 ;; Hardware stack levels used: 1
  8549 ;; Hardware stack levels required when called: 2
  8550 ;; This function calls:
  8551 ;;		_TMR1_CallBack
  8552 ;;		_TMR1_WriteTimer
  8553 ;; This function is called by:
  8554 ;;		_INTERRUPT_InterruptManager
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558  055E                     _TMR1_ISR:	
  8559                           ;psect for function _TMR1_ISR
  8560                           
  8561  055E                     i1l2769:	
  8562                           ;incstack = 0
  8563                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  8564                           
  8565                           
  8566                           ;tmr1.c: 104:     PIR1bits.TMR1IF = 0;
  8567  055E  0020               	movlb	0	; select bank0
  8568  055F  1011               	bcf	17,0	;volatile
  8569  0560                     i1l2771:
  8570                           
  8571                           ;tmr1.c: 105:     TMR1_WriteTimer(timer1ReloadVal);
  8572  0560  0839               	movf	_timer1ReloadVal+1,w	;volatile
  8573  0561  00F8               	movwf	TMR1_WriteTimer@timerVal+1
  8574  0562  0838               	movf	_timer1ReloadVal,w	;volatile
  8575  0563  00F7               	movwf	TMR1_WriteTimer@timerVal
  8576  0564  3185  254D  3185   	fcall	_TMR1_WriteTimer
  8577                           
  8578                           ;tmr1.c: 109:     TMR1_CallBack();
  8579  0567  3185  256B  3185   	fcall	_TMR1_CallBack
  8580  056A                     i1l536:
  8581  056A  0008               	return
  8582  056B                     __end_of_TMR1_ISR:
  8583                           
  8584                           	psect	text31
  8585  054D                     __ptext31:	
  8586 ;; *************** function _TMR1_WriteTimer *****************
  8587 ;; Defined at:
  8588 ;;		line 63 in file "tmr1.c"
  8589 ;; Parameters:    Size  Location     Type
  8590 ;;  timerVal        2    0[COMMON] unsigned short 
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;		None
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  1    wreg      void 
  8595 ;; Registers used:
  8596 ;;		wreg, status,2
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8606 ;;Total ram usage:        2 bytes
  8607 ;; Hardware stack levels used: 1
  8608 ;; This function calls:
  8609 ;;		Nothing
  8610 ;; This function is called by:
  8611 ;;		_TMR1_ISR
  8612 ;;		_TMR1_Reload
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616  054D                     _TMR1_WriteTimer:	
  8617                           ;psect for function _TMR1_WriteTimer
  8618                           
  8619  054D                     i1l2623:	
  8620                           ;incstack = 0
  8621                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  8622                           
  8623                           
  8624                           ;tmr1.c: 63: void TMR1_WriteTimer(uint16_t timerVal);tmr1.c: 64: {;tmr1.c: 65:     if (T
      +                          1CONbits.T1SYNC == 1)
  8625  054D  0020               	movlb	0	; select bank0
  8626  054E  1D1B               	btfss	27,2	;volatile
  8627  054F  2D51               	goto	u42_21
  8628  0550  2D52               	goto	u42_20
  8629  0551                     u42_21:
  8630  0551  2D59               	goto	i1l2633
  8631  0552                     u42_20:
  8632  0552                     i1l2625:
  8633                           
  8634                           ;tmr1.c: 66:     {;tmr1.c: 68:         T1CONbits.TMR1ON = 0;
  8635  0552  101B               	bcf	27,0	;volatile
  8636  0553                     i1l2627:
  8637                           
  8638                           ;tmr1.c: 71:         TMR1H = (uint8_t)(timerVal >> 8);
  8639  0553  0878               	movf	TMR1_WriteTimer@timerVal+1,w
  8640  0554  009A               	movwf	26	;volatile
  8641  0555                     i1l2629:
  8642                           
  8643                           ;tmr1.c: 72:         TMR1L = (uint8_t)timerVal;
  8644  0555  0877               	movf	TMR1_WriteTimer@timerVal,w
  8645  0556  0099               	movwf	25	;volatile
  8646  0557                     i1l2631:
  8647                           
  8648                           ;tmr1.c: 75:         T1CONbits.TMR1ON =1;
  8649  0557  141B               	bsf	27,0	;volatile
  8650                           
  8651                           ;tmr1.c: 76:     }
  8652  0558  2D5D               	goto	i1l524
  8653  0559                     i1l2633:
  8654                           
  8655                           ;tmr1.c: 78:     {;tmr1.c: 80:         TMR1H = (uint8_t)(timerVal >> 8);
  8656  0559  0878               	movf	TMR1_WriteTimer@timerVal+1,w
  8657  055A  009A               	movwf	26	;volatile
  8658  055B                     i1l2635:
  8659                           
  8660                           ;tmr1.c: 81:         TMR1L = (uint8_t)timerVal;
  8661  055B  0877               	movf	TMR1_WriteTimer@timerVal,w
  8662  055C  0099               	movwf	25	;volatile
  8663  055D                     i1l524:
  8664  055D  0008               	return
  8665  055E                     __end_of_TMR1_WriteTimer:
  8666                           
  8667                           	psect	text32
  8668  056B                     __ptext32:	
  8669 ;; *************** function _TMR1_CallBack *****************
  8670 ;; Defined at:
  8671 ;;		line 112 in file "tmr1.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;		None
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;		None
  8676 ;; Return value:  Size  Location     Type
  8677 ;;                  1    wreg      void 
  8678 ;; Registers used:
  8679 ;;		wreg, status,2, status,0, pclath, cstack
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8689 ;;Total ram usage:        0 bytes
  8690 ;; Hardware stack levels used: 1
  8691 ;; Hardware stack levels required when called: 1
  8692 ;; This function calls:
  8693 ;;		Absolute function
  8694 ;;		_TMR1_DefaultInterruptHandler
  8695 ;; This function is called by:
  8696 ;;		_TMR1_ISR
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700  056B                     _TMR1_CallBack:	
  8701                           ;psect for function _TMR1_CallBack
  8702                           
  8703  056B                     i1l2637:	
  8704                           ;incstack = 0
  8705                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  8706                           
  8707                           
  8708                           ;tmr1.c: 115:     if(TMR1_InterruptHandler)
  8709  056B  0020               	movlb	0	; select bank0
  8710  056C  0836               	movf	_TMR1_InterruptHandler,w
  8711  056D  0437               	iorwf	_TMR1_InterruptHandler+1,w
  8712  056E  1903               	btfsc	3,2
  8713  056F  2D71               	goto	u43_21
  8714  0570  2D72               	goto	u43_20
  8715  0571                     u43_21:
  8716  0571  2D77               	goto	i1l540
  8717  0572                     u43_20:
  8718  0572                     i1l2639:
  8719                           
  8720                           ;tmr1.c: 116:     {;tmr1.c: 117:         TMR1_InterruptHandler();
  8721  0572  0837               	movf	_TMR1_InterruptHandler+1,w
  8722  0573  008A               	movwf	10
  8723  0574  0836               	movf	_TMR1_InterruptHandler,w
  8724  0575  000A               	callw
  8725  0576  3185               	pagesel	$
  8726  0577                     i1l540:
  8727  0577  0008               	return
  8728  0578                     __end_of_TMR1_CallBack:
  8729                           
  8730                           	psect	text33
  8731  05EB                     __ptext33:	
  8732 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  8733 ;; Defined at:
  8734 ;;		line 125 in file "tmr1.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;		None
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;		None
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  1    wreg      void 
  8741 ;; Registers used:
  8742 ;;		None
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8752 ;;Total ram usage:        0 bytes
  8753 ;; Hardware stack levels used: 1
  8754 ;; This function calls:
  8755 ;;		Nothing
  8756 ;; This function is called by:
  8757 ;;		_TMR1_Initialize
  8758 ;;		_TMR1_CallBack
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762  05EB                     _TMR1_DefaultInterruptHandler:	
  8763                           ;psect for function _TMR1_DefaultInterruptHandler
  8764                           
  8765  05EB                     i1l546:	
  8766                           ;incstack = 0
  8767                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  8768                           
  8769  05EB  0008               	return
  8770  05EC                     __end_of_TMR1_DefaultInterruptHandler:
  8771                           
  8772                           	psect	text34
  8773  04B7                     __ptext34:	
  8774 ;; *************** function _TMR0_ISR *****************
  8775 ;; Defined at:
  8776 ;;		line 90 in file "tmr0.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;		None
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;		None
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1    wreg      void 
  8783 ;; Registers used:
  8784 ;;		wreg, status,2, status,0, pclath, cstack
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8794 ;;Total ram usage:        0 bytes
  8795 ;; Hardware stack levels used: 1
  8796 ;; Hardware stack levels required when called: 2
  8797 ;; This function calls:
  8798 ;;		_TMR0_CallBack
  8799 ;; This function is called by:
  8800 ;;		_INTERRUPT_InterruptManager
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804  04B7                     _TMR0_ISR:	
  8805                           ;psect for function _TMR0_ISR
  8806                           
  8807  04B7                     i1l2743:	
  8808                           ;incstack = 0
  8809                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  8810                           
  8811                           
  8812                           ;tmr0.c: 92:     static volatile uint16_t CountCallBack = 0;;tmr0.c: 95:     PIR0bits.TM
      +                          R0IF = 0;
  8813  04B7  0020               	movlb	0	; select bank0
  8814  04B8  1290               	bcf	16,5	;volatile
  8815  04B9                     i1l2745:
  8816                           
  8817                           ;tmr0.c: 97:     if (++CountCallBack >= 4)
  8818  04B9  3001               	movlw	1
  8819  04BA  07C4               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  8820  04BB  3000               	movlw	0
  8821  04BC  3DC5               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  8822  04BD  3000               	movlw	0
  8823  04BE  0245               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  8824  04BF  3004               	movlw	4
  8825  04C0  1903               	skipnz
  8826  04C1  0244               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  8827  04C2  1C03               	skipc
  8828  04C3  2CC5               	goto	u56_21
  8829  04C4  2CC6               	goto	u56_20
  8830  04C5                     u56_21:
  8831  04C5  2CCC               	goto	i1l370
  8832  04C6                     u56_20:
  8833  04C6                     i1l2747:
  8834                           
  8835                           ;tmr0.c: 98:     {;tmr0.c: 100:         TMR0_CallBack();
  8836  04C6  3185  25B5  3184   	fcall	_TMR0_CallBack
  8837  04C9                     i1l2749:
  8838                           
  8839                           ;tmr0.c: 103:         CountCallBack = 0;
  8840  04C9  0020               	movlb	0	; select bank0
  8841  04CA  01C4               	clrf	TMR0_ISR@CountCallBack	;volatile
  8842  04CB  01C5               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  8843  04CC                     i1l370:
  8844  04CC  0008               	return
  8845  04CD                     __end_of_TMR0_ISR:
  8846                           
  8847                           	psect	text35
  8848  05B5                     __ptext35:	
  8849 ;; *************** function _TMR0_CallBack *****************
  8850 ;; Defined at:
  8851 ;;		line 111 in file "tmr0.c"
  8852 ;; Parameters:    Size  Location     Type
  8853 ;;		None
  8854 ;; Auto vars:     Size  Location     Type
  8855 ;;		None
  8856 ;; Return value:  Size  Location     Type
  8857 ;;                  1    wreg      void 
  8858 ;; Registers used:
  8859 ;;		wreg, status,2, status,0, pclath, cstack
  8860 ;; Tracked objects:
  8861 ;;		On entry : 0/0
  8862 ;;		On exit  : 0/0
  8863 ;;		Unchanged: 0/0
  8864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8869 ;;Total ram usage:        0 bytes
  8870 ;; Hardware stack levels used: 1
  8871 ;; Hardware stack levels required when called: 1
  8872 ;; This function calls:
  8873 ;;		_FR_Timer_IncMicros
  8874 ;;		_FR_Timer_IncMillis
  8875 ;; This function is called by:
  8876 ;;		_TMR0_ISR
  8877 ;; This function uses a non-reentrant model
  8878 ;;
  8879                           
  8880  05B5                     _TMR0_CallBack:	
  8881                           ;psect for function _TMR0_CallBack
  8882                           
  8883  05B5                     i1l2605:	
  8884                           ;incstack = 0
  8885                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  8886                           
  8887                           
  8888                           ;tmr0.c: 113:     FR_Timer_IncMillis();
  8889  05B5  3185  259A  3185   	fcall	_FR_Timer_IncMillis
  8890                           
  8891                           ;tmr0.c: 114:     FR_Timer_IncMicros();
  8892  05B8  3185  25A4  3185   	fcall	_FR_Timer_IncMicros
  8893  05BB                     i1l373:
  8894  05BB  0008               	return
  8895  05BC                     __end_of_TMR0_CallBack:
  8896                           
  8897                           	psect	text36
  8898  059A                     __ptext36:	
  8899 ;; *************** function _FR_Timer_IncMillis *****************
  8900 ;; Defined at:
  8901 ;;		line 52 in file "FR_Timer.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;		None
  8904 ;; Auto vars:     Size  Location     Type
  8905 ;;		None
  8906 ;; Return value:  Size  Location     Type
  8907 ;;                  1    wreg      void 
  8908 ;; Registers used:
  8909 ;;		wreg
  8910 ;; Tracked objects:
  8911 ;;		On entry : 0/0
  8912 ;;		On exit  : 0/0
  8913 ;;		Unchanged: 0/0
  8914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8919 ;;Total ram usage:        0 bytes
  8920 ;; Hardware stack levels used: 1
  8921 ;; This function calls:
  8922 ;;		Nothing
  8923 ;; This function is called by:
  8924 ;;		_TMR0_CallBack
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928  059A                     _FR_Timer_IncMillis:	
  8929                           ;psect for function _FR_Timer_IncMillis
  8930                           
  8931  059A                     i1l2471:	
  8932                           ;incstack = 0
  8933                           ; Regs used in _FR_Timer_IncMillis: [wreg]
  8934                           
  8935                           
  8936                           ;FR_Timer.c: 53:     millis ++;
  8937  059A  3001               	movlw	1
  8938  059B  0020               	movlb	0	; select bank0
  8939  059C  07A4               	addwf	_millis,f
  8940  059D  3000               	movlw	0
  8941  059E  3DA5               	addwfc	_millis+1,f
  8942  059F  3000               	movlw	0
  8943  05A0  3DA6               	addwfc	_millis+2,f
  8944  05A1  3000               	movlw	0
  8945  05A2  3DA7               	addwfc	_millis+3,f
  8946  05A3                     i1l99:
  8947  05A3  0008               	return
  8948  05A4                     __end_of_FR_Timer_IncMillis:
  8949                           
  8950                           	psect	text37
  8951  05A4                     __ptext37:	
  8952 ;; *************** function _FR_Timer_IncMicros *****************
  8953 ;; Defined at:
  8954 ;;		line 59 in file "FR_Timer.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;		None
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;		None
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  1    wreg      void 
  8961 ;; Registers used:
  8962 ;;		wreg
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8972 ;;Total ram usage:        0 bytes
  8973 ;; Hardware stack levels used: 1
  8974 ;; This function calls:
  8975 ;;		Nothing
  8976 ;; This function is called by:
  8977 ;;		_TMR0_CallBack
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981  05A4                     _FR_Timer_IncMicros:	
  8982                           ;psect for function _FR_Timer_IncMicros
  8983                           
  8984  05A4                     i1l2475:	
  8985                           ;incstack = 0
  8986                           ; Regs used in _FR_Timer_IncMicros: [wreg]
  8987                           
  8988                           
  8989                           ;FR_Timer.c: 60:     micros += 1000;
  8990  05A4  30E8               	movlw	232
  8991  05A5  0020               	movlb	0	; select bank0
  8992  05A6  07A0               	addwf	_micros@FR_Timer$F158,f
  8993  05A7  3003               	movlw	3
  8994  05A8  3DA1               	addwfc	_micros@FR_Timer$F158+1,f
  8995  05A9  3000               	movlw	0
  8996  05AA  3DA2               	addwfc	_micros@FR_Timer$F158+2,f
  8997  05AB  3000               	movlw	0
  8998  05AC  3DA3               	addwfc	_micros@FR_Timer$F158+3,f
  8999  05AD                     i1l102:
  9000  05AD  0008               	return
  9001  05AE                     __end_of_FR_Timer_IncMicros:
  9002                           
  9003                           	psect	text38
  9004  04CD                     __ptext38:	
  9005 ;; *************** function _CCP3_CaptureISR *****************
  9006 ;; Defined at:
  9007 ;;		line 94 in file "ccp3.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;		None
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;  module          2    3[COMMON] struct CCPR3Reg_tag
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  1    wreg      void 
  9014 ;; Registers used:
  9015 ;;		wreg, status,2, status,0, pclath, cstack
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;Total ram usage:        3 bytes
  9026 ;; Hardware stack levels used: 1
  9027 ;; Hardware stack levels required when called: 1
  9028 ;; This function calls:
  9029 ;;		Absolute function
  9030 ;;		_CCP3_DefaultCallBack
  9031 ;; This function is called by:
  9032 ;;		_INTERRUPT_InterruptManager
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036  04CD                     _CCP3_CaptureISR:	
  9037                           ;psect for function _CCP3_CaptureISR
  9038                           
  9039  04CD                     i1l2763:	
  9040                           ;incstack = 0
  9041                           ; Regs used in _CCP3_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
  9042                           
  9043                           
  9044                           ;ccp3.c: 96:     CCP3_PERIOD_REG_T module;;ccp3.c: 99:     PIR4bits.CCP3IF = 0;
  9045  04CD  0020               	movlb	0	; select bank0
  9046  04CE  1114               	bcf	20,2	;volatile
  9047  04CF                     i1l2765:
  9048                           
  9049                           ;ccp3.c: 102:     module.ccpr3l = CCPR3L;
  9050  04CF  0026               	movlb	6	; select bank6
  9051  04D0  0811               	movf	17,w	;volatile
  9052  04D1  00F9               	movwf	??_CCP3_CaptureISR
  9053  04D2  0879               	movf	??_CCP3_CaptureISR,w
  9054  04D3  00FA               	movwf	CCP3_CaptureISR@module
  9055                           
  9056                           ;ccp3.c: 103:     module.ccpr3h = CCPR3H;
  9057  04D4  0812               	movf	18,w	;volatile
  9058  04D5  00F9               	movwf	??_CCP3_CaptureISR
  9059  04D6  0879               	movf	??_CCP3_CaptureISR,w
  9060  04D7  00FB               	movwf	CCP3_CaptureISR@module+1
  9061  04D8                     i1l2767:
  9062                           
  9063                           ;ccp3.c: 106:     CCP3_CallBack(module.ccpr3_16Bit);
  9064  04D8  087B               	movf	CCP3_CaptureISR@module+1,w
  9065  04D9  00F8               	movwf	CCP3_DefaultCallBack@capturedValue+1
  9066  04DA  087A               	movf	CCP3_CaptureISR@module,w
  9067  04DB  00F7               	movwf	CCP3_DefaultCallBack@capturedValue
  9068  04DC  0020               	movlb	0	; select bank0
  9069  04DD  083B               	movf	_CCP3_CallBack+1,w
  9070  04DE  008A               	movwf	10
  9071  04DF  083A               	movf	_CCP3_CallBack,w
  9072  04E0  000A               	callw
  9073  04E1  3184               	pagesel	$
  9074  04E2                     i1l478:
  9075  04E2  0008               	return
  9076  04E3                     __end_of_CCP3_CaptureISR:
  9077                           
  9078                           	psect	text39
  9079  05EC                     __ptext39:	
  9080 ;; *************** function _CCP3_DefaultCallBack *****************
  9081 ;; Defined at:
  9082 ;;		line 60 in file "ccp3.c"
  9083 ;; Parameters:    Size  Location     Type
  9084 ;;  capturedValu    2    0[COMMON] unsigned short 
  9085 ;; Auto vars:     Size  Location     Type
  9086 ;;		None
  9087 ;; Return value:  Size  Location     Type
  9088 ;;                  1    wreg      void 
  9089 ;; Registers used:
  9090 ;;		None
  9091 ;; Tracked objects:
  9092 ;;		On entry : 0/0
  9093 ;;		On exit  : 0/0
  9094 ;;		Unchanged: 0/0
  9095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9099 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9100 ;;Total ram usage:        2 bytes
  9101 ;; Hardware stack levels used: 1
  9102 ;; This function calls:
  9103 ;;		Nothing
  9104 ;; This function is called by:
  9105 ;;		_CCP3_Initialize
  9106 ;;		_CCP3_CaptureISR
  9107 ;; This function uses a non-reentrant model
  9108 ;;
  9109                           
  9110  05EC                     _CCP3_DefaultCallBack:	
  9111                           ;psect for function _CCP3_DefaultCallBack
  9112                           
  9113  05EC                     i1l472:	
  9114                           ;incstack = 0
  9115                           ; Regs used in _CCP3_DefaultCallBack: []
  9116                           
  9117  05EC  0008               	return
  9118  05ED                     __end_of_CCP3_DefaultCallBack:
  9119                           
  9120                           	psect	text40
  9121  04E3                     __ptext40:	
  9122 ;; *************** function _CCP2_CaptureISR *****************
  9123 ;; Defined at:
  9124 ;;		line 94 in file "ccp2.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;		None
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;  module          2    3[COMMON] struct CCPR2Reg_tag
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  1    wreg      void 
  9131 ;; Registers used:
  9132 ;;		wreg, status,2, status,0, pclath, cstack
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9139 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9140 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9141 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9142 ;;Total ram usage:        3 bytes
  9143 ;; Hardware stack levels used: 1
  9144 ;; Hardware stack levels required when called: 1
  9145 ;; This function calls:
  9146 ;;		Absolute function
  9147 ;;		_CCP2_DefaultCallBack
  9148 ;; This function is called by:
  9149 ;;		_INTERRUPT_InterruptManager
  9150 ;; This function uses a non-reentrant model
  9151 ;;
  9152                           
  9153  04E3                     _CCP2_CaptureISR:	
  9154                           ;psect for function _CCP2_CaptureISR
  9155                           
  9156  04E3                     i1l2757:	
  9157                           ;incstack = 0
  9158                           ; Regs used in _CCP2_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
  9159                           
  9160                           
  9161                           ;ccp2.c: 96:     CCP2_PERIOD_REG_T module;;ccp2.c: 99:     PIR4bits.CCP2IF = 0;
  9162  04E3  0020               	movlb	0	; select bank0
  9163  04E4  1094               	bcf	20,1	;volatile
  9164  04E5                     i1l2759:
  9165                           
  9166                           ;ccp2.c: 102:     module.ccpr2l = CCPR2L;
  9167  04E5  0025               	movlb	5	; select bank5
  9168  04E6  0815               	movf	21,w	;volatile
  9169  04E7  00F9               	movwf	??_CCP2_CaptureISR
  9170  04E8  0879               	movf	??_CCP2_CaptureISR,w
  9171  04E9  00FA               	movwf	CCP2_CaptureISR@module
  9172                           
  9173                           ;ccp2.c: 103:     module.ccpr2h = CCPR2H;
  9174  04EA  0816               	movf	22,w	;volatile
  9175  04EB  00F9               	movwf	??_CCP2_CaptureISR
  9176  04EC  0879               	movf	??_CCP2_CaptureISR,w
  9177  04ED  00FB               	movwf	CCP2_CaptureISR@module+1
  9178  04EE                     i1l2761:
  9179                           
  9180                           ;ccp2.c: 106:     CCP2_CallBack(module.ccpr2_16Bit);
  9181  04EE  087B               	movf	CCP2_CaptureISR@module+1,w
  9182  04EF  00F8               	movwf	CCP2_DefaultCallBack@capturedValue+1
  9183  04F0  087A               	movf	CCP2_CaptureISR@module,w
  9184  04F1  00F7               	movwf	CCP2_DefaultCallBack@capturedValue
  9185  04F2  0020               	movlb	0	; select bank0
  9186  04F3  083D               	movf	_CCP2_CallBack+1,w
  9187  04F4  008A               	movwf	10
  9188  04F5  083C               	movf	_CCP2_CallBack,w
  9189  04F6  000A               	callw
  9190  04F7  3184               	pagesel	$
  9191  04F8                     i1l448:
  9192  04F8  0008               	return
  9193  04F9                     __end_of_CCP2_CaptureISR:
  9194                           
  9195                           	psect	text41
  9196  05ED                     __ptext41:	
  9197 ;; *************** function _CCP2_DefaultCallBack *****************
  9198 ;; Defined at:
  9199 ;;		line 60 in file "ccp2.c"
  9200 ;; Parameters:    Size  Location     Type
  9201 ;;  capturedValu    2    0[COMMON] unsigned short 
  9202 ;; Auto vars:     Size  Location     Type
  9203 ;;		None
  9204 ;; Return value:  Size  Location     Type
  9205 ;;                  1    wreg      void 
  9206 ;; Registers used:
  9207 ;;		None
  9208 ;; Tracked objects:
  9209 ;;		On entry : 0/0
  9210 ;;		On exit  : 0/0
  9211 ;;		Unchanged: 0/0
  9212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9217 ;;Total ram usage:        2 bytes
  9218 ;; Hardware stack levels used: 1
  9219 ;; This function calls:
  9220 ;;		Nothing
  9221 ;; This function is called by:
  9222 ;;		_CCP2_Initialize
  9223 ;;		_CCP2_CaptureISR
  9224 ;; This function uses a non-reentrant model
  9225 ;;
  9226                           
  9227  05ED                     _CCP2_DefaultCallBack:	
  9228                           ;psect for function _CCP2_DefaultCallBack
  9229                           
  9230  05ED                     i1l442:	
  9231                           ;incstack = 0
  9232                           ; Regs used in _CCP2_DefaultCallBack: []
  9233                           
  9234  05ED  0008               	return
  9235  05EE                     __end_of_CCP2_DefaultCallBack:
  9236                           
  9237                           	psect	text42
  9238  04F9                     __ptext42:	
  9239 ;; *************** function _CCP1_CaptureISR *****************
  9240 ;; Defined at:
  9241 ;;		line 70 in file "ccp1.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;		None
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;  module          2    5[COMMON] struct CCPR1Reg_tag
  9246 ;; Return value:  Size  Location     Type
  9247 ;;                  1    wreg      void 
  9248 ;; Registers used:
  9249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9256 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9257 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9258 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9259 ;;Total ram usage:        3 bytes
  9260 ;; Hardware stack levels used: 1
  9261 ;; Hardware stack levels required when called: 2
  9262 ;; This function calls:
  9263 ;;		Absolute function
  9264 ;;		_CCP1_DefaultCallBack
  9265 ;; This function is called by:
  9266 ;;		_INTERRUPT_InterruptManager
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270  04F9                     _CCP1_CaptureISR:	
  9271                           ;psect for function _CCP1_CaptureISR
  9272                           
  9273  04F9                     i1l2751:	
  9274                           ;incstack = 0
  9275                           ; Regs used in _CCP1_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9276                           
  9277                           
  9278                           ;ccp1.c: 72:     CCP1_PERIOD_REG_T module;;ccp1.c: 75:     PIR4bits.CCP1IF = 0;
  9279  04F9  0020               	movlb	0	; select bank0
  9280  04FA  1014               	bcf	20,0	;volatile
  9281  04FB                     i1l2753:
  9282                           
  9283                           ;ccp1.c: 78:     module.ccpr1l = CCPR1L;
  9284  04FB  0025               	movlb	5	; select bank5
  9285  04FC  0811               	movf	17,w	;volatile
  9286  04FD  00FB               	movwf	??_CCP1_CaptureISR
  9287  04FE  087B               	movf	??_CCP1_CaptureISR,w
  9288  04FF  00FC               	movwf	CCP1_CaptureISR@module
  9289                           
  9290                           ;ccp1.c: 79:     module.ccpr1h = CCPR1H;
  9291  0500  0812               	movf	18,w	;volatile
  9292  0501  00FB               	movwf	??_CCP1_CaptureISR
  9293  0502  087B               	movf	??_CCP1_CaptureISR,w
  9294  0503  00FD               	movwf	CCP1_CaptureISR@module+1
  9295  0504                     i1l2755:
  9296                           
  9297                           ;ccp1.c: 82:     CCP1_CallBack(module.ccpr1_16Bit);
  9298  0504  087D               	movf	CCP1_CaptureISR@module+1,w
  9299  0505  00F8               	movwf	CCP1_DefaultCallBack@capturedValue+1
  9300  0506  087C               	movf	CCP1_CaptureISR@module,w
  9301  0507  00F7               	movwf	CCP1_DefaultCallBack@capturedValue
  9302  0508  0020               	movlb	0	; select bank0
  9303  0509  0843               	movf	_CCP1_CallBack+1,w
  9304  050A  008A               	movwf	10
  9305  050B  0842               	movf	_CCP1_CallBack,w
  9306  050C  000A               	callw
  9307  050D  3184               	pagesel	$
  9308  050E                     i1l418:
  9309  050E  0008               	return
  9310  050F                     __end_of_CCP1_CaptureISR:
  9311                           
  9312                           	psect	text43
  9313  03BE                     __ptext43:	
  9314 ;; *************** function _CCP1_DefaultCallBack *****************
  9315 ;; Defined at:
  9316 ;;		line 22 in file "ccp1.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;  capturedValu    2    0[COMMON] unsigned short 
  9319 ;; Auto vars:     Size  Location     Type
  9320 ;;		None
  9321 ;; Return value:  Size  Location     Type
  9322 ;;                  1    wreg      void 
  9323 ;; Registers used:
  9324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9325 ;; Tracked objects:
  9326 ;;		On entry : 0/0
  9327 ;;		On exit  : 0/0
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9332 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9333 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9334 ;;Total ram usage:        4 bytes
  9335 ;; Hardware stack levels used: 1
  9336 ;; Hardware stack levels required when called: 1
  9337 ;; This function calls:
  9338 ;;		_JSN_GetLastTrig
  9339 ;; This function is called by:
  9340 ;;		_CCP1_Initialize
  9341 ;;		_CCP1_CaptureISR
  9342 ;; This function uses a non-reentrant model
  9343 ;;
  9344                           
  9345  03BE                     _CCP1_DefaultCallBack:	
  9346                           ;psect for function _CCP1_DefaultCallBack
  9347                           
  9348  03BE                     i1l2607:	
  9349                           ;incstack = 0
  9350                           ; Regs used in _CCP1_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9351                           
  9352                           
  9353                           ;ccp1.c: 22: static void CCP1_DefaultCallBack(uint16_t capturedValue);ccp1.c: 23: {;ccp1
      +                          .c: 24:     switch(PORTCbits.RC5) {
  9354  03BE  2BDA               	goto	i1l2617
  9355  03BF                     i1l2609:
  9356                           
  9357                           ;ccp1.c: 27:             ticksUp = capturedValue;
  9358  03BF  0878               	movf	CCP1_DefaultCallBack@capturedValue+1,w
  9359  03C0  00C1               	movwf	_ticksUp+1
  9360  03C1  0877               	movf	CCP1_DefaultCallBack@capturedValue,w
  9361  03C2  00C0               	movwf	_ticksUp
  9362                           
  9363                           ;ccp1.c: 28:             break;
  9364  03C3  2BED               	goto	i1l412
  9365  03C4                     i1l2611:
  9366                           
  9367                           ;ccp1.c: 31:             ticksDown = capturedValue;
  9368  03C4  0878               	movf	CCP1_DefaultCallBack@capturedValue+1,w
  9369  03C5  00BF               	movwf	_ticksDown+1
  9370  03C6  0877               	movf	CCP1_DefaultCallBack@capturedValue,w
  9371  03C7  00BE               	movwf	_ticksDown
  9372  03C8                     i1l2613:
  9373                           
  9374                           ;ccp1.c: 32:             JSN_GetLastTrig()->echoHighTime = ((ticksDown - ticksUp) >> 1);
  9375  03C8  0840               	movf	_ticksUp,w
  9376  03C9  023E               	subwf	_ticksDown,w
  9377  03CA  00F9               	movwf	??_CCP1_DefaultCallBack
  9378  03CB  0841               	movf	_ticksUp+1,w
  9379  03CC  3B3F               	subwfb	_ticksDown+1,w
  9380  03CD  00FA               	movwf	??_CCP1_DefaultCallBack+1
  9381  03CE  36FA               	lsrf	??_CCP1_DefaultCallBack+1,f
  9382  03CF  0CF9               	rrf	??_CCP1_DefaultCallBack,f
  9383  03D0  3185  25E8  3183   	fcall	_JSN_GetLastTrig
  9384  03D3  0086               	movwf	6
  9385  03D4  0187               	clrf	7
  9386  03D5  0879               	movf	??_CCP1_DefaultCallBack,w
  9387  03D6  3FC0               	movwi [0]fsr1
  9388  03D7  087A               	movf	??_CCP1_DefaultCallBack+1,w
  9389  03D8  3FC1               	movwi [1]fsr1
  9390                           
  9391                           ;ccp1.c: 33:             break;
  9392  03D9  2BED               	goto	i1l412
  9393  03DA                     i1l2617:
  9394  03DA  0020               	movlb	0	; select bank0
  9395  03DB  0E0E               	swapf	14,w	;volatile
  9396  03DC  0C89               	rrf	9,f
  9397  03DD  3901               	andlw	1
  9398  03DE  00F9               	movwf	??_CCP1_DefaultCallBack
  9399  03DF  01FA               	clrf	??_CCP1_DefaultCallBack+1
  9400                           
  9401                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9402                           ; Switch size 1, requested type "simple"
  9403                           ; Number of cases is 1, Range of values is 0 to 0
  9404                           ; switch strategies available:
  9405                           ; Name         Instructions Cycles
  9406                           ; simple_byte            4     3 (average)
  9407                           ; direct_byte            8     6 (fixed)
  9408                           ; jumptable            260     6 (fixed)
  9409                           ;	Chosen strategy is simple_byte
  9410  03E0  087A               	movf	??_CCP1_DefaultCallBack+1,w
  9411  03E1  3A00               	xorlw	0	; case 0
  9412  03E2  1903               	skipnz
  9413  03E3  2BE5               	goto	i1l3487
  9414  03E4  2BED               	goto	i1l412
  9415  03E5                     i1l3487:
  9416                           
  9417                           ; Switch size 1, requested type "simple"
  9418                           ; Number of cases is 2, Range of values is 0 to 1
  9419                           ; switch strategies available:
  9420                           ; Name         Instructions Cycles
  9421                           ; simple_byte            7     4 (average)
  9422                           ; direct_byte           10     6 (fixed)
  9423                           ; jumptable            260     6 (fixed)
  9424                           ;	Chosen strategy is simple_byte
  9425  03E5  0879               	movf	??_CCP1_DefaultCallBack,w
  9426  03E6  3A00               	xorlw	0	; case 0
  9427  03E7  1903               	skipnz
  9428  03E8  2BC4               	goto	i1l2611
  9429  03E9  3A01               	xorlw	1	; case 1
  9430  03EA  1903               	skipnz
  9431  03EB  2BBF               	goto	i1l2609
  9432  03EC  2BED               	goto	i1l412
  9433  03ED                     i1l412:
  9434  03ED  0008               	return
  9435  03EE                     __end_of_CCP1_DefaultCallBack:
  9436                           
  9437                           	psect	text44
  9438  05E8                     __ptext44:	
  9439 ;; *************** function _JSN_GetLastTrig *****************
  9440 ;; Defined at:
  9441 ;;		line 119 in file "JSN_Sensor.c"
  9442 ;; Parameters:    Size  Location     Type
  9443 ;;		None
  9444 ;; Auto vars:     Size  Location     Type
  9445 ;;		None
  9446 ;; Return value:  Size  Location     Type
  9447 ;;                  1    wreg      PTR struct .
  9448 ;; Registers used:
  9449 ;;		wreg
  9450 ;; Tracked objects:
  9451 ;;		On entry : 0/0
  9452 ;;		On exit  : 0/0
  9453 ;;		Unchanged: 0/0
  9454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;Total ram usage:        0 bytes
  9460 ;; Hardware stack levels used: 1
  9461 ;; This function calls:
  9462 ;;		Nothing
  9463 ;; This function is called by:
  9464 ;;		_CCP1_DefaultCallBack
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468  05E8                     _JSN_GetLastTrig:	
  9469                           ;psect for function _JSN_GetLastTrig
  9470                           
  9471  05E8                     i1l2451:	
  9472                           ;incstack = 0
  9473                           ; Regs used in _JSN_GetLastTrig: [wreg]
  9474                           
  9475                           
  9476                           ;JSN_Sensor.c: 120:     return lastTrig;
  9477  05E8  0020               	movlb	0	; select bank0
  9478  05E9  0848               	movf	_lastTrig,w
  9479  05EA                     i1l69:
  9480  05EA  0008               	return
  9481  05EB                     __end_of_JSN_GetLastTrig:
  9482  007E                     btemp	set	126	;btemp
  9483  007E                     int$flags	set	126
  9484  007E                     wtemp0	set	126
  9485                           
  9486                           	psect	idloc
  9487                           
  9488                           ;Config register IDLOC0 @ 0x8000
  9489                           ;	unspecified, using default values
  9490  8000                     	org	32768
  9491  8000  3FFF               	dw	16383
  9492                           
  9493                           ;Config register IDLOC1 @ 0x8001
  9494                           ;	unspecified, using default values
  9495  8001                     	org	32769
  9496  8001  3FFF               	dw	16383
  9497                           
  9498                           ;Config register IDLOC2 @ 0x8002
  9499                           ;	unspecified, using default values
  9500  8002                     	org	32770
  9501  8002  3FFF               	dw	16383
  9502                           
  9503                           ;Config register IDLOC3 @ 0x8003
  9504                           ;	unspecified, using default values
  9505  8003                     	org	32771
  9506  8003  3FFF               	dw	16383
  9507                           
  9508                           	psect	config
  9509                           
  9510                           ;Config register CONFIG1 @ 0x8007
  9511                           ;	FEXTOSC External Oscillator mode Selection bits
  9512                           ;	FEXTOSC = OFF, Oscillator not enabled
  9513                           ;	Power-up default value for COSC bits
  9514                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
  9515                           ;	Clock Out Enable bit
  9516                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
  9517                           ;	Clock Switch Enable bit
  9518                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  9519                           ;	Fail-Safe Clock Monitor Enable
  9520                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9521  8007                     	org	32775
  9522  8007  3F8C               	dw	16268
  9523                           
  9524                           ;Config register CONFIG2 @ 0x8008
  9525                           ;	Master Clear Enable bit
  9526                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
  9527                           ;	Power-up Timer Enable bit
  9528                           ;	PWRTE = OFF, PWRT disabled
  9529                           ;	Watchdog Timer Enable bits
  9530                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
  9531                           ;	Low-power BOR enable bit
  9532                           ;	LPBOREN = OFF, ULPBOR disabled
  9533                           ;	Brown-out Reset Enable bits
  9534                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
  9535                           ;	Brown-out Reset Voltage selection bit
  9536                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
  9537                           ;	PPSLOCK bit One-Way Set Enable bit
  9538                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
  9539                           ;	Stack Overflow/Underflow Reset Enable bit
  9540                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9541                           ;	Debugger enable bit
  9542                           ;	DEBUG = OFF, Background debugger disabled
  9543  8008                     	org	32776
  9544  8008  3FF3               	dw	16371
  9545                           
  9546                           ;Config register CONFIG3 @ 0x8009
  9547                           ;	User NVM self-write protection bits
  9548                           ;	WRT = OFF, Write protection off
  9549                           ;	Low Voltage Programming Enable bit
  9550                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
  9551  8009                     	org	32777
  9552  8009  3FFF               	dw	16383
  9553                           
  9554                           ;Config register CONFIG4 @ 0x800A
  9555                           ;	User NVM Program Memory Code Protection bit
  9556                           ;	CP = OFF, User NVM code protection disabled
  9557                           ;	Data NVM Memory Code Protection bit
  9558                           ;	CPD = OFF, Data NVM code protection disabled
  9559  800A                     	org	32778
  9560  800A  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         90
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     29      76
    BANK1            80      0      36
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP3_DefaultCallBack(), 

    CCP2_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP2_DefaultCallBack(), 

    CCP2_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP2_DefaultCallBack(), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP1_DefaultCallBack(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    sp__JSN_GetLastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK0[6]), 

    JSN_Sensor_GetDistance@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK0[6]), 

    JSN_Sensor_Trig@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK0[6]), 

    lastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK0[6]), 

    JSN_Sensor_Init@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK0[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _TMR1_ISR->_TMR1_WriteTimer
    _CCP3_CaptureISR->_CCP3_DefaultCallBack
    _CCP2_CaptureISR->_CCP2_DefaultCallBack
    _CCP1_CaptureISR->_CCP1_DefaultCallBack

Critical Paths under _main in BANK0

    _main->_JSN_Sensor_GetDistance
    _CCP3_Initialize->_CCP3_SetCallBack
    _CCP2_Initialize->_CCP2_SetCallBack
    _JSN_Sensor_Trig->_FR_Timer_GetMicros
    _FR_Timer_GetMicros->_TMR0_ReadTimer
    _JSN_Sensor_GetDistance->___lwdiv
    ___lwdiv->___wmul
    _JSN_Library_Init->_JSN_Sensor_Init
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _JSN_Sensor_Init->_SetPin
    _JSN_Sensor_Init->_WritePin
    _CCP1_Initialize->_CCP1_SetCallBack
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    6045
                                             17 BANK0     12    12      0
                 _FR_Timer_GetMillis
                      _FR_Timer_Init
                   _JSN_Library_Init
             _JSN_Sensor_GetDistance
                    _JSN_Sensor_Trig
                         _PIC16_Init
                             _SetPin
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _PIC16_Init                                           0     0      0     605
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     605
                    _CCP1_Initialize
                    _CCP2_Initialize
                    _CCP3_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CCP3_Initialize                                      0     0      0     121
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP3_SetCallBack                                     2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP2_Initialize                                      0     0      0     121
                   _CCP2_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP2_SetCallBack                                     2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Trig                                      5     5      0     964
                                              6 BANK0      5     5      0
                 _FR_Timer_GetMicros
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _FR_Timer_GetMicros                                   4     0      4      23
                                              2 BANK0      4     0      4
                     _TMR0_ReadTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_ReadTimer                                       2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_GetDistance                               3     1      2     759
                                             14 BANK0      3     1      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _JSN_Library_Init                                     2     2      0    2091
                                              9 BANK0      2     2      0
                    _CCP1_Initialize
                    _JSN_Sensor_Init
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR1_Initialize                                      0     0      0     121
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR1_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _JSN_Sensor_Init                                      5     3      2    1849
                                              4 BANK0      5     3      2
                             _SetPin
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _WritePin                                             4     3      1     776
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetPin                                               4     3      1     624
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _CCP1_Initialize                                      0     0      0     121
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP1_SetCallBack                                     2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _FR_Timer_Init                                        0     0      0     121
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _FR_Timer_GetMillis                                   4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     584
                    _CCP1_CaptureISR
                    _CCP2_CaptureISR
                    _CCP3_CaptureISR
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0       0
                 _FR_Timer_IncMicros
                 _FR_Timer_IncMillis
 ---------------------------------------------------------------------------------
 (8) _FR_Timer_IncMillis                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _FR_Timer_IncMicros                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CCP3_CaptureISR                                      3     3      0     100
                                              2 COMMON     3     3      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (7) _CCP3_DefaultCallBack                                 2     0      2      53
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _CCP2_CaptureISR                                      3     3      0     100
                                              2 COMMON     3     3      0
                   Absolute function *
               _CCP2_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (7) _CCP2_DefaultCallBack                                 2     0      2      53
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _CCP1_CaptureISR                                      3     3      0     144
                                              4 COMMON     3     3      0
                   Absolute function *
               _CCP1_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (7) _CCP1_DefaultCallBack                                 4     2      2      97
                                              0 COMMON     4     2      2
                    _JSN_GetLastTrig
 ---------------------------------------------------------------------------------
 (8) _JSN_GetLastTrig                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FR_Timer_GetMillis
   _FR_Timer_Init
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _JSN_Library_Init
     _CCP1_Initialize
       _CCP1_SetCallBack
     _JSN_Sensor_Init
       _SetPin
       _WritePin
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _JSN_Sensor_GetDistance
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _JSN_Sensor_Trig
     _FR_Timer_GetMicros
       _TMR0_ReadTimer
     _WritePin
   _PIC16_Init
     _SYSTEM_Initialize
       _CCP1_Initialize
       _CCP2_Initialize
         _CCP2_SetCallBack
       _CCP3_Initialize
         _CCP3_SetCallBack
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _TMR0_Initialize
       _TMR1_Initialize
       _WDT_Initialize
   _SetPin
   _WritePin

 _INTERRUPT_InterruptManager (ROOT)
   _CCP1_CaptureISR
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
       _JSN_GetLastTrig
   _CCP2_CaptureISR
     Absolute function(Fake) *
     _CCP2_DefaultCallBack *
   _CCP3_CaptureISR
     Absolute function(Fake) *
     _CCP3_DefaultCallBack *
   _TMR0_ISR
     _TMR0_CallBack
       _FR_Timer_IncMicros
       _FR_Timer_IncMillis
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1D      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      24       7       45.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      7E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      7E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Jan 27 19:39:50 2022

                  ??_CCP3_DefaultCallBack 0079                                        l31 054C  
                                      l41 0265                                        l37 01E8  
                                      l46 0205                                        l63 0317  
                                      l90 05E7                                        l66 041B  
                                      l93 0599                                        l96 0523  
                     ___wmul@multiplicand 0051                   __end_of_CCP1_Initialize 04A0  
                                     l311 058B                                       l320 0583  
                                     l242 0129                                       l314 058F  
                                     l308 0457                                       l421 05D9  
                                     l317 05E3                                       l510 04B6  
                                     l415 049F                                       l194 01E4  
                                     l451 05CD                                       l349 0538  
                                     l445 0487                                       l189 038D  
                                     l358 05B4                                       l543 05D3  
                                     l376 05DF                                       l481 05C7  
                                     l475 046F                                       l943 0427  
                                     l945 043B                                       l788 03BD  
                                     u500 0331                                       u501 0330  
                                     u520 0340                                       u521 033F  
                                     u515 0332                                       u540 0350  
                                     u541 034F                                       u525 033C  
                                     u535 0346                                       u480 0321  
                                     u481 0320                                       u810 058F  
                                     u811 058E                                       u820 0423  
                                     u821 0422                                       u495 0325  
                                     u850 0437                                       u851 0436  
                                     u835 0428                                       u860 0308  
                                     u845 042D                                       u861 0307  
                                     u870 02AD                                       u871 02AC  
                                     u880 02BB                                       u881 02BA  
                         _timer1ReloadVal 0038                                       wreg 0009  
                                    l1223 0354                                      l3101 05D4  
                                    l2301 013B              JSN_Sensor_GetDistance@Sensor 005F  
                                    l3111 04A4                                      l3103 05C8  
                                    l3121 0488                                      l2321 015E  
                                    l2313 0150                                      l2305 0142  
                                    l2401 00A3                                      l3113 04A5  
                                    l3201 0473                                      l3105 05C2  
                                    l3131 0496                                      l3123 048B  
                                    l3107 05CE                                      l3115 04A9  
                                    l3211 0483                                      l3203 0474  
                                    l3141 052A                                      l3133 049B  
                                    l3125 048C                                      l2341 0181  
                                    l2333 0173                                      l2325 0165  
                                    l2317 0157                                      l2309 0149  
                                    l2421 00C6                                      l2413 00B8  
                                    l2405 00AA                                      l3117 04AB  
                                    l3109 04A0                                      l3213 0485  
                                    l3205 0475                                      l3221 045D  
                                    l3301 0389                                      l3143 052B  
                                    l3135 049D                                      l3127 048D  
                                    l3119 04B3                                      l3231 050F  
                                    l3207 0476                                      l3223 045E  
                                    l3215 0458                                      l3151 057A  
                                    l3303 038C                                      l3145 052D  
                                    l3137 0524                                      l3305 05E4  
                                    l3129 048E                                      l2353 0196  
                                    l2345 0188                                      l2337 017A  
                                    l2329 016C                                      l2433 00DB  
                                    l2425 00CD                                      l2417 00BF  
                                    l2409 00B1                                      l3241 0423  
                                    l3209 047E                                      l3225 0466  
                                    l3217 045B                                      l3161 0392  
                                    l3153 057C                                      l3321 0278  
                                    l3313 0266                                      l3147 0535  
                                    l3139 0529                                      l2363 01A4  
                                    l2291 012C                                      l2443 00E9  
                                    l2371 0071                                      l3251 0539  
                                    l3243 042C                                      l3227 046B  
                                    l3219 045C                                      l3171 039E  
                                    l3163 0395                                      l3155 057E  
                                    l3235 043C                                      l3331 02AD  
                                    l3323 027D                                      l3315 026C  
                                    l3309 0590                                      l2357 019D  
                                    l2349 018F                                      l2293 012D  
                                    l2437 00E2                                      l2429 00D4  
                                    l2381 0080                                      l2373 0072  
                                    l3253 053F                                      l3245 0431  
                                    l3237 041C                                      l3261 02E9  
                                    l3229 046D                                      l3181 03B2  
                                    l3173 03A8                                      l3165 0397  
                                    l3157 0580                                      l3149 0578  
                                    l3333 02BB                                      l3325 0283  
                                    l3317 026F                                      l3247 0437  
                                    l3239 041F                                      l3271 0413  
                                    l3263 0308                                      l3191 0584  
                                    l3183 03B4                                      l3175 03AB  
                                    l3167 0399                                      l3159 038E  
                                    l3335 02C1                                      l3327 0287  
                                    l3319 026F                                      l2297 0134  
                                    l2393 0095                                      l2385 0087  
                                    l2377 0079                                      l2561 01E7  
                                    l3265 0312                                      l3257 02D3  
                                    l3193 0588                                      l3185 03B6  
                                    l3177 03AD                                      l3169 039C  
                                    l3281 0364                                      l3337 02C5  
                                    l3329 0293                                      l3099 05DA  
                                    l2563 01E8                                      l2467 05AE  
                                    l3259 02DF                                      l3195 058A  
                                    l3187 03B9                                      l3179 03AF  
                                    l3291 0378                                      l3283 0366  
                                    l3275 0355                                      l2397 009C  
                                    l2389 008E                                      l2581 0259  
                                    l2573 0211                                      l2661 0324  
                                    l3269 03F0                                      l3189 03BB  
                                    l3197 05E0                                      l3293 037A  
                                    l3285 0369                                      l3277 035F  
                                    l2583 0261                                      l2575 0243  
                                    l2567 01EF                                      l2671 0344  
                                    l2663 0329                                      l2655 0318  
                                    l3199 0470                                      l3295 037C  
                                    l3287 036B                                      l3279 0362  
                                    l2577 024B                                      l3481 021A  
                                    l2569 0205                                      l2673 0345  
                                    l2665 032D                                      l2657 031B  
                                    l3297 037F                                      l3289 0375  
                                    l3483 00F1                                      l2579 0251  
                                    l2675 034A                                      l2667 0331  
                                    l2659 0321                                      l3299 0381  
                                    l3485 01AC                                      l2669 0340  
                                    l2677 0350                                      l3479 01F7  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      _PIE0 0090  
                                    _PIE1 0091                                      _PIE2 0092  
                                    _PIE3 0093                                      _PIE4 0094  
                                    _PMD0 0911                                      _PMD1 0912  
                                    _PMD2 0913                                      _PMD3 0914  
                                    _PMD4 0915                                      _PMD5 0916  
                                    _PIR0 0010                                      _PIR1 0011  
                                    _PIR2 0012                                      _PIR3 0013  
                                    _PIR4 0014                                      i1l69 05EA  
                                    i1l99 05A3                                      _PLLR 48E0  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _WPUC 020E                   __end_of_CCP2_Initialize 0488  
                                    _main 0266                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                                    start 0052                  __end_of_CCP1_SetCallBack 05DA  
              ??_TMR1_SetInterruptHandler 0051                          ?_CCP1_CaptureISR 0077  
                    _micros@FR_Timer$F158 0020                   __end_of_TMR0_Initialize 0539  
           __end_of_OSCILLATOR_Initialize 0590                         ?_JSN_Library_Init 0077  
                 __end_of_CCP3_Initialize 0470                                     ?_main 0077  
                                   _T1CON 001B                           __end_of___lwdiv 0355  
                                   i1l102 05AD                                     i1l412 03ED  
                                   i1l418 050E                                     i1l442 05ED  
                                   i1l370 04CC                                     i1l540 0577  
                                   i1l524 055D                                     i1l373 05BB  
                                   i1l448 04F8                                     i1l472 05EC  
                                   i1l536 056A                                     i1l546 05EB  
                                   i1l730 0034                                     i1l731 0050  
                                   i1l732 0042                                     i1l725 0014  
                                   i1l478 04E2                                     i1l728 0026  
                                   i1l737 0050                                     _OSCEN 091D  
                      ??_JSN_Library_Init 0058                                     _TMR0H 0016  
                                   _TMR1H 001A                                     _TMR0L 0015  
                                   _TMR1L 0019                                     u42_20 0552  
                                   u42_21 0551                                     u43_20 0572  
                                   u43_21 0571                                     u70_20 000B  
                                   u70_21 000A                                     u71_20 0010  
                                   u71_21 000F                                     u56_20 04C6  
                                   u80_20 004C                                     u72_20 0018  
                                   u56_21 04C5                                     u80_21 004B  
                                   u72_21 0017                                     u73_20 001D  
                                   u73_21 001C                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                                   u74_20 0022                                     u74_21 0021  
                                   u75_20 002B                                     u75_21 002A  
                                   u76_20 0030                                     u76_21 002F  
                                   u77_20 0039                                     u77_21 0038  
                                   u78_20 003E                                     u78_21 003D  
                                   u79_20 0047                                     u79_21 0046  
               ?_TMR0_SetInterruptHandler 004F                                     _Sens1 0049  
                                   _Sens2 00BE                                     _Sens3 00B8  
                        __end_of_TMR0_ISR 04CD                          __end_of_TMR1_ISR 056B  
                        ?_CCP2_CaptureISR 0077                            _WDT_Initialize 05E0  
                 __end_of_TMR1_Initialize 04B7                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                   __end_of_FR_Timer_Init 05E8                           _TMR1_WriteTimer 054D  
                __end_of_CCP2_SetCallBack 05CE                           __initialization 0054  
                        ?_CCP3_CaptureISR 0077                              __end_of_main 02D1  
             ?_INTERRUPT_InterruptManager 0077                                    ??_main 0060  
                        ?_CCP1_Initialize 0077                    __end_of_WDT_Initialize 05E4  
                         _JSN_GetLastTrig 05E8         _EUSART_DefaultFramingErrorHandler 0000  
              _EUSART_OverrunErrorHandler 002E                                    _CCPR1H 0292  
                                  _CCPR2H 0296                                    _CCPR3H 0312  
                                  _CCPR1L 0291                                    _CCPR2L 0295  
                                  _CCPR3L 0311                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                                  _T0CON0 0017                                    _T0CON1 0018  
                                  _T1GCON 001C                                    _RC1REG 0199  
                        __end_of_WritePin 012A                                    _RC1STA 019D  
                 TMR1_WriteTimer@timerVal 0077                                    _ODCONA 028C  
                                  _ODCONB 028D                                    _ODCONC 028E  
                                  i1l2451 05E8                                    i1l2611 03C4  
                                  i1l2613 03C8                                    i1l2605 05B5  
                                  i1l2607 03BE                                    i1l2471 059A  
                                  i1l2631 0557                                    i1l2623 054D  
                                  i1l2609 03BF                                    i1l2617 03DA  
                                  i1l2625 0552                                    i1l2633 0559  
                                  i1l2475 05A4                                    i1l2635 055B  
                                  i1l2627 0553                                    i1l2637 056B  
                                  i1l2629 0555                                    i1l2751 04F9  
                                  i1l2743 04B7                                    i1l2639 0572  
                                  i1l2753 04FB                                    i1l2761 04EE  
                                  i1l2745 04B9                                    i1l2755 0504  
                                  i1l2763 04CD                                    i1l2747 04C6  
                                  i1l2771 0560                                    i1l2757 04E3  
                                  i1l2765 04CF                                    i1l2749 04C9  
                                  i1l2941 0018                                    i1l3487 03E5  
                                  i1l2759 04E5                                    i1l2767 04D8  
                                  i1l2951 0039                                    i1l2943 001D  
                                  i1l2935 0006                                    i1l2769 055E  
                                  i1l2953 003E                                    i1l2945 0022  
                                  i1l2937 000B                                    i1l2955 0047  
                                  i1l2947 002B                                    i1l2939 0010  
                                  i1l2957 004C                                    i1l2949 0030  
                                  _INLVLA 038C                                    _INLVLB 038D  
                                  _INLVLC 038E                             main@currMilli 0068  
                                  _OSCFRQ 091F                                    _TX1REG 019A  
                                  _WDTCON 0097                                    _TX1STA 019E  
                        ?_CCP2_Initialize 0077                         ??_JSN_Sensor_Init 0055  
                       ??_JSN_Sensor_Trig 0055                             _CCP1_CallBack 0042  
                __end_of_CCP3_SetCallBack 05C8                                    _SetPin 012A  
    __end_of_TMR1_DefaultInterruptHandler 05EC              _TMR1_DefaultInterruptHandler 05EB  
                           _CCP2_CallBack 003C                                    ___wmul 041C  
                               ??___lwdiv 0059                             _CCP3_CallBack 003A  
                     _EUSART_Transmit_ISR 0000                          ?_TMR0_Initialize 0077  
                                  _micros 0028                                    _millis 0024  
                           main@prevMilli 0064                          ?_CCP3_Initialize 0077  
                          _PMD_Initialize 0578         CCP2_DefaultCallBack@capturedValue 0077  
                         ?_WDT_Initialize 0077                     __end_of_TMR0_CallBack 05BC  
TMR1_SetInterruptHandler@InterruptHandler 004F  TMR0_SetInterruptHandler@InterruptHandler 004F  
                 __end_of_TMR1_WriteTimer 055E                     __end_of_TMR1_CallBack 0578  
                        ?_TMR1_Initialize 0077                         _SYSTEM_Initialize 043C  
                 __end_of__initialization 006B                        ?_SYSTEM_Initialize 0077  
                            ??_PIC16_Init 0051                            __pcstackCOMMON 0077  
                     ??_SYSTEM_Initialize 0051                                 ?_TMR0_ISR 0077  
                               ?_TMR1_ISR 0077             ?_TMR1_DefaultInterruptHandler 0077  
                  __end_of_PMD_Initialize 0584                   __end_of_JSN_GetLastTrig 05EB  
                   CCP3_CaptureISR@module 007A                     TMR0_ISR@CountCallBack 0044  
                    _eusartRxStatusBuffer 00A0            CCP3_SetCallBack@customCallBack 004F  
                      __end_of_PIC16_Init 038E                 __end_of_SYSTEM_Initialize 0458  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
                ??_JSN_Sensor_GetDistance 005F                                   ?_SetPin 004F  
                       ?_CCP1_SetCallBack 004F                                __pmaintext 0266  
        _EUSART_TxDefaultInterruptHandler 0034          __end_of_TMR0_SetInterruptHandler 05E0  
                                 ?___wmul 004F                                ??_TMR0_ISR 0077  
                              ??_TMR1_ISR 0079                        ??_CCP1_SetCallBack 0051  
                              __pintentry 0004                                   _CCP1CAP 0294  
                                 _CCP2CAP 0298                                   _CCP3CAP 0314  
                                 _CCP1CON 0293                                   _CCP2CON 0297  
                                 _CCP3CON 0313                                   _CCP1PPS 0E14  
                                 _CCP2PPS 0E15                                   _CCP3PPS 0E16  
                         ?_PMD_Initialize 0077                                 ?_WritePin 004F  
                           _eusartRxCount 0071                                   _SP1BRGH 019C  
                                 _SP1BRGL 019B                                   _OSCCON1 0919  
                                 _OSCCON3 091B                                   _OSCTUNE 091E  
                                 _SLRCONA 030C                                   _SLRCONB 030D  
                                 _SLRCONC 030E                          ?_TMR1_WriteTimer 0077  
       CCP1_DefaultCallBack@capturedValue 0077                         ?_CCP2_SetCallBack 004F  
                      ??_CCP2_SetCallBack 0051                                   ___lwdiv 0318  
                              ??_WritePin 0050                                   __ptext1 0355  
                                 __ptext2 043C                                   __ptext3 05E0  
                                 __ptext4 0578                                   __ptext5 038E  
                                 __ptext6 0584                                   __ptext7 0458  
                                 __ptext8 05C2                                   __ptext9 0470  
                        ?_JSN_GetLastTrig 0077            ??_TMR1_DefaultInterruptHandler 0077  
                               _T1CONbits 001B                     _OSCILLATOR_Initialize 0584  
                ??_PIN_MANAGER_Initialize 004F                 ?_TMR1_SetInterruptHandler 004F  
                                 _ticksUp 0040                           _JSN_Sensor_Init 01E5  
                         _JSN_Sensor_Trig 02D1                                   clrloop0 05BD  
                    end_of_initialization 006B                         ?_CCP3_SetCallBack 004F  
                   TMR0_ReadTimer@readVal 0050              __end_of_CCP1_DefaultCallBack 03EE  
                      ??_CCP3_SetCallBack 0051                            _TMR0_ReadTimer 05AE  
                        ??_WDT_Initialize 004F                  _TMR0_SetInterruptHandler 05DA  
                               _PORTAbits 000C                                 _PORTBbits 000D  
                               _PORTCbits 000E                                 _TRISAbits 008C  
                               _TRISBbits 008D                                 _TRISCbits 008E  
                  __end_of_TMR0_ReadTimer 05B5                            __end_of_SetPin 01E5  
              _EUSART_DefaultErrorHandler 0000                            __end_of___wmul 043C  
                 __end_of_JSN_Sensor_Init 0266                    _JSN_Sensor_GetDistance 03EE  
                  ?_OSCILLATOR_Initialize 0077                   __end_of_JSN_Sensor_Trig 0318  
            __end_of_CCP2_DefaultCallBack 05EE                       start_initialization 0054  
          CCP2_SetCallBack@customCallBack 004F                                 SetPin@pin 0052  
                       ??_CCP1_CaptureISR 007B                          _JSN_Library_Init 0539  
              __end_of_FR_Timer_GetMicros 0524                __end_of_FR_Timer_GetMillis 059A  
                           _FR_Timer_Init 05E4                                  ??_SetPin 0050  
              __end_of_FR_Timer_IncMicros 05AE                __end_of_FR_Timer_IncMillis 05A4  
              _EUSART_FramingErrorHandler 0030                          ??_PMD_Initialize 004F  
                         ?_TMR0_ReadTimer 0077                                  ??___wmul 0053  
                       ??_CCP2_CaptureISR 0079                    JSN_Sensor_Init@echoPin 0054  
                             _CCPTMRSbits 029F                     CCP1_CaptureISR@module 007C  
                             __pbssCOMMON 0070                                 ___latbits 0002  
                  JSN_Sensor_Init@trigPin 0053                             __pcstackBANK0 004F  
                       ??_CCP3_CaptureISR 0079              __end_of_CCP3_DefaultCallBack 05ED  
                    _CCP1_DefaultCallBack 03BE          _EUSART_RxDefaultInterruptHandler 0032  
                          ?_FR_Timer_Init 0077                     _TMR0_InterruptHandler 0046  
                       ??_CCP1_Initialize 0051                               WritePin@pin 0052  
                             WritePin@val 004F                          ___lwdiv@dividend 0057  
                  _PIN_MANAGER_Initialize 038E          __end_of_TMR1_SetInterruptHandler 05D4  
       CCP3_DefaultCallBack@capturedValue 0077                                  ?___lwdiv 0055  
                            _eusartRxHead 0073                              _eusartTxHead 0076  
                            _eusartRxTail 0072                              _eusartTxTail 0075  
            ??_INTERRUPT_InterruptManager 007E                          ?_JSN_Sensor_Init 0053  
                        ?_JSN_Sensor_Trig 0077                   _eusartTxBufferRemaining 0074  
                                _BAUD1CON 019F                         ??_CCP2_Initialize 0051  
                        ___lwdiv@quotient 005A                             _TMR0_CallBack 05B5  
                   ?_CCP1_DefaultCallBack 0077                            _eusartRxBuffer 00A8  
                           _TMR1_CallBack 056B                         ??_TMR0_Initialize 0051  
                          _eusartTxBuffer 00B0                            ___wmul@product 0053  
                                _LATAbits 010C                                  _LATBbits 010D  
                                _LATCbits 010E                                 clear_ram0 05BC  
                       ??_CCP3_Initialize 0051                                  _PIE0bits 0090  
                                _PIE1bits 0091                                  _PIE4bits 0094  
                       _eusartRxLastError 0070                      _CCP2_DefaultCallBack 05ED  
              ??_TMR0_SetInterruptHandler 0051                                  _PIR0bits 0010  
                                _PIR1bits 0011                                 _ticksDown 003E  
                                _PIR4bits 0014                                  _TMR0_ISR 04B7  
       _EUSART_DefaultOverrunErrorHandler 0000                                  _TMR1_ISR 055E  
                       ??_TMR1_Initialize 0051                         ___wmul@multiplier 004F  
                          ?_TMR0_CallBack 0077                            ?_TMR1_CallBack 0077  
                         ??_FR_Timer_Init 0051                                  SetPin@io 004F  
                   ?_CCP2_DefaultCallBack 0077                     JSN_Sensor_Init@Sensor 0057  
                 ?_JSN_Sensor_GetDistance 005D                   ??_OSCILLATOR_Initialize 004F  
                     _EUSART_ErrorHandler 002C                      _CCP3_DefaultCallBack 05EC  
                __end_of_JSN_Library_Init 054D                           _CCP1_CaptureISR 04F9  
                                _WritePin 006F                  _TMR1_SetInterruptHandler 05CE  
                   _TMR1_InterruptHandler 0036                                _T0CON0bits 0017  
                        _CCP1_SetCallBack 05D4                           ___lwdiv@divisor 0055  
          CCP1_SetCallBack@customCallBack 004F                           ___lwdiv@counter 005C  
                                __ptext10 05C8                                  __ptext11 02D1  
                                __ptext20 01E5                                  __ptext12 050F  
                                __ptext21 006F                                  __ptext13 05AE  
                              _T1GCONbits 001C                                  __ptext30 055E  
                                __ptext22 012A                                  __ptext14 03EE  
                                __ptext31 054D                                  __ptext23 0488  
                                __ptext15 041C                                  __ptext40 04E3  
                                __ptext32 056B                                  __ptext24 05D4  
                                __ptext16 0318                                  __ptext41 05ED  
                                __ptext33 05EB                                  __ptext25 05E4  
                                __ptext17 0539                                  __ptext42 04F9  
                                __ptext34 04B7                                  __ptext26 0524  
                                __ptext18 04A0                                  __ptext43 03BE  
                                __ptext35 05B5                                  __ptext27 05DA  
                                __ptext19 05CE                                  __ptext44 05E8  
                                __ptext36 059A                                  __ptext28 0590  
                                __ptext37 05A4                                  __ptext38 04CD  
                                __ptext39 05EC                    ??_CCP1_DefaultCallBack 0079  
                                _lastTrig 0048                           _CCP2_CaptureISR 04E3  
                        ??_TMR0_ReadTimer 004F              _TMR0_DefaultInterruptHandler 0000  
                              _PIC16_Init 0355                                _RC1STAbits 019D  
          __end_of_JSN_Sensor_GetDistance 041C                                  int$flags 007E  
                   ?_CCP3_DefaultCallBack 0077        __end_of_INTERRUPT_InterruptManager 0052  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 0079  
                      _FR_Timer_GetMicros 050F                        _FR_Timer_GetMillis 0590  
                         _CCP3_CaptureISR 04CD                        _FR_Timer_IncMicros 05A4  
                      _FR_Timer_IncMillis 059A                                _INTCONbits 000B  
                         ??_TMR0_CallBack 0077                          _CCP2_SetCallBack 05C8  
                     ?_FR_Timer_GetMicros 0051                       ?_FR_Timer_GetMillis 004F  
                         _CCP1_Initialize 0488                           ??_TMR1_CallBack 0077  
                     ?_FR_Timer_IncMicros 0077                       ?_FR_Timer_IncMillis 0077  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0077  
                  ??_CCP2_DefaultCallBack 0079                         ??_JSN_GetLastTrig 0077  
                    ??_FR_Timer_GetMicros 0055                      ??_FR_Timer_GetMillis 0053  
                 __end_of_CCP1_CaptureISR 050F                           _CCP2_Initialize 0470  
                    ??_FR_Timer_IncMicros 0077                      ??_FR_Timer_IncMillis 0077  
                      _EUSART_Receive_ISR 0000                     CCP2_CaptureISR@module 007A  
                         _TMR0_Initialize 0524                          _CCP3_SetCallBack 05C2  
                 __end_of_CCP2_CaptureISR 04F9                           _CCP3_Initialize 0458  
                              _TX1STAbits 019E            __end_of_PIN_MANAGER_Initialize 03BE  
                   JSN_Sensor_Trig@Sensor 0059                           _TMR1_Initialize 04A0  
                             ?_PIC16_Init 0077                   __end_of_CCP3_CaptureISR 04E3  
