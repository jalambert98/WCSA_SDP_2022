

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Feb 08 14:57:27 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2,group=3
    50                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text37,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text38,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text39,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	intentry,global,class=CODE,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,delta=2
    90                           	psect	text73,local,class=CODE,merge=1,delta=2
    91                           	psect	text74,local,class=CODE,merge=1,delta=2
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    94                           	dabs	1,0x7E,2
    95  0000                     
    96                           ; Version 2.40
    97                           ; Generated 19/01/2022 GMT
    98                           ; 
    99                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   100                           ; All rights reserved.
   101                           ; 
   102                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   103                           ; 
   104                           ; Redistribution and use in source and binary forms, with or without modification, are
   105                           ; permitted provided that the following conditions are met:
   106                           ; 
   107                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   108                           ;        conditions and the following disclaimer.
   109                           ; 
   110                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   111                           ;        of conditions and the following disclaimer in the documentation and/or other
   112                           ;        materials provided with the distribution. Publication is not required when
   113                           ;        this file is used in an embedded application.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC16F18345 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0090                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0097                     	;# 
   174  009B                     	;# 
   175  009B                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  010C                     	;# 
   181  010D                     	;# 
   182  010E                     	;# 
   183  0111                     	;# 
   184  0112                     	;# 
   185  0113                     	;# 
   186  0114                     	;# 
   187  0115                     	;# 
   188  0116                     	;# 
   189  0117                     	;# 
   190  0118                     	;# 
   191  0119                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  018E                     	;# 
   195  0197                     	;# 
   196  0199                     	;# 
   197  0199                     	;# 
   198  0199                     	;# 
   199  019A                     	;# 
   200  019A                     	;# 
   201  019A                     	;# 
   202  019B                     	;# 
   203  019B                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019B                     	;# 
   207  019C                     	;# 
   208  019C                     	;# 
   209  019C                     	;# 
   210  019D                     	;# 
   211  019D                     	;# 
   212  019D                     	;# 
   213  019E                     	;# 
   214  019E                     	;# 
   215  019E                     	;# 
   216  019F                     	;# 
   217  019F                     	;# 
   218  019F                     	;# 
   219  019F                     	;# 
   220  019F                     	;# 
   221  020C                     	;# 
   222  020D                     	;# 
   223  020E                     	;# 
   224  0211                     	;# 
   225  0211                     	;# 
   226  0212                     	;# 
   227  0212                     	;# 
   228  0213                     	;# 
   229  0213                     	;# 
   230  0214                     	;# 
   231  0214                     	;# 
   232  0215                     	;# 
   233  0215                     	;# 
   234  0215                     	;# 
   235  0215                     	;# 
   236  0216                     	;# 
   237  0216                     	;# 
   238  0217                     	;# 
   239  0217                     	;# 
   240  0219                     	;# 
   241  021A                     	;# 
   242  021B                     	;# 
   243  021C                     	;# 
   244  021D                     	;# 
   245  021D                     	;# 
   246  021E                     	;# 
   247  021F                     	;# 
   248  028C                     	;# 
   249  028D                     	;# 
   250  028E                     	;# 
   251  0291                     	;# 
   252  0291                     	;# 
   253  0292                     	;# 
   254  0293                     	;# 
   255  0294                     	;# 
   256  0295                     	;# 
   257  0295                     	;# 
   258  0296                     	;# 
   259  0297                     	;# 
   260  0298                     	;# 
   261  029F                     	;# 
   262  030C                     	;# 
   263  030D                     	;# 
   264  030E                     	;# 
   265  0311                     	;# 
   266  0311                     	;# 
   267  0312                     	;# 
   268  0313                     	;# 
   269  0314                     	;# 
   270  0315                     	;# 
   271  0315                     	;# 
   272  0316                     	;# 
   273  0317                     	;# 
   274  0318                     	;# 
   275  038C                     	;# 
   276  038D                     	;# 
   277  038E                     	;# 
   278  0391                     	;# 
   279  0392                     	;# 
   280  0393                     	;# 
   281  0394                     	;# 
   282  0395                     	;# 
   283  0396                     	;# 
   284  0397                     	;# 
   285  0398                     	;# 
   286  0399                     	;# 
   287  039A                     	;# 
   288  039C                     	;# 
   289  039D                     	;# 
   290  039E                     	;# 
   291  039F                     	;# 
   292  0411                     	;# 
   293  0411                     	;# 
   294  0412                     	;# 
   295  0413                     	;# 
   296  0414                     	;# 
   297  0415                     	;# 
   298  0416                     	;# 
   299  0417                     	;# 
   300  0418                     	;# 
   301  0418                     	;# 
   302  0419                     	;# 
   303  041A                     	;# 
   304  041B                     	;# 
   305  041C                     	;# 
   306  041D                     	;# 
   307  041E                     	;# 
   308  041F                     	;# 
   309  0498                     	;# 
   310  0498                     	;# 
   311  0499                     	;# 
   312  049A                     	;# 
   313  049B                     	;# 
   314  049B                     	;# 
   315  049C                     	;# 
   316  049D                     	;# 
   317  049E                     	;# 
   318  049F                     	;# 
   319  0617                     	;# 
   320  0618                     	;# 
   321  0619                     	;# 
   322  0619                     	;# 
   323  061A                     	;# 
   324  061B                     	;# 
   325  061C                     	;# 
   326  061C                     	;# 
   327  061F                     	;# 
   328  0691                     	;# 
   329  0692                     	;# 
   330  0693                     	;# 
   331  0694                     	;# 
   332  0695                     	;# 
   333  0696                     	;# 
   334  0697                     	;# 
   335  0698                     	;# 
   336  0699                     	;# 
   337  0711                     	;# 
   338  0712                     	;# 
   339  0713                     	;# 
   340  0714                     	;# 
   341  0715                     	;# 
   342  0716                     	;# 
   343  0717                     	;# 
   344  0718                     	;# 
   345  0719                     	;# 
   346  0891                     	;# 
   347  0891                     	;# 
   348  0891                     	;# 
   349  0891                     	;# 
   350  0891                     	;# 
   351  0891                     	;# 
   352  0892                     	;# 
   353  0892                     	;# 
   354  0892                     	;# 
   355  0893                     	;# 
   356  0893                     	;# 
   357  0893                     	;# 
   358  0893                     	;# 
   359  0893                     	;# 
   360  0893                     	;# 
   361  0894                     	;# 
   362  0894                     	;# 
   363  0894                     	;# 
   364  0895                     	;# 
   365  0895                     	;# 
   366  0895                     	;# 
   367  0896                     	;# 
   368  0896                     	;# 
   369  0896                     	;# 
   370  089B                     	;# 
   371  0911                     	;# 
   372  0912                     	;# 
   373  0913                     	;# 
   374  0914                     	;# 
   375  0915                     	;# 
   376  0916                     	;# 
   377  0918                     	;# 
   378  0919                     	;# 
   379  091A                     	;# 
   380  091B                     	;# 
   381  091C                     	;# 
   382  091D                     	;# 
   383  091E                     	;# 
   384  091F                     	;# 
   385  0E0F                     	;# 
   386  0E10                     	;# 
   387  0E11                     	;# 
   388  0E12                     	;# 
   389  0E13                     	;# 
   390  0E14                     	;# 
   391  0E15                     	;# 
   392  0E16                     	;# 
   393  0E17                     	;# 
   394  0E18                     	;# 
   395  0E19                     	;# 
   396  0E1A                     	;# 
   397  0E1B                     	;# 
   398  0E1C                     	;# 
   399  0E1D                     	;# 
   400  0E1E                     	;# 
   401  0E1F                     	;# 
   402  0E20                     	;# 
   403  0E21                     	;# 
   404  0E22                     	;# 
   405  0E24                     	;# 
   406  0E25                     	;# 
   407  0E28                     	;# 
   408  0E29                     	;# 
   409  0E2A                     	;# 
   410  0E2B                     	;# 
   411  0E2C                     	;# 
   412  0E2D                     	;# 
   413  0E2E                     	;# 
   414  0E2F                     	;# 
   415  0E90                     	;# 
   416  0E91                     	;# 
   417  0E92                     	;# 
   418  0E94                     	;# 
   419  0E95                     	;# 
   420  0E9C                     	;# 
   421  0E9D                     	;# 
   422  0E9E                     	;# 
   423  0E9F                     	;# 
   424  0EA0                     	;# 
   425  0EA1                     	;# 
   426  0EA2                     	;# 
   427  0EA3                     	;# 
   428  0EA4                     	;# 
   429  0EA5                     	;# 
   430  0EA6                     	;# 
   431  0EA7                     	;# 
   432  0F0F                     	;# 
   433  0F10                     	;# 
   434  0F11                     	;# 
   435  0F12                     	;# 
   436  0F13                     	;# 
   437  0F14                     	;# 
   438  0F15                     	;# 
   439  0F16                     	;# 
   440  0F17                     	;# 
   441  0F18                     	;# 
   442  0F19                     	;# 
   443  0F1A                     	;# 
   444  0F1B                     	;# 
   445  0F1C                     	;# 
   446  0F1D                     	;# 
   447  0F1E                     	;# 
   448  0F1F                     	;# 
   449  0F20                     	;# 
   450  0F21                     	;# 
   451  0F22                     	;# 
   452  0F23                     	;# 
   453  0F24                     	;# 
   454  0F25                     	;# 
   455  0F26                     	;# 
   456  0F27                     	;# 
   457  0F28                     	;# 
   458  0F29                     	;# 
   459  0F2A                     	;# 
   460  0F2B                     	;# 
   461  0F2C                     	;# 
   462  0F2D                     	;# 
   463  0F2E                     	;# 
   464  0F2F                     	;# 
   465  0F30                     	;# 
   466  0F31                     	;# 
   467  0F32                     	;# 
   468  0F33                     	;# 
   469  0F34                     	;# 
   470  0F35                     	;# 
   471  0F36                     	;# 
   472  0F37                     	;# 
   473  0FE4                     	;# 
   474  0FE5                     	;# 
   475  0FE6                     	;# 
   476  0FE7                     	;# 
   477  0FE8                     	;# 
   478  0FE9                     	;# 
   479  0FEA                     	;# 
   480  0FEB                     	;# 
   481  0FED                     	;# 
   482  0FEE                     	;# 
   483  0FEF                     	;# 
   484  0000                     	;# 
   485  0001                     	;# 
   486  0002                     	;# 
   487  0003                     	;# 
   488  0004                     	;# 
   489  0005                     	;# 
   490  0006                     	;# 
   491  0007                     	;# 
   492  0008                     	;# 
   493  0009                     	;# 
   494  000A                     	;# 
   495  000B                     	;# 
   496  000C                     	;# 
   497  000D                     	;# 
   498  000E                     	;# 
   499  0010                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0013                     	;# 
   503  0014                     	;# 
   504  0015                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0016                     	;# 
   508  0017                     	;# 
   509  0018                     	;# 
   510  0019                     	;# 
   511  0019                     	;# 
   512  001A                     	;# 
   513  001B                     	;# 
   514  001C                     	;# 
   515  001D                     	;# 
   516  001E                     	;# 
   517  001F                     	;# 
   518  008C                     	;# 
   519  008D                     	;# 
   520  008E                     	;# 
   521  0090                     	;# 
   522  0091                     	;# 
   523  0092                     	;# 
   524  0093                     	;# 
   525  0094                     	;# 
   526  0097                     	;# 
   527  009B                     	;# 
   528  009B                     	;# 
   529  009C                     	;# 
   530  009D                     	;# 
   531  009E                     	;# 
   532  009F                     	;# 
   533  010C                     	;# 
   534  010D                     	;# 
   535  010E                     	;# 
   536  0111                     	;# 
   537  0112                     	;# 
   538  0113                     	;# 
   539  0114                     	;# 
   540  0115                     	;# 
   541  0116                     	;# 
   542  0117                     	;# 
   543  0118                     	;# 
   544  0119                     	;# 
   545  018C                     	;# 
   546  018D                     	;# 
   547  018E                     	;# 
   548  0197                     	;# 
   549  0199                     	;# 
   550  0199                     	;# 
   551  0199                     	;# 
   552  019A                     	;# 
   553  019A                     	;# 
   554  019A                     	;# 
   555  019B                     	;# 
   556  019B                     	;# 
   557  019B                     	;# 
   558  019B                     	;# 
   559  019B                     	;# 
   560  019C                     	;# 
   561  019C                     	;# 
   562  019C                     	;# 
   563  019D                     	;# 
   564  019D                     	;# 
   565  019D                     	;# 
   566  019E                     	;# 
   567  019E                     	;# 
   568  019E                     	;# 
   569  019F                     	;# 
   570  019F                     	;# 
   571  019F                     	;# 
   572  019F                     	;# 
   573  019F                     	;# 
   574  020C                     	;# 
   575  020D                     	;# 
   576  020E                     	;# 
   577  0211                     	;# 
   578  0211                     	;# 
   579  0212                     	;# 
   580  0212                     	;# 
   581  0213                     	;# 
   582  0213                     	;# 
   583  0214                     	;# 
   584  0214                     	;# 
   585  0215                     	;# 
   586  0215                     	;# 
   587  0215                     	;# 
   588  0215                     	;# 
   589  0216                     	;# 
   590  0216                     	;# 
   591  0217                     	;# 
   592  0217                     	;# 
   593  0219                     	;# 
   594  021A                     	;# 
   595  021B                     	;# 
   596  021C                     	;# 
   597  021D                     	;# 
   598  021D                     	;# 
   599  021E                     	;# 
   600  021F                     	;# 
   601  028C                     	;# 
   602  028D                     	;# 
   603  028E                     	;# 
   604  0291                     	;# 
   605  0291                     	;# 
   606  0292                     	;# 
   607  0293                     	;# 
   608  0294                     	;# 
   609  0295                     	;# 
   610  0295                     	;# 
   611  0296                     	;# 
   612  0297                     	;# 
   613  0298                     	;# 
   614  029F                     	;# 
   615  030C                     	;# 
   616  030D                     	;# 
   617  030E                     	;# 
   618  0311                     	;# 
   619  0311                     	;# 
   620  0312                     	;# 
   621  0313                     	;# 
   622  0314                     	;# 
   623  0315                     	;# 
   624  0315                     	;# 
   625  0316                     	;# 
   626  0317                     	;# 
   627  0318                     	;# 
   628  038C                     	;# 
   629  038D                     	;# 
   630  038E                     	;# 
   631  0391                     	;# 
   632  0392                     	;# 
   633  0393                     	;# 
   634  0394                     	;# 
   635  0395                     	;# 
   636  0396                     	;# 
   637  0397                     	;# 
   638  0398                     	;# 
   639  0399                     	;# 
   640  039A                     	;# 
   641  039C                     	;# 
   642  039D                     	;# 
   643  039E                     	;# 
   644  039F                     	;# 
   645  0411                     	;# 
   646  0411                     	;# 
   647  0412                     	;# 
   648  0413                     	;# 
   649  0414                     	;# 
   650  0415                     	;# 
   651  0416                     	;# 
   652  0417                     	;# 
   653  0418                     	;# 
   654  0418                     	;# 
   655  0419                     	;# 
   656  041A                     	;# 
   657  041B                     	;# 
   658  041C                     	;# 
   659  041D                     	;# 
   660  041E                     	;# 
   661  041F                     	;# 
   662  0498                     	;# 
   663  0498                     	;# 
   664  0499                     	;# 
   665  049A                     	;# 
   666  049B                     	;# 
   667  049B                     	;# 
   668  049C                     	;# 
   669  049D                     	;# 
   670  049E                     	;# 
   671  049F                     	;# 
   672  0617                     	;# 
   673  0618                     	;# 
   674  0619                     	;# 
   675  0619                     	;# 
   676  061A                     	;# 
   677  061B                     	;# 
   678  061C                     	;# 
   679  061C                     	;# 
   680  061F                     	;# 
   681  0691                     	;# 
   682  0692                     	;# 
   683  0693                     	;# 
   684  0694                     	;# 
   685  0695                     	;# 
   686  0696                     	;# 
   687  0697                     	;# 
   688  0698                     	;# 
   689  0699                     	;# 
   690  0711                     	;# 
   691  0712                     	;# 
   692  0713                     	;# 
   693  0714                     	;# 
   694  0715                     	;# 
   695  0716                     	;# 
   696  0717                     	;# 
   697  0718                     	;# 
   698  0719                     	;# 
   699  0891                     	;# 
   700  0891                     	;# 
   701  0891                     	;# 
   702  0891                     	;# 
   703  0891                     	;# 
   704  0891                     	;# 
   705  0892                     	;# 
   706  0892                     	;# 
   707  0892                     	;# 
   708  0893                     	;# 
   709  0893                     	;# 
   710  0893                     	;# 
   711  0893                     	;# 
   712  0893                     	;# 
   713  0893                     	;# 
   714  0894                     	;# 
   715  0894                     	;# 
   716  0894                     	;# 
   717  0895                     	;# 
   718  0895                     	;# 
   719  0895                     	;# 
   720  0896                     	;# 
   721  0896                     	;# 
   722  0896                     	;# 
   723  089B                     	;# 
   724  0911                     	;# 
   725  0912                     	;# 
   726  0913                     	;# 
   727  0914                     	;# 
   728  0915                     	;# 
   729  0916                     	;# 
   730  0918                     	;# 
   731  0919                     	;# 
   732  091A                     	;# 
   733  091B                     	;# 
   734  091C                     	;# 
   735  091D                     	;# 
   736  091E                     	;# 
   737  091F                     	;# 
   738  0E0F                     	;# 
   739  0E10                     	;# 
   740  0E11                     	;# 
   741  0E12                     	;# 
   742  0E13                     	;# 
   743  0E14                     	;# 
   744  0E15                     	;# 
   745  0E16                     	;# 
   746  0E17                     	;# 
   747  0E18                     	;# 
   748  0E19                     	;# 
   749  0E1A                     	;# 
   750  0E1B                     	;# 
   751  0E1C                     	;# 
   752  0E1D                     	;# 
   753  0E1E                     	;# 
   754  0E1F                     	;# 
   755  0E20                     	;# 
   756  0E21                     	;# 
   757  0E22                     	;# 
   758  0E24                     	;# 
   759  0E25                     	;# 
   760  0E28                     	;# 
   761  0E29                     	;# 
   762  0E2A                     	;# 
   763  0E2B                     	;# 
   764  0E2C                     	;# 
   765  0E2D                     	;# 
   766  0E2E                     	;# 
   767  0E2F                     	;# 
   768  0E90                     	;# 
   769  0E91                     	;# 
   770  0E92                     	;# 
   771  0E94                     	;# 
   772  0E95                     	;# 
   773  0E9C                     	;# 
   774  0E9D                     	;# 
   775  0E9E                     	;# 
   776  0E9F                     	;# 
   777  0EA0                     	;# 
   778  0EA1                     	;# 
   779  0EA2                     	;# 
   780  0EA3                     	;# 
   781  0EA4                     	;# 
   782  0EA5                     	;# 
   783  0EA6                     	;# 
   784  0EA7                     	;# 
   785  0F0F                     	;# 
   786  0F10                     	;# 
   787  0F11                     	;# 
   788  0F12                     	;# 
   789  0F13                     	;# 
   790  0F14                     	;# 
   791  0F15                     	;# 
   792  0F16                     	;# 
   793  0F17                     	;# 
   794  0F18                     	;# 
   795  0F19                     	;# 
   796  0F1A                     	;# 
   797  0F1B                     	;# 
   798  0F1C                     	;# 
   799  0F1D                     	;# 
   800  0F1E                     	;# 
   801  0F1F                     	;# 
   802  0F20                     	;# 
   803  0F21                     	;# 
   804  0F22                     	;# 
   805  0F23                     	;# 
   806  0F24                     	;# 
   807  0F25                     	;# 
   808  0F26                     	;# 
   809  0F27                     	;# 
   810  0F28                     	;# 
   811  0F29                     	;# 
   812  0F2A                     	;# 
   813  0F2B                     	;# 
   814  0F2C                     	;# 
   815  0F2D                     	;# 
   816  0F2E                     	;# 
   817  0F2F                     	;# 
   818  0F30                     	;# 
   819  0F31                     	;# 
   820  0F32                     	;# 
   821  0F33                     	;# 
   822  0F34                     	;# 
   823  0F35                     	;# 
   824  0F36                     	;# 
   825  0F37                     	;# 
   826  0FE4                     	;# 
   827  0FE5                     	;# 
   828  0FE6                     	;# 
   829  0FE7                     	;# 
   830  0FE8                     	;# 
   831  0FE9                     	;# 
   832  0FEA                     	;# 
   833  0FEB                     	;# 
   834  0FED                     	;# 
   835  0FEE                     	;# 
   836  0FEF                     	;# 
   837  0000                     	;# 
   838  0001                     	;# 
   839  0002                     	;# 
   840  0003                     	;# 
   841  0004                     	;# 
   842  0005                     	;# 
   843  0006                     	;# 
   844  0007                     	;# 
   845  0008                     	;# 
   846  0009                     	;# 
   847  000A                     	;# 
   848  000B                     	;# 
   849  000C                     	;# 
   850  000D                     	;# 
   851  000E                     	;# 
   852  0010                     	;# 
   853  0011                     	;# 
   854  0012                     	;# 
   855  0013                     	;# 
   856  0014                     	;# 
   857  0015                     	;# 
   858  0015                     	;# 
   859  0016                     	;# 
   860  0016                     	;# 
   861  0017                     	;# 
   862  0018                     	;# 
   863  0019                     	;# 
   864  0019                     	;# 
   865  001A                     	;# 
   866  001B                     	;# 
   867  001C                     	;# 
   868  001D                     	;# 
   869  001E                     	;# 
   870  001F                     	;# 
   871  008C                     	;# 
   872  008D                     	;# 
   873  008E                     	;# 
   874  0090                     	;# 
   875  0091                     	;# 
   876  0092                     	;# 
   877  0093                     	;# 
   878  0094                     	;# 
   879  0097                     	;# 
   880  009B                     	;# 
   881  009B                     	;# 
   882  009C                     	;# 
   883  009D                     	;# 
   884  009E                     	;# 
   885  009F                     	;# 
   886  010C                     	;# 
   887  010D                     	;# 
   888  010E                     	;# 
   889  0111                     	;# 
   890  0112                     	;# 
   891  0113                     	;# 
   892  0114                     	;# 
   893  0115                     	;# 
   894  0116                     	;# 
   895  0117                     	;# 
   896  0118                     	;# 
   897  0119                     	;# 
   898  018C                     	;# 
   899  018D                     	;# 
   900  018E                     	;# 
   901  0197                     	;# 
   902  0199                     	;# 
   903  0199                     	;# 
   904  0199                     	;# 
   905  019A                     	;# 
   906  019A                     	;# 
   907  019A                     	;# 
   908  019B                     	;# 
   909  019B                     	;# 
   910  019B                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019C                     	;# 
   914  019C                     	;# 
   915  019C                     	;# 
   916  019D                     	;# 
   917  019D                     	;# 
   918  019D                     	;# 
   919  019E                     	;# 
   920  019E                     	;# 
   921  019E                     	;# 
   922  019F                     	;# 
   923  019F                     	;# 
   924  019F                     	;# 
   925  019F                     	;# 
   926  019F                     	;# 
   927  020C                     	;# 
   928  020D                     	;# 
   929  020E                     	;# 
   930  0211                     	;# 
   931  0211                     	;# 
   932  0212                     	;# 
   933  0212                     	;# 
   934  0213                     	;# 
   935  0213                     	;# 
   936  0214                     	;# 
   937  0214                     	;# 
   938  0215                     	;# 
   939  0215                     	;# 
   940  0215                     	;# 
   941  0215                     	;# 
   942  0216                     	;# 
   943  0216                     	;# 
   944  0217                     	;# 
   945  0217                     	;# 
   946  0219                     	;# 
   947  021A                     	;# 
   948  021B                     	;# 
   949  021C                     	;# 
   950  021D                     	;# 
   951  021D                     	;# 
   952  021E                     	;# 
   953  021F                     	;# 
   954  028C                     	;# 
   955  028D                     	;# 
   956  028E                     	;# 
   957  0291                     	;# 
   958  0291                     	;# 
   959  0292                     	;# 
   960  0293                     	;# 
   961  0294                     	;# 
   962  0295                     	;# 
   963  0295                     	;# 
   964  0296                     	;# 
   965  0297                     	;# 
   966  0298                     	;# 
   967  029F                     	;# 
   968  030C                     	;# 
   969  030D                     	;# 
   970  030E                     	;# 
   971  0311                     	;# 
   972  0311                     	;# 
   973  0312                     	;# 
   974  0313                     	;# 
   975  0314                     	;# 
   976  0315                     	;# 
   977  0315                     	;# 
   978  0316                     	;# 
   979  0317                     	;# 
   980  0318                     	;# 
   981  038C                     	;# 
   982  038D                     	;# 
   983  038E                     	;# 
   984  0391                     	;# 
   985  0392                     	;# 
   986  0393                     	;# 
   987  0394                     	;# 
   988  0395                     	;# 
   989  0396                     	;# 
   990  0397                     	;# 
   991  0398                     	;# 
   992  0399                     	;# 
   993  039A                     	;# 
   994  039C                     	;# 
   995  039D                     	;# 
   996  039E                     	;# 
   997  039F                     	;# 
   998  0411                     	;# 
   999  0411                     	;# 
  1000  0412                     	;# 
  1001  0413                     	;# 
  1002  0414                     	;# 
  1003  0415                     	;# 
  1004  0416                     	;# 
  1005  0417                     	;# 
  1006  0418                     	;# 
  1007  0418                     	;# 
  1008  0419                     	;# 
  1009  041A                     	;# 
  1010  041B                     	;# 
  1011  041C                     	;# 
  1012  041D                     	;# 
  1013  041E                     	;# 
  1014  041F                     	;# 
  1015  0498                     	;# 
  1016  0498                     	;# 
  1017  0499                     	;# 
  1018  049A                     	;# 
  1019  049B                     	;# 
  1020  049B                     	;# 
  1021  049C                     	;# 
  1022  049D                     	;# 
  1023  049E                     	;# 
  1024  049F                     	;# 
  1025  0617                     	;# 
  1026  0618                     	;# 
  1027  0619                     	;# 
  1028  0619                     	;# 
  1029  061A                     	;# 
  1030  061B                     	;# 
  1031  061C                     	;# 
  1032  061C                     	;# 
  1033  061F                     	;# 
  1034  0691                     	;# 
  1035  0692                     	;# 
  1036  0693                     	;# 
  1037  0694                     	;# 
  1038  0695                     	;# 
  1039  0696                     	;# 
  1040  0697                     	;# 
  1041  0698                     	;# 
  1042  0699                     	;# 
  1043  0711                     	;# 
  1044  0712                     	;# 
  1045  0713                     	;# 
  1046  0714                     	;# 
  1047  0715                     	;# 
  1048  0716                     	;# 
  1049  0717                     	;# 
  1050  0718                     	;# 
  1051  0719                     	;# 
  1052  0891                     	;# 
  1053  0891                     	;# 
  1054  0891                     	;# 
  1055  0891                     	;# 
  1056  0891                     	;# 
  1057  0891                     	;# 
  1058  0892                     	;# 
  1059  0892                     	;# 
  1060  0892                     	;# 
  1061  0893                     	;# 
  1062  0893                     	;# 
  1063  0893                     	;# 
  1064  0893                     	;# 
  1065  0893                     	;# 
  1066  0893                     	;# 
  1067  0894                     	;# 
  1068  0894                     	;# 
  1069  0894                     	;# 
  1070  0895                     	;# 
  1071  0895                     	;# 
  1072  0895                     	;# 
  1073  0896                     	;# 
  1074  0896                     	;# 
  1075  0896                     	;# 
  1076  089B                     	;# 
  1077  0911                     	;# 
  1078  0912                     	;# 
  1079  0913                     	;# 
  1080  0914                     	;# 
  1081  0915                     	;# 
  1082  0916                     	;# 
  1083  0918                     	;# 
  1084  0919                     	;# 
  1085  091A                     	;# 
  1086  091B                     	;# 
  1087  091C                     	;# 
  1088  091D                     	;# 
  1089  091E                     	;# 
  1090  091F                     	;# 
  1091  0E0F                     	;# 
  1092  0E10                     	;# 
  1093  0E11                     	;# 
  1094  0E12                     	;# 
  1095  0E13                     	;# 
  1096  0E14                     	;# 
  1097  0E15                     	;# 
  1098  0E16                     	;# 
  1099  0E17                     	;# 
  1100  0E18                     	;# 
  1101  0E19                     	;# 
  1102  0E1A                     	;# 
  1103  0E1B                     	;# 
  1104  0E1C                     	;# 
  1105  0E1D                     	;# 
  1106  0E1E                     	;# 
  1107  0E1F                     	;# 
  1108  0E20                     	;# 
  1109  0E21                     	;# 
  1110  0E22                     	;# 
  1111  0E24                     	;# 
  1112  0E25                     	;# 
  1113  0E28                     	;# 
  1114  0E29                     	;# 
  1115  0E2A                     	;# 
  1116  0E2B                     	;# 
  1117  0E2C                     	;# 
  1118  0E2D                     	;# 
  1119  0E2E                     	;# 
  1120  0E2F                     	;# 
  1121  0E90                     	;# 
  1122  0E91                     	;# 
  1123  0E92                     	;# 
  1124  0E94                     	;# 
  1125  0E95                     	;# 
  1126  0E9C                     	;# 
  1127  0E9D                     	;# 
  1128  0E9E                     	;# 
  1129  0E9F                     	;# 
  1130  0EA0                     	;# 
  1131  0EA1                     	;# 
  1132  0EA2                     	;# 
  1133  0EA3                     	;# 
  1134  0EA4                     	;# 
  1135  0EA5                     	;# 
  1136  0EA6                     	;# 
  1137  0EA7                     	;# 
  1138  0F0F                     	;# 
  1139  0F10                     	;# 
  1140  0F11                     	;# 
  1141  0F12                     	;# 
  1142  0F13                     	;# 
  1143  0F14                     	;# 
  1144  0F15                     	;# 
  1145  0F16                     	;# 
  1146  0F17                     	;# 
  1147  0F18                     	;# 
  1148  0F19                     	;# 
  1149  0F1A                     	;# 
  1150  0F1B                     	;# 
  1151  0F1C                     	;# 
  1152  0F1D                     	;# 
  1153  0F1E                     	;# 
  1154  0F1F                     	;# 
  1155  0F20                     	;# 
  1156  0F21                     	;# 
  1157  0F22                     	;# 
  1158  0F23                     	;# 
  1159  0F24                     	;# 
  1160  0F25                     	;# 
  1161  0F26                     	;# 
  1162  0F27                     	;# 
  1163  0F28                     	;# 
  1164  0F29                     	;# 
  1165  0F2A                     	;# 
  1166  0F2B                     	;# 
  1167  0F2C                     	;# 
  1168  0F2D                     	;# 
  1169  0F2E                     	;# 
  1170  0F2F                     	;# 
  1171  0F30                     	;# 
  1172  0F31                     	;# 
  1173  0F32                     	;# 
  1174  0F33                     	;# 
  1175  0F34                     	;# 
  1176  0F35                     	;# 
  1177  0F36                     	;# 
  1178  0F37                     	;# 
  1179  0FE4                     	;# 
  1180  0FE5                     	;# 
  1181  0FE6                     	;# 
  1182  0FE7                     	;# 
  1183  0FE8                     	;# 
  1184  0FE9                     	;# 
  1185  0FEA                     	;# 
  1186  0FEB                     	;# 
  1187  0FED                     	;# 
  1188  0FEE                     	;# 
  1189  0FEF                     	;# 
  1190  0000                     	;# 
  1191  0001                     	;# 
  1192  0002                     	;# 
  1193  0003                     	;# 
  1194  0004                     	;# 
  1195  0005                     	;# 
  1196  0006                     	;# 
  1197  0007                     	;# 
  1198  0008                     	;# 
  1199  0009                     	;# 
  1200  000A                     	;# 
  1201  000B                     	;# 
  1202  000C                     	;# 
  1203  000D                     	;# 
  1204  000E                     	;# 
  1205  0010                     	;# 
  1206  0011                     	;# 
  1207  0012                     	;# 
  1208  0013                     	;# 
  1209  0014                     	;# 
  1210  0015                     	;# 
  1211  0015                     	;# 
  1212  0016                     	;# 
  1213  0016                     	;# 
  1214  0017                     	;# 
  1215  0018                     	;# 
  1216  0019                     	;# 
  1217  0019                     	;# 
  1218  001A                     	;# 
  1219  001B                     	;# 
  1220  001C                     	;# 
  1221  001D                     	;# 
  1222  001E                     	;# 
  1223  001F                     	;# 
  1224  008C                     	;# 
  1225  008D                     	;# 
  1226  008E                     	;# 
  1227  0090                     	;# 
  1228  0091                     	;# 
  1229  0092                     	;# 
  1230  0093                     	;# 
  1231  0094                     	;# 
  1232  0097                     	;# 
  1233  009B                     	;# 
  1234  009B                     	;# 
  1235  009C                     	;# 
  1236  009D                     	;# 
  1237  009E                     	;# 
  1238  009F                     	;# 
  1239  010C                     	;# 
  1240  010D                     	;# 
  1241  010E                     	;# 
  1242  0111                     	;# 
  1243  0112                     	;# 
  1244  0113                     	;# 
  1245  0114                     	;# 
  1246  0115                     	;# 
  1247  0116                     	;# 
  1248  0117                     	;# 
  1249  0118                     	;# 
  1250  0119                     	;# 
  1251  018C                     	;# 
  1252  018D                     	;# 
  1253  018E                     	;# 
  1254  0197                     	;# 
  1255  0199                     	;# 
  1256  0199                     	;# 
  1257  0199                     	;# 
  1258  019A                     	;# 
  1259  019A                     	;# 
  1260  019A                     	;# 
  1261  019B                     	;# 
  1262  019B                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019C                     	;# 
  1267  019C                     	;# 
  1268  019C                     	;# 
  1269  019D                     	;# 
  1270  019D                     	;# 
  1271  019D                     	;# 
  1272  019E                     	;# 
  1273  019E                     	;# 
  1274  019E                     	;# 
  1275  019F                     	;# 
  1276  019F                     	;# 
  1277  019F                     	;# 
  1278  019F                     	;# 
  1279  019F                     	;# 
  1280  020C                     	;# 
  1281  020D                     	;# 
  1282  020E                     	;# 
  1283  0211                     	;# 
  1284  0211                     	;# 
  1285  0212                     	;# 
  1286  0212                     	;# 
  1287  0213                     	;# 
  1288  0213                     	;# 
  1289  0214                     	;# 
  1290  0214                     	;# 
  1291  0215                     	;# 
  1292  0215                     	;# 
  1293  0215                     	;# 
  1294  0215                     	;# 
  1295  0216                     	;# 
  1296  0216                     	;# 
  1297  0217                     	;# 
  1298  0217                     	;# 
  1299  0219                     	;# 
  1300  021A                     	;# 
  1301  021B                     	;# 
  1302  021C                     	;# 
  1303  021D                     	;# 
  1304  021D                     	;# 
  1305  021E                     	;# 
  1306  021F                     	;# 
  1307  028C                     	;# 
  1308  028D                     	;# 
  1309  028E                     	;# 
  1310  0291                     	;# 
  1311  0291                     	;# 
  1312  0292                     	;# 
  1313  0293                     	;# 
  1314  0294                     	;# 
  1315  0295                     	;# 
  1316  0295                     	;# 
  1317  0296                     	;# 
  1318  0297                     	;# 
  1319  0298                     	;# 
  1320  029F                     	;# 
  1321  030C                     	;# 
  1322  030D                     	;# 
  1323  030E                     	;# 
  1324  0311                     	;# 
  1325  0311                     	;# 
  1326  0312                     	;# 
  1327  0313                     	;# 
  1328  0314                     	;# 
  1329  0315                     	;# 
  1330  0315                     	;# 
  1331  0316                     	;# 
  1332  0317                     	;# 
  1333  0318                     	;# 
  1334  038C                     	;# 
  1335  038D                     	;# 
  1336  038E                     	;# 
  1337  0391                     	;# 
  1338  0392                     	;# 
  1339  0393                     	;# 
  1340  0394                     	;# 
  1341  0395                     	;# 
  1342  0396                     	;# 
  1343  0397                     	;# 
  1344  0398                     	;# 
  1345  0399                     	;# 
  1346  039A                     	;# 
  1347  039C                     	;# 
  1348  039D                     	;# 
  1349  039E                     	;# 
  1350  039F                     	;# 
  1351  0411                     	;# 
  1352  0411                     	;# 
  1353  0412                     	;# 
  1354  0413                     	;# 
  1355  0414                     	;# 
  1356  0415                     	;# 
  1357  0416                     	;# 
  1358  0417                     	;# 
  1359  0418                     	;# 
  1360  0418                     	;# 
  1361  0419                     	;# 
  1362  041A                     	;# 
  1363  041B                     	;# 
  1364  041C                     	;# 
  1365  041D                     	;# 
  1366  041E                     	;# 
  1367  041F                     	;# 
  1368  0498                     	;# 
  1369  0498                     	;# 
  1370  0499                     	;# 
  1371  049A                     	;# 
  1372  049B                     	;# 
  1373  049B                     	;# 
  1374  049C                     	;# 
  1375  049D                     	;# 
  1376  049E                     	;# 
  1377  049F                     	;# 
  1378  0617                     	;# 
  1379  0618                     	;# 
  1380  0619                     	;# 
  1381  0619                     	;# 
  1382  061A                     	;# 
  1383  061B                     	;# 
  1384  061C                     	;# 
  1385  061C                     	;# 
  1386  061F                     	;# 
  1387  0691                     	;# 
  1388  0692                     	;# 
  1389  0693                     	;# 
  1390  0694                     	;# 
  1391  0695                     	;# 
  1392  0696                     	;# 
  1393  0697                     	;# 
  1394  0698                     	;# 
  1395  0699                     	;# 
  1396  0711                     	;# 
  1397  0712                     	;# 
  1398  0713                     	;# 
  1399  0714                     	;# 
  1400  0715                     	;# 
  1401  0716                     	;# 
  1402  0717                     	;# 
  1403  0718                     	;# 
  1404  0719                     	;# 
  1405  0891                     	;# 
  1406  0891                     	;# 
  1407  0891                     	;# 
  1408  0891                     	;# 
  1409  0891                     	;# 
  1410  0891                     	;# 
  1411  0892                     	;# 
  1412  0892                     	;# 
  1413  0892                     	;# 
  1414  0893                     	;# 
  1415  0893                     	;# 
  1416  0893                     	;# 
  1417  0893                     	;# 
  1418  0893                     	;# 
  1419  0893                     	;# 
  1420  0894                     	;# 
  1421  0894                     	;# 
  1422  0894                     	;# 
  1423  0895                     	;# 
  1424  0895                     	;# 
  1425  0895                     	;# 
  1426  0896                     	;# 
  1427  0896                     	;# 
  1428  0896                     	;# 
  1429  089B                     	;# 
  1430  0911                     	;# 
  1431  0912                     	;# 
  1432  0913                     	;# 
  1433  0914                     	;# 
  1434  0915                     	;# 
  1435  0916                     	;# 
  1436  0918                     	;# 
  1437  0919                     	;# 
  1438  091A                     	;# 
  1439  091B                     	;# 
  1440  091C                     	;# 
  1441  091D                     	;# 
  1442  091E                     	;# 
  1443  091F                     	;# 
  1444  0E0F                     	;# 
  1445  0E10                     	;# 
  1446  0E11                     	;# 
  1447  0E12                     	;# 
  1448  0E13                     	;# 
  1449  0E14                     	;# 
  1450  0E15                     	;# 
  1451  0E16                     	;# 
  1452  0E17                     	;# 
  1453  0E18                     	;# 
  1454  0E19                     	;# 
  1455  0E1A                     	;# 
  1456  0E1B                     	;# 
  1457  0E1C                     	;# 
  1458  0E1D                     	;# 
  1459  0E1E                     	;# 
  1460  0E1F                     	;# 
  1461  0E20                     	;# 
  1462  0E21                     	;# 
  1463  0E22                     	;# 
  1464  0E24                     	;# 
  1465  0E25                     	;# 
  1466  0E28                     	;# 
  1467  0E29                     	;# 
  1468  0E2A                     	;# 
  1469  0E2B                     	;# 
  1470  0E2C                     	;# 
  1471  0E2D                     	;# 
  1472  0E2E                     	;# 
  1473  0E2F                     	;# 
  1474  0E90                     	;# 
  1475  0E91                     	;# 
  1476  0E92                     	;# 
  1477  0E94                     	;# 
  1478  0E95                     	;# 
  1479  0E9C                     	;# 
  1480  0E9D                     	;# 
  1481  0E9E                     	;# 
  1482  0E9F                     	;# 
  1483  0EA0                     	;# 
  1484  0EA1                     	;# 
  1485  0EA2                     	;# 
  1486  0EA3                     	;# 
  1487  0EA4                     	;# 
  1488  0EA5                     	;# 
  1489  0EA6                     	;# 
  1490  0EA7                     	;# 
  1491  0F0F                     	;# 
  1492  0F10                     	;# 
  1493  0F11                     	;# 
  1494  0F12                     	;# 
  1495  0F13                     	;# 
  1496  0F14                     	;# 
  1497  0F15                     	;# 
  1498  0F16                     	;# 
  1499  0F17                     	;# 
  1500  0F18                     	;# 
  1501  0F19                     	;# 
  1502  0F1A                     	;# 
  1503  0F1B                     	;# 
  1504  0F1C                     	;# 
  1505  0F1D                     	;# 
  1506  0F1E                     	;# 
  1507  0F1F                     	;# 
  1508  0F20                     	;# 
  1509  0F21                     	;# 
  1510  0F22                     	;# 
  1511  0F23                     	;# 
  1512  0F24                     	;# 
  1513  0F25                     	;# 
  1514  0F26                     	;# 
  1515  0F27                     	;# 
  1516  0F28                     	;# 
  1517  0F29                     	;# 
  1518  0F2A                     	;# 
  1519  0F2B                     	;# 
  1520  0F2C                     	;# 
  1521  0F2D                     	;# 
  1522  0F2E                     	;# 
  1523  0F2F                     	;# 
  1524  0F30                     	;# 
  1525  0F31                     	;# 
  1526  0F32                     	;# 
  1527  0F33                     	;# 
  1528  0F34                     	;# 
  1529  0F35                     	;# 
  1530  0F36                     	;# 
  1531  0F37                     	;# 
  1532  0FE4                     	;# 
  1533  0FE5                     	;# 
  1534  0FE6                     	;# 
  1535  0FE7                     	;# 
  1536  0FE8                     	;# 
  1537  0FE9                     	;# 
  1538  0FEA                     	;# 
  1539  0FEB                     	;# 
  1540  0FED                     	;# 
  1541  0FEE                     	;# 
  1542  0FEF                     	;# 
  1543  0000                     	;# 
  1544  0001                     	;# 
  1545  0002                     	;# 
  1546  0003                     	;# 
  1547  0004                     	;# 
  1548  0005                     	;# 
  1549  0006                     	;# 
  1550  0007                     	;# 
  1551  0008                     	;# 
  1552  0009                     	;# 
  1553  000A                     	;# 
  1554  000B                     	;# 
  1555  000C                     	;# 
  1556  000D                     	;# 
  1557  000E                     	;# 
  1558  0010                     	;# 
  1559  0011                     	;# 
  1560  0012                     	;# 
  1561  0013                     	;# 
  1562  0014                     	;# 
  1563  0015                     	;# 
  1564  0015                     	;# 
  1565  0016                     	;# 
  1566  0016                     	;# 
  1567  0017                     	;# 
  1568  0018                     	;# 
  1569  0019                     	;# 
  1570  0019                     	;# 
  1571  001A                     	;# 
  1572  001B                     	;# 
  1573  001C                     	;# 
  1574  001D                     	;# 
  1575  001E                     	;# 
  1576  001F                     	;# 
  1577  008C                     	;# 
  1578  008D                     	;# 
  1579  008E                     	;# 
  1580  0090                     	;# 
  1581  0091                     	;# 
  1582  0092                     	;# 
  1583  0093                     	;# 
  1584  0094                     	;# 
  1585  0097                     	;# 
  1586  009B                     	;# 
  1587  009B                     	;# 
  1588  009C                     	;# 
  1589  009D                     	;# 
  1590  009E                     	;# 
  1591  009F                     	;# 
  1592  010C                     	;# 
  1593  010D                     	;# 
  1594  010E                     	;# 
  1595  0111                     	;# 
  1596  0112                     	;# 
  1597  0113                     	;# 
  1598  0114                     	;# 
  1599  0115                     	;# 
  1600  0116                     	;# 
  1601  0117                     	;# 
  1602  0118                     	;# 
  1603  0119                     	;# 
  1604  018C                     	;# 
  1605  018D                     	;# 
  1606  018E                     	;# 
  1607  0197                     	;# 
  1608  0199                     	;# 
  1609  0199                     	;# 
  1610  0199                     	;# 
  1611  019A                     	;# 
  1612  019A                     	;# 
  1613  019A                     	;# 
  1614  019B                     	;# 
  1615  019B                     	;# 
  1616  019B                     	;# 
  1617  019B                     	;# 
  1618  019B                     	;# 
  1619  019C                     	;# 
  1620  019C                     	;# 
  1621  019C                     	;# 
  1622  019D                     	;# 
  1623  019D                     	;# 
  1624  019D                     	;# 
  1625  019E                     	;# 
  1626  019E                     	;# 
  1627  019E                     	;# 
  1628  019F                     	;# 
  1629  019F                     	;# 
  1630  019F                     	;# 
  1631  019F                     	;# 
  1632  019F                     	;# 
  1633  020C                     	;# 
  1634  020D                     	;# 
  1635  020E                     	;# 
  1636  0211                     	;# 
  1637  0211                     	;# 
  1638  0212                     	;# 
  1639  0212                     	;# 
  1640  0213                     	;# 
  1641  0213                     	;# 
  1642  0214                     	;# 
  1643  0214                     	;# 
  1644  0215                     	;# 
  1645  0215                     	;# 
  1646  0215                     	;# 
  1647  0215                     	;# 
  1648  0216                     	;# 
  1649  0216                     	;# 
  1650  0217                     	;# 
  1651  0217                     	;# 
  1652  0219                     	;# 
  1653  021A                     	;# 
  1654  021B                     	;# 
  1655  021C                     	;# 
  1656  021D                     	;# 
  1657  021D                     	;# 
  1658  021E                     	;# 
  1659  021F                     	;# 
  1660  028C                     	;# 
  1661  028D                     	;# 
  1662  028E                     	;# 
  1663  0291                     	;# 
  1664  0291                     	;# 
  1665  0292                     	;# 
  1666  0293                     	;# 
  1667  0294                     	;# 
  1668  0295                     	;# 
  1669  0295                     	;# 
  1670  0296                     	;# 
  1671  0297                     	;# 
  1672  0298                     	;# 
  1673  029F                     	;# 
  1674  030C                     	;# 
  1675  030D                     	;# 
  1676  030E                     	;# 
  1677  0311                     	;# 
  1678  0311                     	;# 
  1679  0312                     	;# 
  1680  0313                     	;# 
  1681  0314                     	;# 
  1682  0315                     	;# 
  1683  0315                     	;# 
  1684  0316                     	;# 
  1685  0317                     	;# 
  1686  0318                     	;# 
  1687  038C                     	;# 
  1688  038D                     	;# 
  1689  038E                     	;# 
  1690  0391                     	;# 
  1691  0392                     	;# 
  1692  0393                     	;# 
  1693  0394                     	;# 
  1694  0395                     	;# 
  1695  0396                     	;# 
  1696  0397                     	;# 
  1697  0398                     	;# 
  1698  0399                     	;# 
  1699  039A                     	;# 
  1700  039C                     	;# 
  1701  039D                     	;# 
  1702  039E                     	;# 
  1703  039F                     	;# 
  1704  0411                     	;# 
  1705  0411                     	;# 
  1706  0412                     	;# 
  1707  0413                     	;# 
  1708  0414                     	;# 
  1709  0415                     	;# 
  1710  0416                     	;# 
  1711  0417                     	;# 
  1712  0418                     	;# 
  1713  0418                     	;# 
  1714  0419                     	;# 
  1715  041A                     	;# 
  1716  041B                     	;# 
  1717  041C                     	;# 
  1718  041D                     	;# 
  1719  041E                     	;# 
  1720  041F                     	;# 
  1721  0498                     	;# 
  1722  0498                     	;# 
  1723  0499                     	;# 
  1724  049A                     	;# 
  1725  049B                     	;# 
  1726  049B                     	;# 
  1727  049C                     	;# 
  1728  049D                     	;# 
  1729  049E                     	;# 
  1730  049F                     	;# 
  1731  0617                     	;# 
  1732  0618                     	;# 
  1733  0619                     	;# 
  1734  0619                     	;# 
  1735  061A                     	;# 
  1736  061B                     	;# 
  1737  061C                     	;# 
  1738  061C                     	;# 
  1739  061F                     	;# 
  1740  0691                     	;# 
  1741  0692                     	;# 
  1742  0693                     	;# 
  1743  0694                     	;# 
  1744  0695                     	;# 
  1745  0696                     	;# 
  1746  0697                     	;# 
  1747  0698                     	;# 
  1748  0699                     	;# 
  1749  0711                     	;# 
  1750  0712                     	;# 
  1751  0713                     	;# 
  1752  0714                     	;# 
  1753  0715                     	;# 
  1754  0716                     	;# 
  1755  0717                     	;# 
  1756  0718                     	;# 
  1757  0719                     	;# 
  1758  0891                     	;# 
  1759  0891                     	;# 
  1760  0891                     	;# 
  1761  0891                     	;# 
  1762  0891                     	;# 
  1763  0891                     	;# 
  1764  0892                     	;# 
  1765  0892                     	;# 
  1766  0892                     	;# 
  1767  0893                     	;# 
  1768  0893                     	;# 
  1769  0893                     	;# 
  1770  0893                     	;# 
  1771  0893                     	;# 
  1772  0893                     	;# 
  1773  0894                     	;# 
  1774  0894                     	;# 
  1775  0894                     	;# 
  1776  0895                     	;# 
  1777  0895                     	;# 
  1778  0895                     	;# 
  1779  0896                     	;# 
  1780  0896                     	;# 
  1781  0896                     	;# 
  1782  089B                     	;# 
  1783  0911                     	;# 
  1784  0912                     	;# 
  1785  0913                     	;# 
  1786  0914                     	;# 
  1787  0915                     	;# 
  1788  0916                     	;# 
  1789  0918                     	;# 
  1790  0919                     	;# 
  1791  091A                     	;# 
  1792  091B                     	;# 
  1793  091C                     	;# 
  1794  091D                     	;# 
  1795  091E                     	;# 
  1796  091F                     	;# 
  1797  0E0F                     	;# 
  1798  0E10                     	;# 
  1799  0E11                     	;# 
  1800  0E12                     	;# 
  1801  0E13                     	;# 
  1802  0E14                     	;# 
  1803  0E15                     	;# 
  1804  0E16                     	;# 
  1805  0E17                     	;# 
  1806  0E18                     	;# 
  1807  0E19                     	;# 
  1808  0E1A                     	;# 
  1809  0E1B                     	;# 
  1810  0E1C                     	;# 
  1811  0E1D                     	;# 
  1812  0E1E                     	;# 
  1813  0E1F                     	;# 
  1814  0E20                     	;# 
  1815  0E21                     	;# 
  1816  0E22                     	;# 
  1817  0E24                     	;# 
  1818  0E25                     	;# 
  1819  0E28                     	;# 
  1820  0E29                     	;# 
  1821  0E2A                     	;# 
  1822  0E2B                     	;# 
  1823  0E2C                     	;# 
  1824  0E2D                     	;# 
  1825  0E2E                     	;# 
  1826  0E2F                     	;# 
  1827  0E90                     	;# 
  1828  0E91                     	;# 
  1829  0E92                     	;# 
  1830  0E94                     	;# 
  1831  0E95                     	;# 
  1832  0E9C                     	;# 
  1833  0E9D                     	;# 
  1834  0E9E                     	;# 
  1835  0E9F                     	;# 
  1836  0EA0                     	;# 
  1837  0EA1                     	;# 
  1838  0EA2                     	;# 
  1839  0EA3                     	;# 
  1840  0EA4                     	;# 
  1841  0EA5                     	;# 
  1842  0EA6                     	;# 
  1843  0EA7                     	;# 
  1844  0F0F                     	;# 
  1845  0F10                     	;# 
  1846  0F11                     	;# 
  1847  0F12                     	;# 
  1848  0F13                     	;# 
  1849  0F14                     	;# 
  1850  0F15                     	;# 
  1851  0F16                     	;# 
  1852  0F17                     	;# 
  1853  0F18                     	;# 
  1854  0F19                     	;# 
  1855  0F1A                     	;# 
  1856  0F1B                     	;# 
  1857  0F1C                     	;# 
  1858  0F1D                     	;# 
  1859  0F1E                     	;# 
  1860  0F1F                     	;# 
  1861  0F20                     	;# 
  1862  0F21                     	;# 
  1863  0F22                     	;# 
  1864  0F23                     	;# 
  1865  0F24                     	;# 
  1866  0F25                     	;# 
  1867  0F26                     	;# 
  1868  0F27                     	;# 
  1869  0F28                     	;# 
  1870  0F29                     	;# 
  1871  0F2A                     	;# 
  1872  0F2B                     	;# 
  1873  0F2C                     	;# 
  1874  0F2D                     	;# 
  1875  0F2E                     	;# 
  1876  0F2F                     	;# 
  1877  0F30                     	;# 
  1878  0F31                     	;# 
  1879  0F32                     	;# 
  1880  0F33                     	;# 
  1881  0F34                     	;# 
  1882  0F35                     	;# 
  1883  0F36                     	;# 
  1884  0F37                     	;# 
  1885  0FE4                     	;# 
  1886  0FE5                     	;# 
  1887  0FE6                     	;# 
  1888  0FE7                     	;# 
  1889  0FE8                     	;# 
  1890  0FE9                     	;# 
  1891  0FEA                     	;# 
  1892  0FEB                     	;# 
  1893  0FED                     	;# 
  1894  0FEE                     	;# 
  1895  0FEF                     	;# 
  1896  0000                     	;# 
  1897  0001                     	;# 
  1898  0002                     	;# 
  1899  0003                     	;# 
  1900  0004                     	;# 
  1901  0005                     	;# 
  1902  0006                     	;# 
  1903  0007                     	;# 
  1904  0008                     	;# 
  1905  0009                     	;# 
  1906  000A                     	;# 
  1907  000B                     	;# 
  1908  000C                     	;# 
  1909  000D                     	;# 
  1910  000E                     	;# 
  1911  0010                     	;# 
  1912  0011                     	;# 
  1913  0012                     	;# 
  1914  0013                     	;# 
  1915  0014                     	;# 
  1916  0015                     	;# 
  1917  0015                     	;# 
  1918  0016                     	;# 
  1919  0016                     	;# 
  1920  0017                     	;# 
  1921  0018                     	;# 
  1922  0019                     	;# 
  1923  0019                     	;# 
  1924  001A                     	;# 
  1925  001B                     	;# 
  1926  001C                     	;# 
  1927  001D                     	;# 
  1928  001E                     	;# 
  1929  001F                     	;# 
  1930  008C                     	;# 
  1931  008D                     	;# 
  1932  008E                     	;# 
  1933  0090                     	;# 
  1934  0091                     	;# 
  1935  0092                     	;# 
  1936  0093                     	;# 
  1937  0094                     	;# 
  1938  0097                     	;# 
  1939  009B                     	;# 
  1940  009B                     	;# 
  1941  009C                     	;# 
  1942  009D                     	;# 
  1943  009E                     	;# 
  1944  009F                     	;# 
  1945  010C                     	;# 
  1946  010D                     	;# 
  1947  010E                     	;# 
  1948  0111                     	;# 
  1949  0112                     	;# 
  1950  0113                     	;# 
  1951  0114                     	;# 
  1952  0115                     	;# 
  1953  0116                     	;# 
  1954  0117                     	;# 
  1955  0118                     	;# 
  1956  0119                     	;# 
  1957  018C                     	;# 
  1958  018D                     	;# 
  1959  018E                     	;# 
  1960  0197                     	;# 
  1961  0199                     	;# 
  1962  0199                     	;# 
  1963  0199                     	;# 
  1964  019A                     	;# 
  1965  019A                     	;# 
  1966  019A                     	;# 
  1967  019B                     	;# 
  1968  019B                     	;# 
  1969  019B                     	;# 
  1970  019B                     	;# 
  1971  019B                     	;# 
  1972  019C                     	;# 
  1973  019C                     	;# 
  1974  019C                     	;# 
  1975  019D                     	;# 
  1976  019D                     	;# 
  1977  019D                     	;# 
  1978  019E                     	;# 
  1979  019E                     	;# 
  1980  019E                     	;# 
  1981  019F                     	;# 
  1982  019F                     	;# 
  1983  019F                     	;# 
  1984  019F                     	;# 
  1985  019F                     	;# 
  1986  020C                     	;# 
  1987  020D                     	;# 
  1988  020E                     	;# 
  1989  0211                     	;# 
  1990  0211                     	;# 
  1991  0212                     	;# 
  1992  0212                     	;# 
  1993  0213                     	;# 
  1994  0213                     	;# 
  1995  0214                     	;# 
  1996  0214                     	;# 
  1997  0215                     	;# 
  1998  0215                     	;# 
  1999  0215                     	;# 
  2000  0215                     	;# 
  2001  0216                     	;# 
  2002  0216                     	;# 
  2003  0217                     	;# 
  2004  0217                     	;# 
  2005  0219                     	;# 
  2006  021A                     	;# 
  2007  021B                     	;# 
  2008  021C                     	;# 
  2009  021D                     	;# 
  2010  021D                     	;# 
  2011  021E                     	;# 
  2012  021F                     	;# 
  2013  028C                     	;# 
  2014  028D                     	;# 
  2015  028E                     	;# 
  2016  0291                     	;# 
  2017  0291                     	;# 
  2018  0292                     	;# 
  2019  0293                     	;# 
  2020  0294                     	;# 
  2021  0295                     	;# 
  2022  0295                     	;# 
  2023  0296                     	;# 
  2024  0297                     	;# 
  2025  0298                     	;# 
  2026  029F                     	;# 
  2027  030C                     	;# 
  2028  030D                     	;# 
  2029  030E                     	;# 
  2030  0311                     	;# 
  2031  0311                     	;# 
  2032  0312                     	;# 
  2033  0313                     	;# 
  2034  0314                     	;# 
  2035  0315                     	;# 
  2036  0315                     	;# 
  2037  0316                     	;# 
  2038  0317                     	;# 
  2039  0318                     	;# 
  2040  038C                     	;# 
  2041  038D                     	;# 
  2042  038E                     	;# 
  2043  0391                     	;# 
  2044  0392                     	;# 
  2045  0393                     	;# 
  2046  0394                     	;# 
  2047  0395                     	;# 
  2048  0396                     	;# 
  2049  0397                     	;# 
  2050  0398                     	;# 
  2051  0399                     	;# 
  2052  039A                     	;# 
  2053  039C                     	;# 
  2054  039D                     	;# 
  2055  039E                     	;# 
  2056  039F                     	;# 
  2057  0411                     	;# 
  2058  0411                     	;# 
  2059  0412                     	;# 
  2060  0413                     	;# 
  2061  0414                     	;# 
  2062  0415                     	;# 
  2063  0416                     	;# 
  2064  0417                     	;# 
  2065  0418                     	;# 
  2066  0418                     	;# 
  2067  0419                     	;# 
  2068  041A                     	;# 
  2069  041B                     	;# 
  2070  041C                     	;# 
  2071  041D                     	;# 
  2072  041E                     	;# 
  2073  041F                     	;# 
  2074  0498                     	;# 
  2075  0498                     	;# 
  2076  0499                     	;# 
  2077  049A                     	;# 
  2078  049B                     	;# 
  2079  049B                     	;# 
  2080  049C                     	;# 
  2081  049D                     	;# 
  2082  049E                     	;# 
  2083  049F                     	;# 
  2084  0617                     	;# 
  2085  0618                     	;# 
  2086  0619                     	;# 
  2087  0619                     	;# 
  2088  061A                     	;# 
  2089  061B                     	;# 
  2090  061C                     	;# 
  2091  061C                     	;# 
  2092  061F                     	;# 
  2093  0691                     	;# 
  2094  0692                     	;# 
  2095  0693                     	;# 
  2096  0694                     	;# 
  2097  0695                     	;# 
  2098  0696                     	;# 
  2099  0697                     	;# 
  2100  0698                     	;# 
  2101  0699                     	;# 
  2102  0711                     	;# 
  2103  0712                     	;# 
  2104  0713                     	;# 
  2105  0714                     	;# 
  2106  0715                     	;# 
  2107  0716                     	;# 
  2108  0717                     	;# 
  2109  0718                     	;# 
  2110  0719                     	;# 
  2111  0891                     	;# 
  2112  0891                     	;# 
  2113  0891                     	;# 
  2114  0891                     	;# 
  2115  0891                     	;# 
  2116  0891                     	;# 
  2117  0892                     	;# 
  2118  0892                     	;# 
  2119  0892                     	;# 
  2120  0893                     	;# 
  2121  0893                     	;# 
  2122  0893                     	;# 
  2123  0893                     	;# 
  2124  0893                     	;# 
  2125  0893                     	;# 
  2126  0894                     	;# 
  2127  0894                     	;# 
  2128  0894                     	;# 
  2129  0895                     	;# 
  2130  0895                     	;# 
  2131  0895                     	;# 
  2132  0896                     	;# 
  2133  0896                     	;# 
  2134  0896                     	;# 
  2135  089B                     	;# 
  2136  0911                     	;# 
  2137  0912                     	;# 
  2138  0913                     	;# 
  2139  0914                     	;# 
  2140  0915                     	;# 
  2141  0916                     	;# 
  2142  0918                     	;# 
  2143  0919                     	;# 
  2144  091A                     	;# 
  2145  091B                     	;# 
  2146  091C                     	;# 
  2147  091D                     	;# 
  2148  091E                     	;# 
  2149  091F                     	;# 
  2150  0E0F                     	;# 
  2151  0E10                     	;# 
  2152  0E11                     	;# 
  2153  0E12                     	;# 
  2154  0E13                     	;# 
  2155  0E14                     	;# 
  2156  0E15                     	;# 
  2157  0E16                     	;# 
  2158  0E17                     	;# 
  2159  0E18                     	;# 
  2160  0E19                     	;# 
  2161  0E1A                     	;# 
  2162  0E1B                     	;# 
  2163  0E1C                     	;# 
  2164  0E1D                     	;# 
  2165  0E1E                     	;# 
  2166  0E1F                     	;# 
  2167  0E20                     	;# 
  2168  0E21                     	;# 
  2169  0E22                     	;# 
  2170  0E24                     	;# 
  2171  0E25                     	;# 
  2172  0E28                     	;# 
  2173  0E29                     	;# 
  2174  0E2A                     	;# 
  2175  0E2B                     	;# 
  2176  0E2C                     	;# 
  2177  0E2D                     	;# 
  2178  0E2E                     	;# 
  2179  0E2F                     	;# 
  2180  0E90                     	;# 
  2181  0E91                     	;# 
  2182  0E92                     	;# 
  2183  0E94                     	;# 
  2184  0E95                     	;# 
  2185  0E9C                     	;# 
  2186  0E9D                     	;# 
  2187  0E9E                     	;# 
  2188  0E9F                     	;# 
  2189  0EA0                     	;# 
  2190  0EA1                     	;# 
  2191  0EA2                     	;# 
  2192  0EA3                     	;# 
  2193  0EA4                     	;# 
  2194  0EA5                     	;# 
  2195  0EA6                     	;# 
  2196  0EA7                     	;# 
  2197  0F0F                     	;# 
  2198  0F10                     	;# 
  2199  0F11                     	;# 
  2200  0F12                     	;# 
  2201  0F13                     	;# 
  2202  0F14                     	;# 
  2203  0F15                     	;# 
  2204  0F16                     	;# 
  2205  0F17                     	;# 
  2206  0F18                     	;# 
  2207  0F19                     	;# 
  2208  0F1A                     	;# 
  2209  0F1B                     	;# 
  2210  0F1C                     	;# 
  2211  0F1D                     	;# 
  2212  0F1E                     	;# 
  2213  0F1F                     	;# 
  2214  0F20                     	;# 
  2215  0F21                     	;# 
  2216  0F22                     	;# 
  2217  0F23                     	;# 
  2218  0F24                     	;# 
  2219  0F25                     	;# 
  2220  0F26                     	;# 
  2221  0F27                     	;# 
  2222  0F28                     	;# 
  2223  0F29                     	;# 
  2224  0F2A                     	;# 
  2225  0F2B                     	;# 
  2226  0F2C                     	;# 
  2227  0F2D                     	;# 
  2228  0F2E                     	;# 
  2229  0F2F                     	;# 
  2230  0F30                     	;# 
  2231  0F31                     	;# 
  2232  0F32                     	;# 
  2233  0F33                     	;# 
  2234  0F34                     	;# 
  2235  0F35                     	;# 
  2236  0F36                     	;# 
  2237  0F37                     	;# 
  2238  0FE4                     	;# 
  2239  0FE5                     	;# 
  2240  0FE6                     	;# 
  2241  0FE7                     	;# 
  2242  0FE8                     	;# 
  2243  0FE9                     	;# 
  2244  0FEA                     	;# 
  2245  0FEB                     	;# 
  2246  0FED                     	;# 
  2247  0FEE                     	;# 
  2248  0FEF                     	;# 
  2249  0000                     	;# 
  2250  0001                     	;# 
  2251  0002                     	;# 
  2252  0003                     	;# 
  2253  0004                     	;# 
  2254  0005                     	;# 
  2255  0006                     	;# 
  2256  0007                     	;# 
  2257  0008                     	;# 
  2258  0009                     	;# 
  2259  000A                     	;# 
  2260  000B                     	;# 
  2261  000C                     	;# 
  2262  000D                     	;# 
  2263  000E                     	;# 
  2264  0010                     	;# 
  2265  0011                     	;# 
  2266  0012                     	;# 
  2267  0013                     	;# 
  2268  0014                     	;# 
  2269  0015                     	;# 
  2270  0015                     	;# 
  2271  0016                     	;# 
  2272  0016                     	;# 
  2273  0017                     	;# 
  2274  0018                     	;# 
  2275  0019                     	;# 
  2276  0019                     	;# 
  2277  001A                     	;# 
  2278  001B                     	;# 
  2279  001C                     	;# 
  2280  001D                     	;# 
  2281  001E                     	;# 
  2282  001F                     	;# 
  2283  008C                     	;# 
  2284  008D                     	;# 
  2285  008E                     	;# 
  2286  0090                     	;# 
  2287  0091                     	;# 
  2288  0092                     	;# 
  2289  0093                     	;# 
  2290  0094                     	;# 
  2291  0097                     	;# 
  2292  009B                     	;# 
  2293  009B                     	;# 
  2294  009C                     	;# 
  2295  009D                     	;# 
  2296  009E                     	;# 
  2297  009F                     	;# 
  2298  010C                     	;# 
  2299  010D                     	;# 
  2300  010E                     	;# 
  2301  0111                     	;# 
  2302  0112                     	;# 
  2303  0113                     	;# 
  2304  0114                     	;# 
  2305  0115                     	;# 
  2306  0116                     	;# 
  2307  0117                     	;# 
  2308  0118                     	;# 
  2309  0119                     	;# 
  2310  018C                     	;# 
  2311  018D                     	;# 
  2312  018E                     	;# 
  2313  0197                     	;# 
  2314  0199                     	;# 
  2315  0199                     	;# 
  2316  0199                     	;# 
  2317  019A                     	;# 
  2318  019A                     	;# 
  2319  019A                     	;# 
  2320  019B                     	;# 
  2321  019B                     	;# 
  2322  019B                     	;# 
  2323  019B                     	;# 
  2324  019B                     	;# 
  2325  019C                     	;# 
  2326  019C                     	;# 
  2327  019C                     	;# 
  2328  019D                     	;# 
  2329  019D                     	;# 
  2330  019D                     	;# 
  2331  019E                     	;# 
  2332  019E                     	;# 
  2333  019E                     	;# 
  2334  019F                     	;# 
  2335  019F                     	;# 
  2336  019F                     	;# 
  2337  019F                     	;# 
  2338  019F                     	;# 
  2339  020C                     	;# 
  2340  020D                     	;# 
  2341  020E                     	;# 
  2342  0211                     	;# 
  2343  0211                     	;# 
  2344  0212                     	;# 
  2345  0212                     	;# 
  2346  0213                     	;# 
  2347  0213                     	;# 
  2348  0214                     	;# 
  2349  0214                     	;# 
  2350  0215                     	;# 
  2351  0215                     	;# 
  2352  0215                     	;# 
  2353  0215                     	;# 
  2354  0216                     	;# 
  2355  0216                     	;# 
  2356  0217                     	;# 
  2357  0217                     	;# 
  2358  0219                     	;# 
  2359  021A                     	;# 
  2360  021B                     	;# 
  2361  021C                     	;# 
  2362  021D                     	;# 
  2363  021D                     	;# 
  2364  021E                     	;# 
  2365  021F                     	;# 
  2366  028C                     	;# 
  2367  028D                     	;# 
  2368  028E                     	;# 
  2369  0291                     	;# 
  2370  0291                     	;# 
  2371  0292                     	;# 
  2372  0293                     	;# 
  2373  0294                     	;# 
  2374  0295                     	;# 
  2375  0295                     	;# 
  2376  0296                     	;# 
  2377  0297                     	;# 
  2378  0298                     	;# 
  2379  029F                     	;# 
  2380  030C                     	;# 
  2381  030D                     	;# 
  2382  030E                     	;# 
  2383  0311                     	;# 
  2384  0311                     	;# 
  2385  0312                     	;# 
  2386  0313                     	;# 
  2387  0314                     	;# 
  2388  0315                     	;# 
  2389  0315                     	;# 
  2390  0316                     	;# 
  2391  0317                     	;# 
  2392  0318                     	;# 
  2393  038C                     	;# 
  2394  038D                     	;# 
  2395  038E                     	;# 
  2396  0391                     	;# 
  2397  0392                     	;# 
  2398  0393                     	;# 
  2399  0394                     	;# 
  2400  0395                     	;# 
  2401  0396                     	;# 
  2402  0397                     	;# 
  2403  0398                     	;# 
  2404  0399                     	;# 
  2405  039A                     	;# 
  2406  039C                     	;# 
  2407  039D                     	;# 
  2408  039E                     	;# 
  2409  039F                     	;# 
  2410  0411                     	;# 
  2411  0411                     	;# 
  2412  0412                     	;# 
  2413  0413                     	;# 
  2414  0414                     	;# 
  2415  0415                     	;# 
  2416  0416                     	;# 
  2417  0417                     	;# 
  2418  0418                     	;# 
  2419  0418                     	;# 
  2420  0419                     	;# 
  2421  041A                     	;# 
  2422  041B                     	;# 
  2423  041C                     	;# 
  2424  041D                     	;# 
  2425  041E                     	;# 
  2426  041F                     	;# 
  2427  0498                     	;# 
  2428  0498                     	;# 
  2429  0499                     	;# 
  2430  049A                     	;# 
  2431  049B                     	;# 
  2432  049B                     	;# 
  2433  049C                     	;# 
  2434  049D                     	;# 
  2435  049E                     	;# 
  2436  049F                     	;# 
  2437  0617                     	;# 
  2438  0618                     	;# 
  2439  0619                     	;# 
  2440  0619                     	;# 
  2441  061A                     	;# 
  2442  061B                     	;# 
  2443  061C                     	;# 
  2444  061C                     	;# 
  2445  061F                     	;# 
  2446  0691                     	;# 
  2447  0692                     	;# 
  2448  0693                     	;# 
  2449  0694                     	;# 
  2450  0695                     	;# 
  2451  0696                     	;# 
  2452  0697                     	;# 
  2453  0698                     	;# 
  2454  0699                     	;# 
  2455  0711                     	;# 
  2456  0712                     	;# 
  2457  0713                     	;# 
  2458  0714                     	;# 
  2459  0715                     	;# 
  2460  0716                     	;# 
  2461  0717                     	;# 
  2462  0718                     	;# 
  2463  0719                     	;# 
  2464  0891                     	;# 
  2465  0891                     	;# 
  2466  0891                     	;# 
  2467  0891                     	;# 
  2468  0891                     	;# 
  2469  0891                     	;# 
  2470  0892                     	;# 
  2471  0892                     	;# 
  2472  0892                     	;# 
  2473  0893                     	;# 
  2474  0893                     	;# 
  2475  0893                     	;# 
  2476  0893                     	;# 
  2477  0893                     	;# 
  2478  0893                     	;# 
  2479  0894                     	;# 
  2480  0894                     	;# 
  2481  0894                     	;# 
  2482  0895                     	;# 
  2483  0895                     	;# 
  2484  0895                     	;# 
  2485  0896                     	;# 
  2486  0896                     	;# 
  2487  0896                     	;# 
  2488  089B                     	;# 
  2489  0911                     	;# 
  2490  0912                     	;# 
  2491  0913                     	;# 
  2492  0914                     	;# 
  2493  0915                     	;# 
  2494  0916                     	;# 
  2495  0918                     	;# 
  2496  0919                     	;# 
  2497  091A                     	;# 
  2498  091B                     	;# 
  2499  091C                     	;# 
  2500  091D                     	;# 
  2501  091E                     	;# 
  2502  091F                     	;# 
  2503  0E0F                     	;# 
  2504  0E10                     	;# 
  2505  0E11                     	;# 
  2506  0E12                     	;# 
  2507  0E13                     	;# 
  2508  0E14                     	;# 
  2509  0E15                     	;# 
  2510  0E16                     	;# 
  2511  0E17                     	;# 
  2512  0E18                     	;# 
  2513  0E19                     	;# 
  2514  0E1A                     	;# 
  2515  0E1B                     	;# 
  2516  0E1C                     	;# 
  2517  0E1D                     	;# 
  2518  0E1E                     	;# 
  2519  0E1F                     	;# 
  2520  0E20                     	;# 
  2521  0E21                     	;# 
  2522  0E22                     	;# 
  2523  0E24                     	;# 
  2524  0E25                     	;# 
  2525  0E28                     	;# 
  2526  0E29                     	;# 
  2527  0E2A                     	;# 
  2528  0E2B                     	;# 
  2529  0E2C                     	;# 
  2530  0E2D                     	;# 
  2531  0E2E                     	;# 
  2532  0E2F                     	;# 
  2533  0E90                     	;# 
  2534  0E91                     	;# 
  2535  0E92                     	;# 
  2536  0E94                     	;# 
  2537  0E95                     	;# 
  2538  0E9C                     	;# 
  2539  0E9D                     	;# 
  2540  0E9E                     	;# 
  2541  0E9F                     	;# 
  2542  0EA0                     	;# 
  2543  0EA1                     	;# 
  2544  0EA2                     	;# 
  2545  0EA3                     	;# 
  2546  0EA4                     	;# 
  2547  0EA5                     	;# 
  2548  0EA6                     	;# 
  2549  0EA7                     	;# 
  2550  0F0F                     	;# 
  2551  0F10                     	;# 
  2552  0F11                     	;# 
  2553  0F12                     	;# 
  2554  0F13                     	;# 
  2555  0F14                     	;# 
  2556  0F15                     	;# 
  2557  0F16                     	;# 
  2558  0F17                     	;# 
  2559  0F18                     	;# 
  2560  0F19                     	;# 
  2561  0F1A                     	;# 
  2562  0F1B                     	;# 
  2563  0F1C                     	;# 
  2564  0F1D                     	;# 
  2565  0F1E                     	;# 
  2566  0F1F                     	;# 
  2567  0F20                     	;# 
  2568  0F21                     	;# 
  2569  0F22                     	;# 
  2570  0F23                     	;# 
  2571  0F24                     	;# 
  2572  0F25                     	;# 
  2573  0F26                     	;# 
  2574  0F27                     	;# 
  2575  0F28                     	;# 
  2576  0F29                     	;# 
  2577  0F2A                     	;# 
  2578  0F2B                     	;# 
  2579  0F2C                     	;# 
  2580  0F2D                     	;# 
  2581  0F2E                     	;# 
  2582  0F2F                     	;# 
  2583  0F30                     	;# 
  2584  0F31                     	;# 
  2585  0F32                     	;# 
  2586  0F33                     	;# 
  2587  0F34                     	;# 
  2588  0F35                     	;# 
  2589  0F36                     	;# 
  2590  0F37                     	;# 
  2591  0FE4                     	;# 
  2592  0FE5                     	;# 
  2593  0FE6                     	;# 
  2594  0FE7                     	;# 
  2595  0FE8                     	;# 
  2596  0FE9                     	;# 
  2597  0FEA                     	;# 
  2598  0FEB                     	;# 
  2599  0FED                     	;# 
  2600  0FEE                     	;# 
  2601  0FEF                     	;# 
  2602  0000                     	;# 
  2603  0001                     	;# 
  2604  0002                     	;# 
  2605  0003                     	;# 
  2606  0004                     	;# 
  2607  0005                     	;# 
  2608  0006                     	;# 
  2609  0007                     	;# 
  2610  0008                     	;# 
  2611  0009                     	;# 
  2612  000A                     	;# 
  2613  000B                     	;# 
  2614  000C                     	;# 
  2615  000D                     	;# 
  2616  000E                     	;# 
  2617  0010                     	;# 
  2618  0011                     	;# 
  2619  0012                     	;# 
  2620  0013                     	;# 
  2621  0014                     	;# 
  2622  0015                     	;# 
  2623  0015                     	;# 
  2624  0016                     	;# 
  2625  0016                     	;# 
  2626  0017                     	;# 
  2627  0018                     	;# 
  2628  0019                     	;# 
  2629  0019                     	;# 
  2630  001A                     	;# 
  2631  001B                     	;# 
  2632  001C                     	;# 
  2633  001D                     	;# 
  2634  001E                     	;# 
  2635  001F                     	;# 
  2636  008C                     	;# 
  2637  008D                     	;# 
  2638  008E                     	;# 
  2639  0090                     	;# 
  2640  0091                     	;# 
  2641  0092                     	;# 
  2642  0093                     	;# 
  2643  0094                     	;# 
  2644  0097                     	;# 
  2645  009B                     	;# 
  2646  009B                     	;# 
  2647  009C                     	;# 
  2648  009D                     	;# 
  2649  009E                     	;# 
  2650  009F                     	;# 
  2651  010C                     	;# 
  2652  010D                     	;# 
  2653  010E                     	;# 
  2654  0111                     	;# 
  2655  0112                     	;# 
  2656  0113                     	;# 
  2657  0114                     	;# 
  2658  0115                     	;# 
  2659  0116                     	;# 
  2660  0117                     	;# 
  2661  0118                     	;# 
  2662  0119                     	;# 
  2663  018C                     	;# 
  2664  018D                     	;# 
  2665  018E                     	;# 
  2666  0197                     	;# 
  2667  0199                     	;# 
  2668  0199                     	;# 
  2669  0199                     	;# 
  2670  019A                     	;# 
  2671  019A                     	;# 
  2672  019A                     	;# 
  2673  019B                     	;# 
  2674  019B                     	;# 
  2675  019B                     	;# 
  2676  019B                     	;# 
  2677  019B                     	;# 
  2678  019C                     	;# 
  2679  019C                     	;# 
  2680  019C                     	;# 
  2681  019D                     	;# 
  2682  019D                     	;# 
  2683  019D                     	;# 
  2684  019E                     	;# 
  2685  019E                     	;# 
  2686  019E                     	;# 
  2687  019F                     	;# 
  2688  019F                     	;# 
  2689  019F                     	;# 
  2690  019F                     	;# 
  2691  019F                     	;# 
  2692  020C                     	;# 
  2693  020D                     	;# 
  2694  020E                     	;# 
  2695  0211                     	;# 
  2696  0211                     	;# 
  2697  0212                     	;# 
  2698  0212                     	;# 
  2699  0213                     	;# 
  2700  0213                     	;# 
  2701  0214                     	;# 
  2702  0214                     	;# 
  2703  0215                     	;# 
  2704  0215                     	;# 
  2705  0215                     	;# 
  2706  0215                     	;# 
  2707  0216                     	;# 
  2708  0216                     	;# 
  2709  0217                     	;# 
  2710  0217                     	;# 
  2711  0219                     	;# 
  2712  021A                     	;# 
  2713  021B                     	;# 
  2714  021C                     	;# 
  2715  021D                     	;# 
  2716  021D                     	;# 
  2717  021E                     	;# 
  2718  021F                     	;# 
  2719  028C                     	;# 
  2720  028D                     	;# 
  2721  028E                     	;# 
  2722  0291                     	;# 
  2723  0291                     	;# 
  2724  0292                     	;# 
  2725  0293                     	;# 
  2726  0294                     	;# 
  2727  0295                     	;# 
  2728  0295                     	;# 
  2729  0296                     	;# 
  2730  0297                     	;# 
  2731  0298                     	;# 
  2732  029F                     	;# 
  2733  030C                     	;# 
  2734  030D                     	;# 
  2735  030E                     	;# 
  2736  0311                     	;# 
  2737  0311                     	;# 
  2738  0312                     	;# 
  2739  0313                     	;# 
  2740  0314                     	;# 
  2741  0315                     	;# 
  2742  0315                     	;# 
  2743  0316                     	;# 
  2744  0317                     	;# 
  2745  0318                     	;# 
  2746  038C                     	;# 
  2747  038D                     	;# 
  2748  038E                     	;# 
  2749  0391                     	;# 
  2750  0392                     	;# 
  2751  0393                     	;# 
  2752  0394                     	;# 
  2753  0395                     	;# 
  2754  0396                     	;# 
  2755  0397                     	;# 
  2756  0398                     	;# 
  2757  0399                     	;# 
  2758  039A                     	;# 
  2759  039C                     	;# 
  2760  039D                     	;# 
  2761  039E                     	;# 
  2762  039F                     	;# 
  2763  0411                     	;# 
  2764  0411                     	;# 
  2765  0412                     	;# 
  2766  0413                     	;# 
  2767  0414                     	;# 
  2768  0415                     	;# 
  2769  0416                     	;# 
  2770  0417                     	;# 
  2771  0418                     	;# 
  2772  0418                     	;# 
  2773  0419                     	;# 
  2774  041A                     	;# 
  2775  041B                     	;# 
  2776  041C                     	;# 
  2777  041D                     	;# 
  2778  041E                     	;# 
  2779  041F                     	;# 
  2780  0498                     	;# 
  2781  0498                     	;# 
  2782  0499                     	;# 
  2783  049A                     	;# 
  2784  049B                     	;# 
  2785  049B                     	;# 
  2786  049C                     	;# 
  2787  049D                     	;# 
  2788  049E                     	;# 
  2789  049F                     	;# 
  2790  0617                     	;# 
  2791  0618                     	;# 
  2792  0619                     	;# 
  2793  0619                     	;# 
  2794  061A                     	;# 
  2795  061B                     	;# 
  2796  061C                     	;# 
  2797  061C                     	;# 
  2798  061F                     	;# 
  2799  0691                     	;# 
  2800  0692                     	;# 
  2801  0693                     	;# 
  2802  0694                     	;# 
  2803  0695                     	;# 
  2804  0696                     	;# 
  2805  0697                     	;# 
  2806  0698                     	;# 
  2807  0699                     	;# 
  2808  0711                     	;# 
  2809  0712                     	;# 
  2810  0713                     	;# 
  2811  0714                     	;# 
  2812  0715                     	;# 
  2813  0716                     	;# 
  2814  0717                     	;# 
  2815  0718                     	;# 
  2816  0719                     	;# 
  2817  0891                     	;# 
  2818  0891                     	;# 
  2819  0891                     	;# 
  2820  0891                     	;# 
  2821  0891                     	;# 
  2822  0891                     	;# 
  2823  0892                     	;# 
  2824  0892                     	;# 
  2825  0892                     	;# 
  2826  0893                     	;# 
  2827  0893                     	;# 
  2828  0893                     	;# 
  2829  0893                     	;# 
  2830  0893                     	;# 
  2831  0893                     	;# 
  2832  0894                     	;# 
  2833  0894                     	;# 
  2834  0894                     	;# 
  2835  0895                     	;# 
  2836  0895                     	;# 
  2837  0895                     	;# 
  2838  0896                     	;# 
  2839  0896                     	;# 
  2840  0896                     	;# 
  2841  089B                     	;# 
  2842  0911                     	;# 
  2843  0912                     	;# 
  2844  0913                     	;# 
  2845  0914                     	;# 
  2846  0915                     	;# 
  2847  0916                     	;# 
  2848  0918                     	;# 
  2849  0919                     	;# 
  2850  091A                     	;# 
  2851  091B                     	;# 
  2852  091C                     	;# 
  2853  091D                     	;# 
  2854  091E                     	;# 
  2855  091F                     	;# 
  2856  0E0F                     	;# 
  2857  0E10                     	;# 
  2858  0E11                     	;# 
  2859  0E12                     	;# 
  2860  0E13                     	;# 
  2861  0E14                     	;# 
  2862  0E15                     	;# 
  2863  0E16                     	;# 
  2864  0E17                     	;# 
  2865  0E18                     	;# 
  2866  0E19                     	;# 
  2867  0E1A                     	;# 
  2868  0E1B                     	;# 
  2869  0E1C                     	;# 
  2870  0E1D                     	;# 
  2871  0E1E                     	;# 
  2872  0E1F                     	;# 
  2873  0E20                     	;# 
  2874  0E21                     	;# 
  2875  0E22                     	;# 
  2876  0E24                     	;# 
  2877  0E25                     	;# 
  2878  0E28                     	;# 
  2879  0E29                     	;# 
  2880  0E2A                     	;# 
  2881  0E2B                     	;# 
  2882  0E2C                     	;# 
  2883  0E2D                     	;# 
  2884  0E2E                     	;# 
  2885  0E2F                     	;# 
  2886  0E90                     	;# 
  2887  0E91                     	;# 
  2888  0E92                     	;# 
  2889  0E94                     	;# 
  2890  0E95                     	;# 
  2891  0E9C                     	;# 
  2892  0E9D                     	;# 
  2893  0E9E                     	;# 
  2894  0E9F                     	;# 
  2895  0EA0                     	;# 
  2896  0EA1                     	;# 
  2897  0EA2                     	;# 
  2898  0EA3                     	;# 
  2899  0EA4                     	;# 
  2900  0EA5                     	;# 
  2901  0EA6                     	;# 
  2902  0EA7                     	;# 
  2903  0F0F                     	;# 
  2904  0F10                     	;# 
  2905  0F11                     	;# 
  2906  0F12                     	;# 
  2907  0F13                     	;# 
  2908  0F14                     	;# 
  2909  0F15                     	;# 
  2910  0F16                     	;# 
  2911  0F17                     	;# 
  2912  0F18                     	;# 
  2913  0F19                     	;# 
  2914  0F1A                     	;# 
  2915  0F1B                     	;# 
  2916  0F1C                     	;# 
  2917  0F1D                     	;# 
  2918  0F1E                     	;# 
  2919  0F1F                     	;# 
  2920  0F20                     	;# 
  2921  0F21                     	;# 
  2922  0F22                     	;# 
  2923  0F23                     	;# 
  2924  0F24                     	;# 
  2925  0F25                     	;# 
  2926  0F26                     	;# 
  2927  0F27                     	;# 
  2928  0F28                     	;# 
  2929  0F29                     	;# 
  2930  0F2A                     	;# 
  2931  0F2B                     	;# 
  2932  0F2C                     	;# 
  2933  0F2D                     	;# 
  2934  0F2E                     	;# 
  2935  0F2F                     	;# 
  2936  0F30                     	;# 
  2937  0F31                     	;# 
  2938  0F32                     	;# 
  2939  0F33                     	;# 
  2940  0F34                     	;# 
  2941  0F35                     	;# 
  2942  0F36                     	;# 
  2943  0F37                     	;# 
  2944  0FE4                     	;# 
  2945  0FE5                     	;# 
  2946  0FE6                     	;# 
  2947  0FE7                     	;# 
  2948  0FE8                     	;# 
  2949  0FE9                     	;# 
  2950  0FEA                     	;# 
  2951  0FEB                     	;# 
  2952  0FED                     	;# 
  2953  0FEE                     	;# 
  2954  0FEF                     	;# 
  2955  0000                     	;# 
  2956  0001                     	;# 
  2957  0002                     	;# 
  2958  0003                     	;# 
  2959  0004                     	;# 
  2960  0005                     	;# 
  2961  0006                     	;# 
  2962  0007                     	;# 
  2963  0008                     	;# 
  2964  0009                     	;# 
  2965  000A                     	;# 
  2966  000B                     	;# 
  2967  000C                     	;# 
  2968  000D                     	;# 
  2969  000E                     	;# 
  2970  0010                     	;# 
  2971  0011                     	;# 
  2972  0012                     	;# 
  2973  0013                     	;# 
  2974  0014                     	;# 
  2975  0015                     	;# 
  2976  0015                     	;# 
  2977  0016                     	;# 
  2978  0016                     	;# 
  2979  0017                     	;# 
  2980  0018                     	;# 
  2981  0019                     	;# 
  2982  0019                     	;# 
  2983  001A                     	;# 
  2984  001B                     	;# 
  2985  001C                     	;# 
  2986  001D                     	;# 
  2987  001E                     	;# 
  2988  001F                     	;# 
  2989  008C                     	;# 
  2990  008D                     	;# 
  2991  008E                     	;# 
  2992  0090                     	;# 
  2993  0091                     	;# 
  2994  0092                     	;# 
  2995  0093                     	;# 
  2996  0094                     	;# 
  2997  0097                     	;# 
  2998  009B                     	;# 
  2999  009B                     	;# 
  3000  009C                     	;# 
  3001  009D                     	;# 
  3002  009E                     	;# 
  3003  009F                     	;# 
  3004  010C                     	;# 
  3005  010D                     	;# 
  3006  010E                     	;# 
  3007  0111                     	;# 
  3008  0112                     	;# 
  3009  0113                     	;# 
  3010  0114                     	;# 
  3011  0115                     	;# 
  3012  0116                     	;# 
  3013  0117                     	;# 
  3014  0118                     	;# 
  3015  0119                     	;# 
  3016  018C                     	;# 
  3017  018D                     	;# 
  3018  018E                     	;# 
  3019  0197                     	;# 
  3020  0199                     	;# 
  3021  0199                     	;# 
  3022  0199                     	;# 
  3023  019A                     	;# 
  3024  019A                     	;# 
  3025  019A                     	;# 
  3026  019B                     	;# 
  3027  019B                     	;# 
  3028  019B                     	;# 
  3029  019B                     	;# 
  3030  019B                     	;# 
  3031  019C                     	;# 
  3032  019C                     	;# 
  3033  019C                     	;# 
  3034  019D                     	;# 
  3035  019D                     	;# 
  3036  019D                     	;# 
  3037  019E                     	;# 
  3038  019E                     	;# 
  3039  019E                     	;# 
  3040  019F                     	;# 
  3041  019F                     	;# 
  3042  019F                     	;# 
  3043  019F                     	;# 
  3044  019F                     	;# 
  3045  020C                     	;# 
  3046  020D                     	;# 
  3047  020E                     	;# 
  3048  0211                     	;# 
  3049  0211                     	;# 
  3050  0212                     	;# 
  3051  0212                     	;# 
  3052  0213                     	;# 
  3053  0213                     	;# 
  3054  0214                     	;# 
  3055  0214                     	;# 
  3056  0215                     	;# 
  3057  0215                     	;# 
  3058  0215                     	;# 
  3059  0215                     	;# 
  3060  0216                     	;# 
  3061  0216                     	;# 
  3062  0217                     	;# 
  3063  0217                     	;# 
  3064  0219                     	;# 
  3065  021A                     	;# 
  3066  021B                     	;# 
  3067  021C                     	;# 
  3068  021D                     	;# 
  3069  021D                     	;# 
  3070  021E                     	;# 
  3071  021F                     	;# 
  3072  028C                     	;# 
  3073  028D                     	;# 
  3074  028E                     	;# 
  3075  0291                     	;# 
  3076  0291                     	;# 
  3077  0292                     	;# 
  3078  0293                     	;# 
  3079  0294                     	;# 
  3080  0295                     	;# 
  3081  0295                     	;# 
  3082  0296                     	;# 
  3083  0297                     	;# 
  3084  0298                     	;# 
  3085  029F                     	;# 
  3086  030C                     	;# 
  3087  030D                     	;# 
  3088  030E                     	;# 
  3089  0311                     	;# 
  3090  0311                     	;# 
  3091  0312                     	;# 
  3092  0313                     	;# 
  3093  0314                     	;# 
  3094  0315                     	;# 
  3095  0315                     	;# 
  3096  0316                     	;# 
  3097  0317                     	;# 
  3098  0318                     	;# 
  3099  038C                     	;# 
  3100  038D                     	;# 
  3101  038E                     	;# 
  3102  0391                     	;# 
  3103  0392                     	;# 
  3104  0393                     	;# 
  3105  0394                     	;# 
  3106  0395                     	;# 
  3107  0396                     	;# 
  3108  0397                     	;# 
  3109  0398                     	;# 
  3110  0399                     	;# 
  3111  039A                     	;# 
  3112  039C                     	;# 
  3113  039D                     	;# 
  3114  039E                     	;# 
  3115  039F                     	;# 
  3116  0411                     	;# 
  3117  0411                     	;# 
  3118  0412                     	;# 
  3119  0413                     	;# 
  3120  0414                     	;# 
  3121  0415                     	;# 
  3122  0416                     	;# 
  3123  0417                     	;# 
  3124  0418                     	;# 
  3125  0418                     	;# 
  3126  0419                     	;# 
  3127  041A                     	;# 
  3128  041B                     	;# 
  3129  041C                     	;# 
  3130  041D                     	;# 
  3131  041E                     	;# 
  3132  041F                     	;# 
  3133  0498                     	;# 
  3134  0498                     	;# 
  3135  0499                     	;# 
  3136  049A                     	;# 
  3137  049B                     	;# 
  3138  049B                     	;# 
  3139  049C                     	;# 
  3140  049D                     	;# 
  3141  049E                     	;# 
  3142  049F                     	;# 
  3143  0617                     	;# 
  3144  0618                     	;# 
  3145  0619                     	;# 
  3146  0619                     	;# 
  3147  061A                     	;# 
  3148  061B                     	;# 
  3149  061C                     	;# 
  3150  061C                     	;# 
  3151  061F                     	;# 
  3152  0691                     	;# 
  3153  0692                     	;# 
  3154  0693                     	;# 
  3155  0694                     	;# 
  3156  0695                     	;# 
  3157  0696                     	;# 
  3158  0697                     	;# 
  3159  0698                     	;# 
  3160  0699                     	;# 
  3161  0711                     	;# 
  3162  0712                     	;# 
  3163  0713                     	;# 
  3164  0714                     	;# 
  3165  0715                     	;# 
  3166  0716                     	;# 
  3167  0717                     	;# 
  3168  0718                     	;# 
  3169  0719                     	;# 
  3170  0891                     	;# 
  3171  0891                     	;# 
  3172  0891                     	;# 
  3173  0891                     	;# 
  3174  0891                     	;# 
  3175  0891                     	;# 
  3176  0892                     	;# 
  3177  0892                     	;# 
  3178  0892                     	;# 
  3179  0893                     	;# 
  3180  0893                     	;# 
  3181  0893                     	;# 
  3182  0893                     	;# 
  3183  0893                     	;# 
  3184  0893                     	;# 
  3185  0894                     	;# 
  3186  0894                     	;# 
  3187  0894                     	;# 
  3188  0895                     	;# 
  3189  0895                     	;# 
  3190  0895                     	;# 
  3191  0896                     	;# 
  3192  0896                     	;# 
  3193  0896                     	;# 
  3194  089B                     	;# 
  3195  0911                     	;# 
  3196  0912                     	;# 
  3197  0913                     	;# 
  3198  0914                     	;# 
  3199  0915                     	;# 
  3200  0916                     	;# 
  3201  0918                     	;# 
  3202  0919                     	;# 
  3203  091A                     	;# 
  3204  091B                     	;# 
  3205  091C                     	;# 
  3206  091D                     	;# 
  3207  091E                     	;# 
  3208  091F                     	;# 
  3209  0E0F                     	;# 
  3210  0E10                     	;# 
  3211  0E11                     	;# 
  3212  0E12                     	;# 
  3213  0E13                     	;# 
  3214  0E14                     	;# 
  3215  0E15                     	;# 
  3216  0E16                     	;# 
  3217  0E17                     	;# 
  3218  0E18                     	;# 
  3219  0E19                     	;# 
  3220  0E1A                     	;# 
  3221  0E1B                     	;# 
  3222  0E1C                     	;# 
  3223  0E1D                     	;# 
  3224  0E1E                     	;# 
  3225  0E1F                     	;# 
  3226  0E20                     	;# 
  3227  0E21                     	;# 
  3228  0E22                     	;# 
  3229  0E24                     	;# 
  3230  0E25                     	;# 
  3231  0E28                     	;# 
  3232  0E29                     	;# 
  3233  0E2A                     	;# 
  3234  0E2B                     	;# 
  3235  0E2C                     	;# 
  3236  0E2D                     	;# 
  3237  0E2E                     	;# 
  3238  0E2F                     	;# 
  3239  0E90                     	;# 
  3240  0E91                     	;# 
  3241  0E92                     	;# 
  3242  0E94                     	;# 
  3243  0E95                     	;# 
  3244  0E9C                     	;# 
  3245  0E9D                     	;# 
  3246  0E9E                     	;# 
  3247  0E9F                     	;# 
  3248  0EA0                     	;# 
  3249  0EA1                     	;# 
  3250  0EA2                     	;# 
  3251  0EA3                     	;# 
  3252  0EA4                     	;# 
  3253  0EA5                     	;# 
  3254  0EA6                     	;# 
  3255  0EA7                     	;# 
  3256  0F0F                     	;# 
  3257  0F10                     	;# 
  3258  0F11                     	;# 
  3259  0F12                     	;# 
  3260  0F13                     	;# 
  3261  0F14                     	;# 
  3262  0F15                     	;# 
  3263  0F16                     	;# 
  3264  0F17                     	;# 
  3265  0F18                     	;# 
  3266  0F19                     	;# 
  3267  0F1A                     	;# 
  3268  0F1B                     	;# 
  3269  0F1C                     	;# 
  3270  0F1D                     	;# 
  3271  0F1E                     	;# 
  3272  0F1F                     	;# 
  3273  0F20                     	;# 
  3274  0F21                     	;# 
  3275  0F22                     	;# 
  3276  0F23                     	;# 
  3277  0F24                     	;# 
  3278  0F25                     	;# 
  3279  0F26                     	;# 
  3280  0F27                     	;# 
  3281  0F28                     	;# 
  3282  0F29                     	;# 
  3283  0F2A                     	;# 
  3284  0F2B                     	;# 
  3285  0F2C                     	;# 
  3286  0F2D                     	;# 
  3287  0F2E                     	;# 
  3288  0F2F                     	;# 
  3289  0F30                     	;# 
  3290  0F31                     	;# 
  3291  0F32                     	;# 
  3292  0F33                     	;# 
  3293  0F34                     	;# 
  3294  0F35                     	;# 
  3295  0F36                     	;# 
  3296  0F37                     	;# 
  3297  0FE4                     	;# 
  3298  0FE5                     	;# 
  3299  0FE6                     	;# 
  3300  0FE7                     	;# 
  3301  0FE8                     	;# 
  3302  0FE9                     	;# 
  3303  0FEA                     	;# 
  3304  0FEB                     	;# 
  3305  0FED                     	;# 
  3306  0FEE                     	;# 
  3307  0FEF                     	;# 
  3308  0000                     	;# 
  3309  0001                     	;# 
  3310  0002                     	;# 
  3311  0003                     	;# 
  3312  0004                     	;# 
  3313  0005                     	;# 
  3314  0006                     	;# 
  3315  0007                     	;# 
  3316  0008                     	;# 
  3317  0009                     	;# 
  3318  000A                     	;# 
  3319  000B                     	;# 
  3320  000C                     	;# 
  3321  000D                     	;# 
  3322  000E                     	;# 
  3323  0010                     	;# 
  3324  0011                     	;# 
  3325  0012                     	;# 
  3326  0013                     	;# 
  3327  0014                     	;# 
  3328  0015                     	;# 
  3329  0015                     	;# 
  3330  0016                     	;# 
  3331  0016                     	;# 
  3332  0017                     	;# 
  3333  0018                     	;# 
  3334  0019                     	;# 
  3335  0019                     	;# 
  3336  001A                     	;# 
  3337  001B                     	;# 
  3338  001C                     	;# 
  3339  001D                     	;# 
  3340  001E                     	;# 
  3341  001F                     	;# 
  3342  008C                     	;# 
  3343  008D                     	;# 
  3344  008E                     	;# 
  3345  0090                     	;# 
  3346  0091                     	;# 
  3347  0092                     	;# 
  3348  0093                     	;# 
  3349  0094                     	;# 
  3350  0097                     	;# 
  3351  009B                     	;# 
  3352  009B                     	;# 
  3353  009C                     	;# 
  3354  009D                     	;# 
  3355  009E                     	;# 
  3356  009F                     	;# 
  3357  010C                     	;# 
  3358  010D                     	;# 
  3359  010E                     	;# 
  3360  0111                     	;# 
  3361  0112                     	;# 
  3362  0113                     	;# 
  3363  0114                     	;# 
  3364  0115                     	;# 
  3365  0116                     	;# 
  3366  0117                     	;# 
  3367  0118                     	;# 
  3368  0119                     	;# 
  3369  018C                     	;# 
  3370  018D                     	;# 
  3371  018E                     	;# 
  3372  0197                     	;# 
  3373  0199                     	;# 
  3374  0199                     	;# 
  3375  0199                     	;# 
  3376  019A                     	;# 
  3377  019A                     	;# 
  3378  019A                     	;# 
  3379  019B                     	;# 
  3380  019B                     	;# 
  3381  019B                     	;# 
  3382  019B                     	;# 
  3383  019B                     	;# 
  3384  019C                     	;# 
  3385  019C                     	;# 
  3386  019C                     	;# 
  3387  019D                     	;# 
  3388  019D                     	;# 
  3389  019D                     	;# 
  3390  019E                     	;# 
  3391  019E                     	;# 
  3392  019E                     	;# 
  3393  019F                     	;# 
  3394  019F                     	;# 
  3395  019F                     	;# 
  3396  019F                     	;# 
  3397  019F                     	;# 
  3398  020C                     	;# 
  3399  020D                     	;# 
  3400  020E                     	;# 
  3401  0211                     	;# 
  3402  0211                     	;# 
  3403  0212                     	;# 
  3404  0212                     	;# 
  3405  0213                     	;# 
  3406  0213                     	;# 
  3407  0214                     	;# 
  3408  0214                     	;# 
  3409  0215                     	;# 
  3410  0215                     	;# 
  3411  0215                     	;# 
  3412  0215                     	;# 
  3413  0216                     	;# 
  3414  0216                     	;# 
  3415  0217                     	;# 
  3416  0217                     	;# 
  3417  0219                     	;# 
  3418  021A                     	;# 
  3419  021B                     	;# 
  3420  021C                     	;# 
  3421  021D                     	;# 
  3422  021D                     	;# 
  3423  021E                     	;# 
  3424  021F                     	;# 
  3425  028C                     	;# 
  3426  028D                     	;# 
  3427  028E                     	;# 
  3428  0291                     	;# 
  3429  0291                     	;# 
  3430  0292                     	;# 
  3431  0293                     	;# 
  3432  0294                     	;# 
  3433  0295                     	;# 
  3434  0295                     	;# 
  3435  0296                     	;# 
  3436  0297                     	;# 
  3437  0298                     	;# 
  3438  029F                     	;# 
  3439  030C                     	;# 
  3440  030D                     	;# 
  3441  030E                     	;# 
  3442  0311                     	;# 
  3443  0311                     	;# 
  3444  0312                     	;# 
  3445  0313                     	;# 
  3446  0314                     	;# 
  3447  0315                     	;# 
  3448  0315                     	;# 
  3449  0316                     	;# 
  3450  0317                     	;# 
  3451  0318                     	;# 
  3452  038C                     	;# 
  3453  038D                     	;# 
  3454  038E                     	;# 
  3455  0391                     	;# 
  3456  0392                     	;# 
  3457  0393                     	;# 
  3458  0394                     	;# 
  3459  0395                     	;# 
  3460  0396                     	;# 
  3461  0397                     	;# 
  3462  0398                     	;# 
  3463  0399                     	;# 
  3464  039A                     	;# 
  3465  039C                     	;# 
  3466  039D                     	;# 
  3467  039E                     	;# 
  3468  039F                     	;# 
  3469  0411                     	;# 
  3470  0411                     	;# 
  3471  0412                     	;# 
  3472  0413                     	;# 
  3473  0414                     	;# 
  3474  0415                     	;# 
  3475  0416                     	;# 
  3476  0417                     	;# 
  3477  0418                     	;# 
  3478  0418                     	;# 
  3479  0419                     	;# 
  3480  041A                     	;# 
  3481  041B                     	;# 
  3482  041C                     	;# 
  3483  041D                     	;# 
  3484  041E                     	;# 
  3485  041F                     	;# 
  3486  0498                     	;# 
  3487  0498                     	;# 
  3488  0499                     	;# 
  3489  049A                     	;# 
  3490  049B                     	;# 
  3491  049B                     	;# 
  3492  049C                     	;# 
  3493  049D                     	;# 
  3494  049E                     	;# 
  3495  049F                     	;# 
  3496  0617                     	;# 
  3497  0618                     	;# 
  3498  0619                     	;# 
  3499  0619                     	;# 
  3500  061A                     	;# 
  3501  061B                     	;# 
  3502  061C                     	;# 
  3503  061C                     	;# 
  3504  061F                     	;# 
  3505  0691                     	;# 
  3506  0692                     	;# 
  3507  0693                     	;# 
  3508  0694                     	;# 
  3509  0695                     	;# 
  3510  0696                     	;# 
  3511  0697                     	;# 
  3512  0698                     	;# 
  3513  0699                     	;# 
  3514  0711                     	;# 
  3515  0712                     	;# 
  3516  0713                     	;# 
  3517  0714                     	;# 
  3518  0715                     	;# 
  3519  0716                     	;# 
  3520  0717                     	;# 
  3521  0718                     	;# 
  3522  0719                     	;# 
  3523  0891                     	;# 
  3524  0891                     	;# 
  3525  0891                     	;# 
  3526  0891                     	;# 
  3527  0891                     	;# 
  3528  0891                     	;# 
  3529  0892                     	;# 
  3530  0892                     	;# 
  3531  0892                     	;# 
  3532  0893                     	;# 
  3533  0893                     	;# 
  3534  0893                     	;# 
  3535  0893                     	;# 
  3536  0893                     	;# 
  3537  0893                     	;# 
  3538  0894                     	;# 
  3539  0894                     	;# 
  3540  0894                     	;# 
  3541  0895                     	;# 
  3542  0895                     	;# 
  3543  0895                     	;# 
  3544  0896                     	;# 
  3545  0896                     	;# 
  3546  0896                     	;# 
  3547  089B                     	;# 
  3548  0911                     	;# 
  3549  0912                     	;# 
  3550  0913                     	;# 
  3551  0914                     	;# 
  3552  0915                     	;# 
  3553  0916                     	;# 
  3554  0918                     	;# 
  3555  0919                     	;# 
  3556  091A                     	;# 
  3557  091B                     	;# 
  3558  091C                     	;# 
  3559  091D                     	;# 
  3560  091E                     	;# 
  3561  091F                     	;# 
  3562  0E0F                     	;# 
  3563  0E10                     	;# 
  3564  0E11                     	;# 
  3565  0E12                     	;# 
  3566  0E13                     	;# 
  3567  0E14                     	;# 
  3568  0E15                     	;# 
  3569  0E16                     	;# 
  3570  0E17                     	;# 
  3571  0E18                     	;# 
  3572  0E19                     	;# 
  3573  0E1A                     	;# 
  3574  0E1B                     	;# 
  3575  0E1C                     	;# 
  3576  0E1D                     	;# 
  3577  0E1E                     	;# 
  3578  0E1F                     	;# 
  3579  0E20                     	;# 
  3580  0E21                     	;# 
  3581  0E22                     	;# 
  3582  0E24                     	;# 
  3583  0E25                     	;# 
  3584  0E28                     	;# 
  3585  0E29                     	;# 
  3586  0E2A                     	;# 
  3587  0E2B                     	;# 
  3588  0E2C                     	;# 
  3589  0E2D                     	;# 
  3590  0E2E                     	;# 
  3591  0E2F                     	;# 
  3592  0E90                     	;# 
  3593  0E91                     	;# 
  3594  0E92                     	;# 
  3595  0E94                     	;# 
  3596  0E95                     	;# 
  3597  0E9C                     	;# 
  3598  0E9D                     	;# 
  3599  0E9E                     	;# 
  3600  0E9F                     	;# 
  3601  0EA0                     	;# 
  3602  0EA1                     	;# 
  3603  0EA2                     	;# 
  3604  0EA3                     	;# 
  3605  0EA4                     	;# 
  3606  0EA5                     	;# 
  3607  0EA6                     	;# 
  3608  0EA7                     	;# 
  3609  0F0F                     	;# 
  3610  0F10                     	;# 
  3611  0F11                     	;# 
  3612  0F12                     	;# 
  3613  0F13                     	;# 
  3614  0F14                     	;# 
  3615  0F15                     	;# 
  3616  0F16                     	;# 
  3617  0F17                     	;# 
  3618  0F18                     	;# 
  3619  0F19                     	;# 
  3620  0F1A                     	;# 
  3621  0F1B                     	;# 
  3622  0F1C                     	;# 
  3623  0F1D                     	;# 
  3624  0F1E                     	;# 
  3625  0F1F                     	;# 
  3626  0F20                     	;# 
  3627  0F21                     	;# 
  3628  0F22                     	;# 
  3629  0F23                     	;# 
  3630  0F24                     	;# 
  3631  0F25                     	;# 
  3632  0F26                     	;# 
  3633  0F27                     	;# 
  3634  0F28                     	;# 
  3635  0F29                     	;# 
  3636  0F2A                     	;# 
  3637  0F2B                     	;# 
  3638  0F2C                     	;# 
  3639  0F2D                     	;# 
  3640  0F2E                     	;# 
  3641  0F2F                     	;# 
  3642  0F30                     	;# 
  3643  0F31                     	;# 
  3644  0F32                     	;# 
  3645  0F33                     	;# 
  3646  0F34                     	;# 
  3647  0F35                     	;# 
  3648  0F36                     	;# 
  3649  0F37                     	;# 
  3650  0FE4                     	;# 
  3651  0FE5                     	;# 
  3652  0FE6                     	;# 
  3653  0FE7                     	;# 
  3654  0FE8                     	;# 
  3655  0FE9                     	;# 
  3656  0FEA                     	;# 
  3657  0FEB                     	;# 
  3658  0FED                     	;# 
  3659  0FEE                     	;# 
  3660  0FEF                     	;# 
  3661  0000                     	;# 
  3662  0001                     	;# 
  3663  0002                     	;# 
  3664  0003                     	;# 
  3665  0004                     	;# 
  3666  0005                     	;# 
  3667  0006                     	;# 
  3668  0007                     	;# 
  3669  0008                     	;# 
  3670  0009                     	;# 
  3671  000A                     	;# 
  3672  000B                     	;# 
  3673  000C                     	;# 
  3674  000D                     	;# 
  3675  000E                     	;# 
  3676  0010                     	;# 
  3677  0011                     	;# 
  3678  0012                     	;# 
  3679  0013                     	;# 
  3680  0014                     	;# 
  3681  0015                     	;# 
  3682  0015                     	;# 
  3683  0016                     	;# 
  3684  0016                     	;# 
  3685  0017                     	;# 
  3686  0018                     	;# 
  3687  0019                     	;# 
  3688  0019                     	;# 
  3689  001A                     	;# 
  3690  001B                     	;# 
  3691  001C                     	;# 
  3692  001D                     	;# 
  3693  001E                     	;# 
  3694  001F                     	;# 
  3695  008C                     	;# 
  3696  008D                     	;# 
  3697  008E                     	;# 
  3698  0090                     	;# 
  3699  0091                     	;# 
  3700  0092                     	;# 
  3701  0093                     	;# 
  3702  0094                     	;# 
  3703  0097                     	;# 
  3704  009B                     	;# 
  3705  009B                     	;# 
  3706  009C                     	;# 
  3707  009D                     	;# 
  3708  009E                     	;# 
  3709  009F                     	;# 
  3710  010C                     	;# 
  3711  010D                     	;# 
  3712  010E                     	;# 
  3713  0111                     	;# 
  3714  0112                     	;# 
  3715  0113                     	;# 
  3716  0114                     	;# 
  3717  0115                     	;# 
  3718  0116                     	;# 
  3719  0117                     	;# 
  3720  0118                     	;# 
  3721  0119                     	;# 
  3722  018C                     	;# 
  3723  018D                     	;# 
  3724  018E                     	;# 
  3725  0197                     	;# 
  3726  0199                     	;# 
  3727  0199                     	;# 
  3728  0199                     	;# 
  3729  019A                     	;# 
  3730  019A                     	;# 
  3731  019A                     	;# 
  3732  019B                     	;# 
  3733  019B                     	;# 
  3734  019B                     	;# 
  3735  019B                     	;# 
  3736  019B                     	;# 
  3737  019C                     	;# 
  3738  019C                     	;# 
  3739  019C                     	;# 
  3740  019D                     	;# 
  3741  019D                     	;# 
  3742  019D                     	;# 
  3743  019E                     	;# 
  3744  019E                     	;# 
  3745  019E                     	;# 
  3746  019F                     	;# 
  3747  019F                     	;# 
  3748  019F                     	;# 
  3749  019F                     	;# 
  3750  019F                     	;# 
  3751  020C                     	;# 
  3752  020D                     	;# 
  3753  020E                     	;# 
  3754  0211                     	;# 
  3755  0211                     	;# 
  3756  0212                     	;# 
  3757  0212                     	;# 
  3758  0213                     	;# 
  3759  0213                     	;# 
  3760  0214                     	;# 
  3761  0214                     	;# 
  3762  0215                     	;# 
  3763  0215                     	;# 
  3764  0215                     	;# 
  3765  0215                     	;# 
  3766  0216                     	;# 
  3767  0216                     	;# 
  3768  0217                     	;# 
  3769  0217                     	;# 
  3770  0219                     	;# 
  3771  021A                     	;# 
  3772  021B                     	;# 
  3773  021C                     	;# 
  3774  021D                     	;# 
  3775  021D                     	;# 
  3776  021E                     	;# 
  3777  021F                     	;# 
  3778  028C                     	;# 
  3779  028D                     	;# 
  3780  028E                     	;# 
  3781  0291                     	;# 
  3782  0291                     	;# 
  3783  0292                     	;# 
  3784  0293                     	;# 
  3785  0294                     	;# 
  3786  0295                     	;# 
  3787  0295                     	;# 
  3788  0296                     	;# 
  3789  0297                     	;# 
  3790  0298                     	;# 
  3791  029F                     	;# 
  3792  030C                     	;# 
  3793  030D                     	;# 
  3794  030E                     	;# 
  3795  0311                     	;# 
  3796  0311                     	;# 
  3797  0312                     	;# 
  3798  0313                     	;# 
  3799  0314                     	;# 
  3800  0315                     	;# 
  3801  0315                     	;# 
  3802  0316                     	;# 
  3803  0317                     	;# 
  3804  0318                     	;# 
  3805  038C                     	;# 
  3806  038D                     	;# 
  3807  038E                     	;# 
  3808  0391                     	;# 
  3809  0392                     	;# 
  3810  0393                     	;# 
  3811  0394                     	;# 
  3812  0395                     	;# 
  3813  0396                     	;# 
  3814  0397                     	;# 
  3815  0398                     	;# 
  3816  0399                     	;# 
  3817  039A                     	;# 
  3818  039C                     	;# 
  3819  039D                     	;# 
  3820  039E                     	;# 
  3821  039F                     	;# 
  3822  0411                     	;# 
  3823  0411                     	;# 
  3824  0412                     	;# 
  3825  0413                     	;# 
  3826  0414                     	;# 
  3827  0415                     	;# 
  3828  0416                     	;# 
  3829  0417                     	;# 
  3830  0418                     	;# 
  3831  0418                     	;# 
  3832  0419                     	;# 
  3833  041A                     	;# 
  3834  041B                     	;# 
  3835  041C                     	;# 
  3836  041D                     	;# 
  3837  041E                     	;# 
  3838  041F                     	;# 
  3839  0498                     	;# 
  3840  0498                     	;# 
  3841  0499                     	;# 
  3842  049A                     	;# 
  3843  049B                     	;# 
  3844  049B                     	;# 
  3845  049C                     	;# 
  3846  049D                     	;# 
  3847  049E                     	;# 
  3848  049F                     	;# 
  3849  0617                     	;# 
  3850  0618                     	;# 
  3851  0619                     	;# 
  3852  0619                     	;# 
  3853  061A                     	;# 
  3854  061B                     	;# 
  3855  061C                     	;# 
  3856  061C                     	;# 
  3857  061F                     	;# 
  3858  0691                     	;# 
  3859  0692                     	;# 
  3860  0693                     	;# 
  3861  0694                     	;# 
  3862  0695                     	;# 
  3863  0696                     	;# 
  3864  0697                     	;# 
  3865  0698                     	;# 
  3866  0699                     	;# 
  3867  0711                     	;# 
  3868  0712                     	;# 
  3869  0713                     	;# 
  3870  0714                     	;# 
  3871  0715                     	;# 
  3872  0716                     	;# 
  3873  0717                     	;# 
  3874  0718                     	;# 
  3875  0719                     	;# 
  3876  0891                     	;# 
  3877  0891                     	;# 
  3878  0891                     	;# 
  3879  0891                     	;# 
  3880  0891                     	;# 
  3881  0891                     	;# 
  3882  0892                     	;# 
  3883  0892                     	;# 
  3884  0892                     	;# 
  3885  0893                     	;# 
  3886  0893                     	;# 
  3887  0893                     	;# 
  3888  0893                     	;# 
  3889  0893                     	;# 
  3890  0893                     	;# 
  3891  0894                     	;# 
  3892  0894                     	;# 
  3893  0894                     	;# 
  3894  0895                     	;# 
  3895  0895                     	;# 
  3896  0895                     	;# 
  3897  0896                     	;# 
  3898  0896                     	;# 
  3899  0896                     	;# 
  3900  089B                     	;# 
  3901  0911                     	;# 
  3902  0912                     	;# 
  3903  0913                     	;# 
  3904  0914                     	;# 
  3905  0915                     	;# 
  3906  0916                     	;# 
  3907  0918                     	;# 
  3908  0919                     	;# 
  3909  091A                     	;# 
  3910  091B                     	;# 
  3911  091C                     	;# 
  3912  091D                     	;# 
  3913  091E                     	;# 
  3914  091F                     	;# 
  3915  0E0F                     	;# 
  3916  0E10                     	;# 
  3917  0E11                     	;# 
  3918  0E12                     	;# 
  3919  0E13                     	;# 
  3920  0E14                     	;# 
  3921  0E15                     	;# 
  3922  0E16                     	;# 
  3923  0E17                     	;# 
  3924  0E18                     	;# 
  3925  0E19                     	;# 
  3926  0E1A                     	;# 
  3927  0E1B                     	;# 
  3928  0E1C                     	;# 
  3929  0E1D                     	;# 
  3930  0E1E                     	;# 
  3931  0E1F                     	;# 
  3932  0E20                     	;# 
  3933  0E21                     	;# 
  3934  0E22                     	;# 
  3935  0E24                     	;# 
  3936  0E25                     	;# 
  3937  0E28                     	;# 
  3938  0E29                     	;# 
  3939  0E2A                     	;# 
  3940  0E2B                     	;# 
  3941  0E2C                     	;# 
  3942  0E2D                     	;# 
  3943  0E2E                     	;# 
  3944  0E2F                     	;# 
  3945  0E90                     	;# 
  3946  0E91                     	;# 
  3947  0E92                     	;# 
  3948  0E94                     	;# 
  3949  0E95                     	;# 
  3950  0E9C                     	;# 
  3951  0E9D                     	;# 
  3952  0E9E                     	;# 
  3953  0E9F                     	;# 
  3954  0EA0                     	;# 
  3955  0EA1                     	;# 
  3956  0EA2                     	;# 
  3957  0EA3                     	;# 
  3958  0EA4                     	;# 
  3959  0EA5                     	;# 
  3960  0EA6                     	;# 
  3961  0EA7                     	;# 
  3962  0F0F                     	;# 
  3963  0F10                     	;# 
  3964  0F11                     	;# 
  3965  0F12                     	;# 
  3966  0F13                     	;# 
  3967  0F14                     	;# 
  3968  0F15                     	;# 
  3969  0F16                     	;# 
  3970  0F17                     	;# 
  3971  0F18                     	;# 
  3972  0F19                     	;# 
  3973  0F1A                     	;# 
  3974  0F1B                     	;# 
  3975  0F1C                     	;# 
  3976  0F1D                     	;# 
  3977  0F1E                     	;# 
  3978  0F1F                     	;# 
  3979  0F20                     	;# 
  3980  0F21                     	;# 
  3981  0F22                     	;# 
  3982  0F23                     	;# 
  3983  0F24                     	;# 
  3984  0F25                     	;# 
  3985  0F26                     	;# 
  3986  0F27                     	;# 
  3987  0F28                     	;# 
  3988  0F29                     	;# 
  3989  0F2A                     	;# 
  3990  0F2B                     	;# 
  3991  0F2C                     	;# 
  3992  0F2D                     	;# 
  3993  0F2E                     	;# 
  3994  0F2F                     	;# 
  3995  0F30                     	;# 
  3996  0F31                     	;# 
  3997  0F32                     	;# 
  3998  0F33                     	;# 
  3999  0F34                     	;# 
  4000  0F35                     	;# 
  4001  0F36                     	;# 
  4002  0F37                     	;# 
  4003  0FE4                     	;# 
  4004  0FE5                     	;# 
  4005  0FE6                     	;# 
  4006  0FE7                     	;# 
  4007  0FE8                     	;# 
  4008  0FE9                     	;# 
  4009  0FEA                     	;# 
  4010  0FEB                     	;# 
  4011  0FED                     	;# 
  4012  0FEE                     	;# 
  4013  0FEF                     	;# 
  4014  0000                     	;# 
  4015  0001                     	;# 
  4016  0002                     	;# 
  4017  0003                     	;# 
  4018  0004                     	;# 
  4019  0005                     	;# 
  4020  0006                     	;# 
  4021  0007                     	;# 
  4022  0008                     	;# 
  4023  0009                     	;# 
  4024  000A                     	;# 
  4025  000B                     	;# 
  4026  000C                     	;# 
  4027  000D                     	;# 
  4028  000E                     	;# 
  4029  0010                     	;# 
  4030  0011                     	;# 
  4031  0012                     	;# 
  4032  0013                     	;# 
  4033  0014                     	;# 
  4034  0015                     	;# 
  4035  0015                     	;# 
  4036  0016                     	;# 
  4037  0016                     	;# 
  4038  0017                     	;# 
  4039  0018                     	;# 
  4040  0019                     	;# 
  4041  0019                     	;# 
  4042  001A                     	;# 
  4043  001B                     	;# 
  4044  001C                     	;# 
  4045  001D                     	;# 
  4046  001E                     	;# 
  4047  001F                     	;# 
  4048  008C                     	;# 
  4049  008D                     	;# 
  4050  008E                     	;# 
  4051  0090                     	;# 
  4052  0091                     	;# 
  4053  0092                     	;# 
  4054  0093                     	;# 
  4055  0094                     	;# 
  4056  0097                     	;# 
  4057  009B                     	;# 
  4058  009B                     	;# 
  4059  009C                     	;# 
  4060  009D                     	;# 
  4061  009E                     	;# 
  4062  009F                     	;# 
  4063  010C                     	;# 
  4064  010D                     	;# 
  4065  010E                     	;# 
  4066  0111                     	;# 
  4067  0112                     	;# 
  4068  0113                     	;# 
  4069  0114                     	;# 
  4070  0115                     	;# 
  4071  0116                     	;# 
  4072  0117                     	;# 
  4073  0118                     	;# 
  4074  0119                     	;# 
  4075  018C                     	;# 
  4076  018D                     	;# 
  4077  018E                     	;# 
  4078  0197                     	;# 
  4079  0199                     	;# 
  4080  0199                     	;# 
  4081  0199                     	;# 
  4082  019A                     	;# 
  4083  019A                     	;# 
  4084  019A                     	;# 
  4085  019B                     	;# 
  4086  019B                     	;# 
  4087  019B                     	;# 
  4088  019B                     	;# 
  4089  019B                     	;# 
  4090  019C                     	;# 
  4091  019C                     	;# 
  4092  019C                     	;# 
  4093  019D                     	;# 
  4094  019D                     	;# 
  4095  019D                     	;# 
  4096  019E                     	;# 
  4097  019E                     	;# 
  4098  019E                     	;# 
  4099  019F                     	;# 
  4100  019F                     	;# 
  4101  019F                     	;# 
  4102  019F                     	;# 
  4103  019F                     	;# 
  4104  020C                     	;# 
  4105  020D                     	;# 
  4106  020E                     	;# 
  4107  0211                     	;# 
  4108  0211                     	;# 
  4109  0212                     	;# 
  4110  0212                     	;# 
  4111  0213                     	;# 
  4112  0213                     	;# 
  4113  0214                     	;# 
  4114  0214                     	;# 
  4115  0215                     	;# 
  4116  0215                     	;# 
  4117  0215                     	;# 
  4118  0215                     	;# 
  4119  0216                     	;# 
  4120  0216                     	;# 
  4121  0217                     	;# 
  4122  0217                     	;# 
  4123  0219                     	;# 
  4124  021A                     	;# 
  4125  021B                     	;# 
  4126  021C                     	;# 
  4127  021D                     	;# 
  4128  021D                     	;# 
  4129  021E                     	;# 
  4130  021F                     	;# 
  4131  028C                     	;# 
  4132  028D                     	;# 
  4133  028E                     	;# 
  4134  0291                     	;# 
  4135  0291                     	;# 
  4136  0292                     	;# 
  4137  0293                     	;# 
  4138  0294                     	;# 
  4139  0295                     	;# 
  4140  0295                     	;# 
  4141  0296                     	;# 
  4142  0297                     	;# 
  4143  0298                     	;# 
  4144  029F                     	;# 
  4145  030C                     	;# 
  4146  030D                     	;# 
  4147  030E                     	;# 
  4148  0311                     	;# 
  4149  0311                     	;# 
  4150  0312                     	;# 
  4151  0313                     	;# 
  4152  0314                     	;# 
  4153  0315                     	;# 
  4154  0315                     	;# 
  4155  0316                     	;# 
  4156  0317                     	;# 
  4157  0318                     	;# 
  4158  038C                     	;# 
  4159  038D                     	;# 
  4160  038E                     	;# 
  4161  0391                     	;# 
  4162  0392                     	;# 
  4163  0393                     	;# 
  4164  0394                     	;# 
  4165  0395                     	;# 
  4166  0396                     	;# 
  4167  0397                     	;# 
  4168  0398                     	;# 
  4169  0399                     	;# 
  4170  039A                     	;# 
  4171  039C                     	;# 
  4172  039D                     	;# 
  4173  039E                     	;# 
  4174  039F                     	;# 
  4175  0411                     	;# 
  4176  0411                     	;# 
  4177  0412                     	;# 
  4178  0413                     	;# 
  4179  0414                     	;# 
  4180  0415                     	;# 
  4181  0416                     	;# 
  4182  0417                     	;# 
  4183  0418                     	;# 
  4184  0418                     	;# 
  4185  0419                     	;# 
  4186  041A                     	;# 
  4187  041B                     	;# 
  4188  041C                     	;# 
  4189  041D                     	;# 
  4190  041E                     	;# 
  4191  041F                     	;# 
  4192  0498                     	;# 
  4193  0498                     	;# 
  4194  0499                     	;# 
  4195  049A                     	;# 
  4196  049B                     	;# 
  4197  049B                     	;# 
  4198  049C                     	;# 
  4199  049D                     	;# 
  4200  049E                     	;# 
  4201  049F                     	;# 
  4202  0617                     	;# 
  4203  0618                     	;# 
  4204  0619                     	;# 
  4205  0619                     	;# 
  4206  061A                     	;# 
  4207  061B                     	;# 
  4208  061C                     	;# 
  4209  061C                     	;# 
  4210  061F                     	;# 
  4211  0691                     	;# 
  4212  0692                     	;# 
  4213  0693                     	;# 
  4214  0694                     	;# 
  4215  0695                     	;# 
  4216  0696                     	;# 
  4217  0697                     	;# 
  4218  0698                     	;# 
  4219  0699                     	;# 
  4220  0711                     	;# 
  4221  0712                     	;# 
  4222  0713                     	;# 
  4223  0714                     	;# 
  4224  0715                     	;# 
  4225  0716                     	;# 
  4226  0717                     	;# 
  4227  0718                     	;# 
  4228  0719                     	;# 
  4229  0891                     	;# 
  4230  0891                     	;# 
  4231  0891                     	;# 
  4232  0891                     	;# 
  4233  0891                     	;# 
  4234  0891                     	;# 
  4235  0892                     	;# 
  4236  0892                     	;# 
  4237  0892                     	;# 
  4238  0893                     	;# 
  4239  0893                     	;# 
  4240  0893                     	;# 
  4241  0893                     	;# 
  4242  0893                     	;# 
  4243  0893                     	;# 
  4244  0894                     	;# 
  4245  0894                     	;# 
  4246  0894                     	;# 
  4247  0895                     	;# 
  4248  0895                     	;# 
  4249  0895                     	;# 
  4250  0896                     	;# 
  4251  0896                     	;# 
  4252  0896                     	;# 
  4253  089B                     	;# 
  4254  0911                     	;# 
  4255  0912                     	;# 
  4256  0913                     	;# 
  4257  0914                     	;# 
  4258  0915                     	;# 
  4259  0916                     	;# 
  4260  0918                     	;# 
  4261  0919                     	;# 
  4262  091A                     	;# 
  4263  091B                     	;# 
  4264  091C                     	;# 
  4265  091D                     	;# 
  4266  091E                     	;# 
  4267  091F                     	;# 
  4268  0E0F                     	;# 
  4269  0E10                     	;# 
  4270  0E11                     	;# 
  4271  0E12                     	;# 
  4272  0E13                     	;# 
  4273  0E14                     	;# 
  4274  0E15                     	;# 
  4275  0E16                     	;# 
  4276  0E17                     	;# 
  4277  0E18                     	;# 
  4278  0E19                     	;# 
  4279  0E1A                     	;# 
  4280  0E1B                     	;# 
  4281  0E1C                     	;# 
  4282  0E1D                     	;# 
  4283  0E1E                     	;# 
  4284  0E1F                     	;# 
  4285  0E20                     	;# 
  4286  0E21                     	;# 
  4287  0E22                     	;# 
  4288  0E24                     	;# 
  4289  0E25                     	;# 
  4290  0E28                     	;# 
  4291  0E29                     	;# 
  4292  0E2A                     	;# 
  4293  0E2B                     	;# 
  4294  0E2C                     	;# 
  4295  0E2D                     	;# 
  4296  0E2E                     	;# 
  4297  0E2F                     	;# 
  4298  0E90                     	;# 
  4299  0E91                     	;# 
  4300  0E92                     	;# 
  4301  0E94                     	;# 
  4302  0E95                     	;# 
  4303  0E9C                     	;# 
  4304  0E9D                     	;# 
  4305  0E9E                     	;# 
  4306  0E9F                     	;# 
  4307  0EA0                     	;# 
  4308  0EA1                     	;# 
  4309  0EA2                     	;# 
  4310  0EA3                     	;# 
  4311  0EA4                     	;# 
  4312  0EA5                     	;# 
  4313  0EA6                     	;# 
  4314  0EA7                     	;# 
  4315  0F0F                     	;# 
  4316  0F10                     	;# 
  4317  0F11                     	;# 
  4318  0F12                     	;# 
  4319  0F13                     	;# 
  4320  0F14                     	;# 
  4321  0F15                     	;# 
  4322  0F16                     	;# 
  4323  0F17                     	;# 
  4324  0F18                     	;# 
  4325  0F19                     	;# 
  4326  0F1A                     	;# 
  4327  0F1B                     	;# 
  4328  0F1C                     	;# 
  4329  0F1D                     	;# 
  4330  0F1E                     	;# 
  4331  0F1F                     	;# 
  4332  0F20                     	;# 
  4333  0F21                     	;# 
  4334  0F22                     	;# 
  4335  0F23                     	;# 
  4336  0F24                     	;# 
  4337  0F25                     	;# 
  4338  0F26                     	;# 
  4339  0F27                     	;# 
  4340  0F28                     	;# 
  4341  0F29                     	;# 
  4342  0F2A                     	;# 
  4343  0F2B                     	;# 
  4344  0F2C                     	;# 
  4345  0F2D                     	;# 
  4346  0F2E                     	;# 
  4347  0F2F                     	;# 
  4348  0F30                     	;# 
  4349  0F31                     	;# 
  4350  0F32                     	;# 
  4351  0F33                     	;# 
  4352  0F34                     	;# 
  4353  0F35                     	;# 
  4354  0F36                     	;# 
  4355  0F37                     	;# 
  4356  0FE4                     	;# 
  4357  0FE5                     	;# 
  4358  0FE6                     	;# 
  4359  0FE7                     	;# 
  4360  0FE8                     	;# 
  4361  0FE9                     	;# 
  4362  0FEA                     	;# 
  4363  0FEB                     	;# 
  4364  0FED                     	;# 
  4365  0FEE                     	;# 
  4366  0FEF                     	;# 
  4367  0000                     	;# 
  4368  0001                     	;# 
  4369  0002                     	;# 
  4370  0003                     	;# 
  4371  0004                     	;# 
  4372  0005                     	;# 
  4373  0006                     	;# 
  4374  0007                     	;# 
  4375  0008                     	;# 
  4376  0009                     	;# 
  4377  000A                     	;# 
  4378  000B                     	;# 
  4379  000C                     	;# 
  4380  000D                     	;# 
  4381  000E                     	;# 
  4382  0010                     	;# 
  4383  0011                     	;# 
  4384  0012                     	;# 
  4385  0013                     	;# 
  4386  0014                     	;# 
  4387  0015                     	;# 
  4388  0015                     	;# 
  4389  0016                     	;# 
  4390  0016                     	;# 
  4391  0017                     	;# 
  4392  0018                     	;# 
  4393  0019                     	;# 
  4394  0019                     	;# 
  4395  001A                     	;# 
  4396  001B                     	;# 
  4397  001C                     	;# 
  4398  001D                     	;# 
  4399  001E                     	;# 
  4400  001F                     	;# 
  4401  008C                     	;# 
  4402  008D                     	;# 
  4403  008E                     	;# 
  4404  0090                     	;# 
  4405  0091                     	;# 
  4406  0092                     	;# 
  4407  0093                     	;# 
  4408  0094                     	;# 
  4409  0097                     	;# 
  4410  009B                     	;# 
  4411  009B                     	;# 
  4412  009C                     	;# 
  4413  009D                     	;# 
  4414  009E                     	;# 
  4415  009F                     	;# 
  4416  010C                     	;# 
  4417  010D                     	;# 
  4418  010E                     	;# 
  4419  0111                     	;# 
  4420  0112                     	;# 
  4421  0113                     	;# 
  4422  0114                     	;# 
  4423  0115                     	;# 
  4424  0116                     	;# 
  4425  0117                     	;# 
  4426  0118                     	;# 
  4427  0119                     	;# 
  4428  018C                     	;# 
  4429  018D                     	;# 
  4430  018E                     	;# 
  4431  0197                     	;# 
  4432  0199                     	;# 
  4433  0199                     	;# 
  4434  0199                     	;# 
  4435  019A                     	;# 
  4436  019A                     	;# 
  4437  019A                     	;# 
  4438  019B                     	;# 
  4439  019B                     	;# 
  4440  019B                     	;# 
  4441  019B                     	;# 
  4442  019B                     	;# 
  4443  019C                     	;# 
  4444  019C                     	;# 
  4445  019C                     	;# 
  4446  019D                     	;# 
  4447  019D                     	;# 
  4448  019D                     	;# 
  4449  019E                     	;# 
  4450  019E                     	;# 
  4451  019E                     	;# 
  4452  019F                     	;# 
  4453  019F                     	;# 
  4454  019F                     	;# 
  4455  019F                     	;# 
  4456  019F                     	;# 
  4457  020C                     	;# 
  4458  020D                     	;# 
  4459  020E                     	;# 
  4460  0211                     	;# 
  4461  0211                     	;# 
  4462  0212                     	;# 
  4463  0212                     	;# 
  4464  0213                     	;# 
  4465  0213                     	;# 
  4466  0214                     	;# 
  4467  0214                     	;# 
  4468  0215                     	;# 
  4469  0215                     	;# 
  4470  0215                     	;# 
  4471  0215                     	;# 
  4472  0216                     	;# 
  4473  0216                     	;# 
  4474  0217                     	;# 
  4475  0217                     	;# 
  4476  0219                     	;# 
  4477  021A                     	;# 
  4478  021B                     	;# 
  4479  021C                     	;# 
  4480  021D                     	;# 
  4481  021D                     	;# 
  4482  021E                     	;# 
  4483  021F                     	;# 
  4484  028C                     	;# 
  4485  028D                     	;# 
  4486  028E                     	;# 
  4487  0291                     	;# 
  4488  0291                     	;# 
  4489  0292                     	;# 
  4490  0293                     	;# 
  4491  0294                     	;# 
  4492  0295                     	;# 
  4493  0295                     	;# 
  4494  0296                     	;# 
  4495  0297                     	;# 
  4496  0298                     	;# 
  4497  029F                     	;# 
  4498  030C                     	;# 
  4499  030D                     	;# 
  4500  030E                     	;# 
  4501  0311                     	;# 
  4502  0311                     	;# 
  4503  0312                     	;# 
  4504  0313                     	;# 
  4505  0314                     	;# 
  4506  0315                     	;# 
  4507  0315                     	;# 
  4508  0316                     	;# 
  4509  0317                     	;# 
  4510  0318                     	;# 
  4511  038C                     	;# 
  4512  038D                     	;# 
  4513  038E                     	;# 
  4514  0391                     	;# 
  4515  0392                     	;# 
  4516  0393                     	;# 
  4517  0394                     	;# 
  4518  0395                     	;# 
  4519  0396                     	;# 
  4520  0397                     	;# 
  4521  0398                     	;# 
  4522  0399                     	;# 
  4523  039A                     	;# 
  4524  039C                     	;# 
  4525  039D                     	;# 
  4526  039E                     	;# 
  4527  039F                     	;# 
  4528  0411                     	;# 
  4529  0411                     	;# 
  4530  0412                     	;# 
  4531  0413                     	;# 
  4532  0414                     	;# 
  4533  0415                     	;# 
  4534  0416                     	;# 
  4535  0417                     	;# 
  4536  0418                     	;# 
  4537  0418                     	;# 
  4538  0419                     	;# 
  4539  041A                     	;# 
  4540  041B                     	;# 
  4541  041C                     	;# 
  4542  041D                     	;# 
  4543  041E                     	;# 
  4544  041F                     	;# 
  4545  0498                     	;# 
  4546  0498                     	;# 
  4547  0499                     	;# 
  4548  049A                     	;# 
  4549  049B                     	;# 
  4550  049B                     	;# 
  4551  049C                     	;# 
  4552  049D                     	;# 
  4553  049E                     	;# 
  4554  049F                     	;# 
  4555  0617                     	;# 
  4556  0618                     	;# 
  4557  0619                     	;# 
  4558  0619                     	;# 
  4559  061A                     	;# 
  4560  061B                     	;# 
  4561  061C                     	;# 
  4562  061C                     	;# 
  4563  061F                     	;# 
  4564  0691                     	;# 
  4565  0692                     	;# 
  4566  0693                     	;# 
  4567  0694                     	;# 
  4568  0695                     	;# 
  4569  0696                     	;# 
  4570  0697                     	;# 
  4571  0698                     	;# 
  4572  0699                     	;# 
  4573  0711                     	;# 
  4574  0712                     	;# 
  4575  0713                     	;# 
  4576  0714                     	;# 
  4577  0715                     	;# 
  4578  0716                     	;# 
  4579  0717                     	;# 
  4580  0718                     	;# 
  4581  0719                     	;# 
  4582  0891                     	;# 
  4583  0891                     	;# 
  4584  0891                     	;# 
  4585  0891                     	;# 
  4586  0891                     	;# 
  4587  0891                     	;# 
  4588  0892                     	;# 
  4589  0892                     	;# 
  4590  0892                     	;# 
  4591  0893                     	;# 
  4592  0893                     	;# 
  4593  0893                     	;# 
  4594  0893                     	;# 
  4595  0893                     	;# 
  4596  0893                     	;# 
  4597  0894                     	;# 
  4598  0894                     	;# 
  4599  0894                     	;# 
  4600  0895                     	;# 
  4601  0895                     	;# 
  4602  0895                     	;# 
  4603  0896                     	;# 
  4604  0896                     	;# 
  4605  0896                     	;# 
  4606  089B                     	;# 
  4607  0911                     	;# 
  4608  0912                     	;# 
  4609  0913                     	;# 
  4610  0914                     	;# 
  4611  0915                     	;# 
  4612  0916                     	;# 
  4613  0918                     	;# 
  4614  0919                     	;# 
  4615  091A                     	;# 
  4616  091B                     	;# 
  4617  091C                     	;# 
  4618  091D                     	;# 
  4619  091E                     	;# 
  4620  091F                     	;# 
  4621  0E0F                     	;# 
  4622  0E10                     	;# 
  4623  0E11                     	;# 
  4624  0E12                     	;# 
  4625  0E13                     	;# 
  4626  0E14                     	;# 
  4627  0E15                     	;# 
  4628  0E16                     	;# 
  4629  0E17                     	;# 
  4630  0E18                     	;# 
  4631  0E19                     	;# 
  4632  0E1A                     	;# 
  4633  0E1B                     	;# 
  4634  0E1C                     	;# 
  4635  0E1D                     	;# 
  4636  0E1E                     	;# 
  4637  0E1F                     	;# 
  4638  0E20                     	;# 
  4639  0E21                     	;# 
  4640  0E22                     	;# 
  4641  0E24                     	;# 
  4642  0E25                     	;# 
  4643  0E28                     	;# 
  4644  0E29                     	;# 
  4645  0E2A                     	;# 
  4646  0E2B                     	;# 
  4647  0E2C                     	;# 
  4648  0E2D                     	;# 
  4649  0E2E                     	;# 
  4650  0E2F                     	;# 
  4651  0E90                     	;# 
  4652  0E91                     	;# 
  4653  0E92                     	;# 
  4654  0E94                     	;# 
  4655  0E95                     	;# 
  4656  0E9C                     	;# 
  4657  0E9D                     	;# 
  4658  0E9E                     	;# 
  4659  0E9F                     	;# 
  4660  0EA0                     	;# 
  4661  0EA1                     	;# 
  4662  0EA2                     	;# 
  4663  0EA3                     	;# 
  4664  0EA4                     	;# 
  4665  0EA5                     	;# 
  4666  0EA6                     	;# 
  4667  0EA7                     	;# 
  4668  0F0F                     	;# 
  4669  0F10                     	;# 
  4670  0F11                     	;# 
  4671  0F12                     	;# 
  4672  0F13                     	;# 
  4673  0F14                     	;# 
  4674  0F15                     	;# 
  4675  0F16                     	;# 
  4676  0F17                     	;# 
  4677  0F18                     	;# 
  4678  0F19                     	;# 
  4679  0F1A                     	;# 
  4680  0F1B                     	;# 
  4681  0F1C                     	;# 
  4682  0F1D                     	;# 
  4683  0F1E                     	;# 
  4684  0F1F                     	;# 
  4685  0F20                     	;# 
  4686  0F21                     	;# 
  4687  0F22                     	;# 
  4688  0F23                     	;# 
  4689  0F24                     	;# 
  4690  0F25                     	;# 
  4691  0F26                     	;# 
  4692  0F27                     	;# 
  4693  0F28                     	;# 
  4694  0F29                     	;# 
  4695  0F2A                     	;# 
  4696  0F2B                     	;# 
  4697  0F2C                     	;# 
  4698  0F2D                     	;# 
  4699  0F2E                     	;# 
  4700  0F2F                     	;# 
  4701  0F30                     	;# 
  4702  0F31                     	;# 
  4703  0F32                     	;# 
  4704  0F33                     	;# 
  4705  0F34                     	;# 
  4706  0F35                     	;# 
  4707  0F36                     	;# 
  4708  0F37                     	;# 
  4709  0FE4                     	;# 
  4710  0FE5                     	;# 
  4711  0FE6                     	;# 
  4712  0FE7                     	;# 
  4713  0FE8                     	;# 
  4714  0FE9                     	;# 
  4715  0FEA                     	;# 
  4716  0FEB                     	;# 
  4717  0FED                     	;# 
  4718  0FEE                     	;# 
  4719  0FEF                     	;# 
  4720  0000                     	;# 
  4721  0001                     	;# 
  4722  0002                     	;# 
  4723  0003                     	;# 
  4724  0004                     	;# 
  4725  0005                     	;# 
  4726  0006                     	;# 
  4727  0007                     	;# 
  4728  0008                     	;# 
  4729  0009                     	;# 
  4730  000A                     	;# 
  4731  000B                     	;# 
  4732  000C                     	;# 
  4733  000D                     	;# 
  4734  000E                     	;# 
  4735  0010                     	;# 
  4736  0011                     	;# 
  4737  0012                     	;# 
  4738  0013                     	;# 
  4739  0014                     	;# 
  4740  0015                     	;# 
  4741  0015                     	;# 
  4742  0016                     	;# 
  4743  0016                     	;# 
  4744  0017                     	;# 
  4745  0018                     	;# 
  4746  0019                     	;# 
  4747  0019                     	;# 
  4748  001A                     	;# 
  4749  001B                     	;# 
  4750  001C                     	;# 
  4751  001D                     	;# 
  4752  001E                     	;# 
  4753  001F                     	;# 
  4754  008C                     	;# 
  4755  008D                     	;# 
  4756  008E                     	;# 
  4757  0090                     	;# 
  4758  0091                     	;# 
  4759  0092                     	;# 
  4760  0093                     	;# 
  4761  0094                     	;# 
  4762  0097                     	;# 
  4763  009B                     	;# 
  4764  009B                     	;# 
  4765  009C                     	;# 
  4766  009D                     	;# 
  4767  009E                     	;# 
  4768  009F                     	;# 
  4769  010C                     	;# 
  4770  010D                     	;# 
  4771  010E                     	;# 
  4772  0111                     	;# 
  4773  0112                     	;# 
  4774  0113                     	;# 
  4775  0114                     	;# 
  4776  0115                     	;# 
  4777  0116                     	;# 
  4778  0117                     	;# 
  4779  0118                     	;# 
  4780  0119                     	;# 
  4781  018C                     	;# 
  4782  018D                     	;# 
  4783  018E                     	;# 
  4784  0197                     	;# 
  4785  0199                     	;# 
  4786  0199                     	;# 
  4787  0199                     	;# 
  4788  019A                     	;# 
  4789  019A                     	;# 
  4790  019A                     	;# 
  4791  019B                     	;# 
  4792  019B                     	;# 
  4793  019B                     	;# 
  4794  019B                     	;# 
  4795  019B                     	;# 
  4796  019C                     	;# 
  4797  019C                     	;# 
  4798  019C                     	;# 
  4799  019D                     	;# 
  4800  019D                     	;# 
  4801  019D                     	;# 
  4802  019E                     	;# 
  4803  019E                     	;# 
  4804  019E                     	;# 
  4805  019F                     	;# 
  4806  019F                     	;# 
  4807  019F                     	;# 
  4808  019F                     	;# 
  4809  019F                     	;# 
  4810  020C                     	;# 
  4811  020D                     	;# 
  4812  020E                     	;# 
  4813  0211                     	;# 
  4814  0211                     	;# 
  4815  0212                     	;# 
  4816  0212                     	;# 
  4817  0213                     	;# 
  4818  0213                     	;# 
  4819  0214                     	;# 
  4820  0214                     	;# 
  4821  0215                     	;# 
  4822  0215                     	;# 
  4823  0215                     	;# 
  4824  0215                     	;# 
  4825  0216                     	;# 
  4826  0216                     	;# 
  4827  0217                     	;# 
  4828  0217                     	;# 
  4829  0219                     	;# 
  4830  021A                     	;# 
  4831  021B                     	;# 
  4832  021C                     	;# 
  4833  021D                     	;# 
  4834  021D                     	;# 
  4835  021E                     	;# 
  4836  021F                     	;# 
  4837  028C                     	;# 
  4838  028D                     	;# 
  4839  028E                     	;# 
  4840  0291                     	;# 
  4841  0291                     	;# 
  4842  0292                     	;# 
  4843  0293                     	;# 
  4844  0294                     	;# 
  4845  0295                     	;# 
  4846  0295                     	;# 
  4847  0296                     	;# 
  4848  0297                     	;# 
  4849  0298                     	;# 
  4850  029F                     	;# 
  4851  030C                     	;# 
  4852  030D                     	;# 
  4853  030E                     	;# 
  4854  0311                     	;# 
  4855  0311                     	;# 
  4856  0312                     	;# 
  4857  0313                     	;# 
  4858  0314                     	;# 
  4859  0315                     	;# 
  4860  0315                     	;# 
  4861  0316                     	;# 
  4862  0317                     	;# 
  4863  0318                     	;# 
  4864  038C                     	;# 
  4865  038D                     	;# 
  4866  038E                     	;# 
  4867  0391                     	;# 
  4868  0392                     	;# 
  4869  0393                     	;# 
  4870  0394                     	;# 
  4871  0395                     	;# 
  4872  0396                     	;# 
  4873  0397                     	;# 
  4874  0398                     	;# 
  4875  0399                     	;# 
  4876  039A                     	;# 
  4877  039C                     	;# 
  4878  039D                     	;# 
  4879  039E                     	;# 
  4880  039F                     	;# 
  4881  0411                     	;# 
  4882  0411                     	;# 
  4883  0412                     	;# 
  4884  0413                     	;# 
  4885  0414                     	;# 
  4886  0415                     	;# 
  4887  0416                     	;# 
  4888  0417                     	;# 
  4889  0418                     	;# 
  4890  0418                     	;# 
  4891  0419                     	;# 
  4892  041A                     	;# 
  4893  041B                     	;# 
  4894  041C                     	;# 
  4895  041D                     	;# 
  4896  041E                     	;# 
  4897  041F                     	;# 
  4898  0498                     	;# 
  4899  0498                     	;# 
  4900  0499                     	;# 
  4901  049A                     	;# 
  4902  049B                     	;# 
  4903  049B                     	;# 
  4904  049C                     	;# 
  4905  049D                     	;# 
  4906  049E                     	;# 
  4907  049F                     	;# 
  4908  0617                     	;# 
  4909  0618                     	;# 
  4910  0619                     	;# 
  4911  0619                     	;# 
  4912  061A                     	;# 
  4913  061B                     	;# 
  4914  061C                     	;# 
  4915  061C                     	;# 
  4916  061F                     	;# 
  4917  0691                     	;# 
  4918  0692                     	;# 
  4919  0693                     	;# 
  4920  0694                     	;# 
  4921  0695                     	;# 
  4922  0696                     	;# 
  4923  0697                     	;# 
  4924  0698                     	;# 
  4925  0699                     	;# 
  4926  0711                     	;# 
  4927  0712                     	;# 
  4928  0713                     	;# 
  4929  0714                     	;# 
  4930  0715                     	;# 
  4931  0716                     	;# 
  4932  0717                     	;# 
  4933  0718                     	;# 
  4934  0719                     	;# 
  4935  0891                     	;# 
  4936  0891                     	;# 
  4937  0891                     	;# 
  4938  0891                     	;# 
  4939  0891                     	;# 
  4940  0891                     	;# 
  4941  0892                     	;# 
  4942  0892                     	;# 
  4943  0892                     	;# 
  4944  0893                     	;# 
  4945  0893                     	;# 
  4946  0893                     	;# 
  4947  0893                     	;# 
  4948  0893                     	;# 
  4949  0893                     	;# 
  4950  0894                     	;# 
  4951  0894                     	;# 
  4952  0894                     	;# 
  4953  0895                     	;# 
  4954  0895                     	;# 
  4955  0895                     	;# 
  4956  0896                     	;# 
  4957  0896                     	;# 
  4958  0896                     	;# 
  4959  089B                     	;# 
  4960  0911                     	;# 
  4961  0912                     	;# 
  4962  0913                     	;# 
  4963  0914                     	;# 
  4964  0915                     	;# 
  4965  0916                     	;# 
  4966  0918                     	;# 
  4967  0919                     	;# 
  4968  091A                     	;# 
  4969  091B                     	;# 
  4970  091C                     	;# 
  4971  091D                     	;# 
  4972  091E                     	;# 
  4973  091F                     	;# 
  4974  0E0F                     	;# 
  4975  0E10                     	;# 
  4976  0E11                     	;# 
  4977  0E12                     	;# 
  4978  0E13                     	;# 
  4979  0E14                     	;# 
  4980  0E15                     	;# 
  4981  0E16                     	;# 
  4982  0E17                     	;# 
  4983  0E18                     	;# 
  4984  0E19                     	;# 
  4985  0E1A                     	;# 
  4986  0E1B                     	;# 
  4987  0E1C                     	;# 
  4988  0E1D                     	;# 
  4989  0E1E                     	;# 
  4990  0E1F                     	;# 
  4991  0E20                     	;# 
  4992  0E21                     	;# 
  4993  0E22                     	;# 
  4994  0E24                     	;# 
  4995  0E25                     	;# 
  4996  0E28                     	;# 
  4997  0E29                     	;# 
  4998  0E2A                     	;# 
  4999  0E2B                     	;# 
  5000  0E2C                     	;# 
  5001  0E2D                     	;# 
  5002  0E2E                     	;# 
  5003  0E2F                     	;# 
  5004  0E90                     	;# 
  5005  0E91                     	;# 
  5006  0E92                     	;# 
  5007  0E94                     	;# 
  5008  0E95                     	;# 
  5009  0E9C                     	;# 
  5010  0E9D                     	;# 
  5011  0E9E                     	;# 
  5012  0E9F                     	;# 
  5013  0EA0                     	;# 
  5014  0EA1                     	;# 
  5015  0EA2                     	;# 
  5016  0EA3                     	;# 
  5017  0EA4                     	;# 
  5018  0EA5                     	;# 
  5019  0EA6                     	;# 
  5020  0EA7                     	;# 
  5021  0F0F                     	;# 
  5022  0F10                     	;# 
  5023  0F11                     	;# 
  5024  0F12                     	;# 
  5025  0F13                     	;# 
  5026  0F14                     	;# 
  5027  0F15                     	;# 
  5028  0F16                     	;# 
  5029  0F17                     	;# 
  5030  0F18                     	;# 
  5031  0F19                     	;# 
  5032  0F1A                     	;# 
  5033  0F1B                     	;# 
  5034  0F1C                     	;# 
  5035  0F1D                     	;# 
  5036  0F1E                     	;# 
  5037  0F1F                     	;# 
  5038  0F20                     	;# 
  5039  0F21                     	;# 
  5040  0F22                     	;# 
  5041  0F23                     	;# 
  5042  0F24                     	;# 
  5043  0F25                     	;# 
  5044  0F26                     	;# 
  5045  0F27                     	;# 
  5046  0F28                     	;# 
  5047  0F29                     	;# 
  5048  0F2A                     	;# 
  5049  0F2B                     	;# 
  5050  0F2C                     	;# 
  5051  0F2D                     	;# 
  5052  0F2E                     	;# 
  5053  0F2F                     	;# 
  5054  0F30                     	;# 
  5055  0F31                     	;# 
  5056  0F32                     	;# 
  5057  0F33                     	;# 
  5058  0F34                     	;# 
  5059  0F35                     	;# 
  5060  0F36                     	;# 
  5061  0F37                     	;# 
  5062  0FE4                     	;# 
  5063  0FE5                     	;# 
  5064  0FE6                     	;# 
  5065  0FE7                     	;# 
  5066  0FE8                     	;# 
  5067  0FE9                     	;# 
  5068  0FEA                     	;# 
  5069  0FEB                     	;# 
  5070  0FED                     	;# 
  5071  0FEE                     	;# 
  5072  0FEF                     	;# 
  5073  0000                     	;# 
  5074  0001                     	;# 
  5075  0002                     	;# 
  5076  0003                     	;# 
  5077  0004                     	;# 
  5078  0005                     	;# 
  5079  0006                     	;# 
  5080  0007                     	;# 
  5081  0008                     	;# 
  5082  0009                     	;# 
  5083  000A                     	;# 
  5084  000B                     	;# 
  5085  000C                     	;# 
  5086  000D                     	;# 
  5087  000E                     	;# 
  5088  0010                     	;# 
  5089  0011                     	;# 
  5090  0012                     	;# 
  5091  0013                     	;# 
  5092  0014                     	;# 
  5093  0015                     	;# 
  5094  0015                     	;# 
  5095  0016                     	;# 
  5096  0016                     	;# 
  5097  0017                     	;# 
  5098  0018                     	;# 
  5099  0019                     	;# 
  5100  0019                     	;# 
  5101  001A                     	;# 
  5102  001B                     	;# 
  5103  001C                     	;# 
  5104  001D                     	;# 
  5105  001E                     	;# 
  5106  001F                     	;# 
  5107  008C                     	;# 
  5108  008D                     	;# 
  5109  008E                     	;# 
  5110  0090                     	;# 
  5111  0091                     	;# 
  5112  0092                     	;# 
  5113  0093                     	;# 
  5114  0094                     	;# 
  5115  0097                     	;# 
  5116  009B                     	;# 
  5117  009B                     	;# 
  5118  009C                     	;# 
  5119  009D                     	;# 
  5120  009E                     	;# 
  5121  009F                     	;# 
  5122  010C                     	;# 
  5123  010D                     	;# 
  5124  010E                     	;# 
  5125  0111                     	;# 
  5126  0112                     	;# 
  5127  0113                     	;# 
  5128  0114                     	;# 
  5129  0115                     	;# 
  5130  0116                     	;# 
  5131  0117                     	;# 
  5132  0118                     	;# 
  5133  0119                     	;# 
  5134  018C                     	;# 
  5135  018D                     	;# 
  5136  018E                     	;# 
  5137  0197                     	;# 
  5138  0199                     	;# 
  5139  0199                     	;# 
  5140  0199                     	;# 
  5141  019A                     	;# 
  5142  019A                     	;# 
  5143  019A                     	;# 
  5144  019B                     	;# 
  5145  019B                     	;# 
  5146  019B                     	;# 
  5147  019B                     	;# 
  5148  019B                     	;# 
  5149  019C                     	;# 
  5150  019C                     	;# 
  5151  019C                     	;# 
  5152  019D                     	;# 
  5153  019D                     	;# 
  5154  019D                     	;# 
  5155  019E                     	;# 
  5156  019E                     	;# 
  5157  019E                     	;# 
  5158  019F                     	;# 
  5159  019F                     	;# 
  5160  019F                     	;# 
  5161  019F                     	;# 
  5162  019F                     	;# 
  5163  020C                     	;# 
  5164  020D                     	;# 
  5165  020E                     	;# 
  5166  0211                     	;# 
  5167  0211                     	;# 
  5168  0212                     	;# 
  5169  0212                     	;# 
  5170  0213                     	;# 
  5171  0213                     	;# 
  5172  0214                     	;# 
  5173  0214                     	;# 
  5174  0215                     	;# 
  5175  0215                     	;# 
  5176  0215                     	;# 
  5177  0215                     	;# 
  5178  0216                     	;# 
  5179  0216                     	;# 
  5180  0217                     	;# 
  5181  0217                     	;# 
  5182  0219                     	;# 
  5183  021A                     	;# 
  5184  021B                     	;# 
  5185  021C                     	;# 
  5186  021D                     	;# 
  5187  021D                     	;# 
  5188  021E                     	;# 
  5189  021F                     	;# 
  5190  028C                     	;# 
  5191  028D                     	;# 
  5192  028E                     	;# 
  5193  0291                     	;# 
  5194  0291                     	;# 
  5195  0292                     	;# 
  5196  0293                     	;# 
  5197  0294                     	;# 
  5198  0295                     	;# 
  5199  0295                     	;# 
  5200  0296                     	;# 
  5201  0297                     	;# 
  5202  0298                     	;# 
  5203  029F                     	;# 
  5204  030C                     	;# 
  5205  030D                     	;# 
  5206  030E                     	;# 
  5207  0311                     	;# 
  5208  0311                     	;# 
  5209  0312                     	;# 
  5210  0313                     	;# 
  5211  0314                     	;# 
  5212  0315                     	;# 
  5213  0315                     	;# 
  5214  0316                     	;# 
  5215  0317                     	;# 
  5216  0318                     	;# 
  5217  038C                     	;# 
  5218  038D                     	;# 
  5219  038E                     	;# 
  5220  0391                     	;# 
  5221  0392                     	;# 
  5222  0393                     	;# 
  5223  0394                     	;# 
  5224  0395                     	;# 
  5225  0396                     	;# 
  5226  0397                     	;# 
  5227  0398                     	;# 
  5228  0399                     	;# 
  5229  039A                     	;# 
  5230  039C                     	;# 
  5231  039D                     	;# 
  5232  039E                     	;# 
  5233  039F                     	;# 
  5234  0411                     	;# 
  5235  0411                     	;# 
  5236  0412                     	;# 
  5237  0413                     	;# 
  5238  0414                     	;# 
  5239  0415                     	;# 
  5240  0416                     	;# 
  5241  0417                     	;# 
  5242  0418                     	;# 
  5243  0418                     	;# 
  5244  0419                     	;# 
  5245  041A                     	;# 
  5246  041B                     	;# 
  5247  041C                     	;# 
  5248  041D                     	;# 
  5249  041E                     	;# 
  5250  041F                     	;# 
  5251  0498                     	;# 
  5252  0498                     	;# 
  5253  0499                     	;# 
  5254  049A                     	;# 
  5255  049B                     	;# 
  5256  049B                     	;# 
  5257  049C                     	;# 
  5258  049D                     	;# 
  5259  049E                     	;# 
  5260  049F                     	;# 
  5261  0617                     	;# 
  5262  0618                     	;# 
  5263  0619                     	;# 
  5264  0619                     	;# 
  5265  061A                     	;# 
  5266  061B                     	;# 
  5267  061C                     	;# 
  5268  061C                     	;# 
  5269  061F                     	;# 
  5270  0691                     	;# 
  5271  0692                     	;# 
  5272  0693                     	;# 
  5273  0694                     	;# 
  5274  0695                     	;# 
  5275  0696                     	;# 
  5276  0697                     	;# 
  5277  0698                     	;# 
  5278  0699                     	;# 
  5279  0711                     	;# 
  5280  0712                     	;# 
  5281  0713                     	;# 
  5282  0714                     	;# 
  5283  0715                     	;# 
  5284  0716                     	;# 
  5285  0717                     	;# 
  5286  0718                     	;# 
  5287  0719                     	;# 
  5288  0891                     	;# 
  5289  0891                     	;# 
  5290  0891                     	;# 
  5291  0891                     	;# 
  5292  0891                     	;# 
  5293  0891                     	;# 
  5294  0892                     	;# 
  5295  0892                     	;# 
  5296  0892                     	;# 
  5297  0893                     	;# 
  5298  0893                     	;# 
  5299  0893                     	;# 
  5300  0893                     	;# 
  5301  0893                     	;# 
  5302  0893                     	;# 
  5303  0894                     	;# 
  5304  0894                     	;# 
  5305  0894                     	;# 
  5306  0895                     	;# 
  5307  0895                     	;# 
  5308  0895                     	;# 
  5309  0896                     	;# 
  5310  0896                     	;# 
  5311  0896                     	;# 
  5312  089B                     	;# 
  5313  0911                     	;# 
  5314  0912                     	;# 
  5315  0913                     	;# 
  5316  0914                     	;# 
  5317  0915                     	;# 
  5318  0916                     	;# 
  5319  0918                     	;# 
  5320  0919                     	;# 
  5321  091A                     	;# 
  5322  091B                     	;# 
  5323  091C                     	;# 
  5324  091D                     	;# 
  5325  091E                     	;# 
  5326  091F                     	;# 
  5327  0E0F                     	;# 
  5328  0E10                     	;# 
  5329  0E11                     	;# 
  5330  0E12                     	;# 
  5331  0E13                     	;# 
  5332  0E14                     	;# 
  5333  0E15                     	;# 
  5334  0E16                     	;# 
  5335  0E17                     	;# 
  5336  0E18                     	;# 
  5337  0E19                     	;# 
  5338  0E1A                     	;# 
  5339  0E1B                     	;# 
  5340  0E1C                     	;# 
  5341  0E1D                     	;# 
  5342  0E1E                     	;# 
  5343  0E1F                     	;# 
  5344  0E20                     	;# 
  5345  0E21                     	;# 
  5346  0E22                     	;# 
  5347  0E24                     	;# 
  5348  0E25                     	;# 
  5349  0E28                     	;# 
  5350  0E29                     	;# 
  5351  0E2A                     	;# 
  5352  0E2B                     	;# 
  5353  0E2C                     	;# 
  5354  0E2D                     	;# 
  5355  0E2E                     	;# 
  5356  0E2F                     	;# 
  5357  0E90                     	;# 
  5358  0E91                     	;# 
  5359  0E92                     	;# 
  5360  0E94                     	;# 
  5361  0E95                     	;# 
  5362  0E9C                     	;# 
  5363  0E9D                     	;# 
  5364  0E9E                     	;# 
  5365  0E9F                     	;# 
  5366  0EA0                     	;# 
  5367  0EA1                     	;# 
  5368  0EA2                     	;# 
  5369  0EA3                     	;# 
  5370  0EA4                     	;# 
  5371  0EA5                     	;# 
  5372  0EA6                     	;# 
  5373  0EA7                     	;# 
  5374  0F0F                     	;# 
  5375  0F10                     	;# 
  5376  0F11                     	;# 
  5377  0F12                     	;# 
  5378  0F13                     	;# 
  5379  0F14                     	;# 
  5380  0F15                     	;# 
  5381  0F16                     	;# 
  5382  0F17                     	;# 
  5383  0F18                     	;# 
  5384  0F19                     	;# 
  5385  0F1A                     	;# 
  5386  0F1B                     	;# 
  5387  0F1C                     	;# 
  5388  0F1D                     	;# 
  5389  0F1E                     	;# 
  5390  0F1F                     	;# 
  5391  0F20                     	;# 
  5392  0F21                     	;# 
  5393  0F22                     	;# 
  5394  0F23                     	;# 
  5395  0F24                     	;# 
  5396  0F25                     	;# 
  5397  0F26                     	;# 
  5398  0F27                     	;# 
  5399  0F28                     	;# 
  5400  0F29                     	;# 
  5401  0F2A                     	;# 
  5402  0F2B                     	;# 
  5403  0F2C                     	;# 
  5404  0F2D                     	;# 
  5405  0F2E                     	;# 
  5406  0F2F                     	;# 
  5407  0F30                     	;# 
  5408  0F31                     	;# 
  5409  0F32                     	;# 
  5410  0F33                     	;# 
  5411  0F34                     	;# 
  5412  0F35                     	;# 
  5413  0F36                     	;# 
  5414  0F37                     	;# 
  5415  0FE4                     	;# 
  5416  0FE5                     	;# 
  5417  0FE6                     	;# 
  5418  0FE7                     	;# 
  5419  0FE8                     	;# 
  5420  0FE9                     	;# 
  5421  0FEA                     	;# 
  5422  0FEB                     	;# 
  5423  0FED                     	;# 
  5424  0FEE                     	;# 
  5425  0FEF                     	;# 
  5426  0000                     	;# 
  5427  0001                     	;# 
  5428  0002                     	;# 
  5429  0003                     	;# 
  5430  0004                     	;# 
  5431  0005                     	;# 
  5432  0006                     	;# 
  5433  0007                     	;# 
  5434  0008                     	;# 
  5435  0009                     	;# 
  5436  000A                     	;# 
  5437  000B                     	;# 
  5438  000C                     	;# 
  5439  000D                     	;# 
  5440  000E                     	;# 
  5441  0010                     	;# 
  5442  0011                     	;# 
  5443  0012                     	;# 
  5444  0013                     	;# 
  5445  0014                     	;# 
  5446  0015                     	;# 
  5447  0015                     	;# 
  5448  0016                     	;# 
  5449  0016                     	;# 
  5450  0017                     	;# 
  5451  0018                     	;# 
  5452  0019                     	;# 
  5453  0019                     	;# 
  5454  001A                     	;# 
  5455  001B                     	;# 
  5456  001C                     	;# 
  5457  001D                     	;# 
  5458  001E                     	;# 
  5459  001F                     	;# 
  5460  008C                     	;# 
  5461  008D                     	;# 
  5462  008E                     	;# 
  5463  0090                     	;# 
  5464  0091                     	;# 
  5465  0092                     	;# 
  5466  0093                     	;# 
  5467  0094                     	;# 
  5468  0097                     	;# 
  5469  009B                     	;# 
  5470  009B                     	;# 
  5471  009C                     	;# 
  5472  009D                     	;# 
  5473  009E                     	;# 
  5474  009F                     	;# 
  5475  010C                     	;# 
  5476  010D                     	;# 
  5477  010E                     	;# 
  5478  0111                     	;# 
  5479  0112                     	;# 
  5480  0113                     	;# 
  5481  0114                     	;# 
  5482  0115                     	;# 
  5483  0116                     	;# 
  5484  0117                     	;# 
  5485  0118                     	;# 
  5486  0119                     	;# 
  5487  018C                     	;# 
  5488  018D                     	;# 
  5489  018E                     	;# 
  5490  0197                     	;# 
  5491  0199                     	;# 
  5492  0199                     	;# 
  5493  0199                     	;# 
  5494  019A                     	;# 
  5495  019A                     	;# 
  5496  019A                     	;# 
  5497  019B                     	;# 
  5498  019B                     	;# 
  5499  019B                     	;# 
  5500  019B                     	;# 
  5501  019B                     	;# 
  5502  019C                     	;# 
  5503  019C                     	;# 
  5504  019C                     	;# 
  5505  019D                     	;# 
  5506  019D                     	;# 
  5507  019D                     	;# 
  5508  019E                     	;# 
  5509  019E                     	;# 
  5510  019E                     	;# 
  5511  019F                     	;# 
  5512  019F                     	;# 
  5513  019F                     	;# 
  5514  019F                     	;# 
  5515  019F                     	;# 
  5516  020C                     	;# 
  5517  020D                     	;# 
  5518  020E                     	;# 
  5519  0211                     	;# 
  5520  0211                     	;# 
  5521  0212                     	;# 
  5522  0212                     	;# 
  5523  0213                     	;# 
  5524  0213                     	;# 
  5525  0214                     	;# 
  5526  0214                     	;# 
  5527  0215                     	;# 
  5528  0215                     	;# 
  5529  0215                     	;# 
  5530  0215                     	;# 
  5531  0216                     	;# 
  5532  0216                     	;# 
  5533  0217                     	;# 
  5534  0217                     	;# 
  5535  0219                     	;# 
  5536  021A                     	;# 
  5537  021B                     	;# 
  5538  021C                     	;# 
  5539  021D                     	;# 
  5540  021D                     	;# 
  5541  021E                     	;# 
  5542  021F                     	;# 
  5543  028C                     	;# 
  5544  028D                     	;# 
  5545  028E                     	;# 
  5546  0291                     	;# 
  5547  0291                     	;# 
  5548  0292                     	;# 
  5549  0293                     	;# 
  5550  0294                     	;# 
  5551  0295                     	;# 
  5552  0295                     	;# 
  5553  0296                     	;# 
  5554  0297                     	;# 
  5555  0298                     	;# 
  5556  029F                     	;# 
  5557  030C                     	;# 
  5558  030D                     	;# 
  5559  030E                     	;# 
  5560  0311                     	;# 
  5561  0311                     	;# 
  5562  0312                     	;# 
  5563  0313                     	;# 
  5564  0314                     	;# 
  5565  0315                     	;# 
  5566  0315                     	;# 
  5567  0316                     	;# 
  5568  0317                     	;# 
  5569  0318                     	;# 
  5570  038C                     	;# 
  5571  038D                     	;# 
  5572  038E                     	;# 
  5573  0391                     	;# 
  5574  0392                     	;# 
  5575  0393                     	;# 
  5576  0394                     	;# 
  5577  0395                     	;# 
  5578  0396                     	;# 
  5579  0397                     	;# 
  5580  0398                     	;# 
  5581  0399                     	;# 
  5582  039A                     	;# 
  5583  039C                     	;# 
  5584  039D                     	;# 
  5585  039E                     	;# 
  5586  039F                     	;# 
  5587  0411                     	;# 
  5588  0411                     	;# 
  5589  0412                     	;# 
  5590  0413                     	;# 
  5591  0414                     	;# 
  5592  0415                     	;# 
  5593  0416                     	;# 
  5594  0417                     	;# 
  5595  0418                     	;# 
  5596  0418                     	;# 
  5597  0419                     	;# 
  5598  041A                     	;# 
  5599  041B                     	;# 
  5600  041C                     	;# 
  5601  041D                     	;# 
  5602  041E                     	;# 
  5603  041F                     	;# 
  5604  0498                     	;# 
  5605  0498                     	;# 
  5606  0499                     	;# 
  5607  049A                     	;# 
  5608  049B                     	;# 
  5609  049B                     	;# 
  5610  049C                     	;# 
  5611  049D                     	;# 
  5612  049E                     	;# 
  5613  049F                     	;# 
  5614  0617                     	;# 
  5615  0618                     	;# 
  5616  0619                     	;# 
  5617  0619                     	;# 
  5618  061A                     	;# 
  5619  061B                     	;# 
  5620  061C                     	;# 
  5621  061C                     	;# 
  5622  061F                     	;# 
  5623  0691                     	;# 
  5624  0692                     	;# 
  5625  0693                     	;# 
  5626  0694                     	;# 
  5627  0695                     	;# 
  5628  0696                     	;# 
  5629  0697                     	;# 
  5630  0698                     	;# 
  5631  0699                     	;# 
  5632  0711                     	;# 
  5633  0712                     	;# 
  5634  0713                     	;# 
  5635  0714                     	;# 
  5636  0715                     	;# 
  5637  0716                     	;# 
  5638  0717                     	;# 
  5639  0718                     	;# 
  5640  0719                     	;# 
  5641  0891                     	;# 
  5642  0891                     	;# 
  5643  0891                     	;# 
  5644  0891                     	;# 
  5645  0891                     	;# 
  5646  0891                     	;# 
  5647  0892                     	;# 
  5648  0892                     	;# 
  5649  0892                     	;# 
  5650  0893                     	;# 
  5651  0893                     	;# 
  5652  0893                     	;# 
  5653  0893                     	;# 
  5654  0893                     	;# 
  5655  0893                     	;# 
  5656  0894                     	;# 
  5657  0894                     	;# 
  5658  0894                     	;# 
  5659  0895                     	;# 
  5660  0895                     	;# 
  5661  0895                     	;# 
  5662  0896                     	;# 
  5663  0896                     	;# 
  5664  0896                     	;# 
  5665  089B                     	;# 
  5666  0911                     	;# 
  5667  0912                     	;# 
  5668  0913                     	;# 
  5669  0914                     	;# 
  5670  0915                     	;# 
  5671  0916                     	;# 
  5672  0918                     	;# 
  5673  0919                     	;# 
  5674  091A                     	;# 
  5675  091B                     	;# 
  5676  091C                     	;# 
  5677  091D                     	;# 
  5678  091E                     	;# 
  5679  091F                     	;# 
  5680  0E0F                     	;# 
  5681  0E10                     	;# 
  5682  0E11                     	;# 
  5683  0E12                     	;# 
  5684  0E13                     	;# 
  5685  0E14                     	;# 
  5686  0E15                     	;# 
  5687  0E16                     	;# 
  5688  0E17                     	;# 
  5689  0E18                     	;# 
  5690  0E19                     	;# 
  5691  0E1A                     	;# 
  5692  0E1B                     	;# 
  5693  0E1C                     	;# 
  5694  0E1D                     	;# 
  5695  0E1E                     	;# 
  5696  0E1F                     	;# 
  5697  0E20                     	;# 
  5698  0E21                     	;# 
  5699  0E22                     	;# 
  5700  0E24                     	;# 
  5701  0E25                     	;# 
  5702  0E28                     	;# 
  5703  0E29                     	;# 
  5704  0E2A                     	;# 
  5705  0E2B                     	;# 
  5706  0E2C                     	;# 
  5707  0E2D                     	;# 
  5708  0E2E                     	;# 
  5709  0E2F                     	;# 
  5710  0E90                     	;# 
  5711  0E91                     	;# 
  5712  0E92                     	;# 
  5713  0E94                     	;# 
  5714  0E95                     	;# 
  5715  0E9C                     	;# 
  5716  0E9D                     	;# 
  5717  0E9E                     	;# 
  5718  0E9F                     	;# 
  5719  0EA0                     	;# 
  5720  0EA1                     	;# 
  5721  0EA2                     	;# 
  5722  0EA3                     	;# 
  5723  0EA4                     	;# 
  5724  0EA5                     	;# 
  5725  0EA6                     	;# 
  5726  0EA7                     	;# 
  5727  0F0F                     	;# 
  5728  0F10                     	;# 
  5729  0F11                     	;# 
  5730  0F12                     	;# 
  5731  0F13                     	;# 
  5732  0F14                     	;# 
  5733  0F15                     	;# 
  5734  0F16                     	;# 
  5735  0F17                     	;# 
  5736  0F18                     	;# 
  5737  0F19                     	;# 
  5738  0F1A                     	;# 
  5739  0F1B                     	;# 
  5740  0F1C                     	;# 
  5741  0F1D                     	;# 
  5742  0F1E                     	;# 
  5743  0F1F                     	;# 
  5744  0F20                     	;# 
  5745  0F21                     	;# 
  5746  0F22                     	;# 
  5747  0F23                     	;# 
  5748  0F24                     	;# 
  5749  0F25                     	;# 
  5750  0F26                     	;# 
  5751  0F27                     	;# 
  5752  0F28                     	;# 
  5753  0F29                     	;# 
  5754  0F2A                     	;# 
  5755  0F2B                     	;# 
  5756  0F2C                     	;# 
  5757  0F2D                     	;# 
  5758  0F2E                     	;# 
  5759  0F2F                     	;# 
  5760  0F30                     	;# 
  5761  0F31                     	;# 
  5762  0F32                     	;# 
  5763  0F33                     	;# 
  5764  0F34                     	;# 
  5765  0F35                     	;# 
  5766  0F36                     	;# 
  5767  0F37                     	;# 
  5768  0FE4                     	;# 
  5769  0FE5                     	;# 
  5770  0FE6                     	;# 
  5771  0FE7                     	;# 
  5772  0FE8                     	;# 
  5773  0FE9                     	;# 
  5774  0FEA                     	;# 
  5775  0FEB                     	;# 
  5776  0FED                     	;# 
  5777  0FEE                     	;# 
  5778  0FEF                     	;# 
  5779  0000                     	;# 
  5780  0001                     	;# 
  5781  0002                     	;# 
  5782  0003                     	;# 
  5783  0004                     	;# 
  5784  0005                     	;# 
  5785  0006                     	;# 
  5786  0007                     	;# 
  5787  0008                     	;# 
  5788  0009                     	;# 
  5789  000A                     	;# 
  5790  000B                     	;# 
  5791  000C                     	;# 
  5792  000D                     	;# 
  5793  000E                     	;# 
  5794  0010                     	;# 
  5795  0011                     	;# 
  5796  0012                     	;# 
  5797  0013                     	;# 
  5798  0014                     	;# 
  5799  0015                     	;# 
  5800  0015                     	;# 
  5801  0016                     	;# 
  5802  0016                     	;# 
  5803  0017                     	;# 
  5804  0018                     	;# 
  5805  0019                     	;# 
  5806  0019                     	;# 
  5807  001A                     	;# 
  5808  001B                     	;# 
  5809  001C                     	;# 
  5810  001D                     	;# 
  5811  001E                     	;# 
  5812  001F                     	;# 
  5813  008C                     	;# 
  5814  008D                     	;# 
  5815  008E                     	;# 
  5816  0090                     	;# 
  5817  0091                     	;# 
  5818  0092                     	;# 
  5819  0093                     	;# 
  5820  0094                     	;# 
  5821  0097                     	;# 
  5822  009B                     	;# 
  5823  009B                     	;# 
  5824  009C                     	;# 
  5825  009D                     	;# 
  5826  009E                     	;# 
  5827  009F                     	;# 
  5828  010C                     	;# 
  5829  010D                     	;# 
  5830  010E                     	;# 
  5831  0111                     	;# 
  5832  0112                     	;# 
  5833  0113                     	;# 
  5834  0114                     	;# 
  5835  0115                     	;# 
  5836  0116                     	;# 
  5837  0117                     	;# 
  5838  0118                     	;# 
  5839  0119                     	;# 
  5840  018C                     	;# 
  5841  018D                     	;# 
  5842  018E                     	;# 
  5843  0197                     	;# 
  5844  0199                     	;# 
  5845  0199                     	;# 
  5846  0199                     	;# 
  5847  019A                     	;# 
  5848  019A                     	;# 
  5849  019A                     	;# 
  5850  019B                     	;# 
  5851  019B                     	;# 
  5852  019B                     	;# 
  5853  019B                     	;# 
  5854  019B                     	;# 
  5855  019C                     	;# 
  5856  019C                     	;# 
  5857  019C                     	;# 
  5858  019D                     	;# 
  5859  019D                     	;# 
  5860  019D                     	;# 
  5861  019E                     	;# 
  5862  019E                     	;# 
  5863  019E                     	;# 
  5864  019F                     	;# 
  5865  019F                     	;# 
  5866  019F                     	;# 
  5867  019F                     	;# 
  5868  019F                     	;# 
  5869  020C                     	;# 
  5870  020D                     	;# 
  5871  020E                     	;# 
  5872  0211                     	;# 
  5873  0211                     	;# 
  5874  0212                     	;# 
  5875  0212                     	;# 
  5876  0213                     	;# 
  5877  0213                     	;# 
  5878  0214                     	;# 
  5879  0214                     	;# 
  5880  0215                     	;# 
  5881  0215                     	;# 
  5882  0215                     	;# 
  5883  0215                     	;# 
  5884  0216                     	;# 
  5885  0216                     	;# 
  5886  0217                     	;# 
  5887  0217                     	;# 
  5888  0219                     	;# 
  5889  021A                     	;# 
  5890  021B                     	;# 
  5891  021C                     	;# 
  5892  021D                     	;# 
  5893  021D                     	;# 
  5894  021E                     	;# 
  5895  021F                     	;# 
  5896  028C                     	;# 
  5897  028D                     	;# 
  5898  028E                     	;# 
  5899  0291                     	;# 
  5900  0291                     	;# 
  5901  0292                     	;# 
  5902  0293                     	;# 
  5903  0294                     	;# 
  5904  0295                     	;# 
  5905  0295                     	;# 
  5906  0296                     	;# 
  5907  0297                     	;# 
  5908  0298                     	;# 
  5909  029F                     	;# 
  5910  030C                     	;# 
  5911  030D                     	;# 
  5912  030E                     	;# 
  5913  0311                     	;# 
  5914  0311                     	;# 
  5915  0312                     	;# 
  5916  0313                     	;# 
  5917  0314                     	;# 
  5918  0315                     	;# 
  5919  0315                     	;# 
  5920  0316                     	;# 
  5921  0317                     	;# 
  5922  0318                     	;# 
  5923  038C                     	;# 
  5924  038D                     	;# 
  5925  038E                     	;# 
  5926  0391                     	;# 
  5927  0392                     	;# 
  5928  0393                     	;# 
  5929  0394                     	;# 
  5930  0395                     	;# 
  5931  0396                     	;# 
  5932  0397                     	;# 
  5933  0398                     	;# 
  5934  0399                     	;# 
  5935  039A                     	;# 
  5936  039C                     	;# 
  5937  039D                     	;# 
  5938  039E                     	;# 
  5939  039F                     	;# 
  5940  0411                     	;# 
  5941  0411                     	;# 
  5942  0412                     	;# 
  5943  0413                     	;# 
  5944  0414                     	;# 
  5945  0415                     	;# 
  5946  0416                     	;# 
  5947  0417                     	;# 
  5948  0418                     	;# 
  5949  0418                     	;# 
  5950  0419                     	;# 
  5951  041A                     	;# 
  5952  041B                     	;# 
  5953  041C                     	;# 
  5954  041D                     	;# 
  5955  041E                     	;# 
  5956  041F                     	;# 
  5957  0498                     	;# 
  5958  0498                     	;# 
  5959  0499                     	;# 
  5960  049A                     	;# 
  5961  049B                     	;# 
  5962  049B                     	;# 
  5963  049C                     	;# 
  5964  049D                     	;# 
  5965  049E                     	;# 
  5966  049F                     	;# 
  5967  0617                     	;# 
  5968  0618                     	;# 
  5969  0619                     	;# 
  5970  0619                     	;# 
  5971  061A                     	;# 
  5972  061B                     	;# 
  5973  061C                     	;# 
  5974  061C                     	;# 
  5975  061F                     	;# 
  5976  0691                     	;# 
  5977  0692                     	;# 
  5978  0693                     	;# 
  5979  0694                     	;# 
  5980  0695                     	;# 
  5981  0696                     	;# 
  5982  0697                     	;# 
  5983  0698                     	;# 
  5984  0699                     	;# 
  5985  0711                     	;# 
  5986  0712                     	;# 
  5987  0713                     	;# 
  5988  0714                     	;# 
  5989  0715                     	;# 
  5990  0716                     	;# 
  5991  0717                     	;# 
  5992  0718                     	;# 
  5993  0719                     	;# 
  5994  0891                     	;# 
  5995  0891                     	;# 
  5996  0891                     	;# 
  5997  0891                     	;# 
  5998  0891                     	;# 
  5999  0891                     	;# 
  6000  0892                     	;# 
  6001  0892                     	;# 
  6002  0892                     	;# 
  6003  0893                     	;# 
  6004  0893                     	;# 
  6005  0893                     	;# 
  6006  0893                     	;# 
  6007  0893                     	;# 
  6008  0893                     	;# 
  6009  0894                     	;# 
  6010  0894                     	;# 
  6011  0894                     	;# 
  6012  0895                     	;# 
  6013  0895                     	;# 
  6014  0895                     	;# 
  6015  0896                     	;# 
  6016  0896                     	;# 
  6017  0896                     	;# 
  6018  089B                     	;# 
  6019  0911                     	;# 
  6020  0912                     	;# 
  6021  0913                     	;# 
  6022  0914                     	;# 
  6023  0915                     	;# 
  6024  0916                     	;# 
  6025  0918                     	;# 
  6026  0919                     	;# 
  6027  091A                     	;# 
  6028  091B                     	;# 
  6029  091C                     	;# 
  6030  091D                     	;# 
  6031  091E                     	;# 
  6032  091F                     	;# 
  6033  0E0F                     	;# 
  6034  0E10                     	;# 
  6035  0E11                     	;# 
  6036  0E12                     	;# 
  6037  0E13                     	;# 
  6038  0E14                     	;# 
  6039  0E15                     	;# 
  6040  0E16                     	;# 
  6041  0E17                     	;# 
  6042  0E18                     	;# 
  6043  0E19                     	;# 
  6044  0E1A                     	;# 
  6045  0E1B                     	;# 
  6046  0E1C                     	;# 
  6047  0E1D                     	;# 
  6048  0E1E                     	;# 
  6049  0E1F                     	;# 
  6050  0E20                     	;# 
  6051  0E21                     	;# 
  6052  0E22                     	;# 
  6053  0E24                     	;# 
  6054  0E25                     	;# 
  6055  0E28                     	;# 
  6056  0E29                     	;# 
  6057  0E2A                     	;# 
  6058  0E2B                     	;# 
  6059  0E2C                     	;# 
  6060  0E2D                     	;# 
  6061  0E2E                     	;# 
  6062  0E2F                     	;# 
  6063  0E90                     	;# 
  6064  0E91                     	;# 
  6065  0E92                     	;# 
  6066  0E94                     	;# 
  6067  0E95                     	;# 
  6068  0E9C                     	;# 
  6069  0E9D                     	;# 
  6070  0E9E                     	;# 
  6071  0E9F                     	;# 
  6072  0EA0                     	;# 
  6073  0EA1                     	;# 
  6074  0EA2                     	;# 
  6075  0EA3                     	;# 
  6076  0EA4                     	;# 
  6077  0EA5                     	;# 
  6078  0EA6                     	;# 
  6079  0EA7                     	;# 
  6080  0F0F                     	;# 
  6081  0F10                     	;# 
  6082  0F11                     	;# 
  6083  0F12                     	;# 
  6084  0F13                     	;# 
  6085  0F14                     	;# 
  6086  0F15                     	;# 
  6087  0F16                     	;# 
  6088  0F17                     	;# 
  6089  0F18                     	;# 
  6090  0F19                     	;# 
  6091  0F1A                     	;# 
  6092  0F1B                     	;# 
  6093  0F1C                     	;# 
  6094  0F1D                     	;# 
  6095  0F1E                     	;# 
  6096  0F1F                     	;# 
  6097  0F20                     	;# 
  6098  0F21                     	;# 
  6099  0F22                     	;# 
  6100  0F23                     	;# 
  6101  0F24                     	;# 
  6102  0F25                     	;# 
  6103  0F26                     	;# 
  6104  0F27                     	;# 
  6105  0F28                     	;# 
  6106  0F29                     	;# 
  6107  0F2A                     	;# 
  6108  0F2B                     	;# 
  6109  0F2C                     	;# 
  6110  0F2D                     	;# 
  6111  0F2E                     	;# 
  6112  0F2F                     	;# 
  6113  0F30                     	;# 
  6114  0F31                     	;# 
  6115  0F32                     	;# 
  6116  0F33                     	;# 
  6117  0F34                     	;# 
  6118  0F35                     	;# 
  6119  0F36                     	;# 
  6120  0F37                     	;# 
  6121  0FE4                     	;# 
  6122  0FE5                     	;# 
  6123  0FE6                     	;# 
  6124  0FE7                     	;# 
  6125  0FE8                     	;# 
  6126  0FE9                     	;# 
  6127  0FEA                     	;# 
  6128  0FEB                     	;# 
  6129  0FED                     	;# 
  6130  0FEE                     	;# 
  6131  0FEF                     	;# 
  6132  0000                     	;# 
  6133  0001                     	;# 
  6134  0002                     	;# 
  6135  0003                     	;# 
  6136  0004                     	;# 
  6137  0005                     	;# 
  6138  0006                     	;# 
  6139  0007                     	;# 
  6140  0008                     	;# 
  6141  0009                     	;# 
  6142  000A                     	;# 
  6143  000B                     	;# 
  6144  000C                     	;# 
  6145  000D                     	;# 
  6146  000E                     	;# 
  6147  0010                     	;# 
  6148  0011                     	;# 
  6149  0012                     	;# 
  6150  0013                     	;# 
  6151  0014                     	;# 
  6152  0015                     	;# 
  6153  0015                     	;# 
  6154  0016                     	;# 
  6155  0016                     	;# 
  6156  0017                     	;# 
  6157  0018                     	;# 
  6158  0019                     	;# 
  6159  0019                     	;# 
  6160  001A                     	;# 
  6161  001B                     	;# 
  6162  001C                     	;# 
  6163  001D                     	;# 
  6164  001E                     	;# 
  6165  001F                     	;# 
  6166  008C                     	;# 
  6167  008D                     	;# 
  6168  008E                     	;# 
  6169  0090                     	;# 
  6170  0091                     	;# 
  6171  0092                     	;# 
  6172  0093                     	;# 
  6173  0094                     	;# 
  6174  0097                     	;# 
  6175  009B                     	;# 
  6176  009B                     	;# 
  6177  009C                     	;# 
  6178  009D                     	;# 
  6179  009E                     	;# 
  6180  009F                     	;# 
  6181  010C                     	;# 
  6182  010D                     	;# 
  6183  010E                     	;# 
  6184  0111                     	;# 
  6185  0112                     	;# 
  6186  0113                     	;# 
  6187  0114                     	;# 
  6188  0115                     	;# 
  6189  0116                     	;# 
  6190  0117                     	;# 
  6191  0118                     	;# 
  6192  0119                     	;# 
  6193  018C                     	;# 
  6194  018D                     	;# 
  6195  018E                     	;# 
  6196  0197                     	;# 
  6197  0199                     	;# 
  6198  0199                     	;# 
  6199  0199                     	;# 
  6200  019A                     	;# 
  6201  019A                     	;# 
  6202  019A                     	;# 
  6203  019B                     	;# 
  6204  019B                     	;# 
  6205  019B                     	;# 
  6206  019B                     	;# 
  6207  019B                     	;# 
  6208  019C                     	;# 
  6209  019C                     	;# 
  6210  019C                     	;# 
  6211  019D                     	;# 
  6212  019D                     	;# 
  6213  019D                     	;# 
  6214  019E                     	;# 
  6215  019E                     	;# 
  6216  019E                     	;# 
  6217  019F                     	;# 
  6218  019F                     	;# 
  6219  019F                     	;# 
  6220  019F                     	;# 
  6221  019F                     	;# 
  6222  020C                     	;# 
  6223  020D                     	;# 
  6224  020E                     	;# 
  6225  0211                     	;# 
  6226  0211                     	;# 
  6227  0212                     	;# 
  6228  0212                     	;# 
  6229  0213                     	;# 
  6230  0213                     	;# 
  6231  0214                     	;# 
  6232  0214                     	;# 
  6233  0215                     	;# 
  6234  0215                     	;# 
  6235  0215                     	;# 
  6236  0215                     	;# 
  6237  0216                     	;# 
  6238  0216                     	;# 
  6239  0217                     	;# 
  6240  0217                     	;# 
  6241  0219                     	;# 
  6242  021A                     	;# 
  6243  021B                     	;# 
  6244  021C                     	;# 
  6245  021D                     	;# 
  6246  021D                     	;# 
  6247  021E                     	;# 
  6248  021F                     	;# 
  6249  028C                     	;# 
  6250  028D                     	;# 
  6251  028E                     	;# 
  6252  0291                     	;# 
  6253  0291                     	;# 
  6254  0292                     	;# 
  6255  0293                     	;# 
  6256  0294                     	;# 
  6257  0295                     	;# 
  6258  0295                     	;# 
  6259  0296                     	;# 
  6260  0297                     	;# 
  6261  0298                     	;# 
  6262  029F                     	;# 
  6263  030C                     	;# 
  6264  030D                     	;# 
  6265  030E                     	;# 
  6266  0311                     	;# 
  6267  0311                     	;# 
  6268  0312                     	;# 
  6269  0313                     	;# 
  6270  0314                     	;# 
  6271  0315                     	;# 
  6272  0315                     	;# 
  6273  0316                     	;# 
  6274  0317                     	;# 
  6275  0318                     	;# 
  6276  038C                     	;# 
  6277  038D                     	;# 
  6278  038E                     	;# 
  6279  0391                     	;# 
  6280  0392                     	;# 
  6281  0393                     	;# 
  6282  0394                     	;# 
  6283  0395                     	;# 
  6284  0396                     	;# 
  6285  0397                     	;# 
  6286  0398                     	;# 
  6287  0399                     	;# 
  6288  039A                     	;# 
  6289  039C                     	;# 
  6290  039D                     	;# 
  6291  039E                     	;# 
  6292  039F                     	;# 
  6293  0411                     	;# 
  6294  0411                     	;# 
  6295  0412                     	;# 
  6296  0413                     	;# 
  6297  0414                     	;# 
  6298  0415                     	;# 
  6299  0416                     	;# 
  6300  0417                     	;# 
  6301  0418                     	;# 
  6302  0418                     	;# 
  6303  0419                     	;# 
  6304  041A                     	;# 
  6305  041B                     	;# 
  6306  041C                     	;# 
  6307  041D                     	;# 
  6308  041E                     	;# 
  6309  041F                     	;# 
  6310  0498                     	;# 
  6311  0498                     	;# 
  6312  0499                     	;# 
  6313  049A                     	;# 
  6314  049B                     	;# 
  6315  049B                     	;# 
  6316  049C                     	;# 
  6317  049D                     	;# 
  6318  049E                     	;# 
  6319  049F                     	;# 
  6320  0617                     	;# 
  6321  0618                     	;# 
  6322  0619                     	;# 
  6323  0619                     	;# 
  6324  061A                     	;# 
  6325  061B                     	;# 
  6326  061C                     	;# 
  6327  061C                     	;# 
  6328  061F                     	;# 
  6329  0691                     	;# 
  6330  0692                     	;# 
  6331  0693                     	;# 
  6332  0694                     	;# 
  6333  0695                     	;# 
  6334  0696                     	;# 
  6335  0697                     	;# 
  6336  0698                     	;# 
  6337  0699                     	;# 
  6338  0711                     	;# 
  6339  0712                     	;# 
  6340  0713                     	;# 
  6341  0714                     	;# 
  6342  0715                     	;# 
  6343  0716                     	;# 
  6344  0717                     	;# 
  6345  0718                     	;# 
  6346  0719                     	;# 
  6347  0891                     	;# 
  6348  0891                     	;# 
  6349  0891                     	;# 
  6350  0891                     	;# 
  6351  0891                     	;# 
  6352  0891                     	;# 
  6353  0892                     	;# 
  6354  0892                     	;# 
  6355  0892                     	;# 
  6356  0893                     	;# 
  6357  0893                     	;# 
  6358  0893                     	;# 
  6359  0893                     	;# 
  6360  0893                     	;# 
  6361  0893                     	;# 
  6362  0894                     	;# 
  6363  0894                     	;# 
  6364  0894                     	;# 
  6365  0895                     	;# 
  6366  0895                     	;# 
  6367  0895                     	;# 
  6368  0896                     	;# 
  6369  0896                     	;# 
  6370  0896                     	;# 
  6371  089B                     	;# 
  6372  0911                     	;# 
  6373  0912                     	;# 
  6374  0913                     	;# 
  6375  0914                     	;# 
  6376  0915                     	;# 
  6377  0916                     	;# 
  6378  0918                     	;# 
  6379  0919                     	;# 
  6380  091A                     	;# 
  6381  091B                     	;# 
  6382  091C                     	;# 
  6383  091D                     	;# 
  6384  091E                     	;# 
  6385  091F                     	;# 
  6386  0E0F                     	;# 
  6387  0E10                     	;# 
  6388  0E11                     	;# 
  6389  0E12                     	;# 
  6390  0E13                     	;# 
  6391  0E14                     	;# 
  6392  0E15                     	;# 
  6393  0E16                     	;# 
  6394  0E17                     	;# 
  6395  0E18                     	;# 
  6396  0E19                     	;# 
  6397  0E1A                     	;# 
  6398  0E1B                     	;# 
  6399  0E1C                     	;# 
  6400  0E1D                     	;# 
  6401  0E1E                     	;# 
  6402  0E1F                     	;# 
  6403  0E20                     	;# 
  6404  0E21                     	;# 
  6405  0E22                     	;# 
  6406  0E24                     	;# 
  6407  0E25                     	;# 
  6408  0E28                     	;# 
  6409  0E29                     	;# 
  6410  0E2A                     	;# 
  6411  0E2B                     	;# 
  6412  0E2C                     	;# 
  6413  0E2D                     	;# 
  6414  0E2E                     	;# 
  6415  0E2F                     	;# 
  6416  0E90                     	;# 
  6417  0E91                     	;# 
  6418  0E92                     	;# 
  6419  0E94                     	;# 
  6420  0E95                     	;# 
  6421  0E9C                     	;# 
  6422  0E9D                     	;# 
  6423  0E9E                     	;# 
  6424  0E9F                     	;# 
  6425  0EA0                     	;# 
  6426  0EA1                     	;# 
  6427  0EA2                     	;# 
  6428  0EA3                     	;# 
  6429  0EA4                     	;# 
  6430  0EA5                     	;# 
  6431  0EA6                     	;# 
  6432  0EA7                     	;# 
  6433  0F0F                     	;# 
  6434  0F10                     	;# 
  6435  0F11                     	;# 
  6436  0F12                     	;# 
  6437  0F13                     	;# 
  6438  0F14                     	;# 
  6439  0F15                     	;# 
  6440  0F16                     	;# 
  6441  0F17                     	;# 
  6442  0F18                     	;# 
  6443  0F19                     	;# 
  6444  0F1A                     	;# 
  6445  0F1B                     	;# 
  6446  0F1C                     	;# 
  6447  0F1D                     	;# 
  6448  0F1E                     	;# 
  6449  0F1F                     	;# 
  6450  0F20                     	;# 
  6451  0F21                     	;# 
  6452  0F22                     	;# 
  6453  0F23                     	;# 
  6454  0F24                     	;# 
  6455  0F25                     	;# 
  6456  0F26                     	;# 
  6457  0F27                     	;# 
  6458  0F28                     	;# 
  6459  0F29                     	;# 
  6460  0F2A                     	;# 
  6461  0F2B                     	;# 
  6462  0F2C                     	;# 
  6463  0F2D                     	;# 
  6464  0F2E                     	;# 
  6465  0F2F                     	;# 
  6466  0F30                     	;# 
  6467  0F31                     	;# 
  6468  0F32                     	;# 
  6469  0F33                     	;# 
  6470  0F34                     	;# 
  6471  0F35                     	;# 
  6472  0F36                     	;# 
  6473  0F37                     	;# 
  6474  0FE4                     	;# 
  6475  0FE5                     	;# 
  6476  0FE6                     	;# 
  6477  0FE7                     	;# 
  6478  0FE8                     	;# 
  6479  0FE9                     	;# 
  6480  0FEA                     	;# 
  6481  0FEB                     	;# 
  6482  0FED                     	;# 
  6483  0FEE                     	;# 
  6484  0FEF                     	;# 
  6485  0000                     	;# 
  6486  0001                     	;# 
  6487  0002                     	;# 
  6488  0003                     	;# 
  6489  0004                     	;# 
  6490  0005                     	;# 
  6491  0006                     	;# 
  6492  0007                     	;# 
  6493  0008                     	;# 
  6494  0009                     	;# 
  6495  000A                     	;# 
  6496  000B                     	;# 
  6497  000C                     	;# 
  6498  000D                     	;# 
  6499  000E                     	;# 
  6500  0010                     	;# 
  6501  0011                     	;# 
  6502  0012                     	;# 
  6503  0013                     	;# 
  6504  0014                     	;# 
  6505  0015                     	;# 
  6506  0015                     	;# 
  6507  0016                     	;# 
  6508  0016                     	;# 
  6509  0017                     	;# 
  6510  0018                     	;# 
  6511  0019                     	;# 
  6512  0019                     	;# 
  6513  001A                     	;# 
  6514  001B                     	;# 
  6515  001C                     	;# 
  6516  001D                     	;# 
  6517  001E                     	;# 
  6518  001F                     	;# 
  6519  008C                     	;# 
  6520  008D                     	;# 
  6521  008E                     	;# 
  6522  0090                     	;# 
  6523  0091                     	;# 
  6524  0092                     	;# 
  6525  0093                     	;# 
  6526  0094                     	;# 
  6527  0097                     	;# 
  6528  009B                     	;# 
  6529  009B                     	;# 
  6530  009C                     	;# 
  6531  009D                     	;# 
  6532  009E                     	;# 
  6533  009F                     	;# 
  6534  010C                     	;# 
  6535  010D                     	;# 
  6536  010E                     	;# 
  6537  0111                     	;# 
  6538  0112                     	;# 
  6539  0113                     	;# 
  6540  0114                     	;# 
  6541  0115                     	;# 
  6542  0116                     	;# 
  6543  0117                     	;# 
  6544  0118                     	;# 
  6545  0119                     	;# 
  6546  018C                     	;# 
  6547  018D                     	;# 
  6548  018E                     	;# 
  6549  0197                     	;# 
  6550  0199                     	;# 
  6551  0199                     	;# 
  6552  0199                     	;# 
  6553  019A                     	;# 
  6554  019A                     	;# 
  6555  019A                     	;# 
  6556  019B                     	;# 
  6557  019B                     	;# 
  6558  019B                     	;# 
  6559  019B                     	;# 
  6560  019B                     	;# 
  6561  019C                     	;# 
  6562  019C                     	;# 
  6563  019C                     	;# 
  6564  019D                     	;# 
  6565  019D                     	;# 
  6566  019D                     	;# 
  6567  019E                     	;# 
  6568  019E                     	;# 
  6569  019E                     	;# 
  6570  019F                     	;# 
  6571  019F                     	;# 
  6572  019F                     	;# 
  6573  019F                     	;# 
  6574  019F                     	;# 
  6575  020C                     	;# 
  6576  020D                     	;# 
  6577  020E                     	;# 
  6578  0211                     	;# 
  6579  0211                     	;# 
  6580  0212                     	;# 
  6581  0212                     	;# 
  6582  0213                     	;# 
  6583  0213                     	;# 
  6584  0214                     	;# 
  6585  0214                     	;# 
  6586  0215                     	;# 
  6587  0215                     	;# 
  6588  0215                     	;# 
  6589  0215                     	;# 
  6590  0216                     	;# 
  6591  0216                     	;# 
  6592  0217                     	;# 
  6593  0217                     	;# 
  6594  0219                     	;# 
  6595  021A                     	;# 
  6596  021B                     	;# 
  6597  021C                     	;# 
  6598  021D                     	;# 
  6599  021D                     	;# 
  6600  021E                     	;# 
  6601  021F                     	;# 
  6602  028C                     	;# 
  6603  028D                     	;# 
  6604  028E                     	;# 
  6605  0291                     	;# 
  6606  0291                     	;# 
  6607  0292                     	;# 
  6608  0293                     	;# 
  6609  0294                     	;# 
  6610  0295                     	;# 
  6611  0295                     	;# 
  6612  0296                     	;# 
  6613  0297                     	;# 
  6614  0298                     	;# 
  6615  029F                     	;# 
  6616  030C                     	;# 
  6617  030D                     	;# 
  6618  030E                     	;# 
  6619  0311                     	;# 
  6620  0311                     	;# 
  6621  0312                     	;# 
  6622  0313                     	;# 
  6623  0314                     	;# 
  6624  0315                     	;# 
  6625  0315                     	;# 
  6626  0316                     	;# 
  6627  0317                     	;# 
  6628  0318                     	;# 
  6629  038C                     	;# 
  6630  038D                     	;# 
  6631  038E                     	;# 
  6632  0391                     	;# 
  6633  0392                     	;# 
  6634  0393                     	;# 
  6635  0394                     	;# 
  6636  0395                     	;# 
  6637  0396                     	;# 
  6638  0397                     	;# 
  6639  0398                     	;# 
  6640  0399                     	;# 
  6641  039A                     	;# 
  6642  039C                     	;# 
  6643  039D                     	;# 
  6644  039E                     	;# 
  6645  039F                     	;# 
  6646  0411                     	;# 
  6647  0411                     	;# 
  6648  0412                     	;# 
  6649  0413                     	;# 
  6650  0414                     	;# 
  6651  0415                     	;# 
  6652  0416                     	;# 
  6653  0417                     	;# 
  6654  0418                     	;# 
  6655  0418                     	;# 
  6656  0419                     	;# 
  6657  041A                     	;# 
  6658  041B                     	;# 
  6659  041C                     	;# 
  6660  041D                     	;# 
  6661  041E                     	;# 
  6662  041F                     	;# 
  6663  0498                     	;# 
  6664  0498                     	;# 
  6665  0499                     	;# 
  6666  049A                     	;# 
  6667  049B                     	;# 
  6668  049B                     	;# 
  6669  049C                     	;# 
  6670  049D                     	;# 
  6671  049E                     	;# 
  6672  049F                     	;# 
  6673  0617                     	;# 
  6674  0618                     	;# 
  6675  0619                     	;# 
  6676  0619                     	;# 
  6677  061A                     	;# 
  6678  061B                     	;# 
  6679  061C                     	;# 
  6680  061C                     	;# 
  6681  061F                     	;# 
  6682  0691                     	;# 
  6683  0692                     	;# 
  6684  0693                     	;# 
  6685  0694                     	;# 
  6686  0695                     	;# 
  6687  0696                     	;# 
  6688  0697                     	;# 
  6689  0698                     	;# 
  6690  0699                     	;# 
  6691  0711                     	;# 
  6692  0712                     	;# 
  6693  0713                     	;# 
  6694  0714                     	;# 
  6695  0715                     	;# 
  6696  0716                     	;# 
  6697  0717                     	;# 
  6698  0718                     	;# 
  6699  0719                     	;# 
  6700  0891                     	;# 
  6701  0891                     	;# 
  6702  0891                     	;# 
  6703  0891                     	;# 
  6704  0891                     	;# 
  6705  0891                     	;# 
  6706  0892                     	;# 
  6707  0892                     	;# 
  6708  0892                     	;# 
  6709  0893                     	;# 
  6710  0893                     	;# 
  6711  0893                     	;# 
  6712  0893                     	;# 
  6713  0893                     	;# 
  6714  0893                     	;# 
  6715  0894                     	;# 
  6716  0894                     	;# 
  6717  0894                     	;# 
  6718  0895                     	;# 
  6719  0895                     	;# 
  6720  0895                     	;# 
  6721  0896                     	;# 
  6722  0896                     	;# 
  6723  0896                     	;# 
  6724  089B                     	;# 
  6725  0911                     	;# 
  6726  0912                     	;# 
  6727  0913                     	;# 
  6728  0914                     	;# 
  6729  0915                     	;# 
  6730  0916                     	;# 
  6731  0918                     	;# 
  6732  0919                     	;# 
  6733  091A                     	;# 
  6734  091B                     	;# 
  6735  091C                     	;# 
  6736  091D                     	;# 
  6737  091E                     	;# 
  6738  091F                     	;# 
  6739  0E0F                     	;# 
  6740  0E10                     	;# 
  6741  0E11                     	;# 
  6742  0E12                     	;# 
  6743  0E13                     	;# 
  6744  0E14                     	;# 
  6745  0E15                     	;# 
  6746  0E16                     	;# 
  6747  0E17                     	;# 
  6748  0E18                     	;# 
  6749  0E19                     	;# 
  6750  0E1A                     	;# 
  6751  0E1B                     	;# 
  6752  0E1C                     	;# 
  6753  0E1D                     	;# 
  6754  0E1E                     	;# 
  6755  0E1F                     	;# 
  6756  0E20                     	;# 
  6757  0E21                     	;# 
  6758  0E22                     	;# 
  6759  0E24                     	;# 
  6760  0E25                     	;# 
  6761  0E28                     	;# 
  6762  0E29                     	;# 
  6763  0E2A                     	;# 
  6764  0E2B                     	;# 
  6765  0E2C                     	;# 
  6766  0E2D                     	;# 
  6767  0E2E                     	;# 
  6768  0E2F                     	;# 
  6769  0E90                     	;# 
  6770  0E91                     	;# 
  6771  0E92                     	;# 
  6772  0E94                     	;# 
  6773  0E95                     	;# 
  6774  0E9C                     	;# 
  6775  0E9D                     	;# 
  6776  0E9E                     	;# 
  6777  0E9F                     	;# 
  6778  0EA0                     	;# 
  6779  0EA1                     	;# 
  6780  0EA2                     	;# 
  6781  0EA3                     	;# 
  6782  0EA4                     	;# 
  6783  0EA5                     	;# 
  6784  0EA6                     	;# 
  6785  0EA7                     	;# 
  6786  0F0F                     	;# 
  6787  0F10                     	;# 
  6788  0F11                     	;# 
  6789  0F12                     	;# 
  6790  0F13                     	;# 
  6791  0F14                     	;# 
  6792  0F15                     	;# 
  6793  0F16                     	;# 
  6794  0F17                     	;# 
  6795  0F18                     	;# 
  6796  0F19                     	;# 
  6797  0F1A                     	;# 
  6798  0F1B                     	;# 
  6799  0F1C                     	;# 
  6800  0F1D                     	;# 
  6801  0F1E                     	;# 
  6802  0F1F                     	;# 
  6803  0F20                     	;# 
  6804  0F21                     	;# 
  6805  0F22                     	;# 
  6806  0F23                     	;# 
  6807  0F24                     	;# 
  6808  0F25                     	;# 
  6809  0F26                     	;# 
  6810  0F27                     	;# 
  6811  0F28                     	;# 
  6812  0F29                     	;# 
  6813  0F2A                     	;# 
  6814  0F2B                     	;# 
  6815  0F2C                     	;# 
  6816  0F2D                     	;# 
  6817  0F2E                     	;# 
  6818  0F2F                     	;# 
  6819  0F30                     	;# 
  6820  0F31                     	;# 
  6821  0F32                     	;# 
  6822  0F33                     	;# 
  6823  0F34                     	;# 
  6824  0F35                     	;# 
  6825  0F36                     	;# 
  6826  0F37                     	;# 
  6827  0FE4                     	;# 
  6828  0FE5                     	;# 
  6829  0FE6                     	;# 
  6830  0FE7                     	;# 
  6831  0FE8                     	;# 
  6832  0FE9                     	;# 
  6833  0FEA                     	;# 
  6834  0FEB                     	;# 
  6835  0FED                     	;# 
  6836  0FEE                     	;# 
  6837  0FEF                     	;# 
  6838                           
  6839 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
  6840  0000                     
  6841 ;; Function _TMR1_DefaultInterruptHandler is unused but had its address taken
  6842  001F                     _T2CONbits	set	31
  6843  001F                     _T2CON	set	31
  6844  001D                     _TMR2	set	29
  6845  001E                     _PR2	set	30
  6846  0013                     _PIR3bits	set	19
  6847  001C                     _T1GCONbits	set	28
  6848  001B                     _T1CONbits	set	27
  6849  001B                     _T1CON	set	27
  6850  0011                     _PIR1bits	set	17
  6851  0019                     _TMR1L	set	25
  6852  001A                     _TMR1H	set	26
  6853  001C                     _T1GCON	set	28
  6854  0014                     _PIR4bits	set	20
  6855  0017                     _T0CON0bits	set	23
  6856  0017                     _T0CON0	set	23
  6857  0010                     _PIR0bits	set	16
  6858  0015                     _TMR0L	set	21
  6859  0016                     _TMR0H	set	22
  6860  0018                     _T0CON1	set	24
  6861  000D                     _PORTBbits	set	13
  6862  000E                     _PORTCbits	set	14
  6863  000C                     _PORTAbits	set	12
  6864  000B                     _INTCONbits	set	11
  6865  0014                     _PIR4	set	20
  6866  0013                     _PIR3	set	19
  6867  0012                     _PIR2	set	18
  6868  0011                     _PIR1	set	17
  6869  0010                     _PIR0	set	16
  6870  0093                     _PIE3bits	set	147
  6871  0091                     _PIE1bits	set	145
  6872  0094                     _PIE4bits	set	148
  6873  0090                     _PIE0bits	set	144
  6874  0097                     _WDTCON	set	151
  6875  008D                     _TRISBbits	set	141
  6876  008E                     _TRISCbits	set	142
  6877  008C                     _TRISAbits	set	140
  6878  008E                     _TRISC	set	142
  6879  008D                     _TRISB	set	141
  6880  008C                     _TRISA	set	140
  6881  0094                     _PIE4	set	148
  6882  0093                     _PIE3	set	147
  6883  0092                     _PIE2	set	146
  6884  0091                     _PIE1	set	145
  6885  0090                     _PIE0	set	144
  6886  010D                     _LATBbits	set	269
  6887  010E                     _LATCbits	set	270
  6888  010C                     _LATAbits	set	268
  6889  010E                     _LATC	set	270
  6890  010D                     _LATB	set	269
  6891  010C                     _LATA	set	268
  6892  0199                     _RC1REG	set	409
  6893  019D                     _RC1STAbits	set	413
  6894  019A                     _TX1REG	set	410
  6895  019E                     _TX1STAbits	set	414
  6896  019C                     _SP1BRGH	set	412
  6897  019B                     _SP1BRGL	set	411
  6898  019E                     _TX1STA	set	414
  6899  019D                     _RC1STA	set	413
  6900  019F                     _BAUD1CON	set	415
  6901  018C                     _ANSELA	set	396
  6902  018D                     _ANSELB	set	397
  6903  018E                     _ANSELC	set	398
  6904  020E                     _WPUC	set	526
  6905  020C                     _WPUA	set	524
  6906  020D                     _WPUB	set	525
  6907  0295                     _CCPR2L	set	661
  6908  0296                     _CCPR2H	set	662
  6909  0298                     _CCP2CAP	set	664
  6910  0297                     _CCP2CON	set	663
  6911  029F                     _CCPTMRSbits	set	671
  6912  0291                     _CCPR1L	set	657
  6913  0292                     _CCPR1H	set	658
  6914  0294                     _CCP1CAP	set	660
  6915  0293                     _CCP1CON	set	659
  6916  028E                     _ODCONC	set	654
  6917  028D                     _ODCONB	set	653
  6918  028C                     _ODCONA	set	652
  6919  0317                     _CCP4CONbits	set	791
  6920  0315                     _CCPR4L	set	789
  6921  0316                     _CCPR4H	set	790
  6922  0317                     _CCP4CON	set	791
  6923  0311                     _CCPR3L	set	785
  6924  0312                     _CCPR3H	set	786
  6925  0314                     _CCP3CAP	set	788
  6926  0313                     _CCP3CON	set	787
  6927  030E                     _SLRCONC	set	782
  6928  030D                     _SLRCONB	set	781
  6929  030C                     _SLRCONA	set	780
  6930  038E                     _INLVLC	set	910
  6931  038D                     _INLVLB	set	909
  6932  038C                     _INLVLA	set	908
  6933  0414                     _T3GCONbits	set	1044
  6934  0413                     _T3CONbits	set	1043
  6935  0413                     _T3CON	set	1043
  6936  0411                     _TMR3L	set	1041
  6937  0412                     _TMR3H	set	1042
  6938  0414                     _T3GCON	set	1044
  6939  061F                     _PWMTMRSbits	set	1567
  6940  0617                     _PWM5DCL	set	1559
  6941  0618                     _PWM5DCH	set	1560
  6942  0619                     _PWM5CON	set	1561
  6943  0916                     _PMD5	set	2326
  6944  0915                     _PMD4	set	2325
  6945  0914                     _PMD3	set	2324
  6946  0913                     _PMD2	set	2323
  6947  0912                     _PMD1	set	2322
  6948  0911                     _PMD0	set	2321
  6949  091E                     _OSCTUNE	set	2334
  6950  091F                     _OSCFRQ	set	2335
  6951  091D                     _OSCEN	set	2333
  6952  091B                     _OSCCON3	set	2331
  6953  0919                     _OSCCON1	set	2329
  6954  48E0                     _PLLR	set	18656
  6955  0E14                     _CCP1PPS	set	3604
  6956  0E16                     _CCP3PPS	set	3606
  6957  0E15                     _CCP2PPS	set	3605
  6958  0E24                     _RXPPS	set	3620
  6959  0EA4                     _RC4PPS	set	3748
  6960                           
  6961                           	psect	stringtext1
  6962  1000                     __pstringtext1:
  6963  1000                     STR_2:
  6964  1000  3445               	retlw	69	;'E'
  6965  1001  3452               	retlw	82	;'R'
  6966  1002  3452               	retlw	82	;'R'
  6967  1003  344F               	retlw	79	;'O'
  6968  1004  3452               	retlw	82	;'R'
  6969  1005  343A               	retlw	58	;':'
  6970  1006  3420               	retlw	32	;' '
  6971  1007  3449               	retlw	73	;'I'
  6972  1008  346E               	retlw	110	;'n'
  6973  1009  3476               	retlw	118	;'v'
  6974  100A  3461               	retlw	97	;'a'
  6975  100B  346C               	retlw	108	;'l'
  6976  100C  3469               	retlw	105	;'i'
  6977  100D  3464               	retlw	100	;'d'
  6978  100E  3420               	retlw	32	;' '
  6979  100F  3474               	retlw	116	;'t'
  6980  1010  3472               	retlw	114	;'r'
  6981  1011  3469               	retlw	105	;'i'
  6982  1012  3467               	retlw	103	;'g'
  6983  1013  3450               	retlw	80	;'P'
  6984  1014  3469               	retlw	105	;'i'
  6985  1015  346E               	retlw	110	;'n'
  6986  1016  3420               	retlw	32	;' '
  6987  1017  3428               	retlw	40	;'('
  6988  1018  346D               	retlw	109	;'m'
  6989  1019  3475               	retlw	117	;'u'
  6990  101A  3473               	retlw	115	;'s'
  6991  101B  3474               	retlw	116	;'t'
  6992  101C  3420               	retlw	32	;' '
  6993  101D  344E               	retlw	78	;'N'
  6994  101E  344F               	retlw	79	;'O'
  6995  101F  3454               	retlw	84	;'T'
  6996  1020  3420               	retlw	32	;' '
  6997  1021  3462               	retlw	98	;'b'
  6998  1022  3465               	retlw	101	;'e'
  6999  1023  3420               	retlw	32	;' '
  7000  1024  345B               	retlw	91	;'['
  7001  1025  3441               	retlw	65	;'A'
  7002  1026  3432               	retlw	50	;'2'
  7003  1027  342C               	retlw	44	;','
  7004  1028  3420               	retlw	32	;' '
  7005  1029  3441               	retlw	65	;'A'
  7006  102A  3433               	retlw	51	;'3'
  7007  102B  342C               	retlw	44	;','
  7008  102C  3420               	retlw	32	;' '
  7009  102D  3441               	retlw	65	;'A'
  7010  102E  3434               	retlw	52	;'4'
  7011  102F  342C               	retlw	44	;','
  7012  1030  3420               	retlw	32	;' '
  7013  1031  3443               	retlw	67	;'C'
  7014  1032  3433               	retlw	51	;'3'
  7015  1033  342C               	retlw	44	;','
  7016  1034  3420               	retlw	32	;' '
  7017  1035  3443               	retlw	67	;'C'
  7018  1036  3435               	retlw	53	;'5'
  7019  1037  345D               	retlw	93	;']'
  7020  1038  3429               	retlw	41	;')'
  7021  1039  3400               	retlw	0
  7022                           
  7023                           	psect	stringtext2
  7024  103A                     __pstringtext2:
  7025  103A                     STR_1:
  7026  103A  3445               	retlw	69	;'E'
  7027  103B  3452               	retlw	82	;'R'
  7028  103C  3452               	retlw	82	;'R'
  7029  103D  344F               	retlw	79	;'O'
  7030  103E  3452               	retlw	82	;'R'
  7031  103F  343A               	retlw	58	;':'
  7032  1040  3420               	retlw	32	;' '
  7033  1041  3449               	retlw	73	;'I'
  7034  1042  346E               	retlw	110	;'n'
  7035  1043  3476               	retlw	118	;'v'
  7036  1044  3461               	retlw	97	;'a'
  7037  1045  346C               	retlw	108	;'l'
  7038  1046  3469               	retlw	105	;'i'
  7039  1047  3464               	retlw	100	;'d'
  7040  1048  3420               	retlw	32	;' '
  7041  1049  3465               	retlw	101	;'e'
  7042  104A  3463               	retlw	99	;'c'
  7043  104B  3468               	retlw	104	;'h'
  7044  104C  346F               	retlw	111	;'o'
  7045  104D  3450               	retlw	80	;'P'
  7046  104E  3469               	retlw	105	;'i'
  7047  104F  346E               	retlw	110	;'n'
  7048  1050  3420               	retlw	32	;' '
  7049  1051  3428               	retlw	40	;'('
  7050  1052  346D               	retlw	109	;'m'
  7051  1053  3475               	retlw	117	;'u'
  7052  1054  3473               	retlw	115	;'s'
  7053  1055  3474               	retlw	116	;'t'
  7054  1056  3420               	retlw	32	;' '
  7055  1057  3462               	retlw	98	;'b'
  7056  1058  3465               	retlw	101	;'e'
  7057  1059  3420               	retlw	32	;' '
  7058  105A  345B               	retlw	91	;'['
  7059  105B  3441               	retlw	65	;'A'
  7060  105C  3432               	retlw	50	;'2'
  7061  105D  342C               	retlw	44	;','
  7062  105E  3420               	retlw	32	;' '
  7063  105F  3441               	retlw	65	;'A'
  7064  1060  3434               	retlw	52	;'4'
  7065  1061  342C               	retlw	44	;','
  7066  1062  3420               	retlw	32	;' '
  7067  1063  3443               	retlw	67	;'C'
  7068  1064  3433               	retlw	51	;'3'
  7069  1065  342C               	retlw	44	;','
  7070  1066  3420               	retlw	32	;' '
  7071  1067  3443               	retlw	67	;'C'
  7072  1068  3435               	retlw	53	;'5'
  7073  1069  345D               	retlw	93	;']'
  7074  106A  3429               	retlw	41	;')'
  7075  106B  3400               	retlw	0
  7076                           
  7077                           	psect	stringtext3
  7078  106C                     __pstringtext3:
  7079  106C                     STR_3:
  7080  106C  3425               	retlw	37	;'%'
  7081  106D  3475               	retlw	117	;'u'
  7082  106E  3400               	retlw	0
  7083                           
  7084                           	psect	stringtext4
  7085  0000                     __pstringtext4:
  7086  106C                     
  7087                           	psect	cinit
  7088  0092                     start_initialization:	
  7089                           ; #config settings
  7090                           
  7091  0092                     __initialization:
  7092                           
  7093                           ; Clear objects allocated to COMMON
  7094  0092  01FA               	clrf	__pbssCOMMON& (0+127)
  7095  0093  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  7096  0094  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  7097  0095  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  7098                           
  7099                           ; Clear objects allocated to BANK1
  7100  0096  30A0               	movlw	low __pbssBANK1
  7101  0097  0084               	movwf	4
  7102  0098  3000               	movlw	high __pbssBANK1
  7103  0099  0085               	movwf	5
  7104  009A  303A               	movlw	58
  7105  009B  318A  2246  3180   	fcall	clear_ram0
  7106                           
  7107                           ; Clear objects allocated to BANK2
  7108  009E  3020               	movlw	low __pbssBANK2
  7109  009F  0084               	movwf	4
  7110  00A0  3001               	movlw	high __pbssBANK2
  7111  00A1  0085               	movwf	5
  7112  00A2  3036               	movlw	54
  7113  00A3  318A  2246  3180   	fcall	clear_ram0
  7114                           
  7115                           ; Clear objects allocated to BANK3
  7116  00A6  30A0               	movlw	low __pbssBANK3
  7117  00A7  0084               	movwf	4
  7118  00A8  3001               	movlw	high __pbssBANK3
  7119  00A9  0085               	movwf	5
  7120  00AA  3020               	movlw	32
  7121  00AB  318A  2246  3180   	fcall	clear_ram0
  7122  00AE                     end_of_initialization:	
  7123                           ;End of C runtime variable initialization code
  7124                           
  7125  00AE                     __end_of__initialization:
  7126  00AE  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7127  00AF  0020               	movlb	0
  7128  00B0  3180  28B2         	ljmp	_main	;jump to C main() function
  7129                           
  7130                           	psect	bssCOMMON
  7131  007A                     __pbssCOMMON:
  7132  007A                     _eusartRxTail:
  7133  007A                     	ds	1
  7134  007B                     _eusartRxHead:
  7135  007B                     	ds	1
  7136  007C                     _eusartTxTail:
  7137  007C                     	ds	1
  7138  007D                     _eusartTxHead:
  7139  007D                     	ds	1
  7140                           
  7141                           	psect	bssBANK1
  7142  00A0                     __pbssBANK1:
  7143  00A0                     _nout:
  7144  00A0                     	ds	2
  7145  00A2                     _width:
  7146  00A2                     	ds	2
  7147  00A4                     _prec:
  7148  00A4                     	ds	2
  7149  00A6                     _flags:
  7150  00A6                     	ds	2
  7151  00A8                     _TMR3_InterruptHandler:
  7152  00A8                     	ds	2
  7153  00AA                     _timer3ReloadVal:
  7154  00AA                     	ds	2
  7155  00AC                     _EUSART_ErrorHandler:
  7156  00AC                     	ds	2
  7157  00AE                     _EUSART_OverrunErrorHandler:
  7158  00AE                     	ds	2
  7159  00B0                     _EUSART_FramingErrorHandler:
  7160  00B0                     	ds	2
  7161  00B2                     _EUSART_RxDefaultInterruptHandler:
  7162  00B2                     	ds	2
  7163  00B4                     _EUSART_TxDefaultInterruptHandler:
  7164  00B4                     	ds	2
  7165  00B6                     _TMR1_InterruptHandler:
  7166  00B6                     	ds	2
  7167  00B8                     _timer1ReloadVal:
  7168  00B8                     	ds	2
  7169  00BA                     _ticksDown@ccp3$F1016:
  7170  00BA                     	ds	2
  7171  00BC                     _ticksUp@ccp3$F1015:
  7172  00BC                     	ds	2
  7173  00BE                     _CCP3_CallBack:
  7174  00BE                     	ds	2
  7175  00C0                     _ticksDown@ccp2$F891:
  7176  00C0                     	ds	2
  7177  00C2                     _ticksUp@ccp2$F890:
  7178  00C2                     	ds	2
  7179  00C4                     _CCP2_CallBack:
  7180  00C4                     	ds	2
  7181  00C6                     _ticksDown:
  7182  00C6                     	ds	2
  7183  00C8                     _ticksUp:
  7184  00C8                     	ds	2
  7185  00CA                     _CCP1_CallBack:
  7186  00CA                     	ds	2
  7187  00CC                     TMR0_ISR@CountCallBack:
  7188  00CC                     	ds	2
  7189  00CE                     _TMR0_InterruptHandler:
  7190  00CE                     	ds	2
  7191  00D0                     _eusartRxLastError:
  7192  00D0                     	ds	1
  7193  00D1                     _eusartRxCount:
  7194  00D1                     	ds	1
  7195  00D2                     _eusartTxBufferRemaining:
  7196  00D2                     	ds	1
  7197  00D3                     _lastTrig@ccp3$F1018:
  7198  00D3                     	ds	1
  7199  00D4                     _sameSens@ccp3$F1017:
  7200  00D4                     	ds	1
  7201  00D5                     _lastTrig@ccp2$F893:
  7202  00D5                     	ds	1
  7203  00D6                     _sameSens@ccp2$F892:
  7204  00D6                     	ds	1
  7205  00D7                     _lastTrig@ccp1$F747:
  7206  00D7                     	ds	1
  7207  00D8                     _sameSens:
  7208  00D8                     	ds	1
  7209  00D9                     _lastTrig:
  7210  00D9                     	ds	1
  7211                           
  7212                           	psect	bssBANK2
  7213  0120                     __pbssBANK2:
  7214  0120                     _eusartRxStatusBuffer:
  7215  0120                     	ds	8
  7216  0128                     _eusartRxBuffer:
  7217  0128                     	ds	8
  7218  0130                     _eusartTxBuffer:
  7219  0130                     	ds	8
  7220  0138                     _Sens3:
  7221  0138                     	ds	6
  7222  013E                     _micros@FRT$F1617:
  7223  013E                     	ds	4
  7224  0142                     _millis:
  7225  0142                     	ds	4
  7226  0146                     _micros:
  7227  0146                     	ds	4
  7228  014A                     _Sens2:
  7229  014A                     	ds	6
  7230  0150                     _Sens1:
  7231  0150                     	ds	6
  7232                           
  7233                           	psect	bssBANK3
  7234  01A0                     __pbssBANK3:
  7235  01A0                     _dbuf:
  7236  01A0                     	ds	32
  7237                           
  7238                           	psect	clrtext
  7239  0A46                     clear_ram0:	
  7240                           ;	Called with FSR0 containing the base address, and
  7241                           ;	WREG with the size to clear
  7242                           
  7243  0A46  0064               	clrwdt	;clear the watchdog before getting into this loop
  7244  0A47                     clrloop0:
  7245  0A47  0180               	clrf	0	;clear RAM location pointed to by FSR
  7246  0A48  3101               	addfsr 0,1
  7247  0A49  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7248  0A4A  2A47               	goto	clrloop0	;have we reached the end yet?
  7249  0A4B  3400               	retlw	0	;all done for this memory range, return
  7250                           
  7251                           	psect	cstackBANK1
  7252  00DA                     __pcstackBANK1:
  7253  00DA                     ??_printf:
  7254                           
  7255                           ; 1 bytes @ 0x0
  7256  00DA                     	ds	1
  7257  00DB                     printf@ap:
  7258                           
  7259                           ; 1 bytes @ 0x1
  7260  00DB                     	ds	1
  7261  00DC                     ?_JSN_Sensor_Init:
  7262  00DC                     JSN_Sensor_Init@trigPin:	
  7263                           ; 1 bytes @ 0x2
  7264                           
  7265                           
  7266                           ; 1 bytes @ 0x2
  7267  00DC                     	ds	1
  7268  00DD                     JSN_Sensor_Init@echoPin:
  7269                           
  7270                           ; 1 bytes @ 0x3
  7271  00DD                     	ds	1
  7272  00DE                     ??_JSN_Sensor_Init:
  7273                           
  7274                           ; 1 bytes @ 0x4
  7275  00DE                     	ds	2
  7276  00E0                     JSN_Sensor_Init@Sensor:
  7277                           
  7278                           ; 1 bytes @ 0x6
  7279  00E0                     	ds	1
  7280  00E1                     ??_main:
  7281                           
  7282                           ; 1 bytes @ 0x7
  7283  00E1                     	ds	4
  7284  00E5                     main@prevMilli:
  7285                           
  7286                           ; 4 bytes @ 0xB
  7287  00E5                     	ds	4
  7288  00E9                     main@i:
  7289                           
  7290                           ; 1 bytes @ 0xF
  7291  00E9                     	ds	1
  7292  00EA                     main@currMilli:
  7293                           
  7294                           ; 4 bytes @ 0x10
  7295  00EA                     	ds	4
  7296                           
  7297                           	psect	cstackCOMMON
  7298  0070                     __pcstackCOMMON:
  7299  0070                     ?_PIC16_Init:
  7300  0070                     ?_JSN_GetLastTrig:	
  7301                           ; 1 bytes @ 0x0
  7302                           
  7303  0070                     ??_JSN_GetLastTrig:	
  7304                           ; 1 bytes @ 0x0
  7305                           
  7306  0070                     ?_SYSTEM_Initialize:	
  7307                           ; 1 bytes @ 0x0
  7308                           
  7309  0070                     ?_PMD_Initialize:	
  7310                           ; 1 bytes @ 0x0
  7311                           
  7312  0070                     ?_PIN_MANAGER_Initialize:	
  7313                           ; 1 bytes @ 0x0
  7314                           
  7315  0070                     ?_OSCILLATOR_Initialize:	
  7316                           ; 1 bytes @ 0x0
  7317                           
  7318  0070                     ?_WDT_Initialize:	
  7319                           ; 1 bytes @ 0x0
  7320                           
  7321  0070                     ?_CCP3_Initialize:	
  7322                           ; 1 bytes @ 0x0
  7323                           
  7324  0070                     ?_CCP1_Initialize:	
  7325                           ; 1 bytes @ 0x0
  7326                           
  7327  0070                     ?_TMR2_Initialize:	
  7328                           ; 1 bytes @ 0x0
  7329                           
  7330  0070                     ?_TMR0_Initialize:	
  7331                           ; 1 bytes @ 0x0
  7332                           
  7333  0070                     ?_CCP2_Initialize:	
  7334                           ; 1 bytes @ 0x0
  7335                           
  7336  0070                     ?_CCP4_Initialize:	
  7337                           ; 1 bytes @ 0x0
  7338                           
  7339  0070                     ?_TMR3_Initialize:	
  7340                           ; 1 bytes @ 0x0
  7341                           
  7342  0070                     ?_PWM5_Initialize:	
  7343                           ; 1 bytes @ 0x0
  7344                           
  7345  0070                     ?_TMR1_Initialize:	
  7346                           ; 1 bytes @ 0x0
  7347                           
  7348  0070                     ?_EUSART_Initialize:	
  7349                           ; 1 bytes @ 0x0
  7350                           
  7351  0070                     ?_TMR0_CallBack:	
  7352                           ; 1 bytes @ 0x0
  7353                           
  7354  0070                     ??_TMR0_CallBack:	
  7355                           ; 1 bytes @ 0x0
  7356                           
  7357  0070                     ?_FRT_IncMillis:	
  7358                           ; 1 bytes @ 0x0
  7359                           
  7360  0070                     ??_FRT_IncMillis:	
  7361                           ; 1 bytes @ 0x0
  7362                           
  7363  0070                     ?_FRT_IncMicros:	
  7364                           ; 1 bytes @ 0x0
  7365                           
  7366  0070                     ??_FRT_IncMicros:	
  7367                           ; 1 bytes @ 0x0
  7368                           
  7369  0070                     ?_EUSART_Receive_ISR:	
  7370                           ; 1 bytes @ 0x0
  7371                           
  7372  0070                     ?_EUSART_Transmit_ISR:	
  7373                           ; 1 bytes @ 0x0
  7374                           
  7375  0070                     ??_EUSART_Transmit_ISR:	
  7376                           ; 1 bytes @ 0x0
  7377                           
  7378  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  7379                           ; 1 bytes @ 0x0
  7380                           
  7381  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  7382                           ; 1 bytes @ 0x0
  7383                           
  7384  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  7385                           ; 1 bytes @ 0x0
  7386                           
  7387  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  7388                           ; 1 bytes @ 0x0
  7389                           
  7390  0070                     ?_EUSART_DefaultErrorHandler:	
  7391                           ; 1 bytes @ 0x0
  7392                           
  7393  0070                     ?_EUSART_RxDataHandler:	
  7394                           ; 1 bytes @ 0x0
  7395                           
  7396  0070                     ??_EUSART_RxDataHandler:	
  7397                           ; 1 bytes @ 0x0
  7398                           
  7399  0070                     ?_CCP4_CompareISR:	
  7400                           ; 1 bytes @ 0x0
  7401                           
  7402  0070                     ??_CCP4_CompareISR:	
  7403                           ; 1 bytes @ 0x0
  7404                           
  7405  0070                     ?_TMR3_ISR:	
  7406                           ; 1 bytes @ 0x0
  7407                           
  7408  0070                     ?_TMR3_DefaultInterruptHandler:	
  7409                           ; 1 bytes @ 0x0
  7410                           
  7411  0070                     ??_TMR3_DefaultInterruptHandler:	
  7412                           ; 1 bytes @ 0x0
  7413                           
  7414  0070                     ?_JSN_Sensor_Trig:	
  7415                           ; 1 bytes @ 0x0
  7416                           
  7417  0070                     ?_ReadPin:	
  7418                           ; 1 bytes @ 0x0
  7419                           
  7420  0070                     ??_ReadPin:	
  7421                           ; 1 bytes @ 0x0
  7422                           
  7423  0070                     ?_TMR0_ReadTimer:	
  7424                           ; 1 bytes @ 0x0
  7425                           
  7426  0070                     ?_TMR0_ISR:	
  7427                           ; 1 bytes @ 0x0
  7428                           
  7429  0070                     ??_TMR0_ISR:	
  7430                           ; 1 bytes @ 0x0
  7431                           
  7432  0070                     ?_CCP1_CaptureISR:	
  7433                           ; 1 bytes @ 0x0
  7434                           
  7435  0070                     ?_CCP2_CaptureISR:	
  7436                           ; 1 bytes @ 0x0
  7437                           
  7438  0070                     ?_CCP3_CaptureISR:	
  7439                           ; 1 bytes @ 0x0
  7440                           
  7441  0070                     ?_TMR1_WriteTimer:	
  7442                           ; 1 bytes @ 0x0
  7443                           
  7444  0070                     ?_TMR1_ISR:	
  7445                           ; 1 bytes @ 0x0
  7446                           
  7447  0070                     ?_EUSART_Write:	
  7448                           ; 1 bytes @ 0x0
  7449                           
  7450  0070                     ?_putch:	
  7451                           ; 1 bytes @ 0x0
  7452                           
  7453  0070                     ?_INTERRUPT_InterruptManager:	
  7454                           ; 1 bytes @ 0x0
  7455                           
  7456  0070                     ?_TMR3_WriteTimer:	
  7457                           ; 1 bytes @ 0x0
  7458                           
  7459  0070                     ?_main:	
  7460                           ; 1 bytes @ 0x0
  7461                           
  7462  0070                     TMR1_WriteTimer@timerVal:	
  7463                           ; 2 bytes @ 0x0
  7464                           
  7465  0070                     TMR3_WriteTimer@timerVal:	
  7466                           ; 2 bytes @ 0x0
  7467                           
  7468                           
  7469                           ; 2 bytes @ 0x0
  7470  0070                     	ds	1
  7471  0071                     ??_EUSART_Receive_ISR:
  7472  0071                     ??_EUSART_DefaultErrorHandler:	
  7473                           ; 1 bytes @ 0x1
  7474                           
  7475                           
  7476                           ; 1 bytes @ 0x1
  7477  0071                     	ds	1
  7478  0072                     ??_TMR3_ISR:
  7479  0072                     ??_TMR1_WriteTimer:	
  7480                           ; 1 bytes @ 0x2
  7481                           
  7482  0072                     ??_TMR1_ISR:	
  7483                           ; 1 bytes @ 0x2
  7484                           
  7485  0072                     ??_TMR3_WriteTimer:	
  7486                           ; 1 bytes @ 0x2
  7487                           
  7488  0072                     ReadPin@pin:	
  7489                           ; 1 bytes @ 0x2
  7490                           
  7491                           
  7492                           ; 1 bytes @ 0x2
  7493  0072                     	ds	1
  7494  0073                     ?_CCP1_DefaultCallBack:
  7495  0073                     ?_CCP2_DefaultCallBack:	
  7496                           ; 1 bytes @ 0x3
  7497                           
  7498  0073                     ?_CCP3_DefaultCallBack:	
  7499                           ; 1 bytes @ 0x3
  7500                           
  7501  0073                     CCP1_DefaultCallBack@capturedValue:	
  7502                           ; 1 bytes @ 0x3
  7503                           
  7504  0073                     CCP2_DefaultCallBack@capturedValue:	
  7505                           ; 2 bytes @ 0x3
  7506                           
  7507  0073                     CCP3_DefaultCallBack@capturedValue:	
  7508                           ; 2 bytes @ 0x3
  7509                           
  7510                           
  7511                           ; 2 bytes @ 0x3
  7512  0073                     	ds	2
  7513  0075                     ??_CCP1_DefaultCallBack:
  7514  0075                     ??_CCP2_DefaultCallBack:	
  7515                           ; 1 bytes @ 0x5
  7516                           
  7517  0075                     ??_CCP3_DefaultCallBack:	
  7518                           ; 1 bytes @ 0x5
  7519                           
  7520                           
  7521                           ; 1 bytes @ 0x5
  7522  0075                     	ds	2
  7523  0077                     ??_CCP1_CaptureISR:
  7524  0077                     ??_CCP2_CaptureISR:	
  7525                           ; 1 bytes @ 0x7
  7526                           
  7527  0077                     ??_CCP3_CaptureISR:	
  7528                           ; 1 bytes @ 0x7
  7529                           
  7530                           
  7531                           ; 1 bytes @ 0x7
  7532  0077                     	ds	1
  7533  0078                     CCP1_CaptureISR@module:
  7534  0078                     CCP2_CaptureISR@module:	
  7535                           ; 2 bytes @ 0x8
  7536                           
  7537  0078                     CCP3_CaptureISR@module:	
  7538                           ; 2 bytes @ 0x8
  7539                           
  7540                           
  7541                           ; 2 bytes @ 0x8
  7542  0078                     	ds	2
  7543  007A                     ??_INTERRUPT_InterruptManager:
  7544                           
  7545                           	psect	cstackBANK0
  7546  0020                     __pcstackBANK0:	
  7547                           ; 1 bytes @ 0xA
  7548                           
  7549  0020                     ?_SetPin:
  7550  0020                     ?_WritePin:	
  7551                           ; 1 bytes @ 0x0
  7552                           
  7553  0020                     ??_PMD_Initialize:	
  7554                           ; 1 bytes @ 0x0
  7555                           
  7556  0020                     ??_PIN_MANAGER_Initialize:	
  7557                           ; 1 bytes @ 0x0
  7558                           
  7559  0020                     ??_OSCILLATOR_Initialize:	
  7560                           ; 1 bytes @ 0x0
  7561                           
  7562  0020                     ??_WDT_Initialize:	
  7563                           ; 1 bytes @ 0x0
  7564                           
  7565  0020                     ??_TMR2_Initialize:	
  7566                           ; 1 bytes @ 0x0
  7567                           
  7568  0020                     ??_CCP4_Initialize:	
  7569                           ; 1 bytes @ 0x0
  7570                           
  7571  0020                     ??_PWM5_Initialize:	
  7572                           ; 1 bytes @ 0x0
  7573                           
  7574  0020                     ?_TMR0_SetInterruptHandler:	
  7575                           ; 1 bytes @ 0x0
  7576                           
  7577  0020                     ?_CCP1_SetCallBack:	
  7578                           ; 1 bytes @ 0x0
  7579                           
  7580  0020                     ?_CCP2_SetCallBack:	
  7581                           ; 1 bytes @ 0x0
  7582                           
  7583  0020                     ?_CCP3_SetCallBack:	
  7584                           ; 1 bytes @ 0x0
  7585                           
  7586  0020                     ?_TMR1_SetInterruptHandler:	
  7587                           ; 1 bytes @ 0x0
  7588                           
  7589  0020                     ?_EUSART_SetRxInterruptHandler:	
  7590                           ; 1 bytes @ 0x0
  7591                           
  7592  0020                     ?_EUSART_SetTxInterruptHandler:	
  7593                           ; 1 bytes @ 0x0
  7594                           
  7595  0020                     ?_EUSART_SetFramingErrorHandler:	
  7596                           ; 1 bytes @ 0x0
  7597                           
  7598  0020                     ?_EUSART_SetOverrunErrorHandler:	
  7599                           ; 1 bytes @ 0x0
  7600                           
  7601  0020                     ?_EUSART_SetErrorHandler:	
  7602                           ; 1 bytes @ 0x0
  7603                           
  7604  0020                     ?_TMR3_SetInterruptHandler:	
  7605                           ; 1 bytes @ 0x0
  7606                           
  7607  0020                     ??_TMR0_ReadTimer:	
  7608                           ; 1 bytes @ 0x0
  7609                           
  7610  0020                     ??_EUSART_Write:	
  7611                           ; 1 bytes @ 0x0
  7612                           
  7613  0020                     ?_strlen:	
  7614                           ; 1 bytes @ 0x0
  7615                           
  7616  0020                     ?_FRT_GetMillis:	
  7617                           ; 2 bytes @ 0x0
  7618                           
  7619  0020                     ?___lmul:	
  7620                           ; 4 bytes @ 0x0
  7621                           
  7622  0020                     ?___lodiv:	
  7623                           ; 4 bytes @ 0x0
  7624                           
  7625  0020                     ?___lomod:	
  7626                           ; 8 bytes @ 0x0
  7627                           
  7628  0020                     SetPin@io:	
  7629                           ; 8 bytes @ 0x0
  7630                           
  7631  0020                     WritePin@val:	
  7632                           ; 1 bytes @ 0x0
  7633                           
  7634  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  7635                           ; 1 bytes @ 0x0
  7636                           
  7637  0020                     CCP1_SetCallBack@customCallBack:	
  7638                           ; 2 bytes @ 0x0
  7639                           
  7640  0020                     CCP2_SetCallBack@customCallBack:	
  7641                           ; 2 bytes @ 0x0
  7642                           
  7643  0020                     CCP3_SetCallBack@customCallBack:	
  7644                           ; 2 bytes @ 0x0
  7645                           
  7646  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  7647                           ; 2 bytes @ 0x0
  7648                           
  7649  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  7650                           ; 2 bytes @ 0x0
  7651                           
  7652  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  7653                           ; 2 bytes @ 0x0
  7654                           
  7655  0020                     EUSART_SetErrorHandler@interruptHandler:	
  7656                           ; 2 bytes @ 0x0
  7657                           
  7658  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  7659                           ; 2 bytes @ 0x0
  7660                           
  7661  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  7662                           ; 2 bytes @ 0x0
  7663                           
  7664  0020                     TMR3_SetInterruptHandler@InterruptHandler:	
  7665                           ; 2 bytes @ 0x0
  7666                           
  7667  0020                     ___lmul@multiplier:	
  7668                           ; 2 bytes @ 0x0
  7669                           
  7670  0020                     ___lodiv@divisor:	
  7671                           ; 4 bytes @ 0x0
  7672                           
  7673  0020                     ___lomod@divisor:	
  7674                           ; 8 bytes @ 0x0
  7675                           
  7676                           
  7677                           ; 8 bytes @ 0x0
  7678  0020                     	ds	1
  7679  0021                     ??_SetPin:
  7680  0021                     ??_WritePin:	
  7681                           ; 1 bytes @ 0x1
  7682                           
  7683  0021                     TMR0_ReadTimer@readVal:	
  7684                           ; 1 bytes @ 0x1
  7685                           
  7686  0021                     EUSART_Write@txData:	
  7687                           ; 1 bytes @ 0x1
  7688                           
  7689                           
  7690                           ; 1 bytes @ 0x1
  7691  0021                     	ds	1
  7692  0022                     ??_CCP3_Initialize:
  7693  0022                     ??_CCP1_Initialize:	
  7694                           ; 1 bytes @ 0x2
  7695                           
  7696  0022                     ??_TMR0_Initialize:	
  7697                           ; 1 bytes @ 0x2
  7698                           
  7699  0022                     ??_CCP2_Initialize:	
  7700                           ; 1 bytes @ 0x2
  7701                           
  7702  0022                     ??_TMR3_Initialize:	
  7703                           ; 1 bytes @ 0x2
  7704                           
  7705  0022                     ??_TMR1_Initialize:	
  7706                           ; 1 bytes @ 0x2
  7707                           
  7708  0022                     ??_EUSART_Initialize:	
  7709                           ; 1 bytes @ 0x2
  7710                           
  7711  0022                     ??_TMR0_SetInterruptHandler:	
  7712                           ; 1 bytes @ 0x2
  7713                           
  7714  0022                     ??_CCP1_SetCallBack:	
  7715                           ; 1 bytes @ 0x2
  7716                           
  7717  0022                     ??_CCP2_SetCallBack:	
  7718                           ; 1 bytes @ 0x2
  7719                           
  7720  0022                     ??_CCP3_SetCallBack:	
  7721                           ; 1 bytes @ 0x2
  7722                           
  7723  0022                     ??_TMR1_SetInterruptHandler:	
  7724                           ; 1 bytes @ 0x2
  7725                           
  7726  0022                     ??_EUSART_SetRxInterruptHandler:	
  7727                           ; 1 bytes @ 0x2
  7728                           
  7729  0022                     ??_EUSART_SetTxInterruptHandler:	
  7730                           ; 1 bytes @ 0x2
  7731                           
  7732  0022                     ??_EUSART_SetFramingErrorHandler:	
  7733                           ; 1 bytes @ 0x2
  7734                           
  7735  0022                     ??_EUSART_SetOverrunErrorHandler:	
  7736                           ; 1 bytes @ 0x2
  7737                           
  7738  0022                     ??_EUSART_SetErrorHandler:	
  7739                           ; 1 bytes @ 0x2
  7740                           
  7741  0022                     ??_TMR3_SetInterruptHandler:	
  7742                           ; 1 bytes @ 0x2
  7743                           
  7744  0022                     ??_strlen:	
  7745                           ; 1 bytes @ 0x2
  7746                           
  7747  0022                     ??_putch:	
  7748                           ; 1 bytes @ 0x2
  7749                           
  7750  0022                     ?_FRT_GetMicros:	
  7751                           ; 1 bytes @ 0x2
  7752                           
  7753  0022                     putch@txData:	
  7754                           ; 4 bytes @ 0x2
  7755                           
  7756                           
  7757                           ; 1 bytes @ 0x2
  7758  0022                     	ds	1
  7759  0023                     ??_PIC16_Init:
  7760  0023                     ??_SYSTEM_Initialize:	
  7761                           ; 1 bytes @ 0x3
  7762                           
  7763  0023                     ?_fputc:	
  7764                           ; 1 bytes @ 0x3
  7765                           
  7766  0023                     SetPin@pin:	
  7767                           ; 2 bytes @ 0x3
  7768                           
  7769  0023                     WritePin@pin:	
  7770                           ; 1 bytes @ 0x3
  7771                           
  7772  0023                     strlen@a:	
  7773                           ; 1 bytes @ 0x3
  7774                           
  7775  0023                     fputc@c:	
  7776                           ; 1 bytes @ 0x3
  7777                           
  7778                           
  7779                           ; 2 bytes @ 0x3
  7780  0023                     	ds	1
  7781  0024                     ??_FRT_GetMillis:
  7782  0024                     strlen@s:	
  7783                           ; 1 bytes @ 0x4
  7784                           
  7785  0024                     ___lmul@multiplicand:	
  7786                           ; 1 bytes @ 0x4
  7787                           
  7788                           
  7789                           ; 4 bytes @ 0x4
  7790  0024                     	ds	1
  7791  0025                     fputc@fp:
  7792                           
  7793                           ; 1 bytes @ 0x5
  7794  0025                     	ds	1
  7795  0026                     ??_FRT_GetMicros:
  7796  0026                     ??_fputc:	
  7797                           ; 1 bytes @ 0x6
  7798                           
  7799  0026                     ??_JSN_Sensor_Trig:	
  7800                           ; 1 bytes @ 0x6
  7801                           
  7802                           
  7803                           ; 1 bytes @ 0x6
  7804  0026                     	ds	2
  7805  0028                     ??___lmul:
  7806  0028                     ___lmul@product:	
  7807                           ; 1 bytes @ 0x8
  7808                           
  7809  0028                     ___lodiv@dividend:	
  7810                           ; 4 bytes @ 0x8
  7811                           
  7812  0028                     ___lomod@dividend:	
  7813                           ; 8 bytes @ 0x8
  7814                           
  7815                           
  7816                           ; 8 bytes @ 0x8
  7817  0028                     	ds	2
  7818  002A                     JSN_Sensor_Trig@Sensor:
  7819                           
  7820                           ; 1 bytes @ 0xA
  7821  002A                     	ds	1
  7822  002B                     ?_fputs:
  7823  002B                     fputs@fp:	
  7824                           ; 2 bytes @ 0xB
  7825                           
  7826                           
  7827                           ; 1 bytes @ 0xB
  7828  002B                     	ds	1
  7829  002C                     ??_fputs:
  7830  002C                     ?___lldiv:	
  7831                           ; 1 bytes @ 0xC
  7832                           
  7833  002C                     ___lldiv@divisor:	
  7834                           ; 4 bytes @ 0xC
  7835                           
  7836                           
  7837                           ; 4 bytes @ 0xC
  7838  002C                     	ds	3
  7839  002F                     fputs@c:
  7840                           
  7841                           ; 1 bytes @ 0xF
  7842  002F                     	ds	1
  7843  0030                     ??___lodiv:
  7844  0030                     ??___lomod:	
  7845                           ; 1 bytes @ 0x10
  7846                           
  7847  0030                     fputs@i:	
  7848                           ; 1 bytes @ 0x10
  7849                           
  7850  0030                     ___lldiv@dividend:	
  7851                           ; 2 bytes @ 0x10
  7852                           
  7853                           
  7854                           ; 4 bytes @ 0x10
  7855  0030                     	ds	1
  7856  0031                     ___lomod@counter:
  7857  0031                     ___lodiv@quotient:	
  7858                           ; 1 bytes @ 0x11
  7859                           
  7860                           
  7861                           ; 8 bytes @ 0x11
  7862  0031                     	ds	1
  7863  0032                     fputs@s:
  7864                           
  7865                           ; 1 bytes @ 0x12
  7866  0032                     	ds	1
  7867  0033                     ?_pad:
  7868  0033                     pad@buf:	
  7869                           ; 2 bytes @ 0x13
  7870                           
  7871                           
  7872                           ; 1 bytes @ 0x13
  7873  0033                     	ds	1
  7874  0034                     ??___lldiv:
  7875  0034                     pad@p:	
  7876                           ; 1 bytes @ 0x14
  7877                           
  7878                           
  7879                           ; 2 bytes @ 0x14
  7880  0034                     	ds	1
  7881  0035                     ___lldiv@quotient:
  7882                           
  7883                           ; 4 bytes @ 0x15
  7884  0035                     	ds	1
  7885  0036                     ??_pad:
  7886                           
  7887                           ; 1 bytes @ 0x16
  7888  0036                     	ds	1
  7889  0037                     pad@i:
  7890                           
  7891                           ; 2 bytes @ 0x17
  7892  0037                     	ds	2
  7893  0039                     ___lldiv@counter:
  7894  0039                     ___lodiv@counter:	
  7895                           ; 1 bytes @ 0x19
  7896                           
  7897  0039                     pad@w:	
  7898                           ; 1 bytes @ 0x19
  7899                           
  7900                           
  7901                           ; 2 bytes @ 0x19
  7902  0039                     	ds	1
  7903  003A                     ?_JSN_Sensor_GetDistance:
  7904                           
  7905                           ; 2 bytes @ 0x1A
  7906  003A                     	ds	1
  7907  003B                     pad@fp:
  7908                           
  7909                           ; 1 bytes @ 0x1B
  7910  003B                     	ds	1
  7911  003C                     ??_JSN_Sensor_GetDistance:
  7912  003C                     ?_utoa:	
  7913                           ; 1 bytes @ 0x1C
  7914                           
  7915  003C                     utoa@d:	
  7916                           ; 2 bytes @ 0x1C
  7917                           
  7918                           
  7919                           ; 8 bytes @ 0x1C
  7920  003C                     	ds	2
  7921  003E                     JSN_Sensor_GetDistance@Sensor:
  7922                           
  7923                           ; 1 bytes @ 0x1E
  7924  003E                     	ds	6
  7925  0044                     ??_utoa:
  7926                           
  7927                           ; 1 bytes @ 0x24
  7928  0044                     	ds	1
  7929  0045                     utoa@p:
  7930                           
  7931                           ; 2 bytes @ 0x25
  7932  0045                     	ds	2
  7933  0047                     utoa@fp:
  7934                           
  7935                           ; 1 bytes @ 0x27
  7936  0047                     	ds	1
  7937  0048                     utoa@w:
  7938                           
  7939                           ; 2 bytes @ 0x28
  7940  0048                     	ds	2
  7941  004A                     utoa@n:
  7942                           
  7943                           ; 8 bytes @ 0x2A
  7944  004A                     	ds	8
  7945  0052                     utoa@i:
  7946                           
  7947                           ; 2 bytes @ 0x32
  7948  0052                     	ds	2
  7949  0054                     ?_vfpfcnvrt:
  7950  0054                     vfpfcnvrt@fmt:	
  7951                           ; 2 bytes @ 0x34
  7952                           
  7953                           
  7954                           ; 1 bytes @ 0x34
  7955  0054                     	ds	1
  7956  0055                     vfpfcnvrt@ap:
  7957                           
  7958                           ; 1 bytes @ 0x35
  7959  0055                     	ds	1
  7960  0056                     ??_vfpfcnvrt:
  7961                           
  7962                           ; 1 bytes @ 0x36
  7963  0056                     	ds	5
  7964  005B                     vfpfcnvrt@llu:
  7965                           
  7966                           ; 8 bytes @ 0x3B
  7967  005B                     	ds	8
  7968  0063                     vfpfcnvrt@fp:
  7969                           
  7970                           ; 1 bytes @ 0x43
  7971  0063                     	ds	1
  7972  0064                     ?_vfprintf:
  7973  0064                     vfprintf@fmt:	
  7974                           ; 2 bytes @ 0x44
  7975                           
  7976                           
  7977                           ; 2 bytes @ 0x44
  7978  0064                     	ds	2
  7979  0066                     vfprintf@ap:
  7980                           
  7981                           ; 1 bytes @ 0x46
  7982  0066                     	ds	1
  7983  0067                     ??_vfprintf:
  7984                           
  7985                           ; 1 bytes @ 0x47
  7986  0067                     	ds	2
  7987  0069                     vfprintf@fp:
  7988                           
  7989                           ; 1 bytes @ 0x49
  7990  0069                     	ds	1
  7991  006A                     vfprintf@cfmt:
  7992                           
  7993                           ; 2 bytes @ 0x4A
  7994  006A                     	ds	2
  7995  006C                     ?_printf:
  7996  006C                     printf@fmt:	
  7997                           ; 2 bytes @ 0x4C
  7998                           
  7999                           
  8000                           ; 2 bytes @ 0x4C
  8001  006C                     	ds	4
  8002                           
  8003                           	psect	maintext
  8004  00B2                     __pmaintext:	
  8005 ;;
  8006 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  8007 ;;
  8008 ;; *************** function _main *****************
  8009 ;; Defined at:
  8010 ;;		line 140 in file "JSN_Sensor.c"
  8011 ;; Parameters:    Size  Location     Type
  8012 ;;		None
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;  currMilli       4   16[BANK1 ] unsigned long 
  8015 ;;  prevMilli       4   11[BANK1 ] unsigned long 
  8016 ;;  i               1   15[BANK1 ] unsigned char 
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  2   64[None  ] int 
  8019 ;; Registers used:
  8020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8021 ;; Tracked objects:
  8022 ;;		On entry : B1F/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8027 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8028 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8029 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;Total ram usage:       13 bytes
  8031 ;; Hardware stack levels required when called: 14
  8032 ;; This function calls:
  8033 ;;		_FRT_GetMillis
  8034 ;;		_JSN_Sensor_GetDistance
  8035 ;;		_JSN_Sensor_Init
  8036 ;;		_JSN_Sensor_Trig
  8037 ;;		_PIC16_Init
  8038 ;;		_SetPin
  8039 ;;		_WritePin
  8040 ;;		_printf
  8041 ;; This function is called by:
  8042 ;;		Startup code after reset
  8043 ;; This function uses a non-reentrant model
  8044 ;;
  8045                           
  8046  00B2                     _main:	
  8047                           ;psect for function _main
  8048                           
  8049  00B2                     l4165:	
  8050                           ;incstack = 0
  8051                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8052                           
  8053                           
  8054                           ;JSN_Sensor.c: 142:     PIC16_Init();
  8055  00B2  318D  25ED  3180   	fcall	_PIC16_Init
  8056  00B5                     l4167:
  8057                           
  8058                           ;JSN_Sensor.c: 148:     if(JSN_Sensor_Init(&Sens1, C6, C5) == 0xFF)
  8059  00B5  3006               	movlw	6
  8060  00B6  0021               	movlb	1	; select bank1
  8061  00B7  00E1               	movwf	??_main^(0+128)
  8062  00B8  0861               	movf	??_main^(0+128),w
  8063  00B9  00DC               	movwf	JSN_Sensor_Init@trigPin^(0+128)
  8064  00BA  3003               	movlw	3
  8065  00BB  00E2               	movwf	(??_main+1)^(0+128)
  8066  00BC  0862               	movf	(??_main+1)^(0+128),w
  8067  00BD  00DD               	movwf	JSN_Sensor_Init@echoPin^(0+128)
  8068  00BE  3050               	movlw	(low (_Sens1| (0+256)))& (0+255)
  8069  00BF  3184  24D1  3180   	fcall	_JSN_Sensor_Init
  8070  00C2  3AFF               	xorlw	255
  8071  00C3  1D03               	skipz
  8072  00C4  28C6               	goto	u1441
  8073  00C5  28C7               	goto	u1440
  8074  00C6                     u1441:
  8075  00C6  28C8               	goto	l4169
  8076  00C7                     u1440:
  8077  00C7                     l66:	
  8078                           ;JSN_Sensor.c: 149:         while(1);
  8079                           
  8080  00C7                     l67:
  8081  00C7  28C7               	goto	l66
  8082  00C8                     l4169:
  8083                           
  8084                           ;JSN_Sensor.c: 150:     if(JSN_Sensor_Init(&Sens2, A1, C3) == 0xFF)
  8085  00C8  300A               	movlw	10
  8086  00C9  0021               	movlb	1	; select bank1
  8087  00CA  00E1               	movwf	??_main^(0+128)
  8088  00CB  0861               	movf	??_main^(0+128),w
  8089  00CC  00DC               	movwf	JSN_Sensor_Init@trigPin^(0+128)
  8090  00CD  3005               	movlw	5
  8091  00CE  00E2               	movwf	(??_main+1)^(0+128)
  8092  00CF  0862               	movf	(??_main+1)^(0+128),w
  8093  00D0  00DD               	movwf	JSN_Sensor_Init@echoPin^(0+128)
  8094  00D1  304A               	movlw	(low (_Sens2| (0+256)))& (0+255)
  8095  00D2  3184  24D1  3180   	fcall	_JSN_Sensor_Init
  8096  00D5  3AFF               	xorlw	255
  8097  00D6  1D03               	skipz
  8098  00D7  28D9               	goto	u1451
  8099  00D8  28DA               	goto	u1450
  8100  00D9                     u1451:
  8101  00D9  28DB               	goto	l4171
  8102  00DA                     u1450:
  8103  00DA                     l70:	
  8104                           ;JSN_Sensor.c: 151:         while(1);
  8105                           
  8106  00DA                     l71:
  8107  00DA  28DA               	goto	l70
  8108  00DB                     l4171:
  8109                           
  8110                           ;JSN_Sensor.c: 154:     unsigned long currMilli = FRT_GetMillis();
  8111  00DB  318B  2324  3180   	fcall	_FRT_GetMillis
  8112  00DE  0020               	movlb	0	; select bank0
  8113  00DF  0823               	movf	?_FRT_GetMillis+3,w
  8114  00E0  0021               	movlb	1	; select bank1
  8115  00E1  00ED               	movwf	(main@currMilli+3)^(0+128)
  8116  00E2  0020               	movlb	0	; select bank0
  8117  00E3  0822               	movf	?_FRT_GetMillis+2,w
  8118  00E4  0021               	movlb	1	; select bank1
  8119  00E5  00EC               	movwf	(main@currMilli+2)^(0+128)
  8120  00E6  0020               	movlb	0	; select bank0
  8121  00E7  0821               	movf	?_FRT_GetMillis+1,w
  8122  00E8  0021               	movlb	1	; select bank1
  8123  00E9  00EB               	movwf	(main@currMilli+1)^(0+128)
  8124  00EA  0020               	movlb	0	; select bank0
  8125  00EB  0820               	movf	?_FRT_GetMillis,w
  8126  00EC  0021               	movlb	1	; select bank1
  8127  00ED  00EA               	movwf	main@currMilli^(0+128)
  8128  00EE                     l4173:
  8129                           
  8130                           ;JSN_Sensor.c: 155:     unsigned long prevMilli = currMilli;
  8131  00EE  086D               	movf	(main@currMilli+3)^(0+128),w
  8132  00EF  00E8               	movwf	(main@prevMilli+3)^(0+128)
  8133  00F0  086C               	movf	(main@currMilli+2)^(0+128),w
  8134  00F1  00E7               	movwf	(main@prevMilli+2)^(0+128)
  8135  00F2  086B               	movf	(main@currMilli+1)^(0+128),w
  8136  00F3  00E6               	movwf	(main@prevMilli+1)^(0+128)
  8137  00F4  086A               	movf	main@currMilli^(0+128),w
  8138  00F5  00E5               	movwf	main@prevMilli^(0+128)
  8139  00F6                     l4175:
  8140                           
  8141                           ;JSN_Sensor.c: 156:     uint8_t i = 1;
  8142  00F6  01E9               	clrf	main@i^(0+128)
  8143  00F7  0AE9               	incf	main@i^(0+128),f
  8144  00F8                     l4177:
  8145                           
  8146                           ;JSN_Sensor.c: 159:     SetPin(C0, 0);
  8147  00F8  0020               	movlb	0	; select bank0
  8148  00F9  01A0               	clrf	SetPin@io
  8149  00FA  300C               	movlw	12
  8150  00FB  3184  2416  3180   	fcall	_SetPin
  8151  00FE                     l4179:
  8152                           
  8153                           ;JSN_Sensor.c: 160:     WritePin(C0, 0);
  8154  00FE  0020               	movlb	0	; select bank0
  8155  00FF  01A0               	clrf	WritePin@val
  8156  0100  300C               	movlw	12
  8157  0101  3183  235B  3180   	fcall	_WritePin
  8158  0104                     l4181:
  8159                           
  8160                           ;JSN_Sensor.c: 166:     JSN_Sensor_Trig(&Sens2);
  8161  0104  304A               	movlw	(low (_Sens2| (0+256)))& (0+255)
  8162  0105  3187  2756  3180   	fcall	_JSN_Sensor_Trig
  8163  0108                     l4183:
  8164                           
  8165                           ;JSN_Sensor.c: 170:         currMilli = FRT_GetMillis();
  8166  0108  318B  2324  3180   	fcall	_FRT_GetMillis
  8167  010B  0020               	movlb	0	; select bank0
  8168  010C  0823               	movf	?_FRT_GetMillis+3,w
  8169  010D  0021               	movlb	1	; select bank1
  8170  010E  00ED               	movwf	(main@currMilli+3)^(0+128)
  8171  010F  0020               	movlb	0	; select bank0
  8172  0110  0822               	movf	?_FRT_GetMillis+2,w
  8173  0111  0021               	movlb	1	; select bank1
  8174  0112  00EC               	movwf	(main@currMilli+2)^(0+128)
  8175  0113  0020               	movlb	0	; select bank0
  8176  0114  0821               	movf	?_FRT_GetMillis+1,w
  8177  0115  0021               	movlb	1	; select bank1
  8178  0116  00EB               	movwf	(main@currMilli+1)^(0+128)
  8179  0117  0020               	movlb	0	; select bank0
  8180  0118  0820               	movf	?_FRT_GetMillis,w
  8181  0119  0021               	movlb	1	; select bank1
  8182  011A  00EA               	movwf	main@currMilli^(0+128)
  8183  011B                     l4185:
  8184                           
  8185                           ;JSN_Sensor.c: 173:         if ((currMilli - prevMilli) >= 50) {
  8186  011B  0865               	movf	main@prevMilli^(0+128),w
  8187  011C  026A               	subwf	main@currMilli^(0+128),w
  8188  011D  00E1               	movwf	??_main^(0+128)
  8189  011E  0866               	movf	(main@prevMilli+1)^(0+128),w
  8190  011F  3B6B               	subwfb	(main@currMilli+1)^(0+128),w
  8191  0120  00E2               	movwf	(??_main^(0+128)+1)
  8192  0121  0867               	movf	(main@prevMilli+2)^(0+128),w
  8193  0122  3B6C               	subwfb	(main@currMilli+2)^(0+128),w
  8194  0123  00E3               	movwf	(??_main^(0+128)+2)
  8195  0124  0868               	movf	(main@prevMilli+3)^(0+128),w
  8196  0125  3B6D               	subwfb	(main@currMilli+3)^(0+128),w
  8197  0126  00E4               	movwf	(??_main^(0+128)+3)
  8198  0127  0864               	movf	(??_main^(0+128)+3),w
  8199  0128  1D03               	btfss	3,2
  8200  0129  2936               	goto	u1460
  8201  012A  0863               	movf	(??_main^(0+128)+2),w
  8202  012B  1D03               	btfss	3,2
  8203  012C  2936               	goto	u1460
  8204  012D  0862               	movf	(??_main^(0+128)+1),w
  8205  012E  1D03               	btfss	3,2
  8206  012F  2936               	goto	u1460
  8207  0130  3032               	movlw	50
  8208  0131  0261               	subwf	??_main^(0+128),w
  8209  0132  1C03               	btfss	3,0
  8210  0133  2935               	goto	u1461
  8211  0134  2936               	goto	u1460
  8212  0135                     u1461:
  8213  0135  2908               	goto	l4183
  8214  0136                     u1460:
  8215  0136  2949               	goto	l4199
  8216  0137                     l4189:
  8217                           
  8218                           ;JSN_Sensor.c: 181:                     JSN_Sensor_Trig(&Sens1);
  8219  0137  3050               	movlw	(low (_Sens1| (0+256)))& (0+255)
  8220  0138  3187  2756  3180   	fcall	_JSN_Sensor_Trig
  8221  013B                     l4191:
  8222                           
  8223                           ;JSN_Sensor.c: 182:                     i = 2;
  8224  013B  3002               	movlw	2
  8225  013C  0021               	movlb	1	; select bank1
  8226  013D  00E1               	movwf	??_main^(0+128)
  8227  013E  0861               	movf	??_main^(0+128),w
  8228  013F  00E9               	movwf	main@i^(0+128)
  8229                           
  8230                           ;JSN_Sensor.c: 183:                     break;
  8231  0140  295A               	goto	l4201
  8232  0141                     l4193:
  8233                           
  8234                           ;JSN_Sensor.c: 186:                     JSN_Sensor_Trig(&Sens2);
  8235  0141  304A               	movlw	(low (_Sens2| (0+256)))& (0+255)
  8236  0142  3187  2756  3180   	fcall	_JSN_Sensor_Trig
  8237  0145                     l4195:
  8238                           
  8239                           ;JSN_Sensor.c: 187:                     i = 1;
  8240  0145  0021               	movlb	1	; select bank1
  8241  0146  01E9               	clrf	main@i^(0+128)
  8242  0147  0AE9               	incf	main@i^(0+128),f
  8243                           
  8244                           ;JSN_Sensor.c: 188:                     break;
  8245  0148  295A               	goto	l4201
  8246  0149                     l4199:
  8247  0149  0021               	movlb	1	; select bank1
  8248  014A  0869               	movf	main@i^(0+128),w
  8249  014B  00E1               	movwf	??_main^(0+128)
  8250  014C  01E2               	clrf	(??_main^(0+128)+1)
  8251                           
  8252                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8253                           ; Switch size 1, requested type "simple"
  8254                           ; Number of cases is 1, Range of values is 0 to 0
  8255                           ; switch strategies available:
  8256                           ; Name         Instructions Cycles
  8257                           ; simple_byte            4     3 (average)
  8258                           ; direct_byte            8     6 (fixed)
  8259                           ; jumptable            260     6 (fixed)
  8260                           ;	Chosen strategy is simple_byte
  8261  014D  0862               	movf	(??_main+1)^(0+128),w
  8262  014E  3A00               	xorlw	0	; case 0
  8263  014F  1903               	skipnz
  8264  0150  2952               	goto	l4503
  8265  0151  295A               	goto	l4201
  8266  0152                     l4503:
  8267                           
  8268                           ; Switch size 1, requested type "simple"
  8269                           ; Number of cases is 2, Range of values is 1 to 2
  8270                           ; switch strategies available:
  8271                           ; Name         Instructions Cycles
  8272                           ; simple_byte            7     4 (average)
  8273                           ; direct_byte           13     9 (fixed)
  8274                           ; jumptable            263     9 (fixed)
  8275                           ;	Chosen strategy is simple_byte
  8276  0152  0861               	movf	??_main^(0+128),w
  8277  0153  3A01               	xorlw	1	; case 1
  8278  0154  1903               	skipnz
  8279  0155  2937               	goto	l4189
  8280  0156  3A03               	xorlw	3	; case 2
  8281  0157  1903               	skipnz
  8282  0158  2941               	goto	l4193
  8283  0159  295A               	goto	l4201
  8284  015A                     l4201:
  8285                           
  8286                           ;JSN_Sensor.c: 192:             if ((Sens1.distance < 500)||(Sens2.distance < 500)) {
  8287  015A  3001               	movlw	1
  8288  015B  0022               	movlb	2	; select bank2
  8289  015C  0253               	subwf	((_Sens1+1)^(0+256)+2),w
  8290  015D  30F4               	movlw	244
  8291  015E  1903               	skipnz
  8292  015F  0252               	subwf	(_Sens1^(0+256)+2),w
  8293  0160  1C03               	skipc
  8294  0161  2963               	goto	u1471
  8295  0162  2964               	goto	u1470
  8296  0163                     u1471:
  8297  0163  296D               	goto	l4205
  8298  0164                     u1470:
  8299  0164                     l4203:
  8300  0164  3001               	movlw	1
  8301  0165  024D               	subwf	((_Sens2+1)^(0+256)+2),w
  8302  0166  30F4               	movlw	244
  8303  0167  1903               	skipnz
  8304  0168  024C               	subwf	(_Sens2^(0+256)+2),w
  8305  0169  1803               	skipnc
  8306  016A  296C               	goto	u1481
  8307  016B  296D               	goto	u1480
  8308  016C                     u1481:
  8309  016C  2975               	goto	l4207
  8310  016D                     u1480:
  8311  016D                     l4205:
  8312                           
  8313                           ;JSN_Sensor.c: 193:                 WritePin(C0, 1);
  8314  016D  0020               	movlb	0	; select bank0
  8315  016E  01A0               	clrf	WritePin@val
  8316  016F  0AA0               	incf	WritePin@val,f
  8317  0170  300C               	movlw	12
  8318  0171  3183  235B  3180   	fcall	_WritePin
  8319                           
  8320                           ;JSN_Sensor.c: 194:             } else {
  8321  0174  297B               	goto	l4209
  8322  0175                     l4207:
  8323                           
  8324                           ;JSN_Sensor.c: 195:                 WritePin(C0, 0);
  8325  0175  0020               	movlb	0	; select bank0
  8326  0176  01A0               	clrf	WritePin@val
  8327  0177  300C               	movlw	12
  8328  0178  3183  235B  3180   	fcall	_WritePin
  8329  017B                     l4209:
  8330                           
  8331                           ;JSN_Sensor.c: 199:             printf("%u", JSN_Sensor_GetDistance(&Sens1));
  8332  017B  306C               	movlw	low (STR_3| (0+32768))
  8333  017C  0020               	movlb	0	; select bank0
  8334  017D  00EC               	movwf	printf@fmt
  8335  017E  3090               	movlw	high (STR_3| (0+32768))
  8336  017F  00ED               	movwf	printf@fmt+1
  8337  0180  3050               	movlw	(low (_Sens1| (0+256)))& (0+255)
  8338  0181  318F  2721  3180   	fcall	_JSN_Sensor_GetDistance
  8339  0184  0020               	movlb	0	; select bank0
  8340  0185  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  8341  0186  00EF               	movwf	?_printf+3
  8342  0187  083A               	movf	?_JSN_Sensor_GetDistance,w
  8343  0188  00EE               	movwf	?_printf+2
  8344  0189  318B  2346  3180   	fcall	_printf
  8345  018C                     l4211:
  8346                           
  8347                           ;JSN_Sensor.c: 200:             printf("%u", JSN_Sensor_GetDistance(&Sens2));
  8348  018C  306C               	movlw	low (STR_3| (0+32768))
  8349  018D  0020               	movlb	0	; select bank0
  8350  018E  00EC               	movwf	printf@fmt
  8351  018F  3090               	movlw	high (STR_3| (0+32768))
  8352  0190  00ED               	movwf	printf@fmt+1
  8353  0191  304A               	movlw	(low (_Sens2| (0+256)))& (0+255)
  8354  0192  318F  2721  3180   	fcall	_JSN_Sensor_GetDistance
  8355  0195  0020               	movlb	0	; select bank0
  8356  0196  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  8357  0197  00EF               	movwf	?_printf+3
  8358  0198  083A               	movf	?_JSN_Sensor_GetDistance,w
  8359  0199  00EE               	movwf	?_printf+2
  8360  019A  318B  2346  3180   	fcall	_printf
  8361  019D                     l4213:
  8362                           
  8363                           ;JSN_Sensor.c: 203:             prevMilli = currMilli;
  8364  019D  0021               	movlb	1	; select bank1
  8365  019E  086D               	movf	(main@currMilli+3)^(0+128),w
  8366  019F  00E8               	movwf	(main@prevMilli+3)^(0+128)
  8367  01A0  086C               	movf	(main@currMilli+2)^(0+128),w
  8368  01A1  00E7               	movwf	(main@prevMilli+2)^(0+128)
  8369  01A2  086B               	movf	(main@currMilli+1)^(0+128),w
  8370  01A3  00E6               	movwf	(main@prevMilli+1)^(0+128)
  8371  01A4  086A               	movf	main@currMilli^(0+128),w
  8372  01A5  00E5               	movwf	main@prevMilli^(0+128)
  8373  01A6  2908               	goto	l4183
  8374  01A7  3180  2890         	ljmp	start
  8375  01A9                     __end_of_main:
  8376                           
  8377                           	psect	text1
  8378  0DED                     __ptext1:	
  8379 ;; *************** function _PIC16_Init *****************
  8380 ;; Defined at:
  8381 ;;		line 16 in file "PIC16Xpress_DevBoard.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;		None
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;		None
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  1    wreg      void 
  8388 ;; Registers used:
  8389 ;;		wreg, status,2, status,0, pclath, cstack
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;Total ram usage:        0 bytes
  8400 ;; Hardware stack levels used: 1
  8401 ;; Hardware stack levels required when called: 7
  8402 ;; This function calls:
  8403 ;;		_SYSTEM_Initialize
  8404 ;; This function is called by:
  8405 ;;		_main
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409  0DED                     _PIC16_Init:	
  8410                           ;psect for function _PIC16_Init
  8411                           
  8412  0DED                     l4035:	
  8413                           ;incstack = 0
  8414                           ; Regs used in _PIC16_Init: [wreg+status,2+status,0+pclath+cstack]
  8415                           
  8416                           
  8417                           ;PIC16Xpress_DevBoard.c: 18:     PIE0 = 0x00;
  8418  0DED  0021               	movlb	1	; select bank1
  8419  0DEE  0190               	clrf	16	;volatile
  8420                           
  8421                           ;PIC16Xpress_DevBoard.c: 19:     PIE1 = 0x00;
  8422  0DEF  0191               	clrf	17	;volatile
  8423                           
  8424                           ;PIC16Xpress_DevBoard.c: 20:     PIE2 = 0x00;
  8425  0DF0  0192               	clrf	18	;volatile
  8426                           
  8427                           ;PIC16Xpress_DevBoard.c: 21:     PIE3 = 0x00;
  8428  0DF1  0193               	clrf	19	;volatile
  8429                           
  8430                           ;PIC16Xpress_DevBoard.c: 22:     PIE4 = 0x00;
  8431  0DF2  0194               	clrf	20	;volatile
  8432                           
  8433                           ;PIC16Xpress_DevBoard.c: 25:     LATA = 0x00;
  8434  0DF3  0022               	movlb	2	; select bank2
  8435  0DF4  018C               	clrf	12	;volatile
  8436                           
  8437                           ;PIC16Xpress_DevBoard.c: 26:     LATB = 0x00;
  8438  0DF5  018D               	clrf	13	;volatile
  8439                           
  8440                           ;PIC16Xpress_DevBoard.c: 27:     LATC = 0x00;
  8441  0DF6  018E               	clrf	14	;volatile
  8442  0DF7                     l4037:
  8443                           
  8444                           ;PIC16Xpress_DevBoard.c: 29:     TRISA = 0x37;
  8445  0DF7  3037               	movlw	55
  8446  0DF8  0021               	movlb	1	; select bank1
  8447  0DF9  008C               	movwf	12	;volatile
  8448  0DFA                     l4039:
  8449                           
  8450                           ;PIC16Xpress_DevBoard.c: 30:     TRISB = 0xF0;
  8451  0DFA  30F0               	movlw	240
  8452  0DFB  008D               	movwf	13	;volatile
  8453  0DFC                     l4041:
  8454                           
  8455                           ;PIC16Xpress_DevBoard.c: 31:     TRISC = 0xFF;
  8456  0DFC  30FF               	movlw	255
  8457  0DFD  008E               	movwf	14	;volatile
  8458  0DFE                     l4043:
  8459                           
  8460                           ;PIC16Xpress_DevBoard.c: 33:     ANSELC = 0xFF;
  8461  0DFE  30FF               	movlw	255
  8462  0DFF  0023               	movlb	3	; select bank3
  8463  0E00  008E               	movwf	14	;volatile
  8464  0E01                     l4045:
  8465                           
  8466                           ;PIC16Xpress_DevBoard.c: 34:     ANSELB = 0xF0;
  8467  0E01  30F0               	movlw	240
  8468  0E02  008D               	movwf	13	;volatile
  8469  0E03                     l4047:
  8470                           
  8471                           ;PIC16Xpress_DevBoard.c: 35:     ANSELA = 0x37;
  8472  0E03  3037               	movlw	55
  8473  0E04  008C               	movwf	12	;volatile
  8474                           
  8475                           ;PIC16Xpress_DevBoard.c: 37:     WPUB = 0x00;
  8476  0E05  0024               	movlb	4	; select bank4
  8477  0E06  018D               	clrf	13	;volatile
  8478                           
  8479                           ;PIC16Xpress_DevBoard.c: 38:     WPUA = 0x00;
  8480  0E07  018C               	clrf	12	;volatile
  8481                           
  8482                           ;PIC16Xpress_DevBoard.c: 39:     WPUC = 0x00;
  8483  0E08  018E               	clrf	14	;volatile
  8484                           
  8485                           ;PIC16Xpress_DevBoard.c: 41:     ODCONA = 0x00;
  8486  0E09  0025               	movlb	5	; select bank5
  8487  0E0A  018C               	clrf	12	;volatile
  8488                           
  8489                           ;PIC16Xpress_DevBoard.c: 42:     ODCONB = 0x00;
  8490  0E0B  018D               	clrf	13	;volatile
  8491                           
  8492                           ;PIC16Xpress_DevBoard.c: 43:     ODCONC = 0x00;
  8493  0E0C  018E               	clrf	14	;volatile
  8494  0E0D                     l4049:
  8495                           
  8496                           ;PIC16Xpress_DevBoard.c: 45:     SLRCONA = 0x37;
  8497  0E0D  3037               	movlw	55
  8498  0E0E  0026               	movlb	6	; select bank6
  8499  0E0F  008C               	movwf	12	;volatile
  8500  0E10                     l4051:
  8501                           
  8502                           ;PIC16Xpress_DevBoard.c: 46:     SLRCONB = 0xF0;
  8503  0E10  30F0               	movlw	240
  8504  0E11  008D               	movwf	13	;volatile
  8505  0E12                     l4053:
  8506                           
  8507                           ;PIC16Xpress_DevBoard.c: 47:     SLRCONC = 0xFF;
  8508  0E12  30FF               	movlw	255
  8509  0E13  008E               	movwf	14	;volatile
  8510  0E14                     l4055:
  8511                           
  8512                           ;PIC16Xpress_DevBoard.c: 49:     INLVLA = 0x3F;
  8513  0E14  303F               	movlw	63
  8514  0E15  0027               	movlb	7	; select bank7
  8515  0E16  008C               	movwf	12	;volatile
  8516  0E17                     l4057:
  8517                           
  8518                           ;PIC16Xpress_DevBoard.c: 50:     INLVLB = 0xF0;
  8519  0E17  30F0               	movlw	240
  8520  0E18  008D               	movwf	13	;volatile
  8521  0E19                     l4059:
  8522                           
  8523                           ;PIC16Xpress_DevBoard.c: 51:     INLVLC = 0xFF;
  8524  0E19  30FF               	movlw	255
  8525  0E1A  008E               	movwf	14	;volatile
  8526                           
  8527                           ;PIC16Xpress_DevBoard.c: 54:     PIR0 = 0x00;
  8528  0E1B  0020               	movlb	0	; select bank0
  8529  0E1C  0190               	clrf	16	;volatile
  8530                           
  8531                           ;PIC16Xpress_DevBoard.c: 55:     PIR1 = 0x00;
  8532  0E1D  0191               	clrf	17	;volatile
  8533                           
  8534                           ;PIC16Xpress_DevBoard.c: 56:     PIR2 = 0x00;
  8535  0E1E  0192               	clrf	18	;volatile
  8536                           
  8537                           ;PIC16Xpress_DevBoard.c: 57:     PIR3 = 0x00;
  8538  0E1F  0193               	clrf	19	;volatile
  8539                           
  8540                           ;PIC16Xpress_DevBoard.c: 58:     PIR4 = 0x00;
  8541  0E20  0194               	clrf	20	;volatile
  8542  0E21                     l4061:
  8543                           
  8544                           ;PIC16Xpress_DevBoard.c: 61:     SYSTEM_Initialize();
  8545  0E21  318C  24FA  318D   	fcall	_SYSTEM_Initialize
  8546  0E24                     l4063:
  8547                           
  8548                           ;PIC16Xpress_DevBoard.c: 64:     (INTCONbits.PEIE = 1);
  8549  0E24  170B               	bsf	11,6	;volatile
  8550  0E25                     l4065:
  8551                           
  8552                           ;PIC16Xpress_DevBoard.c: 65:     (INTCONbits.GIE = 1);
  8553  0E25  178B               	bsf	11,7	;volatile
  8554  0E26                     l172:
  8555  0E26  0008               	return
  8556  0E27                     __end_of_PIC16_Init:
  8557                           
  8558                           	psect	text2
  8559  0CFA                     __ptext2:	
  8560 ;; *************** function _SYSTEM_Initialize *****************
  8561 ;; Defined at:
  8562 ;;		line 15 in file "mcc.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;		None
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;		None
  8567 ;; Return value:  Size  Location     Type
  8568 ;;                  1    wreg      void 
  8569 ;; Registers used:
  8570 ;;		wreg, status,2, status,0, pclath, cstack
  8571 ;; Tracked objects:
  8572 ;;		On entry : 0/0
  8573 ;;		On exit  : 0/0
  8574 ;;		Unchanged: 0/0
  8575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8580 ;;Total ram usage:        0 bytes
  8581 ;; Hardware stack levels used: 1
  8582 ;; Hardware stack levels required when called: 6
  8583 ;; This function calls:
  8584 ;;		_CCP1_Initialize
  8585 ;;		_CCP2_Initialize
  8586 ;;		_CCP3_Initialize
  8587 ;;		_CCP4_Initialize
  8588 ;;		_EUSART_Initialize
  8589 ;;		_OSCILLATOR_Initialize
  8590 ;;		_PIN_MANAGER_Initialize
  8591 ;;		_PMD_Initialize
  8592 ;;		_PWM5_Initialize
  8593 ;;		_TMR0_Initialize
  8594 ;;		_TMR1_Initialize
  8595 ;;		_TMR2_Initialize
  8596 ;;		_TMR3_Initialize
  8597 ;;		_WDT_Initialize
  8598 ;; This function is called by:
  8599 ;;		_PIC16_Init
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603  0CFA                     _SYSTEM_Initialize:	
  8604                           ;psect for function _SYSTEM_Initialize
  8605                           
  8606  0CFA                     l3843:	
  8607                           ;incstack = 0
  8608                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8609                           
  8610                           
  8611                           ;mcc.c: 17:     PMD_Initialize();
  8612  0CFA  318A  22F6  318C   	fcall	_PMD_Initialize
  8613                           
  8614                           ;mcc.c: 18:     PIN_MANAGER_Initialize();
  8615  0CFD  318D  25B7  318C   	fcall	_PIN_MANAGER_Initialize
  8616                           
  8617                           ;mcc.c: 19:     OSCILLATOR_Initialize();
  8618  0D00  318A  22EA  318C   	fcall	_OSCILLATOR_Initialize
  8619                           
  8620                           ;mcc.c: 20:     WDT_Initialize();
  8621  0D03  318A  2242  318C   	fcall	_WDT_Initialize
  8622                           
  8623                           ;mcc.c: 21:     CCP3_Initialize();
  8624  0D06  318C  2410  318C   	fcall	_CCP3_Initialize
  8625                           
  8626                           ;mcc.c: 22:     CCP1_Initialize();
  8627  0D09  318B  23E0  318C   	fcall	_CCP1_Initialize
  8628                           
  8629                           ;mcc.c: 23:     TMR2_Initialize();
  8630  0D0C  318A  2261  318C   	fcall	_TMR2_Initialize
  8631                           
  8632                           ;mcc.c: 24:     TMR0_Initialize();
  8633  0D0F  318B  235B  318C   	fcall	_TMR0_Initialize
  8634                           
  8635                           ;mcc.c: 25:     CCP2_Initialize();
  8636  0D12  318B  23F8  318C   	fcall	_CCP2_Initialize
  8637                           
  8638                           ;mcc.c: 26:     CCP4_Initialize();
  8639  0D15  318B  2335  318C   	fcall	_CCP4_Initialize
  8640                           
  8641                           ;mcc.c: 27:     TMR3_Initialize();
  8642  0D18  318C  2493  318C   	fcall	_TMR3_Initialize
  8643                           
  8644                           ;mcc.c: 28:     PWM5_Initialize();
  8645  0D1B  318A  22E0  318C   	fcall	_PWM5_Initialize
  8646                           
  8647                           ;mcc.c: 29:     TMR1_Initialize();
  8648  0D1E  318C  2428  318C   	fcall	_TMR1_Initialize
  8649                           
  8650                           ;mcc.c: 30:     EUSART_Initialize();
  8651  0D21  3187  27AF  318C   	fcall	_EUSART_Initialize
  8652  0D24                     l301:
  8653  0D24  0008               	return
  8654  0D25                     __end_of_SYSTEM_Initialize:
  8655                           
  8656                           	psect	text3
  8657  0A42                     __ptext3:	
  8658 ;; *************** function _WDT_Initialize *****************
  8659 ;; Defined at:
  8660 ;;		line 55 in file "mcc.c"
  8661 ;; Parameters:    Size  Location     Type
  8662 ;;		None
  8663 ;; Auto vars:     Size  Location     Type
  8664 ;;		None
  8665 ;; Return value:  Size  Location     Type
  8666 ;;                  1    wreg      void 
  8667 ;; Registers used:
  8668 ;;		wreg
  8669 ;; Tracked objects:
  8670 ;;		On entry : 0/0
  8671 ;;		On exit  : 0/0
  8672 ;;		Unchanged: 0/0
  8673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8678 ;;Total ram usage:        0 bytes
  8679 ;; Hardware stack levels used: 1
  8680 ;; Hardware stack levels required when called: 4
  8681 ;; This function calls:
  8682 ;;		Nothing
  8683 ;; This function is called by:
  8684 ;;		_SYSTEM_Initialize
  8685 ;; This function uses a non-reentrant model
  8686 ;;
  8687                           
  8688  0A42                     _WDT_Initialize:	
  8689                           ;psect for function _WDT_Initialize
  8690                           
  8691  0A42                     l3495:	
  8692                           ;incstack = 0
  8693                           ; Regs used in _WDT_Initialize: [wreg]
  8694                           
  8695                           
  8696                           ;mcc.c: 58:     WDTCON = 0x16;
  8697  0A42  3016               	movlw	22
  8698  0A43  0021               	movlb	1	; select bank1
  8699  0A44  0097               	movwf	23	;volatile
  8700  0A45                     l310:
  8701  0A45  0008               	return
  8702  0A46                     __end_of_WDT_Initialize:
  8703                           
  8704                           	psect	text4
  8705  0C93                     __ptext4:	
  8706 ;; *************** function _TMR3_Initialize *****************
  8707 ;; Defined at:
  8708 ;;		line 20 in file "tmr3.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;		None
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;		None
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  1    wreg      void 
  8715 ;; Registers used:
  8716 ;;		wreg, status,2, status,0, pclath, cstack
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8726 ;;Total ram usage:        0 bytes
  8727 ;; Hardware stack levels used: 1
  8728 ;; Hardware stack levels required when called: 5
  8729 ;; This function calls:
  8730 ;;		_TMR3_SetInterruptHandler
  8731 ;; This function is called by:
  8732 ;;		_SYSTEM_Initialize
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           
  8736  0C93                     _TMR3_Initialize:	
  8737                           ;psect for function _TMR3_Initialize
  8738                           
  8739  0C93                     l3573:	
  8740                           ;incstack = 0
  8741                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8742                           
  8743                           
  8744                           ;tmr3.c: 25:     T3GCON = 0x00;
  8745  0C93  0028               	movlb	8	; select bank8
  8746  0C94  0194               	clrf	20	;volatile
  8747  0C95                     l3575:
  8748                           
  8749                           ;tmr3.c: 28:     TMR3H = 0x06;
  8750  0C95  3006               	movlw	6
  8751  0C96  0092               	movwf	18	;volatile
  8752  0C97                     l3577:
  8753                           
  8754                           ;tmr3.c: 31:     TMR3L = 0x00;
  8755  0C97  0191               	clrf	17	;volatile
  8756  0C98                     l3579:
  8757                           
  8758                           ;tmr3.c: 34:     PIR3bits.TMR3IF = 0;
  8759  0C98  0020               	movlb	0	; select bank0
  8760  0C99  1213               	bcf	19,4	;volatile
  8761                           
  8762                           ;tmr3.c: 37:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  8763  0C9A  0028               	movlb	8	; select bank8
  8764  0C9B  0812               	movf	18,w	;volatile
  8765  0C9C  0021               	movlb	1	; select bank1
  8766  0C9D  00AB               	movwf	(_timer3ReloadVal+1)^(0+128)	;volatile
  8767  0C9E  0028               	movlb	8	; select bank8
  8768  0C9F  0811               	movf	17,w	;volatile
  8769  0CA0  0021               	movlb	1	; select bank1
  8770  0CA1  00AA               	movwf	_timer3ReloadVal^(0+128)	;volatile
  8771  0CA2                     l3581:
  8772                           
  8773                           ;tmr3.c: 40:     PIE3bits.TMR3IE = 1;
  8774  0CA2  1613               	bsf	19,4	;volatile
  8775  0CA3                     l3583:
  8776                           
  8777                           ;tmr3.c: 43:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  8778  0CA3  3003               	movlw	low _TMR3_DefaultInterruptHandler
  8779  0CA4  0020               	movlb	0	; select bank0
  8780  0CA5  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler
  8781  0CA6  3000               	movlw	high _TMR3_DefaultInterruptHandler
  8782  0CA7  00A1               	movwf	TMR3_SetInterruptHandler@InterruptHandler+1
  8783  0CA8  318A  22C3  318C   	fcall	_TMR3_SetInterruptHandler
  8784  0CAB                     l3585:
  8785                           
  8786                           ;tmr3.c: 46:     T3CON = 0x01;
  8787  0CAB  3001               	movlw	1
  8788  0CAC  0028               	movlb	8	; select bank8
  8789  0CAD  0093               	movwf	19	;volatile
  8790  0CAE                     l984:
  8791  0CAE  0008               	return
  8792  0CAF                     __end_of_TMR3_Initialize:
  8793                           
  8794                           	psect	text5
  8795  0AC3                     __ptext5:	
  8796 ;; *************** function _TMR3_SetInterruptHandler *****************
  8797 ;; Defined at:
  8798 ;;		line 144 in file "tmr3.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8801 ;;		 -> TMR3_DefaultInterruptHandler(1), 
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;		None
  8804 ;; Return value:  Size  Location     Type
  8805 ;;                  1    wreg      void 
  8806 ;; Registers used:
  8807 ;;		wreg
  8808 ;; Tracked objects:
  8809 ;;		On entry : 0/0
  8810 ;;		On exit  : 0/0
  8811 ;;		Unchanged: 0/0
  8812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8813 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8817 ;;Total ram usage:        2 bytes
  8818 ;; Hardware stack levels used: 1
  8819 ;; Hardware stack levels required when called: 4
  8820 ;; This function calls:
  8821 ;;		Nothing
  8822 ;; This function is called by:
  8823 ;;		_TMR3_Initialize
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827  0AC3                     _TMR3_SetInterruptHandler:	
  8828                           ;psect for function _TMR3_SetInterruptHandler
  8829                           
  8830  0AC3                     l3309:	
  8831                           ;incstack = 0
  8832                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
  8833                           
  8834                           
  8835                           ;tmr3.c: 145:     TMR3_InterruptHandler = InterruptHandler;
  8836  0AC3  0020               	movlb	0	; select bank0
  8837  0AC4  0821               	movf	TMR3_SetInterruptHandler@InterruptHandler+1,w
  8838  0AC5  0021               	movlb	1	; select bank1
  8839  0AC6  00A9               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
  8840  0AC7  0020               	movlb	0	; select bank0
  8841  0AC8  0820               	movf	TMR3_SetInterruptHandler@InterruptHandler,w
  8842  0AC9  0021               	movlb	1	; select bank1
  8843  0ACA  00A8               	movwf	_TMR3_InterruptHandler^(0+128)
  8844  0ACB                     l1014:
  8845  0ACB  0008               	return
  8846  0ACC                     __end_of_TMR3_SetInterruptHandler:
  8847                           
  8848                           	psect	text6
  8849  0A61                     __ptext6:	
  8850 ;; *************** function _TMR2_Initialize *****************
  8851 ;; Defined at:
  8852 ;;		line 15 in file "tmr2.c"
  8853 ;; Parameters:    Size  Location     Type
  8854 ;;		None
  8855 ;; Auto vars:     Size  Location     Type
  8856 ;;		None
  8857 ;; Return value:  Size  Location     Type
  8858 ;;                  1    wreg      void 
  8859 ;; Registers used:
  8860 ;;		wreg, status,2
  8861 ;; Tracked objects:
  8862 ;;		On entry : 0/0
  8863 ;;		On exit  : 0/0
  8864 ;;		Unchanged: 0/0
  8865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8870 ;;Total ram usage:        0 bytes
  8871 ;; Hardware stack levels used: 1
  8872 ;; Hardware stack levels required when called: 4
  8873 ;; This function calls:
  8874 ;;		Nothing
  8875 ;; This function is called by:
  8876 ;;		_SYSTEM_Initialize
  8877 ;; This function uses a non-reentrant model
  8878 ;;
  8879                           
  8880  0A61                     _TMR2_Initialize:	
  8881                           ;psect for function _TMR2_Initialize
  8882                           
  8883  0A61                     l3529:	
  8884                           ;incstack = 0
  8885                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8886                           
  8887                           
  8888                           ;tmr2.c: 20:     PR2 = 0xF9;
  8889  0A61  30F9               	movlw	249
  8890  0A62  0020               	movlb	0	; select bank0
  8891  0A63  009E               	movwf	30	;volatile
  8892  0A64                     l3531:
  8893                           
  8894                           ;tmr2.c: 23:     TMR2 = 0x00;
  8895  0A64  019D               	clrf	29	;volatile
  8896  0A65                     l3533:
  8897                           
  8898                           ;tmr2.c: 26:     PIR1bits.TMR2IF = 0;
  8899  0A65  1091               	bcf	17,1	;volatile
  8900  0A66                     l3535:
  8901                           
  8902                           ;tmr2.c: 29:     T2CON = 0x06;
  8903  0A66  3006               	movlw	6
  8904  0A67  009F               	movwf	31	;volatile
  8905  0A68                     l938:
  8906  0A68  0008               	return
  8907  0A69                     __end_of_TMR2_Initialize:
  8908                           
  8909                           	psect	text7
  8910  0C28                     __ptext7:	
  8911 ;; *************** function _TMR1_Initialize *****************
  8912 ;; Defined at:
  8913 ;;		line 20 in file "tmr1.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;		None
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;		None
  8918 ;; Return value:  Size  Location     Type
  8919 ;;                  1    wreg      void 
  8920 ;; Registers used:
  8921 ;;		wreg, status,2, status,0, pclath, cstack
  8922 ;; Tracked objects:
  8923 ;;		On entry : 0/0
  8924 ;;		On exit  : 0/0
  8925 ;;		Unchanged: 0/0
  8926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;Total ram usage:        0 bytes
  8932 ;; Hardware stack levels used: 1
  8933 ;; Hardware stack levels required when called: 5
  8934 ;; This function calls:
  8935 ;;		_TMR1_SetInterruptHandler
  8936 ;; This function is called by:
  8937 ;;		_SYSTEM_Initialize
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941  0C28                     _TMR1_Initialize:	
  8942                           ;psect for function _TMR1_Initialize
  8943                           
  8944  0C28                     l3595:	
  8945                           ;incstack = 0
  8946                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8947                           
  8948                           
  8949                           ;tmr1.c: 25:     T1GCON = 0x00;
  8950  0C28  0020               	movlb	0	; select bank0
  8951  0C29  019C               	clrf	28	;volatile
  8952                           
  8953                           ;tmr1.c: 28:     TMR1H = 0x00;
  8954  0C2A  019A               	clrf	26	;volatile
  8955                           
  8956                           ;tmr1.c: 31:     TMR1L = 0x00;
  8957  0C2B  0199               	clrf	25	;volatile
  8958  0C2C                     l3597:
  8959                           
  8960                           ;tmr1.c: 34:     PIR1bits.TMR1IF = 0;
  8961  0C2C  1011               	bcf	17,0	;volatile
  8962  0C2D                     l3599:
  8963                           
  8964                           ;tmr1.c: 37:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8965  0C2D  081A               	movf	26,w	;volatile
  8966  0C2E  0021               	movlb	1	; select bank1
  8967  0C2F  00B9               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  8968  0C30  0020               	movlb	0	; select bank0
  8969  0C31  0819               	movf	25,w	;volatile
  8970  0C32  0021               	movlb	1	; select bank1
  8971  0C33  00B8               	movwf	_timer1ReloadVal^(0+128)	;volatile
  8972  0C34                     l3601:
  8973                           
  8974                           ;tmr1.c: 40:     PIE1bits.TMR1IE = 1;
  8975  0C34  1411               	bsf	17,0	;volatile
  8976  0C35                     l3603:
  8977                           
  8978                           ;tmr1.c: 43:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  8979  0C35  3000               	movlw	0
  8980  0C36  0020               	movlb	0	; select bank0
  8981  0C37  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  8982  0C38  3000               	movlw	0
  8983  0C39  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  8984  0C3A  318A  22BA  318C   	fcall	_TMR1_SetInterruptHandler
  8985  0C3D                     l3605:
  8986                           
  8987                           ;tmr1.c: 46:     T1CON = 0b00100001;
  8988  0C3D  3021               	movlw	33
  8989  0C3E  0020               	movlb	0	; select bank0
  8990  0C3F  009B               	movwf	27	;volatile
  8991  0C40                     l537:
  8992  0C40  0008               	return
  8993  0C41                     __end_of_TMR1_Initialize:
  8994                           
  8995                           	psect	text8
  8996  0ABA                     __ptext8:	
  8997 ;; *************** function _TMR1_SetInterruptHandler *****************
  8998 ;; Defined at:
  8999 ;;		line 154 in file "tmr1.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9002 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  9003 ;; Auto vars:     Size  Location     Type
  9004 ;;		None
  9005 ;; Return value:  Size  Location     Type
  9006 ;;                  1    wreg      void 
  9007 ;; Registers used:
  9008 ;;		wreg
  9009 ;; Tracked objects:
  9010 ;;		On entry : 0/0
  9011 ;;		On exit  : 0/0
  9012 ;;		Unchanged: 0/0
  9013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9014 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9018 ;;Total ram usage:        2 bytes
  9019 ;; Hardware stack levels used: 1
  9020 ;; Hardware stack levels required when called: 4
  9021 ;; This function calls:
  9022 ;;		Nothing
  9023 ;; This function is called by:
  9024 ;;		_TMR1_Initialize
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028  0ABA                     _TMR1_SetInterruptHandler:	
  9029                           ;psect for function _TMR1_SetInterruptHandler
  9030                           
  9031  0ABA                     l3297:	
  9032                           ;incstack = 0
  9033                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  9034                           
  9035                           
  9036                           ;tmr1.c: 155:     TMR1_InterruptHandler = InterruptHandler;
  9037  0ABA  0020               	movlb	0	; select bank0
  9038  0ABB  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  9039  0ABC  0021               	movlb	1	; select bank1
  9040  0ABD  00B7               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  9041  0ABE  0020               	movlb	0	; select bank0
  9042  0ABF  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  9043  0AC0  0021               	movlb	1	; select bank1
  9044  0AC1  00B6               	movwf	_TMR1_InterruptHandler^(0+128)
  9045  0AC2                     l570:
  9046  0AC2  0008               	return
  9047  0AC3                     __end_of_TMR1_SetInterruptHandler:
  9048                           
  9049                           	psect	text9
  9050  0B5B                     __ptext9:	
  9051 ;; *************** function _TMR0_Initialize *****************
  9052 ;; Defined at:
  9053 ;;		line 18 in file "tmr0.c"
  9054 ;; Parameters:    Size  Location     Type
  9055 ;;		None
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;		None
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  1    wreg      void 
  9060 ;; Registers used:
  9061 ;;		wreg, status,2, status,0, pclath, cstack
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9071 ;;Total ram usage:        0 bytes
  9072 ;; Hardware stack levels used: 1
  9073 ;; Hardware stack levels required when called: 5
  9074 ;; This function calls:
  9075 ;;		_TMR0_SetInterruptHandler
  9076 ;; This function is called by:
  9077 ;;		_SYSTEM_Initialize
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081  0B5B                     _TMR0_Initialize:	
  9082                           ;psect for function _TMR0_Initialize
  9083                           
  9084  0B5B                     l3537:	
  9085                           ;incstack = 0
  9086                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9087                           
  9088                           
  9089                           ;tmr0.c: 23:     T0CON1 = 0x42;
  9090  0B5B  3042               	movlw	66
  9091  0B5C  0020               	movlb	0	; select bank0
  9092  0B5D  0098               	movwf	24	;volatile
  9093                           
  9094                           ;tmr0.c: 26:     TMR0H = 0xF9;
  9095  0B5E  30F9               	movlw	249
  9096  0B5F  0096               	movwf	22	;volatile
  9097  0B60                     l3539:
  9098                           
  9099                           ;tmr0.c: 29:     TMR0L = 0x00;
  9100  0B60  0195               	clrf	21	;volatile
  9101  0B61                     l3541:
  9102                           
  9103                           ;tmr0.c: 32:     PIR0bits.TMR0IF = 0;
  9104  0B61  1290               	bcf	16,5	;volatile
  9105  0B62                     l3543:
  9106                           
  9107                           ;tmr0.c: 35:     PIE0bits.TMR0IE = 1;
  9108  0B62  0021               	movlb	1	; select bank1
  9109  0B63  1690               	bsf	16,5	;volatile
  9110  0B64                     l3545:
  9111                           
  9112                           ;tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  9113  0B64  3000               	movlw	0
  9114  0B65  0020               	movlb	0	; select bank0
  9115  0B66  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  9116  0B67  3000               	movlw	0
  9117  0B68  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9118  0B69  318A  22B1  318B   	fcall	_TMR0_SetInterruptHandler
  9119  0B6C                     l3547:
  9120                           
  9121                           ;tmr0.c: 41:     T0CON0 = 0x80;
  9122  0B6C  3080               	movlw	128
  9123  0B6D  0020               	movlb	0	; select bank0
  9124  0B6E  0097               	movwf	23	;volatile
  9125  0B6F                     l342:
  9126  0B6F  0008               	return
  9127  0B70                     __end_of_TMR0_Initialize:
  9128                           
  9129                           	psect	text10
  9130  0AB1                     __ptext10:	
  9131 ;; *************** function _TMR0_SetInterruptHandler *****************
  9132 ;; Defined at:
  9133 ;;		line 119 in file "tmr0.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9136 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  9137 ;; Auto vars:     Size  Location     Type
  9138 ;;		None
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  1    wreg      void 
  9141 ;; Registers used:
  9142 ;;		wreg
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/0
  9145 ;;		On exit  : 0/0
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9148 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9151 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9152 ;;Total ram usage:        2 bytes
  9153 ;; Hardware stack levels used: 1
  9154 ;; Hardware stack levels required when called: 4
  9155 ;; This function calls:
  9156 ;;		Nothing
  9157 ;; This function is called by:
  9158 ;;		_TMR0_Initialize
  9159 ;; This function uses a non-reentrant model
  9160 ;;
  9161                           
  9162  0AB1                     _TMR0_SetInterruptHandler:	
  9163                           ;psect for function _TMR0_SetInterruptHandler
  9164                           
  9165  0AB1                     l3289:	
  9166                           ;incstack = 0
  9167                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  9168                           
  9169                           
  9170                           ;tmr0.c: 120:     TMR0_InterruptHandler = InterruptHandler;
  9171  0AB1  0020               	movlb	0	; select bank0
  9172  0AB2  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  9173  0AB3  0021               	movlb	1	; select bank1
  9174  0AB4  00CF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  9175  0AB5  0020               	movlb	0	; select bank0
  9176  0AB6  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  9177  0AB7  0021               	movlb	1	; select bank1
  9178  0AB8  00CE               	movwf	_TMR0_InterruptHandler^(0+128)
  9179  0AB9                     l369:
  9180  0AB9  0008               	return
  9181  0ABA                     __end_of_TMR0_SetInterruptHandler:
  9182                           
  9183                           	psect	text11
  9184  0AE0                     __ptext11:	
  9185 ;; *************** function _PWM5_Initialize *****************
  9186 ;; Defined at:
  9187 ;;		line 15 in file "pwm5.c"
  9188 ;; Parameters:    Size  Location     Type
  9189 ;;		None
  9190 ;; Auto vars:     Size  Location     Type
  9191 ;;		None
  9192 ;; Return value:  Size  Location     Type
  9193 ;;                  1    wreg      void 
  9194 ;; Registers used:
  9195 ;;		wreg, status,2, status,0
  9196 ;; Tracked objects:
  9197 ;;		On entry : 0/0
  9198 ;;		On exit  : 0/0
  9199 ;;		Unchanged: 0/0
  9200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9205 ;;Total ram usage:        0 bytes
  9206 ;; Hardware stack levels used: 1
  9207 ;; Hardware stack levels required when called: 4
  9208 ;; This function calls:
  9209 ;;		Nothing
  9210 ;; This function is called by:
  9211 ;;		_SYSTEM_Initialize
  9212 ;; This function uses a non-reentrant model
  9213 ;;
  9214                           
  9215  0AE0                     _PWM5_Initialize:	
  9216                           ;psect for function _PWM5_Initialize
  9217                           
  9218  0AE0                     l3587:	
  9219                           ;incstack = 0
  9220                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
  9221                           
  9222                           
  9223                           ;pwm5.c: 18:     PWM5CON = 0x80;
  9224  0AE0  3080               	movlw	128
  9225  0AE1  002C               	movlb	12	; select bank12
  9226  0AE2  0099               	movwf	25	;volatile
  9227  0AE3                     l3589:
  9228                           
  9229                           ;pwm5.c: 21:     PWM5DCH = 0x00;
  9230  0AE3  0198               	clrf	24	;volatile
  9231  0AE4                     l3591:
  9232                           
  9233                           ;pwm5.c: 24:     PWM5DCL = 0x00;
  9234  0AE4  0197               	clrf	23	;volatile
  9235  0AE5                     l3593:
  9236                           
  9237                           ;pwm5.c: 27:     PWMTMRSbits.P5TSEL = 1;
  9238  0AE5  081F               	movf	31,w	;volatile
  9239  0AE6  39FC               	andlw	-4
  9240  0AE7  3801               	iorlw	1
  9241  0AE8  009F               	movwf	31	;volatile
  9242  0AE9                     l922:
  9243  0AE9  0008               	return
  9244  0AEA                     __end_of_PWM5_Initialize:
  9245                           
  9246                           	psect	text12
  9247  0AF6                     __ptext12:	
  9248 ;; *************** function _PMD_Initialize *****************
  9249 ;; Defined at:
  9250 ;;		line 63 in file "mcc.c"
  9251 ;; Parameters:    Size  Location     Type
  9252 ;;		None
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;		None
  9255 ;; Return value:  Size  Location     Type
  9256 ;;                  1    wreg      void 
  9257 ;; Registers used:
  9258 ;;		wreg, status,2
  9259 ;; Tracked objects:
  9260 ;;		On entry : 0/0
  9261 ;;		On exit  : 0/0
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9268 ;;Total ram usage:        0 bytes
  9269 ;; Hardware stack levels used: 1
  9270 ;; Hardware stack levels required when called: 4
  9271 ;; This function calls:
  9272 ;;		Nothing
  9273 ;; This function is called by:
  9274 ;;		_SYSTEM_Initialize
  9275 ;; This function uses a non-reentrant model
  9276 ;;
  9277                           
  9278  0AF6                     _PMD_Initialize:	
  9279                           ;psect for function _PMD_Initialize
  9280                           
  9281  0AF6                     l3443:	
  9282                           ;incstack = 0
  9283                           ; Regs used in _PMD_Initialize: [wreg+status,2]
  9284                           
  9285                           
  9286                           ;mcc.c: 66:     PMD0 = 0x00;
  9287  0AF6  0032               	movlb	18	; select bank18
  9288  0AF7  0191               	clrf	17	;volatile
  9289  0AF8                     l3445:
  9290                           
  9291                           ;mcc.c: 68:     PMD1 = 0x7C;
  9292  0AF8  307C               	movlw	124
  9293  0AF9  0092               	movwf	18	;volatile
  9294  0AFA                     l3447:
  9295                           
  9296                           ;mcc.c: 70:     PMD2 = 0x66;
  9297  0AFA  3066               	movlw	102
  9298  0AFB  0093               	movwf	19	;volatile
  9299  0AFC                     l3449:
  9300                           
  9301                           ;mcc.c: 72:     PMD3 = 0xC8;
  9302  0AFC  30C8               	movlw	200
  9303  0AFD  0094               	movwf	20	;volatile
  9304  0AFE                     l3451:
  9305                           
  9306                           ;mcc.c: 74:     PMD4 = 0x00;
  9307  0AFE  0195               	clrf	21	;volatile
  9308                           
  9309                           ;mcc.c: 76:     PMD5 = 0x1F;
  9310  0AFF  301F               	movlw	31
  9311  0B00  0096               	movwf	22	;volatile
  9312  0B01                     l313:
  9313  0B01  0008               	return
  9314  0B02                     __end_of_PMD_Initialize:
  9315                           
  9316                           	psect	text13
  9317  0DB7                     __ptext13:	
  9318 ;; *************** function _PIN_MANAGER_Initialize *****************
  9319 ;; Defined at:
  9320 ;;		line 14 in file "pin_manager.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;		None
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;		None
  9325 ;; Return value:  Size  Location     Type
  9326 ;;                  1    wreg      void 
  9327 ;; Registers used:
  9328 ;;		wreg, status,2
  9329 ;; Tracked objects:
  9330 ;;		On entry : 0/0
  9331 ;;		On exit  : 0/0
  9332 ;;		Unchanged: 0/0
  9333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9338 ;;Total ram usage:        0 bytes
  9339 ;; Hardware stack levels used: 1
  9340 ;; Hardware stack levels required when called: 4
  9341 ;; This function calls:
  9342 ;;		Nothing
  9343 ;; This function is called by:
  9344 ;;		_SYSTEM_Initialize
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348  0DB7                     _PIN_MANAGER_Initialize:	
  9349                           ;psect for function _PIN_MANAGER_Initialize
  9350                           
  9351  0DB7                     l3453:	
  9352                           ;incstack = 0
  9353                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9354                           
  9355                           
  9356                           ;pin_manager.c: 19:     LATA = 0x00;
  9357  0DB7  0022               	movlb	2	; select bank2
  9358  0DB8  018C               	clrf	12	;volatile
  9359                           
  9360                           ;pin_manager.c: 20:     LATB = 0x00;
  9361  0DB9  018D               	clrf	13	;volatile
  9362                           
  9363                           ;pin_manager.c: 21:     LATC = 0x00;
  9364  0DBA  018E               	clrf	14	;volatile
  9365  0DBB                     l3455:
  9366                           
  9367                           ;pin_manager.c: 26:     TRISA = 0x37;
  9368  0DBB  3037               	movlw	55
  9369  0DBC  0021               	movlb	1	; select bank1
  9370  0DBD  008C               	movwf	12	;volatile
  9371  0DBE                     l3457:
  9372                           
  9373                           ;pin_manager.c: 27:     TRISB = 0xF0;
  9374  0DBE  30F0               	movlw	240
  9375  0DBF  008D               	movwf	13	;volatile
  9376  0DC0                     l3459:
  9377                           
  9378                           ;pin_manager.c: 28:     TRISC = 0xEF;
  9379  0DC0  30EF               	movlw	239
  9380  0DC1  008E               	movwf	14	;volatile
  9381  0DC2                     l3461:
  9382                           
  9383                           ;pin_manager.c: 33:     ANSELC = 0xD7;
  9384  0DC2  30D7               	movlw	215
  9385  0DC3  0023               	movlb	3	; select bank3
  9386  0DC4  008E               	movwf	14	;volatile
  9387  0DC5                     l3463:
  9388                           
  9389                           ;pin_manager.c: 34:     ANSELB = 0xD0;
  9390  0DC5  30D0               	movlw	208
  9391  0DC6  008D               	movwf	13	;volatile
  9392  0DC7                     l3465:
  9393                           
  9394                           ;pin_manager.c: 35:     ANSELA = 0x33;
  9395  0DC7  3033               	movlw	51
  9396  0DC8  008C               	movwf	12	;volatile
  9397                           
  9398                           ;pin_manager.c: 40:     WPUB = 0x00;
  9399  0DC9  0024               	movlb	4	; select bank4
  9400  0DCA  018D               	clrf	13	;volatile
  9401                           
  9402                           ;pin_manager.c: 41:     WPUA = 0x00;
  9403  0DCB  018C               	clrf	12	;volatile
  9404                           
  9405                           ;pin_manager.c: 42:     WPUC = 0x00;
  9406  0DCC  018E               	clrf	14	;volatile
  9407                           
  9408                           ;pin_manager.c: 47:     ODCONA = 0x00;
  9409  0DCD  0025               	movlb	5	; select bank5
  9410  0DCE  018C               	clrf	12	;volatile
  9411                           
  9412                           ;pin_manager.c: 48:     ODCONB = 0x00;
  9413  0DCF  018D               	clrf	13	;volatile
  9414                           
  9415                           ;pin_manager.c: 49:     ODCONC = 0x00;
  9416  0DD0  018E               	clrf	14	;volatile
  9417  0DD1                     l3467:
  9418                           
  9419                           ;pin_manager.c: 54:     SLRCONA = 0x37;
  9420  0DD1  3037               	movlw	55
  9421  0DD2  0026               	movlb	6	; select bank6
  9422  0DD3  008C               	movwf	12	;volatile
  9423  0DD4                     l3469:
  9424                           
  9425                           ;pin_manager.c: 55:     SLRCONB = 0xF0;
  9426  0DD4  30F0               	movlw	240
  9427  0DD5  008D               	movwf	13	;volatile
  9428  0DD6                     l3471:
  9429                           
  9430                           ;pin_manager.c: 56:     SLRCONC = 0xFF;
  9431  0DD6  30FF               	movlw	255
  9432  0DD7  008E               	movwf	14	;volatile
  9433  0DD8                     l3473:
  9434                           
  9435                           ;pin_manager.c: 61:     INLVLA = 0x3F;
  9436  0DD8  303F               	movlw	63
  9437  0DD9  0027               	movlb	7	; select bank7
  9438  0DDA  008C               	movwf	12	;volatile
  9439  0DDB                     l3475:
  9440                           
  9441                           ;pin_manager.c: 62:     INLVLB = 0xF0;
  9442  0DDB  30F0               	movlw	240
  9443  0DDC  008D               	movwf	13	;volatile
  9444  0DDD                     l3477:
  9445                           
  9446                           ;pin_manager.c: 63:     INLVLC = 0xFF;
  9447  0DDD  30FF               	movlw	255
  9448  0DDE  008E               	movwf	14	;volatile
  9449  0DDF                     l3479:
  9450                           
  9451                           ;pin_manager.c: 66:     RXPPS = 0x0D;
  9452  0DDF  300D               	movlw	13
  9453  0DE0  003C               	movlb	28	; select bank28
  9454  0DE1  00A4               	movwf	36	;volatile
  9455  0DE2                     l3481:
  9456                           
  9457                           ;pin_manager.c: 67:     CCP2PPS = 0x13;
  9458  0DE2  3013               	movlw	19
  9459  0DE3  0095               	movwf	21	;volatile
  9460  0DE4                     l3483:
  9461                           
  9462                           ;pin_manager.c: 68:     CCP3PPS = 0x02;
  9463  0DE4  3002               	movlw	2
  9464  0DE5  0096               	movwf	22	;volatile
  9465  0DE6                     l3485:
  9466                           
  9467                           ;pin_manager.c: 69:     RC4PPS = 0x14;
  9468  0DE6  3014               	movlw	20
  9469  0DE7  003D               	movlb	29	; select bank29
  9470  0DE8  00A4               	movwf	36	;volatile
  9471  0DE9                     l3487:
  9472                           
  9473                           ;pin_manager.c: 70:     CCP1PPS = 0x15;
  9474  0DE9  3015               	movlw	21
  9475  0DEA  003C               	movlb	28	; select bank28
  9476  0DEB  0094               	movwf	20	;volatile
  9477  0DEC                     l837:
  9478  0DEC  0008               	return
  9479  0DED                     __end_of_PIN_MANAGER_Initialize:
  9480                           
  9481                           	psect	text14
  9482  0AEA                     __ptext14:	
  9483 ;; *************** function _OSCILLATOR_Initialize *****************
  9484 ;; Defined at:
  9485 ;;		line 35 in file "mcc.c"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;		None
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;		None
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  1    wreg      void 
  9492 ;; Registers used:
  9493 ;;		wreg, status,2
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9503 ;;Total ram usage:        0 bytes
  9504 ;; Hardware stack levels used: 1
  9505 ;; Hardware stack levels required when called: 4
  9506 ;; This function calls:
  9507 ;;		Nothing
  9508 ;; This function is called by:
  9509 ;;		_SYSTEM_Initialize
  9510 ;; This function uses a non-reentrant model
  9511 ;;
  9512                           
  9513  0AEA                     _OSCILLATOR_Initialize:	
  9514                           ;psect for function _OSCILLATOR_Initialize
  9515                           
  9516  0AEA                     l3489:	
  9517                           ;incstack = 0
  9518                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9519                           
  9520                           
  9521                           ;mcc.c: 38:     OSCCON1 = 0x00;
  9522  0AEA  0032               	movlb	18	; select bank18
  9523  0AEB  0199               	clrf	25	;volatile
  9524                           
  9525                           ;mcc.c: 40:     OSCCON3 = 0x00;
  9526  0AEC  019B               	clrf	27	;volatile
  9527                           
  9528                           ;mcc.c: 42:     OSCEN = 0x00;
  9529  0AED  019D               	clrf	29	;volatile
  9530  0AEE                     l3491:
  9531                           
  9532                           ;mcc.c: 44:     OSCFRQ = 0x04;
  9533  0AEE  3004               	movlw	4
  9534  0AEF  009F               	movwf	31	;volatile
  9535  0AF0                     l3493:
  9536                           
  9537                           ;mcc.c: 46:     OSCTUNE = 0x00;
  9538  0AF0  019E               	clrf	30	;volatile
  9539  0AF1                     l304:	
  9540                           ;mcc.c: 49:     {;mcc.c: 50:     }
  9541                           
  9542                           
  9543                           ;mcc.c: 48:     while(PLLR == 0)
  9544  0AF1  1C1C               	btfss	28,0	;volatile
  9545  0AF2  2AF4               	goto	u1181
  9546  0AF3  2AF5               	goto	u1180
  9547  0AF4                     u1181:
  9548  0AF4  2AF1               	goto	l304
  9549  0AF5                     u1180:
  9550  0AF5                     l307:
  9551  0AF5  0008               	return
  9552  0AF6                     __end_of_OSCILLATOR_Initialize:
  9553                           
  9554                           	psect	text15
  9555  07AF                     __ptext15:	
  9556 ;; *************** function _EUSART_Initialize *****************
  9557 ;; Defined at:
  9558 ;;		line 45 in file "eusart.c"
  9559 ;; Parameters:    Size  Location     Type
  9560 ;;		None
  9561 ;; Auto vars:     Size  Location     Type
  9562 ;;		None
  9563 ;; Return value:  Size  Location     Type
  9564 ;;                  1    wreg      void 
  9565 ;; Registers used:
  9566 ;;		wreg, status,2, status,0, pclath, cstack
  9567 ;; Tracked objects:
  9568 ;;		On entry : 0/0
  9569 ;;		On exit  : 0/0
  9570 ;;		Unchanged: 0/0
  9571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9574 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9575 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9576 ;;Total ram usage:        1 bytes
  9577 ;; Hardware stack levels used: 1
  9578 ;; Hardware stack levels required when called: 5
  9579 ;; This function calls:
  9580 ;;		_EUSART_SetErrorHandler
  9581 ;;		_EUSART_SetFramingErrorHandler
  9582 ;;		_EUSART_SetOverrunErrorHandler
  9583 ;;		_EUSART_SetRxInterruptHandler
  9584 ;;		_EUSART_SetTxInterruptHandler
  9585 ;; This function is called by:
  9586 ;;		_SYSTEM_Initialize
  9587 ;; This function uses a non-reentrant model
  9588 ;;
  9589                           
  9590  07AF                     _EUSART_Initialize:	
  9591                           ;psect for function _EUSART_Initialize
  9592                           
  9593  07AF                     l3607:	
  9594                           ;incstack = 0
  9595                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9596                           
  9597                           
  9598                           ;eusart.c: 48:     PIE1bits.RCIE = 0;
  9599  07AF  0021               	movlb	1	; select bank1
  9600  07B0  1291               	bcf	17,5	;volatile
  9601  07B1                     l3609:
  9602                           
  9603                           ;eusart.c: 49:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  9604  07B1  3027               	movlw	low _EUSART_Receive_ISR
  9605  07B2  0020               	movlb	0	; select bank0
  9606  07B3  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  9607  07B4  300E               	movlw	high _EUSART_Receive_ISR
  9608  07B5  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  9609  07B6  318A  229F  3187   	fcall	_EUSART_SetRxInterruptHandler
  9610  07B9                     l3611:
  9611                           
  9612                           ;eusart.c: 50:     PIE1bits.TXIE = 0;
  9613  07B9  0021               	movlb	1	; select bank1
  9614  07BA  1211               	bcf	17,4	;volatile
  9615                           
  9616                           ;eusart.c: 51:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  9617  07BB  30AF               	movlw	low _EUSART_Transmit_ISR
  9618  07BC  0020               	movlb	0	; select bank0
  9619  07BD  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  9620  07BE  300C               	movlw	high _EUSART_Transmit_ISR
  9621  07BF  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  9622  07C0  318A  22A8  3187   	fcall	_EUSART_SetTxInterruptHandler
  9623  07C3                     l3613:
  9624                           
  9625                           ;eusart.c: 55:     BAUD1CON = 0x08;
  9626  07C3  3008               	movlw	8
  9627  07C4  0023               	movlb	3	; select bank3
  9628  07C5  009F               	movwf	31	;volatile
  9629  07C6                     l3615:
  9630                           
  9631                           ;eusart.c: 58:     RC1STA = 0x90;
  9632  07C6  3090               	movlw	144
  9633  07C7  009D               	movwf	29	;volatile
  9634  07C8                     l3617:
  9635                           
  9636                           ;eusart.c: 61:     TX1STA = 0x24;
  9637  07C8  3024               	movlw	36
  9638  07C9  009E               	movwf	30	;volatile
  9639  07CA                     l3619:
  9640                           
  9641                           ;eusart.c: 64:     SP1BRGL = 0xA0;
  9642  07CA  30A0               	movlw	160
  9643  07CB  009B               	movwf	27	;volatile
  9644  07CC                     l3621:
  9645                           
  9646                           ;eusart.c: 67:     SP1BRGH = 0x01;
  9647  07CC  3001               	movlw	1
  9648  07CD  009C               	movwf	28	;volatile
  9649  07CE                     l3623:
  9650                           
  9651                           ;eusart.c: 70:     EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  9652  07CE  3002               	movlw	low _EUSART_DefaultFramingErrorHandler
  9653  07CF  0020               	movlb	0	; select bank0
  9654  07D0  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  9655  07D1  3000               	movlw	high _EUSART_DefaultFramingErrorHandler
  9656  07D2  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  9657  07D3  318A  228D  3187   	fcall	_EUSART_SetFramingErrorHandler
  9658  07D6                     l3625:
  9659                           
  9660                           ;eusart.c: 71:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  9661  07D6  303E               	movlw	low _EUSART_DefaultOverrunErrorHandler
  9662  07D7  0020               	movlb	0	; select bank0
  9663  07D8  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  9664  07D9  300A               	movlw	high _EUSART_DefaultOverrunErrorHandler
  9665  07DA  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  9666  07DB  318A  2296  3187   	fcall	_EUSART_SetOverrunErrorHandler
  9667  07DE                     l3627:
  9668                           
  9669                           ;eusart.c: 72:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  9670  07DE  303A               	movlw	low _EUSART_DefaultErrorHandler
  9671  07DF  0020               	movlb	0	; select bank0
  9672  07E0  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  9673  07E1  300A               	movlw	high _EUSART_DefaultErrorHandler
  9674  07E2  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  9675  07E3  318A  2284  3187   	fcall	_EUSART_SetErrorHandler
  9676  07E6                     l3629:
  9677                           
  9678                           ;eusart.c: 74:     eusartRxLastError.status = 0;
  9679  07E6  0021               	movlb	1	; select bank1
  9680  07E7  01D0               	clrf	_eusartRxLastError^(0+128)	;volatile
  9681  07E8                     l3631:
  9682                           
  9683                           ;eusart.c: 77:     eusartTxHead = 0;
  9684  07E8  01FD               	clrf	_eusartTxHead	;volatile
  9685  07E9                     l3633:
  9686                           
  9687                           ;eusart.c: 78:     eusartTxTail = 0;
  9688  07E9  01FC               	clrf	_eusartTxTail	;volatile
  9689  07EA                     l3635:
  9690                           
  9691                           ;eusart.c: 79:     eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  9692  07EA  3008               	movlw	8
  9693  07EB  0020               	movlb	0	; select bank0
  9694  07EC  00A2               	movwf	??_EUSART_Initialize
  9695  07ED  0822               	movf	??_EUSART_Initialize,w
  9696  07EE  0021               	movlb	1	; select bank1
  9697  07EF  00D2               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  9698                           
  9699                           ;eusart.c: 81:     eusartRxHead = 0;
  9700  07F0  01FB               	clrf	_eusartRxHead	;volatile
  9701                           
  9702                           ;eusart.c: 82:     eusartRxTail = 0;
  9703  07F1  01FA               	clrf	_eusartRxTail	;volatile
  9704                           
  9705                           ;eusart.c: 83:     eusartRxCount = 0;
  9706  07F2  01D1               	clrf	_eusartRxCount^(0+128)	;volatile
  9707  07F3                     l3637:
  9708                           
  9709                           ;eusart.c: 86:     PIE1bits.RCIE = 1;
  9710  07F3  1691               	bsf	17,5	;volatile
  9711  07F4                     l648:
  9712  07F4  0008               	return
  9713  07F5                     __end_of_EUSART_Initialize:
  9714                           
  9715                           	psect	text16
  9716  0AA8                     __ptext16:	
  9717 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  9718 ;; Defined at:
  9719 ;;		line 278 in file "eusart.c"
  9720 ;; Parameters:    Size  Location     Type
  9721 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9722 ;;		 -> EUSART_Transmit_ISR(1), 
  9723 ;; Auto vars:     Size  Location     Type
  9724 ;;		None
  9725 ;; Return value:  Size  Location     Type
  9726 ;;                  1    wreg      void 
  9727 ;; Registers used:
  9728 ;;		wreg
  9729 ;; Tracked objects:
  9730 ;;		On entry : 0/0
  9731 ;;		On exit  : 0/0
  9732 ;;		Unchanged: 0/0
  9733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9737 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9738 ;;Total ram usage:        2 bytes
  9739 ;; Hardware stack levels used: 1
  9740 ;; Hardware stack levels required when called: 4
  9741 ;; This function calls:
  9742 ;;		Nothing
  9743 ;; This function is called by:
  9744 ;;		_EUSART_Initialize
  9745 ;; This function uses a non-reentrant model
  9746 ;;
  9747                           
  9748  0AA8                     _EUSART_SetTxInterruptHandler:	
  9749                           ;psect for function _EUSART_SetTxInterruptHandler
  9750                           
  9751  0AA8                     l3301:	
  9752                           ;incstack = 0
  9753                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  9754                           
  9755                           
  9756                           ;eusart.c: 279:     EUSART_TxDefaultInterruptHandler = interruptHandler;
  9757  0AA8  0020               	movlb	0	; select bank0
  9758  0AA9  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  9759  0AAA  0021               	movlb	1	; select bank1
  9760  0AAB  00B5               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
  9761  0AAC  0020               	movlb	0	; select bank0
  9762  0AAD  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  9763  0AAE  0021               	movlb	1	; select bank1
  9764  0AAF  00B4               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
  9765  0AB0                     l720:
  9766  0AB0  0008               	return
  9767  0AB1                     __end_of_EUSART_SetTxInterruptHandler:
  9768                           
  9769                           	psect	text17
  9770  0A9F                     __ptext17:	
  9771 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  9772 ;; Defined at:
  9773 ;;		line 284 in file "eusart.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9776 ;;		 -> EUSART_Receive_ISR(1), 
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;		None
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  1    wreg      void 
  9781 ;; Registers used:
  9782 ;;		wreg
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9788 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9791 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9792 ;;Total ram usage:        2 bytes
  9793 ;; Hardware stack levels used: 1
  9794 ;; Hardware stack levels required when called: 4
  9795 ;; This function calls:
  9796 ;;		Nothing
  9797 ;; This function is called by:
  9798 ;;		_EUSART_Initialize
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802  0A9F                     _EUSART_SetRxInterruptHandler:	
  9803                           ;psect for function _EUSART_SetRxInterruptHandler
  9804                           
  9805  0A9F                     l3299:	
  9806                           ;incstack = 0
  9807                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  9808                           
  9809                           
  9810                           ;eusart.c: 285:     EUSART_RxDefaultInterruptHandler = interruptHandler;
  9811  0A9F  0020               	movlb	0	; select bank0
  9812  0AA0  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  9813  0AA1  0021               	movlb	1	; select bank1
  9814  0AA2  00B3               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  9815  0AA3  0020               	movlb	0	; select bank0
  9816  0AA4  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  9817  0AA5  0021               	movlb	1	; select bank1
  9818  0AA6  00B2               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  9819  0AA7                     l723:
  9820  0AA7  0008               	return
  9821  0AA8                     __end_of_EUSART_SetRxInterruptHandler:
  9822                           
  9823                           	psect	text18
  9824  0A96                     __ptext18:	
  9825 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  9826 ;; Defined at:
  9827 ;;		line 266 in file "eusart.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9830 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;		None
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  1    wreg      void 
  9835 ;; Registers used:
  9836 ;;		wreg
  9837 ;; Tracked objects:
  9838 ;;		On entry : 0/0
  9839 ;;		On exit  : 0/0
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9845 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9846 ;;Total ram usage:        2 bytes
  9847 ;; Hardware stack levels used: 1
  9848 ;; Hardware stack levels required when called: 4
  9849 ;; This function calls:
  9850 ;;		Nothing
  9851 ;; This function is called by:
  9852 ;;		_EUSART_Initialize
  9853 ;; This function uses a non-reentrant model
  9854 ;;
  9855                           
  9856  0A96                     _EUSART_SetOverrunErrorHandler:	
  9857                           ;psect for function _EUSART_SetOverrunErrorHandler
  9858                           
  9859  0A96                     l3305:	
  9860                           ;incstack = 0
  9861                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  9862                           
  9863                           
  9864                           ;eusart.c: 267:     EUSART_OverrunErrorHandler = interruptHandler;
  9865  0A96  0020               	movlb	0	; select bank0
  9866  0A97  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  9867  0A98  0021               	movlb	1	; select bank1
  9868  0A99  00AF               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  9869  0A9A  0020               	movlb	0	; select bank0
  9870  0A9B  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  9871  0A9C  0021               	movlb	1	; select bank1
  9872  0A9D  00AE               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  9873  0A9E                     l714:
  9874  0A9E  0008               	return
  9875  0A9F                     __end_of_EUSART_SetOverrunErrorHandler:
  9876                           
  9877                           	psect	text19
  9878  0A8D                     __ptext19:	
  9879 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  9880 ;; Defined at:
  9881 ;;		line 260 in file "eusart.c"
  9882 ;; Parameters:    Size  Location     Type
  9883 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9884 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  9885 ;; Auto vars:     Size  Location     Type
  9886 ;;		None
  9887 ;; Return value:  Size  Location     Type
  9888 ;;                  1    wreg      void 
  9889 ;; Registers used:
  9890 ;;		wreg
  9891 ;; Tracked objects:
  9892 ;;		On entry : 0/0
  9893 ;;		On exit  : 0/0
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9896 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9899 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9900 ;;Total ram usage:        2 bytes
  9901 ;; Hardware stack levels used: 1
  9902 ;; Hardware stack levels required when called: 4
  9903 ;; This function calls:
  9904 ;;		Nothing
  9905 ;; This function is called by:
  9906 ;;		_EUSART_Initialize
  9907 ;; This function uses a non-reentrant model
  9908 ;;
  9909                           
  9910  0A8D                     _EUSART_SetFramingErrorHandler:	
  9911                           ;psect for function _EUSART_SetFramingErrorHandler
  9912                           
  9913  0A8D                     l3303:	
  9914                           ;incstack = 0
  9915                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9916                           
  9917                           
  9918                           ;eusart.c: 261:     EUSART_FramingErrorHandler = interruptHandler;
  9919  0A8D  0020               	movlb	0	; select bank0
  9920  0A8E  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  9921  0A8F  0021               	movlb	1	; select bank1
  9922  0A90  00B1               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  9923  0A91  0020               	movlb	0	; select bank0
  9924  0A92  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  9925  0A93  0021               	movlb	1	; select bank1
  9926  0A94  00B0               	movwf	_EUSART_FramingErrorHandler^(0+128)
  9927  0A95                     l711:
  9928  0A95  0008               	return
  9929  0A96                     __end_of_EUSART_SetFramingErrorHandler:
  9930                           
  9931                           	psect	text20
  9932  0A84                     __ptext20:	
  9933 ;; *************** function _EUSART_SetErrorHandler *****************
  9934 ;; Defined at:
  9935 ;;		line 272 in file "eusart.c"
  9936 ;; Parameters:    Size  Location     Type
  9937 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9938 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9939 ;; Auto vars:     Size  Location     Type
  9940 ;;		None
  9941 ;; Return value:  Size  Location     Type
  9942 ;;                  1    wreg      void 
  9943 ;; Registers used:
  9944 ;;		wreg
  9945 ;; Tracked objects:
  9946 ;;		On entry : 0/0
  9947 ;;		On exit  : 0/0
  9948 ;;		Unchanged: 0/0
  9949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9950 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9953 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9954 ;;Total ram usage:        2 bytes
  9955 ;; Hardware stack levels used: 1
  9956 ;; Hardware stack levels required when called: 4
  9957 ;; This function calls:
  9958 ;;		Nothing
  9959 ;; This function is called by:
  9960 ;;		_EUSART_Initialize
  9961 ;; This function uses a non-reentrant model
  9962 ;;
  9963                           
  9964  0A84                     _EUSART_SetErrorHandler:	
  9965                           ;psect for function _EUSART_SetErrorHandler
  9966                           
  9967  0A84                     l3307:	
  9968                           ;incstack = 0
  9969                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9970                           
  9971                           
  9972                           ;eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  9973  0A84  0020               	movlb	0	; select bank0
  9974  0A85  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9975  0A86  0021               	movlb	1	; select bank1
  9976  0A87  00AD               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  9977  0A88  0020               	movlb	0	; select bank0
  9978  0A89  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9979  0A8A  0021               	movlb	1	; select bank1
  9980  0A8B  00AC               	movwf	_EUSART_ErrorHandler^(0+128)
  9981  0A8C                     l717:
  9982  0A8C  0008               	return
  9983  0A8D                     __end_of_EUSART_SetErrorHandler:
  9984                           
  9985                           	psect	text21
  9986  0B35                     __ptext21:	
  9987 ;; *************** function _CCP4_Initialize *****************
  9988 ;; Defined at:
  9989 ;;		line 15 in file "ccp4.c"
  9990 ;; Parameters:    Size  Location     Type
  9991 ;;		None
  9992 ;; Auto vars:     Size  Location     Type
  9993 ;;		None
  9994 ;; Return value:  Size  Location     Type
  9995 ;;                  1    wreg      void 
  9996 ;; Registers used:
  9997 ;;		wreg, status,2, status,0
  9998 ;; Tracked objects:
  9999 ;;		On entry : 0/0
 10000 ;;		On exit  : 0/0
 10001 ;;		Unchanged: 0/0
 10002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10007 ;;Total ram usage:        0 bytes
 10008 ;; Hardware stack levels used: 1
 10009 ;; Hardware stack levels required when called: 4
 10010 ;; This function calls:
 10011 ;;		Nothing
 10012 ;; This function is called by:
 10013 ;;		_SYSTEM_Initialize
 10014 ;; This function uses a non-reentrant model
 10015 ;;
 10016                           
 10017  0B35                     _CCP4_Initialize:	
 10018                           ;psect for function _CCP4_Initialize
 10019                           
 10020  0B35                     l3565:	
 10021                           ;incstack = 0
 10022                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0]
 10023                           
 10024                           
 10025                           ;ccp4.c: 20:  CCP4CON = 0x81;
 10026  0B35  3081               	movlw	129
 10027  0B36  0026               	movlb	6	; select bank6
 10028  0B37  0097               	movwf	23	;volatile
 10029                           
 10030                           ;ccp4.c: 23:  CCPR4H = 0x11;
 10031  0B38  3011               	movlw	17
 10032  0B39  0096               	movwf	22	;volatile
 10033                           
 10034                           ;ccp4.c: 26:  CCPR4L = 0xC1;
 10035  0B3A  30C1               	movlw	193
 10036  0B3B  0095               	movwf	21	;volatile
 10037  0B3C                     l3567:
 10038                           
 10039                           ;ccp4.c: 29:  CCPTMRSbits.C4TSEL = 0x2;
 10040  0B3C  0025               	movlb	5	; select bank5
 10041  0B3D  081F               	movf	31,w	;volatile
 10042  0B3E  393F               	andlw	-193
 10043  0B3F  3880               	iorlw	128
 10044  0B40  009F               	movwf	31	;volatile
 10045  0B41                     l3569:
 10046                           
 10047                           ;ccp4.c: 32:     PIR4bits.CCP4IF = 0;
 10048  0B41  0020               	movlb	0	; select bank0
 10049  0B42  1194               	bcf	20,3	;volatile
 10050  0B43                     l3571:
 10051                           
 10052                           ;ccp4.c: 35:     PIE4bits.CCP4IE = 1;
 10053  0B43  0021               	movlb	1	; select bank1
 10054  0B44  1594               	bsf	20,3	;volatile
 10055  0B45                     l902:
 10056  0B45  0008               	return
 10057  0B46                     __end_of_CCP4_Initialize:
 10058                           
 10059                           	psect	text22
 10060  0C10                     __ptext22:	
 10061 ;; *************** function _CCP3_Initialize *****************
 10062 ;; Defined at:
 10063 ;;		line 50 in file "ccp3.c"
 10064 ;; Parameters:    Size  Location     Type
 10065 ;;		None
 10066 ;; Auto vars:     Size  Location     Type
 10067 ;;		None
 10068 ;; Return value:  Size  Location     Type
 10069 ;;                  1    wreg      void 
 10070 ;; Registers used:
 10071 ;;		wreg, status,2, status,0, pclath, cstack
 10072 ;; Tracked objects:
 10073 ;;		On entry : 0/0
 10074 ;;		On exit  : 0/0
 10075 ;;		Unchanged: 0/0
 10076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10081 ;;Total ram usage:        0 bytes
 10082 ;; Hardware stack levels used: 1
 10083 ;; Hardware stack levels required when called: 5
 10084 ;; This function calls:
 10085 ;;		_CCP3_SetCallBack
 10086 ;; This function is called by:
 10087 ;;		_SYSTEM_Initialize
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091  0C10                     _CCP3_Initialize:	
 10092                           ;psect for function _CCP3_Initialize
 10093                           
 10094  0C10                     l3497:	
 10095                           ;incstack = 0
 10096                           ; Regs used in _CCP3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10097                           
 10098                           
 10099                           ;ccp3.c: 55:  CCP3CON = 0x83;
 10100  0C10  3083               	movlw	131
 10101  0C11  0026               	movlb	6	; select bank6
 10102  0C12  0093               	movwf	19	;volatile
 10103  0C13                     l3499:
 10104                           
 10105                           ;ccp3.c: 58:  CCP3CAP = 0x00;
 10106  0C13  0194               	clrf	20	;volatile
 10107  0C14                     l3501:
 10108                           
 10109                           ;ccp3.c: 61:  CCPR3H = 0x00;
 10110  0C14  0192               	clrf	18	;volatile
 10111  0C15                     l3503:
 10112                           
 10113                           ;ccp3.c: 64:  CCPR3L = 0x00;
 10114  0C15  0191               	clrf	17	;volatile
 10115  0C16                     l3505:
 10116                           
 10117                           ;ccp3.c: 67:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 10118  0C16  30E2               	movlw	low _CCP3_DefaultCallBack
 10119  0C17  0020               	movlb	0	; select bank0
 10120  0C18  00A0               	movwf	CCP3_SetCallBack@customCallBack
 10121  0C19  300E               	movlw	high _CCP3_DefaultCallBack
 10122  0C1A  00A1               	movwf	CCP3_SetCallBack@customCallBack+1
 10123  0C1B  318A  227B  318C   	fcall	_CCP3_SetCallBack
 10124  0C1E                     l3507:
 10125                           
 10126                           ;ccp3.c: 70:  CCPTMRSbits.C3TSEL = 0x1;
 10127  0C1E  0025               	movlb	5	; select bank5
 10128  0C1F  081F               	movf	31,w	;volatile
 10129  0C20  39CF               	andlw	-49
 10130  0C21  3810               	iorlw	16
 10131  0C22  009F               	movwf	31	;volatile
 10132  0C23                     l3509:
 10133                           
 10134                           ;ccp3.c: 73:     PIR4bits.CCP3IF = 0;
 10135  0C23  0020               	movlb	0	; select bank0
 10136  0C24  1114               	bcf	20,2	;volatile
 10137  0C25                     l3511:
 10138                           
 10139                           ;ccp3.c: 76:     PIE4bits.CCP3IE = 1;
 10140  0C25  0021               	movlb	1	; select bank1
 10141  0C26  1514               	bsf	20,2	;volatile
 10142  0C27                     l504:
 10143  0C27  0008               	return
 10144  0C28                     __end_of_CCP3_Initialize:
 10145                           
 10146                           	psect	text23
 10147  0A7B                     __ptext23:	
 10148 ;; *************** function _CCP3_SetCallBack *****************
 10149 ;; Defined at:
 10150 ;;		line 98 in file "ccp3.c"
 10151 ;; Parameters:    Size  Location     Type
 10152 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10153 ;;		 -> CCP3_DefaultCallBack(1), 
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;		None
 10156 ;; Return value:  Size  Location     Type
 10157 ;;                  1    wreg      void 
 10158 ;; Registers used:
 10159 ;;		wreg
 10160 ;; Tracked objects:
 10161 ;;		On entry : 0/0
 10162 ;;		On exit  : 0/0
 10163 ;;		Unchanged: 0/0
 10164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10165 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10168 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10169 ;;Total ram usage:        2 bytes
 10170 ;; Hardware stack levels used: 1
 10171 ;; Hardware stack levels required when called: 4
 10172 ;; This function calls:
 10173 ;;		Nothing
 10174 ;; This function is called by:
 10175 ;;		_CCP3_Initialize
 10176 ;; This function uses a non-reentrant model
 10177 ;;
 10178                           
 10179  0A7B                     _CCP3_SetCallBack:	
 10180                           ;psect for function _CCP3_SetCallBack
 10181                           
 10182  0A7B                     l3295:	
 10183                           ;incstack = 0
 10184                           ; Regs used in _CCP3_SetCallBack: [wreg]
 10185                           
 10186                           
 10187                           ;ccp3.c: 99:     CCP3_CallBack = customCallBack;
 10188  0A7B  0020               	movlb	0	; select bank0
 10189  0A7C  0821               	movf	CCP3_SetCallBack@customCallBack+1,w
 10190  0A7D  0021               	movlb	1	; select bank1
 10191  0A7E  00BF               	movwf	(_CCP3_CallBack+1)^(0+128)
 10192  0A7F  0020               	movlb	0	; select bank0
 10193  0A80  0820               	movf	CCP3_SetCallBack@customCallBack,w
 10194  0A81  0021               	movlb	1	; select bank1
 10195  0A82  00BE               	movwf	_CCP3_CallBack^(0+128)
 10196  0A83                     l510:
 10197  0A83  0008               	return
 10198  0A84                     __end_of_CCP3_SetCallBack:
 10199                           
 10200                           	psect	text24
 10201  0BF8                     __ptext24:	
 10202 ;; *************** function _CCP2_Initialize *****************
 10203 ;; Defined at:
 10204 ;;		line 50 in file "ccp2.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;		None
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;		None
 10209 ;; Return value:  Size  Location     Type
 10210 ;;                  1    wreg      void 
 10211 ;; Registers used:
 10212 ;;		wreg, status,2, status,0, pclath, cstack
 10213 ;; Tracked objects:
 10214 ;;		On entry : 0/0
 10215 ;;		On exit  : 0/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10222 ;;Total ram usage:        0 bytes
 10223 ;; Hardware stack levels used: 1
 10224 ;; Hardware stack levels required when called: 5
 10225 ;; This function calls:
 10226 ;;		_CCP2_SetCallBack
 10227 ;; This function is called by:
 10228 ;;		_SYSTEM_Initialize
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232  0BF8                     _CCP2_Initialize:	
 10233                           ;psect for function _CCP2_Initialize
 10234                           
 10235  0BF8                     l3549:	
 10236                           ;incstack = 0
 10237                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10238                           
 10239                           
 10240                           ;ccp2.c: 55:  CCP2CON = 0x83;
 10241  0BF8  3083               	movlw	131
 10242  0BF9  0025               	movlb	5	; select bank5
 10243  0BFA  0097               	movwf	23	;volatile
 10244  0BFB                     l3551:
 10245                           
 10246                           ;ccp2.c: 58:  CCP2CAP = 0x00;
 10247  0BFB  0198               	clrf	24	;volatile
 10248  0BFC                     l3553:
 10249                           
 10250                           ;ccp2.c: 61:  CCPR2H = 0x00;
 10251  0BFC  0196               	clrf	22	;volatile
 10252  0BFD                     l3555:
 10253                           
 10254                           ;ccp2.c: 64:  CCPR2L = 0x00;
 10255  0BFD  0195               	clrf	21	;volatile
 10256  0BFE                     l3557:
 10257                           
 10258                           ;ccp2.c: 67:     CCP2_SetCallBack(CCP2_DefaultCallBack);
 10259  0BFE  30A3               	movlw	low _CCP2_DefaultCallBack
 10260  0BFF  0020               	movlb	0	; select bank0
 10261  0C00  00A0               	movwf	CCP2_SetCallBack@customCallBack
 10262  0C01  300E               	movlw	high _CCP2_DefaultCallBack
 10263  0C02  00A1               	movwf	CCP2_SetCallBack@customCallBack+1
 10264  0C03  318A  2272  318B   	fcall	_CCP2_SetCallBack
 10265  0C06                     l3559:
 10266                           
 10267                           ;ccp2.c: 70:  CCPTMRSbits.C2TSEL = 0x1;
 10268  0C06  0025               	movlb	5	; select bank5
 10269  0C07  081F               	movf	31,w	;volatile
 10270  0C08  39F3               	andlw	-13
 10271  0C09  3804               	iorlw	4
 10272  0C0A  009F               	movwf	31	;volatile
 10273  0C0B                     l3561:
 10274                           
 10275                           ;ccp2.c: 73:     PIR4bits.CCP2IF = 0;
 10276  0C0B  0020               	movlb	0	; select bank0
 10277  0C0C  1094               	bcf	20,1	;volatile
 10278  0C0D                     l3563:
 10279                           
 10280                           ;ccp2.c: 76:     PIE4bits.CCP2IE = 1;
 10281  0C0D  0021               	movlb	1	; select bank1
 10282  0C0E  1494               	bsf	20,1	;volatile
 10283  0C0F                     l458:
 10284  0C0F  0008               	return
 10285  0C10                     __end_of_CCP2_Initialize:
 10286                           
 10287                           	psect	text25
 10288  0A72                     __ptext25:	
 10289 ;; *************** function _CCP2_SetCallBack *****************
 10290 ;; Defined at:
 10291 ;;		line 98 in file "ccp2.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10294 ;;		 -> CCP2_DefaultCallBack(1), 
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;		None
 10297 ;; Return value:  Size  Location     Type
 10298 ;;                  1    wreg      void 
 10299 ;; Registers used:
 10300 ;;		wreg
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/0
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10306 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10309 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10310 ;;Total ram usage:        2 bytes
 10311 ;; Hardware stack levels used: 1
 10312 ;; Hardware stack levels required when called: 4
 10313 ;; This function calls:
 10314 ;;		Nothing
 10315 ;; This function is called by:
 10316 ;;		_CCP2_Initialize
 10317 ;; This function uses a non-reentrant model
 10318 ;;
 10319                           
 10320  0A72                     _CCP2_SetCallBack:	
 10321                           ;psect for function _CCP2_SetCallBack
 10322                           
 10323  0A72                     l3293:	
 10324                           ;incstack = 0
 10325                           ; Regs used in _CCP2_SetCallBack: [wreg]
 10326                           
 10327                           
 10328                           ;ccp2.c: 99:     CCP2_CallBack = customCallBack;
 10329  0A72  0020               	movlb	0	; select bank0
 10330  0A73  0821               	movf	CCP2_SetCallBack@customCallBack+1,w
 10331  0A74  0021               	movlb	1	; select bank1
 10332  0A75  00C5               	movwf	(_CCP2_CallBack+1)^(0+128)
 10333  0A76  0020               	movlb	0	; select bank0
 10334  0A77  0820               	movf	CCP2_SetCallBack@customCallBack,w
 10335  0A78  0021               	movlb	1	; select bank1
 10336  0A79  00C4               	movwf	_CCP2_CallBack^(0+128)
 10337  0A7A                     l464:
 10338  0A7A  0008               	return
 10339  0A7B                     __end_of_CCP2_SetCallBack:
 10340                           
 10341                           	psect	text26
 10342  0BE0                     __ptext26:	
 10343 ;; *************** function _CCP1_Initialize *****************
 10344 ;; Defined at:
 10345 ;;		line 50 in file "ccp1.c"
 10346 ;; Parameters:    Size  Location     Type
 10347 ;;		None
 10348 ;; Auto vars:     Size  Location     Type
 10349 ;;		None
 10350 ;; Return value:  Size  Location     Type
 10351 ;;                  1    wreg      void 
 10352 ;; Registers used:
 10353 ;;		wreg, status,2, status,0, pclath, cstack
 10354 ;; Tracked objects:
 10355 ;;		On entry : 0/0
 10356 ;;		On exit  : 0/0
 10357 ;;		Unchanged: 0/0
 10358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10363 ;;Total ram usage:        0 bytes
 10364 ;; Hardware stack levels used: 1
 10365 ;; Hardware stack levels required when called: 5
 10366 ;; This function calls:
 10367 ;;		_CCP1_SetCallBack
 10368 ;; This function is called by:
 10369 ;;		_SYSTEM_Initialize
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373  0BE0                     _CCP1_Initialize:	
 10374                           ;psect for function _CCP1_Initialize
 10375                           
 10376  0BE0                     l3513:	
 10377                           ;incstack = 0
 10378                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10379                           
 10380                           
 10381                           ;ccp1.c: 55:  CCP1CON = 0x83;
 10382  0BE0  3083               	movlw	131
 10383  0BE1  0025               	movlb	5	; select bank5
 10384  0BE2  0093               	movwf	19	;volatile
 10385  0BE3                     l3515:
 10386                           
 10387                           ;ccp1.c: 58:  CCP1CAP = 0x00;
 10388  0BE3  0194               	clrf	20	;volatile
 10389  0BE4                     l3517:
 10390                           
 10391                           ;ccp1.c: 61:  CCPR1H = 0x00;
 10392  0BE4  0192               	clrf	18	;volatile
 10393  0BE5                     l3519:
 10394                           
 10395                           ;ccp1.c: 64:  CCPR1L = 0x00;
 10396  0BE5  0191               	clrf	17	;volatile
 10397  0BE6                     l3521:
 10398                           
 10399                           ;ccp1.c: 67:     CCP1_SetCallBack(CCP1_DefaultCallBack);
 10400  0BE6  3064               	movlw	low _CCP1_DefaultCallBack
 10401  0BE7  0020               	movlb	0	; select bank0
 10402  0BE8  00A0               	movwf	CCP1_SetCallBack@customCallBack
 10403  0BE9  300E               	movlw	high _CCP1_DefaultCallBack
 10404  0BEA  00A1               	movwf	CCP1_SetCallBack@customCallBack+1
 10405  0BEB  318A  2269  318B   	fcall	_CCP1_SetCallBack
 10406  0BEE                     l3523:
 10407                           
 10408                           ;ccp1.c: 70:  CCPTMRSbits.C1TSEL = 0x1;
 10409  0BEE  0025               	movlb	5	; select bank5
 10410  0BEF  081F               	movf	31,w	;volatile
 10411  0BF0  39FC               	andlw	-4
 10412  0BF1  3801               	iorlw	1
 10413  0BF2  009F               	movwf	31	;volatile
 10414  0BF3                     l3525:
 10415                           
 10416                           ;ccp1.c: 73:     PIR4bits.CCP1IF = 0;
 10417  0BF3  0020               	movlb	0	; select bank0
 10418  0BF4  1014               	bcf	20,0	;volatile
 10419  0BF5                     l3527:
 10420                           
 10421                           ;ccp1.c: 76:     PIE4bits.CCP1IE = 1;
 10422  0BF5  0021               	movlb	1	; select bank1
 10423  0BF6  1414               	bsf	20,0	;volatile
 10424  0BF7                     l412:
 10425  0BF7  0008               	return
 10426  0BF8                     __end_of_CCP1_Initialize:
 10427                           
 10428                           	psect	text27
 10429  0A69                     __ptext27:	
 10430 ;; *************** function _CCP1_SetCallBack *****************
 10431 ;; Defined at:
 10432 ;;		line 98 in file "ccp1.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10435 ;;		 -> CCP1_DefaultCallBack(1), 
 10436 ;; Auto vars:     Size  Location     Type
 10437 ;;		None
 10438 ;; Return value:  Size  Location     Type
 10439 ;;                  1    wreg      void 
 10440 ;; Registers used:
 10441 ;;		wreg
 10442 ;; Tracked objects:
 10443 ;;		On entry : 0/0
 10444 ;;		On exit  : 0/0
 10445 ;;		Unchanged: 0/0
 10446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10447 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10450 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10451 ;;Total ram usage:        2 bytes
 10452 ;; Hardware stack levels used: 1
 10453 ;; Hardware stack levels required when called: 4
 10454 ;; This function calls:
 10455 ;;		Nothing
 10456 ;; This function is called by:
 10457 ;;		_CCP1_Initialize
 10458 ;; This function uses a non-reentrant model
 10459 ;;
 10460                           
 10461  0A69                     _CCP1_SetCallBack:	
 10462                           ;psect for function _CCP1_SetCallBack
 10463                           
 10464  0A69                     l3291:	
 10465                           ;incstack = 0
 10466                           ; Regs used in _CCP1_SetCallBack: [wreg]
 10467                           
 10468                           
 10469                           ;ccp1.c: 99:     CCP1_CallBack = customCallBack;
 10470  0A69  0020               	movlb	0	; select bank0
 10471  0A6A  0821               	movf	CCP1_SetCallBack@customCallBack+1,w
 10472  0A6B  0021               	movlb	1	; select bank1
 10473  0A6C  00CB               	movwf	(_CCP1_CallBack+1)^(0+128)
 10474  0A6D  0020               	movlb	0	; select bank0
 10475  0A6E  0820               	movf	CCP1_SetCallBack@customCallBack,w
 10476  0A6F  0021               	movlb	1	; select bank1
 10477  0A70  00CA               	movwf	_CCP1_CallBack^(0+128)
 10478  0A71                     l418:
 10479  0A71  0008               	return
 10480  0A72                     __end_of_CCP1_SetCallBack:
 10481                           
 10482                           	psect	text28
 10483  0756                     __ptext28:	
 10484 ;; *************** function _JSN_Sensor_Trig *****************
 10485 ;; Defined at:
 10486 ;;		line 88 in file "JSN_Sensor.c"
 10487 ;; Parameters:    Size  Location     Type
 10488 ;;  Sensor          1    wreg     PTR struct .
 10489 ;;		 -> Sens2(6), Sens1(6), 
 10490 ;; Auto vars:     Size  Location     Type
 10491 ;;  Sensor          1   10[BANK0 ] PTR struct .
 10492 ;;		 -> Sens2(6), Sens1(6), 
 10493 ;; Return value:  Size  Location     Type
 10494 ;;                  1    wreg      void 
 10495 ;; Registers used:
 10496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10497 ;; Tracked objects:
 10498 ;;		On entry : 0/0
 10499 ;;		On exit  : 0/0
 10500 ;;		Unchanged: 0/0
 10501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10503 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10504 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10505 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10506 ;;Total ram usage:        5 bytes
 10507 ;; Hardware stack levels used: 1
 10508 ;; Hardware stack levels required when called: 6
 10509 ;; This function calls:
 10510 ;;		_FRT_GetMicros
 10511 ;;		_WritePin
 10512 ;; This function is called by:
 10513 ;;		_main
 10514 ;; This function uses a non-reentrant model
 10515 ;;
 10516                           
 10517  0756                     _JSN_Sensor_Trig:	
 10518                           ;psect for function _JSN_Sensor_Trig
 10519                           
 10520                           
 10521                           ;incstack = 0
 10522                           ; Regs used in _JSN_Sensor_Trig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10523                           ;JSN_Sensor_Trig@Sensor stored from wreg
 10524  0756  0020               	movlb	0	; select bank0
 10525  0757  00AA               	movwf	JSN_Sensor_Trig@Sensor
 10526  0758                     l4017:
 10527                           
 10528                           ;JSN_Sensor.c: 89:     micros = FRT_GetMicros();
 10529  0758  318C  2477  3187   	fcall	_FRT_GetMicros
 10530  075B  0020               	movlb	0	; select bank0
 10531  075C  0825               	movf	?_FRT_GetMicros+3,w
 10532  075D  0022               	movlb	2	; select bank2
 10533  075E  00C9               	movwf	(_micros+3)^(0+256)
 10534  075F  0020               	movlb	0	; select bank0
 10535  0760  0824               	movf	?_FRT_GetMicros+2,w
 10536  0761  0022               	movlb	2	; select bank2
 10537  0762  00C8               	movwf	(_micros+2)^(0+256)
 10538  0763  0020               	movlb	0	; select bank0
 10539  0764  0823               	movf	?_FRT_GetMicros+1,w
 10540  0765  0022               	movlb	2	; select bank2
 10541  0766  00C7               	movwf	(_micros+1)^(0+256)
 10542  0767  0020               	movlb	0	; select bank0
 10543  0768  0822               	movf	?_FRT_GetMicros,w
 10544  0769  0022               	movlb	2	; select bank2
 10545  076A  00C6               	movwf	_micros^(0+256)
 10546  076B                     l4019:
 10547                           
 10548                           ;JSN_Sensor.c: 92:     WritePin(Sensor->trigPin, 1);
 10549  076B  0020               	movlb	0	; select bank0
 10550  076C  01A0               	clrf	WritePin@val
 10551  076D  0AA0               	incf	WritePin@val,f
 10552  076E  082A               	movf	JSN_Sensor_Trig@Sensor,w
 10553  076F  3E04               	addlw	4
 10554  0770  0086               	movwf	6
 10555  0771  3001               	movlw	1	; select bank2/3
 10556  0772  0087               	movwf	7
 10557  0773  0801               	movf	1,w
 10558  0774  3183  235B  3187   	fcall	_WritePin
 10559  0777                     l4021:	
 10560                           ;JSN_Sensor.c: 95:     while ((FRT_GetMicros() - micros) < 11);
 10561                           
 10562  0777  318C  2477  3187   	fcall	_FRT_GetMicros
 10563  077A  0022               	movlb	2	; select bank2
 10564  077B  0846               	movf	_micros^(0+256),w
 10565  077C  0020               	movlb	0	; select bank0
 10566  077D  0222               	subwf	?_FRT_GetMicros,w
 10567  077E  00A6               	movwf	??_JSN_Sensor_Trig
 10568  077F  0022               	movlb	2	; select bank2
 10569  0780  0847               	movf	(_micros+1)^(0+256),w
 10570  0781  0020               	movlb	0	; select bank0
 10571  0782  3B23               	subwfb	?_FRT_GetMicros+1,w
 10572  0783  00A7               	movwf	??_JSN_Sensor_Trig+1
 10573  0784  0022               	movlb	2	; select bank2
 10574  0785  0848               	movf	(_micros+2)^(0+256),w
 10575  0786  0020               	movlb	0	; select bank0
 10576  0787  3B24               	subwfb	?_FRT_GetMicros+2,w
 10577  0788  00A8               	movwf	??_JSN_Sensor_Trig+2
 10578  0789  0022               	movlb	2	; select bank2
 10579  078A  0849               	movf	(_micros+3)^(0+256),w
 10580  078B  0020               	movlb	0	; select bank0
 10581  078C  3B25               	subwfb	?_FRT_GetMicros+3,w
 10582  078D  00A9               	movwf	??_JSN_Sensor_Trig+3
 10583  078E  0829               	movf	??_JSN_Sensor_Trig+3,w
 10584  078F  1D03               	btfss	3,2
 10585  0790  2F9D               	goto	u1340
 10586  0791  0828               	movf	??_JSN_Sensor_Trig+2,w
 10587  0792  1D03               	btfss	3,2
 10588  0793  2F9D               	goto	u1340
 10589  0794  0827               	movf	??_JSN_Sensor_Trig+1,w
 10590  0795  1D03               	btfss	3,2
 10591  0796  2F9D               	goto	u1340
 10592  0797  300B               	movlw	11
 10593  0798  0226               	subwf	??_JSN_Sensor_Trig,w
 10594  0799  1C03               	btfss	3,0
 10595  079A  2F9C               	goto	u1341
 10596  079B  2F9D               	goto	u1340
 10597  079C                     u1341:
 10598  079C  2F77               	goto	l4021
 10599  079D                     u1340:
 10600  079D                     l4023:
 10601                           
 10602                           ;JSN_Sensor.c: 98:     WritePin(Sensor->trigPin, 0);
 10603  079D  0020               	movlb	0	; select bank0
 10604  079E  01A0               	clrf	WritePin@val
 10605  079F  082A               	movf	JSN_Sensor_Trig@Sensor,w
 10606  07A0  3E04               	addlw	4
 10607  07A1  0086               	movwf	6
 10608  07A2  3001               	movlw	1	; select bank2/3
 10609  07A3  0087               	movwf	7
 10610  07A4  0801               	movf	1,w
 10611  07A5  3183  235B  3187   	fcall	_WritePin
 10612  07A8                     l4025:
 10613                           
 10614                           ;JSN_Sensor.c: 101:     lastTrig = Sensor;
 10615  07A8  0020               	movlb	0	; select bank0
 10616  07A9  082A               	movf	JSN_Sensor_Trig@Sensor,w
 10617  07AA  00A6               	movwf	??_JSN_Sensor_Trig
 10618  07AB  0826               	movf	??_JSN_Sensor_Trig,w
 10619  07AC  0021               	movlb	1	; select bank1
 10620  07AD  00D9               	movwf	_lastTrig^(0+128)
 10621  07AE                     l54:
 10622  07AE  0008               	return
 10623  07AF                     __end_of_JSN_Sensor_Trig:
 10624                           
 10625                           	psect	text29
 10626  0C77                     __ptext29:	
 10627 ;; *************** function _FRT_GetMicros *****************
 10628 ;; Defined at:
 10629 ;;		line 32 in file "FRT.c"
 10630 ;; Parameters:    Size  Location     Type
 10631 ;;		None
 10632 ;; Auto vars:     Size  Location     Type
 10633 ;;		None
 10634 ;; Return value:  Size  Location     Type
 10635 ;;                  4    2[BANK0 ] unsigned long 
 10636 ;; Registers used:
 10637 ;;		wreg, pclath, cstack
 10638 ;; Tracked objects:
 10639 ;;		On entry : 0/0
 10640 ;;		On exit  : 0/0
 10641 ;;		Unchanged: 0/0
 10642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10643 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10646 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10647 ;;Total ram usage:        4 bytes
 10648 ;; Hardware stack levels used: 1
 10649 ;; Hardware stack levels required when called: 5
 10650 ;; This function calls:
 10651 ;;		_TMR0_ReadTimer
 10652 ;; This function is called by:
 10653 ;;		_JSN_Sensor_Trig
 10654 ;; This function uses a non-reentrant model
 10655 ;;
 10656                           
 10657  0C77                     _FRT_GetMicros:	
 10658                           ;psect for function _FRT_GetMicros
 10659                           
 10660  0C77                     l3839:	
 10661                           ;incstack = 0
 10662                           ; Regs used in _FRT_GetMicros: [wreg+pclath+cstack]
 10663                           
 10664                           
 10665                           ;FRT.c: 33:     return (micros + TMR0_ReadTimer());
 10666  0C77  318A  225A  318C   	fcall	_TMR0_ReadTimer
 10667  0C7A  0022               	movlb	2	; select bank2
 10668  0C7B  073E               	addwf	_micros@FRT$F1617^(0+256),w
 10669  0C7C  0020               	movlb	0	; select bank0
 10670  0C7D  00A2               	movwf	?_FRT_GetMicros
 10671  0C7E  0022               	movlb	2	; select bank2
 10672  0C7F  083F               	movf	(_micros@FRT$F1617+1)^(0+256),w
 10673  0C80  1803               	skipnc
 10674  0C81  0F3F               	incfsz	(_micros@FRT$F1617+1)^(0+256),w
 10675  0C82  1003               	clrc
 10676  0C83  0020               	movlb	0	; select bank0
 10677  0C84  00A3               	movwf	?_FRT_GetMicros+1
 10678  0C85  0022               	movlb	2	; select bank2
 10679  0C86  0840               	movf	(_micros@FRT$F1617+2)^(0+256),w
 10680  0C87  1803               	skipnc
 10681  0C88  0F40               	incfsz	(_micros@FRT$F1617+2)^(0+256),w
 10682  0C89  1003               	clrc
 10683  0C8A  0020               	movlb	0	; select bank0
 10684  0C8B  00A4               	movwf	?_FRT_GetMicros+2
 10685  0C8C  0022               	movlb	2	; select bank2
 10686  0C8D  0841               	movf	(_micros@FRT$F1617+3)^(0+256),w
 10687  0C8E  1803               	skipnc
 10688  0C8F  0A41               	incf	(_micros@FRT$F1617+3)^(0+256),w
 10689  0C90  0020               	movlb	0	; select bank0
 10690  0C91  00A5               	movwf	?_FRT_GetMicros+3
 10691  0C92                     l852:
 10692  0C92  0008               	return
 10693  0C93                     __end_of_FRT_GetMicros:
 10694                           
 10695                           	psect	text30
 10696  0A5A                     __ptext30:	
 10697 ;; *************** function _TMR0_ReadTimer *****************
 10698 ;; Defined at:
 10699 ;;		line 62 in file "tmr0.c"
 10700 ;; Parameters:    Size  Location     Type
 10701 ;;		None
 10702 ;; Auto vars:     Size  Location     Type
 10703 ;;  readVal         1    1[BANK0 ] unsigned char 
 10704 ;; Return value:  Size  Location     Type
 10705 ;;                  1    wreg      unsigned char 
 10706 ;; Registers used:
 10707 ;;		wreg
 10708 ;; Tracked objects:
 10709 ;;		On entry : 0/0
 10710 ;;		On exit  : 0/0
 10711 ;;		Unchanged: 0/0
 10712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10714 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10715 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10716 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10717 ;;Total ram usage:        2 bytes
 10718 ;; Hardware stack levels used: 1
 10719 ;; Hardware stack levels required when called: 4
 10720 ;; This function calls:
 10721 ;;		Nothing
 10722 ;; This function is called by:
 10723 ;;		_FRT_GetMicros
 10724 ;; This function uses a non-reentrant model
 10725 ;;
 10726                           
 10727  0A5A                     _TMR0_ReadTimer:	
 10728                           ;psect for function _TMR0_ReadTimer
 10729                           
 10730  0A5A                     l3639:	
 10731                           ;incstack = 0
 10732                           ; Regs used in _TMR0_ReadTimer: [wreg]
 10733                           
 10734                           
 10735                           ;tmr0.c: 64:     uint8_t readVal;;tmr0.c: 67:     readVal = TMR0L;
 10736  0A5A  0020               	movlb	0	; select bank0
 10737  0A5B  0815               	movf	21,w	;volatile
 10738  0A5C  00A0               	movwf	??_TMR0_ReadTimer
 10739  0A5D  0820               	movf	??_TMR0_ReadTimer,w
 10740  0A5E  00A1               	movwf	TMR0_ReadTimer@readVal
 10741                           
 10742                           ;tmr0.c: 69:     return readVal;
 10743  0A5F  0821               	movf	TMR0_ReadTimer@readVal,w
 10744  0A60                     l351:
 10745  0A60  0008               	return
 10746  0A61                     __end_of_TMR0_ReadTimer:
 10747                           
 10748                           	psect	text31
 10749  04D1                     __ptext31:	
 10750 ;; *************** function _JSN_Sensor_Init *****************
 10751 ;; Defined at:
 10752 ;;		line 33 in file "JSN_Sensor.c"
 10753 ;; Parameters:    Size  Location     Type
 10754 ;;  Sensor          1    wreg     PTR struct .
 10755 ;;		 -> Sens2(6), Sens1(6), 
 10756 ;;  trigPin         1    2[BANK1 ] enum E7153
 10757 ;;  echoPin         1    3[BANK1 ] enum E7153
 10758 ;; Auto vars:     Size  Location     Type
 10759 ;;  Sensor          1    6[BANK1 ] PTR struct .
 10760 ;;		 -> Sens2(6), Sens1(6), 
 10761 ;; Return value:  Size  Location     Type
 10762 ;;                  1    wreg      unsigned char 
 10763 ;; Registers used:
 10764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10765 ;; Tracked objects:
 10766 ;;		On entry : 0/0
 10767 ;;		On exit  : 0/0
 10768 ;;		Unchanged: 0/0
 10769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10770 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10771 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10772 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10773 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10774 ;;Total ram usage:        5 bytes
 10775 ;; Hardware stack levels used: 1
 10776 ;; Hardware stack levels required when called: 13
 10777 ;; This function calls:
 10778 ;;		_SetPin
 10779 ;;		_WritePin
 10780 ;;		_printf
 10781 ;; This function is called by:
 10782 ;;		_main
 10783 ;; This function uses a non-reentrant model
 10784 ;;
 10785                           
 10786  04D1                     _JSN_Sensor_Init:	
 10787                           ;psect for function _JSN_Sensor_Init
 10788                           
 10789                           
 10790                           ;incstack = 0
 10791                           ; Regs used in _JSN_Sensor_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10792                           ;JSN_Sensor_Init@Sensor stored from wreg
 10793  04D1  0021               	movlb	1	; select bank1
 10794  04D2  00E0               	movwf	JSN_Sensor_Init@Sensor^(0+128)
 10795  04D3                     l3965:
 10796                           
 10797                           ;JSN_Sensor.c: 40:     switch (echoPin) {
 10798  04D3  2CE7               	goto	l3977
 10799  04D4                     l28:	
 10800                           ;JSN_Sensor.c: 43:         case C3:
 10801                           
 10802  04D4                     l3967:
 10803                           
 10804                           ;JSN_Sensor.c: 45:             SetPin(echoPin, 1);
 10805  04D4  0020               	movlb	0	; select bank0
 10806  04D5  01A0               	clrf	SetPin@io
 10807  04D6  0AA0               	incf	SetPin@io,f
 10808  04D7  0021               	movlb	1	; select bank1
 10809  04D8  085D               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 10810  04D9  3184  2416  3184   	fcall	_SetPin
 10811                           
 10812                           ;JSN_Sensor.c: 46:             break;
 10813  04DC  2D15               	goto	l3989
 10814  04DD                     l3969:
 10815                           
 10816                           ;JSN_Sensor.c: 48:             printf("ERROR: Invalid echoPin (must be [A2, A4, C3, C5])
      +                          ");
 10817  04DD  303A               	movlw	low (STR_1| (0+32768))
 10818  04DE  0020               	movlb	0	; select bank0
 10819  04DF  00EC               	movwf	printf@fmt
 10820  04E0  3090               	movlw	high (STR_1| (0+32768))
 10821  04E1  00ED               	movwf	printf@fmt+1
 10822  04E2  318B  2346  3184   	fcall	_printf
 10823  04E5                     l3971:
 10824                           
 10825                           ;JSN_Sensor.c: 49:             return 0xFF;
 10826  04E5  30FF               	movlw	255
 10827  04E6  2D6E               	goto	l32
 10828  04E7                     l3977:
 10829  04E7  085D               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 10830  04E8  00DE               	movwf	??_JSN_Sensor_Init^(0+128)
 10831  04E9  01DF               	clrf	(??_JSN_Sensor_Init^(0+128)+1)
 10832                           
 10833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10834                           ; Switch size 1, requested type "simple"
 10835                           ; Number of cases is 1, Range of values is 0 to 0
 10836                           ; switch strategies available:
 10837                           ; Name         Instructions Cycles
 10838                           ; simple_byte            4     3 (average)
 10839                           ; direct_byte            8     6 (fixed)
 10840                           ; jumptable            260     6 (fixed)
 10841                           ;	Chosen strategy is simple_byte
 10842  04EA  085F               	movf	(??_JSN_Sensor_Init+1)^(0+128),w
 10843  04EB  3A00               	xorlw	0	; case 0
 10844  04EC  1903               	skipnz
 10845  04ED  2CEF               	goto	l4505
 10846  04EE  2CDD               	goto	l3969
 10847  04EF                     l4505:
 10848                           
 10849                           ; Switch size 1, requested type "simple"
 10850                           ; Number of cases is 4, Range of values is 1 to 11
 10851                           ; switch strategies available:
 10852                           ; Name         Instructions Cycles
 10853                           ; simple_byte           13     7 (average)
 10854                           ; direct_byte           31     9 (fixed)
 10855                           ; jumptable            263     9 (fixed)
 10856                           ;	Chosen strategy is simple_byte
 10857  04EF  085E               	movf	??_JSN_Sensor_Init^(0+128),w
 10858  04F0  3A01               	xorlw	1	; case 1
 10859  04F1  1903               	skipnz
 10860  04F2  2CD4               	goto	l3967
 10861  04F3  3A02               	xorlw	2	; case 3
 10862  04F4  1903               	skipnz
 10863  04F5  2CD4               	goto	l3967
 10864  04F6  3A06               	xorlw	6	; case 5
 10865  04F7  1903               	skipnz
 10866  04F8  2CD4               	goto	l3967
 10867  04F9  3A0E               	xorlw	14	; case 11
 10868  04FA  1903               	skipnz
 10869  04FB  2CD4               	goto	l28
 10870  04FC  2CDD               	goto	l3969
 10871  04FD                     l37:	
 10872                           ;JSN_Sensor.c: 57:         case C7:
 10873                           
 10874  04FD                     l3979:
 10875                           
 10876                           ;JSN_Sensor.c: 67:             SetPin(trigPin, 0);
 10877  04FD  0020               	movlb	0	; select bank0
 10878  04FE  01A0               	clrf	SetPin@io
 10879  04FF  0021               	movlb	1	; select bank1
 10880  0500  085C               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 10881  0501  3184  2416  3184   	fcall	_SetPin
 10882                           
 10883                           ;JSN_Sensor.c: 68:             WritePin(trigPin, 0);
 10884  0504  0020               	movlb	0	; select bank0
 10885  0505  01A0               	clrf	WritePin@val
 10886  0506  0021               	movlb	1	; select bank1
 10887  0507  085C               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 10888  0508  3183  235B  3184   	fcall	_WritePin
 10889                           
 10890                           ;JSN_Sensor.c: 69:             break;
 10891  050B  2D47               	goto	l3991
 10892  050C                     l3981:
 10893                           
 10894                           ;JSN_Sensor.c: 71:             printf("ERROR: Invalid trigPin (must NOT be [A2, A3, A4, 
      +                          C3, C5])");
 10895  050C  3000               	movlw	low (STR_2| (0+32768))
 10896  050D  0020               	movlb	0	; select bank0
 10897  050E  00EC               	movwf	printf@fmt
 10898  050F  3090               	movlw	high (STR_2| (0+32768))
 10899  0510  00ED               	movwf	printf@fmt+1
 10900  0511  318B  2346  3184   	fcall	_printf
 10901  0514  2CE5               	goto	l3971
 10902  0515                     l3989:
 10903  0515  0021               	movlb	1	; select bank1
 10904  0516  085C               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 10905  0517  00DE               	movwf	??_JSN_Sensor_Init^(0+128)
 10906  0518  01DF               	clrf	(??_JSN_Sensor_Init^(0+128)+1)
 10907                           
 10908                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10909                           ; Switch size 1, requested type "simple"
 10910                           ; Number of cases is 1, Range of values is 0 to 0
 10911                           ; switch strategies available:
 10912                           ; Name         Instructions Cycles
 10913                           ; simple_byte            4     3 (average)
 10914                           ; direct_byte            8     6 (fixed)
 10915                           ; jumptable            260     6 (fixed)
 10916                           ;	Chosen strategy is simple_byte
 10917  0519  085F               	movf	(??_JSN_Sensor_Init+1)^(0+128),w
 10918  051A  3A00               	xorlw	0	; case 0
 10919  051B  1903               	skipnz
 10920  051C  2D1E               	goto	l4507
 10921  051D  2D0C               	goto	l3981
 10922  051E                     l4507:
 10923                           
 10924                           ; Switch size 1, requested type "simple"
 10925                           ; Number of cases is 13, Range of values is 0 to 17
 10926                           ; switch strategies available:
 10927                           ; Name         Instructions Cycles
 10928                           ; simple_byte           40    21 (average)
 10929                           ; direct_byte           42     6 (fixed)
 10930                           ; jumptable            260     6 (fixed)
 10931                           ;	Chosen strategy is simple_byte
 10932  051E  085E               	movf	??_JSN_Sensor_Init^(0+128),w
 10933  051F  3A00               	xorlw	0	; case 0
 10934  0520  1903               	skipnz
 10935  0521  2CFD               	goto	l37
 10936  0522  3A04               	xorlw	4	; case 4
 10937  0523  1903               	skipnz
 10938  0524  2CFD               	goto	l37
 10939  0525  3A02               	xorlw	2	; case 6
 10940  0526  1903               	skipnz
 10941  0527  2CFD               	goto	l37
 10942  0528  3A01               	xorlw	1	; case 7
 10943  0529  1903               	skipnz
 10944  052A  2CFD               	goto	l3979
 10945  052B  3A0F               	xorlw	15	; case 8
 10946  052C  1903               	skipnz
 10947  052D  2CFD               	goto	l3979
 10948  052E  3A01               	xorlw	1	; case 9
 10949  052F  1903               	skipnz
 10950  0530  2CFD               	goto	l3979
 10951  0531  3A03               	xorlw	3	; case 10
 10952  0532  1903               	skipnz
 10953  0533  2CFD               	goto	l3979
 10954  0534  3A06               	xorlw	6	; case 12
 10955  0535  1903               	skipnz
 10956  0536  2CFD               	goto	l3979
 10957  0537  3A01               	xorlw	1	; case 13
 10958  0538  1903               	skipnz
 10959  0539  2CFD               	goto	l3979
 10960  053A  3A03               	xorlw	3	; case 14
 10961  053B  1903               	skipnz
 10962  053C  2CFD               	goto	l3979
 10963  053D  3A01               	xorlw	1	; case 15
 10964  053E  1903               	skipnz
 10965  053F  2CFD               	goto	l3979
 10966  0540  3A1F               	xorlw	31	; case 16
 10967  0541  1903               	skipnz
 10968  0542  2CFD               	goto	l3979
 10969  0543  3A01               	xorlw	1	; case 17
 10970  0544  1903               	skipnz
 10971  0545  2CFD               	goto	l3979
 10972  0546  2D0C               	goto	l3981
 10973  0547                     l3991:
 10974                           
 10975                           ;JSN_Sensor.c: 76:     Sensor->distance = 0;
 10976  0547  0021               	movlb	1	; select bank1
 10977  0548  0860               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 10978  0549  3E02               	addlw	2
 10979  054A  0086               	movwf	6
 10980  054B  3001               	movlw	1	; select bank2/3
 10981  054C  0087               	movwf	7
 10982  054D  3000               	movlw	0
 10983  054E  3FC0               	movwi [0]fsr1
 10984  054F  3FC1               	movwi [1]fsr1
 10985  0550                     l3993:
 10986                           
 10987                           ;JSN_Sensor.c: 77:     Sensor->echoHighTime = 0;
 10988  0550  0860               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 10989  0551  0086               	movwf	6
 10990  0552  3001               	movlw	1	; select bank2/3
 10991  0553  0087               	movwf	7
 10992  0554  3000               	movlw	0
 10993  0555  3FC0               	movwi [0]fsr1
 10994  0556  3FC1               	movwi [1]fsr1
 10995  0557                     l3995:
 10996                           
 10997                           ;JSN_Sensor.c: 78:     Sensor->echoPin = echoPin;
 10998  0557  085D               	movf	JSN_Sensor_Init@echoPin^(0+128),w
 10999  0558  00DE               	movwf	??_JSN_Sensor_Init^(0+128)
 11000  0559  0860               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11001  055A  3E05               	addlw	5
 11002  055B  0086               	movwf	6
 11003  055C  3001               	movlw	1	; select bank2/3
 11004  055D  0087               	movwf	7
 11005  055E  085E               	movf	??_JSN_Sensor_Init^(0+128),w
 11006  055F  0081               	movwf	1
 11007  0560                     l3997:
 11008                           
 11009                           ;JSN_Sensor.c: 79:     Sensor->trigPin = trigPin;
 11010  0560  085C               	movf	JSN_Sensor_Init@trigPin^(0+128),w
 11011  0561  00DE               	movwf	??_JSN_Sensor_Init^(0+128)
 11012  0562  0860               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11013  0563  3E04               	addlw	4
 11014  0564  0086               	movwf	6
 11015  0565  3001               	movlw	1	; select bank2/3
 11016  0566  0087               	movwf	7
 11017  0567  085E               	movf	??_JSN_Sensor_Init^(0+128),w
 11018  0568  0081               	movwf	1
 11019  0569                     l3999:
 11020                           
 11021                           ;JSN_Sensor.c: 81:     lastTrig = Sensor;
 11022  0569  0860               	movf	JSN_Sensor_Init@Sensor^(0+128),w
 11023  056A  00DE               	movwf	??_JSN_Sensor_Init^(0+128)
 11024  056B  085E               	movf	??_JSN_Sensor_Init^(0+128),w
 11025  056C  00D9               	movwf	_lastTrig^(0+128)
 11026  056D                     l4001:
 11027                           
 11028                           ;JSN_Sensor.c: 83:     return 0x00;
 11029  056D  3000               	movlw	0
 11030  056E                     l32:
 11031  056E  0008               	return
 11032  056F                     __end_of_JSN_Sensor_Init:
 11033                           
 11034                           	psect	text32
 11035  0B46                     __ptext32:	
 11036 ;; *************** function _printf *****************
 11037 ;; Defined at:
 11038 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\printf.c"
 11039 ;; Parameters:    Size  Location     Type
 11040 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
 11041 ;;		 -> STR_4(3), STR_3(3), STR_2(58), STR_1(50), 
 11042 ;; Auto vars:     Size  Location     Type
 11043 ;;  ret             2    0        int 
 11044 ;;  ap              1    1[BANK1 ] PTR void [1]
 11045 ;;		 -> ?_printf(2), 
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  2   76[BANK0 ] int 
 11048 ;; Registers used:
 11049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11055 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11056 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11057 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11058 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;Total ram usage:        6 bytes
 11060 ;; Hardware stack levels used: 1
 11061 ;; Hardware stack levels required when called: 12
 11062 ;; This function calls:
 11063 ;;		_vfprintf
 11064 ;; This function is called by:
 11065 ;;		_JSN_Sensor_Init
 11066 ;;		_main
 11067 ;; This function uses a non-reentrant model
 11068 ;;
 11069                           
 11070  0B46                     _printf:	
 11071                           ;psect for function _printf
 11072                           
 11073  0B46                     l3753:	
 11074                           ;incstack = 0
 11075                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11076                           
 11077  0B46  306E               	movlw	(low ((?_printf| 0+2)))& (0+255)
 11078  0B47  0021               	movlb	1	; select bank1
 11079  0B48  00DA               	movwf	??_printf^(0+128)
 11080  0B49  085A               	movf	??_printf^(0+128),w
 11081  0B4A  00DB               	movwf	printf@ap^(0+128)
 11082  0B4B                     l3755:
 11083  0B4B  0020               	movlb	0	; select bank0
 11084  0B4C  086D               	movf	printf@fmt+1,w
 11085  0B4D  00E5               	movwf	vfprintf@fmt+1
 11086  0B4E  086C               	movf	printf@fmt,w
 11087  0B4F  00E4               	movwf	vfprintf@fmt
 11088  0B50  30DB               	movlw	(low (printf@ap| 0))& (0+255)
 11089  0B51  0021               	movlb	1	; select bank1
 11090  0B52  00DA               	movwf	??_printf^(0+128)
 11091  0B53  085A               	movf	??_printf^(0+128),w
 11092  0B54  0020               	movlb	0	; select bank0
 11093  0B55  00E6               	movwf	vfprintf@ap
 11094  0B56  3000               	movlw	0
 11095  0B57  318D  2552  318B   	fcall	_vfprintf
 11096  0B5A                     l1632:
 11097  0B5A  0008               	return
 11098  0B5B                     __end_of_printf:
 11099                           
 11100                           	psect	text33
 11101  0D52                     __ptext33:	
 11102 ;; *************** function _vfprintf *****************
 11103 ;; Defined at:
 11104 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11105 ;; Parameters:    Size  Location     Type
 11106 ;;  fp              1    wreg     PTR struct _IO_FILE
 11107 ;;		 -> NULL(0), 
 11108 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
 11109 ;;		 -> STR_4(3), STR_3(3), STR_2(58), STR_1(50), 
 11110 ;;  ap              1   70[BANK0 ] PTR PTR void 
 11111 ;;		 -> printf@ap(1), 
 11112 ;; Auto vars:     Size  Location     Type
 11113 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
 11114 ;;		 -> NULL(0), 
 11115 ;;  cfmt            2   74[BANK0 ] PTR unsigned char 
 11116 ;;		 -> STR_4(3), STR_3(3), STR_2(58), STR_1(50), 
 11117 ;; Return value:  Size  Location     Type
 11118 ;;                  2   68[BANK0 ] int 
 11119 ;; Registers used:
 11120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11121 ;; Tracked objects:
 11122 ;;		On entry : 0/0
 11123 ;;		On exit  : 0/0
 11124 ;;		Unchanged: 0/0
 11125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11126 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11127 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11128 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11129 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11130 ;;Total ram usage:        8 bytes
 11131 ;; Hardware stack levels used: 1
 11132 ;; Hardware stack levels required when called: 11
 11133 ;; This function calls:
 11134 ;;		_vfpfcnvrt
 11135 ;; This function is called by:
 11136 ;;		_printf
 11137 ;; This function uses a non-reentrant model
 11138 ;;
 11139                           
 11140  0D52                     _vfprintf:	
 11141                           ;psect for function _vfprintf
 11142                           
 11143                           
 11144                           ;incstack = 0
 11145                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11146                           ;vfprintf@fp stored from wreg
 11147  0D52  0020               	movlb	0	; select bank0
 11148  0D53  00E9               	movwf	vfprintf@fp
 11149  0D54                     l3661:
 11150                           
 11151                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 11152  0D54  0865               	movf	vfprintf@fmt+1,w
 11153  0D55  00EB               	movwf	vfprintf@cfmt+1
 11154  0D56  0864               	movf	vfprintf@fmt,w
 11155  0D57  00EA               	movwf	vfprintf@cfmt
 11156  0D58                     l3663:
 11157                           
 11158                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 11159  0D58  0021               	movlb	1	; select bank1
 11160  0D59  01A0               	clrf	_nout^(0+128)
 11161  0D5A  01A1               	clrf	(_nout+1)^(0+128)
 11162                           
 11163                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11164  0D5B  2D70               	goto	l3667
 11165  0D5C                     l3665:
 11166                           
 11167                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 11168  0D5C  306A               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 11169  0D5D  00E7               	movwf	??_vfprintf
 11170  0D5E  0867               	movf	??_vfprintf,w
 11171  0D5F  00D4               	movwf	vfpfcnvrt@fmt
 11172  0D60  0866               	movf	vfprintf@ap,w
 11173  0D61  00E8               	movwf	??_vfprintf+1
 11174  0D62  0868               	movf	??_vfprintf+1,w
 11175  0D63  00D5               	movwf	vfpfcnvrt@ap
 11176  0D64  0869               	movf	vfprintf@fp,w
 11177  0D65  3182  2298  318D   	fcall	_vfpfcnvrt
 11178  0D68  0020               	movlb	0	; select bank0
 11179  0D69  0854               	movf	?_vfpfcnvrt,w
 11180  0D6A  0021               	movlb	1	; select bank1
 11181  0D6B  07A0               	addwf	_nout^(0+128),f
 11182  0D6C  0020               	movlb	0	; select bank0
 11183  0D6D  0855               	movf	?_vfpfcnvrt+1,w
 11184  0D6E  0021               	movlb	1	; select bank1
 11185  0D6F  3DA1               	addwfc	(_nout+1)^(0+128),f
 11186  0D70                     l3667:
 11187                           
 11188                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11189  0D70  0020               	movlb	0	; select bank0
 11190  0D71  086A               	movf	vfprintf@cfmt,w
 11191  0D72  0084               	movwf	4
 11192  0D73  086B               	movf	vfprintf@cfmt+1,w
 11193  0D74  0085               	movwf	5
 11194  0D75  0012               	moviw fsr0++
 11195  0D76  1D03               	btfss	3,2
 11196  0D77  2D79               	goto	u1201
 11197  0D78  2D7A               	goto	u1200
 11198  0D79                     u1201:
 11199  0D79  2D5C               	goto	l3665
 11200  0D7A                     u1200:
 11201  0D7A                     l3669:
 11202                           
 11203                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 11204  0D7A  0021               	movlb	1	; select bank1
 11205  0D7B  0821               	movf	(_nout+1)^(0+128),w
 11206  0D7C  0020               	movlb	0	; select bank0
 11207  0D7D  00E5               	movwf	?_vfprintf+1
 11208  0D7E  0021               	movlb	1	; select bank1
 11209  0D7F  0820               	movf	_nout^(0+128),w
 11210  0D80  0020               	movlb	0	; select bank0
 11211  0D81  00E4               	movwf	?_vfprintf
 11212  0D82                     l1689:
 11213  0D82  0008               	return
 11214  0D83                     __end_of_vfprintf:
 11215                           
 11216                           	psect	text34
 11217  0298                     __ptext34:	
 11218 ;; *************** function _vfpfcnvrt *****************
 11219 ;; Defined at:
 11220 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11221 ;; Parameters:    Size  Location     Type
 11222 ;;  fp              1    wreg     PTR struct _IO_FILE
 11223 ;;		 -> NULL(0), 
 11224 ;;  fmt             1   52[BANK0 ] PTR PTR unsigned char 
 11225 ;;		 -> vfprintf@cfmt(2), 
 11226 ;;  ap              1   53[BANK0 ] PTR PTR void 
 11227 ;;		 -> printf@ap(1), 
 11228 ;; Auto vars:     Size  Location     Type
 11229 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
 11230 ;;		 -> NULL(0), 
 11231 ;;  llu             8   59[BANK0 ] unsigned long long 
 11232 ;;  ll              8    0        long long 
 11233 ;;  f               4    0        long long 
 11234 ;;  ct              3    0        unsigned char [3]
 11235 ;;  vp              2    0        PTR void 
 11236 ;;  i               2    0        int 
 11237 ;;  done            2    0        int 
 11238 ;;  cp              2    0        PTR unsigned char 
 11239 ;;  c               1    0        unsigned char 
 11240 ;; Return value:  Size  Location     Type
 11241 ;;                  2   52[BANK0 ] int 
 11242 ;; Registers used:
 11243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11244 ;; Tracked objects:
 11245 ;;		On entry : 0/0
 11246 ;;		On exit  : 0/0
 11247 ;;		Unchanged: 0/0
 11248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11249 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11250 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11251 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11252 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11253 ;;Total ram usage:       16 bytes
 11254 ;; Hardware stack levels used: 1
 11255 ;; Hardware stack levels required when called: 10
 11256 ;; This function calls:
 11257 ;;		_fputc
 11258 ;;		_utoa
 11259 ;; This function is called by:
 11260 ;;		_vfprintf
 11261 ;; This function uses a non-reentrant model
 11262 ;;
 11263                           
 11264  0298                     _vfpfcnvrt:	
 11265                           ;psect for function _vfpfcnvrt
 11266                           
 11267                           
 11268                           ;incstack = 0
 11269                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11270                           ;vfpfcnvrt@fp stored from wreg
 11271  0298  0020               	movlb	0	; select bank0
 11272  0299  00E3               	movwf	vfpfcnvrt@fp
 11273  029A                     l3311:
 11274                           
 11275                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 11276  029A  0854               	movf	vfpfcnvrt@fmt,w
 11277  029B  0086               	movwf	6
 11278  029C  0187               	clrf	7
 11279  029D  3F40               	moviw [0]fsr1
 11280  029E  00D6               	movwf	??_vfpfcnvrt
 11281  029F  3F41               	moviw [1]fsr1
 11282  02A0  00D7               	movwf	??_vfpfcnvrt+1
 11283  02A1  0856               	movf	??_vfpfcnvrt,w
 11284  02A2  0084               	movwf	4
 11285  02A3  0857               	movf	??_vfpfcnvrt+1,w
 11286  02A4  0085               	movwf	5
 11287  02A5  0012               	moviw fsr0++
 11288  02A6  3A25               	xorlw	37
 11289  02A7  1D03               	btfss	3,2
 11290  02A8  2AAA               	goto	u1151
 11291  02A9  2AAB               	goto	u1150
 11292  02AA                     u1151:
 11293  02AA  2B37               	goto	l3345
 11294  02AB                     u1150:
 11295  02AB                     l3313:
 11296                           
 11297                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 11298  02AB  0854               	movf	vfpfcnvrt@fmt,w
 11299  02AC  0086               	movwf	6
 11300  02AD  0187               	clrf	7
 11301  02AE  3001               	movlw	1
 11302  02AF  0781               	addwf	1,f
 11303  02B0  3141               	addfsr 1,1
 11304  02B1  1803               	skipnc
 11305  02B2  0A81               	incf	1,f
 11306  02B3                     l3315:
 11307                           
 11308                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 11309  02B3  0021               	movlb	1	; select bank1
 11310  02B4  01A2               	clrf	_width^(0+128)
 11311  02B5  01A3               	clrf	(_width+1)^(0+128)
 11312  02B6  01A6               	clrf	_flags^(0+128)
 11313  02B7  01A7               	clrf	(_flags+1)^(0+128)
 11314  02B8                     l3317:
 11315                           
 11316                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 11317  02B8  30FF               	movlw	255
 11318  02B9  00A4               	movwf	_prec^(0+128)
 11319  02BA  30FF               	movlw	255
 11320  02BB  00A5               	movwf	(_prec^(0+128)+1)
 11321  02BC                     l3319:
 11322                           
 11323                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
 11324  02BC  0020               	movlb	0	; select bank0
 11325  02BD  0854               	movf	vfpfcnvrt@fmt,w
 11326  02BE  0086               	movwf	6
 11327  02BF  0187               	clrf	7
 11328  02C0  3F40               	moviw [0]fsr1
 11329  02C1  00D6               	movwf	??_vfpfcnvrt
 11330  02C2  3F41               	moviw [1]fsr1
 11331  02C3  00D7               	movwf	??_vfpfcnvrt+1
 11332  02C4  0856               	movf	??_vfpfcnvrt,w
 11333  02C5  0084               	movwf	4
 11334  02C6  0857               	movf	??_vfpfcnvrt+1,w
 11335  02C7  0085               	movwf	5
 11336  02C8  0012               	moviw fsr0++
 11337  02C9  3A75               	xorlw	117
 11338  02CA  1D03               	btfss	3,2
 11339  02CB  2ACD               	goto	u1161
 11340  02CC  2ACE               	goto	u1160
 11341  02CD                     u1161:
 11342  02CD  2B02               	goto	l3329
 11343  02CE                     u1160:
 11344  02CE                     l3321:
 11345                           
 11346                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
 11347  02CE  0854               	movf	vfpfcnvrt@fmt,w
 11348  02CF  0086               	movwf	6
 11349  02D0  0187               	clrf	7
 11350  02D1  3001               	movlw	1
 11351  02D2  0781               	addwf	1,f
 11352  02D3  3141               	addfsr 1,1
 11353  02D4  1803               	skipnc
 11354  02D5  0A81               	incf	1,f
 11355  02D6                     l3323:
 11356                           
 11357                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 11358  02D6  0855               	movf	vfpfcnvrt@ap,w
 11359  02D7  0086               	movwf	6
 11360  02D8  0187               	clrf	7
 11361  02D9  0801               	movf	1,w
 11362  02DA  0084               	movwf	4
 11363  02DB  0185               	clrf	5
 11364  02DC  3002               	movlw	2
 11365  02DD  0781               	addwf	1,f
 11366  02DE  3F00               	moviw [0]fsr0
 11367  02DF  00DB               	movwf	vfpfcnvrt@llu
 11368  02E0  3F01               	moviw [1]fsr0
 11369  02E1  00DC               	movwf	vfpfcnvrt@llu+1
 11370  02E2  01DD               	clrf	vfpfcnvrt@llu+2
 11371  02E3  01DE               	clrf	vfpfcnvrt@llu+3
 11372  02E4  01DF               	clrf	vfpfcnvrt@llu+4
 11373  02E5  01E0               	clrf	vfpfcnvrt@llu+5
 11374  02E6  01E1               	clrf	vfpfcnvrt@llu+6
 11375  02E7  01E2               	clrf	vfpfcnvrt@llu+7
 11376  02E8                     l3325:
 11377                           
 11378                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
 11379  02E8  085B               	movf	vfpfcnvrt@llu,w
 11380  02E9  00BC               	movwf	utoa@d
 11381  02EA  085C               	movf	vfpfcnvrt@llu+1,w
 11382  02EB  00BD               	movwf	utoa@d+1
 11383  02EC  085D               	movf	vfpfcnvrt@llu+2,w
 11384  02ED  00BE               	movwf	utoa@d+2
 11385  02EE  085E               	movf	vfpfcnvrt@llu+3,w
 11386  02EF  00BF               	movwf	utoa@d+3
 11387  02F0  085F               	movf	vfpfcnvrt@llu+4,w
 11388  02F1  00C0               	movwf	utoa@d+4
 11389  02F2  0860               	movf	vfpfcnvrt@llu+5,w
 11390  02F3  00C1               	movwf	utoa@d+5
 11391  02F4  0861               	movf	vfpfcnvrt@llu+6,w
 11392  02F5  00C2               	movwf	utoa@d+6
 11393  02F6  0862               	movf	vfpfcnvrt@llu+7,w
 11394  02F7  00C3               	movwf	utoa@d+7
 11395  02F8  0863               	movf	vfpfcnvrt@fp,w
 11396  02F9  3181  21A9  3182   	fcall	_utoa
 11397  02FC  0020               	movlb	0	; select bank0
 11398  02FD  083D               	movf	?_utoa+1,w
 11399  02FE  00D5               	movwf	?_vfpfcnvrt+1
 11400  02FF  083C               	movf	?_utoa,w
 11401  0300  00D4               	movwf	?_vfpfcnvrt
 11402  0301  2B5A               	goto	l1682
 11403  0302                     l3329:
 11404                           
 11405                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 11406  0302  0854               	movf	vfpfcnvrt@fmt,w
 11407  0303  0086               	movwf	6
 11408  0304  0187               	clrf	7
 11409  0305  3F40               	moviw [0]fsr1
 11410  0306  00D6               	movwf	??_vfpfcnvrt
 11411  0307  3F41               	moviw [1]fsr1
 11412  0308  00D7               	movwf	??_vfpfcnvrt+1
 11413  0309  0856               	movf	??_vfpfcnvrt,w
 11414  030A  0084               	movwf	4
 11415  030B  0857               	movf	??_vfpfcnvrt+1,w
 11416  030C  0085               	movwf	5
 11417  030D  0012               	moviw fsr0++
 11418  030E  3A25               	xorlw	37
 11419  030F  1D03               	btfss	3,2
 11420  0310  2B12               	goto	u1171
 11421  0311  2B13               	goto	u1170
 11422  0312                     u1171:
 11423  0312  2B2C               	goto	l3339
 11424  0313                     u1170:
 11425  0313                     l3331:
 11426                           
 11427                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 11428  0313  0854               	movf	vfpfcnvrt@fmt,w
 11429  0314  0086               	movwf	6
 11430  0315  0187               	clrf	7
 11431  0316  3001               	movlw	1
 11432  0317  0781               	addwf	1,f
 11433  0318  3141               	addfsr 1,1
 11434  0319  1803               	skipnc
 11435  031A  0A81               	incf	1,f
 11436  031B                     l3333:
 11437                           
 11438                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 11439  031B  3025               	movlw	37
 11440  031C  00A3               	movwf	fputc@c
 11441  031D  3000               	movlw	0
 11442  031E  00A4               	movwf	fputc@c+1
 11443  031F  0863               	movf	vfpfcnvrt@fp,w
 11444  0320  00D6               	movwf	??_vfpfcnvrt
 11445  0321  0856               	movf	??_vfpfcnvrt,w
 11446  0322  00A5               	movwf	fputc@fp
 11447  0323  318F  2764  3182   	fcall	_fputc
 11448  0326                     l3335:
 11449                           
 11450                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 11451  0326  3001               	movlw	1
 11452  0327  0020               	movlb	0	; select bank0
 11453  0328  00D4               	movwf	?_vfpfcnvrt
 11454  0329  3000               	movlw	0
 11455  032A  00D5               	movwf	?_vfpfcnvrt+1
 11456  032B  2B5A               	goto	l1682
 11457  032C                     l3339:
 11458                           
 11459                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 11460  032C  0854               	movf	vfpfcnvrt@fmt,w
 11461  032D  0086               	movwf	6
 11462  032E  0187               	clrf	7
 11463  032F  3001               	movlw	1
 11464  0330  0781               	addwf	1,f
 11465  0331  3141               	addfsr 1,1
 11466  0332  1803               	skipnc
 11467  0333  0A81               	incf	1,f
 11468  0334                     l3341:
 11469                           
 11470                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 11471  0334  01D4               	clrf	?_vfpfcnvrt
 11472  0335  01D5               	clrf	?_vfpfcnvrt+1
 11473  0336  2B5A               	goto	l1682
 11474  0337                     l3345:
 11475                           
 11476                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 11477  0337  0854               	movf	vfpfcnvrt@fmt,w
 11478  0338  0086               	movwf	6
 11479  0339  0187               	clrf	7
 11480  033A  3F40               	moviw [0]fsr1
 11481  033B  00D6               	movwf	??_vfpfcnvrt
 11482  033C  3F41               	moviw [1]fsr1
 11483  033D  00D7               	movwf	??_vfpfcnvrt+1
 11484  033E  0856               	movf	??_vfpfcnvrt,w
 11485  033F  0084               	movwf	4
 11486  0340  0857               	movf	??_vfpfcnvrt+1,w
 11487  0341  0085               	movwf	5
 11488  0342  0800               	movf	0,w	;code access
 11489  0343  00D8               	movwf	??_vfpfcnvrt+2
 11490  0344  01D9               	clrf	??_vfpfcnvrt+3
 11491  0345  0858               	movf	??_vfpfcnvrt+2,w
 11492  0346  00A3               	movwf	fputc@c
 11493  0347  0859               	movf	??_vfpfcnvrt+3,w
 11494  0348  00A4               	movwf	fputc@c+1
 11495  0349  0863               	movf	vfpfcnvrt@fp,w
 11496  034A  00DA               	movwf	??_vfpfcnvrt+4
 11497  034B  085A               	movf	??_vfpfcnvrt+4,w
 11498  034C  00A5               	movwf	fputc@fp
 11499  034D  318F  2764  3182   	fcall	_fputc
 11500  0350                     l3347:
 11501                           
 11502                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 11503  0350  0020               	movlb	0	; select bank0
 11504  0351  0854               	movf	vfpfcnvrt@fmt,w
 11505  0352  0086               	movwf	6
 11506  0353  0187               	clrf	7
 11507  0354  3001               	movlw	1
 11508  0355  0781               	addwf	1,f
 11509  0356  3141               	addfsr 1,1
 11510  0357  1803               	skipnc
 11511  0358  0A81               	incf	1,f
 11512  0359  2B26               	goto	l3335
 11513  035A                     l1682:
 11514  035A  0008               	return
 11515  035B                     __end_of_vfpfcnvrt:
 11516                           
 11517                           	psect	text35
 11518  01A9                     __ptext35:	
 11519 ;; *************** function _utoa *****************
 11520 ;; Defined at:
 11521 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11522 ;; Parameters:    Size  Location     Type
 11523 ;;  fp              1    wreg     PTR struct _IO_FILE
 11524 ;;		 -> NULL(0), 
 11525 ;;  d               8   28[BANK0 ] unsigned long long 
 11526 ;; Auto vars:     Size  Location     Type
 11527 ;;  fp              1   39[BANK0 ] PTR struct _IO_FILE
 11528 ;;		 -> NULL(0), 
 11529 ;;  n               8   42[BANK0 ] unsigned long long 
 11530 ;;  i               2   50[BANK0 ] int 
 11531 ;;  w               2   40[BANK0 ] int 
 11532 ;;  p               2   37[BANK0 ] int 
 11533 ;; Return value:  Size  Location     Type
 11534 ;;                  2   28[BANK0 ] int 
 11535 ;; Registers used:
 11536 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11537 ;; Tracked objects:
 11538 ;;		On entry : 0/0
 11539 ;;		On exit  : 0/0
 11540 ;;		Unchanged: 0/0
 11541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11542 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11543 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11544 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11545 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11546 ;;Total ram usage:       24 bytes
 11547 ;; Hardware stack levels used: 1
 11548 ;; Hardware stack levels required when called: 9
 11549 ;; This function calls:
 11550 ;;		___lodiv
 11551 ;;		___lomod
 11552 ;;		_pad
 11553 ;; This function is called by:
 11554 ;;		_vfpfcnvrt
 11555 ;; This function uses a non-reentrant model
 11556 ;;
 11557                           
 11558  01A9                     _utoa:	
 11559                           ;psect for function _utoa
 11560                           
 11561                           
 11562                           ;incstack = 0
 11563                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11564                           ;utoa@fp stored from wreg
 11565  01A9  0020               	movlb	0	; select bank0
 11566  01AA  00C7               	movwf	utoa@fp
 11567  01AB                     l3253:
 11568                           
 11569                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
 11570  01AB  0021               	movlb	1	; select bank1
 11571  01AC  1BA5               	btfsc	(_prec+1)^(0+128),7
 11572  01AD  29AF               	goto	u1081
 11573  01AE  29B0               	goto	u1080
 11574  01AF                     u1081:
 11575  01AF  29B4               	goto	l1665
 11576  01B0                     u1080:
 11577  01B0                     l3255:
 11578                           
 11579                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
 11580  01B0  30FD               	movlw	253
 11581  01B1  05A6               	andwf	_flags^(0+128),f
 11582  01B2  30FF               	movlw	255
 11583  01B3  05A7               	andwf	(_flags+1)^(0+128),f
 11584  01B4                     l1665:	
 11585                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 623:     }
 11586                           
 11587                           
 11588                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
 11589  01B4  0825               	movf	(_prec+1)^(0+128),w
 11590  01B5  3A80               	xorlw	128
 11591  01B6  0020               	movlb	0	; select bank0
 11592  01B7  00C4               	movwf	??_utoa
 11593  01B8  3080               	movlw	128
 11594  01B9  0244               	subwf	??_utoa,w
 11595  01BA  1D03               	skipz
 11596  01BB  29BF               	goto	u1095
 11597  01BC  3001               	movlw	1
 11598  01BD  0021               	movlb	1	; select bank1
 11599  01BE  0224               	subwf	_prec^(0+128),w
 11600  01BF                     u1095:
 11601  01BF  1803               	skipnc
 11602  01C0  29C2               	goto	u1091
 11603  01C1  29C3               	goto	u1090
 11604  01C2                     u1091:
 11605  01C2  29C9               	goto	l3259
 11606  01C3                     u1090:
 11607  01C3                     l3257:
 11608  01C3  3001               	movlw	1
 11609  01C4  0020               	movlb	0	; select bank0
 11610  01C5  00C5               	movwf	utoa@p
 11611  01C6  3000               	movlw	0
 11612  01C7  00C6               	movwf	utoa@p+1
 11613  01C8  29D1               	goto	l1669
 11614  01C9                     l3259:
 11615  01C9  0021               	movlb	1	; select bank1
 11616  01CA  0825               	movf	(_prec+1)^(0+128),w
 11617  01CB  0020               	movlb	0	; select bank0
 11618  01CC  00C6               	movwf	utoa@p+1
 11619  01CD  0021               	movlb	1	; select bank1
 11620  01CE  0824               	movf	_prec^(0+128),w
 11621  01CF  0020               	movlb	0	; select bank0
 11622  01D0  00C5               	movwf	utoa@p
 11623  01D1                     l1669:
 11624                           
 11625                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
 11626  01D1  0021               	movlb	1	; select bank1
 11627  01D2  0823               	movf	(_width+1)^(0+128),w
 11628  01D3  0020               	movlb	0	; select bank0
 11629  01D4  00C9               	movwf	utoa@w+1
 11630  01D5  0021               	movlb	1	; select bank1
 11631  01D6  0822               	movf	_width^(0+128),w
 11632  01D7  0020               	movlb	0	; select bank0
 11633  01D8  00C8               	movwf	utoa@w
 11634  01D9                     l3261:
 11635                           
 11636                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 628:     n = d;
 11637  01D9  083C               	movf	utoa@d,w
 11638  01DA  00CA               	movwf	utoa@n
 11639  01DB  083D               	movf	utoa@d+1,w
 11640  01DC  00CB               	movwf	utoa@n+1
 11641  01DD  083E               	movf	utoa@d+2,w
 11642  01DE  00CC               	movwf	utoa@n+2
 11643  01DF  083F               	movf	utoa@d+3,w
 11644  01E0  00CD               	movwf	utoa@n+3
 11645  01E1  0840               	movf	utoa@d+4,w
 11646  01E2  00CE               	movwf	utoa@n+4
 11647  01E3  0841               	movf	utoa@d+5,w
 11648  01E4  00CF               	movwf	utoa@n+5
 11649  01E5  0842               	movf	utoa@d+6,w
 11650  01E6  00D0               	movwf	utoa@n+6
 11651  01E7  0843               	movf	utoa@d+7,w
 11652  01E8  00D1               	movwf	utoa@n+7
 11653                           
 11654                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
 11655  01E9  301F               	movlw	31
 11656  01EA  00D2               	movwf	utoa@i
 11657  01EB  3000               	movlw	0
 11658  01EC  00D3               	movwf	utoa@i+1
 11659  01ED                     l3263:
 11660                           
 11661                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
 11662  01ED  0023               	movlb	3	; select bank3
 11663  01EE  01BF               	clrf	(_dbuf^(0+384)+31)
 11664                           
 11665                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11666  01EF  2A51               	goto	l3275
 11667  01F0                     l3265:
 11668                           
 11669                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 632:         --i;
 11670  01F0  30FF               	movlw	255
 11671  01F1  0020               	movlb	0	; select bank0
 11672  01F2  07D2               	addwf	utoa@i,f
 11673  01F3  30FF               	movlw	255
 11674  01F4  3DD3               	addwfc	utoa@i+1,f
 11675  01F5                     l3267:
 11676                           
 11677                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
 11678  01F5  300A               	movlw	10
 11679  01F6  00A0               	movwf	___lomod@divisor
 11680  01F7  01A1               	clrf	___lomod@divisor+1
 11681  01F8  01A2               	clrf	___lomod@divisor+2
 11682  01F9  01A3               	clrf	___lomod@divisor+3
 11683  01FA  01A4               	clrf	___lomod@divisor+4
 11684  01FB  01A5               	clrf	___lomod@divisor+5
 11685  01FC  01A6               	clrf	___lomod@divisor+6
 11686  01FD  01A7               	clrf	___lomod@divisor+7
 11687  01FE  084A               	movf	utoa@n,w
 11688  01FF  00A8               	movwf	___lomod@dividend
 11689  0200  084B               	movf	utoa@n+1,w
 11690  0201  00A9               	movwf	___lomod@dividend+1
 11691  0202  084C               	movf	utoa@n+2,w
 11692  0203  00AA               	movwf	___lomod@dividend+2
 11693  0204  084D               	movf	utoa@n+3,w
 11694  0205  00AB               	movwf	___lomod@dividend+3
 11695  0206  084E               	movf	utoa@n+4,w
 11696  0207  00AC               	movwf	___lomod@dividend+4
 11697  0208  084F               	movf	utoa@n+5,w
 11698  0209  00AD               	movwf	___lomod@dividend+5
 11699  020A  0850               	movf	utoa@n+6,w
 11700  020B  00AE               	movwf	___lomod@dividend+6
 11701  020C  0851               	movf	utoa@n+7,w
 11702  020D  00AF               	movwf	___lomod@dividend+7
 11703  020E  3186  268A  3181   	fcall	___lomod
 11704  0211  0020               	movlb	0	; select bank0
 11705  0212  0820               	movf	?___lomod,w
 11706  0213  3E30               	addlw	48
 11707  0214  00C4               	movwf	??_utoa
 11708  0215  0852               	movf	utoa@i,w
 11709  0216  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11710  0217  0086               	movwf	6
 11711  0218  3001               	movlw	1	; select bank3/4
 11712  0219  0087               	movwf	7
 11713  021A  0844               	movf	??_utoa,w
 11714  021B  0081               	movwf	1
 11715  021C                     l3269:
 11716                           
 11717                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 634:         --p;
 11718  021C  30FF               	movlw	255
 11719  021D  07C5               	addwf	utoa@p,f
 11720  021E  30FF               	movlw	255
 11721  021F  3DC6               	addwfc	utoa@p+1,f
 11722  0220                     l3271:
 11723                           
 11724                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 635:         --w;
 11725  0220  30FF               	movlw	255
 11726  0221  07C8               	addwf	utoa@w,f
 11727  0222  30FF               	movlw	255
 11728  0223  3DC9               	addwfc	utoa@w+1,f
 11729  0224                     l3273:
 11730                           
 11731                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
 11732  0224  300A               	movlw	10
 11733  0225  00A0               	movwf	___lodiv@divisor
 11734  0226  01A1               	clrf	___lodiv@divisor+1
 11735  0227  01A2               	clrf	___lodiv@divisor+2
 11736  0228  01A3               	clrf	___lodiv@divisor+3
 11737  0229  01A4               	clrf	___lodiv@divisor+4
 11738  022A  01A5               	clrf	___lodiv@divisor+5
 11739  022B  01A6               	clrf	___lodiv@divisor+6
 11740  022C  01A7               	clrf	___lodiv@divisor+7
 11741  022D  084A               	movf	utoa@n,w
 11742  022E  00A8               	movwf	___lodiv@dividend
 11743  022F  084B               	movf	utoa@n+1,w
 11744  0230  00A9               	movwf	___lodiv@dividend+1
 11745  0231  084C               	movf	utoa@n+2,w
 11746  0232  00AA               	movwf	___lodiv@dividend+2
 11747  0233  084D               	movf	utoa@n+3,w
 11748  0234  00AB               	movwf	___lodiv@dividend+3
 11749  0235  084E               	movf	utoa@n+4,w
 11750  0236  00AC               	movwf	___lodiv@dividend+4
 11751  0237  084F               	movf	utoa@n+5,w
 11752  0238  00AD               	movwf	___lodiv@dividend+5
 11753  0239  0850               	movf	utoa@n+6,w
 11754  023A  00AE               	movwf	___lodiv@dividend+6
 11755  023B  0851               	movf	utoa@n+7,w
 11756  023C  00AF               	movwf	___lodiv@dividend+7
 11757  023D  3186  2606  3181   	fcall	___lodiv
 11758  0240  0020               	movlb	0	; select bank0
 11759  0241  0820               	movf	?___lodiv,w
 11760  0242  00CA               	movwf	utoa@n
 11761  0243  0821               	movf	?___lodiv+1,w
 11762  0244  00CB               	movwf	utoa@n+1
 11763  0245  0822               	movf	?___lodiv+2,w
 11764  0246  00CC               	movwf	utoa@n+2
 11765  0247  0823               	movf	?___lodiv+3,w
 11766  0248  00CD               	movwf	utoa@n+3
 11767  0249  0824               	movf	?___lodiv+4,w
 11768  024A  00CE               	movwf	utoa@n+4
 11769  024B  0825               	movf	?___lodiv+5,w
 11770  024C  00CF               	movwf	utoa@n+5
 11771  024D  0826               	movf	?___lodiv+6,w
 11772  024E  00D0               	movwf	utoa@n+6
 11773  024F  0827               	movf	?___lodiv+7,w
 11774  0250  00D1               	movwf	utoa@n+7
 11775  0251                     l3275:
 11776                           
 11777                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11778  0251  0020               	movlb	0	; select bank0
 11779  0252  0852               	movf	utoa@i,w
 11780  0253  0453               	iorwf	utoa@i+1,w
 11781  0254  1903               	btfsc	3,2
 11782  0255  2A57               	goto	u1101
 11783  0256  2A58               	goto	u1100
 11784  0257                     u1101:
 11785  0257  2A84               	goto	l3285
 11786  0258                     u1100:
 11787  0258                     l3277:
 11788  0258  084A               	movf	utoa@n,w
 11789  0259  044B               	iorwf	utoa@n+1,w
 11790  025A  044C               	iorwf	utoa@n+2,w
 11791  025B  044D               	iorwf	utoa@n+3,w
 11792  025C  044E               	iorwf	utoa@n+4,w
 11793  025D  044F               	iorwf	utoa@n+5,w
 11794  025E  0450               	iorwf	utoa@n+6,w
 11795  025F  0451               	iorwf	utoa@n+7,w
 11796  0260  1D03               	skipz
 11797  0261  2A63               	goto	u1111
 11798  0262  2A64               	goto	u1110
 11799  0263                     u1111:
 11800  0263  29F0               	goto	l3265
 11801  0264                     u1110:
 11802  0264                     l3279:
 11803  0264  0846               	movf	utoa@p+1,w
 11804  0265  3A80               	xorlw	128
 11805  0266  00C4               	movwf	??_utoa
 11806  0267  3080               	movlw	128
 11807  0268  0244               	subwf	??_utoa,w
 11808  0269  1D03               	skipz
 11809  026A  2A6D               	goto	u1125
 11810  026B  3001               	movlw	1
 11811  026C  0245               	subwf	utoa@p,w
 11812  026D                     u1125:
 11813  026D  1803               	skipnc
 11814  026E  2A70               	goto	u1121
 11815  026F  2A71               	goto	u1120
 11816  0270                     u1121:
 11817  0270  29F0               	goto	l3265
 11818  0271                     u1120:
 11819  0271                     l3281:
 11820  0271  0020               	movlb	0	; select bank0
 11821  0272  0849               	movf	utoa@w+1,w
 11822  0273  3A80               	xorlw	128
 11823  0274  00C4               	movwf	??_utoa
 11824  0275  3080               	movlw	128
 11825  0276  0244               	subwf	??_utoa,w
 11826  0277  1D03               	skipz
 11827  0278  2A7B               	goto	u1135
 11828  0279  3001               	movlw	1
 11829  027A  0248               	subwf	utoa@w,w
 11830  027B                     u1135:
 11831  027B  1C03               	skipc
 11832  027C  2A7E               	goto	u1131
 11833  027D  2A7F               	goto	u1130
 11834  027E                     u1131:
 11835  027E  2A84               	goto	l3285
 11836  027F                     u1130:
 11837  027F                     l3283:
 11838  027F  0021               	movlb	1	; select bank1
 11839  0280  18A6               	btfsc	_flags^(0+128),1
 11840  0281  2A83               	goto	u1141
 11841  0282  2A84               	goto	u1140
 11842  0283                     u1141:
 11843  0283  29F0               	goto	l3265
 11844  0284                     u1140:
 11845  0284                     l3285:
 11846                           
 11847                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
 11848  0284  0020               	movlb	0	; select bank0
 11849  0285  0852               	movf	utoa@i,w
 11850  0286  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11851  0287  00C4               	movwf	??_utoa
 11852  0288  0844               	movf	??_utoa,w
 11853  0289  00B3               	movwf	pad@buf
 11854  028A  0849               	movf	utoa@w+1,w
 11855  028B  00B5               	movwf	pad@p+1
 11856  028C  0848               	movf	utoa@w,w
 11857  028D  00B4               	movwf	pad@p
 11858  028E  0847               	movf	utoa@fp,w
 11859  028F  318F  27A7  3181   	fcall	_pad
 11860  0292  0020               	movlb	0	; select bank0
 11861  0293  0834               	movf	?_pad+1,w
 11862  0294  00BD               	movwf	?_utoa+1
 11863  0295  0833               	movf	?_pad,w
 11864  0296  00BC               	movwf	?_utoa
 11865  0297                     l1677:
 11866  0297  0008               	return
 11867  0298                     __end_of_utoa:
 11868                           
 11869                           	psect	text36
 11870  0FA7                     __ptext36:	
 11871 ;; *************** function _pad *****************
 11872 ;; Defined at:
 11873 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11874 ;; Parameters:    Size  Location     Type
 11875 ;;  fp              1    wreg     PTR struct _IO_FILE
 11876 ;;		 -> NULL(0), 
 11877 ;;  buf             1   19[BANK0 ] PTR unsigned char 
 11878 ;;		 -> dbuf(32), 
 11879 ;;  p               2   20[BANK0 ] int 
 11880 ;; Auto vars:     Size  Location     Type
 11881 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 11882 ;;		 -> NULL(0), 
 11883 ;;  w               2   25[BANK0 ] int 
 11884 ;;  i               2   23[BANK0 ] int 
 11885 ;; Return value:  Size  Location     Type
 11886 ;;                  2   19[BANK0 ] int 
 11887 ;; Registers used:
 11888 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11889 ;; Tracked objects:
 11890 ;;		On entry : 0/0
 11891 ;;		On exit  : 0/0
 11892 ;;		Unchanged: 0/0
 11893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11894 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11895 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11896 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11897 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11898 ;;Total ram usage:        9 bytes
 11899 ;; Hardware stack levels used: 1
 11900 ;; Hardware stack levels required when called: 8
 11901 ;; This function calls:
 11902 ;;		_fputc
 11903 ;;		_fputs
 11904 ;;		_strlen
 11905 ;; This function is called by:
 11906 ;;		_utoa
 11907 ;; This function uses a non-reentrant model
 11908 ;;
 11909                           
 11910  0FA7                     _pad:	
 11911                           ;psect for function _pad
 11912                           
 11913                           
 11914                           ;incstack = 0
 11915                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11916                           ;pad@fp stored from wreg
 11917  0FA7  0020               	movlb	0	; select bank0
 11918  0FA8  00BB               	movwf	pad@fp
 11919  0FA9                     l3233:
 11920                           
 11921                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 11922  0FA9  0021               	movlb	1	; select bank1
 11923  0FAA  1C26               	btfss	_flags^(0+128),0
 11924  0FAB  2FAD               	goto	u1041
 11925  0FAC  2FAE               	goto	u1040
 11926  0FAD                     u1041:
 11927  0FAD  2FB7               	goto	l3237
 11928  0FAE                     u1040:
 11929  0FAE                     l3235:
 11930                           
 11931                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 11932  0FAE  0020               	movlb	0	; select bank0
 11933  0FAF  083B               	movf	pad@fp,w
 11934  0FB0  00B6               	movwf	??_pad
 11935  0FB1  0836               	movf	??_pad,w
 11936  0FB2  00AB               	movwf	fputs@fp
 11937  0FB3  0833               	movf	pad@buf,w
 11938  0FB4  318C  24D1  318F   	fcall	_fputs
 11939  0FB7                     l3237:
 11940                           
 11941                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 11942  0FB7  0020               	movlb	0	; select bank0
 11943  0FB8  1BB5               	btfsc	pad@p+1,7
 11944  0FB9  2FBB               	goto	u1051
 11945  0FBA  2FBC               	goto	u1050
 11946  0FBB                     u1051:
 11947  0FBB  2FC1               	goto	l3241
 11948  0FBC                     u1050:
 11949  0FBC                     l3239:
 11950  0FBC  0835               	movf	pad@p+1,w
 11951  0FBD  00BA               	movwf	pad@w+1
 11952  0FBE  0834               	movf	pad@p,w
 11953  0FBF  00B9               	movwf	pad@w
 11954  0FC0  2FC3               	goto	l1657
 11955  0FC1                     l3241:
 11956  0FC1  01B9               	clrf	pad@w
 11957  0FC2  01BA               	clrf	pad@w+1
 11958  0FC3                     l1657:
 11959                           
 11960                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 11961  0FC3  01B7               	clrf	pad@i
 11962  0FC4  01B8               	clrf	pad@i+1
 11963                           
 11964                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 11965  0FC5  2FD7               	goto	l3247
 11966  0FC6                     l3243:
 11967                           
 11968                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 11969  0FC6  3020               	movlw	32
 11970  0FC7  0020               	movlb	0	; select bank0
 11971  0FC8  00A3               	movwf	fputc@c
 11972  0FC9  3000               	movlw	0
 11973  0FCA  00A4               	movwf	fputc@c+1
 11974  0FCB  083B               	movf	pad@fp,w
 11975  0FCC  00B6               	movwf	??_pad
 11976  0FCD  0836               	movf	??_pad,w
 11977  0FCE  00A5               	movwf	fputc@fp
 11978  0FCF  318F  2764  318F   	fcall	_fputc
 11979  0FD2                     l3245:
 11980                           
 11981                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
 11982  0FD2  3001               	movlw	1
 11983  0FD3  0020               	movlb	0	; select bank0
 11984  0FD4  07B7               	addwf	pad@i,f
 11985  0FD5  3000               	movlw	0
 11986  0FD6  3DB8               	addwfc	pad@i+1,f
 11987  0FD7                     l3247:
 11988                           
 11989                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 11990  0FD7  0838               	movf	pad@i+1,w
 11991  0FD8  3A80               	xorlw	128
 11992  0FD9  00B6               	movwf	??_pad
 11993  0FDA  083A               	movf	pad@w+1,w
 11994  0FDB  3A80               	xorlw	128
 11995  0FDC  0236               	subwf	??_pad,w
 11996  0FDD  1D03               	skipz
 11997  0FDE  2FE1               	goto	u1065
 11998  0FDF  0839               	movf	pad@w,w
 11999  0FE0  0237               	subwf	pad@i,w
 12000  0FE1                     u1065:
 12001  0FE1  1C03               	skipc
 12002  0FE2  2FE4               	goto	u1061
 12003  0FE3  2FE5               	goto	u1060
 12004  0FE4                     u1061:
 12005  0FE4  2FC6               	goto	l3243
 12006  0FE5                     u1060:
 12007  0FE5                     l1660:
 12008                           
 12009                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12010  0FE5  0021               	movlb	1	; select bank1
 12011  0FE6  1826               	btfsc	_flags^(0+128),0
 12012  0FE7  2FE9               	goto	u1071
 12013  0FE8  2FEA               	goto	u1070
 12014  0FE9                     u1071:
 12015  0FE9  2FF3               	goto	l1661
 12016  0FEA                     u1070:
 12017  0FEA                     l3249:
 12018                           
 12019                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12020  0FEA  0020               	movlb	0	; select bank0
 12021  0FEB  083B               	movf	pad@fp,w
 12022  0FEC  00B6               	movwf	??_pad
 12023  0FED  0836               	movf	??_pad,w
 12024  0FEE  00AB               	movwf	fputs@fp
 12025  0FEF  0833               	movf	pad@buf,w
 12026  0FF0  318C  24D1  318F   	fcall	_fputs
 12027  0FF3                     l1661:	
 12028                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 92:     }
 12029                           
 12030                           
 12031                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12032  0FF3  0020               	movlb	0	; select bank0
 12033  0FF4  0833               	movf	pad@buf,w
 12034  0FF5  318C  245C  318F   	fcall	_strlen
 12035  0FF8  0020               	movlb	0	; select bank0
 12036  0FF9  0839               	movf	pad@w,w
 12037  0FFA  0720               	addwf	?_strlen,w
 12038  0FFB  00B3               	movwf	?_pad
 12039  0FFC  083A               	movf	pad@w+1,w
 12040  0FFD  3D21               	addwfc	?_strlen+1,w
 12041  0FFE  00B4               	movwf	?_pad+1
 12042  0FFF                     l1662:
 12043  0FFF  0008               	return
 12044  1000                     __end_of_pad:
 12045                           
 12046                           	psect	text37
 12047  0C5C                     __ptext37:	
 12048 ;; *************** function _strlen *****************
 12049 ;; Defined at:
 12050 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
 12051 ;; Parameters:    Size  Location     Type
 12052 ;;  s               1    wreg     PTR const unsigned char 
 12053 ;;		 -> dbuf(32), 
 12054 ;; Auto vars:     Size  Location     Type
 12055 ;;  s               1    4[BANK0 ] PTR const unsigned char 
 12056 ;;		 -> dbuf(32), 
 12057 ;;  a               1    3[BANK0 ] PTR const unsigned char 
 12058 ;;		 -> dbuf(32), 
 12059 ;; Return value:  Size  Location     Type
 12060 ;;                  2    0[BANK0 ] unsigned int 
 12061 ;; Registers used:
 12062 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12063 ;; Tracked objects:
 12064 ;;		On entry : 0/0
 12065 ;;		On exit  : 0/0
 12066 ;;		Unchanged: 0/0
 12067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12068 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12069 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12070 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12071 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12072 ;;Total ram usage:        5 bytes
 12073 ;; Hardware stack levels used: 1
 12074 ;; Hardware stack levels required when called: 4
 12075 ;; This function calls:
 12076 ;;		Nothing
 12077 ;; This function is called by:
 12078 ;;		_pad
 12079 ;; This function uses a non-reentrant model
 12080 ;;
 12081                           
 12082  0C5C                     _strlen:	
 12083                           ;psect for function _strlen
 12084                           
 12085                           
 12086                           ;incstack = 0
 12087                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 12088                           ;strlen@s stored from wreg
 12089  0C5C  0020               	movlb	0	; select bank0
 12090  0C5D  00A4               	movwf	strlen@s
 12091  0C5E                     l3185:
 12092  0C5E  0824               	movf	strlen@s,w
 12093  0C5F  00A2               	movwf	??_strlen
 12094  0C60  0822               	movf	??_strlen,w
 12095  0C61  00A3               	movwf	strlen@a
 12096  0C62  2C67               	goto	l3189
 12097  0C63                     l3187:
 12098  0C63  3001               	movlw	1
 12099  0C64  00A2               	movwf	??_strlen
 12100  0C65  0822               	movf	??_strlen,w
 12101  0C66  07A4               	addwf	strlen@s,f
 12102  0C67                     l3189:
 12103  0C67  0824               	movf	strlen@s,w
 12104  0C68  0086               	movwf	6
 12105  0C69  3001               	movlw	1	; select bank2/3
 12106  0C6A  0087               	movwf	7
 12107  0C6B  0801               	movf	1,w
 12108  0C6C  1D03               	btfss	3,2
 12109  0C6D  2C6F               	goto	u941
 12110  0C6E  2C70               	goto	u940
 12111  0C6F                     u941:
 12112  0C6F  2C63               	goto	l3187
 12113  0C70                     u940:
 12114  0C70                     l3191:
 12115  0C70  0823               	movf	strlen@a,w
 12116  0C71  0224               	subwf	strlen@s,w
 12117  0C72  00A0               	movwf	?_strlen
 12118  0C73  01A1               	clrf	?_strlen+1
 12119  0C74  1BA0               	btfsc	?_strlen,7
 12120  0C75  03A1               	decf	?_strlen+1,f
 12121  0C76                     l1715:
 12122  0C76  0008               	return
 12123  0C77                     __end_of_strlen:
 12124                           
 12125                           	psect	text38
 12126  0CD1                     __ptext38:	
 12127 ;; *************** function _fputs *****************
 12128 ;; Defined at:
 12129 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
 12130 ;; Parameters:    Size  Location     Type
 12131 ;;  s               1    wreg     PTR const unsigned char 
 12132 ;;		 -> dbuf(32), 
 12133 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
 12134 ;;		 -> NULL(0), 
 12135 ;; Auto vars:     Size  Location     Type
 12136 ;;  s               1   18[BANK0 ] PTR const unsigned char 
 12137 ;;		 -> dbuf(32), 
 12138 ;;  i               2   16[BANK0 ] int 
 12139 ;;  c               1   15[BANK0 ] unsigned char 
 12140 ;; Return value:  Size  Location     Type
 12141 ;;                  2   11[BANK0 ] int 
 12142 ;; Registers used:
 12143 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12144 ;; Tracked objects:
 12145 ;;		On entry : 0/0
 12146 ;;		On exit  : 0/0
 12147 ;;		Unchanged: 0/0
 12148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12149 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12150 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12151 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12152 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12153 ;;Total ram usage:        8 bytes
 12154 ;; Hardware stack levels used: 1
 12155 ;; Hardware stack levels required when called: 7
 12156 ;; This function calls:
 12157 ;;		_fputc
 12158 ;; This function is called by:
 12159 ;;		_pad
 12160 ;; This function uses a non-reentrant model
 12161 ;;
 12162                           
 12163  0CD1                     _fputs:	
 12164                           ;psect for function _fputs
 12165                           
 12166                           
 12167                           ;incstack = 0
 12168                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12169                           ;fputs@s stored from wreg
 12170  0CD1  0020               	movlb	0	; select bank0
 12171  0CD2  00B2               	movwf	fputs@s
 12172  0CD3                     l3177:
 12173  0CD3  01B0               	clrf	fputs@i
 12174  0CD4  01B1               	clrf	fputs@i+1
 12175  0CD5  2CE9               	goto	l3183
 12176  0CD6                     l3179:
 12177  0CD6  082F               	movf	fputs@c,w
 12178  0CD7  00AC               	movwf	??_fputs
 12179  0CD8  01AD               	clrf	??_fputs+1
 12180  0CD9  082C               	movf	??_fputs,w
 12181  0CDA  00A3               	movwf	fputc@c
 12182  0CDB  082D               	movf	??_fputs+1,w
 12183  0CDC  00A4               	movwf	fputc@c+1
 12184  0CDD  082B               	movf	fputs@fp,w
 12185  0CDE  00AE               	movwf	??_fputs+2
 12186  0CDF  082E               	movf	??_fputs+2,w
 12187  0CE0  00A5               	movwf	fputc@fp
 12188  0CE1  318F  2764  318C   	fcall	_fputc
 12189  0CE4                     l3181:
 12190  0CE4  3001               	movlw	1
 12191  0CE5  0020               	movlb	0	; select bank0
 12192  0CE6  07B0               	addwf	fputs@i,f
 12193  0CE7  3000               	movlw	0
 12194  0CE8  3DB1               	addwfc	fputs@i+1,f
 12195  0CE9                     l3183:
 12196  0CE9  0830               	movf	fputs@i,w
 12197  0CEA  0732               	addwf	fputs@s,w
 12198  0CEB  00AC               	movwf	??_fputs
 12199  0CEC  082C               	movf	??_fputs,w
 12200  0CED  0086               	movwf	6
 12201  0CEE  3001               	movlw	1	; select bank2/3
 12202  0CEF  0087               	movwf	7
 12203  0CF0  0801               	movf	1,w
 12204  0CF1  00AD               	movwf	??_fputs+1
 12205  0CF2  082D               	movf	??_fputs+1,w
 12206  0CF3  00AF               	movwf	fputs@c
 12207  0CF4  082F               	movf	fputs@c,w
 12208  0CF5  1D03               	btfss	3,2
 12209  0CF6  2CF8               	goto	u931
 12210  0CF7  2CF9               	goto	u930
 12211  0CF8                     u931:
 12212  0CF8  2CD6               	goto	l3179
 12213  0CF9                     u930:
 12214  0CF9                     l1709:
 12215  0CF9  0008               	return
 12216  0CFA                     __end_of_fputs:
 12217                           
 12218                           	psect	text39
 12219  0F64                     __ptext39:	
 12220 ;; *************** function _fputc *****************
 12221 ;; Defined at:
 12222 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
 12223 ;; Parameters:    Size  Location     Type
 12224 ;;  c               2    3[BANK0 ] int 
 12225 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
 12226 ;;		 -> NULL(0), 
 12227 ;; Auto vars:     Size  Location     Type
 12228 ;;		None
 12229 ;; Return value:  Size  Location     Type
 12230 ;;                  2    3[BANK0 ] int 
 12231 ;; Registers used:
 12232 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12233 ;; Tracked objects:
 12234 ;;		On entry : 0/0
 12235 ;;		On exit  : 0/0
 12236 ;;		Unchanged: 0/0
 12237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12238 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12240 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12241 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12242 ;;Total ram usage:        8 bytes
 12243 ;; Hardware stack levels used: 1
 12244 ;; Hardware stack levels required when called: 6
 12245 ;; This function calls:
 12246 ;;		_putch
 12247 ;; This function is called by:
 12248 ;;		_pad
 12249 ;;		_vfpfcnvrt
 12250 ;;		_fputs
 12251 ;; This function uses a non-reentrant model
 12252 ;;
 12253                           
 12254  0F64                     _fputc:	
 12255                           ;psect for function _fputc
 12256                           
 12257  0F64                     l3163:	
 12258                           ;incstack = 0
 12259                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12260                           
 12261  0F64  0020               	movlb	0	; select bank0
 12262  0F65  0825               	movf	fputc@fp,w
 12263  0F66  1903               	btfsc	3,2
 12264  0F67  2F69               	goto	u891
 12265  0F68  2F6A               	goto	u890
 12266  0F69                     u891:
 12267  0F69  2F6F               	goto	l3167
 12268  0F6A                     u890:
 12269  0F6A                     l3165:
 12270  0F6A  0825               	movf	fputc@fp,w
 12271  0F6B  1D03               	btfss	3,2
 12272  0F6C  2F6E               	goto	u901
 12273  0F6D  2F6F               	goto	u900
 12274  0F6E                     u901:
 12275  0F6E  2F74               	goto	l3169
 12276  0F6F                     u900:
 12277  0F6F                     l3167:
 12278  0F6F  0823               	movf	fputc@c,w
 12279  0F70  318A  2253  318F   	fcall	_putch
 12280  0F73  2FA6               	goto	l1701
 12281  0F74                     l3169:
 12282  0F74  0825               	movf	fputc@fp,w
 12283  0F75  3E08               	addlw	8
 12284  0F76  0086               	movwf	6
 12285  0F77  0187               	clrf	7
 12286  0F78  0016               	moviw fsr1++
 12287  0F79  0401               	iorwf	1,w
 12288  0F7A  1903               	btfsc	3,2
 12289  0F7B  2F7D               	goto	u911
 12290  0F7C  2F7E               	goto	u910
 12291  0F7D                     u911:
 12292  0F7D  2F9C               	goto	l3173
 12293  0F7E                     u910:
 12294  0F7E                     l3171:
 12295  0F7E  0825               	movf	fputc@fp,w
 12296  0F7F  3E08               	addlw	8
 12297  0F80  0086               	movwf	6
 12298  0F81  0187               	clrf	7
 12299  0F82  3F40               	moviw [0]fsr1
 12300  0F83  00A6               	movwf	??_fputc
 12301  0F84  3F41               	moviw [1]fsr1
 12302  0F85  00A7               	movwf	??_fputc+1
 12303  0F86  0825               	movf	fputc@fp,w
 12304  0F87  3E02               	addlw	2
 12305  0F88  0086               	movwf	6
 12306  0F89  0187               	clrf	7
 12307  0F8A  3F40               	moviw [0]fsr1
 12308  0F8B  00A8               	movwf	??_fputc+2
 12309  0F8C  3F41               	moviw [1]fsr1
 12310  0F8D  00A9               	movwf	??_fputc+3
 12311  0F8E  0829               	movf	??_fputc+3,w
 12312  0F8F  3A80               	xorlw	128
 12313  0F90  00AA               	movwf	??_fputc+4
 12314  0F91  0827               	movf	??_fputc+1,w
 12315  0F92  3A80               	xorlw	128
 12316  0F93  022A               	subwf	??_fputc+4,w
 12317  0F94  1D03               	skipz
 12318  0F95  2F98               	goto	u925
 12319  0F96  0826               	movf	??_fputc,w
 12320  0F97  0228               	subwf	??_fputc+2,w
 12321  0F98                     u925:
 12322  0F98  1803               	skipnc
 12323  0F99  2F9B               	goto	u921
 12324  0F9A  2F9C               	goto	u920
 12325  0F9B                     u921:
 12326  0F9B  2FA6               	goto	l1701
 12327  0F9C                     u920:
 12328  0F9C                     l3173:
 12329  0F9C  0020               	movlb	0	; select bank0
 12330  0F9D  0825               	movf	fputc@fp,w
 12331  0F9E  3E02               	addlw	2
 12332  0F9F  0086               	movwf	6
 12333  0FA0  0187               	clrf	7
 12334  0FA1  3001               	movlw	1
 12335  0FA2  0781               	addwf	1,f
 12336  0FA3  3141               	addfsr 1,1
 12337  0FA4  1803               	skipnc
 12338  0FA5  0A81               	incf	1,f
 12339  0FA6                     l1701:
 12340  0FA6  0008               	return
 12341  0FA7                     __end_of_fputc:
 12342                           
 12343                           	psect	text40
 12344  0A53                     __ptext40:	
 12345 ;; *************** function _putch *****************
 12346 ;; Defined at:
 12347 ;;		line 174 in file "eusart.c"
 12348 ;; Parameters:    Size  Location     Type
 12349 ;;  txData          1    wreg     unsigned char 
 12350 ;; Auto vars:     Size  Location     Type
 12351 ;;  txData          1    2[BANK0 ] unsigned char 
 12352 ;; Return value:  Size  Location     Type
 12353 ;;                  1    wreg      void 
 12354 ;; Registers used:
 12355 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12356 ;; Tracked objects:
 12357 ;;		On entry : 0/0
 12358 ;;		On exit  : 0/0
 12359 ;;		Unchanged: 0/0
 12360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12362 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12364 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12365 ;;Total ram usage:        1 bytes
 12366 ;; Hardware stack levels used: 1
 12367 ;; Hardware stack levels required when called: 5
 12368 ;; This function calls:
 12369 ;;		_EUSART_Write
 12370 ;; This function is called by:
 12371 ;;		_fputc
 12372 ;; This function uses a non-reentrant model
 12373 ;;
 12374                           
 12375  0A53                     _putch:	
 12376                           ;psect for function _putch
 12377                           
 12378                           
 12379                           ;incstack = 0
 12380                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12381                           ;putch@txData stored from wreg
 12382  0A53  0020               	movlb	0	; select bank0
 12383  0A54  00A2               	movwf	putch@txData
 12384  0A55                     l3161:
 12385                           
 12386                           ;eusart.c: 174: void putch(char txData);eusart.c: 175: {;eusart.c: 176:     EUSART_Write
      +                          (txData);
 12387  0A55  0822               	movf	putch@txData,w
 12388  0A56  318D  2525  318A   	fcall	_EUSART_Write
 12389  0A59                     l682:
 12390  0A59  0008               	return
 12391  0A5A                     __end_of_putch:
 12392                           
 12393                           	psect	text41
 12394  0D25                     __ptext41:	
 12395 ;; *************** function _EUSART_Write *****************
 12396 ;; Defined at:
 12397 ;;		line 142 in file "eusart.c"
 12398 ;; Parameters:    Size  Location     Type
 12399 ;;  txData          1    wreg     unsigned char 
 12400 ;; Auto vars:     Size  Location     Type
 12401 ;;  txData          1    1[BANK0 ] unsigned char 
 12402 ;; Return value:  Size  Location     Type
 12403 ;;                  1    wreg      void 
 12404 ;; Registers used:
 12405 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12406 ;; Tracked objects:
 12407 ;;		On entry : 0/0
 12408 ;;		On exit  : 0/0
 12409 ;;		Unchanged: 0/0
 12410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12412 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12413 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12414 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12415 ;;Total ram usage:        2 bytes
 12416 ;; Hardware stack levels used: 1
 12417 ;; Hardware stack levels required when called: 4
 12418 ;; This function calls:
 12419 ;;		Nothing
 12420 ;; This function is called by:
 12421 ;;		_putch
 12422 ;; This function uses a non-reentrant model
 12423 ;;
 12424                           
 12425  0D25                     _EUSART_Write:	
 12426                           ;psect for function _EUSART_Write
 12427                           
 12428                           
 12429                           ;incstack = 0
 12430                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 12431                           ;EUSART_Write@txData stored from wreg
 12432  0D25  0020               	movlb	0	; select bank0
 12433  0D26  00A1               	movwf	EUSART_Write@txData
 12434  0D27                     l3143:
 12435  0D27                     l3145:	
 12436                           ;eusart.c: 142: void EUSART_Write(uint8_t txData);eusart.c: 143: {;eusart.c: 144:     wh
      +                          ile(0 == eusartTxBufferRemaining)
 12437                           
 12438                           
 12439                           ;eusart.c: 144:     while(0 == eusartTxBufferRemaining)
 12440  0D27  0021               	movlb	1	; select bank1
 12441  0D28  0852               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 12442  0D29  1903               	btfsc	3,2
 12443  0D2A  2D2C               	goto	u861
 12444  0D2B  2D2D               	goto	u860
 12445  0D2C                     u861:
 12446  0D2C  2D27               	goto	l3145
 12447  0D2D                     u860:
 12448  0D2D                     l672:
 12449                           
 12450                           ;eusart.c: 148:     if(0 == PIE1bits.TXIE)
 12451  0D2D  1A11               	btfsc	17,4	;volatile
 12452  0D2E  2D30               	goto	u871
 12453  0D2F  2D31               	goto	u870
 12454  0D30                     u871:
 12455  0D30  2D36               	goto	l673
 12456  0D31                     u870:
 12457  0D31                     l3147:
 12458                           
 12459                           ;eusart.c: 149:     {;eusart.c: 150:         TX1REG = txData;
 12460  0D31  0020               	movlb	0	; select bank0
 12461  0D32  0821               	movf	EUSART_Write@txData,w
 12462  0D33  0023               	movlb	3	; select bank3
 12463  0D34  009A               	movwf	26	;volatile
 12464                           
 12465                           ;eusart.c: 151:     }
 12466  0D35  2D4F               	goto	l3159
 12467  0D36                     l673:	
 12468                           ;eusart.c: 152:     else
 12469                           
 12470                           
 12471                           ;eusart.c: 153:     {;eusart.c: 154:         PIE1bits.TXIE = 0;
 12472  0D36  1211               	bcf	17,4	;volatile
 12473  0D37                     l3149:
 12474                           
 12475                           ;eusart.c: 155:         eusartTxBuffer[eusartTxHead++] = txData;
 12476  0D37  0020               	movlb	0	; select bank0
 12477  0D38  0821               	movf	EUSART_Write@txData,w
 12478  0D39  00A0               	movwf	??_EUSART_Write
 12479  0D3A  087D               	movf	_eusartTxHead,w
 12480  0D3B  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 12481  0D3C  0086               	movwf	6
 12482  0D3D  3001               	movlw	1	; select bank2/3
 12483  0D3E  0087               	movwf	7
 12484  0D3F  0820               	movf	??_EUSART_Write,w
 12485  0D40  0081               	movwf	1
 12486  0D41                     l3151:
 12487  0D41  3001               	movlw	1
 12488  0D42  00A0               	movwf	??_EUSART_Write
 12489  0D43  0820               	movf	??_EUSART_Write,w
 12490  0D44  07FD               	addwf	_eusartTxHead,f	;volatile
 12491  0D45                     l3153:
 12492                           
 12493                           ;eusart.c: 156:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 12494  0D45  3008               	movlw	8
 12495  0D46  027D               	subwf	_eusartTxHead,w	;volatile
 12496  0D47  1C03               	skipc
 12497  0D48  2D4A               	goto	u881
 12498  0D49  2D4B               	goto	u880
 12499  0D4A                     u881:
 12500  0D4A  2D4C               	goto	l3157
 12501  0D4B                     u880:
 12502  0D4B                     l3155:
 12503                           
 12504                           ;eusart.c: 157:         {;eusart.c: 158:             eusartTxHead = 0;
 12505  0D4B  01FD               	clrf	_eusartTxHead	;volatile
 12506  0D4C                     l3157:
 12507                           
 12508                           ;eusart.c: 160:         eusartTxBufferRemaining--;
 12509  0D4C  3001               	movlw	1
 12510  0D4D  0021               	movlb	1	; select bank1
 12511  0D4E  02D2               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 12512  0D4F                     l3159:
 12513                           
 12514                           ;eusart.c: 162:     PIE1bits.TXIE = 1;
 12515  0D4F  0021               	movlb	1	; select bank1
 12516  0D50  1611               	bsf	17,4	;volatile
 12517  0D51                     l676:
 12518  0D51  0008               	return
 12519  0D52                     __end_of_EUSART_Write:
 12520                           
 12521                           	psect	text42
 12522  068A                     __ptext42:	
 12523 ;; *************** function ___lomod *****************
 12524 ;; Defined at:
 12525 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lomod.c"
 12526 ;; Parameters:    Size  Location     Type
 12527 ;;  divisor         8    0[BANK0 ] unsigned long long 
 12528 ;;  dividend        8    8[BANK0 ] unsigned long long 
 12529 ;; Auto vars:     Size  Location     Type
 12530 ;;  counter         1   17[BANK0 ] unsigned char 
 12531 ;; Return value:  Size  Location     Type
 12532 ;;                  8    0[BANK0 ] unsigned long long 
 12533 ;; Registers used:
 12534 ;;		wreg, status,2, status,0
 12535 ;; Tracked objects:
 12536 ;;		On entry : 0/0
 12537 ;;		On exit  : 0/0
 12538 ;;		Unchanged: 0/0
 12539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12540 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12541 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12542 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12543 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12544 ;;Total ram usage:       18 bytes
 12545 ;; Hardware stack levels used: 1
 12546 ;; Hardware stack levels required when called: 4
 12547 ;; This function calls:
 12548 ;;		Nothing
 12549 ;; This function is called by:
 12550 ;;		_utoa
 12551 ;; This function uses a non-reentrant model
 12552 ;;
 12553                           
 12554  068A                     ___lomod:	
 12555                           ;psect for function ___lomod
 12556                           
 12557  068A                     l3217:	
 12558                           ;incstack = 0
 12559                           ; Regs used in ___lomod: [wreg+status,2+status,0]
 12560                           
 12561  068A  0020               	movlb	0	; select bank0
 12562  068B  0820               	movf	___lomod@divisor,w
 12563  068C  0421               	iorwf	___lomod@divisor+1,w
 12564  068D  0422               	iorwf	___lomod@divisor+2,w
 12565  068E  0423               	iorwf	___lomod@divisor+3,w
 12566  068F  0424               	iorwf	___lomod@divisor+4,w
 12567  0690  0425               	iorwf	___lomod@divisor+5,w
 12568  0691  0426               	iorwf	___lomod@divisor+6,w
 12569  0692  0427               	iorwf	___lomod@divisor+7,w
 12570  0693  1903               	skipnz
 12571  0694  2E96               	goto	u1001
 12572  0695  2E97               	goto	u1000
 12573  0696                     u1001:
 12574  0696  2EEA               	goto	l1412
 12575  0697                     u1000:
 12576  0697                     l3219:
 12577  0697  01B1               	clrf	___lomod@counter
 12578  0698  0AB1               	incf	___lomod@counter,f
 12579  0699  2EA6               	goto	l3225
 12580  069A                     l3221:
 12581  069A  35A0               	lslf	___lomod@divisor,f
 12582  069B  0DA1               	rlf	___lomod@divisor+1,f
 12583  069C  0DA2               	rlf	___lomod@divisor+2,f
 12584  069D  0DA3               	rlf	___lomod@divisor+3,f
 12585  069E  0DA4               	rlf	___lomod@divisor+4,f
 12586  069F  0DA5               	rlf	___lomod@divisor+5,f
 12587  06A0  0DA6               	rlf	___lomod@divisor+6,f
 12588  06A1  0DA7               	rlf	___lomod@divisor+7,f
 12589  06A2                     l3223:
 12590  06A2  3001               	movlw	1
 12591  06A3  00B0               	movwf	??___lomod
 12592  06A4  0830               	movf	??___lomod,w
 12593  06A5  07B1               	addwf	___lomod@counter,f
 12594  06A6                     l3225:
 12595  06A6  1FA7               	btfss	___lomod@divisor+7,7
 12596  06A7  2EA9               	goto	u1011
 12597  06A8  2EAA               	goto	u1010
 12598  06A9                     u1011:
 12599  06A9  2E9A               	goto	l3221
 12600  06AA                     u1010:
 12601  06AA                     l3227:
 12602  06AA  0827               	movf	___lomod@divisor+7,w
 12603  06AB  022F               	subwf	___lomod@dividend+7,w
 12604  06AC  1D03               	skipz
 12605  06AD  2EC8               	goto	u1025
 12606  06AE  0826               	movf	___lomod@divisor+6,w
 12607  06AF  022E               	subwf	___lomod@dividend+6,w
 12608  06B0  1D03               	skipz
 12609  06B1  2EC8               	goto	u1025
 12610  06B2  0825               	movf	___lomod@divisor+5,w
 12611  06B3  022D               	subwf	___lomod@dividend+5,w
 12612  06B4  1D03               	skipz
 12613  06B5  2EC8               	goto	u1025
 12614  06B6  0824               	movf	___lomod@divisor+4,w
 12615  06B7  022C               	subwf	___lomod@dividend+4,w
 12616  06B8  1D03               	skipz
 12617  06B9  2EC8               	goto	u1025
 12618  06BA  0823               	movf	___lomod@divisor+3,w
 12619  06BB  022B               	subwf	___lomod@dividend+3,w
 12620  06BC  1D03               	skipz
 12621  06BD  2EC8               	goto	u1025
 12622  06BE  0822               	movf	___lomod@divisor+2,w
 12623  06BF  022A               	subwf	___lomod@dividend+2,w
 12624  06C0  1D03               	skipz
 12625  06C1  2EC8               	goto	u1025
 12626  06C2  0821               	movf	___lomod@divisor+1,w
 12627  06C3  0229               	subwf	___lomod@dividend+1,w
 12628  06C4  1D03               	skipz
 12629  06C5  2EC8               	goto	u1025
 12630  06C6  0820               	movf	___lomod@divisor,w
 12631  06C7  0228               	subwf	___lomod@dividend,w
 12632  06C8                     u1025:
 12633  06C8  1C03               	skipc
 12634  06C9  2ECB               	goto	u1021
 12635  06CA  2ECC               	goto	u1020
 12636  06CB                     u1021:
 12637  06CB  2EDC               	goto	l3231
 12638  06CC                     u1020:
 12639  06CC                     l3229:
 12640  06CC  0820               	movf	___lomod@divisor,w
 12641  06CD  02A8               	subwf	___lomod@dividend,f
 12642  06CE  0821               	movf	___lomod@divisor+1,w
 12643  06CF  3BA9               	subwfb	___lomod@dividend+1,f
 12644  06D0  0822               	movf	___lomod@divisor+2,w
 12645  06D1  3BAA               	subwfb	___lomod@dividend+2,f
 12646  06D2  0823               	movf	___lomod@divisor+3,w
 12647  06D3  3BAB               	subwfb	___lomod@dividend+3,f
 12648  06D4  0824               	movf	___lomod@divisor+4,w
 12649  06D5  3BAC               	subwfb	___lomod@dividend+4,f
 12650  06D6  0825               	movf	___lomod@divisor+5,w
 12651  06D7  3BAD               	subwfb	___lomod@dividend+5,f
 12652  06D8  0826               	movf	___lomod@divisor+6,w
 12653  06D9  3BAE               	subwfb	___lomod@dividend+6,f
 12654  06DA  0827               	movf	___lomod@divisor+7,w
 12655  06DB  3BAF               	subwfb	___lomod@dividend+7,f
 12656  06DC                     l3231:
 12657  06DC  36A7               	lsrf	___lomod@divisor+7,f
 12658  06DD  0CA6               	rrf	___lomod@divisor+6,f
 12659  06DE  0CA5               	rrf	___lomod@divisor+5,f
 12660  06DF  0CA4               	rrf	___lomod@divisor+4,f
 12661  06E0  0CA3               	rrf	___lomod@divisor+3,f
 12662  06E1  0CA2               	rrf	___lomod@divisor+2,f
 12663  06E2  0CA1               	rrf	___lomod@divisor+1,f
 12664  06E3  0CA0               	rrf	___lomod@divisor,f
 12665  06E4  3001               	movlw	1
 12666  06E5  02B1               	subwf	___lomod@counter,f
 12667  06E6  1D03               	btfss	3,2
 12668  06E7  2EE9               	goto	u1031
 12669  06E8  2EEA               	goto	u1030
 12670  06E9                     u1031:
 12671  06E9  2EAA               	goto	l3227
 12672  06EA                     u1030:
 12673  06EA                     l1412:
 12674  06EA  0828               	movf	___lomod@dividend,w
 12675  06EB  00A0               	movwf	?___lomod
 12676  06EC  0829               	movf	___lomod@dividend+1,w
 12677  06ED  00A1               	movwf	?___lomod+1
 12678  06EE  082A               	movf	___lomod@dividend+2,w
 12679  06EF  00A2               	movwf	?___lomod+2
 12680  06F0  082B               	movf	___lomod@dividend+3,w
 12681  06F1  00A3               	movwf	?___lomod+3
 12682  06F2  082C               	movf	___lomod@dividend+4,w
 12683  06F3  00A4               	movwf	?___lomod+4
 12684  06F4  082D               	movf	___lomod@dividend+5,w
 12685  06F5  00A5               	movwf	?___lomod+5
 12686  06F6  082E               	movf	___lomod@dividend+6,w
 12687  06F7  00A6               	movwf	?___lomod+6
 12688  06F8  082F               	movf	___lomod@dividend+7,w
 12689  06F9  00A7               	movwf	?___lomod+7
 12690  06FA                     l1419:
 12691  06FA  0008               	return
 12692  06FB                     __end_of___lomod:
 12693                           
 12694                           	psect	text43
 12695  0606                     __ptext43:	
 12696 ;; *************** function ___lodiv *****************
 12697 ;; Defined at:
 12698 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lodiv.c"
 12699 ;; Parameters:    Size  Location     Type
 12700 ;;  divisor         8    0[BANK0 ] unsigned long long 
 12701 ;;  dividend        8    8[BANK0 ] unsigned long long 
 12702 ;; Auto vars:     Size  Location     Type
 12703 ;;  quotient        8   17[BANK0 ] unsigned long long 
 12704 ;;  counter         1   25[BANK0 ] unsigned char 
 12705 ;; Return value:  Size  Location     Type
 12706 ;;                  8    0[BANK0 ] unsigned long long 
 12707 ;; Registers used:
 12708 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12709 ;; Tracked objects:
 12710 ;;		On entry : 0/0
 12711 ;;		On exit  : 0/0
 12712 ;;		Unchanged: 0/0
 12713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12714 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12715 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12716 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12717 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12718 ;;Total ram usage:       26 bytes
 12719 ;; Hardware stack levels used: 1
 12720 ;; Hardware stack levels required when called: 4
 12721 ;; This function calls:
 12722 ;;		Nothing
 12723 ;; This function is called by:
 12724 ;;		_utoa
 12725 ;; This function uses a non-reentrant model
 12726 ;;
 12727                           
 12728  0606                     ___lodiv:	
 12729                           ;psect for function ___lodiv
 12730                           
 12731  0606                     l3195:	
 12732                           ;incstack = 0
 12733                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 12734                           
 12735  0606  3031               	movlw	low ___lodiv@quotient
 12736  0607  0086               	movwf	6
 12737  0608  3000               	movlw	high ___lodiv@quotient
 12738  0609  0087               	movwf	7
 12739  060A  3008               	movlw	8
 12740  060B  0020               	movlb	0	; select bank0
 12741  060C  00B0               	movwf	??___lodiv
 12742  060D  3000               	movlw	0
 12743  060E                     u950:
 12744  060E  001E               	movwi fsr1++
 12745  060F  0BB0               	decfsz	??___lodiv,f
 12746  0610  2E0E               	goto	u950
 12747  0611                     l3197:
 12748  0611  0820               	movf	___lodiv@divisor,w
 12749  0612  0421               	iorwf	___lodiv@divisor+1,w
 12750  0613  0422               	iorwf	___lodiv@divisor+2,w
 12751  0614  0423               	iorwf	___lodiv@divisor+3,w
 12752  0615  0424               	iorwf	___lodiv@divisor+4,w
 12753  0616  0425               	iorwf	___lodiv@divisor+5,w
 12754  0617  0426               	iorwf	___lodiv@divisor+6,w
 12755  0618  0427               	iorwf	___lodiv@divisor+7,w
 12756  0619  1903               	skipnz
 12757  061A  2E1C               	goto	u961
 12758  061B  2E1D               	goto	u960
 12759  061C                     u961:
 12760  061C  2E79               	goto	l1402
 12761  061D                     u960:
 12762  061D                     l3199:
 12763  061D  01B9               	clrf	___lodiv@counter
 12764  061E  0AB9               	incf	___lodiv@counter,f
 12765  061F  2E2C               	goto	l3205
 12766  0620                     l3201:
 12767  0620  35A0               	lslf	___lodiv@divisor,f
 12768  0621  0DA1               	rlf	___lodiv@divisor+1,f
 12769  0622  0DA2               	rlf	___lodiv@divisor+2,f
 12770  0623  0DA3               	rlf	___lodiv@divisor+3,f
 12771  0624  0DA4               	rlf	___lodiv@divisor+4,f
 12772  0625  0DA5               	rlf	___lodiv@divisor+5,f
 12773  0626  0DA6               	rlf	___lodiv@divisor+6,f
 12774  0627  0DA7               	rlf	___lodiv@divisor+7,f
 12775  0628                     l3203:
 12776  0628  3001               	movlw	1
 12777  0629  00B0               	movwf	??___lodiv
 12778  062A  0830               	movf	??___lodiv,w
 12779  062B  07B9               	addwf	___lodiv@counter,f
 12780  062C                     l3205:
 12781  062C  1FA7               	btfss	___lodiv@divisor+7,7
 12782  062D  2E2F               	goto	u971
 12783  062E  2E30               	goto	u970
 12784  062F                     u971:
 12785  062F  2E20               	goto	l3201
 12786  0630                     u970:
 12787  0630                     l3207:
 12788  0630  35B1               	lslf	___lodiv@quotient,f
 12789  0631  0DB2               	rlf	___lodiv@quotient+1,f
 12790  0632  0DB3               	rlf	___lodiv@quotient+2,f
 12791  0633  0DB4               	rlf	___lodiv@quotient+3,f
 12792  0634  0DB5               	rlf	___lodiv@quotient+4,f
 12793  0635  0DB6               	rlf	___lodiv@quotient+5,f
 12794  0636  0DB7               	rlf	___lodiv@quotient+6,f
 12795  0637  0DB8               	rlf	___lodiv@quotient+7,f
 12796  0638                     l3209:
 12797  0638  0827               	movf	___lodiv@divisor+7,w
 12798  0639  022F               	subwf	___lodiv@dividend+7,w
 12799  063A  1D03               	skipz
 12800  063B  2E56               	goto	u985
 12801  063C  0826               	movf	___lodiv@divisor+6,w
 12802  063D  022E               	subwf	___lodiv@dividend+6,w
 12803  063E  1D03               	skipz
 12804  063F  2E56               	goto	u985
 12805  0640  0825               	movf	___lodiv@divisor+5,w
 12806  0641  022D               	subwf	___lodiv@dividend+5,w
 12807  0642  1D03               	skipz
 12808  0643  2E56               	goto	u985
 12809  0644  0824               	movf	___lodiv@divisor+4,w
 12810  0645  022C               	subwf	___lodiv@dividend+4,w
 12811  0646  1D03               	skipz
 12812  0647  2E56               	goto	u985
 12813  0648  0823               	movf	___lodiv@divisor+3,w
 12814  0649  022B               	subwf	___lodiv@dividend+3,w
 12815  064A  1D03               	skipz
 12816  064B  2E56               	goto	u985
 12817  064C  0822               	movf	___lodiv@divisor+2,w
 12818  064D  022A               	subwf	___lodiv@dividend+2,w
 12819  064E  1D03               	skipz
 12820  064F  2E56               	goto	u985
 12821  0650  0821               	movf	___lodiv@divisor+1,w
 12822  0651  0229               	subwf	___lodiv@dividend+1,w
 12823  0652  1D03               	skipz
 12824  0653  2E56               	goto	u985
 12825  0654  0820               	movf	___lodiv@divisor,w
 12826  0655  0228               	subwf	___lodiv@dividend,w
 12827  0656                     u985:
 12828  0656  1C03               	skipc
 12829  0657  2E59               	goto	u981
 12830  0658  2E5A               	goto	u980
 12831  0659                     u981:
 12832  0659  2E6B               	goto	l3215
 12833  065A                     u980:
 12834  065A                     l3211:
 12835  065A  0820               	movf	___lodiv@divisor,w
 12836  065B  02A8               	subwf	___lodiv@dividend,f
 12837  065C  0821               	movf	___lodiv@divisor+1,w
 12838  065D  3BA9               	subwfb	___lodiv@dividend+1,f
 12839  065E  0822               	movf	___lodiv@divisor+2,w
 12840  065F  3BAA               	subwfb	___lodiv@dividend+2,f
 12841  0660  0823               	movf	___lodiv@divisor+3,w
 12842  0661  3BAB               	subwfb	___lodiv@dividend+3,f
 12843  0662  0824               	movf	___lodiv@divisor+4,w
 12844  0663  3BAC               	subwfb	___lodiv@dividend+4,f
 12845  0664  0825               	movf	___lodiv@divisor+5,w
 12846  0665  3BAD               	subwfb	___lodiv@dividend+5,f
 12847  0666  0826               	movf	___lodiv@divisor+6,w
 12848  0667  3BAE               	subwfb	___lodiv@dividend+6,f
 12849  0668  0827               	movf	___lodiv@divisor+7,w
 12850  0669  3BAF               	subwfb	___lodiv@dividend+7,f
 12851  066A                     l3213:
 12852  066A  1431               	bsf	___lodiv@quotient,0
 12853  066B                     l3215:
 12854  066B  36A7               	lsrf	___lodiv@divisor+7,f
 12855  066C  0CA6               	rrf	___lodiv@divisor+6,f
 12856  066D  0CA5               	rrf	___lodiv@divisor+5,f
 12857  066E  0CA4               	rrf	___lodiv@divisor+4,f
 12858  066F  0CA3               	rrf	___lodiv@divisor+3,f
 12859  0670  0CA2               	rrf	___lodiv@divisor+2,f
 12860  0671  0CA1               	rrf	___lodiv@divisor+1,f
 12861  0672  0CA0               	rrf	___lodiv@divisor,f
 12862  0673  3001               	movlw	1
 12863  0674  02B9               	subwf	___lodiv@counter,f
 12864  0675  1D03               	btfss	3,2
 12865  0676  2E78               	goto	u991
 12866  0677  2E79               	goto	u990
 12867  0678                     u991:
 12868  0678  2E30               	goto	l3207
 12869  0679                     u990:
 12870  0679                     l1402:
 12871  0679  0831               	movf	___lodiv@quotient,w
 12872  067A  00A0               	movwf	?___lodiv
 12873  067B  0832               	movf	___lodiv@quotient+1,w
 12874  067C  00A1               	movwf	?___lodiv+1
 12875  067D  0833               	movf	___lodiv@quotient+2,w
 12876  067E  00A2               	movwf	?___lodiv+2
 12877  067F  0834               	movf	___lodiv@quotient+3,w
 12878  0680  00A3               	movwf	?___lodiv+3
 12879  0681  0835               	movf	___lodiv@quotient+4,w
 12880  0682  00A4               	movwf	?___lodiv+4
 12881  0683  0836               	movf	___lodiv@quotient+5,w
 12882  0684  00A5               	movwf	?___lodiv+5
 12883  0685  0837               	movf	___lodiv@quotient+6,w
 12884  0686  00A6               	movwf	?___lodiv+6
 12885  0687  0838               	movf	___lodiv@quotient+7,w
 12886  0688  00A7               	movwf	?___lodiv+7
 12887  0689                     l1409:
 12888  0689  0008               	return
 12889  068A                     __end_of___lodiv:
 12890                           
 12891                           	psect	text44
 12892  035B                     __ptext44:	
 12893 ;; *************** function _WritePin *****************
 12894 ;; Defined at:
 12895 ;;		line 177 in file "PIC16Xpress_DevBoard.c"
 12896 ;; Parameters:    Size  Location     Type
 12897 ;;  pin             1    wreg     enum E7153
 12898 ;;  val             1    0[BANK0 ] unsigned char 
 12899 ;; Auto vars:     Size  Location     Type
 12900 ;;  pin             1    3[BANK0 ] enum E7153
 12901 ;; Return value:  Size  Location     Type
 12902 ;;                  1    wreg      unsigned char 
 12903 ;; Registers used:
 12904 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12905 ;; Tracked objects:
 12906 ;;		On entry : 0/0
 12907 ;;		On exit  : 0/0
 12908 ;;		Unchanged: 0/0
 12909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12910 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12911 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12912 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12913 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12914 ;;Total ram usage:        4 bytes
 12915 ;; Hardware stack levels used: 1
 12916 ;; Hardware stack levels required when called: 4
 12917 ;; This function calls:
 12918 ;;		Nothing
 12919 ;; This function is called by:
 12920 ;;		_JSN_Sensor_Init
 12921 ;;		_JSN_Sensor_Trig
 12922 ;;		_main
 12923 ;; This function uses a non-reentrant model
 12924 ;;
 12925                           
 12926  035B                     _WritePin:	
 12927                           ;psect for function _WritePin
 12928                           
 12929                           
 12930                           ;incstack = 0
 12931                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
 12932                           ;WritePin@pin stored from wreg
 12933  035B  0020               	movlb	0	; select bank0
 12934  035C  00A3               	movwf	WritePin@pin
 12935  035D                     l3759:
 12936                           
 12937                           ;PIC16Xpress_DevBoard.c: 178:     switch(pin) {
 12938  035D  2BD5               	goto	l3831
 12939  035E                     l3761:
 12940                           
 12941                           ;PIC16Xpress_DevBoard.c: 180:             LATAbits.LATA5 = val;
 12942  035E  0C20               	rrf	WritePin@val,w
 12943  035F  0022               	movlb	2	; select bank2
 12944  0360  1C03               	skipc
 12945  0361  128C               	bcf	12,5	;volatile
 12946  0362  1803               	skipnc
 12947  0363  168C               	bsf	12,5	;volatile
 12948  0364  2C15               	goto	l225
 12949  0365                     l3765:
 12950                           
 12951                           ;PIC16Xpress_DevBoard.c: 183:             LATAbits.LATA4 = val;
 12952  0365  0C20               	rrf	WritePin@val,w
 12953  0366  0022               	movlb	2	; select bank2
 12954  0367  1C03               	skipc
 12955  0368  120C               	bcf	12,4	;volatile
 12956  0369  1803               	skipnc
 12957  036A  160C               	bsf	12,4	;volatile
 12958  036B  2C15               	goto	l225
 12959  036C                     l3769:
 12960                           
 12961                           ;PIC16Xpress_DevBoard.c: 188:             LATCbits.LATC5 = val;
 12962  036C  0C20               	rrf	WritePin@val,w
 12963  036D  0022               	movlb	2	; select bank2
 12964  036E  1C03               	skipc
 12965  036F  128E               	bcf	14,5	;volatile
 12966  0370  1803               	skipnc
 12967  0371  168E               	bsf	14,5	;volatile
 12968  0372  2C15               	goto	l225
 12969  0373                     l3773:
 12970                           
 12971                           ;PIC16Xpress_DevBoard.c: 191:             LATCbits.LATC4 = val;
 12972  0373  0C20               	rrf	WritePin@val,w
 12973  0374  0022               	movlb	2	; select bank2
 12974  0375  1C03               	skipc
 12975  0376  120E               	bcf	14,4	;volatile
 12976  0377  1803               	skipnc
 12977  0378  160E               	bsf	14,4	;volatile
 12978  0379  2C15               	goto	l225
 12979  037A                     l3777:
 12980                           
 12981                           ;PIC16Xpress_DevBoard.c: 194:             LATCbits.LATC3 = val;
 12982  037A  0C20               	rrf	WritePin@val,w
 12983  037B  0022               	movlb	2	; select bank2
 12984  037C  1C03               	skipc
 12985  037D  118E               	bcf	14,3	;volatile
 12986  037E  1803               	skipnc
 12987  037F  158E               	bsf	14,3	;volatile
 12988  0380  2C15               	goto	l225
 12989  0381                     l3781:
 12990                           
 12991                           ;PIC16Xpress_DevBoard.c: 197:             LATCbits.LATC6 = val;
 12992  0381  0C20               	rrf	WritePin@val,w
 12993  0382  0022               	movlb	2	; select bank2
 12994  0383  1C03               	skipc
 12995  0384  130E               	bcf	14,6	;volatile
 12996  0385  1803               	skipnc
 12997  0386  170E               	bsf	14,6	;volatile
 12998  0387  2C15               	goto	l225
 12999  0388                     l3785:
 13000                           
 13001                           ;PIC16Xpress_DevBoard.c: 200:             LATCbits.LATC7 = val;
 13002  0388  0C20               	rrf	WritePin@val,w
 13003  0389  0022               	movlb	2	; select bank2
 13004  038A  1C03               	skipc
 13005  038B  138E               	bcf	14,7	;volatile
 13006  038C  1803               	skipnc
 13007  038D  178E               	bsf	14,7	;volatile
 13008  038E  2C15               	goto	l225
 13009  038F                     l3789:
 13010                           
 13011                           ;PIC16Xpress_DevBoard.c: 203:             LATBbits.LATB7 = val;
 13012  038F  0C20               	rrf	WritePin@val,w
 13013  0390  0022               	movlb	2	; select bank2
 13014  0391  1C03               	skipc
 13015  0392  138D               	bcf	13,7	;volatile
 13016  0393  1803               	skipnc
 13017  0394  178D               	bsf	13,7	;volatile
 13018  0395  2C15               	goto	l225
 13019  0396                     l3793:
 13020                           
 13021                           ;PIC16Xpress_DevBoard.c: 206:             LATAbits.LATA0 = val;
 13022  0396  0C20               	rrf	WritePin@val,w
 13023  0397  0022               	movlb	2	; select bank2
 13024  0398  1C03               	skipc
 13025  0399  100C               	bcf	12,0	;volatile
 13026  039A  1803               	skipnc
 13027  039B  140C               	bsf	12,0	;volatile
 13028  039C  2C15               	goto	l225
 13029  039D                     l3797:
 13030                           
 13031                           ;PIC16Xpress_DevBoard.c: 209:             LATAbits.LATA1 = val;
 13032  039D  0C20               	rrf	WritePin@val,w
 13033  039E  0022               	movlb	2	; select bank2
 13034  039F  1C03               	skipc
 13035  03A0  108C               	bcf	12,1	;volatile
 13036  03A1  1803               	skipnc
 13037  03A2  148C               	bsf	12,1	;volatile
 13038  03A3  2C15               	goto	l225
 13039  03A4                     l3801:
 13040                           
 13041                           ;PIC16Xpress_DevBoard.c: 212:             LATAbits.LATA2 = val;
 13042  03A4  0C20               	rrf	WritePin@val,w
 13043  03A5  0022               	movlb	2	; select bank2
 13044  03A6  1C03               	skipc
 13045  03A7  110C               	bcf	12,2	;volatile
 13046  03A8  1803               	skipnc
 13047  03A9  150C               	bsf	12,2	;volatile
 13048  03AA  2C15               	goto	l225
 13049  03AB                     l3805:
 13050                           
 13051                           ;PIC16Xpress_DevBoard.c: 215:             LATCbits.LATC0 = val;
 13052  03AB  0C20               	rrf	WritePin@val,w
 13053  03AC  0022               	movlb	2	; select bank2
 13054  03AD  1C03               	skipc
 13055  03AE  100E               	bcf	14,0	;volatile
 13056  03AF  1803               	skipnc
 13057  03B0  140E               	bsf	14,0	;volatile
 13058  03B1  2C15               	goto	l225
 13059  03B2                     l3809:
 13060                           
 13061                           ;PIC16Xpress_DevBoard.c: 218:             LATCbits.LATC1 = val;
 13062  03B2  0C20               	rrf	WritePin@val,w
 13063  03B3  0022               	movlb	2	; select bank2
 13064  03B4  1C03               	skipc
 13065  03B5  108E               	bcf	14,1	;volatile
 13066  03B6  1803               	skipnc
 13067  03B7  148E               	bsf	14,1	;volatile
 13068  03B8  2C15               	goto	l225
 13069  03B9                     l3813:
 13070                           
 13071                           ;PIC16Xpress_DevBoard.c: 221:             LATCbits.LATC2 = val;
 13072  03B9  0C20               	rrf	WritePin@val,w
 13073  03BA  0022               	movlb	2	; select bank2
 13074  03BB  1C03               	skipc
 13075  03BC  110E               	bcf	14,2	;volatile
 13076  03BD  1803               	skipnc
 13077  03BE  150E               	bsf	14,2	;volatile
 13078  03BF  2C15               	goto	l225
 13079  03C0                     l3817:
 13080                           
 13081                           ;PIC16Xpress_DevBoard.c: 224:             LATBbits.LATB4 = val;
 13082  03C0  0C20               	rrf	WritePin@val,w
 13083  03C1  0022               	movlb	2	; select bank2
 13084  03C2  1C03               	skipc
 13085  03C3  120D               	bcf	13,4	;volatile
 13086  03C4  1803               	skipnc
 13087  03C5  160D               	bsf	13,4	;volatile
 13088  03C6  2C15               	goto	l225
 13089  03C7                     l3821:
 13090                           
 13091                           ;PIC16Xpress_DevBoard.c: 227:             LATBbits.LATB5 = val;
 13092  03C7  0C20               	rrf	WritePin@val,w
 13093  03C8  0022               	movlb	2	; select bank2
 13094  03C9  1C03               	skipc
 13095  03CA  128D               	bcf	13,5	;volatile
 13096  03CB  1803               	skipnc
 13097  03CC  168D               	bsf	13,5	;volatile
 13098  03CD  2C15               	goto	l225
 13099  03CE                     l3825:
 13100                           
 13101                           ;PIC16Xpress_DevBoard.c: 230:             LATBbits.LATB6 = val;
 13102  03CE  0C20               	rrf	WritePin@val,w
 13103  03CF  0022               	movlb	2	; select bank2
 13104  03D0  1C03               	skipc
 13105  03D1  130D               	bcf	13,6	;volatile
 13106  03D2  1803               	skipnc
 13107  03D3  170D               	bsf	13,6	;volatile
 13108  03D4  2C15               	goto	l225
 13109  03D5                     l3831:
 13110  03D5  0823               	movf	WritePin@pin,w
 13111  03D6  00A1               	movwf	??_WritePin
 13112  03D7  01A2               	clrf	??_WritePin+1
 13113                           
 13114                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13115                           ; Switch size 1, requested type "simple"
 13116                           ; Number of cases is 1, Range of values is 0 to 0
 13117                           ; switch strategies available:
 13118                           ; Name         Instructions Cycles
 13119                           ; simple_byte            4     3 (average)
 13120                           ; direct_byte            8     6 (fixed)
 13121                           ; jumptable            260     6 (fixed)
 13122                           ;	Chosen strategy is simple_byte
 13123  03D8  0822               	movf	??_WritePin+1,w
 13124  03D9  3A00               	xorlw	0	; case 0
 13125  03DA  1903               	skipnz
 13126  03DB  2BDD               	goto	l4509
 13127  03DC  2C15               	goto	l225
 13128  03DD                     l4509:
 13129                           
 13130                           ; Switch size 1, requested type "simple"
 13131                           ; Number of cases is 18, Range of values is 0 to 17
 13132                           ; switch strategies available:
 13133                           ; Name         Instructions Cycles
 13134                           ; direct_byte           42     6 (fixed)
 13135                           ; simple_byte           55    28 (average)
 13136                           ; jumptable            260     6 (fixed)
 13137                           ;	Chosen strategy is simple_byte
 13138  03DD  0821               	movf	??_WritePin,w
 13139  03DE  3A00               	xorlw	0	; case 0
 13140  03DF  1903               	skipnz
 13141  03E0  2B5E               	goto	l3761
 13142  03E1  3A01               	xorlw	1	; case 1
 13143  03E2  1903               	skipnz
 13144  03E3  2B65               	goto	l3765
 13145  03E4  3A03               	xorlw	3	; case 2
 13146  03E5  1903               	skipnz
 13147  03E6  2C15               	goto	l225
 13148  03E7  3A01               	xorlw	1	; case 3
 13149  03E8  1903               	skipnz
 13150  03E9  2B6C               	goto	l3769
 13151  03EA  3A07               	xorlw	7	; case 4
 13152  03EB  1903               	skipnz
 13153  03EC  2B73               	goto	l3773
 13154  03ED  3A01               	xorlw	1	; case 5
 13155  03EE  1903               	skipnz
 13156  03EF  2B7A               	goto	l3777
 13157  03F0  3A03               	xorlw	3	; case 6
 13158  03F1  1903               	skipnz
 13159  03F2  2B81               	goto	l3781
 13160  03F3  3A01               	xorlw	1	; case 7
 13161  03F4  1903               	skipnz
 13162  03F5  2B88               	goto	l3785
 13163  03F6  3A0F               	xorlw	15	; case 8
 13164  03F7  1903               	skipnz
 13165  03F8  2B8F               	goto	l3789
 13166  03F9  3A01               	xorlw	1	; case 9
 13167  03FA  1903               	skipnz
 13168  03FB  2B96               	goto	l3793
 13169  03FC  3A03               	xorlw	3	; case 10
 13170  03FD  1903               	skipnz
 13171  03FE  2B9D               	goto	l3797
 13172  03FF  3A01               	xorlw	1	; case 11
 13173  0400  1903               	skipnz
 13174  0401  2BA4               	goto	l3801
 13175  0402  3A07               	xorlw	7	; case 12
 13176  0403  1903               	skipnz
 13177  0404  2BAB               	goto	l3805
 13178  0405  3A01               	xorlw	1	; case 13
 13179  0406  1903               	skipnz
 13180  0407  2BB2               	goto	l3809
 13181  0408  3A03               	xorlw	3	; case 14
 13182  0409  1903               	skipnz
 13183  040A  2BB9               	goto	l3813
 13184  040B  3A01               	xorlw	1	; case 15
 13185  040C  1903               	skipnz
 13186  040D  2BC0               	goto	l3817
 13187  040E  3A1F               	xorlw	31	; case 16
 13188  040F  1903               	skipnz
 13189  0410  2BC7               	goto	l3821
 13190  0411  3A01               	xorlw	1	; case 17
 13191  0412  1903               	skipnz
 13192  0413  2BCE               	goto	l3825
 13193  0414  2C15               	goto	l225
 13194  0415                     l225:
 13195  0415  0008               	return
 13196  0416                     __end_of_WritePin:
 13197                           
 13198                           	psect	text45
 13199  0416                     __ptext45:	
 13200 ;; *************** function _SetPin *****************
 13201 ;; Defined at:
 13202 ;;		line 70 in file "PIC16Xpress_DevBoard.c"
 13203 ;; Parameters:    Size  Location     Type
 13204 ;;  pin             1    wreg     enum E7153
 13205 ;;  io              1    0[BANK0 ] unsigned char 
 13206 ;; Auto vars:     Size  Location     Type
 13207 ;;  pin             1    3[BANK0 ] enum E7153
 13208 ;; Return value:  Size  Location     Type
 13209 ;;                  1    wreg      unsigned char 
 13210 ;; Registers used:
 13211 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13212 ;; Tracked objects:
 13213 ;;		On entry : 0/0
 13214 ;;		On exit  : 0/0
 13215 ;;		Unchanged: 0/0
 13216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13217 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13219 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13220 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13221 ;;Total ram usage:        4 bytes
 13222 ;; Hardware stack levels used: 1
 13223 ;; Hardware stack levels required when called: 4
 13224 ;; This function calls:
 13225 ;;		Nothing
 13226 ;; This function is called by:
 13227 ;;		_JSN_Sensor_Init
 13228 ;;		_main
 13229 ;; This function uses a non-reentrant model
 13230 ;;
 13231                           
 13232  0416                     _SetPin:	
 13233                           ;psect for function _SetPin
 13234                           
 13235                           
 13236                           ;incstack = 0
 13237                           ; Regs used in _SetPin: [wreg-fsr0h+status,2+status,0]
 13238                           ;SetPin@pin stored from wreg
 13239  0416  0020               	movlb	0	; select bank0
 13240  0417  00A3               	movwf	SetPin@pin
 13241  0418                     l3673:
 13242                           
 13243                           ;PIC16Xpress_DevBoard.c: 71:     switch(pin) {
 13244  0418  2C90               	goto	l3745
 13245  0419                     l3675:
 13246                           
 13247                           ;PIC16Xpress_DevBoard.c: 73:             TRISAbits.TRISA5 = io;
 13248  0419  0C20               	rrf	SetPin@io,w
 13249  041A  0021               	movlb	1	; select bank1
 13250  041B  1C03               	skipc
 13251  041C  128C               	bcf	12,5	;volatile
 13252  041D  1803               	skipnc
 13253  041E  168C               	bsf	12,5	;volatile
 13254  041F  2CD0               	goto	l177
 13255  0420                     l3679:
 13256                           
 13257                           ;PIC16Xpress_DevBoard.c: 76:             TRISAbits.TRISA4 = io;
 13258  0420  0C20               	rrf	SetPin@io,w
 13259  0421  0021               	movlb	1	; select bank1
 13260  0422  1C03               	skipc
 13261  0423  120C               	bcf	12,4	;volatile
 13262  0424  1803               	skipnc
 13263  0425  160C               	bsf	12,4	;volatile
 13264  0426  2CD0               	goto	l177
 13265  0427                     l3683:
 13266                           
 13267                           ;PIC16Xpress_DevBoard.c: 81:             TRISCbits.TRISC5 = io;
 13268  0427  0C20               	rrf	SetPin@io,w
 13269  0428  0021               	movlb	1	; select bank1
 13270  0429  1C03               	skipc
 13271  042A  128E               	bcf	14,5	;volatile
 13272  042B  1803               	skipnc
 13273  042C  168E               	bsf	14,5	;volatile
 13274  042D  2CD0               	goto	l177
 13275  042E                     l3687:
 13276                           
 13277                           ;PIC16Xpress_DevBoard.c: 84:             TRISCbits.TRISC4 = io;
 13278  042E  0C20               	rrf	SetPin@io,w
 13279  042F  0021               	movlb	1	; select bank1
 13280  0430  1C03               	skipc
 13281  0431  120E               	bcf	14,4	;volatile
 13282  0432  1803               	skipnc
 13283  0433  160E               	bsf	14,4	;volatile
 13284  0434  2CD0               	goto	l177
 13285  0435                     l3691:
 13286                           
 13287                           ;PIC16Xpress_DevBoard.c: 87:             TRISCbits.TRISC3 = io;
 13288  0435  0C20               	rrf	SetPin@io,w
 13289  0436  0021               	movlb	1	; select bank1
 13290  0437  1C03               	skipc
 13291  0438  118E               	bcf	14,3	;volatile
 13292  0439  1803               	skipnc
 13293  043A  158E               	bsf	14,3	;volatile
 13294  043B  2CD0               	goto	l177
 13295  043C                     l3695:
 13296                           
 13297                           ;PIC16Xpress_DevBoard.c: 90:             TRISCbits.TRISC6 = io;
 13298  043C  0C20               	rrf	SetPin@io,w
 13299  043D  0021               	movlb	1	; select bank1
 13300  043E  1C03               	skipc
 13301  043F  130E               	bcf	14,6	;volatile
 13302  0440  1803               	skipnc
 13303  0441  170E               	bsf	14,6	;volatile
 13304  0442  2CD0               	goto	l177
 13305  0443                     l3699:
 13306                           
 13307                           ;PIC16Xpress_DevBoard.c: 93:             TRISCbits.TRISC7 = io;
 13308  0443  0C20               	rrf	SetPin@io,w
 13309  0444  0021               	movlb	1	; select bank1
 13310  0445  1C03               	skipc
 13311  0446  138E               	bcf	14,7	;volatile
 13312  0447  1803               	skipnc
 13313  0448  178E               	bsf	14,7	;volatile
 13314  0449  2CD0               	goto	l177
 13315  044A                     l3703:
 13316                           
 13317                           ;PIC16Xpress_DevBoard.c: 96:             TRISBbits.TRISB7 = io;
 13318  044A  0C20               	rrf	SetPin@io,w
 13319  044B  0021               	movlb	1	; select bank1
 13320  044C  1C03               	skipc
 13321  044D  138D               	bcf	13,7	;volatile
 13322  044E  1803               	skipnc
 13323  044F  178D               	bsf	13,7	;volatile
 13324  0450  2CD0               	goto	l177
 13325  0451                     l3707:
 13326                           
 13327                           ;PIC16Xpress_DevBoard.c: 99:             TRISAbits.TRISA0 = io;
 13328  0451  0C20               	rrf	SetPin@io,w
 13329  0452  0021               	movlb	1	; select bank1
 13330  0453  1C03               	skipc
 13331  0454  100C               	bcf	12,0	;volatile
 13332  0455  1803               	skipnc
 13333  0456  140C               	bsf	12,0	;volatile
 13334  0457  2CD0               	goto	l177
 13335  0458                     l3711:
 13336                           
 13337                           ;PIC16Xpress_DevBoard.c: 102:             TRISAbits.TRISA1 = io;
 13338  0458  0C20               	rrf	SetPin@io,w
 13339  0459  0021               	movlb	1	; select bank1
 13340  045A  1C03               	skipc
 13341  045B  108C               	bcf	12,1	;volatile
 13342  045C  1803               	skipnc
 13343  045D  148C               	bsf	12,1	;volatile
 13344  045E  2CD0               	goto	l177
 13345  045F                     l3715:
 13346                           
 13347                           ;PIC16Xpress_DevBoard.c: 105:             TRISAbits.TRISA2 = io;
 13348  045F  0C20               	rrf	SetPin@io,w
 13349  0460  0021               	movlb	1	; select bank1
 13350  0461  1C03               	skipc
 13351  0462  110C               	bcf	12,2	;volatile
 13352  0463  1803               	skipnc
 13353  0464  150C               	bsf	12,2	;volatile
 13354  0465  2CD0               	goto	l177
 13355  0466                     l3719:
 13356                           
 13357                           ;PIC16Xpress_DevBoard.c: 108:             TRISCbits.TRISC0 = io;
 13358  0466  0C20               	rrf	SetPin@io,w
 13359  0467  0021               	movlb	1	; select bank1
 13360  0468  1C03               	skipc
 13361  0469  100E               	bcf	14,0	;volatile
 13362  046A  1803               	skipnc
 13363  046B  140E               	bsf	14,0	;volatile
 13364  046C  2CD0               	goto	l177
 13365  046D                     l3723:
 13366                           
 13367                           ;PIC16Xpress_DevBoard.c: 111:             TRISCbits.TRISC1 = io;
 13368  046D  0C20               	rrf	SetPin@io,w
 13369  046E  0021               	movlb	1	; select bank1
 13370  046F  1C03               	skipc
 13371  0470  108E               	bcf	14,1	;volatile
 13372  0471  1803               	skipnc
 13373  0472  148E               	bsf	14,1	;volatile
 13374  0473  2CD0               	goto	l177
 13375  0474                     l3727:
 13376                           
 13377                           ;PIC16Xpress_DevBoard.c: 114:             TRISCbits.TRISC2 = io;
 13378  0474  0C20               	rrf	SetPin@io,w
 13379  0475  0021               	movlb	1	; select bank1
 13380  0476  1C03               	skipc
 13381  0477  110E               	bcf	14,2	;volatile
 13382  0478  1803               	skipnc
 13383  0479  150E               	bsf	14,2	;volatile
 13384  047A  2CD0               	goto	l177
 13385  047B                     l3731:
 13386                           
 13387                           ;PIC16Xpress_DevBoard.c: 117:             TRISBbits.TRISB4 = io;
 13388  047B  0C20               	rrf	SetPin@io,w
 13389  047C  0021               	movlb	1	; select bank1
 13390  047D  1C03               	skipc
 13391  047E  120D               	bcf	13,4	;volatile
 13392  047F  1803               	skipnc
 13393  0480  160D               	bsf	13,4	;volatile
 13394  0481  2CD0               	goto	l177
 13395  0482                     l3735:
 13396                           
 13397                           ;PIC16Xpress_DevBoard.c: 120:             TRISBbits.TRISB5 = io;
 13398  0482  0C20               	rrf	SetPin@io,w
 13399  0483  0021               	movlb	1	; select bank1
 13400  0484  1C03               	skipc
 13401  0485  128D               	bcf	13,5	;volatile
 13402  0486  1803               	skipnc
 13403  0487  168D               	bsf	13,5	;volatile
 13404  0488  2CD0               	goto	l177
 13405  0489                     l3739:
 13406                           
 13407                           ;PIC16Xpress_DevBoard.c: 123:             TRISBbits.TRISB6 = io;
 13408  0489  0C20               	rrf	SetPin@io,w
 13409  048A  0021               	movlb	1	; select bank1
 13410  048B  1C03               	skipc
 13411  048C  130D               	bcf	13,6	;volatile
 13412  048D  1803               	skipnc
 13413  048E  170D               	bsf	13,6	;volatile
 13414  048F  2CD0               	goto	l177
 13415  0490                     l3745:
 13416  0490  0823               	movf	SetPin@pin,w
 13417  0491  00A1               	movwf	??_SetPin
 13418  0492  01A2               	clrf	??_SetPin+1
 13419                           
 13420                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13421                           ; Switch size 1, requested type "simple"
 13422                           ; Number of cases is 1, Range of values is 0 to 0
 13423                           ; switch strategies available:
 13424                           ; Name         Instructions Cycles
 13425                           ; simple_byte            4     3 (average)
 13426                           ; direct_byte            8     6 (fixed)
 13427                           ; jumptable            260     6 (fixed)
 13428                           ;	Chosen strategy is simple_byte
 13429  0493  0822               	movf	??_SetPin+1,w
 13430  0494  3A00               	xorlw	0	; case 0
 13431  0495  1903               	skipnz
 13432  0496  2C98               	goto	l4511
 13433  0497  2CD0               	goto	l177
 13434  0498                     l4511:
 13435                           
 13436                           ; Switch size 1, requested type "simple"
 13437                           ; Number of cases is 18, Range of values is 0 to 17
 13438                           ; switch strategies available:
 13439                           ; Name         Instructions Cycles
 13440                           ; direct_byte           42     6 (fixed)
 13441                           ; simple_byte           55    28 (average)
 13442                           ; jumptable            260     6 (fixed)
 13443                           ;	Chosen strategy is simple_byte
 13444  0498  0821               	movf	??_SetPin,w
 13445  0499  3A00               	xorlw	0	; case 0
 13446  049A  1903               	skipnz
 13447  049B  2C19               	goto	l3675
 13448  049C  3A01               	xorlw	1	; case 1
 13449  049D  1903               	skipnz
 13450  049E  2C20               	goto	l3679
 13451  049F  3A03               	xorlw	3	; case 2
 13452  04A0  1903               	skipnz
 13453  04A1  2CD0               	goto	l177
 13454  04A2  3A01               	xorlw	1	; case 3
 13455  04A3  1903               	skipnz
 13456  04A4  2C27               	goto	l3683
 13457  04A5  3A07               	xorlw	7	; case 4
 13458  04A6  1903               	skipnz
 13459  04A7  2C2E               	goto	l3687
 13460  04A8  3A01               	xorlw	1	; case 5
 13461  04A9  1903               	skipnz
 13462  04AA  2C35               	goto	l3691
 13463  04AB  3A03               	xorlw	3	; case 6
 13464  04AC  1903               	skipnz
 13465  04AD  2C3C               	goto	l3695
 13466  04AE  3A01               	xorlw	1	; case 7
 13467  04AF  1903               	skipnz
 13468  04B0  2C43               	goto	l3699
 13469  04B1  3A0F               	xorlw	15	; case 8
 13470  04B2  1903               	skipnz
 13471  04B3  2C4A               	goto	l3703
 13472  04B4  3A01               	xorlw	1	; case 9
 13473  04B5  1903               	skipnz
 13474  04B6  2C51               	goto	l3707
 13475  04B7  3A03               	xorlw	3	; case 10
 13476  04B8  1903               	skipnz
 13477  04B9  2C58               	goto	l3711
 13478  04BA  3A01               	xorlw	1	; case 11
 13479  04BB  1903               	skipnz
 13480  04BC  2C5F               	goto	l3715
 13481  04BD  3A07               	xorlw	7	; case 12
 13482  04BE  1903               	skipnz
 13483  04BF  2C66               	goto	l3719
 13484  04C0  3A01               	xorlw	1	; case 13
 13485  04C1  1903               	skipnz
 13486  04C2  2C6D               	goto	l3723
 13487  04C3  3A03               	xorlw	3	; case 14
 13488  04C4  1903               	skipnz
 13489  04C5  2C74               	goto	l3727
 13490  04C6  3A01               	xorlw	1	; case 15
 13491  04C7  1903               	skipnz
 13492  04C8  2C7B               	goto	l3731
 13493  04C9  3A1F               	xorlw	31	; case 16
 13494  04CA  1903               	skipnz
 13495  04CB  2C82               	goto	l3735
 13496  04CC  3A01               	xorlw	1	; case 17
 13497  04CD  1903               	skipnz
 13498  04CE  2C89               	goto	l3739
 13499  04CF  2CD0               	goto	l177
 13500  04D0                     l177:
 13501  04D0  0008               	return
 13502  04D1                     __end_of_SetPin:
 13503                           
 13504                           	psect	text46
 13505  0F21                     __ptext46:	
 13506 ;; *************** function _JSN_Sensor_GetDistance *****************
 13507 ;; Defined at:
 13508 ;;		line 107 in file "JSN_Sensor.c"
 13509 ;; Parameters:    Size  Location     Type
 13510 ;;  Sensor          1    wreg     PTR struct .
 13511 ;;		 -> Sens2(6), Sens1(6), 
 13512 ;; Auto vars:     Size  Location     Type
 13513 ;;  Sensor          1   30[BANK0 ] PTR struct .
 13514 ;;		 -> Sens2(6), Sens1(6), 
 13515 ;; Return value:  Size  Location     Type
 13516 ;;                  2   26[BANK0 ] unsigned int 
 13517 ;; Registers used:
 13518 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13519 ;; Tracked objects:
 13520 ;;		On entry : 0/0
 13521 ;;		On exit  : 0/0
 13522 ;;		Unchanged: 0/0
 13523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13524 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13525 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13526 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13527 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13528 ;;Total ram usage:        5 bytes
 13529 ;; Hardware stack levels used: 1
 13530 ;; Hardware stack levels required when called: 5
 13531 ;; This function calls:
 13532 ;;		___lldiv
 13533 ;;		___lmul
 13534 ;; This function is called by:
 13535 ;;		_main
 13536 ;; This function uses a non-reentrant model
 13537 ;;
 13538                           
 13539  0F21                     _JSN_Sensor_GetDistance:	
 13540                           ;psect for function _JSN_Sensor_GetDistance
 13541                           
 13542                           
 13543                           ;incstack = 0
 13544                           ; Regs used in _JSN_Sensor_GetDistance: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13545                           ;JSN_Sensor_GetDistance@Sensor stored from wreg
 13546  0F21  0020               	movlb	0	; select bank0
 13547  0F22  00BE               	movwf	JSN_Sensor_GetDistance@Sensor
 13548  0F23                     l4029:
 13549                           
 13550                           ;JSN_Sensor.c: 112:     Sensor->distance = (unsigned int) (((uint32_t) Sensor->echoHighT
      +                          ime *
 13551  0F23  3000               	movlw	0
 13552  0F24  00AF               	movwf	___lldiv@divisor+3
 13553  0F25  3000               	movlw	0
 13554  0F26  00AE               	movwf	___lldiv@divisor+2
 13555  0F27  3007               	movlw	7
 13556  0F28  00AD               	movwf	___lldiv@divisor+1
 13557  0F29  30D0               	movlw	208
 13558  0F2A  00AC               	movwf	___lldiv@divisor
 13559  0F2B  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 13560  0F2C  0086               	movwf	6
 13561  0F2D  3001               	movlw	1	; select bank2/3
 13562  0F2E  0087               	movwf	7
 13563  0F2F  3F40               	moviw [0]fsr1
 13564  0F30  00BC               	movwf	??_JSN_Sensor_GetDistance
 13565  0F31  3F41               	moviw [1]fsr1
 13566  0F32  00BD               	movwf	??_JSN_Sensor_GetDistance+1
 13567  0F33  083C               	movf	??_JSN_Sensor_GetDistance,w
 13568  0F34  00A0               	movwf	___lmul@multiplier
 13569  0F35  083D               	movf	??_JSN_Sensor_GetDistance+1,w
 13570  0F36  00A1               	movwf	___lmul@multiplier+1
 13571  0F37  01A2               	clrf	___lmul@multiplier+2
 13572  0F38  01A3               	clrf	___lmul@multiplier+3
 13573  0F39  3000               	movlw	0
 13574  0F3A  00A7               	movwf	___lmul@multiplicand+3
 13575  0F3B  3000               	movlw	0
 13576  0F3C  00A6               	movwf	___lmul@multiplicand+2
 13577  0F3D  3001               	movlw	1
 13578  0F3E  00A5               	movwf	___lmul@multiplicand+1
 13579  0F3F  3057               	movlw	87
 13580  0F40  00A4               	movwf	___lmul@multiplicand
 13581  0F41  318D  2583  318F   	fcall	___lmul
 13582  0F44  0020               	movlb	0	; select bank0
 13583  0F45  0823               	movf	?___lmul+3,w
 13584  0F46  00B3               	movwf	___lldiv@dividend+3
 13585  0F47  0822               	movf	?___lmul+2,w
 13586  0F48  00B2               	movwf	___lldiv@dividend+2
 13587  0F49  0821               	movf	?___lmul+1,w
 13588  0F4A  00B1               	movwf	___lldiv@dividend+1
 13589  0F4B  0820               	movf	?___lmul,w
 13590  0F4C  00B0               	movwf	___lldiv@dividend
 13591  0F4D  3186  26FB  318F   	fcall	___lldiv
 13592  0F50  0020               	movlb	0	; select bank0
 13593  0F51  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 13594  0F52  3E02               	addlw	2
 13595  0F53  0086               	movwf	6
 13596  0F54  3001               	movlw	1	; select bank2/3
 13597  0F55  0087               	movwf	7
 13598  0F56  082C               	movf	?___lldiv,w
 13599  0F57  3FC0               	movwi [0]fsr1
 13600  0F58  082D               	movf	?___lldiv+1,w
 13601  0F59  3FC1               	movwi [1]fsr1
 13602  0F5A                     l4031:
 13603                           
 13604                           ;JSN_Sensor.c: 114:     return Sensor->distance;
 13605  0F5A  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 13606  0F5B  3E02               	addlw	2
 13607  0F5C  0086               	movwf	6
 13608  0F5D  3001               	movlw	1	; select bank2/3
 13609  0F5E  0087               	movwf	7
 13610  0F5F  3F40               	moviw [0]fsr1
 13611  0F60  00BA               	movwf	?_JSN_Sensor_GetDistance
 13612  0F61  3F41               	moviw [1]fsr1
 13613  0F62  00BB               	movwf	?_JSN_Sensor_GetDistance+1
 13614  0F63                     l57:
 13615  0F63  0008               	return
 13616  0F64                     __end_of_JSN_Sensor_GetDistance:
 13617                           
 13618                           	psect	text47
 13619  0D83                     __ptext47:	
 13620 ;; *************** function ___lmul *****************
 13621 ;; Defined at:
 13622 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul32.c"
 13623 ;; Parameters:    Size  Location     Type
 13624 ;;  multiplier      4    0[BANK0 ] unsigned long 
 13625 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 13626 ;; Auto vars:     Size  Location     Type
 13627 ;;  product         4    8[BANK0 ] unsigned long 
 13628 ;; Return value:  Size  Location     Type
 13629 ;;                  4    0[BANK0 ] unsigned long 
 13630 ;; Registers used:
 13631 ;;		wreg, status,2, status,0
 13632 ;; Tracked objects:
 13633 ;;		On entry : 0/0
 13634 ;;		On exit  : 0/0
 13635 ;;		Unchanged: 0/0
 13636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13637 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13638 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13640 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13641 ;;Total ram usage:       12 bytes
 13642 ;; Hardware stack levels used: 1
 13643 ;; Hardware stack levels required when called: 4
 13644 ;; This function calls:
 13645 ;;		Nothing
 13646 ;; This function is called by:
 13647 ;;		_JSN_Sensor_GetDistance
 13648 ;; This function uses a non-reentrant model
 13649 ;;
 13650                           
 13651  0D83                     ___lmul:	
 13652                           ;psect for function ___lmul
 13653                           
 13654  0D83                     l3927:	
 13655                           ;incstack = 0
 13656                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13657                           
 13658  0D83  3000               	movlw	0
 13659  0D84  0020               	movlb	0	; select bank0
 13660  0D85  00AB               	movwf	___lmul@product+3
 13661  0D86  3000               	movlw	0
 13662  0D87  00AA               	movwf	___lmul@product+2
 13663  0D88  3000               	movlw	0
 13664  0D89  00A9               	movwf	___lmul@product+1
 13665  0D8A  3000               	movlw	0
 13666  0D8B  00A8               	movwf	___lmul@product
 13667  0D8C                     l3929:
 13668  0D8C  1C20               	btfss	___lmul@multiplier,0
 13669  0D8D  2D8F               	goto	u1231
 13670  0D8E  2D90               	goto	u1230
 13671  0D8F                     u1231:
 13672  0D8F  2D98               	goto	l3933
 13673  0D90                     u1230:
 13674  0D90                     l3931:
 13675  0D90  0824               	movf	___lmul@multiplicand,w
 13676  0D91  07A8               	addwf	___lmul@product,f
 13677  0D92  0825               	movf	___lmul@multiplicand+1,w
 13678  0D93  3DA9               	addwfc	___lmul@product+1,f
 13679  0D94  0826               	movf	___lmul@multiplicand+2,w
 13680  0D95  3DAA               	addwfc	___lmul@product+2,f
 13681  0D96  0827               	movf	___lmul@multiplicand+3,w
 13682  0D97  3DAB               	addwfc	___lmul@product+3,f
 13683  0D98                     l3933:
 13684  0D98  3001               	movlw	1
 13685  0D99                     u1245:
 13686  0D99  35A4               	lslf	___lmul@multiplicand,f
 13687  0D9A  0DA5               	rlf	___lmul@multiplicand+1,f
 13688  0D9B  0DA6               	rlf	___lmul@multiplicand+2,f
 13689  0D9C  0DA7               	rlf	___lmul@multiplicand+3,f
 13690  0D9D  0B89               	decfsz	9,f
 13691  0D9E  2D99               	goto	u1245
 13692  0D9F                     l3935:
 13693  0D9F  3001               	movlw	1
 13694  0DA0                     u1255:
 13695  0DA0  36A3               	lsrf	___lmul@multiplier+3,f
 13696  0DA1  0CA2               	rrf	___lmul@multiplier+2,f
 13697  0DA2  0CA1               	rrf	___lmul@multiplier+1,f
 13698  0DA3  0CA0               	rrf	___lmul@multiplier,f
 13699  0DA4  0B89               	decfsz	9,f
 13700  0DA5  2DA0               	goto	u1255
 13701  0DA6  0823               	movf	___lmul@multiplier+3,w
 13702  0DA7  0422               	iorwf	___lmul@multiplier+2,w
 13703  0DA8  0421               	iorwf	___lmul@multiplier+1,w
 13704  0DA9  0420               	iorwf	___lmul@multiplier,w
 13705  0DAA  1D03               	skipz
 13706  0DAB  2DAD               	goto	u1261
 13707  0DAC  2DAE               	goto	u1260
 13708  0DAD                     u1261:
 13709  0DAD  2D8C               	goto	l3929
 13710  0DAE                     u1260:
 13711  0DAE                     l3937:
 13712  0DAE  082B               	movf	___lmul@product+3,w
 13713  0DAF  00A3               	movwf	?___lmul+3
 13714  0DB0  082A               	movf	___lmul@product+2,w
 13715  0DB1  00A2               	movwf	?___lmul+2
 13716  0DB2  0829               	movf	___lmul@product+1,w
 13717  0DB3  00A1               	movwf	?___lmul+1
 13718  0DB4  0828               	movf	___lmul@product,w
 13719  0DB5  00A0               	movwf	?___lmul
 13720  0DB6                     l1183:
 13721  0DB6  0008               	return
 13722  0DB7                     __end_of___lmul:
 13723                           
 13724                           	psect	text48
 13725  06FB                     __ptext48:	
 13726 ;; *************** function ___lldiv *****************
 13727 ;; Defined at:
 13728 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\__lldiv.c"
 13729 ;; Parameters:    Size  Location     Type
 13730 ;;  divisor         4   12[BANK0 ] unsigned long 
 13731 ;;  dividend        4   16[BANK0 ] unsigned long 
 13732 ;; Auto vars:     Size  Location     Type
 13733 ;;  quotient        4   21[BANK0 ] unsigned long 
 13734 ;;  counter         1   25[BANK0 ] unsigned char 
 13735 ;; Return value:  Size  Location     Type
 13736 ;;                  4   12[BANK0 ] unsigned long 
 13737 ;; Registers used:
 13738 ;;		wreg, status,2, status,0
 13739 ;; Tracked objects:
 13740 ;;		On entry : 0/0
 13741 ;;		On exit  : 0/0
 13742 ;;		Unchanged: 0/0
 13743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13744 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13745 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13746 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13747 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13748 ;;Total ram usage:       14 bytes
 13749 ;; Hardware stack levels used: 1
 13750 ;; Hardware stack levels required when called: 4
 13751 ;; This function calls:
 13752 ;;		Nothing
 13753 ;; This function is called by:
 13754 ;;		_JSN_Sensor_GetDistance
 13755 ;; This function uses a non-reentrant model
 13756 ;;
 13757                           
 13758  06FB                     ___lldiv:	
 13759                           ;psect for function ___lldiv
 13760                           
 13761  06FB                     l3941:	
 13762                           ;incstack = 0
 13763                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 13764                           
 13765  06FB  3000               	movlw	0
 13766  06FC  0020               	movlb	0	; select bank0
 13767  06FD  00B8               	movwf	___lldiv@quotient+3
 13768  06FE  3000               	movlw	0
 13769  06FF  00B7               	movwf	___lldiv@quotient+2
 13770  0700  3000               	movlw	0
 13771  0701  00B6               	movwf	___lldiv@quotient+1
 13772  0702  3000               	movlw	0
 13773  0703  00B5               	movwf	___lldiv@quotient
 13774  0704  082F               	movf	___lldiv@divisor+3,w
 13775  0705  042E               	iorwf	___lldiv@divisor+2,w
 13776  0706  042D               	iorwf	___lldiv@divisor+1,w
 13777  0707  042C               	iorwf	___lldiv@divisor,w
 13778  0708  1903               	skipnz
 13779  0709  2F0B               	goto	u1271
 13780  070A  2F0C               	goto	u1270
 13781  070B                     u1271:
 13782  070B  2F4D               	goto	l3961
 13783  070C                     u1270:
 13784  070C                     l3943:
 13785  070C  01B9               	clrf	___lldiv@counter
 13786  070D  0AB9               	incf	___lldiv@counter,f
 13787  070E  2F1A               	goto	l3947
 13788  070F                     l3945:
 13789  070F  3001               	movlw	1
 13790  0710                     u1285:
 13791  0710  35AC               	lslf	___lldiv@divisor,f
 13792  0711  0DAD               	rlf	___lldiv@divisor+1,f
 13793  0712  0DAE               	rlf	___lldiv@divisor+2,f
 13794  0713  0DAF               	rlf	___lldiv@divisor+3,f
 13795  0714  0B89               	decfsz	9,f
 13796  0715  2F10               	goto	u1285
 13797  0716  3001               	movlw	1
 13798  0717  00B4               	movwf	??___lldiv
 13799  0718  0834               	movf	??___lldiv,w
 13800  0719  07B9               	addwf	___lldiv@counter,f
 13801  071A                     l3947:
 13802  071A  1FAF               	btfss	___lldiv@divisor+3,7
 13803  071B  2F1D               	goto	u1291
 13804  071C  2F1E               	goto	u1290
 13805  071D                     u1291:
 13806  071D  2F0F               	goto	l3945
 13807  071E                     u1290:
 13808  071E                     l3949:
 13809  071E  3001               	movlw	1
 13810  071F                     u1305:
 13811  071F  35B5               	lslf	___lldiv@quotient,f
 13812  0720  0DB6               	rlf	___lldiv@quotient+1,f
 13813  0721  0DB7               	rlf	___lldiv@quotient+2,f
 13814  0722  0DB8               	rlf	___lldiv@quotient+3,f
 13815  0723  0B89               	decfsz	9,f
 13816  0724  2F1F               	goto	u1305
 13817  0725                     l3951:
 13818  0725  082F               	movf	___lldiv@divisor+3,w
 13819  0726  0233               	subwf	___lldiv@dividend+3,w
 13820  0727  1D03               	skipz
 13821  0728  2F33               	goto	u1315
 13822  0729  082E               	movf	___lldiv@divisor+2,w
 13823  072A  0232               	subwf	___lldiv@dividend+2,w
 13824  072B  1D03               	skipz
 13825  072C  2F33               	goto	u1315
 13826  072D  082D               	movf	___lldiv@divisor+1,w
 13827  072E  0231               	subwf	___lldiv@dividend+1,w
 13828  072F  1D03               	skipz
 13829  0730  2F33               	goto	u1315
 13830  0731  082C               	movf	___lldiv@divisor,w
 13831  0732  0230               	subwf	___lldiv@dividend,w
 13832  0733                     u1315:
 13833  0733  1C03               	skipc
 13834  0734  2F36               	goto	u1311
 13835  0735  2F37               	goto	u1310
 13836  0736                     u1311:
 13837  0736  2F40               	goto	l3957
 13838  0737                     u1310:
 13839  0737                     l3953:
 13840  0737  082C               	movf	___lldiv@divisor,w
 13841  0738  02B0               	subwf	___lldiv@dividend,f
 13842  0739  082D               	movf	___lldiv@divisor+1,w
 13843  073A  3BB1               	subwfb	___lldiv@dividend+1,f
 13844  073B  082E               	movf	___lldiv@divisor+2,w
 13845  073C  3BB2               	subwfb	___lldiv@dividend+2,f
 13846  073D  082F               	movf	___lldiv@divisor+3,w
 13847  073E  3BB3               	subwfb	___lldiv@dividend+3,f
 13848  073F                     l3955:
 13849  073F  1435               	bsf	___lldiv@quotient,0
 13850  0740                     l3957:
 13851  0740  3001               	movlw	1
 13852  0741                     u1325:
 13853  0741  36AF               	lsrf	___lldiv@divisor+3,f
 13854  0742  0CAE               	rrf	___lldiv@divisor+2,f
 13855  0743  0CAD               	rrf	___lldiv@divisor+1,f
 13856  0744  0CAC               	rrf	___lldiv@divisor,f
 13857  0745  0B89               	decfsz	9,f
 13858  0746  2F41               	goto	u1325
 13859  0747                     l3959:
 13860  0747  3001               	movlw	1
 13861  0748  02B9               	subwf	___lldiv@counter,f
 13862  0749  1D03               	btfss	3,2
 13863  074A  2F4C               	goto	u1331
 13864  074B  2F4D               	goto	u1330
 13865  074C                     u1331:
 13866  074C  2F1E               	goto	l3949
 13867  074D                     u1330:
 13868  074D                     l3961:
 13869  074D  0838               	movf	___lldiv@quotient+3,w
 13870  074E  00AF               	movwf	?___lldiv+3
 13871  074F  0837               	movf	___lldiv@quotient+2,w
 13872  0750  00AE               	movwf	?___lldiv+2
 13873  0751  0836               	movf	___lldiv@quotient+1,w
 13874  0752  00AD               	movwf	?___lldiv+1
 13875  0753  0835               	movf	___lldiv@quotient,w
 13876  0754  00AC               	movwf	?___lldiv
 13877  0755                     l1205:
 13878  0755  0008               	return
 13879  0756                     __end_of___lldiv:
 13880                           
 13881                           	psect	text49
 13882  0B24                     __ptext49:	
 13883 ;; *************** function _FRT_GetMillis *****************
 13884 ;; Defined at:
 13885 ;;		line 26 in file "FRT.c"
 13886 ;; Parameters:    Size  Location     Type
 13887 ;;		None
 13888 ;; Auto vars:     Size  Location     Type
 13889 ;;		None
 13890 ;; Return value:  Size  Location     Type
 13891 ;;                  4    0[BANK0 ] unsigned long 
 13892 ;; Registers used:
 13893 ;;		wreg
 13894 ;; Tracked objects:
 13895 ;;		On entry : 0/0
 13896 ;;		On exit  : 0/0
 13897 ;;		Unchanged: 0/0
 13898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13899 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13902 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13903 ;;Total ram usage:        4 bytes
 13904 ;; Hardware stack levels used: 1
 13905 ;; Hardware stack levels required when called: 4
 13906 ;; This function calls:
 13907 ;;		Nothing
 13908 ;; This function is called by:
 13909 ;;		_main
 13910 ;; This function uses a non-reentrant model
 13911 ;;
 13912                           
 13913  0B24                     _FRT_GetMillis:	
 13914                           ;psect for function _FRT_GetMillis
 13915                           
 13916  0B24                     l4067:	
 13917                           ;incstack = 0
 13918                           ; Regs used in _FRT_GetMillis: [wreg]
 13919                           
 13920                           
 13921                           ;FRT.c: 27:     return millis;
 13922  0B24  0022               	movlb	2	; select bank2
 13923  0B25  0845               	movf	(_millis+3)^(0+256),w
 13924  0B26  0020               	movlb	0	; select bank0
 13925  0B27  00A3               	movwf	?_FRT_GetMillis+3
 13926  0B28  0022               	movlb	2	; select bank2
 13927  0B29  0844               	movf	(_millis+2)^(0+256),w
 13928  0B2A  0020               	movlb	0	; select bank0
 13929  0B2B  00A2               	movwf	?_FRT_GetMillis+2
 13930  0B2C  0022               	movlb	2	; select bank2
 13931  0B2D  0843               	movf	(_millis+1)^(0+256),w
 13932  0B2E  0020               	movlb	0	; select bank0
 13933  0B2F  00A1               	movwf	?_FRT_GetMillis+1
 13934  0B30  0022               	movlb	2	; select bank2
 13935  0B31  0842               	movf	_millis^(0+256),w
 13936  0B32  0020               	movlb	0	; select bank0
 13937  0B33  00A0               	movwf	?_FRT_GetMillis
 13938  0B34                     l849:
 13939  0B34  0008               	return
 13940  0B35                     __end_of_FRT_GetMillis:
 13941                           
 13942                           	psect	intentry
 13943  0004                     __pintentry:	
 13944 ;; *************** function _INTERRUPT_InterruptManager *****************
 13945 ;; Defined at:
 13946 ;;		line 16 in file "interrupt_manager.c"
 13947 ;; Parameters:    Size  Location     Type
 13948 ;;		None
 13949 ;; Auto vars:     Size  Location     Type
 13950 ;;		None
 13951 ;; Return value:  Size  Location     Type
 13952 ;;                  1    wreg      void 
 13953 ;; Registers used:
 13954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13955 ;; Tracked objects:
 13956 ;;		On entry : 0/0
 13957 ;;		On exit  : 0/0
 13958 ;;		Unchanged: 0/0
 13959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13964 ;;Total ram usage:        0 bytes
 13965 ;; Hardware stack levels used: 1
 13966 ;; Hardware stack levels required when called: 3
 13967 ;; This function calls:
 13968 ;;		Absolute function
 13969 ;;		_CCP1_CaptureISR
 13970 ;;		_CCP2_CaptureISR
 13971 ;;		_CCP3_CaptureISR
 13972 ;;		_CCP4_CompareISR
 13973 ;;		_EUSART_Receive_ISR
 13974 ;;		_EUSART_Transmit_ISR
 13975 ;;		_TMR0_ISR
 13976 ;;		_TMR1_ISR
 13977 ;;		_TMR3_ISR
 13978 ;; This function is called by:
 13979 ;;		Interrupt level 1
 13980 ;; This function uses a non-reentrant model
 13981 ;;
 13982                           
 13983  0004                     _INTERRUPT_InterruptManager:
 13984                           
 13985                           ;incstack = 0
 13986  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13987                           
 13988                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13989  0005  3180               	pagesel	$
 13990  0006                     i1l4231:
 13991                           
 13992                           ;interrupt_manager.c: 19:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 13993  0006  0021               	movlb	1	; select bank1
 13994  0007  1E90               	btfss	16,5	;volatile
 13995  0008  280A               	goto	u150_21
 13996  0009  280B               	goto	u150_20
 13997  000A                     u150_21:
 13998  000A  2814               	goto	i1l764
 13999  000B                     u150_20:
 14000  000B                     i1l4233:
 14001  000B  0020               	movlb	0	; select bank0
 14002  000C  1E90               	btfss	16,5	;volatile
 14003  000D  280F               	goto	u151_21
 14004  000E  2810               	goto	u151_20
 14005  000F                     u151_21:
 14006  000F  2814               	goto	i1l764
 14007  0010                     u151_20:
 14008  0010                     i1l4235:
 14009                           
 14010                           ;interrupt_manager.c: 20:     {;interrupt_manager.c: 21:         TMR0_ISR();
 14011  0010  318B  23B2  3180   	fcall	_TMR0_ISR
 14012                           
 14013                           ;interrupt_manager.c: 22:     }
 14014  0013  288E               	goto	i1l782
 14015  0014                     i1l764:	
 14016                           ;interrupt_manager.c: 23:     else if(INTCONbits.PEIE == 1)
 14017                           
 14018  0014  1F0B               	btfss	11,6	;volatile
 14019  0015  2817               	goto	u152_21
 14020  0016  2818               	goto	u152_20
 14021  0017                     u152_21:
 14022  0017  288E               	goto	i1l782
 14023  0018                     u152_20:
 14024  0018                     i1l4237:
 14025                           
 14026                           ;interrupt_manager.c: 24:     {;interrupt_manager.c: 25:         if(PIE4bits.CCP4IE == 1
      +                           && PIR4bits.CCP4IF == 1)
 14027  0018  0021               	movlb	1	; select bank1
 14028  0019  1D94               	btfss	20,3	;volatile
 14029  001A  281C               	goto	u153_21
 14030  001B  281D               	goto	u153_20
 14031  001C                     u153_21:
 14032  001C  2826               	goto	i1l767
 14033  001D                     u153_20:
 14034  001D                     i1l4239:
 14035  001D  0020               	movlb	0	; select bank0
 14036  001E  1D94               	btfss	20,3	;volatile
 14037  001F  2821               	goto	u154_21
 14038  0020  2822               	goto	u154_20
 14039  0021                     u154_21:
 14040  0021  2826               	goto	i1l767
 14041  0022                     u154_20:
 14042  0022                     i1l4241:
 14043                           
 14044                           ;interrupt_manager.c: 26:         {;interrupt_manager.c: 27:             CCP4_CompareISR
      +                          ();
 14045  0022  318A  2237  3180   	fcall	_CCP4_CompareISR
 14046                           
 14047                           ;interrupt_manager.c: 28:         }
 14048  0025  288E               	goto	i1l782
 14049  0026                     i1l767:	
 14050                           ;interrupt_manager.c: 29:         else if(PIE3bits.TMR3IE == 1 && PIR3bits.TMR3IF == 1)
 14051                           
 14052  0026  0021               	movlb	1	; select bank1
 14053  0027  1E13               	btfss	19,4	;volatile
 14054  0028  282A               	goto	u155_21
 14055  0029  282B               	goto	u155_20
 14056  002A                     u155_21:
 14057  002A  2834               	goto	i1l769
 14058  002B                     u155_20:
 14059  002B                     i1l4243:
 14060  002B  0020               	movlb	0	; select bank0
 14061  002C  1E13               	btfss	19,4	;volatile
 14062  002D  282F               	goto	u156_21
 14063  002E  2830               	goto	u156_20
 14064  002F                     u156_21:
 14065  002F  2834               	goto	i1l769
 14066  0030                     u156_20:
 14067  0030                     i1l4245:
 14068                           
 14069                           ;interrupt_manager.c: 30:         {;interrupt_manager.c: 31:             TMR3_ISR();
 14070  0030  318B  23C9  3180   	fcall	_TMR3_ISR
 14071                           
 14072                           ;interrupt_manager.c: 32:         }
 14073  0033  288E               	goto	i1l782
 14074  0034                     i1l769:	
 14075                           ;interrupt_manager.c: 33:         else if(PIE4bits.CCP1IE == 1 && PIR4bits.CCP1IF == 1)
 14076                           
 14077  0034  0021               	movlb	1	; select bank1
 14078  0035  1C14               	btfss	20,0	;volatile
 14079  0036  2838               	goto	u157_21
 14080  0037  2839               	goto	u157_20
 14081  0038                     u157_21:
 14082  0038  2842               	goto	i1l771
 14083  0039                     u157_20:
 14084  0039                     i1l4247:
 14085  0039  0020               	movlb	0	; select bank0
 14086  003A  1C14               	btfss	20,0	;volatile
 14087  003B  283D               	goto	u158_21
 14088  003C  283E               	goto	u158_20
 14089  003D                     u158_21:
 14090  003D  2842               	goto	i1l771
 14091  003E                     u158_20:
 14092  003E                     i1l4249:
 14093                           
 14094                           ;interrupt_manager.c: 34:         {;interrupt_manager.c: 35:             CCP1_CaptureISR
      +                          ();
 14095  003E  318B  2370  3180   	fcall	_CCP1_CaptureISR
 14096                           
 14097                           ;interrupt_manager.c: 36:         }
 14098  0041  288E               	goto	i1l782
 14099  0042                     i1l771:	
 14100                           ;interrupt_manager.c: 37:         else if(PIE4bits.CCP3IE == 1 && PIR4bits.CCP3IF == 1)
 14101                           
 14102  0042  0021               	movlb	1	; select bank1
 14103  0043  1D14               	btfss	20,2	;volatile
 14104  0044  2846               	goto	u159_21
 14105  0045  2847               	goto	u159_20
 14106  0046                     u159_21:
 14107  0046  2850               	goto	i1l773
 14108  0047                     u159_20:
 14109  0047                     i1l4251:
 14110  0047  0020               	movlb	0	; select bank0
 14111  0048  1D14               	btfss	20,2	;volatile
 14112  0049  284B               	goto	u160_21
 14113  004A  284C               	goto	u160_20
 14114  004B                     u160_21:
 14115  004B  2850               	goto	i1l773
 14116  004C                     u160_20:
 14117  004C                     i1l4253:
 14118                           
 14119                           ;interrupt_manager.c: 38:         {;interrupt_manager.c: 39:             CCP3_CaptureISR
      +                          ();
 14120  004C  318B  239C  3180   	fcall	_CCP3_CaptureISR
 14121                           
 14122                           ;interrupt_manager.c: 40:         }
 14123  004F  288E               	goto	i1l782
 14124  0050                     i1l773:	
 14125                           ;interrupt_manager.c: 41:         else if(PIE4bits.CCP2IE == 1 && PIR4bits.CCP2IF == 1)
 14126                           
 14127  0050  0021               	movlb	1	; select bank1
 14128  0051  1C94               	btfss	20,1	;volatile
 14129  0052  2854               	goto	u161_21
 14130  0053  2855               	goto	u161_20
 14131  0054                     u161_21:
 14132  0054  285E               	goto	i1l775
 14133  0055                     u161_20:
 14134  0055                     i1l4255:
 14135  0055  0020               	movlb	0	; select bank0
 14136  0056  1C94               	btfss	20,1	;volatile
 14137  0057  2859               	goto	u162_21
 14138  0058  285A               	goto	u162_20
 14139  0059                     u162_21:
 14140  0059  285E               	goto	i1l775
 14141  005A                     u162_20:
 14142  005A                     i1l4257:
 14143                           
 14144                           ;interrupt_manager.c: 42:         {;interrupt_manager.c: 43:             CCP2_CaptureISR
      +                          ();
 14145  005A  318B  2386  3180   	fcall	_CCP2_CaptureISR
 14146                           
 14147                           ;interrupt_manager.c: 44:         }
 14148  005D  288E               	goto	i1l782
 14149  005E                     i1l775:	
 14150                           ;interrupt_manager.c: 45:         else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 14151                           
 14152  005E  0021               	movlb	1	; select bank1
 14153  005F  1C11               	btfss	17,0	;volatile
 14154  0060  2862               	goto	u163_21
 14155  0061  2863               	goto	u163_20
 14156  0062                     u163_21:
 14157  0062  286C               	goto	i1l777
 14158  0063                     u163_20:
 14159  0063                     i1l4259:
 14160  0063  0020               	movlb	0	; select bank0
 14161  0064  1C11               	btfss	17,0	;volatile
 14162  0065  2867               	goto	u164_21
 14163  0066  2868               	goto	u164_20
 14164  0067                     u164_21:
 14165  0067  286C               	goto	i1l777
 14166  0068                     u164_20:
 14167  0068                     i1l4261:
 14168                           
 14169                           ;interrupt_manager.c: 46:         {;interrupt_manager.c: 47:             TMR1_ISR();
 14170  0068  3187  27F5  3180   	fcall	_TMR1_ISR
 14171                           
 14172                           ;interrupt_manager.c: 48:         }
 14173  006B  288E               	goto	i1l782
 14174  006C                     i1l777:	
 14175                           ;interrupt_manager.c: 49:         else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 14176                           
 14177  006C  0021               	movlb	1	; select bank1
 14178  006D  1E91               	btfss	17,5	;volatile
 14179  006E  2870               	goto	u165_21
 14180  006F  2871               	goto	u165_20
 14181  0070                     u165_21:
 14182  0070  287D               	goto	i1l779
 14183  0071                     u165_20:
 14184  0071                     i1l4263:
 14185  0071  0020               	movlb	0	; select bank0
 14186  0072  1E91               	btfss	17,5	;volatile
 14187  0073  2875               	goto	u166_21
 14188  0074  2876               	goto	u166_20
 14189  0075                     u166_21:
 14190  0075  287D               	goto	i1l779
 14191  0076                     u166_20:
 14192  0076                     i1l4265:
 14193                           
 14194                           ;interrupt_manager.c: 50:         {;interrupt_manager.c: 51:             EUSART_RxDefaul
      +                          tInterruptHandler();
 14195  0076  0021               	movlb	1	; select bank1
 14196  0077  0833               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 14197  0078  008A               	movwf	10
 14198  0079  0832               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 14199  007A  000A               	callw
 14200  007B  3180               	pagesel	$
 14201                           
 14202                           ;interrupt_manager.c: 52:         }
 14203  007C  288E               	goto	i1l782
 14204  007D                     i1l779:	
 14205                           ;interrupt_manager.c: 53:         else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 14206                           
 14207  007D  0021               	movlb	1	; select bank1
 14208  007E  1E11               	btfss	17,4	;volatile
 14209  007F  2881               	goto	u167_21
 14210  0080  2882               	goto	u167_20
 14211  0081                     u167_21:
 14212  0081  288E               	goto	i1l776
 14213  0082                     u167_20:
 14214  0082                     i1l4267:
 14215  0082  0020               	movlb	0	; select bank0
 14216  0083  1E11               	btfss	17,4	;volatile
 14217  0084  2886               	goto	u168_21
 14218  0085  2887               	goto	u168_20
 14219  0086                     u168_21:
 14220  0086  288E               	goto	i1l776
 14221  0087                     u168_20:
 14222  0087                     i1l4269:
 14223                           
 14224                           ;interrupt_manager.c: 54:         {;interrupt_manager.c: 55:             EUSART_TxDefaul
      +                          tInterruptHandler();
 14225  0087  0021               	movlb	1	; select bank1
 14226  0088  0835               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 14227  0089  008A               	movwf	10
 14228  008A  0834               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 14229  008B  000A               	callw
 14230  008C  3180               	pagesel	$
 14231  008D  288E               	goto	i1l782
 14232  008E                     i1l776:
 14233  008E                     i1l782:
 14234  008E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 14235  008F  0009               	retfie
 14236  0090                     __end_of_INTERRUPT_InterruptManager:
 14237                           
 14238                           	psect	text51
 14239  0BC9                     __ptext51:	
 14240 ;; *************** function _TMR3_ISR *****************
 14241 ;; Defined at:
 14242 ;;		line 129 in file "tmr3.c"
 14243 ;; Parameters:    Size  Location     Type
 14244 ;;		None
 14245 ;; Auto vars:     Size  Location     Type
 14246 ;;		None
 14247 ;; Return value:  Size  Location     Type
 14248 ;;                  1    wreg      void 
 14249 ;; Registers used:
 14250 ;;		wreg, status,2, status,0, pclath, cstack
 14251 ;; Tracked objects:
 14252 ;;		On entry : 0/0
 14253 ;;		On exit  : 0/0
 14254 ;;		Unchanged: 0/0
 14255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14260 ;;Total ram usage:        0 bytes
 14261 ;; Hardware stack levels used: 1
 14262 ;; Hardware stack levels required when called: 1
 14263 ;; This function calls:
 14264 ;;		Absolute function
 14265 ;;		_TMR3_DefaultInterruptHandler
 14266 ;;		_TMR3_WriteTimer
 14267 ;; This function is called by:
 14268 ;;		_INTERRUPT_InterruptManager
 14269 ;; This function uses a non-reentrant model
 14270 ;;
 14271                           
 14272  0BC9                     _TMR3_ISR:	
 14273                           ;psect for function _TMR3_ISR
 14274                           
 14275  0BC9                     i1l4157:	
 14276                           ;incstack = 0
 14277                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 14278                           
 14279                           
 14280                           ;tmr3.c: 133:     PIR3bits.TMR3IF = 0;
 14281  0BC9  0020               	movlb	0	; select bank0
 14282  0BCA  1213               	bcf	19,4	;volatile
 14283  0BCB                     i1l4159:
 14284                           
 14285                           ;tmr3.c: 134:     TMR3_WriteTimer(timer3ReloadVal);
 14286  0BCB  0021               	movlb	1	; select bank1
 14287  0BCC  082B               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
 14288  0BCD  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 14289  0BCE  082A               	movf	_timer3ReloadVal^(0+128),w	;volatile
 14290  0BCF  00F0               	movwf	TMR3_WriteTimer@timerVal
 14291  0BD0  318B  2313  318B   	fcall	_TMR3_WriteTimer
 14292  0BD3                     i1l4161:
 14293                           
 14294                           ;tmr3.c: 136:     if(TMR3_InterruptHandler)
 14295  0BD3  0021               	movlb	1	; select bank1
 14296  0BD4  0828               	movf	_TMR3_InterruptHandler^(0+128),w
 14297  0BD5  0429               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 14298  0BD6  1903               	btfsc	3,2
 14299  0BD7  2BD9               	goto	u143_21
 14300  0BD8  2BDA               	goto	u143_20
 14301  0BD9                     u143_21:
 14302  0BD9  2BDF               	goto	i1l1011
 14303  0BDA                     u143_20:
 14304  0BDA                     i1l4163:
 14305                           
 14306                           ;tmr3.c: 137:     {;tmr3.c: 138:         TMR3_InterruptHandler();
 14307  0BDA  0829               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 14308  0BDB  008A               	movwf	10
 14309  0BDC  0828               	movf	_TMR3_InterruptHandler^(0+128),w
 14310  0BDD  000A               	callw
 14311  0BDE  318B               	pagesel	$
 14312  0BDF                     i1l1011:
 14313  0BDF  0008               	return
 14314  0BE0                     __end_of_TMR3_ISR:
 14315                           
 14316                           	psect	text52
 14317  0B13                     __ptext52:	
 14318 ;; *************** function _TMR3_WriteTimer *****************
 14319 ;; Defined at:
 14320 ;;		line 84 in file "tmr3.c"
 14321 ;; Parameters:    Size  Location     Type
 14322 ;;  timerVal        2    0[COMMON] unsigned short 
 14323 ;; Auto vars:     Size  Location     Type
 14324 ;;		None
 14325 ;; Return value:  Size  Location     Type
 14326 ;;                  1    wreg      void 
 14327 ;; Registers used:
 14328 ;;		wreg, status,2
 14329 ;; Tracked objects:
 14330 ;;		On entry : 0/0
 14331 ;;		On exit  : 0/0
 14332 ;;		Unchanged: 0/0
 14333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14338 ;;Total ram usage:        2 bytes
 14339 ;; Hardware stack levels used: 1
 14340 ;; This function calls:
 14341 ;;		Nothing
 14342 ;; This function is called by:
 14343 ;;		_TMR3_ISR
 14344 ;;		_TMR3_Reload
 14345 ;; This function uses a non-reentrant model
 14346 ;;
 14347                           
 14348  0B13                     _TMR3_WriteTimer:	
 14349                           ;psect for function _TMR3_WriteTimer
 14350                           
 14351  0B13                     i1l3913:	
 14352                           ;incstack = 0
 14353                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 14354                           
 14355                           
 14356                           ;tmr3.c: 84: void TMR3_WriteTimer(uint16_t timerVal);tmr3.c: 85: {;tmr3.c: 86:     if (T
      +                          3CONbits.T3SYNC == 1)
 14357  0B13  0028               	movlb	8	; select bank8
 14358  0B14  1D13               	btfss	19,2	;volatile
 14359  0B15  2B17               	goto	u122_21
 14360  0B16  2B18               	goto	u122_20
 14361  0B17                     u122_21:
 14362  0B17  2B1F               	goto	i1l3923
 14363  0B18                     u122_20:
 14364  0B18                     i1l3915:
 14365                           
 14366                           ;tmr3.c: 87:     {;tmr3.c: 89:         T3CONbits.TMR3ON = 0;
 14367  0B18  1013               	bcf	19,0	;volatile
 14368  0B19                     i1l3917:
 14369                           
 14370                           ;tmr3.c: 92:         TMR3H = (uint8_t)(timerVal >> 8);
 14371  0B19  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14372  0B1A  0092               	movwf	18	;volatile
 14373  0B1B                     i1l3919:
 14374                           
 14375                           ;tmr3.c: 93:         TMR3L = (uint8_t)timerVal;
 14376  0B1B  0870               	movf	TMR3_WriteTimer@timerVal,w
 14377  0B1C  0091               	movwf	17	;volatile
 14378  0B1D                     i1l3921:
 14379                           
 14380                           ;tmr3.c: 96:         T3CONbits.TMR3ON =1;
 14381  0B1D  1413               	bsf	19,0	;volatile
 14382                           
 14383                           ;tmr3.c: 97:     }
 14384  0B1E  2B23               	goto	i1l998
 14385  0B1F                     i1l3923:
 14386                           
 14387                           ;tmr3.c: 99:     {;tmr3.c: 101:         TMR3H = (uint8_t)(timerVal >> 8);
 14388  0B1F  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14389  0B20  0092               	movwf	18	;volatile
 14390  0B21                     i1l3925:
 14391                           
 14392                           ;tmr3.c: 102:         TMR3L = (uint8_t)timerVal;
 14393  0B21  0870               	movf	TMR3_WriteTimer@timerVal,w
 14394  0B22  0091               	movwf	17	;volatile
 14395  0B23                     i1l998:
 14396  0B23  0008               	return
 14397  0B24                     __end_of_TMR3_WriteTimer:
 14398                           
 14399                           	psect	text53
 14400  0003                     __ptext53:	
 14401 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 14402 ;; Defined at:
 14403 ;;		line 150 in file "tmr3.c"
 14404 ;; Parameters:    Size  Location     Type
 14405 ;;		None
 14406 ;; Auto vars:     Size  Location     Type
 14407 ;;		None
 14408 ;; Return value:  Size  Location     Type
 14409 ;;                  1    wreg      void 
 14410 ;; Registers used:
 14411 ;;		None
 14412 ;; Tracked objects:
 14413 ;;		On entry : 0/0
 14414 ;;		On exit  : 0/0
 14415 ;;		Unchanged: 0/0
 14416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14421 ;;Total ram usage:        0 bytes
 14422 ;; Hardware stack levels used: 1
 14423 ;; This function calls:
 14424 ;;		Nothing
 14425 ;; This function is called by:
 14426 ;;		_TMR3_Initialize
 14427 ;;		_TMR3_ISR
 14428 ;; This function uses a non-reentrant model
 14429 ;;
 14430                           
 14431  0003                     _TMR3_DefaultInterruptHandler:	
 14432                           ;psect for function _TMR3_DefaultInterruptHandler
 14433                           
 14434  0003                     i1l1017:	
 14435                           ;incstack = 0
 14436                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 14437                           
 14438  0003  0008               	return
 14439  0004                     __end_of_TMR3_DefaultInterruptHandler:
 14440                           
 14441                           	psect	text54
 14442  07F5                     __ptext54:	
 14443 ;; *************** function _TMR1_ISR *****************
 14444 ;; Defined at:
 14445 ;;		line 129 in file "tmr1.c"
 14446 ;; Parameters:    Size  Location     Type
 14447 ;;		None
 14448 ;; Auto vars:     Size  Location     Type
 14449 ;;		None
 14450 ;; Return value:  Size  Location     Type
 14451 ;;                  1    wreg      void 
 14452 ;; Registers used:
 14453 ;;		wreg, status,2, status,0, pclath, cstack
 14454 ;; Tracked objects:
 14455 ;;		On entry : 0/0
 14456 ;;		On exit  : 0/0
 14457 ;;		Unchanged: 0/0
 14458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14463 ;;Total ram usage:        0 bytes
 14464 ;; Hardware stack levels used: 1
 14465 ;; Hardware stack levels required when called: 1
 14466 ;; This function calls:
 14467 ;;		_TMR1_WriteTimer
 14468 ;; This function is called by:
 14469 ;;		_INTERRUPT_InterruptManager
 14470 ;; This function uses a non-reentrant model
 14471 ;;
 14472                           
 14473  07F5                     _TMR1_ISR:	
 14474                           ;psect for function _TMR1_ISR
 14475                           
 14476  07F5                     i1l4097:	
 14477                           ;incstack = 0
 14478                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 14479                           
 14480                           
 14481                           ;tmr1.c: 133:     PIR1bits.TMR1IF = 0;
 14482  07F5  0020               	movlb	0	; select bank0
 14483  07F6  1011               	bcf	17,0	;volatile
 14484  07F7                     i1l4099:
 14485                           
 14486                           ;tmr1.c: 134:     TMR1_WriteTimer(timer1ReloadVal);
 14487  07F7  0021               	movlb	1	; select bank1
 14488  07F8  0839               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 14489  07F9  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 14490  07FA  0838               	movf	_timer1ReloadVal^(0+128),w	;volatile
 14491  07FB  00F0               	movwf	TMR1_WriteTimer@timerVal
 14492  07FC  318B  2302  3187   	fcall	_TMR1_WriteTimer
 14493  07FF                     i1l563:
 14494  07FF  0008               	return
 14495  0800                     __end_of_TMR1_ISR:
 14496                           
 14497                           	psect	text55
 14498  0B02                     __ptext55:	
 14499 ;; *************** function _TMR1_WriteTimer *****************
 14500 ;; Defined at:
 14501 ;;		line 84 in file "tmr1.c"
 14502 ;; Parameters:    Size  Location     Type
 14503 ;;  timerVal        2    0[COMMON] unsigned short 
 14504 ;; Auto vars:     Size  Location     Type
 14505 ;;		None
 14506 ;; Return value:  Size  Location     Type
 14507 ;;                  1    wreg      void 
 14508 ;; Registers used:
 14509 ;;		wreg, status,2
 14510 ;; Tracked objects:
 14511 ;;		On entry : 0/0
 14512 ;;		On exit  : 0/0
 14513 ;;		Unchanged: 0/0
 14514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14518 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14519 ;;Total ram usage:        2 bytes
 14520 ;; Hardware stack levels used: 1
 14521 ;; This function calls:
 14522 ;;		Nothing
 14523 ;; This function is called by:
 14524 ;;		_TMR1_ISR
 14525 ;;		_TMR1_Reload
 14526 ;; This function uses a non-reentrant model
 14527 ;;
 14528                           
 14529  0B02                     _TMR1_WriteTimer:	
 14530                           ;psect for function _TMR1_WriteTimer
 14531                           
 14532  0B02                     i1l3895:	
 14533                           ;incstack = 0
 14534                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 14535                           
 14536                           
 14537                           ;tmr1.c: 84: void TMR1_WriteTimer(uint16_t timerVal);tmr1.c: 85: {;tmr1.c: 86:     if (T
      +                          1CONbits.T1SYNC == 1)
 14538  0B02  0020               	movlb	0	; select bank0
 14539  0B03  1D1B               	btfss	27,2	;volatile
 14540  0B04  2B06               	goto	u121_21
 14541  0B05  2B07               	goto	u121_20
 14542  0B06                     u121_21:
 14543  0B06  2B0E               	goto	i1l3905
 14544  0B07                     u121_20:
 14545  0B07                     i1l3897:
 14546                           
 14547                           ;tmr1.c: 87:     {;tmr1.c: 89:         T1CONbits.TMR1ON = 0;
 14548  0B07  101B               	bcf	27,0	;volatile
 14549  0B08                     i1l3899:
 14550                           
 14551                           ;tmr1.c: 92:         TMR1H = (uint8_t)(timerVal >> 8);
 14552  0B08  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 14553  0B09  009A               	movwf	26	;volatile
 14554  0B0A                     i1l3901:
 14555                           
 14556                           ;tmr1.c: 93:         TMR1L = (uint8_t)timerVal;
 14557  0B0A  0870               	movf	TMR1_WriteTimer@timerVal,w
 14558  0B0B  0099               	movwf	25	;volatile
 14559  0B0C                     i1l3903:
 14560                           
 14561                           ;tmr1.c: 96:         T1CONbits.TMR1ON =1;
 14562  0B0C  141B               	bsf	27,0	;volatile
 14563                           
 14564                           ;tmr1.c: 97:     }
 14565  0B0D  2B12               	goto	i1l551
 14566  0B0E                     i1l3905:
 14567                           
 14568                           ;tmr1.c: 99:     {;tmr1.c: 101:         TMR1H = (uint8_t)(timerVal >> 8);
 14569  0B0E  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 14570  0B0F  009A               	movwf	26	;volatile
 14571  0B10                     i1l3907:
 14572                           
 14573                           ;tmr1.c: 102:         TMR1L = (uint8_t)timerVal;
 14574  0B10  0870               	movf	TMR1_WriteTimer@timerVal,w
 14575  0B11  0099               	movwf	25	;volatile
 14576  0B12                     i1l551:
 14577  0B12  0008               	return
 14578  0B13                     __end_of_TMR1_WriteTimer:
 14579                           
 14580                           	psect	text56
 14581  0BB2                     __ptext56:	
 14582 ;; *************** function _TMR0_ISR *****************
 14583 ;; Defined at:
 14584 ;;		line 90 in file "tmr0.c"
 14585 ;; Parameters:    Size  Location     Type
 14586 ;;		None
 14587 ;; Auto vars:     Size  Location     Type
 14588 ;;		None
 14589 ;; Return value:  Size  Location     Type
 14590 ;;                  1    wreg      void 
 14591 ;; Registers used:
 14592 ;;		wreg, status,2, status,0, pclath, cstack
 14593 ;; Tracked objects:
 14594 ;;		On entry : 0/0
 14595 ;;		On exit  : 0/0
 14596 ;;		Unchanged: 0/0
 14597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14602 ;;Total ram usage:        0 bytes
 14603 ;; Hardware stack levels used: 1
 14604 ;; Hardware stack levels required when called: 2
 14605 ;; This function calls:
 14606 ;;		_TMR0_CallBack
 14607 ;; This function is called by:
 14608 ;;		_INTERRUPT_InterruptManager
 14609 ;; This function uses a non-reentrant model
 14610 ;;
 14611                           
 14612  0BB2                     _TMR0_ISR:	
 14613                           ;psect for function _TMR0_ISR
 14614                           
 14615  0BB2                     i1l4071:	
 14616                           ;incstack = 0
 14617                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 14618                           
 14619                           
 14620                           ;tmr0.c: 92:     static volatile uint16_t CountCallBack = 0;;tmr0.c: 95:     PIR0bits.TM
      +                          R0IF = 0;
 14621  0BB2  0020               	movlb	0	; select bank0
 14622  0BB3  1290               	bcf	16,5	;volatile
 14623  0BB4                     i1l4073:
 14624                           
 14625                           ;tmr0.c: 97:     if (++CountCallBack >= 4)
 14626  0BB4  3001               	movlw	1
 14627  0BB5  0021               	movlb	1	; select bank1
 14628  0BB6  07CC               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
 14629  0BB7  3000               	movlw	0
 14630  0BB8  3DCD               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
 14631  0BB9  3000               	movlw	0
 14632  0BBA  024D               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
 14633  0BBB  3004               	movlw	4
 14634  0BBC  1903               	skipnz
 14635  0BBD  024C               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
 14636  0BBE  1C03               	skipc
 14637  0BBF  2BC1               	goto	u135_21
 14638  0BC0  2BC2               	goto	u135_20
 14639  0BC1                     u135_21:
 14640  0BC1  2BC8               	goto	i1l363
 14641  0BC2                     u135_20:
 14642  0BC2                     i1l4075:
 14643                           
 14644                           ;tmr0.c: 98:     {;tmr0.c: 100:         TMR0_CallBack();
 14645  0BC2  318A  224C  318B   	fcall	_TMR0_CallBack
 14646  0BC5                     i1l4077:
 14647                           
 14648                           ;tmr0.c: 103:         CountCallBack = 0;
 14649  0BC5  0021               	movlb	1	; select bank1
 14650  0BC6  01CC               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
 14651  0BC7  01CD               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
 14652  0BC8                     i1l363:
 14653  0BC8  0008               	return
 14654  0BC9                     __end_of_TMR0_ISR:
 14655                           
 14656                           	psect	text57
 14657  0A4C                     __ptext57:	
 14658 ;; *************** function _TMR0_CallBack *****************
 14659 ;; Defined at:
 14660 ;;		line 111 in file "tmr0.c"
 14661 ;; Parameters:    Size  Location     Type
 14662 ;;		None
 14663 ;; Auto vars:     Size  Location     Type
 14664 ;;		None
 14665 ;; Return value:  Size  Location     Type
 14666 ;;                  1    wreg      void 
 14667 ;; Registers used:
 14668 ;;		wreg, status,2, status,0, pclath, cstack
 14669 ;; Tracked objects:
 14670 ;;		On entry : 0/0
 14671 ;;		On exit  : 0/0
 14672 ;;		Unchanged: 0/0
 14673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14678 ;;Total ram usage:        0 bytes
 14679 ;; Hardware stack levels used: 1
 14680 ;; Hardware stack levels required when called: 1
 14681 ;; This function calls:
 14682 ;;		_FRT_IncMicros
 14683 ;;		_FRT_IncMillis
 14684 ;; This function is called by:
 14685 ;;		_TMR0_ISR
 14686 ;; This function uses a non-reentrant model
 14687 ;;
 14688                           
 14689  0A4C                     _TMR0_CallBack:	
 14690                           ;psect for function _TMR0_CallBack
 14691                           
 14692  0A4C                     i1l3845:	
 14693                           ;incstack = 0
 14694                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 14695                           
 14696                           
 14697                           ;tmr0.c: 113:     FRT_IncMillis();
 14698  0A4C  318A  22D6  318A   	fcall	_FRT_IncMillis
 14699                           
 14700                           ;tmr0.c: 114:     FRT_IncMicros();
 14701  0A4F  318A  22CC  318A   	fcall	_FRT_IncMicros
 14702  0A52                     i1l366:
 14703  0A52  0008               	return
 14704  0A53                     __end_of_TMR0_CallBack:
 14705                           
 14706                           	psect	text58
 14707  0AD6                     __ptext58:	
 14708 ;; *************** function _FRT_IncMillis *****************
 14709 ;; Defined at:
 14710 ;;		line 38 in file "FRT.c"
 14711 ;; Parameters:    Size  Location     Type
 14712 ;;		None
 14713 ;; Auto vars:     Size  Location     Type
 14714 ;;		None
 14715 ;; Return value:  Size  Location     Type
 14716 ;;                  1    wreg      void 
 14717 ;; Registers used:
 14718 ;;		wreg
 14719 ;; Tracked objects:
 14720 ;;		On entry : 0/0
 14721 ;;		On exit  : 0/0
 14722 ;;		Unchanged: 0/0
 14723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14728 ;;Total ram usage:        0 bytes
 14729 ;; Hardware stack levels used: 1
 14730 ;; This function calls:
 14731 ;;		Nothing
 14732 ;; This function is called by:
 14733 ;;		_TMR0_CallBack
 14734 ;; This function uses a non-reentrant model
 14735 ;;
 14736                           
 14737  0AD6                     _FRT_IncMillis:	
 14738                           ;psect for function _FRT_IncMillis
 14739                           
 14740  0AD6                     i1l3643:	
 14741                           ;incstack = 0
 14742                           ; Regs used in _FRT_IncMillis: [wreg]
 14743                           
 14744                           
 14745                           ;FRT.c: 39:     millis ++;
 14746  0AD6  3001               	movlw	1
 14747  0AD7  0022               	movlb	2	; select bank2
 14748  0AD8  07C2               	addwf	_millis^(0+256),f
 14749  0AD9  3000               	movlw	0
 14750  0ADA  3DC3               	addwfc	(_millis+1)^(0+256),f
 14751  0ADB  3000               	movlw	0
 14752  0ADC  3DC4               	addwfc	(_millis+2)^(0+256),f
 14753  0ADD  3000               	movlw	0
 14754  0ADE  3DC5               	addwfc	(_millis+3)^(0+256),f
 14755  0ADF                     i1l855:
 14756  0ADF  0008               	return
 14757  0AE0                     __end_of_FRT_IncMillis:
 14758                           
 14759                           	psect	text59
 14760  0ACC                     __ptext59:	
 14761 ;; *************** function _FRT_IncMicros *****************
 14762 ;; Defined at:
 14763 ;;		line 45 in file "FRT.c"
 14764 ;; Parameters:    Size  Location     Type
 14765 ;;		None
 14766 ;; Auto vars:     Size  Location     Type
 14767 ;;		None
 14768 ;; Return value:  Size  Location     Type
 14769 ;;                  1    wreg      void 
 14770 ;; Registers used:
 14771 ;;		wreg
 14772 ;; Tracked objects:
 14773 ;;		On entry : 0/0
 14774 ;;		On exit  : 0/0
 14775 ;;		Unchanged: 0/0
 14776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14781 ;;Total ram usage:        0 bytes
 14782 ;; Hardware stack levels used: 1
 14783 ;; This function calls:
 14784 ;;		Nothing
 14785 ;; This function is called by:
 14786 ;;		_TMR0_CallBack
 14787 ;; This function uses a non-reentrant model
 14788 ;;
 14789                           
 14790  0ACC                     _FRT_IncMicros:	
 14791                           ;psect for function _FRT_IncMicros
 14792                           
 14793  0ACC                     i1l3647:	
 14794                           ;incstack = 0
 14795                           ; Regs used in _FRT_IncMicros: [wreg]
 14796                           
 14797                           
 14798                           ;FRT.c: 46:     micros += 1000;
 14799  0ACC  30E8               	movlw	232
 14800  0ACD  0022               	movlb	2	; select bank2
 14801  0ACE  07BE               	addwf	_micros@FRT$F1617^(0+256),f
 14802  0ACF  3003               	movlw	3
 14803  0AD0  3DBF               	addwfc	(_micros@FRT$F1617+1)^(0+256),f
 14804  0AD1  3000               	movlw	0
 14805  0AD2  3DC0               	addwfc	(_micros@FRT$F1617+2)^(0+256),f
 14806  0AD3  3000               	movlw	0
 14807  0AD4  3DC1               	addwfc	(_micros@FRT$F1617+3)^(0+256),f
 14808  0AD5                     i1l858:
 14809  0AD5  0008               	return
 14810  0AD6                     __end_of_FRT_IncMicros:
 14811                           
 14812                           	psect	text60
 14813  0CAF                     __ptext60:	
 14814 ;; *************** function _EUSART_Transmit_ISR *****************
 14815 ;; Defined at:
 14816 ;;		line 181 in file "eusart.c"
 14817 ;; Parameters:    Size  Location     Type
 14818 ;;		None
 14819 ;; Auto vars:     Size  Location     Type
 14820 ;;		None
 14821 ;; Return value:  Size  Location     Type
 14822 ;;                  1    wreg      void 
 14823 ;; Registers used:
 14824 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14825 ;; Tracked objects:
 14826 ;;		On entry : 0/0
 14827 ;;		On exit  : 0/0
 14828 ;;		Unchanged: 0/0
 14829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14833 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14834 ;;Total ram usage:        1 bytes
 14835 ;; Hardware stack levels used: 1
 14836 ;; This function calls:
 14837 ;;		Nothing
 14838 ;; This function is called by:
 14839 ;;		_EUSART_Initialize
 14840 ;;		_INTERRUPT_InterruptManager
 14841 ;; This function uses a non-reentrant model
 14842 ;;
 14843                           
 14844  0CAF                     _EUSART_Transmit_ISR:	
 14845                           ;psect for function _EUSART_Transmit_ISR
 14846                           
 14847  0CAF                     i1l4123:	
 14848                           ;incstack = 0
 14849                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 14850                           
 14851                           
 14852                           ;eusart.c: 185:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 14853  0CAF  3008               	movlw	8
 14854  0CB0  0021               	movlb	1	; select bank1
 14855  0CB1  0252               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 14856  0CB2  1803               	skipnc
 14857  0CB3  2CB5               	goto	u138_21
 14858  0CB4  2CB6               	goto	u138_20
 14859  0CB5                     u138_21:
 14860  0CB5  2CCF               	goto	i1l685
 14861  0CB6                     u138_20:
 14862  0CB6                     i1l4125:
 14863                           
 14864                           ;eusart.c: 186:     {;eusart.c: 187:         TX1REG = eusartTxBuffer[eusartTxTail++];
 14865  0CB6  087C               	movf	_eusartTxTail,w
 14866  0CB7  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 14867  0CB8  0086               	movwf	6
 14868  0CB9  3001               	movlw	1	; select bank2/3
 14869  0CBA  0087               	movwf	7
 14870  0CBB  0801               	movf	1,w
 14871  0CBC  0023               	movlb	3	; select bank3
 14872  0CBD  009A               	movwf	26	;volatile
 14873  0CBE                     i1l4127:
 14874  0CBE  3001               	movlw	1
 14875  0CBF  00F0               	movwf	??_EUSART_Transmit_ISR
 14876  0CC0  0870               	movf	??_EUSART_Transmit_ISR,w
 14877  0CC1  07FC               	addwf	_eusartTxTail,f	;volatile
 14878  0CC2                     i1l4129:
 14879                           
 14880                           ;eusart.c: 188:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 14881  0CC2  3008               	movlw	8
 14882  0CC3  027C               	subwf	_eusartTxTail,w	;volatile
 14883  0CC4  1C03               	skipc
 14884  0CC5  2CC7               	goto	u139_21
 14885  0CC6  2CC8               	goto	u139_20
 14886  0CC7                     u139_21:
 14887  0CC7  2CC9               	goto	i1l4133
 14888  0CC8                     u139_20:
 14889  0CC8                     i1l4131:
 14890                           
 14891                           ;eusart.c: 189:         {;eusart.c: 190:             eusartTxTail = 0;
 14892  0CC8  01FC               	clrf	_eusartTxTail	;volatile
 14893  0CC9                     i1l4133:
 14894                           
 14895                           ;eusart.c: 192:         eusartTxBufferRemaining++;
 14896  0CC9  3001               	movlw	1
 14897  0CCA  00F0               	movwf	??_EUSART_Transmit_ISR
 14898  0CCB  0870               	movf	??_EUSART_Transmit_ISR,w
 14899  0CCC  0021               	movlb	1	; select bank1
 14900  0CCD  07D2               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 14901                           
 14902                           ;eusart.c: 193:     }
 14903  0CCE  2CD0               	goto	i1l688
 14904  0CCF                     i1l685:	
 14905                           ;eusart.c: 194:     else
 14906                           
 14907                           
 14908                           ;eusart.c: 195:     {;eusart.c: 196:         PIE1bits.TXIE = 0;
 14909  0CCF  1211               	bcf	17,4	;volatile
 14910  0CD0                     i1l688:
 14911  0CD0  0008               	return
 14912  0CD1                     __end_of_EUSART_Transmit_ISR:
 14913                           
 14914                           	psect	text61
 14915  0E27                     __ptext61:	
 14916 ;; *************** function _EUSART_Receive_ISR *****************
 14917 ;; Defined at:
 14918 ;;		line 202 in file "eusart.c"
 14919 ;; Parameters:    Size  Location     Type
 14920 ;;		None
 14921 ;; Auto vars:     Size  Location     Type
 14922 ;;		None
 14923 ;; Return value:  Size  Location     Type
 14924 ;;                  1    wreg      void 
 14925 ;; Registers used:
 14926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14927 ;; Tracked objects:
 14928 ;;		On entry : 0/0
 14929 ;;		On exit  : 0/0
 14930 ;;		Unchanged: 0/0
 14931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14936 ;;Total ram usage:        0 bytes
 14937 ;; Hardware stack levels used: 1
 14938 ;; Hardware stack levels required when called: 2
 14939 ;; This function calls:
 14940 ;;		Absolute function
 14941 ;;		_EUSART_DefaultErrorHandler
 14942 ;;		_EUSART_DefaultFramingErrorHandler
 14943 ;;		_EUSART_DefaultOverrunErrorHandler
 14944 ;;		_EUSART_RxDataHandler
 14945 ;; This function is called by:
 14946 ;;		_EUSART_Initialize
 14947 ;;		_INTERRUPT_InterruptManager
 14948 ;; This function uses a non-reentrant model
 14949 ;;
 14950                           
 14951  0E27                     _EUSART_Receive_ISR:	
 14952                           ;psect for function _EUSART_Receive_ISR
 14953                           
 14954  0E27                     i1l4135:	
 14955                           ;incstack = 0
 14956                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14957                           
 14958                           
 14959                           ;eusart.c: 205:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 14960  0E27  087B               	movf	_eusartRxHead,w	;volatile
 14961  0E28  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 14962  0E29  0086               	movwf	6
 14963  0E2A  3001               	movlw	1	; select bank2/3
 14964  0E2B  0087               	movwf	7
 14965  0E2C  0181               	clrf	1
 14966  0E2D                     i1l4137:
 14967                           
 14968                           ;eusart.c: 207:     if(RC1STAbits.FERR){
 14969  0E2D  0023               	movlb	3	; select bank3
 14970  0E2E  1D1D               	btfss	29,2	;volatile
 14971  0E2F  2E31               	goto	u140_21
 14972  0E30  2E32               	goto	u140_20
 14973  0E31                     u140_21:
 14974  0E31  2E3E               	goto	i1l4143
 14975  0E32                     u140_20:
 14976  0E32                     i1l4139:
 14977                           
 14978                           ;eusart.c: 208:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 14979  0E32  087B               	movf	_eusartRxHead,w	;volatile
 14980  0E33  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 14981  0E34  0086               	movwf	6
 14982  0E35  3001               	movlw	1	; select bank2/3
 14983  0E36  0087               	movwf	7
 14984  0E37  1481               	bsf	1,1
 14985  0E38                     i1l4141:
 14986                           
 14987                           ;eusart.c: 209:         EUSART_FramingErrorHandler();
 14988  0E38  0021               	movlb	1	; select bank1
 14989  0E39  0831               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 14990  0E3A  008A               	movwf	10
 14991  0E3B  0830               	movf	_EUSART_FramingErrorHandler^(0+128),w
 14992  0E3C  000A               	callw
 14993  0E3D  318E               	pagesel	$
 14994  0E3E                     i1l4143:
 14995                           
 14996                           ;eusart.c: 212:     if(RC1STAbits.OERR){
 14997  0E3E  0023               	movlb	3	; select bank3
 14998  0E3F  1C9D               	btfss	29,1	;volatile
 14999  0E40  2E42               	goto	u141_21
 15000  0E41  2E43               	goto	u141_20
 15001  0E42                     u141_21:
 15002  0E42  2E4F               	goto	i1l4149
 15003  0E43                     u141_20:
 15004  0E43                     i1l4145:
 15005                           
 15006                           ;eusart.c: 213:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 15007  0E43  087B               	movf	_eusartRxHead,w	;volatile
 15008  0E44  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15009  0E45  0086               	movwf	6
 15010  0E46  3001               	movlw	1	; select bank2/3
 15011  0E47  0087               	movwf	7
 15012  0E48  1501               	bsf	1,2
 15013  0E49                     i1l4147:
 15014                           
 15015                           ;eusart.c: 214:         EUSART_OverrunErrorHandler();
 15016  0E49  0021               	movlb	1	; select bank1
 15017  0E4A  082F               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 15018  0E4B  008A               	movwf	10
 15019  0E4C  082E               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 15020  0E4D  000A               	callw
 15021  0E4E  318E               	pagesel	$
 15022  0E4F                     i1l4149:
 15023                           
 15024                           ;eusart.c: 217:     if(eusartRxStatusBuffer[eusartRxHead].status){
 15025  0E4F  087B               	movf	_eusartRxHead,w	;volatile
 15026  0E50  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15027  0E51  0086               	movwf	6
 15028  0E52  3001               	movlw	1	; select bank2/3
 15029  0E53  0087               	movwf	7
 15030  0E54  0801               	movf	1,w
 15031  0E55  1903               	btfsc	3,2
 15032  0E56  2E58               	goto	u142_21
 15033  0E57  2E59               	goto	u142_20
 15034  0E58                     u142_21:
 15035  0E58  2E60               	goto	i1l4153
 15036  0E59                     u142_20:
 15037  0E59                     i1l4151:
 15038                           
 15039                           ;eusart.c: 218:         EUSART_ErrorHandler();
 15040  0E59  0021               	movlb	1	; select bank1
 15041  0E5A  082D               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 15042  0E5B  008A               	movwf	10
 15043  0E5C  082C               	movf	_EUSART_ErrorHandler^(0+128),w
 15044  0E5D  000A               	callw
 15045  0E5E  318E               	pagesel	$
 15046                           
 15047                           ;eusart.c: 219:     } else {
 15048  0E5F  2E63               	goto	i1l695
 15049  0E60                     i1l4153:
 15050                           
 15051                           ;eusart.c: 220:         EUSART_RxDataHandler();
 15052  0E60  318C  2441  318E   	fcall	_EUSART_RxDataHandler
 15053  0E63                     i1l695:
 15054  0E63  0008               	return
 15055  0E64                     __end_of_EUSART_Receive_ISR:
 15056                           
 15057                           	psect	text62
 15058  0A3E                     __ptext62:	
 15059 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 15060 ;; Defined at:
 15061 ;;		line 244 in file "eusart.c"
 15062 ;; Parameters:    Size  Location     Type
 15063 ;;		None
 15064 ;; Auto vars:     Size  Location     Type
 15065 ;;		None
 15066 ;; Return value:  Size  Location     Type
 15067 ;;                  1    wreg      void 
 15068 ;; Registers used:
 15069 ;;		None
 15070 ;; Tracked objects:
 15071 ;;		On entry : 0/0
 15072 ;;		On exit  : 0/0
 15073 ;;		Unchanged: 0/0
 15074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15079 ;;Total ram usage:        0 bytes
 15080 ;; Hardware stack levels used: 1
 15081 ;; This function calls:
 15082 ;;		Nothing
 15083 ;; This function is called by:
 15084 ;;		_EUSART_Initialize
 15085 ;;		_EUSART_Receive_ISR
 15086 ;; This function uses a non-reentrant model
 15087 ;;
 15088                           
 15089  0A3E                     _EUSART_DefaultOverrunErrorHandler:	
 15090                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 15091                           
 15092  0A3E                     i1l3909:	
 15093                           ;incstack = 0
 15094                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 15095                           
 15096                           
 15097                           ;eusart.c: 247:     RC1STAbits.CREN = 0;
 15098  0A3E  0023               	movlb	3	; select bank3
 15099  0A3F  121D               	bcf	29,4	;volatile
 15100                           
 15101                           ;eusart.c: 248:     RC1STAbits.CREN = 1;
 15102  0A40  161D               	bsf	29,4	;volatile
 15103  0A41                     i1l705:
 15104  0A41  0008               	return
 15105  0A42                     __end_of_EUSART_DefaultOverrunErrorHandler:
 15106                           
 15107                           	psect	text63
 15108  0002                     __ptext63:	
 15109 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 15110 ;; Defined at:
 15111 ;;		line 240 in file "eusart.c"
 15112 ;; Parameters:    Size  Location     Type
 15113 ;;		None
 15114 ;; Auto vars:     Size  Location     Type
 15115 ;;		None
 15116 ;; Return value:  Size  Location     Type
 15117 ;;                  1    wreg      void 
 15118 ;; Registers used:
 15119 ;;		None
 15120 ;; Tracked objects:
 15121 ;;		On entry : 0/0
 15122 ;;		On exit  : 0/0
 15123 ;;		Unchanged: 0/0
 15124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15129 ;;Total ram usage:        0 bytes
 15130 ;; Hardware stack levels used: 1
 15131 ;; This function calls:
 15132 ;;		Nothing
 15133 ;; This function is called by:
 15134 ;;		_EUSART_Initialize
 15135 ;;		_EUSART_Receive_ISR
 15136 ;; This function uses a non-reentrant model
 15137 ;;
 15138                           
 15139  0002                     _EUSART_DefaultFramingErrorHandler:	
 15140                           ;psect for function _EUSART_DefaultFramingErrorHandler
 15141                           
 15142  0002                     i1l702:	
 15143                           ;incstack = 0
 15144                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 15145                           
 15146  0002  0008               	return
 15147  0003                     __end_of_EUSART_DefaultFramingErrorHandler:
 15148                           
 15149                           	psect	text64
 15150  0A3A                     __ptext64:	
 15151 ;; *************** function _EUSART_DefaultErrorHandler *****************
 15152 ;; Defined at:
 15153 ;;		line 254 in file "eusart.c"
 15154 ;; Parameters:    Size  Location     Type
 15155 ;;		None
 15156 ;; Auto vars:     Size  Location     Type
 15157 ;;		None
 15158 ;; Return value:  Size  Location     Type
 15159 ;;                  1    wreg      void 
 15160 ;; Registers used:
 15161 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15162 ;; Tracked objects:
 15163 ;;		On entry : 0/0
 15164 ;;		On exit  : 0/0
 15165 ;;		Unchanged: 0/0
 15166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15171 ;;Total ram usage:        0 bytes
 15172 ;; Hardware stack levels used: 1
 15173 ;; Hardware stack levels required when called: 1
 15174 ;; This function calls:
 15175 ;;		_EUSART_RxDataHandler
 15176 ;; This function is called by:
 15177 ;;		_EUSART_Initialize
 15178 ;;		_EUSART_Receive_ISR
 15179 ;; This function uses a non-reentrant model
 15180 ;;
 15181                           
 15182  0A3A                     _EUSART_DefaultErrorHandler:	
 15183                           ;psect for function _EUSART_DefaultErrorHandler
 15184                           
 15185  0A3A                     i1l3911:	
 15186                           ;incstack = 0
 15187                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 15188                           
 15189                           
 15190                           ;eusart.c: 255:     EUSART_RxDataHandler();
 15191  0A3A  318C  2441  318A   	fcall	_EUSART_RxDataHandler
 15192  0A3D                     i1l708:
 15193  0A3D  0008               	return
 15194  0A3E                     __end_of_EUSART_DefaultErrorHandler:
 15195                           
 15196                           	psect	text65
 15197  0C41                     __ptext65:	
 15198 ;; *************** function _EUSART_RxDataHandler *****************
 15199 ;; Defined at:
 15200 ;;		line 228 in file "eusart.c"
 15201 ;; Parameters:    Size  Location     Type
 15202 ;;		None
 15203 ;; Auto vars:     Size  Location     Type
 15204 ;;		None
 15205 ;; Return value:  Size  Location     Type
 15206 ;;                  1    wreg      void 
 15207 ;; Registers used:
 15208 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15209 ;; Tracked objects:
 15210 ;;		On entry : 0/0
 15211 ;;		On exit  : 0/0
 15212 ;;		Unchanged: 0/0
 15213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15216 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15217 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15218 ;;Total ram usage:        1 bytes
 15219 ;; Hardware stack levels used: 1
 15220 ;; This function calls:
 15221 ;;		Nothing
 15222 ;; This function is called by:
 15223 ;;		_EUSART_Receive_ISR
 15224 ;;		_EUSART_DefaultErrorHandler
 15225 ;; This function uses a non-reentrant model
 15226 ;;
 15227                           
 15228  0C41                     _EUSART_RxDataHandler:	
 15229                           ;psect for function _EUSART_RxDataHandler
 15230                           
 15231  0C41                     i1l3651:	
 15232                           ;incstack = 0
 15233                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 15234                           
 15235                           
 15236                           ;eusart.c: 230:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 15237  0C41  0023               	movlb	3	; select bank3
 15238  0C42  0819               	movf	25,w	;volatile
 15239  0C43  00F0               	movwf	??_EUSART_RxDataHandler
 15240  0C44  087B               	movf	_eusartRxHead,w
 15241  0C45  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 15242  0C46  0086               	movwf	6
 15243  0C47  3001               	movlw	1	; select bank2/3
 15244  0C48  0087               	movwf	7
 15245  0C49  0870               	movf	??_EUSART_RxDataHandler,w
 15246  0C4A  0081               	movwf	1
 15247  0C4B                     i1l3653:
 15248  0C4B  3001               	movlw	1
 15249  0C4C  00F0               	movwf	??_EUSART_RxDataHandler
 15250  0C4D  0870               	movf	??_EUSART_RxDataHandler,w
 15251  0C4E  07FB               	addwf	_eusartRxHead,f	;volatile
 15252  0C4F                     i1l3655:
 15253                           
 15254                           ;eusart.c: 231:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 15255  0C4F  3008               	movlw	8
 15256  0C50  027B               	subwf	_eusartRxHead,w	;volatile
 15257  0C51  1C03               	skipc
 15258  0C52  2C54               	goto	u119_21
 15259  0C53  2C55               	goto	u119_20
 15260  0C54                     u119_21:
 15261  0C54  2C56               	goto	i1l3659
 15262  0C55                     u119_20:
 15263  0C55                     i1l3657:
 15264                           
 15265                           ;eusart.c: 232:     {;eusart.c: 233:         eusartRxHead = 0;
 15266  0C55  01FB               	clrf	_eusartRxHead	;volatile
 15267  0C56                     i1l3659:
 15268                           
 15269                           ;eusart.c: 235:     eusartRxCount++;
 15270  0C56  3001               	movlw	1
 15271  0C57  00F0               	movwf	??_EUSART_RxDataHandler
 15272  0C58  0870               	movf	??_EUSART_RxDataHandler,w
 15273  0C59  0021               	movlb	1	; select bank1
 15274  0C5A  07D1               	addwf	_eusartRxCount^(0+128),f	;volatile
 15275  0C5B                     i1l699:
 15276  0C5B  0008               	return
 15277  0C5C                     __end_of_EUSART_RxDataHandler:
 15278                           
 15279                           	psect	text66
 15280  0A37                     __ptext66:	
 15281 ;; *************** function _CCP4_CompareISR *****************
 15282 ;; Defined at:
 15283 ;;		line 61 in file "ccp4.c"
 15284 ;; Parameters:    Size  Location     Type
 15285 ;;		None
 15286 ;; Auto vars:     Size  Location     Type
 15287 ;;		None
 15288 ;; Return value:  Size  Location     Type
 15289 ;;                  1    wreg      void 
 15290 ;; Registers used:
 15291 ;;		None
 15292 ;; Tracked objects:
 15293 ;;		On entry : 0/0
 15294 ;;		On exit  : 0/0
 15295 ;;		Unchanged: 0/0
 15296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15301 ;;Total ram usage:        0 bytes
 15302 ;; Hardware stack levels used: 1
 15303 ;; This function calls:
 15304 ;;		Nothing
 15305 ;; This function is called by:
 15306 ;;		_INTERRUPT_InterruptManager
 15307 ;; This function uses a non-reentrant model
 15308 ;;
 15309                           
 15310  0A37                     _CCP4_CompareISR:	
 15311                           ;psect for function _CCP4_CompareISR
 15312                           
 15313  0A37                     i1l4155:	
 15314                           ;incstack = 0
 15315                           ; Regs used in _CCP4_CompareISR: []
 15316                           
 15317                           
 15318                           ;ccp4.c: 64:     PIR4bits.CCP4IF = 0;
 15319  0A37  0020               	movlb	0	; select bank0
 15320  0A38  1194               	bcf	20,3	;volatile
 15321  0A39                     i1l911:
 15322  0A39  0008               	return
 15323  0A3A                     __end_of_CCP4_CompareISR:
 15324                           
 15325                           	psect	text67
 15326  0B9C                     __ptext67:	
 15327 ;; *************** function _CCP3_CaptureISR *****************
 15328 ;; Defined at:
 15329 ;;		line 81 in file "ccp3.c"
 15330 ;; Parameters:    Size  Location     Type
 15331 ;;		None
 15332 ;; Auto vars:     Size  Location     Type
 15333 ;;  module          2    8[COMMON] struct CCPR3Reg_tag
 15334 ;; Return value:  Size  Location     Type
 15335 ;;                  1    wreg      void 
 15336 ;; Registers used:
 15337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15338 ;; Tracked objects:
 15339 ;;		On entry : 0/0
 15340 ;;		On exit  : 0/0
 15341 ;;		Unchanged: 0/0
 15342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15344 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15345 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15346 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15347 ;;Total ram usage:        3 bytes
 15348 ;; Hardware stack levels used: 1
 15349 ;; Hardware stack levels required when called: 2
 15350 ;; This function calls:
 15351 ;;		Absolute function
 15352 ;;		_CCP3_DefaultCallBack
 15353 ;; This function is called by:
 15354 ;;		_INTERRUPT_InterruptManager
 15355 ;; This function uses a non-reentrant model
 15356 ;;
 15357                           
 15358  0B9C                     _CCP3_CaptureISR:	
 15359                           ;psect for function _CCP3_CaptureISR
 15360                           
 15361  0B9C                     i1l4091:	
 15362                           ;incstack = 0
 15363                           ; Regs used in _CCP3_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15364                           
 15365                           
 15366                           ;ccp3.c: 83:     CCP3_PERIOD_REG_T module;;ccp3.c: 86:     PIR4bits.CCP3IF = 0;
 15367  0B9C  0020               	movlb	0	; select bank0
 15368  0B9D  1114               	bcf	20,2	;volatile
 15369  0B9E                     i1l4093:
 15370                           
 15371                           ;ccp3.c: 89:     module.ccpr3l = CCPR3L;
 15372  0B9E  0026               	movlb	6	; select bank6
 15373  0B9F  0811               	movf	17,w	;volatile
 15374  0BA0  00F7               	movwf	??_CCP3_CaptureISR
 15375  0BA1  0877               	movf	??_CCP3_CaptureISR,w
 15376  0BA2  00F8               	movwf	CCP3_CaptureISR@module
 15377                           
 15378                           ;ccp3.c: 90:     module.ccpr3h = CCPR3H;
 15379  0BA3  0812               	movf	18,w	;volatile
 15380  0BA4  00F7               	movwf	??_CCP3_CaptureISR
 15381  0BA5  0877               	movf	??_CCP3_CaptureISR,w
 15382  0BA6  00F9               	movwf	CCP3_CaptureISR@module+1
 15383  0BA7                     i1l4095:
 15384                           
 15385                           ;ccp3.c: 93:     CCP3_CallBack(module.ccpr3_16Bit);
 15386  0BA7  0879               	movf	CCP3_CaptureISR@module+1,w
 15387  0BA8  00F4               	movwf	CCP3_DefaultCallBack@capturedValue+1
 15388  0BA9  0878               	movf	CCP3_CaptureISR@module,w
 15389  0BAA  00F3               	movwf	CCP3_DefaultCallBack@capturedValue
 15390  0BAB  0021               	movlb	1	; select bank1
 15391  0BAC  083F               	movf	(_CCP3_CallBack+1)^(0+128),w
 15392  0BAD  008A               	movwf	10
 15393  0BAE  083E               	movf	_CCP3_CallBack^(0+128),w
 15394  0BAF  000A               	callw
 15395  0BB0  318B               	pagesel	$
 15396  0BB1                     i1l507:
 15397  0BB1  0008               	return
 15398  0BB2                     __end_of_CCP3_CaptureISR:
 15399                           
 15400                           	psect	text68
 15401  0EE2                     __ptext68:	
 15402 ;; *************** function _CCP3_DefaultCallBack *****************
 15403 ;; Defined at:
 15404 ;;		line 29 in file "ccp3.c"
 15405 ;; Parameters:    Size  Location     Type
 15406 ;;  capturedValu    2    3[COMMON] unsigned short 
 15407 ;; Auto vars:     Size  Location     Type
 15408 ;;		None
 15409 ;; Return value:  Size  Location     Type
 15410 ;;                  1    wreg      void 
 15411 ;; Registers used:
 15412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15413 ;; Tracked objects:
 15414 ;;		On entry : 0/0
 15415 ;;		On exit  : 0/0
 15416 ;;		Unchanged: 0/0
 15417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15420 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15421 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15422 ;;Total ram usage:        4 bytes
 15423 ;; Hardware stack levels used: 1
 15424 ;; Hardware stack levels required when called: 1
 15425 ;; This function calls:
 15426 ;;		_JSN_GetLastTrig
 15427 ;;		_ReadPin
 15428 ;; This function is called by:
 15429 ;;		_CCP3_Initialize
 15430 ;;		_CCP3_CaptureISR
 15431 ;; This function uses a non-reentrant model
 15432 ;;
 15433                           
 15434  0EE2                     _CCP3_DefaultCallBack:	
 15435                           ;psect for function _CCP3_DefaultCallBack
 15436                           
 15437  0EE2                     i1l3879:	
 15438                           ;incstack = 0
 15439                           ; Regs used in _CCP3_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15440                           
 15441                           
 15442                           ;ccp3.c: 29: static void CCP3_DefaultCallBack(uint16_t capturedValue);ccp3.c: 30: {;ccp3
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 15443  0EE2  318A  2234  318E   	fcall	_JSN_GetLastTrig
 15444  0EE5  00F5               	movwf	??_CCP3_DefaultCallBack
 15445  0EE6  0875               	movf	??_CCP3_DefaultCallBack,w
 15446  0EE7  0021               	movlb	1	; select bank1
 15447  0EE8  00D3               	movwf	_lastTrig@ccp3$F1018^(0+128)
 15448                           
 15449                           ;ccp3.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 15450  0EE9  2F08               	goto	i1l3889
 15451  0EEA                     i1l3881:
 15452                           
 15453                           ;ccp3.c: 35:             ticksUp = capturedValue;
 15454  0EEA  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 15455  0EEB  0021               	movlb	1	; select bank1
 15456  0EEC  00BD               	movwf	(_ticksUp@ccp3$F1015+1)^(0+128)
 15457  0EED  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 15458  0EEE  00BC               	movwf	_ticksUp@ccp3$F1015^(0+128)
 15459                           
 15460                           ;ccp3.c: 36:             sameSens = lastTrig;
 15461  0EEF  0853               	movf	_lastTrig@ccp3$F1018^(0+128),w
 15462  0EF0  00F5               	movwf	??_CCP3_DefaultCallBack
 15463  0EF1  0875               	movf	??_CCP3_DefaultCallBack,w
 15464  0EF2  00D4               	movwf	_sameSens@ccp3$F1017^(0+128)
 15465                           
 15466                           ;ccp3.c: 37:             break;
 15467  0EF3  2F20               	goto	i1l501
 15468  0EF4                     i1l3883:
 15469                           
 15470                           ;ccp3.c: 40:             ticksDown = capturedValue;
 15471  0EF4  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 15472  0EF5  0021               	movlb	1	; select bank1
 15473  0EF6  00BB               	movwf	(_ticksDown@ccp3$F1016+1)^(0+128)
 15474  0EF7  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 15475  0EF8  00BA               	movwf	_ticksDown@ccp3$F1016^(0+128)
 15476  0EF9                     i1l3885:
 15477                           
 15478                           ;ccp3.c: 43:             sameSens->echoHighTime = (ticksDown - ticksUp);
 15479  0EF9  083C               	movf	_ticksUp@ccp3$F1015^(0+128),w
 15480  0EFA  023A               	subwf	_ticksDown@ccp3$F1016^(0+128),w
 15481  0EFB  00F5               	movwf	??_CCP3_DefaultCallBack
 15482  0EFC  083D               	movf	(_ticksUp@ccp3$F1015+1)^(0+128),w
 15483  0EFD  3B3B               	subwfb	(_ticksDown@ccp3$F1016+1)^(0+128),w
 15484  0EFE  00F6               	movwf	??_CCP3_DefaultCallBack+1
 15485  0EFF  0854               	movf	_sameSens@ccp3$F1017^(0+128),w
 15486  0F00  0086               	movwf	6
 15487  0F01  3001               	movlw	1	; select bank2/3
 15488  0F02  0087               	movwf	7
 15489  0F03  0875               	movf	??_CCP3_DefaultCallBack,w
 15490  0F04  3FC0               	movwi [0]fsr1
 15491  0F05  0876               	movf	??_CCP3_DefaultCallBack+1,w
 15492  0F06  3FC1               	movwi [1]fsr1
 15493                           
 15494                           ;ccp3.c: 44:             break;
 15495  0F07  2F20               	goto	i1l501
 15496  0F08                     i1l3889:
 15497  0F08  0853               	movf	_lastTrig@ccp3$F1018^(0+128),w
 15498  0F09  3E05               	addlw	5
 15499  0F0A  0086               	movwf	6
 15500  0F0B  3001               	movlw	1	; select bank2/3
 15501  0F0C  0087               	movwf	7
 15502  0F0D  0801               	movf	1,w
 15503  0F0E  3185  256F  318E   	fcall	_ReadPin
 15504  0F11  00F5               	movwf	??_CCP3_DefaultCallBack
 15505  0F12  01F6               	clrf	??_CCP3_DefaultCallBack+1
 15506                           
 15507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15508                           ; Switch size 1, requested type "simple"
 15509                           ; Number of cases is 1, Range of values is 0 to 0
 15510                           ; switch strategies available:
 15511                           ; Name         Instructions Cycles
 15512                           ; simple_byte            4     3 (average)
 15513                           ; direct_byte            8     6 (fixed)
 15514                           ; jumptable            260     6 (fixed)
 15515                           ;	Chosen strategy is simple_byte
 15516  0F13  0876               	movf	??_CCP3_DefaultCallBack+1,w
 15517  0F14  3A00               	xorlw	0	; case 0
 15518  0F15  1903               	skipnz
 15519  0F16  2F18               	goto	i1l4513
 15520  0F17  2F20               	goto	i1l501
 15521  0F18                     i1l4513:
 15522                           
 15523                           ; Switch size 1, requested type "simple"
 15524                           ; Number of cases is 2, Range of values is 0 to 1
 15525                           ; switch strategies available:
 15526                           ; Name         Instructions Cycles
 15527                           ; simple_byte            7     4 (average)
 15528                           ; direct_byte           10     6 (fixed)
 15529                           ; jumptable            260     6 (fixed)
 15530                           ;	Chosen strategy is simple_byte
 15531  0F18  0875               	movf	??_CCP3_DefaultCallBack,w
 15532  0F19  3A00               	xorlw	0	; case 0
 15533  0F1A  1903               	skipnz
 15534  0F1B  2EF4               	goto	i1l3883
 15535  0F1C  3A01               	xorlw	1	; case 1
 15536  0F1D  1903               	skipnz
 15537  0F1E  2EEA               	goto	i1l3881
 15538  0F1F  2F20               	goto	i1l501
 15539  0F20                     i1l501:
 15540  0F20  0008               	return
 15541  0F21                     __end_of_CCP3_DefaultCallBack:
 15542                           
 15543                           	psect	text69
 15544  0B86                     __ptext69:	
 15545 ;; *************** function _CCP2_CaptureISR *****************
 15546 ;; Defined at:
 15547 ;;		line 81 in file "ccp2.c"
 15548 ;; Parameters:    Size  Location     Type
 15549 ;;		None
 15550 ;; Auto vars:     Size  Location     Type
 15551 ;;  module          2    8[COMMON] struct CCPR2Reg_tag
 15552 ;; Return value:  Size  Location     Type
 15553 ;;                  1    wreg      void 
 15554 ;; Registers used:
 15555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15556 ;; Tracked objects:
 15557 ;;		On entry : 0/0
 15558 ;;		On exit  : 0/0
 15559 ;;		Unchanged: 0/0
 15560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15564 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15565 ;;Total ram usage:        3 bytes
 15566 ;; Hardware stack levels used: 1
 15567 ;; Hardware stack levels required when called: 2
 15568 ;; This function calls:
 15569 ;;		Absolute function
 15570 ;;		_CCP2_DefaultCallBack
 15571 ;; This function is called by:
 15572 ;;		_INTERRUPT_InterruptManager
 15573 ;; This function uses a non-reentrant model
 15574 ;;
 15575                           
 15576  0B86                     _CCP2_CaptureISR:	
 15577                           ;psect for function _CCP2_CaptureISR
 15578                           
 15579  0B86                     i1l4085:	
 15580                           ;incstack = 0
 15581                           ; Regs used in _CCP2_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15582                           
 15583                           
 15584                           ;ccp2.c: 83:     CCP2_PERIOD_REG_T module;;ccp2.c: 86:     PIR4bits.CCP2IF = 0;
 15585  0B86  0020               	movlb	0	; select bank0
 15586  0B87  1094               	bcf	20,1	;volatile
 15587  0B88                     i1l4087:
 15588                           
 15589                           ;ccp2.c: 89:     module.ccpr2l = CCPR2L;
 15590  0B88  0025               	movlb	5	; select bank5
 15591  0B89  0815               	movf	21,w	;volatile
 15592  0B8A  00F7               	movwf	??_CCP2_CaptureISR
 15593  0B8B  0877               	movf	??_CCP2_CaptureISR,w
 15594  0B8C  00F8               	movwf	CCP2_CaptureISR@module
 15595                           
 15596                           ;ccp2.c: 90:     module.ccpr2h = CCPR2H;
 15597  0B8D  0816               	movf	22,w	;volatile
 15598  0B8E  00F7               	movwf	??_CCP2_CaptureISR
 15599  0B8F  0877               	movf	??_CCP2_CaptureISR,w
 15600  0B90  00F9               	movwf	CCP2_CaptureISR@module+1
 15601  0B91                     i1l4089:
 15602                           
 15603                           ;ccp2.c: 93:     CCP2_CallBack(module.ccpr2_16Bit);
 15604  0B91  0879               	movf	CCP2_CaptureISR@module+1,w
 15605  0B92  00F4               	movwf	CCP2_DefaultCallBack@capturedValue+1
 15606  0B93  0878               	movf	CCP2_CaptureISR@module,w
 15607  0B94  00F3               	movwf	CCP2_DefaultCallBack@capturedValue
 15608  0B95  0021               	movlb	1	; select bank1
 15609  0B96  0845               	movf	(_CCP2_CallBack+1)^(0+128),w
 15610  0B97  008A               	movwf	10
 15611  0B98  0844               	movf	_CCP2_CallBack^(0+128),w
 15612  0B99  000A               	callw
 15613  0B9A  318B               	pagesel	$
 15614  0B9B                     i1l461:
 15615  0B9B  0008               	return
 15616  0B9C                     __end_of_CCP2_CaptureISR:
 15617                           
 15618                           	psect	text70
 15619  0EA3                     __ptext70:	
 15620 ;; *************** function _CCP2_DefaultCallBack *****************
 15621 ;; Defined at:
 15622 ;;		line 29 in file "ccp2.c"
 15623 ;; Parameters:    Size  Location     Type
 15624 ;;  capturedValu    2    3[COMMON] unsigned short 
 15625 ;; Auto vars:     Size  Location     Type
 15626 ;;		None
 15627 ;; Return value:  Size  Location     Type
 15628 ;;                  1    wreg      void 
 15629 ;; Registers used:
 15630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15631 ;; Tracked objects:
 15632 ;;		On entry : 0/0
 15633 ;;		On exit  : 0/0
 15634 ;;		Unchanged: 0/0
 15635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15639 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15640 ;;Total ram usage:        4 bytes
 15641 ;; Hardware stack levels used: 1
 15642 ;; Hardware stack levels required when called: 1
 15643 ;; This function calls:
 15644 ;;		_JSN_GetLastTrig
 15645 ;;		_ReadPin
 15646 ;; This function is called by:
 15647 ;;		_CCP2_Initialize
 15648 ;;		_CCP2_CaptureISR
 15649 ;; This function uses a non-reentrant model
 15650 ;;
 15651                           
 15652  0EA3                     _CCP2_DefaultCallBack:	
 15653                           ;psect for function _CCP2_DefaultCallBack
 15654                           
 15655  0EA3                     i1l3863:	
 15656                           ;incstack = 0
 15657                           ; Regs used in _CCP2_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15658                           
 15659                           
 15660                           ;ccp2.c: 29: static void CCP2_DefaultCallBack(uint16_t capturedValue);ccp2.c: 30: {;ccp2
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 15661  0EA3  318A  2234  318E   	fcall	_JSN_GetLastTrig
 15662  0EA6  00F5               	movwf	??_CCP2_DefaultCallBack
 15663  0EA7  0875               	movf	??_CCP2_DefaultCallBack,w
 15664  0EA8  0021               	movlb	1	; select bank1
 15665  0EA9  00D5               	movwf	_lastTrig@ccp2$F893^(0+128)
 15666                           
 15667                           ;ccp2.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 15668  0EAA  2EC9               	goto	i1l3873
 15669  0EAB                     i1l3865:
 15670                           
 15671                           ;ccp2.c: 35:             ticksUp = capturedValue;
 15672  0EAB  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 15673  0EAC  0021               	movlb	1	; select bank1
 15674  0EAD  00C3               	movwf	(_ticksUp@ccp2$F890+1)^(0+128)
 15675  0EAE  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 15676  0EAF  00C2               	movwf	_ticksUp@ccp2$F890^(0+128)
 15677                           
 15678                           ;ccp2.c: 36:             sameSens = lastTrig;
 15679  0EB0  0855               	movf	_lastTrig@ccp2$F893^(0+128),w
 15680  0EB1  00F5               	movwf	??_CCP2_DefaultCallBack
 15681  0EB2  0875               	movf	??_CCP2_DefaultCallBack,w
 15682  0EB3  00D6               	movwf	_sameSens@ccp2$F892^(0+128)
 15683                           
 15684                           ;ccp2.c: 37:             break;
 15685  0EB4  2EE1               	goto	i1l455
 15686  0EB5                     i1l3867:
 15687                           
 15688                           ;ccp2.c: 40:             ticksDown = capturedValue;
 15689  0EB5  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 15690  0EB6  0021               	movlb	1	; select bank1
 15691  0EB7  00C1               	movwf	(_ticksDown@ccp2$F891+1)^(0+128)
 15692  0EB8  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 15693  0EB9  00C0               	movwf	_ticksDown@ccp2$F891^(0+128)
 15694  0EBA                     i1l3869:
 15695                           
 15696                           ;ccp2.c: 43:             sameSens->echoHighTime = (ticksDown - ticksUp);
 15697  0EBA  0842               	movf	_ticksUp@ccp2$F890^(0+128),w
 15698  0EBB  0240               	subwf	_ticksDown@ccp2$F891^(0+128),w
 15699  0EBC  00F5               	movwf	??_CCP2_DefaultCallBack
 15700  0EBD  0843               	movf	(_ticksUp@ccp2$F890+1)^(0+128),w
 15701  0EBE  3B41               	subwfb	(_ticksDown@ccp2$F891+1)^(0+128),w
 15702  0EBF  00F6               	movwf	??_CCP2_DefaultCallBack+1
 15703  0EC0  0856               	movf	_sameSens@ccp2$F892^(0+128),w
 15704  0EC1  0086               	movwf	6
 15705  0EC2  3001               	movlw	1	; select bank2/3
 15706  0EC3  0087               	movwf	7
 15707  0EC4  0875               	movf	??_CCP2_DefaultCallBack,w
 15708  0EC5  3FC0               	movwi [0]fsr1
 15709  0EC6  0876               	movf	??_CCP2_DefaultCallBack+1,w
 15710  0EC7  3FC1               	movwi [1]fsr1
 15711                           
 15712                           ;ccp2.c: 44:             break;
 15713  0EC8  2EE1               	goto	i1l455
 15714  0EC9                     i1l3873:
 15715  0EC9  0855               	movf	_lastTrig@ccp2$F893^(0+128),w
 15716  0ECA  3E05               	addlw	5
 15717  0ECB  0086               	movwf	6
 15718  0ECC  3001               	movlw	1	; select bank2/3
 15719  0ECD  0087               	movwf	7
 15720  0ECE  0801               	movf	1,w
 15721  0ECF  3185  256F  318E   	fcall	_ReadPin
 15722  0ED2  00F5               	movwf	??_CCP2_DefaultCallBack
 15723  0ED3  01F6               	clrf	??_CCP2_DefaultCallBack+1
 15724                           
 15725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15726                           ; Switch size 1, requested type "simple"
 15727                           ; Number of cases is 1, Range of values is 0 to 0
 15728                           ; switch strategies available:
 15729                           ; Name         Instructions Cycles
 15730                           ; simple_byte            4     3 (average)
 15731                           ; direct_byte            8     6 (fixed)
 15732                           ; jumptable            260     6 (fixed)
 15733                           ;	Chosen strategy is simple_byte
 15734  0ED4  0876               	movf	??_CCP2_DefaultCallBack+1,w
 15735  0ED5  3A00               	xorlw	0	; case 0
 15736  0ED6  1903               	skipnz
 15737  0ED7  2ED9               	goto	i1l4515
 15738  0ED8  2EE1               	goto	i1l455
 15739  0ED9                     i1l4515:
 15740                           
 15741                           ; Switch size 1, requested type "simple"
 15742                           ; Number of cases is 2, Range of values is 0 to 1
 15743                           ; switch strategies available:
 15744                           ; Name         Instructions Cycles
 15745                           ; simple_byte            7     4 (average)
 15746                           ; direct_byte           10     6 (fixed)
 15747                           ; jumptable            260     6 (fixed)
 15748                           ;	Chosen strategy is simple_byte
 15749  0ED9  0875               	movf	??_CCP2_DefaultCallBack,w
 15750  0EDA  3A00               	xorlw	0	; case 0
 15751  0EDB  1903               	skipnz
 15752  0EDC  2EB5               	goto	i1l3867
 15753  0EDD  3A01               	xorlw	1	; case 1
 15754  0EDE  1903               	skipnz
 15755  0EDF  2EAB               	goto	i1l3865
 15756  0EE0  2EE1               	goto	i1l455
 15757  0EE1                     i1l455:
 15758  0EE1  0008               	return
 15759  0EE2                     __end_of_CCP2_DefaultCallBack:
 15760                           
 15761                           	psect	text71
 15762  0B70                     __ptext71:	
 15763 ;; *************** function _CCP1_CaptureISR *****************
 15764 ;; Defined at:
 15765 ;;		line 81 in file "ccp1.c"
 15766 ;; Parameters:    Size  Location     Type
 15767 ;;		None
 15768 ;; Auto vars:     Size  Location     Type
 15769 ;;  module          2    8[COMMON] struct CCPR1Reg_tag
 15770 ;; Return value:  Size  Location     Type
 15771 ;;                  1    wreg      void 
 15772 ;; Registers used:
 15773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15774 ;; Tracked objects:
 15775 ;;		On entry : 0/0
 15776 ;;		On exit  : 0/0
 15777 ;;		Unchanged: 0/0
 15778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15782 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15783 ;;Total ram usage:        3 bytes
 15784 ;; Hardware stack levels used: 1
 15785 ;; Hardware stack levels required when called: 2
 15786 ;; This function calls:
 15787 ;;		Absolute function
 15788 ;;		_CCP1_DefaultCallBack
 15789 ;; This function is called by:
 15790 ;;		_INTERRUPT_InterruptManager
 15791 ;; This function uses a non-reentrant model
 15792 ;;
 15793                           
 15794  0B70                     _CCP1_CaptureISR:	
 15795                           ;psect for function _CCP1_CaptureISR
 15796                           
 15797  0B70                     i1l4079:	
 15798                           ;incstack = 0
 15799                           ; Regs used in _CCP1_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15800                           
 15801                           
 15802                           ;ccp1.c: 83:     CCP1_PERIOD_REG_T module;;ccp1.c: 86:     PIR4bits.CCP1IF = 0;
 15803  0B70  0020               	movlb	0	; select bank0
 15804  0B71  1014               	bcf	20,0	;volatile
 15805  0B72                     i1l4081:
 15806                           
 15807                           ;ccp1.c: 89:     module.ccpr1l = CCPR1L;
 15808  0B72  0025               	movlb	5	; select bank5
 15809  0B73  0811               	movf	17,w	;volatile
 15810  0B74  00F7               	movwf	??_CCP1_CaptureISR
 15811  0B75  0877               	movf	??_CCP1_CaptureISR,w
 15812  0B76  00F8               	movwf	CCP1_CaptureISR@module
 15813                           
 15814                           ;ccp1.c: 90:     module.ccpr1h = CCPR1H;
 15815  0B77  0812               	movf	18,w	;volatile
 15816  0B78  00F7               	movwf	??_CCP1_CaptureISR
 15817  0B79  0877               	movf	??_CCP1_CaptureISR,w
 15818  0B7A  00F9               	movwf	CCP1_CaptureISR@module+1
 15819  0B7B                     i1l4083:
 15820                           
 15821                           ;ccp1.c: 93:     CCP1_CallBack(module.ccpr1_16Bit);
 15822  0B7B  0879               	movf	CCP1_CaptureISR@module+1,w
 15823  0B7C  00F4               	movwf	CCP1_DefaultCallBack@capturedValue+1
 15824  0B7D  0878               	movf	CCP1_CaptureISR@module,w
 15825  0B7E  00F3               	movwf	CCP1_DefaultCallBack@capturedValue
 15826  0B7F  0021               	movlb	1	; select bank1
 15827  0B80  084B               	movf	(_CCP1_CallBack+1)^(0+128),w
 15828  0B81  008A               	movwf	10
 15829  0B82  084A               	movf	_CCP1_CallBack^(0+128),w
 15830  0B83  000A               	callw
 15831  0B84  318B               	pagesel	$
 15832  0B85                     i1l415:
 15833  0B85  0008               	return
 15834  0B86                     __end_of_CCP1_CaptureISR:
 15835                           
 15836                           	psect	text72
 15837  0E64                     __ptext72:	
 15838 ;; *************** function _CCP1_DefaultCallBack *****************
 15839 ;; Defined at:
 15840 ;;		line 29 in file "ccp1.c"
 15841 ;; Parameters:    Size  Location     Type
 15842 ;;  capturedValu    2    3[COMMON] unsigned short 
 15843 ;; Auto vars:     Size  Location     Type
 15844 ;;		None
 15845 ;; Return value:  Size  Location     Type
 15846 ;;                  1    wreg      void 
 15847 ;; Registers used:
 15848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15849 ;; Tracked objects:
 15850 ;;		On entry : 0/0
 15851 ;;		On exit  : 0/0
 15852 ;;		Unchanged: 0/0
 15853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15856 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15857 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15858 ;;Total ram usage:        4 bytes
 15859 ;; Hardware stack levels used: 1
 15860 ;; Hardware stack levels required when called: 1
 15861 ;; This function calls:
 15862 ;;		_JSN_GetLastTrig
 15863 ;;		_ReadPin
 15864 ;; This function is called by:
 15865 ;;		_CCP1_Initialize
 15866 ;;		_CCP1_CaptureISR
 15867 ;; This function uses a non-reentrant model
 15868 ;;
 15869                           
 15870  0E64                     _CCP1_DefaultCallBack:	
 15871                           ;psect for function _CCP1_DefaultCallBack
 15872                           
 15873  0E64                     i1l3847:	
 15874                           ;incstack = 0
 15875                           ; Regs used in _CCP1_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15876                           
 15877                           
 15878                           ;ccp1.c: 29: static void CCP1_DefaultCallBack(uint16_t capturedValue);ccp1.c: 30: {;ccp1
      +                          .c: 31:     lastTrig = JSN_GetLastTrig();
 15879  0E64  318A  2234  318E   	fcall	_JSN_GetLastTrig
 15880  0E67  00F5               	movwf	??_CCP1_DefaultCallBack
 15881  0E68  0875               	movf	??_CCP1_DefaultCallBack,w
 15882  0E69  0021               	movlb	1	; select bank1
 15883  0E6A  00D7               	movwf	_lastTrig@ccp1$F747^(0+128)
 15884                           
 15885                           ;ccp1.c: 32:     switch(ReadPin(lastTrig->echoPin)) {
 15886  0E6B  2E8A               	goto	i1l3857
 15887  0E6C                     i1l3849:
 15888                           
 15889                           ;ccp1.c: 35:             ticksUp = capturedValue;
 15890  0E6C  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 15891  0E6D  0021               	movlb	1	; select bank1
 15892  0E6E  00C9               	movwf	(_ticksUp+1)^(0+128)
 15893  0E6F  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 15894  0E70  00C8               	movwf	_ticksUp^(0+128)
 15895                           
 15896                           ;ccp1.c: 36:             sameSens = lastTrig;
 15897  0E71  0857               	movf	_lastTrig@ccp1$F747^(0+128),w
 15898  0E72  00F5               	movwf	??_CCP1_DefaultCallBack
 15899  0E73  0875               	movf	??_CCP1_DefaultCallBack,w
 15900  0E74  00D8               	movwf	_sameSens^(0+128)
 15901                           
 15902                           ;ccp1.c: 37:             break;
 15903  0E75  2EA2               	goto	i1l409
 15904  0E76                     i1l3851:
 15905                           
 15906                           ;ccp1.c: 40:             ticksDown = capturedValue;
 15907  0E76  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 15908  0E77  0021               	movlb	1	; select bank1
 15909  0E78  00C7               	movwf	(_ticksDown+1)^(0+128)
 15910  0E79  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 15911  0E7A  00C6               	movwf	_ticksDown^(0+128)
 15912  0E7B                     i1l3853:
 15913                           
 15914                           ;ccp1.c: 43:             sameSens->echoHighTime = (ticksDown - ticksUp);
 15915  0E7B  0848               	movf	_ticksUp^(0+128),w
 15916  0E7C  0246               	subwf	_ticksDown^(0+128),w
 15917  0E7D  00F5               	movwf	??_CCP1_DefaultCallBack
 15918  0E7E  0849               	movf	(_ticksUp+1)^(0+128),w
 15919  0E7F  3B47               	subwfb	(_ticksDown+1)^(0+128),w
 15920  0E80  00F6               	movwf	??_CCP1_DefaultCallBack+1
 15921  0E81  0858               	movf	_sameSens^(0+128),w
 15922  0E82  0086               	movwf	6
 15923  0E83  3001               	movlw	1	; select bank2/3
 15924  0E84  0087               	movwf	7
 15925  0E85  0875               	movf	??_CCP1_DefaultCallBack,w
 15926  0E86  3FC0               	movwi [0]fsr1
 15927  0E87  0876               	movf	??_CCP1_DefaultCallBack+1,w
 15928  0E88  3FC1               	movwi [1]fsr1
 15929                           
 15930                           ;ccp1.c: 44:             break;
 15931  0E89  2EA2               	goto	i1l409
 15932  0E8A                     i1l3857:
 15933  0E8A  0857               	movf	_lastTrig@ccp1$F747^(0+128),w
 15934  0E8B  3E05               	addlw	5
 15935  0E8C  0086               	movwf	6
 15936  0E8D  3001               	movlw	1	; select bank2/3
 15937  0E8E  0087               	movwf	7
 15938  0E8F  0801               	movf	1,w
 15939  0E90  3185  256F  318E   	fcall	_ReadPin
 15940  0E93  00F5               	movwf	??_CCP1_DefaultCallBack
 15941  0E94  01F6               	clrf	??_CCP1_DefaultCallBack+1
 15942                           
 15943                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15944                           ; Switch size 1, requested type "simple"
 15945                           ; Number of cases is 1, Range of values is 0 to 0
 15946                           ; switch strategies available:
 15947                           ; Name         Instructions Cycles
 15948                           ; simple_byte            4     3 (average)
 15949                           ; direct_byte            8     6 (fixed)
 15950                           ; jumptable            260     6 (fixed)
 15951                           ;	Chosen strategy is simple_byte
 15952  0E95  0876               	movf	??_CCP1_DefaultCallBack+1,w
 15953  0E96  3A00               	xorlw	0	; case 0
 15954  0E97  1903               	skipnz
 15955  0E98  2E9A               	goto	i1l4517
 15956  0E99  2EA2               	goto	i1l409
 15957  0E9A                     i1l4517:
 15958                           
 15959                           ; Switch size 1, requested type "simple"
 15960                           ; Number of cases is 2, Range of values is 0 to 1
 15961                           ; switch strategies available:
 15962                           ; Name         Instructions Cycles
 15963                           ; simple_byte            7     4 (average)
 15964                           ; direct_byte           10     6 (fixed)
 15965                           ; jumptable            260     6 (fixed)
 15966                           ;	Chosen strategy is simple_byte
 15967  0E9A  0875               	movf	??_CCP1_DefaultCallBack,w
 15968  0E9B  3A00               	xorlw	0	; case 0
 15969  0E9C  1903               	skipnz
 15970  0E9D  2E76               	goto	i1l3851
 15971  0E9E  3A01               	xorlw	1	; case 1
 15972  0E9F  1903               	skipnz
 15973  0EA0  2E6C               	goto	i1l3849
 15974  0EA1  2EA2               	goto	i1l409
 15975  0EA2                     i1l409:
 15976  0EA2  0008               	return
 15977  0EA3                     __end_of_CCP1_DefaultCallBack:
 15978                           
 15979                           	psect	text73
 15980  056F                     __ptext73:	
 15981 ;; *************** function _ReadPin *****************
 15982 ;; Defined at:
 15983 ;;		line 132 in file "PIC16Xpress_DevBoard.c"
 15984 ;; Parameters:    Size  Location     Type
 15985 ;;  pin             1    wreg     enum E7153
 15986 ;; Auto vars:     Size  Location     Type
 15987 ;;  pin             1    2[COMMON] enum E7153
 15988 ;; Return value:  Size  Location     Type
 15989 ;;                  1    wreg      unsigned char 
 15990 ;; Registers used:
 15991 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 15992 ;; Tracked objects:
 15993 ;;		On entry : 0/0
 15994 ;;		On exit  : 0/0
 15995 ;;		Unchanged: 0/0
 15996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15999 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16000 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16001 ;;Total ram usage:        3 bytes
 16002 ;; Hardware stack levels used: 1
 16003 ;; This function calls:
 16004 ;;		Nothing
 16005 ;; This function is called by:
 16006 ;;		_CCP1_DefaultCallBack
 16007 ;;		_CCP2_DefaultCallBack
 16008 ;;		_CCP3_DefaultCallBack
 16009 ;; This function uses a non-reentrant model
 16010 ;;
 16011                           
 16012  056F                     _ReadPin:	
 16013                           ;psect for function _ReadPin
 16014                           
 16015                           
 16016                           ;incstack = 0
 16017                           ; Regs used in _ReadPin: [wreg-fsr0h+status,2+status,0]
 16018                           ;ReadPin@pin stored from wreg
 16019  056F  00F2               	movwf	ReadPin@pin
 16020  0570                     i1l3357:
 16021                           
 16022                           ;PIC16Xpress_DevBoard.c: 133:     switch(pin) {
 16023  0570  2DC5               	goto	i1l3437
 16024  0571                     i1l3359:
 16025                           
 16026                           ;PIC16Xpress_DevBoard.c: 135:             return PORTAbits.RA5;
 16027  0571  0020               	movlb	0	; select bank0
 16028  0572  0E0C               	swapf	12,w	;volatile
 16029  0573  0C89               	rrf	9,f
 16030  0574  3901               	andlw	1
 16031  0575  2E05               	goto	i1l201
 16032  0576                     i1l3363:
 16033                           
 16034                           ;PIC16Xpress_DevBoard.c: 137:             return PORTAbits.RA4;
 16035  0576  0020               	movlb	0	; select bank0
 16036  0577  0E0C               	swapf	12,w	;volatile
 16037  0578  3901               	andlw	1
 16038  0579  2E05               	goto	i1l201
 16039  057A                     i1l3367:
 16040                           
 16041                           ;PIC16Xpress_DevBoard.c: 139:             return 0xFF;
 16042  057A  30FF               	movlw	255
 16043  057B  2E05               	goto	i1l201
 16044  057C                     i1l3371:
 16045                           
 16046                           ;PIC16Xpress_DevBoard.c: 141:             return PORTCbits.RC5;
 16047  057C  0020               	movlb	0	; select bank0
 16048  057D  0E0E               	swapf	14,w	;volatile
 16049  057E  0C89               	rrf	9,f
 16050  057F  3901               	andlw	1
 16051  0580  2E05               	goto	i1l201
 16052  0581                     i1l3375:
 16053                           
 16054                           ;PIC16Xpress_DevBoard.c: 143:             return PORTCbits.RC4;
 16055  0581  0020               	movlb	0	; select bank0
 16056  0582  0E0E               	swapf	14,w	;volatile
 16057  0583  3901               	andlw	1
 16058  0584  2E05               	goto	i1l201
 16059  0585                     i1l3379:
 16060                           
 16061                           ;PIC16Xpress_DevBoard.c: 145:             return PORTCbits.RC3;
 16062  0585  0020               	movlb	0	; select bank0
 16063  0586  0C0E               	rrf	14,w	;volatile
 16064  0587  00F0               	movwf	??_ReadPin
 16065  0588  0CF0               	rrf	??_ReadPin,f
 16066  0589  0C70               	rrf	??_ReadPin,w
 16067  058A  3901               	andlw	1
 16068  058B  2E05               	goto	i1l201
 16069  058C                     i1l3383:
 16070                           
 16071                           ;PIC16Xpress_DevBoard.c: 147:             return PORTCbits.RC6;
 16072  058C  0020               	movlb	0	; select bank0
 16073  058D  0E0E               	swapf	14,w	;volatile
 16074  058E  0C89               	rrf	9,f
 16075  058F  0C89               	rrf	9,f
 16076  0590  3901               	andlw	1
 16077  0591  2E05               	goto	i1l201
 16078  0592                     i1l3387:
 16079                           
 16080                           ;PIC16Xpress_DevBoard.c: 149:             return PORTCbits.RC7;
 16081  0592  0020               	movlb	0	; select bank0
 16082  0593  0D0E               	rlf	14,w	;volatile
 16083  0594  0D0E               	rlf	14,w	;volatile
 16084  0595  3901               	andlw	1
 16085  0596  2E05               	goto	i1l201
 16086  0597                     i1l3391:
 16087                           
 16088                           ;PIC16Xpress_DevBoard.c: 151:             return PORTBbits.RB7;
 16089  0597  0020               	movlb	0	; select bank0
 16090  0598  0D0D               	rlf	13,w	;volatile
 16091  0599  0D0D               	rlf	13,w	;volatile
 16092  059A  3901               	andlw	1
 16093  059B  2E05               	goto	i1l201
 16094  059C                     i1l3395:
 16095                           
 16096                           ;PIC16Xpress_DevBoard.c: 153:             return PORTAbits.RA0;
 16097  059C  0020               	movlb	0	; select bank0
 16098  059D  080C               	movf	12,w	;volatile
 16099  059E  3901               	andlw	1
 16100  059F  2E05               	goto	i1l201
 16101  05A0                     i1l3399:
 16102                           
 16103                           ;PIC16Xpress_DevBoard.c: 155:             return PORTAbits.RA1;
 16104  05A0  0020               	movlb	0	; select bank0
 16105  05A1  0C0C               	rrf	12,w	;volatile
 16106  05A2  3901               	andlw	1
 16107  05A3  2E05               	goto	i1l201
 16108  05A4                     i1l3403:
 16109                           
 16110                           ;PIC16Xpress_DevBoard.c: 157:             return PORTAbits.RA2;
 16111  05A4  0020               	movlb	0	; select bank0
 16112  05A5  0C0C               	rrf	12,w	;volatile
 16113  05A6  0C89               	rrf	9,f
 16114  05A7  3901               	andlw	1
 16115  05A8  2E05               	goto	i1l201
 16116  05A9                     i1l3407:
 16117                           
 16118                           ;PIC16Xpress_DevBoard.c: 159:             return PORTCbits.RC0;
 16119  05A9  0020               	movlb	0	; select bank0
 16120  05AA  080E               	movf	14,w	;volatile
 16121  05AB  3901               	andlw	1
 16122  05AC  2E05               	goto	i1l201
 16123  05AD                     i1l3411:
 16124                           
 16125                           ;PIC16Xpress_DevBoard.c: 161:             return PORTCbits.RC1;
 16126  05AD  0020               	movlb	0	; select bank0
 16127  05AE  0C0E               	rrf	14,w	;volatile
 16128  05AF  3901               	andlw	1
 16129  05B0  2E05               	goto	i1l201
 16130  05B1                     i1l3415:
 16131                           
 16132                           ;PIC16Xpress_DevBoard.c: 163:             return PORTCbits.RC2;
 16133  05B1  0020               	movlb	0	; select bank0
 16134  05B2  0C0E               	rrf	14,w	;volatile
 16135  05B3  0C89               	rrf	9,f
 16136  05B4  3901               	andlw	1
 16137  05B5  2E05               	goto	i1l201
 16138  05B6                     i1l3419:
 16139                           
 16140                           ;PIC16Xpress_DevBoard.c: 165:             return PORTBbits.RB4;
 16141  05B6  0020               	movlb	0	; select bank0
 16142  05B7  0E0D               	swapf	13,w	;volatile
 16143  05B8  3901               	andlw	1
 16144  05B9  2E05               	goto	i1l201
 16145  05BA                     i1l3423:
 16146                           
 16147                           ;PIC16Xpress_DevBoard.c: 167:             return PORTBbits.RB5;
 16148  05BA  0020               	movlb	0	; select bank0
 16149  05BB  0E0D               	swapf	13,w	;volatile
 16150  05BC  0C89               	rrf	9,f
 16151  05BD  3901               	andlw	1
 16152  05BE  2E05               	goto	i1l201
 16153  05BF                     i1l3427:
 16154                           
 16155                           ;PIC16Xpress_DevBoard.c: 169:             return PORTBbits.RB6;
 16156  05BF  0020               	movlb	0	; select bank0
 16157  05C0  0E0D               	swapf	13,w	;volatile
 16158  05C1  0C89               	rrf	9,f
 16159  05C2  0C89               	rrf	9,f
 16160  05C3  3901               	andlw	1
 16161  05C4  2E05               	goto	i1l201
 16162  05C5                     i1l3437:
 16163  05C5  0872               	movf	ReadPin@pin,w
 16164  05C6  00F0               	movwf	??_ReadPin
 16165  05C7  01F1               	clrf	??_ReadPin+1
 16166                           
 16167                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16168                           ; Switch size 1, requested type "simple"
 16169                           ; Number of cases is 1, Range of values is 0 to 0
 16170                           ; switch strategies available:
 16171                           ; Name         Instructions Cycles
 16172                           ; simple_byte            4     3 (average)
 16173                           ; direct_byte            8     6 (fixed)
 16174                           ; jumptable            260     6 (fixed)
 16175                           ;	Chosen strategy is simple_byte
 16176  05C8  0871               	movf	??_ReadPin+1,w
 16177  05C9  3A00               	xorlw	0	; case 0
 16178  05CA  1903               	skipnz
 16179  05CB  2DCD               	goto	i1l4519
 16180  05CC  2D7A               	goto	i1l3367
 16181  05CD                     i1l4519:
 16182                           
 16183                           ; Switch size 1, requested type "simple"
 16184                           ; Number of cases is 18, Range of values is 0 to 17
 16185                           ; switch strategies available:
 16186                           ; Name         Instructions Cycles
 16187                           ; direct_byte           42     6 (fixed)
 16188                           ; simple_byte           55    28 (average)
 16189                           ; jumptable            260     6 (fixed)
 16190                           ;	Chosen strategy is simple_byte
 16191  05CD  0870               	movf	??_ReadPin,w
 16192  05CE  3A00               	xorlw	0	; case 0
 16193  05CF  1903               	skipnz
 16194  05D0  2D71               	goto	i1l3359
 16195  05D1  3A01               	xorlw	1	; case 1
 16196  05D2  1903               	skipnz
 16197  05D3  2D76               	goto	i1l3363
 16198  05D4  3A03               	xorlw	3	; case 2
 16199  05D5  1903               	skipnz
 16200  05D6  2D7A               	goto	i1l3367
 16201  05D7  3A01               	xorlw	1	; case 3
 16202  05D8  1903               	skipnz
 16203  05D9  2D7C               	goto	i1l3371
 16204  05DA  3A07               	xorlw	7	; case 4
 16205  05DB  1903               	skipnz
 16206  05DC  2D81               	goto	i1l3375
 16207  05DD  3A01               	xorlw	1	; case 5
 16208  05DE  1903               	skipnz
 16209  05DF  2D85               	goto	i1l3379
 16210  05E0  3A03               	xorlw	3	; case 6
 16211  05E1  1903               	skipnz
 16212  05E2  2D8C               	goto	i1l3383
 16213  05E3  3A01               	xorlw	1	; case 7
 16214  05E4  1903               	skipnz
 16215  05E5  2D92               	goto	i1l3387
 16216  05E6  3A0F               	xorlw	15	; case 8
 16217  05E7  1903               	skipnz
 16218  05E8  2D97               	goto	i1l3391
 16219  05E9  3A01               	xorlw	1	; case 9
 16220  05EA  1903               	skipnz
 16221  05EB  2D9C               	goto	i1l3395
 16222  05EC  3A03               	xorlw	3	; case 10
 16223  05ED  1903               	skipnz
 16224  05EE  2DA0               	goto	i1l3399
 16225  05EF  3A01               	xorlw	1	; case 11
 16226  05F0  1903               	skipnz
 16227  05F1  2DA4               	goto	i1l3403
 16228  05F2  3A07               	xorlw	7	; case 12
 16229  05F3  1903               	skipnz
 16230  05F4  2DA9               	goto	i1l3407
 16231  05F5  3A01               	xorlw	1	; case 13
 16232  05F6  1903               	skipnz
 16233  05F7  2DAD               	goto	i1l3411
 16234  05F8  3A03               	xorlw	3	; case 14
 16235  05F9  1903               	skipnz
 16236  05FA  2DB1               	goto	i1l3415
 16237  05FB  3A01               	xorlw	1	; case 15
 16238  05FC  1903               	skipnz
 16239  05FD  2DB6               	goto	i1l3419
 16240  05FE  3A1F               	xorlw	31	; case 16
 16241  05FF  1903               	skipnz
 16242  0600  2DBA               	goto	i1l3423
 16243  0601  3A01               	xorlw	1	; case 17
 16244  0602  1903               	skipnz
 16245  0603  2DBF               	goto	i1l3427
 16246  0604  2D7A               	goto	i1l3367
 16247  0605                     i1l201:
 16248  0605  0008               	return
 16249  0606                     __end_of_ReadPin:
 16250                           
 16251                           	psect	text74
 16252  0A34                     __ptext74:	
 16253 ;; *************** function _JSN_GetLastTrig *****************
 16254 ;; Defined at:
 16255 ;;		line 119 in file "JSN_Sensor.c"
 16256 ;; Parameters:    Size  Location     Type
 16257 ;;		None
 16258 ;; Auto vars:     Size  Location     Type
 16259 ;;		None
 16260 ;; Return value:  Size  Location     Type
 16261 ;;                  1    wreg      PTR struct .
 16262 ;; Registers used:
 16263 ;;		wreg
 16264 ;; Tracked objects:
 16265 ;;		On entry : 0/0
 16266 ;;		On exit  : 0/0
 16267 ;;		Unchanged: 0/0
 16268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16273 ;;Total ram usage:        0 bytes
 16274 ;; Hardware stack levels used: 1
 16275 ;; This function calls:
 16276 ;;		Nothing
 16277 ;; This function is called by:
 16278 ;;		_CCP1_DefaultCallBack
 16279 ;;		_CCP2_DefaultCallBack
 16280 ;;		_CCP3_DefaultCallBack
 16281 ;; This function uses a non-reentrant model
 16282 ;;
 16283                           
 16284  0A34                     _JSN_GetLastTrig:	
 16285                           ;psect for function _JSN_GetLastTrig
 16286                           
 16287  0A34                     i1l3353:	
 16288                           ;incstack = 0
 16289                           ; Regs used in _JSN_GetLastTrig: [wreg]
 16290                           
 16291                           
 16292                           ;JSN_Sensor.c: 120:     return lastTrig;
 16293  0A34  0021               	movlb	1	; select bank1
 16294  0A35  0859               	movf	_lastTrig^(0+128),w
 16295  0A36                     i1l60:
 16296  0A36  0008               	return
 16297  0A37                     __end_of_JSN_GetLastTrig:
 16298  007E                     btemp	set	126	;btemp
 16299  007E                     int$flags	set	126
 16300  007E                     wtemp0	set	126
 16301                           
 16302                           	psect	idloc
 16303                           
 16304                           ;Config register IDLOC0 @ 0x8000
 16305                           ;	unspecified, using default values
 16306  8000                     	org	32768
 16307  8000  3FFF               	dw	16383
 16308                           
 16309                           ;Config register IDLOC1 @ 0x8001
 16310                           ;	unspecified, using default values
 16311  8001                     	org	32769
 16312  8001  3FFF               	dw	16383
 16313                           
 16314                           ;Config register IDLOC2 @ 0x8002
 16315                           ;	unspecified, using default values
 16316  8002                     	org	32770
 16317  8002  3FFF               	dw	16383
 16318                           
 16319                           ;Config register IDLOC3 @ 0x8003
 16320                           ;	unspecified, using default values
 16321  8003                     	org	32771
 16322  8003  3FFF               	dw	16383
 16323                           
 16324                           	psect	config
 16325                           
 16326                           ;Config register CONFIG1 @ 0x8007
 16327                           ;	FEXTOSC External Oscillator mode Selection bits
 16328                           ;	FEXTOSC = OFF, Oscillator not enabled
 16329                           ;	Power-up default value for COSC bits
 16330                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 16331                           ;	Clock Out Enable bit
 16332                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 16333                           ;	Clock Switch Enable bit
 16334                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16335                           ;	Fail-Safe Clock Monitor Enable
 16336                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 16337  8007                     	org	32775
 16338  8007  3F8C               	dw	16268
 16339                           
 16340                           ;Config register CONFIG2 @ 0x8008
 16341                           ;	Master Clear Enable bit
 16342                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 16343                           ;	Power-up Timer Enable bit
 16344                           ;	PWRTE = OFF, PWRT disabled
 16345                           ;	Watchdog Timer Enable bits
 16346                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 16347                           ;	Low-power BOR enable bit
 16348                           ;	LPBOREN = OFF, ULPBOR disabled
 16349                           ;	Brown-out Reset Enable bits
 16350                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 16351                           ;	Brown-out Reset Voltage selection bit
 16352                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 16353                           ;	PPSLOCK bit One-Way Set Enable bit
 16354                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 16355                           ;	Stack Overflow/Underflow Reset Enable bit
 16356                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 16357                           ;	Debugger enable bit
 16358                           ;	DEBUG = OFF, Background debugger disabled
 16359  8008                     	org	32776
 16360  8008  3FF3               	dw	16371
 16361                           
 16362                           ;Config register CONFIG3 @ 0x8009
 16363                           ;	User NVM self-write protection bits
 16364                           ;	WRT = OFF, Write protection off
 16365                           ;	Low Voltage Programming Enable bit
 16366                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 16367  8009                     	org	32777
 16368  8009  3FFF               	dw	16383
 16369                           
 16370                           ;Config register CONFIG4 @ 0x800A
 16371                           ;	User NVM Program Memory Code Protection bit
 16372                           ;	CP = OFF, User NVM code protection disabled
 16373                           ;	Data NVM Memory Code Protection bit
 16374                           ;	CPD = OFF, Data NVM code protection disabled
 16375  800A                     	org	32778
 16376  800A  3FFF               	dw	16383

Data Sizes:
    Strings     111
    Constant    0
    Data        0
    BSS         148
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     80      80
    BANK1            80     20      78
    BANK2            80      0      54
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2432$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    S2432$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[58]), STR_1(CODE[50]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 58
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[58]), STR_1(CODE[50]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[58]), STR_1(CODE[50]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), Absolute function(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP3_DefaultCallBack(), 

    sameSens@ccp3$F1017	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    lastTrig@ccp3$F1018	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    CCP2_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP2_DefaultCallBack(), 

    CCP2_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP2_DefaultCallBack(), 

    sameSens@ccp2$F892	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    lastTrig@ccp2$F893	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP1_DefaultCallBack(), 

    sameSens	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    lastTrig@ccp1$F747	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    sp__JSN_GetLastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    JSN_Sensor_GetDistance@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens2(BANK2[6]), Sens1(BANK2[6]), 

    JSN_Sensor_Trig@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens2(BANK2[6]), Sens1(BANK2[6]), 

    lastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens2(BANK2[6]), Sens1(BANK2[6]), 

    JSN_Sensor_Init@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens2(BANK2[6]), Sens1(BANK2[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _INTERRUPT_InterruptManager->_CCP2_CaptureISR
    _INTERRUPT_InterruptManager->_CCP3_CaptureISR
    _TMR3_ISR->_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _CCP3_CaptureISR->_CCP3_DefaultCallBack
    _CCP3_DefaultCallBack->_ReadPin
    _CCP2_CaptureISR->_CCP2_DefaultCallBack
    _CCP2_DefaultCallBack->_ReadPin
    _CCP1_CaptureISR->_CCP1_DefaultCallBack
    _CCP1_DefaultCallBack->_ReadPin

Critical Paths under _main in BANK0

    _main->_printf
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _CCP3_Initialize->_CCP3_SetCallBack
    _CCP2_Initialize->_CCP2_SetCallBack
    _CCP1_Initialize->_CCP1_SetCallBack
    _JSN_Sensor_Trig->_FRT_GetMicros
    _FRT_GetMicros->_TMR0_ReadTimer
    _JSN_Sensor_Init->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _JSN_Sensor_GetDistance->___lldiv
    ___lldiv->___lmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_JSN_Sensor_Init
    _JSN_Sensor_Init->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   17727
                                              7 BANK1     13    13      0
                      _FRT_GetMillis
             _JSN_Sensor_GetDistance
                    _JSN_Sensor_Init
                    _JSN_Sensor_Trig
                         _PIC16_Init
                             _SetPin
                           _WritePin
                             _printf
 ---------------------------------------------------------------------------------
 (1) _PIC16_Init                                           0     0      0    1078
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0    1078
                    _CCP1_Initialize
                    _CCP2_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR3_Initialize                                      0     0      0      98
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR3_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR1_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Initialize                                    1     1      0     490
                                              2 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP3_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP2_Initialize                                      0     0      0      98
                   _CCP2_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP2_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP1_Initialize                                      0     0      0      98
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP1_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Trig                                      5     5      0    1040
                                              6 BANK0      5     5      0
                      _FRT_GetMicros
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _FRT_GetMicros                                        4     0      4      23
                                              2 BANK0      4     0      4
                     _TMR0_ReadTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_ReadTimer                                       2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Init                                      5     3      2    7718
                                              2 BANK1      5     3      2
                             _SetPin
                           _WritePin
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5608
                                             76 BANK0      4     0      4
                                              0 BANK1      2     2      0
             _JSN_Sensor_GetDistance (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5250
                                             68 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    4923
                                             52 BANK0     16    14      2
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                24    16      8    3578
                                             28 BANK0     24    16      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2554
                                             19 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                             11 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     834
                                              3 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      66
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             18     2     16     311
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             26    10     16     314
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _WritePin                                             4     3      1     852
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetPin                                               4     3      1     624
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_GetDistance                               5     3      2     690
                                             26 BANK0      5     3      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _FRT_GetMillis                                        4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0     978
                   Absolute function *
                    _CCP1_CaptureISR
                    _CCP2_CaptureISR
                    _CCP3_CaptureISR
                    _CCP4_CompareISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR3_ISR                                            0     0      0     240
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR3_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR0_CallBack                                       0     0      0       0
                      _FRT_IncMicros
                      _FRT_IncMillis
 ---------------------------------------------------------------------------------
 (14) _FRT_IncMillis                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _FRT_IncMicros                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _CCP4_CompareISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CCP3_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP3_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (12) _CCP2_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP2_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP2_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (12) _CCP1_CaptureISR                                     3     3      0     166
                                              7 COMMON     3     3      0
                   Absolute function *
               _CCP1_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP1_DefaultCallBack                                4     2      2     119
                                              3 COMMON     4     2      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (14) _ReadPin                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (14) _JSN_GetLastTrig                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FRT_GetMillis
   _JSN_Sensor_GetDistance
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _JSN_Sensor_Init
     _SetPin
     _WritePin
     _printf
       _JSN_Sensor_GetDistance (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _fputc
             _putch
               _EUSART_Write
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
   _JSN_Sensor_Trig
     _FRT_GetMicros
       _TMR0_ReadTimer
     _WritePin
   _PIC16_Init
     _SYSTEM_Initialize
       _CCP1_Initialize
         _CCP1_SetCallBack
       _CCP2_Initialize
         _CCP2_SetCallBack
       _CCP3_Initialize
         _CCP3_SetCallBack
       _CCP4_Initialize
       _EUSART_Initialize
         _EUSART_SetErrorHandler
         _EUSART_SetFramingErrorHandler
         _EUSART_SetOverrunErrorHandler
         _EUSART_SetRxInterruptHandler
         _EUSART_SetTxInterruptHandler
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _PWM5_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR1_Initialize
         _TMR1_SetInterruptHandler
       _TMR2_Initialize
       _TMR3_Initialize
         _TMR3_SetInterruptHandler
       _WDT_Initialize
   _SetPin
   _WritePin
   _printf

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _CCP1_CaptureISR *
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP2_CaptureISR *
     Absolute function(Fake) *
     _CCP2_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP3_CaptureISR *
     Absolute function(Fake) *
     _CCP3_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP4_CompareISR *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     _TMR0_CallBack
       _FRT_IncMicros
       _FRT_IncMillis
   _TMR1_ISR *
     _TMR1_WriteTimer
   _TMR3_ISR *
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     14      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      36       9       67.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     102      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     102      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Feb 08 14:57:27 2022

                              _CCP4_Initialize 0B35                  ?_EUSART_SetRxInterruptHandler 0020  
                       ??_CCP3_DefaultCallBack 0075                                             l32 056E  
                                           l28 04D4                                             l37 04FD  
                                           l54 07AE                                             l70 00DA  
                                           l71 00DA                                             l57 0F63  
                                           l66 00C7                                             l67 00C7  
                      __end_of_CCP1_Initialize 0BF8                                            l301 0D24  
                                          l310 0A45                                            l304 0AF1  
                                          l225 0415                                            l313 0B01  
                                          l307 0AF5                                            l412 0BF7  
                                          l172 0E26                                            l510 0A83  
                                          l342 0B6F                                            l351 0A60  
                                          l504 0C27                                            l177 04D0  
                                          l418 0A71                                            l711 0A95  
                                          l464 0A7A                                            l720 0AB0  
                                          l369 0AB9                                            l537 0C40  
                                          l458 0C0F                                            l714 0A9E  
                                          l570 0AC2                                            l723 0AA7  
                                          l717 0A8C                                            l902 0B45  
                                          l672 0D2D                                            l648 07F4  
                                          l673 0D36                                            l682 0A59  
                                          l922 0AE9                                            l676 0D51  
                                          l852 0C92                                            l837 0DEC  
                                          l849 0B34                                            l938 0A68  
                                          l984 0CAE                                            _PR2 001E  
                                          u900 0F6F                                            u901 0F6E  
                                          u910 0F7E                                            u911 0F7D  
                                          u920 0F9C                                            u921 0F9B  
                                          u930 0CF9                                            u931 0CF8  
                                          u860 0D2D                                            u940 0C70  
                                          u861 0D2C                                            u925 0F98  
                                          u941 0C6F                                            u950 060E  
                                          u870 0D31                                            u871 0D30  
                                          u960 061D                                            u880 0D4B  
                                          u961 061C                                            u881 0D4A  
                                          u970 0630                                            u890 0F6A  
                                          u971 062F                                            u891 0F69  
                                          u980 065A                                            u981 0659  
                                          u990 0679                                            u991 0678  
                                          u985 0656                                _timer1ReloadVal 00B8  
                       ??_EUSART_RxDataHandler 0070                                            _pad 0FA7  
               ?_EUSART_SetFramingErrorHandler 0020                                _TMR2_Initialize 0A61  
                                          wreg 0009                                           l1014 0ACB  
                                         l1205 0755                                           l1402 0679  
                                         l1412 06EA                   JSN_Sensor_GetDistance@Sensor 003E  
                                         l1183 0DB6                                           l1409 0689  
                                         l3201 0620                                           l4001 056D  
                                         l3211 065A                                           l3203 0628  
                                         l1419 06FA                                _timer3ReloadVal 00AA  
                                         l3213 066A                                           l3205 062C  
                                         l3221 069A                                           l1701 0FA6  
                                         l4021 0777                                           l3301 0AA8  
                                         l4031 0F5A                                           l3215 066B  
                                         l3207 0630                                           l3231 06DC  
                                         l3223 06A2                                           l3151 0D41  
                                         l3143 0D27                                           l3311 029A  
                                         l4023 079D                                           l3303 0A8D  
                                         l1632 0B5A                                           l3209 0638  
                                         l3225 06A6                                           l3217 068A  
                                         l3153 0D45                                           l3145 0D27  
                                         l3161 0A55                                           l3241 0FC1  
                                         l3233 0FA9                                           l3321 02CE  
                                         l3313 02AB                                           l4025 07A8  
                                         l4017 0758                                           l3305 0A96  
                                         l4041 0DFC                                           l4201 015A  
                                         l3227 06AA                                           l3219 0697  
                                         l3155 0D4B                                           l3147 0D31  
                                         l3171 0F7E                                           l3163 0F64  
                                         l1715 0C76                                           l3243 0FC6  
                                         l3235 0FAE                                           l3331 0313  
                                         l3323 02D6                                           l3315 02B3  
                                         l4019 076B                                           l3307 0A84  
                                         l4051 0E10                                           l4043 0DFE  
                                         l4035 0DED                                           l4211 018C  
                                         l4203 0164                                           l1660 0FE5  
                                         l4029 0F23                                           l3229 06CC  
                                         l3157 0D4C                                           l3149 0D37  
                                         l3173 0F9C                                           l3165 0F6A  
                                         l1709 0CF9                                           l3181 0CE4  
                                         l1661 0FF3                                           l3245 0FD2  
                                         l3237 0FB7                                           l3261 01D9  
                                         l3253 01AB                                           l3341 0334  
                                         l3333 031B                                           l3325 02E8  
                                         l3317 02B8                                           l3501 0C14  
                                         l3309 0AC3                                           l4061 0E21  
                                         l4053 0E12                                           l4045 0E01  
                                         l4037 0DF7                                           l4213 019D  
                                         l4205 016D                                           l1662 0FFF  
                                         l3159 0D4F                                           l3167 0F6F  
                                         l3183 0CE9                                           l3191 0C70  
                                         l3247 0FD7                                           l3239 0FBC  
                                         l3271 0220                                           l3263 01ED  
                                         l3255 01B0                                           l3335 0326  
                                         l3319 02BC                                           l3511 0C25  
                                         l3503 0C15                                           l4063 0E24  
                                         l4055 0E14                                           l4047 0E03  
                                         l4039 0DFA                                           l4207 0175  
                                         l3169 0F74                                           l3177 0CD3  
                                         l3185 0C5E                                           l3249 0FEA  
                                         l1657 0FC3                                           l3281 0271  
                                         l3273 0224                                           l3265 01F0  
                                         l3257 01C3                                           l1665 01B4  
                                         l3329 0302                                           l3345 0337  
                                         l3521 0BE6                                           l3513 0BE0  
                                         l3505 0C16                                           l3601 0C34  
                                         l4065 0E25                                           l4057 0E17  
                                         l4049 0E0D                                           l4209 017B  
                                         l1682 035A                                           l4067 0B24  
                                         l3195 0606                                           l3179 0CD6  
                                         l3187 0C63                                           l3283 027F  
                                         l3267 01F5                                           l3275 0251  
                                         l3259 01C9                                           l3347 0350  
                                         l3339 032C                                           l3291 0A69  
                                         l3523 0BEE                                           l3515 0BE3  
                                         l3507 0C1E                                           l3611 07B9  
                                         l3451 0AFE                                           l3443 0AF6  
                                         l3603 0C35                                           l3531 0A64  
                                         l4059 0E19                                           l4171 00DB  
                                         l3197 0611                                           l3189 0C67  
                                         l1677 0297                                           l3277 0258  
                                         l3285 0284                                           l3269 021C  
                                         l1669 01D1                                           l3525 0BF3  
                                         l3517 0BE4                                           l3293 0A72  
                                         l3509 0C23                                           l3621 07CC  
                                         l3613 07C3                                           l3461 0DC2  
                                         l3453 0DB7                                           l3445 0AF8  
                                         l3541 0B61                                           l3605 0C3D  
                                         l3533 0A65                                           l4181 0104  
                                         l4173 00EE                                           l4165 00B2  
                                         l4511 0498                                           l3711 0458  
                                         l3703 044A                                           l3199 061D  
                                         l3279 0264                                           l3527 0BF5  
                                         l3519 0BE5                                           l3551 0BFB  
                                         l3295 0A7B                                           l3631 07E8  
                                         l3623 07CE                                           l3615 07C6  
                                         l3607 07AF                                           l3471 0DD6  
                                         l3463 0DC5                                           l3455 0DBB  
                                         l3447 0AFA                                           l3543 0B62  
                                         l3535 0A66                                           l4503 0152  
                                         l4191 013B                                           l4183 0108  
                                         l4175 00F6                                           l4167 00B5  
                                         l3801 03A4                                           l1689 0D82  
                                         l4505 04EF                                           l3561 0C0B  
                                         l3553 0BFC                                           l3633 07E9  
                                         l3625 07D6                                           l3617 07C8  
                                         l3609 07B1                                           l3481 0DE2  
                                         l3473 0DD8                                           l3465 0DC7  
                                         l3457 0DBE                                           l3449 0AFC  
                                         l3289 0AB1                                           l3545 0B64  
                                         l3537 0B5B                                           l3297 0ABA  
                                         l3529 0A61                                           l4193 0141  
                                         l4185 011B                                           l4177 00F8  
                                         l4169 00C8                                           l3731 047B  
                                         l3723 046D                                           l3715 045F  
                                         l3707 0451                                           l4507 051E  
                                         l3563 0C0D                                           l3555 0BFD  
                                         l3571 0B43                                           l3299 0A9F  
                                         l3635 07EA                                           l3627 07DE  
                                         l3619 07CA                                           l3491 0AEE  
                                         l3483 0DE4                                           l3475 0DDB  
                                         l3467 0DD1                                           l3459 0DC0  
                                         l3547 0B6C                                           l3539 0B60  
                                         l4195 0145                                           l4179 00FE  
                                         l4509 03DD                                           l3821 03C7  
                                         l3813 03B9                                           l3805 03AB  
                                         l3661 0D54                                           l3557 0BFE  
                                         l3549 0BF8                                           l3565 0B35  
                                         l3637 07F3                                           l3629 07E6  
                                         l3493 0AF0                                           l3485 0DE6  
                                         l3477 0DDD                                           l3469 0DD4  
                                         l3581 0CA2                                           l3573 0C93  
                                         l4189 0137                                           ?_pad 0033  
                                         l3735 0482                                           l3727 0474  
                                         l3719 0466                                           l3831 03D5  
                                         l3663 0D58                                           l3639 0A5A  
                                         l3559 0C06                                           l3567 0B3C  
                                         l3487 0DE9                                           l3479 0DDF  
                                         l3591 0AE4                                           l3583 0CA3  
                                         l3575 0C95                                           l3495 0A42  
                                         l4199 0149                                           l3745 0490  
                                         l3673 0418                                           l3825 03CE  
                                         l3817 03C0                                           l3809 03B2  
                                         l3761 035E                                           l3665 0D5C  
                                         l3753 0B46                                           l3497 0C10  
                                         l3569 0B41                                           l3489 0AEA  
                                         l3593 0AE5                                           l3585 0CAB  
                                         l3577 0C97                                           l3931 0D90  
                                         l3739 0489                                           l3691 0435  
                                         l3683 0427                                           l3675 0419  
                                         l3667 0D70                                           l3755 0B4B  
                                         l3499 0C13                                           l3587 0AE0  
                                         l3595 0C28                                           l3579 0C98  
                                         l3843 0CFA                                           l3941 06FB  
                                         l3933 0D98                                           l3781 0381  
                                         l3773 0373                                           l3765 0365  
                                         l3669 0D7A                                           l3589 0AE3  
                                         l3597 0C2C                                           l3951 0725  
                                         l3943 070C                                           l3935 0D9F  
                                         l3927 0D83                                           l3695 043C  
                                         l3687 042E                                           l3679 0420  
                                         l3759 035D                                           l3839 0C77  
                                         l3599 0C2D                                           l3953 0737  
                                         l3945 070F                                           l3961 074D  
                                         l3937 0DAE                                           l3929 0D8C  
                                         l3793 0396                                           l3785 0388  
                                         l3777 037A                                           l3769 036C  
                                         l3955 073F                                           l3947 071A  
                                         l3699 0443                                           l3971 04E5  
                                         l3957 0740                                           l3949 071E  
                                         l3797 039D                                           l3789 038F  
                                         l3981 050C                                           l3965 04D3  
                                         l3959 0747                                           l3991 0547  
                                         l3967 04D4                                           l3993 0550  
                                         l3969 04DD                                           l3977 04E7  
                                         l3995 0557                                           l3979 04FD  
                                         l3997 0560                                           l3989 0515  
                                         l3999 0569                                           STR_1 103A  
                                         STR_2 1000                                           STR_3 106C  
                                         STR_4 106C                                           u1000 0697  
                                         u1001 0696                                           u1010 06AA  
                                         u1011 06A9                                           u1020 06CC  
                                         u1100 0258                                           u1021 06CB  
                                         u1101 0257                                           u1030 06EA  
                                         u1110 0264                                           u1031 06E9  
                                         u1111 0263                                           u1040 0FAE  
                                         u1120 0271                                           u1200 0D7A  
                                         u1025 06C8                                           u1041 0FAD  
                                         u1121 0270                                           u1201 0D79  
                                         u1050 0FBC                                           u1130 027F  
                                         u1051 0FBB                                           u1131 027E  
                                         u1060 0FE5                                           u1140 0284  
                                         u1061 0FE4                                           u1141 0283  
                                         u1125 026D                                           u1310 0737  
                                         u1230 0D90                                           u1070 0FEA  
                                         u1150 02AB                                           u1311 0736  
                                         u1231 0D8F                                           u1071 0FE9  
                                         u1135 027B                                           u1151 02AA  
                                         u1080 01B0                                           u1160 02CE  
                                         u1305 071F                                           u1065 0FE1  
                                         u1081 01AF                                           u1161 02CD  
                                         u1330 074D                                           u1090 01C3  
                                         u1170 0313                                           u1331 074C  
                                         u1315 0733                                           u1091 01C2  
                                         u1171 0312                                           u1260 0DAE  
                                         u1340 079D                                           u1180 0AF5  
                                         u1325 0741                                           u1261 0DAD  
                                         u1245 0D99                                           u1341 079C  
                                         u1181 0AF4                                           _LATA 010C  
                                         u1270 070C                                           _LATB 010D  
                                         u1271 070B                                           u1255 0DA0  
                                         u1095 01BF                                           _LATC 010E  
                                         u1440 00C7                                           u1441 00C6  
                                         u1290 071E                                           u1450 00DA  
                                         u1291 071D                                           u1451 00D9  
                                         u1460 0136                                           u1285 0710  
                                         u1461 0135                                           u1470 0164  
                                         u1471 0163                                           u1480 016D  
                                         u1481 016C                                           _PIE0 0090  
                                         _PIE1 0091                                           _PIE2 0092  
                                         _PIE3 0093                                           _PIE4 0094  
                                         _PMD0 0911                                           _PMD1 0912  
                                         _PMD2 0913                                           _PMD3 0914  
                                         _PMD4 0915                                           _PMD5 0916  
                                         i1l60 0A36                                           _PIR0 0010  
                                         _PIR1 0011                                           _PIR2 0012  
                                         _PIR3 0013                                           _PIR4 0014  
                                         _PLLR 48E0                                           _TMR2 001D  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                           _dbuf 01A0  
                      __end_of_CCP2_Initialize 0C10                                           _main 00B2  
                                         _prec 00A4                                           _nout 00A0  
                                         pad@i 0037                                           pad@p 0034  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 0039                                           btemp 007E  
                                         _utoa 01A9                                     ReadPin@pin 0072  
                                         start 0090                                _TMR3_Initialize 0C93  
                              _PWM5_Initialize 0AE0                       __end_of_CCP1_SetCallBack 0A72  
                   ??_TMR1_SetInterruptHandler 0022                               ?_CCP1_CaptureISR 0070  
                              __end_of_ReadPin 0606                        __end_of_CCP4_CompareISR 0A3A  
                                        ??_pad 0036                        __end_of_TMR0_Initialize 0B70  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0AF6  
                      __end_of_CCP3_Initialize 0C28                                          ?_main 0070  
                              __end_of___lldiv 0756                                          ?_utoa 003C  
                              __end_of___lodiv 068A                                          _T1CON 001B  
                                        _T2CON 001F                                          _T3CON 0413  
                              __end_of___lomod 06FB                                          i1l201 0605  
                                        i1l501 0F20                                          i1l415 0B85  
                                        i1l409 0EA2                                          i1l507 0BB1  
                                        i1l363 0BC8                                          i1l461 0B9B  
                                        i1l702 0002                                          i1l366 0A52  
                                        i1l455 0EE1                                          i1l551 0B12  
                                        i1l705 0A41                                          i1l563 07FF  
                                        i1l708 0A3D                                          i1l911 0A39  
                                        i1l771 0042                                          i1l764 0014  
                                        i1l685 0CCF                                          i1l773 0050  
                                        i1l782 008E                                          i1l695 0E63  
                                        i1l855 0ADF                                          i1l775 005E  
                                        i1l767 0026                                          i1l688 0CD0  
                                        i1l776 008E                                          i1l777 006C  
                                        i1l769 0034                                          i1l858 0AD5  
                                        i1l699 0C5B                                          i1l779 007D  
                                        i1l998 0B23                                          _OSCEN 091D  
                                 vfpfcnvrt@fmt 0054                                          _TMR0H 0016  
                                 vfpfcnvrt@llu 005B                                          _TMR1H 001A  
                                        _TMR0L 0015                                          _TMR3H 0412  
                                        _TMR1L 0019                                          _TMR3L 0411  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _RXPPS 0E24  
                          ___lmul@multiplicand 0024                      ?_TMR0_SetInterruptHandler 0020  
                    ?_TMR3_SetInterruptHandler 0020                                          _Sens1 0150  
                                        _Sens2 014A                                          _Sens3 0138  
                             __end_of_TMR0_ISR 0BC9                               __end_of_TMR1_ISR 0800  
                             __end_of_TMR3_ISR 0BE0                               ?_CCP2_CaptureISR 0070  
               ??_TMR3_DefaultInterruptHandler 0070                                          _flags 00A6  
                               _WDT_Initialize 0A42                                          _fputc 0F64  
                                        _fputs 0CD1                                          pad@fp 003B  
                                        _width 00A2                                          _putch 0A53  
                                        main@i 00E9                        __end_of_TMR1_Initialize 0C41  
                                        pclath 000A                                          utoa@d 003C  
                                        utoa@i 0052                                          utoa@n 004A  
                                        utoa@p 0045                                          utoa@w 0048  
                                        status 0003                        __end_of_CCP4_Initialize 0B46  
                                        wtemp0 007E                               ___lodiv@dividend 0028  
                              _TMR1_WriteTimer 0B02                       __end_of_CCP2_SetCallBack 0A7B  
                              __initialization 0092                               ?_CCP3_CaptureISR 0070  
                                 __end_of_main 01A9                                   __end_of_utoa 0298  
                               ??_EUSART_Write 0020                        __end_of_TMR2_Initialize 0A69  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0022  
                                       ??_main 00E1                               ?_CCP1_Initialize 0070  
                                       ??_utoa 0044                          _TMR3_InterruptHandler 00A8  
                             ___lodiv@quotient 0031                         __end_of_WDT_Initialize 0A46  
                              _JSN_GetLastTrig 0A34      __end_of_EUSART_DefaultFramingErrorHandler 0003  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0002                     _EUSART_OverrunErrorHandler 00AE  
                                       ?_fputc 0023                                         ?_fputs 002B  
                                       _CCPR1H 0292                                         _CCPR2H 0296  
                                       _CCPR3H 0312                                         _CCPR1L 0291  
                                       _CCPR4H 0316                                         _CCPR2L 0295  
                                       _CCPR3L 0311                                         _CCPR4L 0315  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _T0CON0 0017                                         _T0CON1 0018  
                                       _T1GCON 001C                                         _T3GCON 0414  
                                       _RC1REG 0199                               __end_of_WritePin 0416  
                                       _RC1STA 019D                                         i1l1011 0BDF  
                                       i1l1017 0003                        TMR1_WriteTimer@timerVal 0070  
                                       _RC4PPS 0EA4                                         _ODCONA 028C  
                                       _ODCONB 028D                                         _ODCONC 028E  
                                       u121_20 0B07                                         u121_21 0B06  
                                       i1l3411 05AD                                         i1l3403 05A4  
                                       i1l4131 0CC8                                         i1l4123 0CAF  
                                       i1l4141 0E38                                         i1l4133 0CC9  
                                       i1l4125 0CB6                                         i1l3423 05BA  
                                       i1l3415 05B1                                         i1l3407 05A9  
                                       i1l4151 0E59                                         i1l4143 0E3E  
                                       i1l4135 0E27                                         i1l4127 0CBE  
                                       i1l4071 0BB2                                         i1l4231 0006  
                                       u122_20 0B18                                         i1l3353 0A34  
                                       i1l4081 0B72                                         i1l4153 0E60  
                                       i1l4145 0E43                                         i1l4137 0E2D  
                                       i1l4129 0CC2                                         i1l4073 0BB4  
                                       u122_21 0B17                                         i1l4161 0BD3  
                                       i1l4241 0022                                         i1l4233 000B  
                                       i1l3427 05BF                                         i1l3419 05B6  
                                       i1l3371 057C                                         i1l3363 0576  
                                       i1l4083 0B7B                                         i1l4091 0B9C  
                                       i1l4155 0A37                                         i1l4147 0E49  
                                       i1l4139 0E32                                         i1l4075 0BC2  
                                       i1l4163 0BDA                                         i1l4251 0047  
                                       i1l4243 002B                                         i1l4235 0010  
                      __end_of_PWM5_Initialize 0AEA                        __end_of_TMR3_Initialize 0CAF  
                                       i1l3437 05C5                                         i1l3357 0570  
                                       i1l4085 0B86                                         i1l4093 0B9E  
                                       i1l4149 0E4F                                         i1l4077 0BC5  
                                       i1l4157 0BC9                                         i1l4261 0068  
                                       i1l4253 004C                                         i1l4245 0030  
                                       i1l4237 0018                                         i1l3391 0597  
                                       i1l3383 058C                                         i1l3375 0581  
                                       i1l3367 057A                                         i1l3359 0571  
                                       i1l4079 0B70                                         i1l4087 0B88  
                                       i1l4095 0BA7                                         i1l4159 0BCB  
                                       i1l4263 0071                                         i1l4255 0055  
                                       i1l4247 0039                                         i1l4239 001D  
                                       i1l4089 0B91                                         i1l4513 0F18  
                                       i1l4097 07F5                                         i1l4265 0076  
                                       i1l4257 005A                                         i1l4249 003E  
                                       i1l3395 059C                                         i1l3387 0592  
                                       i1l3379 0585                                         i1l4515 0ED9  
                                       i1l3651 0C41                                         i1l3643 0AD6  
                                       i1l4099 07F7                                         i1l4267 0082  
                                       i1l4259 0063                                         i1l4517 0E9A  
                                       i1l3653 0C4B                                         i1l3901 0B0A  
                                       i1l4269 0087                                         i1l4519 05CD  
                                       i1l3399 05A0                                         i1l3655 0C4F  
                                       i1l3911 0A3A                                         i1l3647 0ACC  
                                       i1l3903 0B0C                                         u140_20 0E32  
                                       i1l3657 0C55                                         u140_21 0E31  
                                       i1l3905 0B0E                                         i1l3921 0B1D  
                                       i1l3913 0B13                                         i1l3851 0E76  
                                       i1l3659 0C56                                         i1l3907 0B10  
                                       i1l3915 0B18                                         i1l3923 0B1F  
                                       i1l3853 0E7B                                         i1l3909 0A3E  
                                       i1l3845 0A4C                                         i1l3925 0B21  
                                       i1l3917 0B19                                         i1l3847 0E64  
                                       i1l3863 0EA3                                         i1l3919 0B1B  
                                       u141_20 0E43                                         i1l3849 0E6C  
                                       i1l3857 0E8A                                         i1l3865 0EAB  
                                       i1l3873 0EC9                                         i1l3881 0EEA  
                                       u141_21 0E42                                         i1l3867 0EB5  
                                       i1l3883 0EF4                                         i1l3869 0EBA  
                                       i1l3885 0EF9                                         i1l3879 0EE2  
                                       i1l3895 0B02                                         u142_20 0E59  
                                       u150_20 000B                                         i1l3889 0F08  
                                       u142_21 0E58                                         i1l3897 0B07  
                                       u150_21 000A                                         i1l3899 0B08  
                                       u119_20 0C55                                         u135_20 0BC2  
                                       u143_20 0BDA                                         u151_20 0010  
                                       u119_21 0C54                                         u135_21 0BC1  
                                       u143_21 0BD9                                         u151_21 000F  
                                       u160_20 004C                                         u152_20 0018  
                                       u160_21 004B                                         u152_21 0017  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         u161_20 0055  
                                       u153_20 001D                                         u161_21 0054  
                                       u153_21 001C                                         u138_20 0CB6  
                                       u162_20 005A                                         u154_20 0022  
                                       u138_21 0CB5                                         u162_21 0059  
                                       u154_21 0021                                         u139_20 0CC8  
                                       u163_20 0063                                         u155_20 002B  
                                       u139_21 0CC7                                         u163_21 0062  
                                       u155_21 002A                                         u164_20 0068  
                                       u156_20 0030                                         u164_21 0067  
                                       u156_21 002F                                         u165_20 0071  
                                       u157_20 0039                                         u165_21 0070  
                                       u157_21 0038                                         u166_20 0076  
                                       u158_20 003E                                         u166_21 0075  
                                       u158_21 003D                                         u167_20 0082  
                                       u159_20 0047                                         u167_21 0081  
                                       u159_21 0046                                         u168_20 0087  
                                       u168_21 0086                             _ticksUp@ccp3$F1015 00BC  
                                main@currMilli 00EA                                         _OSCFRQ 091F  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                               ?_CCP2_Initialize 0070  
                            ??_JSN_Sensor_Init 00DE                                      ??_ReadPin 0070  
                              _TMR3_WriteTimer 0B13                              ??_JSN_Sensor_Trig 0026  
                                _CCP1_CallBack 00CA                       __end_of_CCP3_SetCallBack 0A84  
                                       _SetPin 0416                   _TMR1_DefaultInterruptHandler 0000  
                                _CCP2_CallBack 00C4                                   vfprintf@cfmt 006A  
                                       ___lmul 0D83                                      ??___lldiv 0034  
                             ?_CCP4_CompareISR 0070                                      ??___lodiv 0030  
                                    ??___lomod 0030                                  _CCP3_CallBack 00BE  
                          _EUSART_Transmit_ISR 0CAF                               ?_TMR0_Initialize 0070  
                                       _micros 0146                                         _millis 0142  
                           _lastTrig@ccp1$F747 00D7                             _lastTrig@ccp2$F893 00D5  
                                       _printf 0B46                                         pad@buf 0033  
                                main@prevMilli 00E5                               ?_CCP3_Initialize 0070  
                                       _strlen 0C5C                                         fputc@c 0023  
                               _PMD_Initialize 0AF6                                         fputs@c 002F  
                                       fputs@i 0030                                         fputs@s 0032  
            CCP2_DefaultCallBack@capturedValue 0073                                ?_WDT_Initialize 0070  
                        __end_of_TMR0_CallBack 0A53                               __end_of_vfprintf 0D83  
                                       utoa@fp 0047       TMR3_SetInterruptHandler@InterruptHandler 0020  
     TMR1_SetInterruptHandler@InterruptHandler 0020       TMR0_SetInterruptHandler@InterruptHandler 0020  
                      __end_of_TMR1_WriteTimer 0B13                           ?_EUSART_Transmit_ISR 0070  
                             ?_TMR1_Initialize 0070                              _SYSTEM_Initialize 0CFA  
                      __end_of__initialization 00AE                               ?_CCP4_Initialize 0070  
                           ?_SYSTEM_Initialize 0070           __end_of_EUSART_SetTxInterruptHandler 0AB1  
                 _EUSART_SetTxInterruptHandler 0AA8                                   ??_PIC16_Init 0023  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0023  
                                    ?_TMR0_ISR 0070                                      ?_TMR1_ISR 0070  
                                    ?_TMR3_ISR 0070                                  __end_of_fputc 0FA7  
                                __end_of_fputs 0CFA                                  __end_of_putch 0A5A  
                             ?_TMR2_Initialize 0070                         __end_of_PMD_Initialize 0B02  
                      __end_of_JSN_GetLastTrig 0A37                          CCP3_CaptureISR@module 0078  
                        TMR0_ISR@CountCallBack 00CC                           _eusartRxStatusBuffer 0120  
               CCP3_SetCallBack@customCallBack 0020                ??_EUSART_SetOverrunErrorHandler 0022  
                           __end_of_PIC16_Init 0E27                                        ??_fputc 0026  
                    __end_of_SYSTEM_Initialize 0D25                                        ??_fputs 002C  
                        ??_EUSART_Transmit_ISR 0070                        __end_of_TMR3_WriteTimer 0B24  
                                      ??_putch 0022                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                                     __pbssBANK3 01A0  
                         __end_of_EUSART_Write 0D52                               ?_PWM5_Initialize 0070  
                             ?_TMR3_Initialize 0070                       ??_JSN_Sensor_GetDistance 003C  
                                      ?_SetPin 0020                              ?_CCP1_SetCallBack 0020  
                                   __pmaintext 00B2                  ?_EUSART_SetTxInterruptHandler 0020  
             _EUSART_TxDefaultInterruptHandler 00B4               __end_of_TMR0_SetInterruptHandler 0ABA  
                                      ?___lmul 0020               __end_of_TMR3_SetInterruptHandler 0ACC  
                                _FRT_GetMicros 0C77                                     ??_TMR0_ISR 0070  
                                   ??_TMR1_ISR 0072                                  _FRT_GetMillis 0B24  
                                   ??_TMR3_ISR 0072                             ??_CCP1_SetCallBack 0022  
                                   __pintentry 0004                                        _CCP1CAP 0294  
                                      _CCP2CAP 0298                                        _CCP3CAP 0314  
                                      _CCP1CON 0293                                        _CCP2CON 0297  
                                      _CCP3CON 0313                                        _CCP4CON 0317  
                                      _CCP1PPS 0E14                                        _CCP2PPS 0E15  
                                      _CCP3PPS 0E16                                 ___lmul@product 0028  
                                _FRT_IncMicros 0ACC                   ??_EUSART_DefaultErrorHandler 0071  
                                _FRT_IncMillis 0AD6                                        ?_printf 006C  
                              ?_PMD_Initialize 0070                                      ?_WritePin 0020  
                                      ?_strlen 0020                                  _eusartRxCount 00D1  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                                      _OSCCON1 0919                                        _OSCCON3 091B  
                                      _OSCTUNE 091E                                        _PWM5DCH 0618  
                                      _PWM5DCL 0617                                        _PWM5CON 0619  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                       ??_EUSART_SetErrorHandler 0022  
                             ?_TMR1_WriteTimer 0070                               ___lomod@dividend 0028  
            CCP1_DefaultCallBack@capturedValue 0073                               _micros@FRT$F1617 013E  
                                      _ReadPin 056F                              ?_CCP2_SetCallBack 0020  
                               ?_FRT_GetMicros 0022                                 ?_FRT_GetMillis 0020  
                                      ___lldiv 06FB                                        ___lodiv 0606  
                           ??_CCP2_SetCallBack 0022                                        ___lomod 068A  
                                    ?_vfprintf 0064                                 ?_FRT_IncMicros 0070  
                               ?_FRT_IncMillis 0070                                     ??_WritePin 0021  
                                      __ptext1 0DED                                        __ptext2 0CFA  
                                      __ptext3 0A42                                        __ptext4 0C93  
                                      __ptext5 0AC3                                        __ptext6 0A61  
                                      __ptext7 0C28                                        __ptext8 0ABA  
                                      __ptext9 0B5B                               ?_JSN_GetLastTrig 0070  
                                    _T1CONbits 001B                          _OSCILLATOR_Initialize 0AEA  
                                    _T2CONbits 001F                                      _T3CONbits 0413  
                           _sameSens@ccp2$F892 00D6                       ??_PIN_MANAGER_Initialize 0020  
                    ?_TMR1_SetInterruptHandler 0020                                        _ticksUp 00C8  
                          _lastTrig@ccp3$F1018 00D3                                _JSN_Sensor_Init 04D1  
                              _JSN_Sensor_Trig 0756                                        clrloop0 0A47  
                         end_of_initialization 00AE                               ?_TMR3_WriteTimer 0070  
        __end_of_EUSART_SetOverrunErrorHandler 0A9F                  _EUSART_SetOverrunErrorHandler 0A96  
                                      fputc@fp 0025                                        fputs@fp 002B  
                            _EUSART_Initialize 07AF                                ___lldiv@divisor 002C  
                              ___lldiv@counter 0039                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 035B                              ?_CCP3_SetCallBack 0020  
                        TMR0_ReadTimer@readVal 0021                   __end_of_CCP1_DefaultCallBack 0EA3  
                           ??_CCP3_SetCallBack 0022                                     ??_vfprintf 0067  
                               _TMR0_ReadTimer 0A5A                                        strlen@a 0023  
                                      strlen@s 0024                            ??_EUSART_Initialize 0022  
                             ??_WDT_Initialize 0020                 ??_EUSART_SetTxInterruptHandler 0022  
                     _TMR0_SetInterruptHandler 0AB1                                      _PORTAbits 000C  
                                    _PORTBbits 000D                                      _PORTCbits 000E  
                     _TMR3_SetInterruptHandler 0AC3                                      _TRISAbits 008C  
                                    _TRISBbits 008D                                      _TRISCbits 008E  
                    __end_of_EUSART_Initialize 07F5                                    _CCP4CONbits 0317  
                              ??_FRT_GetMicros 0026                                ??_FRT_GetMillis 0024  
                       __end_of_TMR0_ReadTimer 0A61                                ??_FRT_IncMicros 0070  
                               __end_of_SetPin 04D1                                ??_FRT_IncMillis 0070  
                               __end_of___lmul 0DB7             __end_of_EUSART_DefaultErrorHandler 0A3E  
                   _EUSART_DefaultErrorHandler 0A3A                                    vfpfcnvrt@ap 0055  
                                  vfpfcnvrt@fp 0063                                   _EUSART_Write 0D25  
                      __end_of_JSN_Sensor_Init 056F                         _JSN_Sensor_GetDistance 0F21  
                       ?_OSCILLATOR_Initialize 0070                        __end_of_JSN_Sensor_Trig 07AF  
                 __end_of_CCP2_DefaultCallBack 0EE2                                 __end_of_printf 0B5B  
                               __end_of_strlen 0C77                            start_initialization 0092  
                              ___lodiv@divisor 0020                                ___lodiv@counter 0039  
               CCP2_SetCallBack@customCallBack 0020                                      SetPin@pin 0023  
                                  __end_of_pad 1000                              ??_CCP1_CaptureISR 0077  
 EUSART_SetRxInterruptHandler@interruptHandler 0020   EUSART_SetTxInterruptHandler@interruptHandler 0020  
                                  putch@txData 0022                              _ticksUp@ccp2$F890 00C2  
               ?_EUSART_SetOverrunErrorHandler 0020                                       ??_SetPin 0021  
                                  vfprintf@fmt 0064                     _EUSART_FramingErrorHandler 00B0  
                             ??_PMD_Initialize 0020                                ?_TMR0_ReadTimer 0070  
                                     ??___lmul 0028                              ??_CCP2_CaptureISR 0077  
                       _EUSART_SetErrorHandler 0A84                         JSN_Sensor_Init@echoPin 00DD  
                                  _CCPTMRSbits 029F                                       ??_printf 00DA  
                                     ??_strlen 0022                          CCP1_CaptureISR@module 0078  
                  __end_of_EUSART_Transmit_ISR 0CD1                                    __pbssCOMMON 007A  
                                    ___latbits 0002                         JSN_Sensor_Init@trigPin 00DC  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00DA  
                            ??_CCP3_CaptureISR 0077                   __end_of_CCP3_DefaultCallBack 0F21  
                         _CCP1_DefaultCallBack 0E64                     __end_of_EUSART_Receive_ISR 0E64  
             _EUSART_RxDefaultInterruptHandler 00B2                          _TMR0_InterruptHandler 00CE  
                            ??_CCP1_Initialize 0022                                       ?_ReadPin 0070  
                                  WritePin@pin 0023                                    WritePin@val 0020  
                 __end_of_EUSART_RxDataHandler 0C5C                         _PIN_MANAGER_Initialize 0DB7  
             __end_of_TMR1_SetInterruptHandler 0AC3              CCP3_DefaultCallBack@capturedValue 0073  
                                     ?___lldiv 002C                                       ?___lodiv 0020  
                                     ?___lomod 0020                                   _eusartRxHead 007B  
                                 _eusartTxHead 007D                                   _eusartRxTail 007A  
                                 _eusartTxTail 007C                   ??_INTERRUPT_InterruptManager 007A  
                             ?_JSN_Sensor_Init 00DC                               ?_JSN_Sensor_Trig 0070  
                      _eusartTxBufferRemaining 00D2                                ___lomod@divisor 0020  
                                     _BAUD1CON 019F                              ??_CCP2_Initialize 0022  
                              ___lomod@counter 0031                                  _TMR0_CallBack 0A4C  
                        ?_CCP1_DefaultCallBack 0073                              ??_CCP4_CompareISR 0070  
                               _eusartRxBuffer 0128                              ??_TMR0_Initialize 0022  
                               _eusartTxBuffer 0130                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0020                                       _LATBbits 010D  
                                     _LATCbits 010E                           _ticksDown@ccp3$F1016 00BA  
                                    clear_ram0 0A46                              ??_CCP3_Initialize 0022  
                                     _PIE0bits 0090                                       _PIE1bits 0091  
                                     _PIE3bits 0093                                       _PIE4bits 0094  
                            _eusartRxLastError 00D0                           _CCP2_DefaultCallBack 0EA3  
                   ??_TMR0_SetInterruptHandler 0022                                       _PIR0bits 0010  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0022  
                                    _ticksDown 00C6                                       _PIR3bits 0013  
                                     _PIR4bits 0014                     ??_TMR3_SetInterruptHandler 0022  
                                     _TMR0_ISR 0BB2      __end_of_EUSART_DefaultOverrunErrorHandler 0A42  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 0A3E                                       _TMR1_ISR 07F5  
                                     _TMR3_ISR 0BC9                                      _vfpfcnvrt 0298  
                            ??_TMR1_Initialize 0022                              ??_CCP4_Initialize 0020  
                               ?_TMR0_CallBack 0070                              ___lmul@multiplier 0020  
                                     SetPin@io 0020                              ??_TMR2_Initialize 0020  
                        ?_CCP2_DefaultCallBack 0073                          JSN_Sensor_Init@Sensor 00E0  
                                   vfprintf@ap 0066                                     vfprintf@fp 0069  
                      ?_JSN_Sensor_GetDistance 003A                        ??_OSCILLATOR_Initialize 0020  
                          _EUSART_ErrorHandler 00AC                           _CCP3_DefaultCallBack 0EE2  
                  ?_EUSART_DefaultErrorHandler 0070                                     ?_vfpfcnvrt 0054  
                              _CCP1_CaptureISR 0B70                                       _WritePin 035B  
                            ??_TMR3_Initialize 0022                              ??_PWM5_Initialize 0020  
                     _TMR1_SetInterruptHandler 0ABA                          _TMR1_InterruptHandler 00B6  
                                   _T0CON0bits 0017                               _CCP1_SetCallBack 0A69  
                         _EUSART_RxDataHandler 0C41                 CCP1_SetCallBack@customCallBack 0020  
                                     __ptext10 0AB1                                       __ptext11 0AE0  
                                     __ptext20 0A84                                       __ptext12 0AF6  
                                     __ptext21 0B35                                       __ptext13 0DB7  
                                   _T1GCONbits 001C                                       __ptext30 0A5A  
                                     __ptext22 0C10                                       __ptext14 0AEA  
                                     __ptext31 04D1                                       __ptext23 0A7B  
                                     __ptext15 07AF                                       __ptext40 0A53  
                                     __ptext32 0B46                                       __ptext24 0BF8  
                                     __ptext16 0AA8                                       __ptext41 0D25  
                                     __ptext33 0D52                                       __ptext25 0A72  
                                     __ptext17 0A9F                                       __ptext42 068A  
                                     __ptext34 0298                                       __ptext26 0BE0  
                                     __ptext18 0A96                                       __ptext51 0BC9  
                                     __ptext43 0606                                       __ptext35 01A9  
                                     __ptext27 0A69                                       __ptext19 0A8D  
                                     __ptext60 0CAF                                       __ptext52 0B13  
                                     __ptext44 035B                                       __ptext36 0FA7  
                                     __ptext28 0756                                       __ptext61 0E27  
                                     __ptext53 0003                                       __ptext45 0416  
                                     __ptext37 0C5C                                       __ptext29 0C77  
                                     __ptext70 0EA3                                       __ptext62 0A3E  
                                     __ptext54 07F5                                       __ptext46 0F21  
                                     __ptext38 0CD1                                       __ptext71 0B70  
                                     __ptext63 0002                                       __ptext55 0B02  
                                     __ptext47 0D83                                       __ptext39 0F64  
                                     __ptext72 0E64                                       __ptext64 0A3A  
                                     __ptext56 0BB2                                       __ptext48 06FB  
                                     __ptext73 056F                                       __ptext65 0C41  
                                     __ptext57 0A4C                                       __ptext49 0B24  
                                     __ptext74 0A34                                       __ptext66 0A37  
                                     __ptext58 0AD6                                       __ptext67 0B9C  
                                     __ptext59 0ACC                                       __ptext68 0EE2  
                                     __ptext69 0B86                         ??_CCP1_DefaultCallBack 0075  
                                   _T3GCONbits 0414                        TMR3_WriteTimer@timerVal 0070  
                                     _lastTrig 00D9                                _CCP2_CaptureISR 0B86  
                             ??_TMR0_ReadTimer 0020                            _sameSens@ccp3$F1017 00D4  
                                     _sameSens 00D8                   _TMR0_DefaultInterruptHandler 0000  
                      ?_EUSART_SetErrorHandler 0020                            _ticksDown@ccp2$F891 00C0  
                                   _PIC16_Init 0DED                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0020                 __end_of_JSN_Sensor_GetDistance 0F64  
                        __end_of_FRT_GetMicros 0C93                          __end_of_FRT_GetMillis 0B35  
                                     int$flags 007E                          ?_CCP3_DefaultCallBack 0073  
                                     _vfprintf 0D52             __end_of_INTERRUPT_InterruptManager 0090  
                   _INTERRUPT_InterruptManager 0004                          __end_of_FRT_IncMicros 0AD6  
                        __end_of_FRT_IncMillis 0AE0                                      printf@fmt 006C  
        __end_of_EUSART_SetFramingErrorHandler 0A96                  _EUSART_SetFramingErrorHandler 0A8D  
                            ??_TMR1_WriteTimer 0072           __end_of_TMR3_DefaultInterruptHandler 0004  
                 _TMR3_DefaultInterruptHandler 0003                                _CCP3_CaptureISR 0B9C  
                                   _INTCONbits 000B                                ??_TMR0_CallBack 0070  
                             _CCP2_SetCallBack 0A72                          ?_EUSART_RxDataHandler 0070  
                              _CCP1_Initialize 0BE0                                       intlevel1 0000  
                             ___lldiv@dividend 0030                        ?_PIN_MANAGER_Initialize 0070  
                       ??_CCP2_DefaultCallBack 0075                 __end_of_EUSART_SetErrorHandler 0A8D  
                            ??_JSN_GetLastTrig 0070           __end_of_EUSART_SetRxInterruptHandler 0AA8  
                 _EUSART_SetRxInterruptHandler 0A9F                        __end_of_CCP1_CaptureISR 0B86  
                              _CCP2_Initialize 0BF8                                       printf@ap 00DB  
                           _EUSART_Receive_ISR 0E27  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                                  ??_vfpfcnvrt 0056                              ??_TMR3_WriteTimer 0072  
                                __pstringtext1 1000                                  __pstringtext2 103A  
                                __pstringtext3 106C                                  __pstringtext4 0000  
                        CCP2_CaptureISR@module 0078                                _CCP4_CompareISR 0A37  
                          ?_EUSART_Receive_ISR 0070                  ?_TMR3_DefaultInterruptHandler 0070  
                             ___lldiv@quotient 0035                                _TMR0_Initialize 0B5B  
                             _CCP3_SetCallBack 0A7B                        __end_of_CCP2_CaptureISR 0B9C  
                              _CCP3_Initialize 0C10                                     _TX1STAbits 019E  
                           EUSART_Write@txData 0021                 __end_of_PIN_MANAGER_Initialize 0DED  
                                  _PWMTMRSbits 061F                           ??_EUSART_Receive_ISR 0071  
                        JSN_Sensor_Trig@Sensor 002A                                _TMR1_Initialize 0C28  
                                  ?_PIC16_Init 0070                        __end_of_CCP3_CaptureISR 0BB2  
