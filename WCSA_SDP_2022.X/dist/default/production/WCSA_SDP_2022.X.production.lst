

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Jan 29 22:37:45 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	intentry,global,class=CODE,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	text64,local,class=CODE,merge=1,delta=2
    79                           	psect	text65,local,class=CODE,merge=1,delta=2
    80                           	psect	text66,local,class=CODE,merge=1,delta=2
    81                           	psect	text67,local,class=CODE,merge=1,delta=2
    82                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    83                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    84                           	dabs	1,0x7E,2
    85  0000                     
    86                           ; Version 2.40
    87                           ; Generated 19/01/2022 GMT
    88                           ; 
    89                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution. Publication is not required when
   103                           ;        this file is used in an embedded application.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC16F18345 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0097                     	;# 
   164  009B                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  0111                     	;# 
   174  0112                     	;# 
   175  0113                     	;# 
   176  0114                     	;# 
   177  0115                     	;# 
   178  0116                     	;# 
   179  0117                     	;# 
   180  0118                     	;# 
   181  0119                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184  018E                     	;# 
   185  0197                     	;# 
   186  0199                     	;# 
   187  0199                     	;# 
   188  0199                     	;# 
   189  019A                     	;# 
   190  019A                     	;# 
   191  019A                     	;# 
   192  019B                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019C                     	;# 
   198  019C                     	;# 
   199  019C                     	;# 
   200  019D                     	;# 
   201  019D                     	;# 
   202  019D                     	;# 
   203  019E                     	;# 
   204  019E                     	;# 
   205  019E                     	;# 
   206  019F                     	;# 
   207  019F                     	;# 
   208  019F                     	;# 
   209  019F                     	;# 
   210  019F                     	;# 
   211  020C                     	;# 
   212  020D                     	;# 
   213  020E                     	;# 
   214  0211                     	;# 
   215  0211                     	;# 
   216  0212                     	;# 
   217  0212                     	;# 
   218  0213                     	;# 
   219  0213                     	;# 
   220  0214                     	;# 
   221  0214                     	;# 
   222  0215                     	;# 
   223  0215                     	;# 
   224  0215                     	;# 
   225  0215                     	;# 
   226  0216                     	;# 
   227  0216                     	;# 
   228  0217                     	;# 
   229  0217                     	;# 
   230  0219                     	;# 
   231  021A                     	;# 
   232  021B                     	;# 
   233  021C                     	;# 
   234  021D                     	;# 
   235  021D                     	;# 
   236  021E                     	;# 
   237  021F                     	;# 
   238  028C                     	;# 
   239  028D                     	;# 
   240  028E                     	;# 
   241  0291                     	;# 
   242  0291                     	;# 
   243  0292                     	;# 
   244  0293                     	;# 
   245  0294                     	;# 
   246  0295                     	;# 
   247  0295                     	;# 
   248  0296                     	;# 
   249  0297                     	;# 
   250  0298                     	;# 
   251  029F                     	;# 
   252  030C                     	;# 
   253  030D                     	;# 
   254  030E                     	;# 
   255  0311                     	;# 
   256  0311                     	;# 
   257  0312                     	;# 
   258  0313                     	;# 
   259  0314                     	;# 
   260  0315                     	;# 
   261  0315                     	;# 
   262  0316                     	;# 
   263  0317                     	;# 
   264  0318                     	;# 
   265  038C                     	;# 
   266  038D                     	;# 
   267  038E                     	;# 
   268  0391                     	;# 
   269  0392                     	;# 
   270  0393                     	;# 
   271  0394                     	;# 
   272  0395                     	;# 
   273  0396                     	;# 
   274  0397                     	;# 
   275  0398                     	;# 
   276  0399                     	;# 
   277  039A                     	;# 
   278  039C                     	;# 
   279  039D                     	;# 
   280  039E                     	;# 
   281  039F                     	;# 
   282  0411                     	;# 
   283  0411                     	;# 
   284  0412                     	;# 
   285  0413                     	;# 
   286  0414                     	;# 
   287  0415                     	;# 
   288  0416                     	;# 
   289  0417                     	;# 
   290  0418                     	;# 
   291  0418                     	;# 
   292  0419                     	;# 
   293  041A                     	;# 
   294  041B                     	;# 
   295  041C                     	;# 
   296  041D                     	;# 
   297  041E                     	;# 
   298  041F                     	;# 
   299  0498                     	;# 
   300  0498                     	;# 
   301  0499                     	;# 
   302  049A                     	;# 
   303  049B                     	;# 
   304  049B                     	;# 
   305  049C                     	;# 
   306  049D                     	;# 
   307  049E                     	;# 
   308  049F                     	;# 
   309  0617                     	;# 
   310  0618                     	;# 
   311  0619                     	;# 
   312  0619                     	;# 
   313  061A                     	;# 
   314  061B                     	;# 
   315  061C                     	;# 
   316  061C                     	;# 
   317  061F                     	;# 
   318  0691                     	;# 
   319  0692                     	;# 
   320  0693                     	;# 
   321  0694                     	;# 
   322  0695                     	;# 
   323  0696                     	;# 
   324  0697                     	;# 
   325  0698                     	;# 
   326  0699                     	;# 
   327  0711                     	;# 
   328  0712                     	;# 
   329  0713                     	;# 
   330  0714                     	;# 
   331  0715                     	;# 
   332  0716                     	;# 
   333  0717                     	;# 
   334  0718                     	;# 
   335  0719                     	;# 
   336  0891                     	;# 
   337  0891                     	;# 
   338  0891                     	;# 
   339  0891                     	;# 
   340  0891                     	;# 
   341  0891                     	;# 
   342  0892                     	;# 
   343  0892                     	;# 
   344  0892                     	;# 
   345  0893                     	;# 
   346  0893                     	;# 
   347  0893                     	;# 
   348  0893                     	;# 
   349  0893                     	;# 
   350  0893                     	;# 
   351  0894                     	;# 
   352  0894                     	;# 
   353  0894                     	;# 
   354  0895                     	;# 
   355  0895                     	;# 
   356  0895                     	;# 
   357  0896                     	;# 
   358  0896                     	;# 
   359  0896                     	;# 
   360  089B                     	;# 
   361  0911                     	;# 
   362  0912                     	;# 
   363  0913                     	;# 
   364  0914                     	;# 
   365  0915                     	;# 
   366  0916                     	;# 
   367  0918                     	;# 
   368  0919                     	;# 
   369  091A                     	;# 
   370  091B                     	;# 
   371  091C                     	;# 
   372  091D                     	;# 
   373  091E                     	;# 
   374  091F                     	;# 
   375  0E0F                     	;# 
   376  0E10                     	;# 
   377  0E11                     	;# 
   378  0E12                     	;# 
   379  0E13                     	;# 
   380  0E14                     	;# 
   381  0E15                     	;# 
   382  0E16                     	;# 
   383  0E17                     	;# 
   384  0E18                     	;# 
   385  0E19                     	;# 
   386  0E1A                     	;# 
   387  0E1B                     	;# 
   388  0E1C                     	;# 
   389  0E1D                     	;# 
   390  0E1E                     	;# 
   391  0E1F                     	;# 
   392  0E20                     	;# 
   393  0E21                     	;# 
   394  0E22                     	;# 
   395  0E24                     	;# 
   396  0E25                     	;# 
   397  0E28                     	;# 
   398  0E29                     	;# 
   399  0E2A                     	;# 
   400  0E2B                     	;# 
   401  0E2C                     	;# 
   402  0E2D                     	;# 
   403  0E2E                     	;# 
   404  0E2F                     	;# 
   405  0E90                     	;# 
   406  0E91                     	;# 
   407  0E92                     	;# 
   408  0E94                     	;# 
   409  0E95                     	;# 
   410  0E9C                     	;# 
   411  0E9D                     	;# 
   412  0E9E                     	;# 
   413  0E9F                     	;# 
   414  0EA0                     	;# 
   415  0EA1                     	;# 
   416  0EA2                     	;# 
   417  0EA3                     	;# 
   418  0EA4                     	;# 
   419  0EA5                     	;# 
   420  0EA6                     	;# 
   421  0EA7                     	;# 
   422  0F0F                     	;# 
   423  0F10                     	;# 
   424  0F11                     	;# 
   425  0F12                     	;# 
   426  0F13                     	;# 
   427  0F14                     	;# 
   428  0F15                     	;# 
   429  0F16                     	;# 
   430  0F17                     	;# 
   431  0F18                     	;# 
   432  0F19                     	;# 
   433  0F1A                     	;# 
   434  0F1B                     	;# 
   435  0F1C                     	;# 
   436  0F1D                     	;# 
   437  0F1E                     	;# 
   438  0F1F                     	;# 
   439  0F20                     	;# 
   440  0F21                     	;# 
   441  0F22                     	;# 
   442  0F23                     	;# 
   443  0F24                     	;# 
   444  0F25                     	;# 
   445  0F26                     	;# 
   446  0F27                     	;# 
   447  0F28                     	;# 
   448  0F29                     	;# 
   449  0F2A                     	;# 
   450  0F2B                     	;# 
   451  0F2C                     	;# 
   452  0F2D                     	;# 
   453  0F2E                     	;# 
   454  0F2F                     	;# 
   455  0F30                     	;# 
   456  0F31                     	;# 
   457  0F32                     	;# 
   458  0F33                     	;# 
   459  0F34                     	;# 
   460  0F35                     	;# 
   461  0F36                     	;# 
   462  0F37                     	;# 
   463  0FE4                     	;# 
   464  0FE5                     	;# 
   465  0FE6                     	;# 
   466  0FE7                     	;# 
   467  0FE8                     	;# 
   468  0FE9                     	;# 
   469  0FEA                     	;# 
   470  0FEB                     	;# 
   471  0FED                     	;# 
   472  0FEE                     	;# 
   473  0FEF                     	;# 
   474  0000                     	;# 
   475  0001                     	;# 
   476  0002                     	;# 
   477  0003                     	;# 
   478  0004                     	;# 
   479  0005                     	;# 
   480  0006                     	;# 
   481  0007                     	;# 
   482  0008                     	;# 
   483  0009                     	;# 
   484  000A                     	;# 
   485  000B                     	;# 
   486  000C                     	;# 
   487  000D                     	;# 
   488  000E                     	;# 
   489  0010                     	;# 
   490  0011                     	;# 
   491  0012                     	;# 
   492  0013                     	;# 
   493  0014                     	;# 
   494  0015                     	;# 
   495  0015                     	;# 
   496  0016                     	;# 
   497  0016                     	;# 
   498  0017                     	;# 
   499  0018                     	;# 
   500  0019                     	;# 
   501  0019                     	;# 
   502  001A                     	;# 
   503  001B                     	;# 
   504  001C                     	;# 
   505  001D                     	;# 
   506  001E                     	;# 
   507  001F                     	;# 
   508  008C                     	;# 
   509  008D                     	;# 
   510  008E                     	;# 
   511  0090                     	;# 
   512  0091                     	;# 
   513  0092                     	;# 
   514  0093                     	;# 
   515  0094                     	;# 
   516  0097                     	;# 
   517  009B                     	;# 
   518  009B                     	;# 
   519  009C                     	;# 
   520  009D                     	;# 
   521  009E                     	;# 
   522  009F                     	;# 
   523  010C                     	;# 
   524  010D                     	;# 
   525  010E                     	;# 
   526  0111                     	;# 
   527  0112                     	;# 
   528  0113                     	;# 
   529  0114                     	;# 
   530  0115                     	;# 
   531  0116                     	;# 
   532  0117                     	;# 
   533  0118                     	;# 
   534  0119                     	;# 
   535  018C                     	;# 
   536  018D                     	;# 
   537  018E                     	;# 
   538  0197                     	;# 
   539  0199                     	;# 
   540  0199                     	;# 
   541  0199                     	;# 
   542  019A                     	;# 
   543  019A                     	;# 
   544  019A                     	;# 
   545  019B                     	;# 
   546  019B                     	;# 
   547  019B                     	;# 
   548  019B                     	;# 
   549  019B                     	;# 
   550  019C                     	;# 
   551  019C                     	;# 
   552  019C                     	;# 
   553  019D                     	;# 
   554  019D                     	;# 
   555  019D                     	;# 
   556  019E                     	;# 
   557  019E                     	;# 
   558  019E                     	;# 
   559  019F                     	;# 
   560  019F                     	;# 
   561  019F                     	;# 
   562  019F                     	;# 
   563  019F                     	;# 
   564  020C                     	;# 
   565  020D                     	;# 
   566  020E                     	;# 
   567  0211                     	;# 
   568  0211                     	;# 
   569  0212                     	;# 
   570  0212                     	;# 
   571  0213                     	;# 
   572  0213                     	;# 
   573  0214                     	;# 
   574  0214                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0215                     	;# 
   579  0216                     	;# 
   580  0216                     	;# 
   581  0217                     	;# 
   582  0217                     	;# 
   583  0219                     	;# 
   584  021A                     	;# 
   585  021B                     	;# 
   586  021C                     	;# 
   587  021D                     	;# 
   588  021D                     	;# 
   589  021E                     	;# 
   590  021F                     	;# 
   591  028C                     	;# 
   592  028D                     	;# 
   593  028E                     	;# 
   594  0291                     	;# 
   595  0291                     	;# 
   596  0292                     	;# 
   597  0293                     	;# 
   598  0294                     	;# 
   599  0295                     	;# 
   600  0295                     	;# 
   601  0296                     	;# 
   602  0297                     	;# 
   603  0298                     	;# 
   604  029F                     	;# 
   605  030C                     	;# 
   606  030D                     	;# 
   607  030E                     	;# 
   608  0311                     	;# 
   609  0311                     	;# 
   610  0312                     	;# 
   611  0313                     	;# 
   612  0314                     	;# 
   613  0315                     	;# 
   614  0315                     	;# 
   615  0316                     	;# 
   616  0317                     	;# 
   617  0318                     	;# 
   618  038C                     	;# 
   619  038D                     	;# 
   620  038E                     	;# 
   621  0391                     	;# 
   622  0392                     	;# 
   623  0393                     	;# 
   624  0394                     	;# 
   625  0395                     	;# 
   626  0396                     	;# 
   627  0397                     	;# 
   628  0398                     	;# 
   629  0399                     	;# 
   630  039A                     	;# 
   631  039C                     	;# 
   632  039D                     	;# 
   633  039E                     	;# 
   634  039F                     	;# 
   635  0411                     	;# 
   636  0411                     	;# 
   637  0412                     	;# 
   638  0413                     	;# 
   639  0414                     	;# 
   640  0415                     	;# 
   641  0416                     	;# 
   642  0417                     	;# 
   643  0418                     	;# 
   644  0418                     	;# 
   645  0419                     	;# 
   646  041A                     	;# 
   647  041B                     	;# 
   648  041C                     	;# 
   649  041D                     	;# 
   650  041E                     	;# 
   651  041F                     	;# 
   652  0498                     	;# 
   653  0498                     	;# 
   654  0499                     	;# 
   655  049A                     	;# 
   656  049B                     	;# 
   657  049B                     	;# 
   658  049C                     	;# 
   659  049D                     	;# 
   660  049E                     	;# 
   661  049F                     	;# 
   662  0617                     	;# 
   663  0618                     	;# 
   664  0619                     	;# 
   665  0619                     	;# 
   666  061A                     	;# 
   667  061B                     	;# 
   668  061C                     	;# 
   669  061C                     	;# 
   670  061F                     	;# 
   671  0691                     	;# 
   672  0692                     	;# 
   673  0693                     	;# 
   674  0694                     	;# 
   675  0695                     	;# 
   676  0696                     	;# 
   677  0697                     	;# 
   678  0698                     	;# 
   679  0699                     	;# 
   680  0711                     	;# 
   681  0712                     	;# 
   682  0713                     	;# 
   683  0714                     	;# 
   684  0715                     	;# 
   685  0716                     	;# 
   686  0717                     	;# 
   687  0718                     	;# 
   688  0719                     	;# 
   689  0891                     	;# 
   690  0891                     	;# 
   691  0891                     	;# 
   692  0891                     	;# 
   693  0891                     	;# 
   694  0891                     	;# 
   695  0892                     	;# 
   696  0892                     	;# 
   697  0892                     	;# 
   698  0893                     	;# 
   699  0893                     	;# 
   700  0893                     	;# 
   701  0893                     	;# 
   702  0893                     	;# 
   703  0893                     	;# 
   704  0894                     	;# 
   705  0894                     	;# 
   706  0894                     	;# 
   707  0895                     	;# 
   708  0895                     	;# 
   709  0895                     	;# 
   710  0896                     	;# 
   711  0896                     	;# 
   712  0896                     	;# 
   713  089B                     	;# 
   714  0911                     	;# 
   715  0912                     	;# 
   716  0913                     	;# 
   717  0914                     	;# 
   718  0915                     	;# 
   719  0916                     	;# 
   720  0918                     	;# 
   721  0919                     	;# 
   722  091A                     	;# 
   723  091B                     	;# 
   724  091C                     	;# 
   725  091D                     	;# 
   726  091E                     	;# 
   727  091F                     	;# 
   728  0E0F                     	;# 
   729  0E10                     	;# 
   730  0E11                     	;# 
   731  0E12                     	;# 
   732  0E13                     	;# 
   733  0E14                     	;# 
   734  0E15                     	;# 
   735  0E16                     	;# 
   736  0E17                     	;# 
   737  0E18                     	;# 
   738  0E19                     	;# 
   739  0E1A                     	;# 
   740  0E1B                     	;# 
   741  0E1C                     	;# 
   742  0E1D                     	;# 
   743  0E1E                     	;# 
   744  0E1F                     	;# 
   745  0E20                     	;# 
   746  0E21                     	;# 
   747  0E22                     	;# 
   748  0E24                     	;# 
   749  0E25                     	;# 
   750  0E28                     	;# 
   751  0E29                     	;# 
   752  0E2A                     	;# 
   753  0E2B                     	;# 
   754  0E2C                     	;# 
   755  0E2D                     	;# 
   756  0E2E                     	;# 
   757  0E2F                     	;# 
   758  0E90                     	;# 
   759  0E91                     	;# 
   760  0E92                     	;# 
   761  0E94                     	;# 
   762  0E95                     	;# 
   763  0E9C                     	;# 
   764  0E9D                     	;# 
   765  0E9E                     	;# 
   766  0E9F                     	;# 
   767  0EA0                     	;# 
   768  0EA1                     	;# 
   769  0EA2                     	;# 
   770  0EA3                     	;# 
   771  0EA4                     	;# 
   772  0EA5                     	;# 
   773  0EA6                     	;# 
   774  0EA7                     	;# 
   775  0F0F                     	;# 
   776  0F10                     	;# 
   777  0F11                     	;# 
   778  0F12                     	;# 
   779  0F13                     	;# 
   780  0F14                     	;# 
   781  0F15                     	;# 
   782  0F16                     	;# 
   783  0F17                     	;# 
   784  0F18                     	;# 
   785  0F19                     	;# 
   786  0F1A                     	;# 
   787  0F1B                     	;# 
   788  0F1C                     	;# 
   789  0F1D                     	;# 
   790  0F1E                     	;# 
   791  0F1F                     	;# 
   792  0F20                     	;# 
   793  0F21                     	;# 
   794  0F22                     	;# 
   795  0F23                     	;# 
   796  0F24                     	;# 
   797  0F25                     	;# 
   798  0F26                     	;# 
   799  0F27                     	;# 
   800  0F28                     	;# 
   801  0F29                     	;# 
   802  0F2A                     	;# 
   803  0F2B                     	;# 
   804  0F2C                     	;# 
   805  0F2D                     	;# 
   806  0F2E                     	;# 
   807  0F2F                     	;# 
   808  0F30                     	;# 
   809  0F31                     	;# 
   810  0F32                     	;# 
   811  0F33                     	;# 
   812  0F34                     	;# 
   813  0F35                     	;# 
   814  0F36                     	;# 
   815  0F37                     	;# 
   816  0FE4                     	;# 
   817  0FE5                     	;# 
   818  0FE6                     	;# 
   819  0FE7                     	;# 
   820  0FE8                     	;# 
   821  0FE9                     	;# 
   822  0FEA                     	;# 
   823  0FEB                     	;# 
   824  0FED                     	;# 
   825  0FEE                     	;# 
   826  0FEF                     	;# 
   827  0000                     	;# 
   828  0001                     	;# 
   829  0002                     	;# 
   830  0003                     	;# 
   831  0004                     	;# 
   832  0005                     	;# 
   833  0006                     	;# 
   834  0007                     	;# 
   835  0008                     	;# 
   836  0009                     	;# 
   837  000A                     	;# 
   838  000B                     	;# 
   839  000C                     	;# 
   840  000D                     	;# 
   841  000E                     	;# 
   842  0010                     	;# 
   843  0011                     	;# 
   844  0012                     	;# 
   845  0013                     	;# 
   846  0014                     	;# 
   847  0015                     	;# 
   848  0015                     	;# 
   849  0016                     	;# 
   850  0016                     	;# 
   851  0017                     	;# 
   852  0018                     	;# 
   853  0019                     	;# 
   854  0019                     	;# 
   855  001A                     	;# 
   856  001B                     	;# 
   857  001C                     	;# 
   858  001D                     	;# 
   859  001E                     	;# 
   860  001F                     	;# 
   861  008C                     	;# 
   862  008D                     	;# 
   863  008E                     	;# 
   864  0090                     	;# 
   865  0091                     	;# 
   866  0092                     	;# 
   867  0093                     	;# 
   868  0094                     	;# 
   869  0097                     	;# 
   870  009B                     	;# 
   871  009B                     	;# 
   872  009C                     	;# 
   873  009D                     	;# 
   874  009E                     	;# 
   875  009F                     	;# 
   876  010C                     	;# 
   877  010D                     	;# 
   878  010E                     	;# 
   879  0111                     	;# 
   880  0112                     	;# 
   881  0113                     	;# 
   882  0114                     	;# 
   883  0115                     	;# 
   884  0116                     	;# 
   885  0117                     	;# 
   886  0118                     	;# 
   887  0119                     	;# 
   888  018C                     	;# 
   889  018D                     	;# 
   890  018E                     	;# 
   891  0197                     	;# 
   892  0199                     	;# 
   893  0199                     	;# 
   894  0199                     	;# 
   895  019A                     	;# 
   896  019A                     	;# 
   897  019A                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019B                     	;# 
   902  019B                     	;# 
   903  019C                     	;# 
   904  019C                     	;# 
   905  019C                     	;# 
   906  019D                     	;# 
   907  019D                     	;# 
   908  019D                     	;# 
   909  019E                     	;# 
   910  019E                     	;# 
   911  019E                     	;# 
   912  019F                     	;# 
   913  019F                     	;# 
   914  019F                     	;# 
   915  019F                     	;# 
   916  019F                     	;# 
   917  020C                     	;# 
   918  020D                     	;# 
   919  020E                     	;# 
   920  0211                     	;# 
   921  0211                     	;# 
   922  0212                     	;# 
   923  0212                     	;# 
   924  0213                     	;# 
   925  0213                     	;# 
   926  0214                     	;# 
   927  0214                     	;# 
   928  0215                     	;# 
   929  0215                     	;# 
   930  0215                     	;# 
   931  0215                     	;# 
   932  0216                     	;# 
   933  0216                     	;# 
   934  0217                     	;# 
   935  0217                     	;# 
   936  0219                     	;# 
   937  021A                     	;# 
   938  021B                     	;# 
   939  021C                     	;# 
   940  021D                     	;# 
   941  021D                     	;# 
   942  021E                     	;# 
   943  021F                     	;# 
   944  028C                     	;# 
   945  028D                     	;# 
   946  028E                     	;# 
   947  0291                     	;# 
   948  0291                     	;# 
   949  0292                     	;# 
   950  0293                     	;# 
   951  0294                     	;# 
   952  0295                     	;# 
   953  0295                     	;# 
   954  0296                     	;# 
   955  0297                     	;# 
   956  0298                     	;# 
   957  029F                     	;# 
   958  030C                     	;# 
   959  030D                     	;# 
   960  030E                     	;# 
   961  0311                     	;# 
   962  0311                     	;# 
   963  0312                     	;# 
   964  0313                     	;# 
   965  0314                     	;# 
   966  0315                     	;# 
   967  0315                     	;# 
   968  0316                     	;# 
   969  0317                     	;# 
   970  0318                     	;# 
   971  038C                     	;# 
   972  038D                     	;# 
   973  038E                     	;# 
   974  0391                     	;# 
   975  0392                     	;# 
   976  0393                     	;# 
   977  0394                     	;# 
   978  0395                     	;# 
   979  0396                     	;# 
   980  0397                     	;# 
   981  0398                     	;# 
   982  0399                     	;# 
   983  039A                     	;# 
   984  039C                     	;# 
   985  039D                     	;# 
   986  039E                     	;# 
   987  039F                     	;# 
   988  0411                     	;# 
   989  0411                     	;# 
   990  0412                     	;# 
   991  0413                     	;# 
   992  0414                     	;# 
   993  0415                     	;# 
   994  0416                     	;# 
   995  0417                     	;# 
   996  0418                     	;# 
   997  0418                     	;# 
   998  0419                     	;# 
   999  041A                     	;# 
  1000  041B                     	;# 
  1001  041C                     	;# 
  1002  041D                     	;# 
  1003  041E                     	;# 
  1004  041F                     	;# 
  1005  0498                     	;# 
  1006  0498                     	;# 
  1007  0499                     	;# 
  1008  049A                     	;# 
  1009  049B                     	;# 
  1010  049B                     	;# 
  1011  049C                     	;# 
  1012  049D                     	;# 
  1013  049E                     	;# 
  1014  049F                     	;# 
  1015  0617                     	;# 
  1016  0618                     	;# 
  1017  0619                     	;# 
  1018  0619                     	;# 
  1019  061A                     	;# 
  1020  061B                     	;# 
  1021  061C                     	;# 
  1022  061C                     	;# 
  1023  061F                     	;# 
  1024  0691                     	;# 
  1025  0692                     	;# 
  1026  0693                     	;# 
  1027  0694                     	;# 
  1028  0695                     	;# 
  1029  0696                     	;# 
  1030  0697                     	;# 
  1031  0698                     	;# 
  1032  0699                     	;# 
  1033  0711                     	;# 
  1034  0712                     	;# 
  1035  0713                     	;# 
  1036  0714                     	;# 
  1037  0715                     	;# 
  1038  0716                     	;# 
  1039  0717                     	;# 
  1040  0718                     	;# 
  1041  0719                     	;# 
  1042  0891                     	;# 
  1043  0891                     	;# 
  1044  0891                     	;# 
  1045  0891                     	;# 
  1046  0891                     	;# 
  1047  0891                     	;# 
  1048  0892                     	;# 
  1049  0892                     	;# 
  1050  0892                     	;# 
  1051  0893                     	;# 
  1052  0893                     	;# 
  1053  0893                     	;# 
  1054  0893                     	;# 
  1055  0893                     	;# 
  1056  0893                     	;# 
  1057  0894                     	;# 
  1058  0894                     	;# 
  1059  0894                     	;# 
  1060  0895                     	;# 
  1061  0895                     	;# 
  1062  0895                     	;# 
  1063  0896                     	;# 
  1064  0896                     	;# 
  1065  0896                     	;# 
  1066  089B                     	;# 
  1067  0911                     	;# 
  1068  0912                     	;# 
  1069  0913                     	;# 
  1070  0914                     	;# 
  1071  0915                     	;# 
  1072  0916                     	;# 
  1073  0918                     	;# 
  1074  0919                     	;# 
  1075  091A                     	;# 
  1076  091B                     	;# 
  1077  091C                     	;# 
  1078  091D                     	;# 
  1079  091E                     	;# 
  1080  091F                     	;# 
  1081  0E0F                     	;# 
  1082  0E10                     	;# 
  1083  0E11                     	;# 
  1084  0E12                     	;# 
  1085  0E13                     	;# 
  1086  0E14                     	;# 
  1087  0E15                     	;# 
  1088  0E16                     	;# 
  1089  0E17                     	;# 
  1090  0E18                     	;# 
  1091  0E19                     	;# 
  1092  0E1A                     	;# 
  1093  0E1B                     	;# 
  1094  0E1C                     	;# 
  1095  0E1D                     	;# 
  1096  0E1E                     	;# 
  1097  0E1F                     	;# 
  1098  0E20                     	;# 
  1099  0E21                     	;# 
  1100  0E22                     	;# 
  1101  0E24                     	;# 
  1102  0E25                     	;# 
  1103  0E28                     	;# 
  1104  0E29                     	;# 
  1105  0E2A                     	;# 
  1106  0E2B                     	;# 
  1107  0E2C                     	;# 
  1108  0E2D                     	;# 
  1109  0E2E                     	;# 
  1110  0E2F                     	;# 
  1111  0E90                     	;# 
  1112  0E91                     	;# 
  1113  0E92                     	;# 
  1114  0E94                     	;# 
  1115  0E95                     	;# 
  1116  0E9C                     	;# 
  1117  0E9D                     	;# 
  1118  0E9E                     	;# 
  1119  0E9F                     	;# 
  1120  0EA0                     	;# 
  1121  0EA1                     	;# 
  1122  0EA2                     	;# 
  1123  0EA3                     	;# 
  1124  0EA4                     	;# 
  1125  0EA5                     	;# 
  1126  0EA6                     	;# 
  1127  0EA7                     	;# 
  1128  0F0F                     	;# 
  1129  0F10                     	;# 
  1130  0F11                     	;# 
  1131  0F12                     	;# 
  1132  0F13                     	;# 
  1133  0F14                     	;# 
  1134  0F15                     	;# 
  1135  0F16                     	;# 
  1136  0F17                     	;# 
  1137  0F18                     	;# 
  1138  0F19                     	;# 
  1139  0F1A                     	;# 
  1140  0F1B                     	;# 
  1141  0F1C                     	;# 
  1142  0F1D                     	;# 
  1143  0F1E                     	;# 
  1144  0F1F                     	;# 
  1145  0F20                     	;# 
  1146  0F21                     	;# 
  1147  0F22                     	;# 
  1148  0F23                     	;# 
  1149  0F24                     	;# 
  1150  0F25                     	;# 
  1151  0F26                     	;# 
  1152  0F27                     	;# 
  1153  0F28                     	;# 
  1154  0F29                     	;# 
  1155  0F2A                     	;# 
  1156  0F2B                     	;# 
  1157  0F2C                     	;# 
  1158  0F2D                     	;# 
  1159  0F2E                     	;# 
  1160  0F2F                     	;# 
  1161  0F30                     	;# 
  1162  0F31                     	;# 
  1163  0F32                     	;# 
  1164  0F33                     	;# 
  1165  0F34                     	;# 
  1166  0F35                     	;# 
  1167  0F36                     	;# 
  1168  0F37                     	;# 
  1169  0FE4                     	;# 
  1170  0FE5                     	;# 
  1171  0FE6                     	;# 
  1172  0FE7                     	;# 
  1173  0FE8                     	;# 
  1174  0FE9                     	;# 
  1175  0FEA                     	;# 
  1176  0FEB                     	;# 
  1177  0FED                     	;# 
  1178  0FEE                     	;# 
  1179  0FEF                     	;# 
  1180  0000                     	;# 
  1181  0001                     	;# 
  1182  0002                     	;# 
  1183  0003                     	;# 
  1184  0004                     	;# 
  1185  0005                     	;# 
  1186  0006                     	;# 
  1187  0007                     	;# 
  1188  0008                     	;# 
  1189  0009                     	;# 
  1190  000A                     	;# 
  1191  000B                     	;# 
  1192  000C                     	;# 
  1193  000D                     	;# 
  1194  000E                     	;# 
  1195  0010                     	;# 
  1196  0011                     	;# 
  1197  0012                     	;# 
  1198  0013                     	;# 
  1199  0014                     	;# 
  1200  0015                     	;# 
  1201  0015                     	;# 
  1202  0016                     	;# 
  1203  0016                     	;# 
  1204  0017                     	;# 
  1205  0018                     	;# 
  1206  0019                     	;# 
  1207  0019                     	;# 
  1208  001A                     	;# 
  1209  001B                     	;# 
  1210  001C                     	;# 
  1211  001D                     	;# 
  1212  001E                     	;# 
  1213  001F                     	;# 
  1214  008C                     	;# 
  1215  008D                     	;# 
  1216  008E                     	;# 
  1217  0090                     	;# 
  1218  0091                     	;# 
  1219  0092                     	;# 
  1220  0093                     	;# 
  1221  0094                     	;# 
  1222  0097                     	;# 
  1223  009B                     	;# 
  1224  009B                     	;# 
  1225  009C                     	;# 
  1226  009D                     	;# 
  1227  009E                     	;# 
  1228  009F                     	;# 
  1229  010C                     	;# 
  1230  010D                     	;# 
  1231  010E                     	;# 
  1232  0111                     	;# 
  1233  0112                     	;# 
  1234  0113                     	;# 
  1235  0114                     	;# 
  1236  0115                     	;# 
  1237  0116                     	;# 
  1238  0117                     	;# 
  1239  0118                     	;# 
  1240  0119                     	;# 
  1241  018C                     	;# 
  1242  018D                     	;# 
  1243  018E                     	;# 
  1244  0197                     	;# 
  1245  0199                     	;# 
  1246  0199                     	;# 
  1247  0199                     	;# 
  1248  019A                     	;# 
  1249  019A                     	;# 
  1250  019A                     	;# 
  1251  019B                     	;# 
  1252  019B                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019B                     	;# 
  1256  019C                     	;# 
  1257  019C                     	;# 
  1258  019C                     	;# 
  1259  019D                     	;# 
  1260  019D                     	;# 
  1261  019D                     	;# 
  1262  019E                     	;# 
  1263  019E                     	;# 
  1264  019E                     	;# 
  1265  019F                     	;# 
  1266  019F                     	;# 
  1267  019F                     	;# 
  1268  019F                     	;# 
  1269  019F                     	;# 
  1270  020C                     	;# 
  1271  020D                     	;# 
  1272  020E                     	;# 
  1273  0211                     	;# 
  1274  0211                     	;# 
  1275  0212                     	;# 
  1276  0212                     	;# 
  1277  0213                     	;# 
  1278  0213                     	;# 
  1279  0214                     	;# 
  1280  0214                     	;# 
  1281  0215                     	;# 
  1282  0215                     	;# 
  1283  0215                     	;# 
  1284  0215                     	;# 
  1285  0216                     	;# 
  1286  0216                     	;# 
  1287  0217                     	;# 
  1288  0217                     	;# 
  1289  0219                     	;# 
  1290  021A                     	;# 
  1291  021B                     	;# 
  1292  021C                     	;# 
  1293  021D                     	;# 
  1294  021D                     	;# 
  1295  021E                     	;# 
  1296  021F                     	;# 
  1297  028C                     	;# 
  1298  028D                     	;# 
  1299  028E                     	;# 
  1300  0291                     	;# 
  1301  0291                     	;# 
  1302  0292                     	;# 
  1303  0293                     	;# 
  1304  0294                     	;# 
  1305  0295                     	;# 
  1306  0295                     	;# 
  1307  0296                     	;# 
  1308  0297                     	;# 
  1309  0298                     	;# 
  1310  029F                     	;# 
  1311  030C                     	;# 
  1312  030D                     	;# 
  1313  030E                     	;# 
  1314  0311                     	;# 
  1315  0311                     	;# 
  1316  0312                     	;# 
  1317  0313                     	;# 
  1318  0314                     	;# 
  1319  0315                     	;# 
  1320  0315                     	;# 
  1321  0316                     	;# 
  1322  0317                     	;# 
  1323  0318                     	;# 
  1324  038C                     	;# 
  1325  038D                     	;# 
  1326  038E                     	;# 
  1327  0391                     	;# 
  1328  0392                     	;# 
  1329  0393                     	;# 
  1330  0394                     	;# 
  1331  0395                     	;# 
  1332  0396                     	;# 
  1333  0397                     	;# 
  1334  0398                     	;# 
  1335  0399                     	;# 
  1336  039A                     	;# 
  1337  039C                     	;# 
  1338  039D                     	;# 
  1339  039E                     	;# 
  1340  039F                     	;# 
  1341  0411                     	;# 
  1342  0411                     	;# 
  1343  0412                     	;# 
  1344  0413                     	;# 
  1345  0414                     	;# 
  1346  0415                     	;# 
  1347  0416                     	;# 
  1348  0417                     	;# 
  1349  0418                     	;# 
  1350  0418                     	;# 
  1351  0419                     	;# 
  1352  041A                     	;# 
  1353  041B                     	;# 
  1354  041C                     	;# 
  1355  041D                     	;# 
  1356  041E                     	;# 
  1357  041F                     	;# 
  1358  0498                     	;# 
  1359  0498                     	;# 
  1360  0499                     	;# 
  1361  049A                     	;# 
  1362  049B                     	;# 
  1363  049B                     	;# 
  1364  049C                     	;# 
  1365  049D                     	;# 
  1366  049E                     	;# 
  1367  049F                     	;# 
  1368  0617                     	;# 
  1369  0618                     	;# 
  1370  0619                     	;# 
  1371  0619                     	;# 
  1372  061A                     	;# 
  1373  061B                     	;# 
  1374  061C                     	;# 
  1375  061C                     	;# 
  1376  061F                     	;# 
  1377  0691                     	;# 
  1378  0692                     	;# 
  1379  0693                     	;# 
  1380  0694                     	;# 
  1381  0695                     	;# 
  1382  0696                     	;# 
  1383  0697                     	;# 
  1384  0698                     	;# 
  1385  0699                     	;# 
  1386  0711                     	;# 
  1387  0712                     	;# 
  1388  0713                     	;# 
  1389  0714                     	;# 
  1390  0715                     	;# 
  1391  0716                     	;# 
  1392  0717                     	;# 
  1393  0718                     	;# 
  1394  0719                     	;# 
  1395  0891                     	;# 
  1396  0891                     	;# 
  1397  0891                     	;# 
  1398  0891                     	;# 
  1399  0891                     	;# 
  1400  0891                     	;# 
  1401  0892                     	;# 
  1402  0892                     	;# 
  1403  0892                     	;# 
  1404  0893                     	;# 
  1405  0893                     	;# 
  1406  0893                     	;# 
  1407  0893                     	;# 
  1408  0893                     	;# 
  1409  0893                     	;# 
  1410  0894                     	;# 
  1411  0894                     	;# 
  1412  0894                     	;# 
  1413  0895                     	;# 
  1414  0895                     	;# 
  1415  0895                     	;# 
  1416  0896                     	;# 
  1417  0896                     	;# 
  1418  0896                     	;# 
  1419  089B                     	;# 
  1420  0911                     	;# 
  1421  0912                     	;# 
  1422  0913                     	;# 
  1423  0914                     	;# 
  1424  0915                     	;# 
  1425  0916                     	;# 
  1426  0918                     	;# 
  1427  0919                     	;# 
  1428  091A                     	;# 
  1429  091B                     	;# 
  1430  091C                     	;# 
  1431  091D                     	;# 
  1432  091E                     	;# 
  1433  091F                     	;# 
  1434  0E0F                     	;# 
  1435  0E10                     	;# 
  1436  0E11                     	;# 
  1437  0E12                     	;# 
  1438  0E13                     	;# 
  1439  0E14                     	;# 
  1440  0E15                     	;# 
  1441  0E16                     	;# 
  1442  0E17                     	;# 
  1443  0E18                     	;# 
  1444  0E19                     	;# 
  1445  0E1A                     	;# 
  1446  0E1B                     	;# 
  1447  0E1C                     	;# 
  1448  0E1D                     	;# 
  1449  0E1E                     	;# 
  1450  0E1F                     	;# 
  1451  0E20                     	;# 
  1452  0E21                     	;# 
  1453  0E22                     	;# 
  1454  0E24                     	;# 
  1455  0E25                     	;# 
  1456  0E28                     	;# 
  1457  0E29                     	;# 
  1458  0E2A                     	;# 
  1459  0E2B                     	;# 
  1460  0E2C                     	;# 
  1461  0E2D                     	;# 
  1462  0E2E                     	;# 
  1463  0E2F                     	;# 
  1464  0E90                     	;# 
  1465  0E91                     	;# 
  1466  0E92                     	;# 
  1467  0E94                     	;# 
  1468  0E95                     	;# 
  1469  0E9C                     	;# 
  1470  0E9D                     	;# 
  1471  0E9E                     	;# 
  1472  0E9F                     	;# 
  1473  0EA0                     	;# 
  1474  0EA1                     	;# 
  1475  0EA2                     	;# 
  1476  0EA3                     	;# 
  1477  0EA4                     	;# 
  1478  0EA5                     	;# 
  1479  0EA6                     	;# 
  1480  0EA7                     	;# 
  1481  0F0F                     	;# 
  1482  0F10                     	;# 
  1483  0F11                     	;# 
  1484  0F12                     	;# 
  1485  0F13                     	;# 
  1486  0F14                     	;# 
  1487  0F15                     	;# 
  1488  0F16                     	;# 
  1489  0F17                     	;# 
  1490  0F18                     	;# 
  1491  0F19                     	;# 
  1492  0F1A                     	;# 
  1493  0F1B                     	;# 
  1494  0F1C                     	;# 
  1495  0F1D                     	;# 
  1496  0F1E                     	;# 
  1497  0F1F                     	;# 
  1498  0F20                     	;# 
  1499  0F21                     	;# 
  1500  0F22                     	;# 
  1501  0F23                     	;# 
  1502  0F24                     	;# 
  1503  0F25                     	;# 
  1504  0F26                     	;# 
  1505  0F27                     	;# 
  1506  0F28                     	;# 
  1507  0F29                     	;# 
  1508  0F2A                     	;# 
  1509  0F2B                     	;# 
  1510  0F2C                     	;# 
  1511  0F2D                     	;# 
  1512  0F2E                     	;# 
  1513  0F2F                     	;# 
  1514  0F30                     	;# 
  1515  0F31                     	;# 
  1516  0F32                     	;# 
  1517  0F33                     	;# 
  1518  0F34                     	;# 
  1519  0F35                     	;# 
  1520  0F36                     	;# 
  1521  0F37                     	;# 
  1522  0FE4                     	;# 
  1523  0FE5                     	;# 
  1524  0FE6                     	;# 
  1525  0FE7                     	;# 
  1526  0FE8                     	;# 
  1527  0FE9                     	;# 
  1528  0FEA                     	;# 
  1529  0FEB                     	;# 
  1530  0FED                     	;# 
  1531  0FEE                     	;# 
  1532  0FEF                     	;# 
  1533  0000                     	;# 
  1534  0001                     	;# 
  1535  0002                     	;# 
  1536  0003                     	;# 
  1537  0004                     	;# 
  1538  0005                     	;# 
  1539  0006                     	;# 
  1540  0007                     	;# 
  1541  0008                     	;# 
  1542  0009                     	;# 
  1543  000A                     	;# 
  1544  000B                     	;# 
  1545  000C                     	;# 
  1546  000D                     	;# 
  1547  000E                     	;# 
  1548  0010                     	;# 
  1549  0011                     	;# 
  1550  0012                     	;# 
  1551  0013                     	;# 
  1552  0014                     	;# 
  1553  0015                     	;# 
  1554  0015                     	;# 
  1555  0016                     	;# 
  1556  0016                     	;# 
  1557  0017                     	;# 
  1558  0018                     	;# 
  1559  0019                     	;# 
  1560  0019                     	;# 
  1561  001A                     	;# 
  1562  001B                     	;# 
  1563  001C                     	;# 
  1564  001D                     	;# 
  1565  001E                     	;# 
  1566  001F                     	;# 
  1567  008C                     	;# 
  1568  008D                     	;# 
  1569  008E                     	;# 
  1570  0090                     	;# 
  1571  0091                     	;# 
  1572  0092                     	;# 
  1573  0093                     	;# 
  1574  0094                     	;# 
  1575  0097                     	;# 
  1576  009B                     	;# 
  1577  009B                     	;# 
  1578  009C                     	;# 
  1579  009D                     	;# 
  1580  009E                     	;# 
  1581  009F                     	;# 
  1582  010C                     	;# 
  1583  010D                     	;# 
  1584  010E                     	;# 
  1585  0111                     	;# 
  1586  0112                     	;# 
  1587  0113                     	;# 
  1588  0114                     	;# 
  1589  0115                     	;# 
  1590  0116                     	;# 
  1591  0117                     	;# 
  1592  0118                     	;# 
  1593  0119                     	;# 
  1594  018C                     	;# 
  1595  018D                     	;# 
  1596  018E                     	;# 
  1597  0197                     	;# 
  1598  0199                     	;# 
  1599  0199                     	;# 
  1600  0199                     	;# 
  1601  019A                     	;# 
  1602  019A                     	;# 
  1603  019A                     	;# 
  1604  019B                     	;# 
  1605  019B                     	;# 
  1606  019B                     	;# 
  1607  019B                     	;# 
  1608  019B                     	;# 
  1609  019C                     	;# 
  1610  019C                     	;# 
  1611  019C                     	;# 
  1612  019D                     	;# 
  1613  019D                     	;# 
  1614  019D                     	;# 
  1615  019E                     	;# 
  1616  019E                     	;# 
  1617  019E                     	;# 
  1618  019F                     	;# 
  1619  019F                     	;# 
  1620  019F                     	;# 
  1621  019F                     	;# 
  1622  019F                     	;# 
  1623  020C                     	;# 
  1624  020D                     	;# 
  1625  020E                     	;# 
  1626  0211                     	;# 
  1627  0211                     	;# 
  1628  0212                     	;# 
  1629  0212                     	;# 
  1630  0213                     	;# 
  1631  0213                     	;# 
  1632  0214                     	;# 
  1633  0214                     	;# 
  1634  0215                     	;# 
  1635  0215                     	;# 
  1636  0215                     	;# 
  1637  0215                     	;# 
  1638  0216                     	;# 
  1639  0216                     	;# 
  1640  0217                     	;# 
  1641  0217                     	;# 
  1642  0219                     	;# 
  1643  021A                     	;# 
  1644  021B                     	;# 
  1645  021C                     	;# 
  1646  021D                     	;# 
  1647  021D                     	;# 
  1648  021E                     	;# 
  1649  021F                     	;# 
  1650  028C                     	;# 
  1651  028D                     	;# 
  1652  028E                     	;# 
  1653  0291                     	;# 
  1654  0291                     	;# 
  1655  0292                     	;# 
  1656  0293                     	;# 
  1657  0294                     	;# 
  1658  0295                     	;# 
  1659  0295                     	;# 
  1660  0296                     	;# 
  1661  0297                     	;# 
  1662  0298                     	;# 
  1663  029F                     	;# 
  1664  030C                     	;# 
  1665  030D                     	;# 
  1666  030E                     	;# 
  1667  0311                     	;# 
  1668  0311                     	;# 
  1669  0312                     	;# 
  1670  0313                     	;# 
  1671  0314                     	;# 
  1672  0315                     	;# 
  1673  0315                     	;# 
  1674  0316                     	;# 
  1675  0317                     	;# 
  1676  0318                     	;# 
  1677  038C                     	;# 
  1678  038D                     	;# 
  1679  038E                     	;# 
  1680  0391                     	;# 
  1681  0392                     	;# 
  1682  0393                     	;# 
  1683  0394                     	;# 
  1684  0395                     	;# 
  1685  0396                     	;# 
  1686  0397                     	;# 
  1687  0398                     	;# 
  1688  0399                     	;# 
  1689  039A                     	;# 
  1690  039C                     	;# 
  1691  039D                     	;# 
  1692  039E                     	;# 
  1693  039F                     	;# 
  1694  0411                     	;# 
  1695  0411                     	;# 
  1696  0412                     	;# 
  1697  0413                     	;# 
  1698  0414                     	;# 
  1699  0415                     	;# 
  1700  0416                     	;# 
  1701  0417                     	;# 
  1702  0418                     	;# 
  1703  0418                     	;# 
  1704  0419                     	;# 
  1705  041A                     	;# 
  1706  041B                     	;# 
  1707  041C                     	;# 
  1708  041D                     	;# 
  1709  041E                     	;# 
  1710  041F                     	;# 
  1711  0498                     	;# 
  1712  0498                     	;# 
  1713  0499                     	;# 
  1714  049A                     	;# 
  1715  049B                     	;# 
  1716  049B                     	;# 
  1717  049C                     	;# 
  1718  049D                     	;# 
  1719  049E                     	;# 
  1720  049F                     	;# 
  1721  0617                     	;# 
  1722  0618                     	;# 
  1723  0619                     	;# 
  1724  0619                     	;# 
  1725  061A                     	;# 
  1726  061B                     	;# 
  1727  061C                     	;# 
  1728  061C                     	;# 
  1729  061F                     	;# 
  1730  0691                     	;# 
  1731  0692                     	;# 
  1732  0693                     	;# 
  1733  0694                     	;# 
  1734  0695                     	;# 
  1735  0696                     	;# 
  1736  0697                     	;# 
  1737  0698                     	;# 
  1738  0699                     	;# 
  1739  0711                     	;# 
  1740  0712                     	;# 
  1741  0713                     	;# 
  1742  0714                     	;# 
  1743  0715                     	;# 
  1744  0716                     	;# 
  1745  0717                     	;# 
  1746  0718                     	;# 
  1747  0719                     	;# 
  1748  0891                     	;# 
  1749  0891                     	;# 
  1750  0891                     	;# 
  1751  0891                     	;# 
  1752  0891                     	;# 
  1753  0891                     	;# 
  1754  0892                     	;# 
  1755  0892                     	;# 
  1756  0892                     	;# 
  1757  0893                     	;# 
  1758  0893                     	;# 
  1759  0893                     	;# 
  1760  0893                     	;# 
  1761  0893                     	;# 
  1762  0893                     	;# 
  1763  0894                     	;# 
  1764  0894                     	;# 
  1765  0894                     	;# 
  1766  0895                     	;# 
  1767  0895                     	;# 
  1768  0895                     	;# 
  1769  0896                     	;# 
  1770  0896                     	;# 
  1771  0896                     	;# 
  1772  089B                     	;# 
  1773  0911                     	;# 
  1774  0912                     	;# 
  1775  0913                     	;# 
  1776  0914                     	;# 
  1777  0915                     	;# 
  1778  0916                     	;# 
  1779  0918                     	;# 
  1780  0919                     	;# 
  1781  091A                     	;# 
  1782  091B                     	;# 
  1783  091C                     	;# 
  1784  091D                     	;# 
  1785  091E                     	;# 
  1786  091F                     	;# 
  1787  0E0F                     	;# 
  1788  0E10                     	;# 
  1789  0E11                     	;# 
  1790  0E12                     	;# 
  1791  0E13                     	;# 
  1792  0E14                     	;# 
  1793  0E15                     	;# 
  1794  0E16                     	;# 
  1795  0E17                     	;# 
  1796  0E18                     	;# 
  1797  0E19                     	;# 
  1798  0E1A                     	;# 
  1799  0E1B                     	;# 
  1800  0E1C                     	;# 
  1801  0E1D                     	;# 
  1802  0E1E                     	;# 
  1803  0E1F                     	;# 
  1804  0E20                     	;# 
  1805  0E21                     	;# 
  1806  0E22                     	;# 
  1807  0E24                     	;# 
  1808  0E25                     	;# 
  1809  0E28                     	;# 
  1810  0E29                     	;# 
  1811  0E2A                     	;# 
  1812  0E2B                     	;# 
  1813  0E2C                     	;# 
  1814  0E2D                     	;# 
  1815  0E2E                     	;# 
  1816  0E2F                     	;# 
  1817  0E90                     	;# 
  1818  0E91                     	;# 
  1819  0E92                     	;# 
  1820  0E94                     	;# 
  1821  0E95                     	;# 
  1822  0E9C                     	;# 
  1823  0E9D                     	;# 
  1824  0E9E                     	;# 
  1825  0E9F                     	;# 
  1826  0EA0                     	;# 
  1827  0EA1                     	;# 
  1828  0EA2                     	;# 
  1829  0EA3                     	;# 
  1830  0EA4                     	;# 
  1831  0EA5                     	;# 
  1832  0EA6                     	;# 
  1833  0EA7                     	;# 
  1834  0F0F                     	;# 
  1835  0F10                     	;# 
  1836  0F11                     	;# 
  1837  0F12                     	;# 
  1838  0F13                     	;# 
  1839  0F14                     	;# 
  1840  0F15                     	;# 
  1841  0F16                     	;# 
  1842  0F17                     	;# 
  1843  0F18                     	;# 
  1844  0F19                     	;# 
  1845  0F1A                     	;# 
  1846  0F1B                     	;# 
  1847  0F1C                     	;# 
  1848  0F1D                     	;# 
  1849  0F1E                     	;# 
  1850  0F1F                     	;# 
  1851  0F20                     	;# 
  1852  0F21                     	;# 
  1853  0F22                     	;# 
  1854  0F23                     	;# 
  1855  0F24                     	;# 
  1856  0F25                     	;# 
  1857  0F26                     	;# 
  1858  0F27                     	;# 
  1859  0F28                     	;# 
  1860  0F29                     	;# 
  1861  0F2A                     	;# 
  1862  0F2B                     	;# 
  1863  0F2C                     	;# 
  1864  0F2D                     	;# 
  1865  0F2E                     	;# 
  1866  0F2F                     	;# 
  1867  0F30                     	;# 
  1868  0F31                     	;# 
  1869  0F32                     	;# 
  1870  0F33                     	;# 
  1871  0F34                     	;# 
  1872  0F35                     	;# 
  1873  0F36                     	;# 
  1874  0F37                     	;# 
  1875  0FE4                     	;# 
  1876  0FE5                     	;# 
  1877  0FE6                     	;# 
  1878  0FE7                     	;# 
  1879  0FE8                     	;# 
  1880  0FE9                     	;# 
  1881  0FEA                     	;# 
  1882  0FEB                     	;# 
  1883  0FED                     	;# 
  1884  0FEE                     	;# 
  1885  0FEF                     	;# 
  1886  0000                     	;# 
  1887  0001                     	;# 
  1888  0002                     	;# 
  1889  0003                     	;# 
  1890  0004                     	;# 
  1891  0005                     	;# 
  1892  0006                     	;# 
  1893  0007                     	;# 
  1894  0008                     	;# 
  1895  0009                     	;# 
  1896  000A                     	;# 
  1897  000B                     	;# 
  1898  000C                     	;# 
  1899  000D                     	;# 
  1900  000E                     	;# 
  1901  0010                     	;# 
  1902  0011                     	;# 
  1903  0012                     	;# 
  1904  0013                     	;# 
  1905  0014                     	;# 
  1906  0015                     	;# 
  1907  0015                     	;# 
  1908  0016                     	;# 
  1909  0016                     	;# 
  1910  0017                     	;# 
  1911  0018                     	;# 
  1912  0019                     	;# 
  1913  0019                     	;# 
  1914  001A                     	;# 
  1915  001B                     	;# 
  1916  001C                     	;# 
  1917  001D                     	;# 
  1918  001E                     	;# 
  1919  001F                     	;# 
  1920  008C                     	;# 
  1921  008D                     	;# 
  1922  008E                     	;# 
  1923  0090                     	;# 
  1924  0091                     	;# 
  1925  0092                     	;# 
  1926  0093                     	;# 
  1927  0094                     	;# 
  1928  0097                     	;# 
  1929  009B                     	;# 
  1930  009B                     	;# 
  1931  009C                     	;# 
  1932  009D                     	;# 
  1933  009E                     	;# 
  1934  009F                     	;# 
  1935  010C                     	;# 
  1936  010D                     	;# 
  1937  010E                     	;# 
  1938  0111                     	;# 
  1939  0112                     	;# 
  1940  0113                     	;# 
  1941  0114                     	;# 
  1942  0115                     	;# 
  1943  0116                     	;# 
  1944  0117                     	;# 
  1945  0118                     	;# 
  1946  0119                     	;# 
  1947  018C                     	;# 
  1948  018D                     	;# 
  1949  018E                     	;# 
  1950  0197                     	;# 
  1951  0199                     	;# 
  1952  0199                     	;# 
  1953  0199                     	;# 
  1954  019A                     	;# 
  1955  019A                     	;# 
  1956  019A                     	;# 
  1957  019B                     	;# 
  1958  019B                     	;# 
  1959  019B                     	;# 
  1960  019B                     	;# 
  1961  019B                     	;# 
  1962  019C                     	;# 
  1963  019C                     	;# 
  1964  019C                     	;# 
  1965  019D                     	;# 
  1966  019D                     	;# 
  1967  019D                     	;# 
  1968  019E                     	;# 
  1969  019E                     	;# 
  1970  019E                     	;# 
  1971  019F                     	;# 
  1972  019F                     	;# 
  1973  019F                     	;# 
  1974  019F                     	;# 
  1975  019F                     	;# 
  1976  020C                     	;# 
  1977  020D                     	;# 
  1978  020E                     	;# 
  1979  0211                     	;# 
  1980  0211                     	;# 
  1981  0212                     	;# 
  1982  0212                     	;# 
  1983  0213                     	;# 
  1984  0213                     	;# 
  1985  0214                     	;# 
  1986  0214                     	;# 
  1987  0215                     	;# 
  1988  0215                     	;# 
  1989  0215                     	;# 
  1990  0215                     	;# 
  1991  0216                     	;# 
  1992  0216                     	;# 
  1993  0217                     	;# 
  1994  0217                     	;# 
  1995  0219                     	;# 
  1996  021A                     	;# 
  1997  021B                     	;# 
  1998  021C                     	;# 
  1999  021D                     	;# 
  2000  021D                     	;# 
  2001  021E                     	;# 
  2002  021F                     	;# 
  2003  028C                     	;# 
  2004  028D                     	;# 
  2005  028E                     	;# 
  2006  0291                     	;# 
  2007  0291                     	;# 
  2008  0292                     	;# 
  2009  0293                     	;# 
  2010  0294                     	;# 
  2011  0295                     	;# 
  2012  0295                     	;# 
  2013  0296                     	;# 
  2014  0297                     	;# 
  2015  0298                     	;# 
  2016  029F                     	;# 
  2017  030C                     	;# 
  2018  030D                     	;# 
  2019  030E                     	;# 
  2020  0311                     	;# 
  2021  0311                     	;# 
  2022  0312                     	;# 
  2023  0313                     	;# 
  2024  0314                     	;# 
  2025  0315                     	;# 
  2026  0315                     	;# 
  2027  0316                     	;# 
  2028  0317                     	;# 
  2029  0318                     	;# 
  2030  038C                     	;# 
  2031  038D                     	;# 
  2032  038E                     	;# 
  2033  0391                     	;# 
  2034  0392                     	;# 
  2035  0393                     	;# 
  2036  0394                     	;# 
  2037  0395                     	;# 
  2038  0396                     	;# 
  2039  0397                     	;# 
  2040  0398                     	;# 
  2041  0399                     	;# 
  2042  039A                     	;# 
  2043  039C                     	;# 
  2044  039D                     	;# 
  2045  039E                     	;# 
  2046  039F                     	;# 
  2047  0411                     	;# 
  2048  0411                     	;# 
  2049  0412                     	;# 
  2050  0413                     	;# 
  2051  0414                     	;# 
  2052  0415                     	;# 
  2053  0416                     	;# 
  2054  0417                     	;# 
  2055  0418                     	;# 
  2056  0418                     	;# 
  2057  0419                     	;# 
  2058  041A                     	;# 
  2059  041B                     	;# 
  2060  041C                     	;# 
  2061  041D                     	;# 
  2062  041E                     	;# 
  2063  041F                     	;# 
  2064  0498                     	;# 
  2065  0498                     	;# 
  2066  0499                     	;# 
  2067  049A                     	;# 
  2068  049B                     	;# 
  2069  049B                     	;# 
  2070  049C                     	;# 
  2071  049D                     	;# 
  2072  049E                     	;# 
  2073  049F                     	;# 
  2074  0617                     	;# 
  2075  0618                     	;# 
  2076  0619                     	;# 
  2077  0619                     	;# 
  2078  061A                     	;# 
  2079  061B                     	;# 
  2080  061C                     	;# 
  2081  061C                     	;# 
  2082  061F                     	;# 
  2083  0691                     	;# 
  2084  0692                     	;# 
  2085  0693                     	;# 
  2086  0694                     	;# 
  2087  0695                     	;# 
  2088  0696                     	;# 
  2089  0697                     	;# 
  2090  0698                     	;# 
  2091  0699                     	;# 
  2092  0711                     	;# 
  2093  0712                     	;# 
  2094  0713                     	;# 
  2095  0714                     	;# 
  2096  0715                     	;# 
  2097  0716                     	;# 
  2098  0717                     	;# 
  2099  0718                     	;# 
  2100  0719                     	;# 
  2101  0891                     	;# 
  2102  0891                     	;# 
  2103  0891                     	;# 
  2104  0891                     	;# 
  2105  0891                     	;# 
  2106  0891                     	;# 
  2107  0892                     	;# 
  2108  0892                     	;# 
  2109  0892                     	;# 
  2110  0893                     	;# 
  2111  0893                     	;# 
  2112  0893                     	;# 
  2113  0893                     	;# 
  2114  0893                     	;# 
  2115  0893                     	;# 
  2116  0894                     	;# 
  2117  0894                     	;# 
  2118  0894                     	;# 
  2119  0895                     	;# 
  2120  0895                     	;# 
  2121  0895                     	;# 
  2122  0896                     	;# 
  2123  0896                     	;# 
  2124  0896                     	;# 
  2125  089B                     	;# 
  2126  0911                     	;# 
  2127  0912                     	;# 
  2128  0913                     	;# 
  2129  0914                     	;# 
  2130  0915                     	;# 
  2131  0916                     	;# 
  2132  0918                     	;# 
  2133  0919                     	;# 
  2134  091A                     	;# 
  2135  091B                     	;# 
  2136  091C                     	;# 
  2137  091D                     	;# 
  2138  091E                     	;# 
  2139  091F                     	;# 
  2140  0E0F                     	;# 
  2141  0E10                     	;# 
  2142  0E11                     	;# 
  2143  0E12                     	;# 
  2144  0E13                     	;# 
  2145  0E14                     	;# 
  2146  0E15                     	;# 
  2147  0E16                     	;# 
  2148  0E17                     	;# 
  2149  0E18                     	;# 
  2150  0E19                     	;# 
  2151  0E1A                     	;# 
  2152  0E1B                     	;# 
  2153  0E1C                     	;# 
  2154  0E1D                     	;# 
  2155  0E1E                     	;# 
  2156  0E1F                     	;# 
  2157  0E20                     	;# 
  2158  0E21                     	;# 
  2159  0E22                     	;# 
  2160  0E24                     	;# 
  2161  0E25                     	;# 
  2162  0E28                     	;# 
  2163  0E29                     	;# 
  2164  0E2A                     	;# 
  2165  0E2B                     	;# 
  2166  0E2C                     	;# 
  2167  0E2D                     	;# 
  2168  0E2E                     	;# 
  2169  0E2F                     	;# 
  2170  0E90                     	;# 
  2171  0E91                     	;# 
  2172  0E92                     	;# 
  2173  0E94                     	;# 
  2174  0E95                     	;# 
  2175  0E9C                     	;# 
  2176  0E9D                     	;# 
  2177  0E9E                     	;# 
  2178  0E9F                     	;# 
  2179  0EA0                     	;# 
  2180  0EA1                     	;# 
  2181  0EA2                     	;# 
  2182  0EA3                     	;# 
  2183  0EA4                     	;# 
  2184  0EA5                     	;# 
  2185  0EA6                     	;# 
  2186  0EA7                     	;# 
  2187  0F0F                     	;# 
  2188  0F10                     	;# 
  2189  0F11                     	;# 
  2190  0F12                     	;# 
  2191  0F13                     	;# 
  2192  0F14                     	;# 
  2193  0F15                     	;# 
  2194  0F16                     	;# 
  2195  0F17                     	;# 
  2196  0F18                     	;# 
  2197  0F19                     	;# 
  2198  0F1A                     	;# 
  2199  0F1B                     	;# 
  2200  0F1C                     	;# 
  2201  0F1D                     	;# 
  2202  0F1E                     	;# 
  2203  0F1F                     	;# 
  2204  0F20                     	;# 
  2205  0F21                     	;# 
  2206  0F22                     	;# 
  2207  0F23                     	;# 
  2208  0F24                     	;# 
  2209  0F25                     	;# 
  2210  0F26                     	;# 
  2211  0F27                     	;# 
  2212  0F28                     	;# 
  2213  0F29                     	;# 
  2214  0F2A                     	;# 
  2215  0F2B                     	;# 
  2216  0F2C                     	;# 
  2217  0F2D                     	;# 
  2218  0F2E                     	;# 
  2219  0F2F                     	;# 
  2220  0F30                     	;# 
  2221  0F31                     	;# 
  2222  0F32                     	;# 
  2223  0F33                     	;# 
  2224  0F34                     	;# 
  2225  0F35                     	;# 
  2226  0F36                     	;# 
  2227  0F37                     	;# 
  2228  0FE4                     	;# 
  2229  0FE5                     	;# 
  2230  0FE6                     	;# 
  2231  0FE7                     	;# 
  2232  0FE8                     	;# 
  2233  0FE9                     	;# 
  2234  0FEA                     	;# 
  2235  0FEB                     	;# 
  2236  0FED                     	;# 
  2237  0FEE                     	;# 
  2238  0FEF                     	;# 
  2239  0000                     	;# 
  2240  0001                     	;# 
  2241  0002                     	;# 
  2242  0003                     	;# 
  2243  0004                     	;# 
  2244  0005                     	;# 
  2245  0006                     	;# 
  2246  0007                     	;# 
  2247  0008                     	;# 
  2248  0009                     	;# 
  2249  000A                     	;# 
  2250  000B                     	;# 
  2251  000C                     	;# 
  2252  000D                     	;# 
  2253  000E                     	;# 
  2254  0010                     	;# 
  2255  0011                     	;# 
  2256  0012                     	;# 
  2257  0013                     	;# 
  2258  0014                     	;# 
  2259  0015                     	;# 
  2260  0015                     	;# 
  2261  0016                     	;# 
  2262  0016                     	;# 
  2263  0017                     	;# 
  2264  0018                     	;# 
  2265  0019                     	;# 
  2266  0019                     	;# 
  2267  001A                     	;# 
  2268  001B                     	;# 
  2269  001C                     	;# 
  2270  001D                     	;# 
  2271  001E                     	;# 
  2272  001F                     	;# 
  2273  008C                     	;# 
  2274  008D                     	;# 
  2275  008E                     	;# 
  2276  0090                     	;# 
  2277  0091                     	;# 
  2278  0092                     	;# 
  2279  0093                     	;# 
  2280  0094                     	;# 
  2281  0097                     	;# 
  2282  009B                     	;# 
  2283  009B                     	;# 
  2284  009C                     	;# 
  2285  009D                     	;# 
  2286  009E                     	;# 
  2287  009F                     	;# 
  2288  010C                     	;# 
  2289  010D                     	;# 
  2290  010E                     	;# 
  2291  0111                     	;# 
  2292  0112                     	;# 
  2293  0113                     	;# 
  2294  0114                     	;# 
  2295  0115                     	;# 
  2296  0116                     	;# 
  2297  0117                     	;# 
  2298  0118                     	;# 
  2299  0119                     	;# 
  2300  018C                     	;# 
  2301  018D                     	;# 
  2302  018E                     	;# 
  2303  0197                     	;# 
  2304  0199                     	;# 
  2305  0199                     	;# 
  2306  0199                     	;# 
  2307  019A                     	;# 
  2308  019A                     	;# 
  2309  019A                     	;# 
  2310  019B                     	;# 
  2311  019B                     	;# 
  2312  019B                     	;# 
  2313  019B                     	;# 
  2314  019B                     	;# 
  2315  019C                     	;# 
  2316  019C                     	;# 
  2317  019C                     	;# 
  2318  019D                     	;# 
  2319  019D                     	;# 
  2320  019D                     	;# 
  2321  019E                     	;# 
  2322  019E                     	;# 
  2323  019E                     	;# 
  2324  019F                     	;# 
  2325  019F                     	;# 
  2326  019F                     	;# 
  2327  019F                     	;# 
  2328  019F                     	;# 
  2329  020C                     	;# 
  2330  020D                     	;# 
  2331  020E                     	;# 
  2332  0211                     	;# 
  2333  0211                     	;# 
  2334  0212                     	;# 
  2335  0212                     	;# 
  2336  0213                     	;# 
  2337  0213                     	;# 
  2338  0214                     	;# 
  2339  0214                     	;# 
  2340  0215                     	;# 
  2341  0215                     	;# 
  2342  0215                     	;# 
  2343  0215                     	;# 
  2344  0216                     	;# 
  2345  0216                     	;# 
  2346  0217                     	;# 
  2347  0217                     	;# 
  2348  0219                     	;# 
  2349  021A                     	;# 
  2350  021B                     	;# 
  2351  021C                     	;# 
  2352  021D                     	;# 
  2353  021D                     	;# 
  2354  021E                     	;# 
  2355  021F                     	;# 
  2356  028C                     	;# 
  2357  028D                     	;# 
  2358  028E                     	;# 
  2359  0291                     	;# 
  2360  0291                     	;# 
  2361  0292                     	;# 
  2362  0293                     	;# 
  2363  0294                     	;# 
  2364  0295                     	;# 
  2365  0295                     	;# 
  2366  0296                     	;# 
  2367  0297                     	;# 
  2368  0298                     	;# 
  2369  029F                     	;# 
  2370  030C                     	;# 
  2371  030D                     	;# 
  2372  030E                     	;# 
  2373  0311                     	;# 
  2374  0311                     	;# 
  2375  0312                     	;# 
  2376  0313                     	;# 
  2377  0314                     	;# 
  2378  0315                     	;# 
  2379  0315                     	;# 
  2380  0316                     	;# 
  2381  0317                     	;# 
  2382  0318                     	;# 
  2383  038C                     	;# 
  2384  038D                     	;# 
  2385  038E                     	;# 
  2386  0391                     	;# 
  2387  0392                     	;# 
  2388  0393                     	;# 
  2389  0394                     	;# 
  2390  0395                     	;# 
  2391  0396                     	;# 
  2392  0397                     	;# 
  2393  0398                     	;# 
  2394  0399                     	;# 
  2395  039A                     	;# 
  2396  039C                     	;# 
  2397  039D                     	;# 
  2398  039E                     	;# 
  2399  039F                     	;# 
  2400  0411                     	;# 
  2401  0411                     	;# 
  2402  0412                     	;# 
  2403  0413                     	;# 
  2404  0414                     	;# 
  2405  0415                     	;# 
  2406  0416                     	;# 
  2407  0417                     	;# 
  2408  0418                     	;# 
  2409  0418                     	;# 
  2410  0419                     	;# 
  2411  041A                     	;# 
  2412  041B                     	;# 
  2413  041C                     	;# 
  2414  041D                     	;# 
  2415  041E                     	;# 
  2416  041F                     	;# 
  2417  0498                     	;# 
  2418  0498                     	;# 
  2419  0499                     	;# 
  2420  049A                     	;# 
  2421  049B                     	;# 
  2422  049B                     	;# 
  2423  049C                     	;# 
  2424  049D                     	;# 
  2425  049E                     	;# 
  2426  049F                     	;# 
  2427  0617                     	;# 
  2428  0618                     	;# 
  2429  0619                     	;# 
  2430  0619                     	;# 
  2431  061A                     	;# 
  2432  061B                     	;# 
  2433  061C                     	;# 
  2434  061C                     	;# 
  2435  061F                     	;# 
  2436  0691                     	;# 
  2437  0692                     	;# 
  2438  0693                     	;# 
  2439  0694                     	;# 
  2440  0695                     	;# 
  2441  0696                     	;# 
  2442  0697                     	;# 
  2443  0698                     	;# 
  2444  0699                     	;# 
  2445  0711                     	;# 
  2446  0712                     	;# 
  2447  0713                     	;# 
  2448  0714                     	;# 
  2449  0715                     	;# 
  2450  0716                     	;# 
  2451  0717                     	;# 
  2452  0718                     	;# 
  2453  0719                     	;# 
  2454  0891                     	;# 
  2455  0891                     	;# 
  2456  0891                     	;# 
  2457  0891                     	;# 
  2458  0891                     	;# 
  2459  0891                     	;# 
  2460  0892                     	;# 
  2461  0892                     	;# 
  2462  0892                     	;# 
  2463  0893                     	;# 
  2464  0893                     	;# 
  2465  0893                     	;# 
  2466  0893                     	;# 
  2467  0893                     	;# 
  2468  0893                     	;# 
  2469  0894                     	;# 
  2470  0894                     	;# 
  2471  0894                     	;# 
  2472  0895                     	;# 
  2473  0895                     	;# 
  2474  0895                     	;# 
  2475  0896                     	;# 
  2476  0896                     	;# 
  2477  0896                     	;# 
  2478  089B                     	;# 
  2479  0911                     	;# 
  2480  0912                     	;# 
  2481  0913                     	;# 
  2482  0914                     	;# 
  2483  0915                     	;# 
  2484  0916                     	;# 
  2485  0918                     	;# 
  2486  0919                     	;# 
  2487  091A                     	;# 
  2488  091B                     	;# 
  2489  091C                     	;# 
  2490  091D                     	;# 
  2491  091E                     	;# 
  2492  091F                     	;# 
  2493  0E0F                     	;# 
  2494  0E10                     	;# 
  2495  0E11                     	;# 
  2496  0E12                     	;# 
  2497  0E13                     	;# 
  2498  0E14                     	;# 
  2499  0E15                     	;# 
  2500  0E16                     	;# 
  2501  0E17                     	;# 
  2502  0E18                     	;# 
  2503  0E19                     	;# 
  2504  0E1A                     	;# 
  2505  0E1B                     	;# 
  2506  0E1C                     	;# 
  2507  0E1D                     	;# 
  2508  0E1E                     	;# 
  2509  0E1F                     	;# 
  2510  0E20                     	;# 
  2511  0E21                     	;# 
  2512  0E22                     	;# 
  2513  0E24                     	;# 
  2514  0E25                     	;# 
  2515  0E28                     	;# 
  2516  0E29                     	;# 
  2517  0E2A                     	;# 
  2518  0E2B                     	;# 
  2519  0E2C                     	;# 
  2520  0E2D                     	;# 
  2521  0E2E                     	;# 
  2522  0E2F                     	;# 
  2523  0E90                     	;# 
  2524  0E91                     	;# 
  2525  0E92                     	;# 
  2526  0E94                     	;# 
  2527  0E95                     	;# 
  2528  0E9C                     	;# 
  2529  0E9D                     	;# 
  2530  0E9E                     	;# 
  2531  0E9F                     	;# 
  2532  0EA0                     	;# 
  2533  0EA1                     	;# 
  2534  0EA2                     	;# 
  2535  0EA3                     	;# 
  2536  0EA4                     	;# 
  2537  0EA5                     	;# 
  2538  0EA6                     	;# 
  2539  0EA7                     	;# 
  2540  0F0F                     	;# 
  2541  0F10                     	;# 
  2542  0F11                     	;# 
  2543  0F12                     	;# 
  2544  0F13                     	;# 
  2545  0F14                     	;# 
  2546  0F15                     	;# 
  2547  0F16                     	;# 
  2548  0F17                     	;# 
  2549  0F18                     	;# 
  2550  0F19                     	;# 
  2551  0F1A                     	;# 
  2552  0F1B                     	;# 
  2553  0F1C                     	;# 
  2554  0F1D                     	;# 
  2555  0F1E                     	;# 
  2556  0F1F                     	;# 
  2557  0F20                     	;# 
  2558  0F21                     	;# 
  2559  0F22                     	;# 
  2560  0F23                     	;# 
  2561  0F24                     	;# 
  2562  0F25                     	;# 
  2563  0F26                     	;# 
  2564  0F27                     	;# 
  2565  0F28                     	;# 
  2566  0F29                     	;# 
  2567  0F2A                     	;# 
  2568  0F2B                     	;# 
  2569  0F2C                     	;# 
  2570  0F2D                     	;# 
  2571  0F2E                     	;# 
  2572  0F2F                     	;# 
  2573  0F30                     	;# 
  2574  0F31                     	;# 
  2575  0F32                     	;# 
  2576  0F33                     	;# 
  2577  0F34                     	;# 
  2578  0F35                     	;# 
  2579  0F36                     	;# 
  2580  0F37                     	;# 
  2581  0FE4                     	;# 
  2582  0FE5                     	;# 
  2583  0FE6                     	;# 
  2584  0FE7                     	;# 
  2585  0FE8                     	;# 
  2586  0FE9                     	;# 
  2587  0FEA                     	;# 
  2588  0FEB                     	;# 
  2589  0FED                     	;# 
  2590  0FEE                     	;# 
  2591  0FEF                     	;# 
  2592  0000                     	;# 
  2593  0001                     	;# 
  2594  0002                     	;# 
  2595  0003                     	;# 
  2596  0004                     	;# 
  2597  0005                     	;# 
  2598  0006                     	;# 
  2599  0007                     	;# 
  2600  0008                     	;# 
  2601  0009                     	;# 
  2602  000A                     	;# 
  2603  000B                     	;# 
  2604  000C                     	;# 
  2605  000D                     	;# 
  2606  000E                     	;# 
  2607  0010                     	;# 
  2608  0011                     	;# 
  2609  0012                     	;# 
  2610  0013                     	;# 
  2611  0014                     	;# 
  2612  0015                     	;# 
  2613  0015                     	;# 
  2614  0016                     	;# 
  2615  0016                     	;# 
  2616  0017                     	;# 
  2617  0018                     	;# 
  2618  0019                     	;# 
  2619  0019                     	;# 
  2620  001A                     	;# 
  2621  001B                     	;# 
  2622  001C                     	;# 
  2623  001D                     	;# 
  2624  001E                     	;# 
  2625  001F                     	;# 
  2626  008C                     	;# 
  2627  008D                     	;# 
  2628  008E                     	;# 
  2629  0090                     	;# 
  2630  0091                     	;# 
  2631  0092                     	;# 
  2632  0093                     	;# 
  2633  0094                     	;# 
  2634  0097                     	;# 
  2635  009B                     	;# 
  2636  009B                     	;# 
  2637  009C                     	;# 
  2638  009D                     	;# 
  2639  009E                     	;# 
  2640  009F                     	;# 
  2641  010C                     	;# 
  2642  010D                     	;# 
  2643  010E                     	;# 
  2644  0111                     	;# 
  2645  0112                     	;# 
  2646  0113                     	;# 
  2647  0114                     	;# 
  2648  0115                     	;# 
  2649  0116                     	;# 
  2650  0117                     	;# 
  2651  0118                     	;# 
  2652  0119                     	;# 
  2653  018C                     	;# 
  2654  018D                     	;# 
  2655  018E                     	;# 
  2656  0197                     	;# 
  2657  0199                     	;# 
  2658  0199                     	;# 
  2659  0199                     	;# 
  2660  019A                     	;# 
  2661  019A                     	;# 
  2662  019A                     	;# 
  2663  019B                     	;# 
  2664  019B                     	;# 
  2665  019B                     	;# 
  2666  019B                     	;# 
  2667  019B                     	;# 
  2668  019C                     	;# 
  2669  019C                     	;# 
  2670  019C                     	;# 
  2671  019D                     	;# 
  2672  019D                     	;# 
  2673  019D                     	;# 
  2674  019E                     	;# 
  2675  019E                     	;# 
  2676  019E                     	;# 
  2677  019F                     	;# 
  2678  019F                     	;# 
  2679  019F                     	;# 
  2680  019F                     	;# 
  2681  019F                     	;# 
  2682  020C                     	;# 
  2683  020D                     	;# 
  2684  020E                     	;# 
  2685  0211                     	;# 
  2686  0211                     	;# 
  2687  0212                     	;# 
  2688  0212                     	;# 
  2689  0213                     	;# 
  2690  0213                     	;# 
  2691  0214                     	;# 
  2692  0214                     	;# 
  2693  0215                     	;# 
  2694  0215                     	;# 
  2695  0215                     	;# 
  2696  0215                     	;# 
  2697  0216                     	;# 
  2698  0216                     	;# 
  2699  0217                     	;# 
  2700  0217                     	;# 
  2701  0219                     	;# 
  2702  021A                     	;# 
  2703  021B                     	;# 
  2704  021C                     	;# 
  2705  021D                     	;# 
  2706  021D                     	;# 
  2707  021E                     	;# 
  2708  021F                     	;# 
  2709  028C                     	;# 
  2710  028D                     	;# 
  2711  028E                     	;# 
  2712  0291                     	;# 
  2713  0291                     	;# 
  2714  0292                     	;# 
  2715  0293                     	;# 
  2716  0294                     	;# 
  2717  0295                     	;# 
  2718  0295                     	;# 
  2719  0296                     	;# 
  2720  0297                     	;# 
  2721  0298                     	;# 
  2722  029F                     	;# 
  2723  030C                     	;# 
  2724  030D                     	;# 
  2725  030E                     	;# 
  2726  0311                     	;# 
  2727  0311                     	;# 
  2728  0312                     	;# 
  2729  0313                     	;# 
  2730  0314                     	;# 
  2731  0315                     	;# 
  2732  0315                     	;# 
  2733  0316                     	;# 
  2734  0317                     	;# 
  2735  0318                     	;# 
  2736  038C                     	;# 
  2737  038D                     	;# 
  2738  038E                     	;# 
  2739  0391                     	;# 
  2740  0392                     	;# 
  2741  0393                     	;# 
  2742  0394                     	;# 
  2743  0395                     	;# 
  2744  0396                     	;# 
  2745  0397                     	;# 
  2746  0398                     	;# 
  2747  0399                     	;# 
  2748  039A                     	;# 
  2749  039C                     	;# 
  2750  039D                     	;# 
  2751  039E                     	;# 
  2752  039F                     	;# 
  2753  0411                     	;# 
  2754  0411                     	;# 
  2755  0412                     	;# 
  2756  0413                     	;# 
  2757  0414                     	;# 
  2758  0415                     	;# 
  2759  0416                     	;# 
  2760  0417                     	;# 
  2761  0418                     	;# 
  2762  0418                     	;# 
  2763  0419                     	;# 
  2764  041A                     	;# 
  2765  041B                     	;# 
  2766  041C                     	;# 
  2767  041D                     	;# 
  2768  041E                     	;# 
  2769  041F                     	;# 
  2770  0498                     	;# 
  2771  0498                     	;# 
  2772  0499                     	;# 
  2773  049A                     	;# 
  2774  049B                     	;# 
  2775  049B                     	;# 
  2776  049C                     	;# 
  2777  049D                     	;# 
  2778  049E                     	;# 
  2779  049F                     	;# 
  2780  0617                     	;# 
  2781  0618                     	;# 
  2782  0619                     	;# 
  2783  0619                     	;# 
  2784  061A                     	;# 
  2785  061B                     	;# 
  2786  061C                     	;# 
  2787  061C                     	;# 
  2788  061F                     	;# 
  2789  0691                     	;# 
  2790  0692                     	;# 
  2791  0693                     	;# 
  2792  0694                     	;# 
  2793  0695                     	;# 
  2794  0696                     	;# 
  2795  0697                     	;# 
  2796  0698                     	;# 
  2797  0699                     	;# 
  2798  0711                     	;# 
  2799  0712                     	;# 
  2800  0713                     	;# 
  2801  0714                     	;# 
  2802  0715                     	;# 
  2803  0716                     	;# 
  2804  0717                     	;# 
  2805  0718                     	;# 
  2806  0719                     	;# 
  2807  0891                     	;# 
  2808  0891                     	;# 
  2809  0891                     	;# 
  2810  0891                     	;# 
  2811  0891                     	;# 
  2812  0891                     	;# 
  2813  0892                     	;# 
  2814  0892                     	;# 
  2815  0892                     	;# 
  2816  0893                     	;# 
  2817  0893                     	;# 
  2818  0893                     	;# 
  2819  0893                     	;# 
  2820  0893                     	;# 
  2821  0893                     	;# 
  2822  0894                     	;# 
  2823  0894                     	;# 
  2824  0894                     	;# 
  2825  0895                     	;# 
  2826  0895                     	;# 
  2827  0895                     	;# 
  2828  0896                     	;# 
  2829  0896                     	;# 
  2830  0896                     	;# 
  2831  089B                     	;# 
  2832  0911                     	;# 
  2833  0912                     	;# 
  2834  0913                     	;# 
  2835  0914                     	;# 
  2836  0915                     	;# 
  2837  0916                     	;# 
  2838  0918                     	;# 
  2839  0919                     	;# 
  2840  091A                     	;# 
  2841  091B                     	;# 
  2842  091C                     	;# 
  2843  091D                     	;# 
  2844  091E                     	;# 
  2845  091F                     	;# 
  2846  0E0F                     	;# 
  2847  0E10                     	;# 
  2848  0E11                     	;# 
  2849  0E12                     	;# 
  2850  0E13                     	;# 
  2851  0E14                     	;# 
  2852  0E15                     	;# 
  2853  0E16                     	;# 
  2854  0E17                     	;# 
  2855  0E18                     	;# 
  2856  0E19                     	;# 
  2857  0E1A                     	;# 
  2858  0E1B                     	;# 
  2859  0E1C                     	;# 
  2860  0E1D                     	;# 
  2861  0E1E                     	;# 
  2862  0E1F                     	;# 
  2863  0E20                     	;# 
  2864  0E21                     	;# 
  2865  0E22                     	;# 
  2866  0E24                     	;# 
  2867  0E25                     	;# 
  2868  0E28                     	;# 
  2869  0E29                     	;# 
  2870  0E2A                     	;# 
  2871  0E2B                     	;# 
  2872  0E2C                     	;# 
  2873  0E2D                     	;# 
  2874  0E2E                     	;# 
  2875  0E2F                     	;# 
  2876  0E90                     	;# 
  2877  0E91                     	;# 
  2878  0E92                     	;# 
  2879  0E94                     	;# 
  2880  0E95                     	;# 
  2881  0E9C                     	;# 
  2882  0E9D                     	;# 
  2883  0E9E                     	;# 
  2884  0E9F                     	;# 
  2885  0EA0                     	;# 
  2886  0EA1                     	;# 
  2887  0EA2                     	;# 
  2888  0EA3                     	;# 
  2889  0EA4                     	;# 
  2890  0EA5                     	;# 
  2891  0EA6                     	;# 
  2892  0EA7                     	;# 
  2893  0F0F                     	;# 
  2894  0F10                     	;# 
  2895  0F11                     	;# 
  2896  0F12                     	;# 
  2897  0F13                     	;# 
  2898  0F14                     	;# 
  2899  0F15                     	;# 
  2900  0F16                     	;# 
  2901  0F17                     	;# 
  2902  0F18                     	;# 
  2903  0F19                     	;# 
  2904  0F1A                     	;# 
  2905  0F1B                     	;# 
  2906  0F1C                     	;# 
  2907  0F1D                     	;# 
  2908  0F1E                     	;# 
  2909  0F1F                     	;# 
  2910  0F20                     	;# 
  2911  0F21                     	;# 
  2912  0F22                     	;# 
  2913  0F23                     	;# 
  2914  0F24                     	;# 
  2915  0F25                     	;# 
  2916  0F26                     	;# 
  2917  0F27                     	;# 
  2918  0F28                     	;# 
  2919  0F29                     	;# 
  2920  0F2A                     	;# 
  2921  0F2B                     	;# 
  2922  0F2C                     	;# 
  2923  0F2D                     	;# 
  2924  0F2E                     	;# 
  2925  0F2F                     	;# 
  2926  0F30                     	;# 
  2927  0F31                     	;# 
  2928  0F32                     	;# 
  2929  0F33                     	;# 
  2930  0F34                     	;# 
  2931  0F35                     	;# 
  2932  0F36                     	;# 
  2933  0F37                     	;# 
  2934  0FE4                     	;# 
  2935  0FE5                     	;# 
  2936  0FE6                     	;# 
  2937  0FE7                     	;# 
  2938  0FE8                     	;# 
  2939  0FE9                     	;# 
  2940  0FEA                     	;# 
  2941  0FEB                     	;# 
  2942  0FED                     	;# 
  2943  0FEE                     	;# 
  2944  0FEF                     	;# 
  2945  0000                     	;# 
  2946  0001                     	;# 
  2947  0002                     	;# 
  2948  0003                     	;# 
  2949  0004                     	;# 
  2950  0005                     	;# 
  2951  0006                     	;# 
  2952  0007                     	;# 
  2953  0008                     	;# 
  2954  0009                     	;# 
  2955  000A                     	;# 
  2956  000B                     	;# 
  2957  000C                     	;# 
  2958  000D                     	;# 
  2959  000E                     	;# 
  2960  0010                     	;# 
  2961  0011                     	;# 
  2962  0012                     	;# 
  2963  0013                     	;# 
  2964  0014                     	;# 
  2965  0015                     	;# 
  2966  0015                     	;# 
  2967  0016                     	;# 
  2968  0016                     	;# 
  2969  0017                     	;# 
  2970  0018                     	;# 
  2971  0019                     	;# 
  2972  0019                     	;# 
  2973  001A                     	;# 
  2974  001B                     	;# 
  2975  001C                     	;# 
  2976  001D                     	;# 
  2977  001E                     	;# 
  2978  001F                     	;# 
  2979  008C                     	;# 
  2980  008D                     	;# 
  2981  008E                     	;# 
  2982  0090                     	;# 
  2983  0091                     	;# 
  2984  0092                     	;# 
  2985  0093                     	;# 
  2986  0094                     	;# 
  2987  0097                     	;# 
  2988  009B                     	;# 
  2989  009B                     	;# 
  2990  009C                     	;# 
  2991  009D                     	;# 
  2992  009E                     	;# 
  2993  009F                     	;# 
  2994  010C                     	;# 
  2995  010D                     	;# 
  2996  010E                     	;# 
  2997  0111                     	;# 
  2998  0112                     	;# 
  2999  0113                     	;# 
  3000  0114                     	;# 
  3001  0115                     	;# 
  3002  0116                     	;# 
  3003  0117                     	;# 
  3004  0118                     	;# 
  3005  0119                     	;# 
  3006  018C                     	;# 
  3007  018D                     	;# 
  3008  018E                     	;# 
  3009  0197                     	;# 
  3010  0199                     	;# 
  3011  0199                     	;# 
  3012  0199                     	;# 
  3013  019A                     	;# 
  3014  019A                     	;# 
  3015  019A                     	;# 
  3016  019B                     	;# 
  3017  019B                     	;# 
  3018  019B                     	;# 
  3019  019B                     	;# 
  3020  019B                     	;# 
  3021  019C                     	;# 
  3022  019C                     	;# 
  3023  019C                     	;# 
  3024  019D                     	;# 
  3025  019D                     	;# 
  3026  019D                     	;# 
  3027  019E                     	;# 
  3028  019E                     	;# 
  3029  019E                     	;# 
  3030  019F                     	;# 
  3031  019F                     	;# 
  3032  019F                     	;# 
  3033  019F                     	;# 
  3034  019F                     	;# 
  3035  020C                     	;# 
  3036  020D                     	;# 
  3037  020E                     	;# 
  3038  0211                     	;# 
  3039  0211                     	;# 
  3040  0212                     	;# 
  3041  0212                     	;# 
  3042  0213                     	;# 
  3043  0213                     	;# 
  3044  0214                     	;# 
  3045  0214                     	;# 
  3046  0215                     	;# 
  3047  0215                     	;# 
  3048  0215                     	;# 
  3049  0215                     	;# 
  3050  0216                     	;# 
  3051  0216                     	;# 
  3052  0217                     	;# 
  3053  0217                     	;# 
  3054  0219                     	;# 
  3055  021A                     	;# 
  3056  021B                     	;# 
  3057  021C                     	;# 
  3058  021D                     	;# 
  3059  021D                     	;# 
  3060  021E                     	;# 
  3061  021F                     	;# 
  3062  028C                     	;# 
  3063  028D                     	;# 
  3064  028E                     	;# 
  3065  0291                     	;# 
  3066  0291                     	;# 
  3067  0292                     	;# 
  3068  0293                     	;# 
  3069  0294                     	;# 
  3070  0295                     	;# 
  3071  0295                     	;# 
  3072  0296                     	;# 
  3073  0297                     	;# 
  3074  0298                     	;# 
  3075  029F                     	;# 
  3076  030C                     	;# 
  3077  030D                     	;# 
  3078  030E                     	;# 
  3079  0311                     	;# 
  3080  0311                     	;# 
  3081  0312                     	;# 
  3082  0313                     	;# 
  3083  0314                     	;# 
  3084  0315                     	;# 
  3085  0315                     	;# 
  3086  0316                     	;# 
  3087  0317                     	;# 
  3088  0318                     	;# 
  3089  038C                     	;# 
  3090  038D                     	;# 
  3091  038E                     	;# 
  3092  0391                     	;# 
  3093  0392                     	;# 
  3094  0393                     	;# 
  3095  0394                     	;# 
  3096  0395                     	;# 
  3097  0396                     	;# 
  3098  0397                     	;# 
  3099  0398                     	;# 
  3100  0399                     	;# 
  3101  039A                     	;# 
  3102  039C                     	;# 
  3103  039D                     	;# 
  3104  039E                     	;# 
  3105  039F                     	;# 
  3106  0411                     	;# 
  3107  0411                     	;# 
  3108  0412                     	;# 
  3109  0413                     	;# 
  3110  0414                     	;# 
  3111  0415                     	;# 
  3112  0416                     	;# 
  3113  0417                     	;# 
  3114  0418                     	;# 
  3115  0418                     	;# 
  3116  0419                     	;# 
  3117  041A                     	;# 
  3118  041B                     	;# 
  3119  041C                     	;# 
  3120  041D                     	;# 
  3121  041E                     	;# 
  3122  041F                     	;# 
  3123  0498                     	;# 
  3124  0498                     	;# 
  3125  0499                     	;# 
  3126  049A                     	;# 
  3127  049B                     	;# 
  3128  049B                     	;# 
  3129  049C                     	;# 
  3130  049D                     	;# 
  3131  049E                     	;# 
  3132  049F                     	;# 
  3133  0617                     	;# 
  3134  0618                     	;# 
  3135  0619                     	;# 
  3136  0619                     	;# 
  3137  061A                     	;# 
  3138  061B                     	;# 
  3139  061C                     	;# 
  3140  061C                     	;# 
  3141  061F                     	;# 
  3142  0691                     	;# 
  3143  0692                     	;# 
  3144  0693                     	;# 
  3145  0694                     	;# 
  3146  0695                     	;# 
  3147  0696                     	;# 
  3148  0697                     	;# 
  3149  0698                     	;# 
  3150  0699                     	;# 
  3151  0711                     	;# 
  3152  0712                     	;# 
  3153  0713                     	;# 
  3154  0714                     	;# 
  3155  0715                     	;# 
  3156  0716                     	;# 
  3157  0717                     	;# 
  3158  0718                     	;# 
  3159  0719                     	;# 
  3160  0891                     	;# 
  3161  0891                     	;# 
  3162  0891                     	;# 
  3163  0891                     	;# 
  3164  0891                     	;# 
  3165  0891                     	;# 
  3166  0892                     	;# 
  3167  0892                     	;# 
  3168  0892                     	;# 
  3169  0893                     	;# 
  3170  0893                     	;# 
  3171  0893                     	;# 
  3172  0893                     	;# 
  3173  0893                     	;# 
  3174  0893                     	;# 
  3175  0894                     	;# 
  3176  0894                     	;# 
  3177  0894                     	;# 
  3178  0895                     	;# 
  3179  0895                     	;# 
  3180  0895                     	;# 
  3181  0896                     	;# 
  3182  0896                     	;# 
  3183  0896                     	;# 
  3184  089B                     	;# 
  3185  0911                     	;# 
  3186  0912                     	;# 
  3187  0913                     	;# 
  3188  0914                     	;# 
  3189  0915                     	;# 
  3190  0916                     	;# 
  3191  0918                     	;# 
  3192  0919                     	;# 
  3193  091A                     	;# 
  3194  091B                     	;# 
  3195  091C                     	;# 
  3196  091D                     	;# 
  3197  091E                     	;# 
  3198  091F                     	;# 
  3199  0E0F                     	;# 
  3200  0E10                     	;# 
  3201  0E11                     	;# 
  3202  0E12                     	;# 
  3203  0E13                     	;# 
  3204  0E14                     	;# 
  3205  0E15                     	;# 
  3206  0E16                     	;# 
  3207  0E17                     	;# 
  3208  0E18                     	;# 
  3209  0E19                     	;# 
  3210  0E1A                     	;# 
  3211  0E1B                     	;# 
  3212  0E1C                     	;# 
  3213  0E1D                     	;# 
  3214  0E1E                     	;# 
  3215  0E1F                     	;# 
  3216  0E20                     	;# 
  3217  0E21                     	;# 
  3218  0E22                     	;# 
  3219  0E24                     	;# 
  3220  0E25                     	;# 
  3221  0E28                     	;# 
  3222  0E29                     	;# 
  3223  0E2A                     	;# 
  3224  0E2B                     	;# 
  3225  0E2C                     	;# 
  3226  0E2D                     	;# 
  3227  0E2E                     	;# 
  3228  0E2F                     	;# 
  3229  0E90                     	;# 
  3230  0E91                     	;# 
  3231  0E92                     	;# 
  3232  0E94                     	;# 
  3233  0E95                     	;# 
  3234  0E9C                     	;# 
  3235  0E9D                     	;# 
  3236  0E9E                     	;# 
  3237  0E9F                     	;# 
  3238  0EA0                     	;# 
  3239  0EA1                     	;# 
  3240  0EA2                     	;# 
  3241  0EA3                     	;# 
  3242  0EA4                     	;# 
  3243  0EA5                     	;# 
  3244  0EA6                     	;# 
  3245  0EA7                     	;# 
  3246  0F0F                     	;# 
  3247  0F10                     	;# 
  3248  0F11                     	;# 
  3249  0F12                     	;# 
  3250  0F13                     	;# 
  3251  0F14                     	;# 
  3252  0F15                     	;# 
  3253  0F16                     	;# 
  3254  0F17                     	;# 
  3255  0F18                     	;# 
  3256  0F19                     	;# 
  3257  0F1A                     	;# 
  3258  0F1B                     	;# 
  3259  0F1C                     	;# 
  3260  0F1D                     	;# 
  3261  0F1E                     	;# 
  3262  0F1F                     	;# 
  3263  0F20                     	;# 
  3264  0F21                     	;# 
  3265  0F22                     	;# 
  3266  0F23                     	;# 
  3267  0F24                     	;# 
  3268  0F25                     	;# 
  3269  0F26                     	;# 
  3270  0F27                     	;# 
  3271  0F28                     	;# 
  3272  0F29                     	;# 
  3273  0F2A                     	;# 
  3274  0F2B                     	;# 
  3275  0F2C                     	;# 
  3276  0F2D                     	;# 
  3277  0F2E                     	;# 
  3278  0F2F                     	;# 
  3279  0F30                     	;# 
  3280  0F31                     	;# 
  3281  0F32                     	;# 
  3282  0F33                     	;# 
  3283  0F34                     	;# 
  3284  0F35                     	;# 
  3285  0F36                     	;# 
  3286  0F37                     	;# 
  3287  0FE4                     	;# 
  3288  0FE5                     	;# 
  3289  0FE6                     	;# 
  3290  0FE7                     	;# 
  3291  0FE8                     	;# 
  3292  0FE9                     	;# 
  3293  0FEA                     	;# 
  3294  0FEB                     	;# 
  3295  0FED                     	;# 
  3296  0FEE                     	;# 
  3297  0FEF                     	;# 
  3298  0000                     	;# 
  3299  0001                     	;# 
  3300  0002                     	;# 
  3301  0003                     	;# 
  3302  0004                     	;# 
  3303  0005                     	;# 
  3304  0006                     	;# 
  3305  0007                     	;# 
  3306  0008                     	;# 
  3307  0009                     	;# 
  3308  000A                     	;# 
  3309  000B                     	;# 
  3310  000C                     	;# 
  3311  000D                     	;# 
  3312  000E                     	;# 
  3313  0010                     	;# 
  3314  0011                     	;# 
  3315  0012                     	;# 
  3316  0013                     	;# 
  3317  0014                     	;# 
  3318  0015                     	;# 
  3319  0015                     	;# 
  3320  0016                     	;# 
  3321  0016                     	;# 
  3322  0017                     	;# 
  3323  0018                     	;# 
  3324  0019                     	;# 
  3325  0019                     	;# 
  3326  001A                     	;# 
  3327  001B                     	;# 
  3328  001C                     	;# 
  3329  001D                     	;# 
  3330  001E                     	;# 
  3331  001F                     	;# 
  3332  008C                     	;# 
  3333  008D                     	;# 
  3334  008E                     	;# 
  3335  0090                     	;# 
  3336  0091                     	;# 
  3337  0092                     	;# 
  3338  0093                     	;# 
  3339  0094                     	;# 
  3340  0097                     	;# 
  3341  009B                     	;# 
  3342  009B                     	;# 
  3343  009C                     	;# 
  3344  009D                     	;# 
  3345  009E                     	;# 
  3346  009F                     	;# 
  3347  010C                     	;# 
  3348  010D                     	;# 
  3349  010E                     	;# 
  3350  0111                     	;# 
  3351  0112                     	;# 
  3352  0113                     	;# 
  3353  0114                     	;# 
  3354  0115                     	;# 
  3355  0116                     	;# 
  3356  0117                     	;# 
  3357  0118                     	;# 
  3358  0119                     	;# 
  3359  018C                     	;# 
  3360  018D                     	;# 
  3361  018E                     	;# 
  3362  0197                     	;# 
  3363  0199                     	;# 
  3364  0199                     	;# 
  3365  0199                     	;# 
  3366  019A                     	;# 
  3367  019A                     	;# 
  3368  019A                     	;# 
  3369  019B                     	;# 
  3370  019B                     	;# 
  3371  019B                     	;# 
  3372  019B                     	;# 
  3373  019B                     	;# 
  3374  019C                     	;# 
  3375  019C                     	;# 
  3376  019C                     	;# 
  3377  019D                     	;# 
  3378  019D                     	;# 
  3379  019D                     	;# 
  3380  019E                     	;# 
  3381  019E                     	;# 
  3382  019E                     	;# 
  3383  019F                     	;# 
  3384  019F                     	;# 
  3385  019F                     	;# 
  3386  019F                     	;# 
  3387  019F                     	;# 
  3388  020C                     	;# 
  3389  020D                     	;# 
  3390  020E                     	;# 
  3391  0211                     	;# 
  3392  0211                     	;# 
  3393  0212                     	;# 
  3394  0212                     	;# 
  3395  0213                     	;# 
  3396  0213                     	;# 
  3397  0214                     	;# 
  3398  0214                     	;# 
  3399  0215                     	;# 
  3400  0215                     	;# 
  3401  0215                     	;# 
  3402  0215                     	;# 
  3403  0216                     	;# 
  3404  0216                     	;# 
  3405  0217                     	;# 
  3406  0217                     	;# 
  3407  0219                     	;# 
  3408  021A                     	;# 
  3409  021B                     	;# 
  3410  021C                     	;# 
  3411  021D                     	;# 
  3412  021D                     	;# 
  3413  021E                     	;# 
  3414  021F                     	;# 
  3415  028C                     	;# 
  3416  028D                     	;# 
  3417  028E                     	;# 
  3418  0291                     	;# 
  3419  0291                     	;# 
  3420  0292                     	;# 
  3421  0293                     	;# 
  3422  0294                     	;# 
  3423  0295                     	;# 
  3424  0295                     	;# 
  3425  0296                     	;# 
  3426  0297                     	;# 
  3427  0298                     	;# 
  3428  029F                     	;# 
  3429  030C                     	;# 
  3430  030D                     	;# 
  3431  030E                     	;# 
  3432  0311                     	;# 
  3433  0311                     	;# 
  3434  0312                     	;# 
  3435  0313                     	;# 
  3436  0314                     	;# 
  3437  0315                     	;# 
  3438  0315                     	;# 
  3439  0316                     	;# 
  3440  0317                     	;# 
  3441  0318                     	;# 
  3442  038C                     	;# 
  3443  038D                     	;# 
  3444  038E                     	;# 
  3445  0391                     	;# 
  3446  0392                     	;# 
  3447  0393                     	;# 
  3448  0394                     	;# 
  3449  0395                     	;# 
  3450  0396                     	;# 
  3451  0397                     	;# 
  3452  0398                     	;# 
  3453  0399                     	;# 
  3454  039A                     	;# 
  3455  039C                     	;# 
  3456  039D                     	;# 
  3457  039E                     	;# 
  3458  039F                     	;# 
  3459  0411                     	;# 
  3460  0411                     	;# 
  3461  0412                     	;# 
  3462  0413                     	;# 
  3463  0414                     	;# 
  3464  0415                     	;# 
  3465  0416                     	;# 
  3466  0417                     	;# 
  3467  0418                     	;# 
  3468  0418                     	;# 
  3469  0419                     	;# 
  3470  041A                     	;# 
  3471  041B                     	;# 
  3472  041C                     	;# 
  3473  041D                     	;# 
  3474  041E                     	;# 
  3475  041F                     	;# 
  3476  0498                     	;# 
  3477  0498                     	;# 
  3478  0499                     	;# 
  3479  049A                     	;# 
  3480  049B                     	;# 
  3481  049B                     	;# 
  3482  049C                     	;# 
  3483  049D                     	;# 
  3484  049E                     	;# 
  3485  049F                     	;# 
  3486  0617                     	;# 
  3487  0618                     	;# 
  3488  0619                     	;# 
  3489  0619                     	;# 
  3490  061A                     	;# 
  3491  061B                     	;# 
  3492  061C                     	;# 
  3493  061C                     	;# 
  3494  061F                     	;# 
  3495  0691                     	;# 
  3496  0692                     	;# 
  3497  0693                     	;# 
  3498  0694                     	;# 
  3499  0695                     	;# 
  3500  0696                     	;# 
  3501  0697                     	;# 
  3502  0698                     	;# 
  3503  0699                     	;# 
  3504  0711                     	;# 
  3505  0712                     	;# 
  3506  0713                     	;# 
  3507  0714                     	;# 
  3508  0715                     	;# 
  3509  0716                     	;# 
  3510  0717                     	;# 
  3511  0718                     	;# 
  3512  0719                     	;# 
  3513  0891                     	;# 
  3514  0891                     	;# 
  3515  0891                     	;# 
  3516  0891                     	;# 
  3517  0891                     	;# 
  3518  0891                     	;# 
  3519  0892                     	;# 
  3520  0892                     	;# 
  3521  0892                     	;# 
  3522  0893                     	;# 
  3523  0893                     	;# 
  3524  0893                     	;# 
  3525  0893                     	;# 
  3526  0893                     	;# 
  3527  0893                     	;# 
  3528  0894                     	;# 
  3529  0894                     	;# 
  3530  0894                     	;# 
  3531  0895                     	;# 
  3532  0895                     	;# 
  3533  0895                     	;# 
  3534  0896                     	;# 
  3535  0896                     	;# 
  3536  0896                     	;# 
  3537  089B                     	;# 
  3538  0911                     	;# 
  3539  0912                     	;# 
  3540  0913                     	;# 
  3541  0914                     	;# 
  3542  0915                     	;# 
  3543  0916                     	;# 
  3544  0918                     	;# 
  3545  0919                     	;# 
  3546  091A                     	;# 
  3547  091B                     	;# 
  3548  091C                     	;# 
  3549  091D                     	;# 
  3550  091E                     	;# 
  3551  091F                     	;# 
  3552  0E0F                     	;# 
  3553  0E10                     	;# 
  3554  0E11                     	;# 
  3555  0E12                     	;# 
  3556  0E13                     	;# 
  3557  0E14                     	;# 
  3558  0E15                     	;# 
  3559  0E16                     	;# 
  3560  0E17                     	;# 
  3561  0E18                     	;# 
  3562  0E19                     	;# 
  3563  0E1A                     	;# 
  3564  0E1B                     	;# 
  3565  0E1C                     	;# 
  3566  0E1D                     	;# 
  3567  0E1E                     	;# 
  3568  0E1F                     	;# 
  3569  0E20                     	;# 
  3570  0E21                     	;# 
  3571  0E22                     	;# 
  3572  0E24                     	;# 
  3573  0E25                     	;# 
  3574  0E28                     	;# 
  3575  0E29                     	;# 
  3576  0E2A                     	;# 
  3577  0E2B                     	;# 
  3578  0E2C                     	;# 
  3579  0E2D                     	;# 
  3580  0E2E                     	;# 
  3581  0E2F                     	;# 
  3582  0E90                     	;# 
  3583  0E91                     	;# 
  3584  0E92                     	;# 
  3585  0E94                     	;# 
  3586  0E95                     	;# 
  3587  0E9C                     	;# 
  3588  0E9D                     	;# 
  3589  0E9E                     	;# 
  3590  0E9F                     	;# 
  3591  0EA0                     	;# 
  3592  0EA1                     	;# 
  3593  0EA2                     	;# 
  3594  0EA3                     	;# 
  3595  0EA4                     	;# 
  3596  0EA5                     	;# 
  3597  0EA6                     	;# 
  3598  0EA7                     	;# 
  3599  0F0F                     	;# 
  3600  0F10                     	;# 
  3601  0F11                     	;# 
  3602  0F12                     	;# 
  3603  0F13                     	;# 
  3604  0F14                     	;# 
  3605  0F15                     	;# 
  3606  0F16                     	;# 
  3607  0F17                     	;# 
  3608  0F18                     	;# 
  3609  0F19                     	;# 
  3610  0F1A                     	;# 
  3611  0F1B                     	;# 
  3612  0F1C                     	;# 
  3613  0F1D                     	;# 
  3614  0F1E                     	;# 
  3615  0F1F                     	;# 
  3616  0F20                     	;# 
  3617  0F21                     	;# 
  3618  0F22                     	;# 
  3619  0F23                     	;# 
  3620  0F24                     	;# 
  3621  0F25                     	;# 
  3622  0F26                     	;# 
  3623  0F27                     	;# 
  3624  0F28                     	;# 
  3625  0F29                     	;# 
  3626  0F2A                     	;# 
  3627  0F2B                     	;# 
  3628  0F2C                     	;# 
  3629  0F2D                     	;# 
  3630  0F2E                     	;# 
  3631  0F2F                     	;# 
  3632  0F30                     	;# 
  3633  0F31                     	;# 
  3634  0F32                     	;# 
  3635  0F33                     	;# 
  3636  0F34                     	;# 
  3637  0F35                     	;# 
  3638  0F36                     	;# 
  3639  0F37                     	;# 
  3640  0FE4                     	;# 
  3641  0FE5                     	;# 
  3642  0FE6                     	;# 
  3643  0FE7                     	;# 
  3644  0FE8                     	;# 
  3645  0FE9                     	;# 
  3646  0FEA                     	;# 
  3647  0FEB                     	;# 
  3648  0FED                     	;# 
  3649  0FEE                     	;# 
  3650  0FEF                     	;# 
  3651  0000                     	;# 
  3652  0001                     	;# 
  3653  0002                     	;# 
  3654  0003                     	;# 
  3655  0004                     	;# 
  3656  0005                     	;# 
  3657  0006                     	;# 
  3658  0007                     	;# 
  3659  0008                     	;# 
  3660  0009                     	;# 
  3661  000A                     	;# 
  3662  000B                     	;# 
  3663  000C                     	;# 
  3664  000D                     	;# 
  3665  000E                     	;# 
  3666  0010                     	;# 
  3667  0011                     	;# 
  3668  0012                     	;# 
  3669  0013                     	;# 
  3670  0014                     	;# 
  3671  0015                     	;# 
  3672  0015                     	;# 
  3673  0016                     	;# 
  3674  0016                     	;# 
  3675  0017                     	;# 
  3676  0018                     	;# 
  3677  0019                     	;# 
  3678  0019                     	;# 
  3679  001A                     	;# 
  3680  001B                     	;# 
  3681  001C                     	;# 
  3682  001D                     	;# 
  3683  001E                     	;# 
  3684  001F                     	;# 
  3685  008C                     	;# 
  3686  008D                     	;# 
  3687  008E                     	;# 
  3688  0090                     	;# 
  3689  0091                     	;# 
  3690  0092                     	;# 
  3691  0093                     	;# 
  3692  0094                     	;# 
  3693  0097                     	;# 
  3694  009B                     	;# 
  3695  009B                     	;# 
  3696  009C                     	;# 
  3697  009D                     	;# 
  3698  009E                     	;# 
  3699  009F                     	;# 
  3700  010C                     	;# 
  3701  010D                     	;# 
  3702  010E                     	;# 
  3703  0111                     	;# 
  3704  0112                     	;# 
  3705  0113                     	;# 
  3706  0114                     	;# 
  3707  0115                     	;# 
  3708  0116                     	;# 
  3709  0117                     	;# 
  3710  0118                     	;# 
  3711  0119                     	;# 
  3712  018C                     	;# 
  3713  018D                     	;# 
  3714  018E                     	;# 
  3715  0197                     	;# 
  3716  0199                     	;# 
  3717  0199                     	;# 
  3718  0199                     	;# 
  3719  019A                     	;# 
  3720  019A                     	;# 
  3721  019A                     	;# 
  3722  019B                     	;# 
  3723  019B                     	;# 
  3724  019B                     	;# 
  3725  019B                     	;# 
  3726  019B                     	;# 
  3727  019C                     	;# 
  3728  019C                     	;# 
  3729  019C                     	;# 
  3730  019D                     	;# 
  3731  019D                     	;# 
  3732  019D                     	;# 
  3733  019E                     	;# 
  3734  019E                     	;# 
  3735  019E                     	;# 
  3736  019F                     	;# 
  3737  019F                     	;# 
  3738  019F                     	;# 
  3739  019F                     	;# 
  3740  019F                     	;# 
  3741  020C                     	;# 
  3742  020D                     	;# 
  3743  020E                     	;# 
  3744  0211                     	;# 
  3745  0211                     	;# 
  3746  0212                     	;# 
  3747  0212                     	;# 
  3748  0213                     	;# 
  3749  0213                     	;# 
  3750  0214                     	;# 
  3751  0214                     	;# 
  3752  0215                     	;# 
  3753  0215                     	;# 
  3754  0215                     	;# 
  3755  0215                     	;# 
  3756  0216                     	;# 
  3757  0216                     	;# 
  3758  0217                     	;# 
  3759  0217                     	;# 
  3760  0219                     	;# 
  3761  021A                     	;# 
  3762  021B                     	;# 
  3763  021C                     	;# 
  3764  021D                     	;# 
  3765  021D                     	;# 
  3766  021E                     	;# 
  3767  021F                     	;# 
  3768  028C                     	;# 
  3769  028D                     	;# 
  3770  028E                     	;# 
  3771  0291                     	;# 
  3772  0291                     	;# 
  3773  0292                     	;# 
  3774  0293                     	;# 
  3775  0294                     	;# 
  3776  0295                     	;# 
  3777  0295                     	;# 
  3778  0296                     	;# 
  3779  0297                     	;# 
  3780  0298                     	;# 
  3781  029F                     	;# 
  3782  030C                     	;# 
  3783  030D                     	;# 
  3784  030E                     	;# 
  3785  0311                     	;# 
  3786  0311                     	;# 
  3787  0312                     	;# 
  3788  0313                     	;# 
  3789  0314                     	;# 
  3790  0315                     	;# 
  3791  0315                     	;# 
  3792  0316                     	;# 
  3793  0317                     	;# 
  3794  0318                     	;# 
  3795  038C                     	;# 
  3796  038D                     	;# 
  3797  038E                     	;# 
  3798  0391                     	;# 
  3799  0392                     	;# 
  3800  0393                     	;# 
  3801  0394                     	;# 
  3802  0395                     	;# 
  3803  0396                     	;# 
  3804  0397                     	;# 
  3805  0398                     	;# 
  3806  0399                     	;# 
  3807  039A                     	;# 
  3808  039C                     	;# 
  3809  039D                     	;# 
  3810  039E                     	;# 
  3811  039F                     	;# 
  3812  0411                     	;# 
  3813  0411                     	;# 
  3814  0412                     	;# 
  3815  0413                     	;# 
  3816  0414                     	;# 
  3817  0415                     	;# 
  3818  0416                     	;# 
  3819  0417                     	;# 
  3820  0418                     	;# 
  3821  0418                     	;# 
  3822  0419                     	;# 
  3823  041A                     	;# 
  3824  041B                     	;# 
  3825  041C                     	;# 
  3826  041D                     	;# 
  3827  041E                     	;# 
  3828  041F                     	;# 
  3829  0498                     	;# 
  3830  0498                     	;# 
  3831  0499                     	;# 
  3832  049A                     	;# 
  3833  049B                     	;# 
  3834  049B                     	;# 
  3835  049C                     	;# 
  3836  049D                     	;# 
  3837  049E                     	;# 
  3838  049F                     	;# 
  3839  0617                     	;# 
  3840  0618                     	;# 
  3841  0619                     	;# 
  3842  0619                     	;# 
  3843  061A                     	;# 
  3844  061B                     	;# 
  3845  061C                     	;# 
  3846  061C                     	;# 
  3847  061F                     	;# 
  3848  0691                     	;# 
  3849  0692                     	;# 
  3850  0693                     	;# 
  3851  0694                     	;# 
  3852  0695                     	;# 
  3853  0696                     	;# 
  3854  0697                     	;# 
  3855  0698                     	;# 
  3856  0699                     	;# 
  3857  0711                     	;# 
  3858  0712                     	;# 
  3859  0713                     	;# 
  3860  0714                     	;# 
  3861  0715                     	;# 
  3862  0716                     	;# 
  3863  0717                     	;# 
  3864  0718                     	;# 
  3865  0719                     	;# 
  3866  0891                     	;# 
  3867  0891                     	;# 
  3868  0891                     	;# 
  3869  0891                     	;# 
  3870  0891                     	;# 
  3871  0891                     	;# 
  3872  0892                     	;# 
  3873  0892                     	;# 
  3874  0892                     	;# 
  3875  0893                     	;# 
  3876  0893                     	;# 
  3877  0893                     	;# 
  3878  0893                     	;# 
  3879  0893                     	;# 
  3880  0893                     	;# 
  3881  0894                     	;# 
  3882  0894                     	;# 
  3883  0894                     	;# 
  3884  0895                     	;# 
  3885  0895                     	;# 
  3886  0895                     	;# 
  3887  0896                     	;# 
  3888  0896                     	;# 
  3889  0896                     	;# 
  3890  089B                     	;# 
  3891  0911                     	;# 
  3892  0912                     	;# 
  3893  0913                     	;# 
  3894  0914                     	;# 
  3895  0915                     	;# 
  3896  0916                     	;# 
  3897  0918                     	;# 
  3898  0919                     	;# 
  3899  091A                     	;# 
  3900  091B                     	;# 
  3901  091C                     	;# 
  3902  091D                     	;# 
  3903  091E                     	;# 
  3904  091F                     	;# 
  3905  0E0F                     	;# 
  3906  0E10                     	;# 
  3907  0E11                     	;# 
  3908  0E12                     	;# 
  3909  0E13                     	;# 
  3910  0E14                     	;# 
  3911  0E15                     	;# 
  3912  0E16                     	;# 
  3913  0E17                     	;# 
  3914  0E18                     	;# 
  3915  0E19                     	;# 
  3916  0E1A                     	;# 
  3917  0E1B                     	;# 
  3918  0E1C                     	;# 
  3919  0E1D                     	;# 
  3920  0E1E                     	;# 
  3921  0E1F                     	;# 
  3922  0E20                     	;# 
  3923  0E21                     	;# 
  3924  0E22                     	;# 
  3925  0E24                     	;# 
  3926  0E25                     	;# 
  3927  0E28                     	;# 
  3928  0E29                     	;# 
  3929  0E2A                     	;# 
  3930  0E2B                     	;# 
  3931  0E2C                     	;# 
  3932  0E2D                     	;# 
  3933  0E2E                     	;# 
  3934  0E2F                     	;# 
  3935  0E90                     	;# 
  3936  0E91                     	;# 
  3937  0E92                     	;# 
  3938  0E94                     	;# 
  3939  0E95                     	;# 
  3940  0E9C                     	;# 
  3941  0E9D                     	;# 
  3942  0E9E                     	;# 
  3943  0E9F                     	;# 
  3944  0EA0                     	;# 
  3945  0EA1                     	;# 
  3946  0EA2                     	;# 
  3947  0EA3                     	;# 
  3948  0EA4                     	;# 
  3949  0EA5                     	;# 
  3950  0EA6                     	;# 
  3951  0EA7                     	;# 
  3952  0F0F                     	;# 
  3953  0F10                     	;# 
  3954  0F11                     	;# 
  3955  0F12                     	;# 
  3956  0F13                     	;# 
  3957  0F14                     	;# 
  3958  0F15                     	;# 
  3959  0F16                     	;# 
  3960  0F17                     	;# 
  3961  0F18                     	;# 
  3962  0F19                     	;# 
  3963  0F1A                     	;# 
  3964  0F1B                     	;# 
  3965  0F1C                     	;# 
  3966  0F1D                     	;# 
  3967  0F1E                     	;# 
  3968  0F1F                     	;# 
  3969  0F20                     	;# 
  3970  0F21                     	;# 
  3971  0F22                     	;# 
  3972  0F23                     	;# 
  3973  0F24                     	;# 
  3974  0F25                     	;# 
  3975  0F26                     	;# 
  3976  0F27                     	;# 
  3977  0F28                     	;# 
  3978  0F29                     	;# 
  3979  0F2A                     	;# 
  3980  0F2B                     	;# 
  3981  0F2C                     	;# 
  3982  0F2D                     	;# 
  3983  0F2E                     	;# 
  3984  0F2F                     	;# 
  3985  0F30                     	;# 
  3986  0F31                     	;# 
  3987  0F32                     	;# 
  3988  0F33                     	;# 
  3989  0F34                     	;# 
  3990  0F35                     	;# 
  3991  0F36                     	;# 
  3992  0F37                     	;# 
  3993  0FE4                     	;# 
  3994  0FE5                     	;# 
  3995  0FE6                     	;# 
  3996  0FE7                     	;# 
  3997  0FE8                     	;# 
  3998  0FE9                     	;# 
  3999  0FEA                     	;# 
  4000  0FEB                     	;# 
  4001  0FED                     	;# 
  4002  0FEE                     	;# 
  4003  0FEF                     	;# 
  4004  0000                     	;# 
  4005  0001                     	;# 
  4006  0002                     	;# 
  4007  0003                     	;# 
  4008  0004                     	;# 
  4009  0005                     	;# 
  4010  0006                     	;# 
  4011  0007                     	;# 
  4012  0008                     	;# 
  4013  0009                     	;# 
  4014  000A                     	;# 
  4015  000B                     	;# 
  4016  000C                     	;# 
  4017  000D                     	;# 
  4018  000E                     	;# 
  4019  0010                     	;# 
  4020  0011                     	;# 
  4021  0012                     	;# 
  4022  0013                     	;# 
  4023  0014                     	;# 
  4024  0015                     	;# 
  4025  0015                     	;# 
  4026  0016                     	;# 
  4027  0016                     	;# 
  4028  0017                     	;# 
  4029  0018                     	;# 
  4030  0019                     	;# 
  4031  0019                     	;# 
  4032  001A                     	;# 
  4033  001B                     	;# 
  4034  001C                     	;# 
  4035  001D                     	;# 
  4036  001E                     	;# 
  4037  001F                     	;# 
  4038  008C                     	;# 
  4039  008D                     	;# 
  4040  008E                     	;# 
  4041  0090                     	;# 
  4042  0091                     	;# 
  4043  0092                     	;# 
  4044  0093                     	;# 
  4045  0094                     	;# 
  4046  0097                     	;# 
  4047  009B                     	;# 
  4048  009B                     	;# 
  4049  009C                     	;# 
  4050  009D                     	;# 
  4051  009E                     	;# 
  4052  009F                     	;# 
  4053  010C                     	;# 
  4054  010D                     	;# 
  4055  010E                     	;# 
  4056  0111                     	;# 
  4057  0112                     	;# 
  4058  0113                     	;# 
  4059  0114                     	;# 
  4060  0115                     	;# 
  4061  0116                     	;# 
  4062  0117                     	;# 
  4063  0118                     	;# 
  4064  0119                     	;# 
  4065  018C                     	;# 
  4066  018D                     	;# 
  4067  018E                     	;# 
  4068  0197                     	;# 
  4069  0199                     	;# 
  4070  0199                     	;# 
  4071  0199                     	;# 
  4072  019A                     	;# 
  4073  019A                     	;# 
  4074  019A                     	;# 
  4075  019B                     	;# 
  4076  019B                     	;# 
  4077  019B                     	;# 
  4078  019B                     	;# 
  4079  019B                     	;# 
  4080  019C                     	;# 
  4081  019C                     	;# 
  4082  019C                     	;# 
  4083  019D                     	;# 
  4084  019D                     	;# 
  4085  019D                     	;# 
  4086  019E                     	;# 
  4087  019E                     	;# 
  4088  019E                     	;# 
  4089  019F                     	;# 
  4090  019F                     	;# 
  4091  019F                     	;# 
  4092  019F                     	;# 
  4093  019F                     	;# 
  4094  020C                     	;# 
  4095  020D                     	;# 
  4096  020E                     	;# 
  4097  0211                     	;# 
  4098  0211                     	;# 
  4099  0212                     	;# 
  4100  0212                     	;# 
  4101  0213                     	;# 
  4102  0213                     	;# 
  4103  0214                     	;# 
  4104  0214                     	;# 
  4105  0215                     	;# 
  4106  0215                     	;# 
  4107  0215                     	;# 
  4108  0215                     	;# 
  4109  0216                     	;# 
  4110  0216                     	;# 
  4111  0217                     	;# 
  4112  0217                     	;# 
  4113  0219                     	;# 
  4114  021A                     	;# 
  4115  021B                     	;# 
  4116  021C                     	;# 
  4117  021D                     	;# 
  4118  021D                     	;# 
  4119  021E                     	;# 
  4120  021F                     	;# 
  4121  028C                     	;# 
  4122  028D                     	;# 
  4123  028E                     	;# 
  4124  0291                     	;# 
  4125  0291                     	;# 
  4126  0292                     	;# 
  4127  0293                     	;# 
  4128  0294                     	;# 
  4129  0295                     	;# 
  4130  0295                     	;# 
  4131  0296                     	;# 
  4132  0297                     	;# 
  4133  0298                     	;# 
  4134  029F                     	;# 
  4135  030C                     	;# 
  4136  030D                     	;# 
  4137  030E                     	;# 
  4138  0311                     	;# 
  4139  0311                     	;# 
  4140  0312                     	;# 
  4141  0313                     	;# 
  4142  0314                     	;# 
  4143  0315                     	;# 
  4144  0315                     	;# 
  4145  0316                     	;# 
  4146  0317                     	;# 
  4147  0318                     	;# 
  4148  038C                     	;# 
  4149  038D                     	;# 
  4150  038E                     	;# 
  4151  0391                     	;# 
  4152  0392                     	;# 
  4153  0393                     	;# 
  4154  0394                     	;# 
  4155  0395                     	;# 
  4156  0396                     	;# 
  4157  0397                     	;# 
  4158  0398                     	;# 
  4159  0399                     	;# 
  4160  039A                     	;# 
  4161  039C                     	;# 
  4162  039D                     	;# 
  4163  039E                     	;# 
  4164  039F                     	;# 
  4165  0411                     	;# 
  4166  0411                     	;# 
  4167  0412                     	;# 
  4168  0413                     	;# 
  4169  0414                     	;# 
  4170  0415                     	;# 
  4171  0416                     	;# 
  4172  0417                     	;# 
  4173  0418                     	;# 
  4174  0418                     	;# 
  4175  0419                     	;# 
  4176  041A                     	;# 
  4177  041B                     	;# 
  4178  041C                     	;# 
  4179  041D                     	;# 
  4180  041E                     	;# 
  4181  041F                     	;# 
  4182  0498                     	;# 
  4183  0498                     	;# 
  4184  0499                     	;# 
  4185  049A                     	;# 
  4186  049B                     	;# 
  4187  049B                     	;# 
  4188  049C                     	;# 
  4189  049D                     	;# 
  4190  049E                     	;# 
  4191  049F                     	;# 
  4192  0617                     	;# 
  4193  0618                     	;# 
  4194  0619                     	;# 
  4195  0619                     	;# 
  4196  061A                     	;# 
  4197  061B                     	;# 
  4198  061C                     	;# 
  4199  061C                     	;# 
  4200  061F                     	;# 
  4201  0691                     	;# 
  4202  0692                     	;# 
  4203  0693                     	;# 
  4204  0694                     	;# 
  4205  0695                     	;# 
  4206  0696                     	;# 
  4207  0697                     	;# 
  4208  0698                     	;# 
  4209  0699                     	;# 
  4210  0711                     	;# 
  4211  0712                     	;# 
  4212  0713                     	;# 
  4213  0714                     	;# 
  4214  0715                     	;# 
  4215  0716                     	;# 
  4216  0717                     	;# 
  4217  0718                     	;# 
  4218  0719                     	;# 
  4219  0891                     	;# 
  4220  0891                     	;# 
  4221  0891                     	;# 
  4222  0891                     	;# 
  4223  0891                     	;# 
  4224  0891                     	;# 
  4225  0892                     	;# 
  4226  0892                     	;# 
  4227  0892                     	;# 
  4228  0893                     	;# 
  4229  0893                     	;# 
  4230  0893                     	;# 
  4231  0893                     	;# 
  4232  0893                     	;# 
  4233  0893                     	;# 
  4234  0894                     	;# 
  4235  0894                     	;# 
  4236  0894                     	;# 
  4237  0895                     	;# 
  4238  0895                     	;# 
  4239  0895                     	;# 
  4240  0896                     	;# 
  4241  0896                     	;# 
  4242  0896                     	;# 
  4243  089B                     	;# 
  4244  0911                     	;# 
  4245  0912                     	;# 
  4246  0913                     	;# 
  4247  0914                     	;# 
  4248  0915                     	;# 
  4249  0916                     	;# 
  4250  0918                     	;# 
  4251  0919                     	;# 
  4252  091A                     	;# 
  4253  091B                     	;# 
  4254  091C                     	;# 
  4255  091D                     	;# 
  4256  091E                     	;# 
  4257  091F                     	;# 
  4258  0E0F                     	;# 
  4259  0E10                     	;# 
  4260  0E11                     	;# 
  4261  0E12                     	;# 
  4262  0E13                     	;# 
  4263  0E14                     	;# 
  4264  0E15                     	;# 
  4265  0E16                     	;# 
  4266  0E17                     	;# 
  4267  0E18                     	;# 
  4268  0E19                     	;# 
  4269  0E1A                     	;# 
  4270  0E1B                     	;# 
  4271  0E1C                     	;# 
  4272  0E1D                     	;# 
  4273  0E1E                     	;# 
  4274  0E1F                     	;# 
  4275  0E20                     	;# 
  4276  0E21                     	;# 
  4277  0E22                     	;# 
  4278  0E24                     	;# 
  4279  0E25                     	;# 
  4280  0E28                     	;# 
  4281  0E29                     	;# 
  4282  0E2A                     	;# 
  4283  0E2B                     	;# 
  4284  0E2C                     	;# 
  4285  0E2D                     	;# 
  4286  0E2E                     	;# 
  4287  0E2F                     	;# 
  4288  0E90                     	;# 
  4289  0E91                     	;# 
  4290  0E92                     	;# 
  4291  0E94                     	;# 
  4292  0E95                     	;# 
  4293  0E9C                     	;# 
  4294  0E9D                     	;# 
  4295  0E9E                     	;# 
  4296  0E9F                     	;# 
  4297  0EA0                     	;# 
  4298  0EA1                     	;# 
  4299  0EA2                     	;# 
  4300  0EA3                     	;# 
  4301  0EA4                     	;# 
  4302  0EA5                     	;# 
  4303  0EA6                     	;# 
  4304  0EA7                     	;# 
  4305  0F0F                     	;# 
  4306  0F10                     	;# 
  4307  0F11                     	;# 
  4308  0F12                     	;# 
  4309  0F13                     	;# 
  4310  0F14                     	;# 
  4311  0F15                     	;# 
  4312  0F16                     	;# 
  4313  0F17                     	;# 
  4314  0F18                     	;# 
  4315  0F19                     	;# 
  4316  0F1A                     	;# 
  4317  0F1B                     	;# 
  4318  0F1C                     	;# 
  4319  0F1D                     	;# 
  4320  0F1E                     	;# 
  4321  0F1F                     	;# 
  4322  0F20                     	;# 
  4323  0F21                     	;# 
  4324  0F22                     	;# 
  4325  0F23                     	;# 
  4326  0F24                     	;# 
  4327  0F25                     	;# 
  4328  0F26                     	;# 
  4329  0F27                     	;# 
  4330  0F28                     	;# 
  4331  0F29                     	;# 
  4332  0F2A                     	;# 
  4333  0F2B                     	;# 
  4334  0F2C                     	;# 
  4335  0F2D                     	;# 
  4336  0F2E                     	;# 
  4337  0F2F                     	;# 
  4338  0F30                     	;# 
  4339  0F31                     	;# 
  4340  0F32                     	;# 
  4341  0F33                     	;# 
  4342  0F34                     	;# 
  4343  0F35                     	;# 
  4344  0F36                     	;# 
  4345  0F37                     	;# 
  4346  0FE4                     	;# 
  4347  0FE5                     	;# 
  4348  0FE6                     	;# 
  4349  0FE7                     	;# 
  4350  0FE8                     	;# 
  4351  0FE9                     	;# 
  4352  0FEA                     	;# 
  4353  0FEB                     	;# 
  4354  0FED                     	;# 
  4355  0FEE                     	;# 
  4356  0FEF                     	;# 
  4357  0000                     	;# 
  4358  0001                     	;# 
  4359  0002                     	;# 
  4360  0003                     	;# 
  4361  0004                     	;# 
  4362  0005                     	;# 
  4363  0006                     	;# 
  4364  0007                     	;# 
  4365  0008                     	;# 
  4366  0009                     	;# 
  4367  000A                     	;# 
  4368  000B                     	;# 
  4369  000C                     	;# 
  4370  000D                     	;# 
  4371  000E                     	;# 
  4372  0010                     	;# 
  4373  0011                     	;# 
  4374  0012                     	;# 
  4375  0013                     	;# 
  4376  0014                     	;# 
  4377  0015                     	;# 
  4378  0015                     	;# 
  4379  0016                     	;# 
  4380  0016                     	;# 
  4381  0017                     	;# 
  4382  0018                     	;# 
  4383  0019                     	;# 
  4384  0019                     	;# 
  4385  001A                     	;# 
  4386  001B                     	;# 
  4387  001C                     	;# 
  4388  001D                     	;# 
  4389  001E                     	;# 
  4390  001F                     	;# 
  4391  008C                     	;# 
  4392  008D                     	;# 
  4393  008E                     	;# 
  4394  0090                     	;# 
  4395  0091                     	;# 
  4396  0092                     	;# 
  4397  0093                     	;# 
  4398  0094                     	;# 
  4399  0097                     	;# 
  4400  009B                     	;# 
  4401  009B                     	;# 
  4402  009C                     	;# 
  4403  009D                     	;# 
  4404  009E                     	;# 
  4405  009F                     	;# 
  4406  010C                     	;# 
  4407  010D                     	;# 
  4408  010E                     	;# 
  4409  0111                     	;# 
  4410  0112                     	;# 
  4411  0113                     	;# 
  4412  0114                     	;# 
  4413  0115                     	;# 
  4414  0116                     	;# 
  4415  0117                     	;# 
  4416  0118                     	;# 
  4417  0119                     	;# 
  4418  018C                     	;# 
  4419  018D                     	;# 
  4420  018E                     	;# 
  4421  0197                     	;# 
  4422  0199                     	;# 
  4423  0199                     	;# 
  4424  0199                     	;# 
  4425  019A                     	;# 
  4426  019A                     	;# 
  4427  019A                     	;# 
  4428  019B                     	;# 
  4429  019B                     	;# 
  4430  019B                     	;# 
  4431  019B                     	;# 
  4432  019B                     	;# 
  4433  019C                     	;# 
  4434  019C                     	;# 
  4435  019C                     	;# 
  4436  019D                     	;# 
  4437  019D                     	;# 
  4438  019D                     	;# 
  4439  019E                     	;# 
  4440  019E                     	;# 
  4441  019E                     	;# 
  4442  019F                     	;# 
  4443  019F                     	;# 
  4444  019F                     	;# 
  4445  019F                     	;# 
  4446  019F                     	;# 
  4447  020C                     	;# 
  4448  020D                     	;# 
  4449  020E                     	;# 
  4450  0211                     	;# 
  4451  0211                     	;# 
  4452  0212                     	;# 
  4453  0212                     	;# 
  4454  0213                     	;# 
  4455  0213                     	;# 
  4456  0214                     	;# 
  4457  0214                     	;# 
  4458  0215                     	;# 
  4459  0215                     	;# 
  4460  0215                     	;# 
  4461  0215                     	;# 
  4462  0216                     	;# 
  4463  0216                     	;# 
  4464  0217                     	;# 
  4465  0217                     	;# 
  4466  0219                     	;# 
  4467  021A                     	;# 
  4468  021B                     	;# 
  4469  021C                     	;# 
  4470  021D                     	;# 
  4471  021D                     	;# 
  4472  021E                     	;# 
  4473  021F                     	;# 
  4474  028C                     	;# 
  4475  028D                     	;# 
  4476  028E                     	;# 
  4477  0291                     	;# 
  4478  0291                     	;# 
  4479  0292                     	;# 
  4480  0293                     	;# 
  4481  0294                     	;# 
  4482  0295                     	;# 
  4483  0295                     	;# 
  4484  0296                     	;# 
  4485  0297                     	;# 
  4486  0298                     	;# 
  4487  029F                     	;# 
  4488  030C                     	;# 
  4489  030D                     	;# 
  4490  030E                     	;# 
  4491  0311                     	;# 
  4492  0311                     	;# 
  4493  0312                     	;# 
  4494  0313                     	;# 
  4495  0314                     	;# 
  4496  0315                     	;# 
  4497  0315                     	;# 
  4498  0316                     	;# 
  4499  0317                     	;# 
  4500  0318                     	;# 
  4501  038C                     	;# 
  4502  038D                     	;# 
  4503  038E                     	;# 
  4504  0391                     	;# 
  4505  0392                     	;# 
  4506  0393                     	;# 
  4507  0394                     	;# 
  4508  0395                     	;# 
  4509  0396                     	;# 
  4510  0397                     	;# 
  4511  0398                     	;# 
  4512  0399                     	;# 
  4513  039A                     	;# 
  4514  039C                     	;# 
  4515  039D                     	;# 
  4516  039E                     	;# 
  4517  039F                     	;# 
  4518  0411                     	;# 
  4519  0411                     	;# 
  4520  0412                     	;# 
  4521  0413                     	;# 
  4522  0414                     	;# 
  4523  0415                     	;# 
  4524  0416                     	;# 
  4525  0417                     	;# 
  4526  0418                     	;# 
  4527  0418                     	;# 
  4528  0419                     	;# 
  4529  041A                     	;# 
  4530  041B                     	;# 
  4531  041C                     	;# 
  4532  041D                     	;# 
  4533  041E                     	;# 
  4534  041F                     	;# 
  4535  0498                     	;# 
  4536  0498                     	;# 
  4537  0499                     	;# 
  4538  049A                     	;# 
  4539  049B                     	;# 
  4540  049B                     	;# 
  4541  049C                     	;# 
  4542  049D                     	;# 
  4543  049E                     	;# 
  4544  049F                     	;# 
  4545  0617                     	;# 
  4546  0618                     	;# 
  4547  0619                     	;# 
  4548  0619                     	;# 
  4549  061A                     	;# 
  4550  061B                     	;# 
  4551  061C                     	;# 
  4552  061C                     	;# 
  4553  061F                     	;# 
  4554  0691                     	;# 
  4555  0692                     	;# 
  4556  0693                     	;# 
  4557  0694                     	;# 
  4558  0695                     	;# 
  4559  0696                     	;# 
  4560  0697                     	;# 
  4561  0698                     	;# 
  4562  0699                     	;# 
  4563  0711                     	;# 
  4564  0712                     	;# 
  4565  0713                     	;# 
  4566  0714                     	;# 
  4567  0715                     	;# 
  4568  0716                     	;# 
  4569  0717                     	;# 
  4570  0718                     	;# 
  4571  0719                     	;# 
  4572  0891                     	;# 
  4573  0891                     	;# 
  4574  0891                     	;# 
  4575  0891                     	;# 
  4576  0891                     	;# 
  4577  0891                     	;# 
  4578  0892                     	;# 
  4579  0892                     	;# 
  4580  0892                     	;# 
  4581  0893                     	;# 
  4582  0893                     	;# 
  4583  0893                     	;# 
  4584  0893                     	;# 
  4585  0893                     	;# 
  4586  0893                     	;# 
  4587  0894                     	;# 
  4588  0894                     	;# 
  4589  0894                     	;# 
  4590  0895                     	;# 
  4591  0895                     	;# 
  4592  0895                     	;# 
  4593  0896                     	;# 
  4594  0896                     	;# 
  4595  0896                     	;# 
  4596  089B                     	;# 
  4597  0911                     	;# 
  4598  0912                     	;# 
  4599  0913                     	;# 
  4600  0914                     	;# 
  4601  0915                     	;# 
  4602  0916                     	;# 
  4603  0918                     	;# 
  4604  0919                     	;# 
  4605  091A                     	;# 
  4606  091B                     	;# 
  4607  091C                     	;# 
  4608  091D                     	;# 
  4609  091E                     	;# 
  4610  091F                     	;# 
  4611  0E0F                     	;# 
  4612  0E10                     	;# 
  4613  0E11                     	;# 
  4614  0E12                     	;# 
  4615  0E13                     	;# 
  4616  0E14                     	;# 
  4617  0E15                     	;# 
  4618  0E16                     	;# 
  4619  0E17                     	;# 
  4620  0E18                     	;# 
  4621  0E19                     	;# 
  4622  0E1A                     	;# 
  4623  0E1B                     	;# 
  4624  0E1C                     	;# 
  4625  0E1D                     	;# 
  4626  0E1E                     	;# 
  4627  0E1F                     	;# 
  4628  0E20                     	;# 
  4629  0E21                     	;# 
  4630  0E22                     	;# 
  4631  0E24                     	;# 
  4632  0E25                     	;# 
  4633  0E28                     	;# 
  4634  0E29                     	;# 
  4635  0E2A                     	;# 
  4636  0E2B                     	;# 
  4637  0E2C                     	;# 
  4638  0E2D                     	;# 
  4639  0E2E                     	;# 
  4640  0E2F                     	;# 
  4641  0E90                     	;# 
  4642  0E91                     	;# 
  4643  0E92                     	;# 
  4644  0E94                     	;# 
  4645  0E95                     	;# 
  4646  0E9C                     	;# 
  4647  0E9D                     	;# 
  4648  0E9E                     	;# 
  4649  0E9F                     	;# 
  4650  0EA0                     	;# 
  4651  0EA1                     	;# 
  4652  0EA2                     	;# 
  4653  0EA3                     	;# 
  4654  0EA4                     	;# 
  4655  0EA5                     	;# 
  4656  0EA6                     	;# 
  4657  0EA7                     	;# 
  4658  0F0F                     	;# 
  4659  0F10                     	;# 
  4660  0F11                     	;# 
  4661  0F12                     	;# 
  4662  0F13                     	;# 
  4663  0F14                     	;# 
  4664  0F15                     	;# 
  4665  0F16                     	;# 
  4666  0F17                     	;# 
  4667  0F18                     	;# 
  4668  0F19                     	;# 
  4669  0F1A                     	;# 
  4670  0F1B                     	;# 
  4671  0F1C                     	;# 
  4672  0F1D                     	;# 
  4673  0F1E                     	;# 
  4674  0F1F                     	;# 
  4675  0F20                     	;# 
  4676  0F21                     	;# 
  4677  0F22                     	;# 
  4678  0F23                     	;# 
  4679  0F24                     	;# 
  4680  0F25                     	;# 
  4681  0F26                     	;# 
  4682  0F27                     	;# 
  4683  0F28                     	;# 
  4684  0F29                     	;# 
  4685  0F2A                     	;# 
  4686  0F2B                     	;# 
  4687  0F2C                     	;# 
  4688  0F2D                     	;# 
  4689  0F2E                     	;# 
  4690  0F2F                     	;# 
  4691  0F30                     	;# 
  4692  0F31                     	;# 
  4693  0F32                     	;# 
  4694  0F33                     	;# 
  4695  0F34                     	;# 
  4696  0F35                     	;# 
  4697  0F36                     	;# 
  4698  0F37                     	;# 
  4699  0FE4                     	;# 
  4700  0FE5                     	;# 
  4701  0FE6                     	;# 
  4702  0FE7                     	;# 
  4703  0FE8                     	;# 
  4704  0FE9                     	;# 
  4705  0FEA                     	;# 
  4706  0FEB                     	;# 
  4707  0FED                     	;# 
  4708  0FEE                     	;# 
  4709  0FEF                     	;# 
  4710                           
  4711 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
  4712  0000                     
  4713 ;; Function _TMR1_DefaultInterruptHandler is unused but had its address taken
  4714  001C                     _T1GCONbits	set	28
  4715  001B                     _T1CONbits	set	27
  4716  001B                     _T1CON	set	27
  4717  0011                     _PIR1bits	set	17
  4718  0019                     _TMR1L	set	25
  4719  001A                     _TMR1H	set	26
  4720  001C                     _T1GCON	set	28
  4721  0014                     _PIR4bits	set	20
  4722  0017                     _T0CON0bits	set	23
  4723  0017                     _T0CON0	set	23
  4724  0010                     _PIR0bits	set	16
  4725  0015                     _TMR0L	set	21
  4726  0016                     _TMR0H	set	22
  4727  0018                     _T0CON1	set	24
  4728  000D                     _PORTBbits	set	13
  4729  000E                     _PORTCbits	set	14
  4730  000C                     _PORTAbits	set	12
  4731  000B                     _INTCONbits	set	11
  4732  0014                     _PIR4	set	20
  4733  0013                     _PIR3	set	19
  4734  0012                     _PIR2	set	18
  4735  0011                     _PIR1	set	17
  4736  0010                     _PIR0	set	16
  4737  0091                     _PIE1bits	set	145
  4738  0094                     _PIE4bits	set	148
  4739  0090                     _PIE0bits	set	144
  4740  0097                     _WDTCON	set	151
  4741  008D                     _TRISBbits	set	141
  4742  008E                     _TRISCbits	set	142
  4743  008C                     _TRISAbits	set	140
  4744  008E                     _TRISC	set	142
  4745  008D                     _TRISB	set	141
  4746  008C                     _TRISA	set	140
  4747  0094                     _PIE4	set	148
  4748  0093                     _PIE3	set	147
  4749  0092                     _PIE2	set	146
  4750  0091                     _PIE1	set	145
  4751  0090                     _PIE0	set	144
  4752  010D                     _LATBbits	set	269
  4753  010E                     _LATCbits	set	270
  4754  010C                     _LATAbits	set	268
  4755  010E                     _LATC	set	270
  4756  010D                     _LATB	set	269
  4757  010C                     _LATA	set	268
  4758  0199                     _RC1REG	set	409
  4759  019D                     _RC1STAbits	set	413
  4760  019A                     _TX1REG	set	410
  4761  019E                     _TX1STAbits	set	414
  4762  019C                     _SP1BRGH	set	412
  4763  019B                     _SP1BRGL	set	411
  4764  019E                     _TX1STA	set	414
  4765  019D                     _RC1STA	set	413
  4766  019F                     _BAUD1CON	set	415
  4767  018C                     _ANSELA	set	396
  4768  018D                     _ANSELB	set	397
  4769  018E                     _ANSELC	set	398
  4770  020E                     _WPUC	set	526
  4771  020C                     _WPUA	set	524
  4772  020D                     _WPUB	set	525
  4773  0295                     _CCPR2L	set	661
  4774  0296                     _CCPR2H	set	662
  4775  0298                     _CCP2CAP	set	664
  4776  0297                     _CCP2CON	set	663
  4777  029F                     _CCPTMRSbits	set	671
  4778  0291                     _CCPR1L	set	657
  4779  0292                     _CCPR1H	set	658
  4780  0294                     _CCP1CAP	set	660
  4781  0293                     _CCP1CON	set	659
  4782  028E                     _ODCONC	set	654
  4783  028D                     _ODCONB	set	653
  4784  028C                     _ODCONA	set	652
  4785  0311                     _CCPR3L	set	785
  4786  0312                     _CCPR3H	set	786
  4787  0314                     _CCP3CAP	set	788
  4788  0313                     _CCP3CON	set	787
  4789  030E                     _SLRCONC	set	782
  4790  030D                     _SLRCONB	set	781
  4791  030C                     _SLRCONA	set	780
  4792  038E                     _INLVLC	set	910
  4793  038D                     _INLVLB	set	909
  4794  038C                     _INLVLA	set	908
  4795  0916                     _PMD5	set	2326
  4796  0915                     _PMD4	set	2325
  4797  0914                     _PMD3	set	2324
  4798  0913                     _PMD2	set	2323
  4799  0912                     _PMD1	set	2322
  4800  0911                     _PMD0	set	2321
  4801  091E                     _OSCTUNE	set	2334
  4802  091F                     _OSCFRQ	set	2335
  4803  091D                     _OSCEN	set	2333
  4804  091B                     _OSCCON3	set	2331
  4805  0919                     _OSCCON1	set	2329
  4806  48E0                     _PLLR	set	18656
  4807  0E14                     _CCP1PPS	set	3604
  4808  0E16                     _CCP3PPS	set	3606
  4809  0E15                     _CCP2PPS	set	3605
  4810  0E24                     _RXPPS	set	3620
  4811  0EA4                     _RC4PPS	set	3748
  4812                           
  4813                           	psect	stringtext1
  4814  1000                     __pstringtext1:
  4815  1000                     STR_1:
  4816  1000  3444               	retlw	68	;'D'
  4817  1001  3469               	retlw	105	;'i'
  4818  1002  3473               	retlw	115	;'s'
  4819  1003  3474               	retlw	116	;'t'
  4820  1004  3461               	retlw	97	;'a'
  4821  1005  346E               	retlw	110	;'n'
  4822  1006  3463               	retlw	99	;'c'
  4823  1007  3465               	retlw	101	;'e'
  4824  1008  3420               	retlw	32	;' '
  4825  1009  343D               	retlw	61	;'='
  4826  100A  3420               	retlw	32	;' '
  4827  100B  3425               	retlw	37	;'%'
  4828  100C  3475               	retlw	117	;'u'
  4829  100D  3420               	retlw	32	;' '
  4830  100E  340A               	retlw	10
  4831  100F  3400               	retlw	0
  4832                           
  4833                           	psect	stringtext2
  4834  0000                     __pstringtext2:
  4835                           
  4836                           	psect	cinit
  4837  0076                     start_initialization:	
  4838                           ; #config settings
  4839                           
  4840  0076                     __initialization:
  4841                           
  4842                           ; Clear objects allocated to COMMON
  4843  0076  01FB               	clrf	__pbssCOMMON& (0+127)
  4844  0077  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
  4845  0078  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
  4846                           
  4847                           ; Clear objects allocated to BANK1
  4848  0079  30A0               	movlw	low __pbssBANK1
  4849  007A  0084               	movwf	4
  4850  007B  3000               	movlw	high __pbssBANK1
  4851  007C  0085               	movwf	5
  4852  007D  303F               	movlw	63
  4853  007E  318B  2398  3180   	fcall	clear_ram0
  4854                           
  4855                           ; Clear objects allocated to BANK2
  4856  0081  3020               	movlw	low __pbssBANK2
  4857  0082  0084               	movwf	4
  4858  0083  3001               	movlw	high __pbssBANK2
  4859  0084  0085               	movwf	5
  4860  0085  3044               	movlw	68
  4861  0086  318B  2398  3180   	fcall	clear_ram0
  4862  0089                     end_of_initialization:	
  4863                           ;End of C runtime variable initialization code
  4864                           
  4865  0089                     __end_of__initialization:
  4866  0089  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4867  008A  0020               	movlb	0
  4868  008B  3183  2BB5         	ljmp	_main	;jump to C main() function
  4869                           
  4870                           	psect	bssCOMMON
  4871  007B                     __pbssCOMMON:
  4872  007B                     _eusartRxTail:
  4873  007B                     	ds	1
  4874  007C                     _eusartRxHead:
  4875  007C                     	ds	1
  4876  007D                     _eusartTxHead:
  4877  007D                     	ds	1
  4878                           
  4879                           	psect	bssBANK1
  4880  00A0                     __pbssBANK1:
  4881  00A0                     _micros@FR_Timer$F158:
  4882  00A0                     	ds	4
  4883  00A4                     _millis:
  4884  00A4                     	ds	4
  4885  00A8                     _micros:
  4886  00A8                     	ds	4
  4887  00AC                     _nout:
  4888  00AC                     	ds	2
  4889  00AE                     _width:
  4890  00AE                     	ds	2
  4891  00B0                     _prec:
  4892  00B0                     	ds	2
  4893  00B2                     _flags:
  4894  00B2                     	ds	2
  4895  00B4                     _EUSART_ErrorHandler:
  4896  00B4                     	ds	2
  4897  00B6                     _EUSART_OverrunErrorHandler:
  4898  00B6                     	ds	2
  4899  00B8                     _EUSART_FramingErrorHandler:
  4900  00B8                     	ds	2
  4901  00BA                     _EUSART_RxDefaultInterruptHandler:
  4902  00BA                     	ds	2
  4903  00BC                     _EUSART_TxDefaultInterruptHandler:
  4904  00BC                     	ds	2
  4905  00BE                     _TMR1_InterruptHandler:
  4906  00BE                     	ds	2
  4907  00C0                     _timer1ReloadVal:
  4908  00C0                     	ds	2
  4909  00C2                     _CCP3_CallBack:
  4910  00C2                     	ds	2
  4911  00C4                     _ticksDown@ccp2$F877:
  4912  00C4                     	ds	2
  4913  00C6                     _ticksUp@ccp2$F876:
  4914  00C6                     	ds	2
  4915  00C8                     _CCP2_CallBack:
  4916  00C8                     	ds	2
  4917  00CA                     _ticksDown:
  4918  00CA                     	ds	2
  4919  00CC                     _ticksUp:
  4920  00CC                     	ds	2
  4921  00CE                     _CCP1_CallBack:
  4922  00CE                     	ds	2
  4923  00D0                     TMR0_ISR@CountCallBack:
  4924  00D0                     	ds	2
  4925  00D2                     _TMR0_InterruptHandler:
  4926  00D2                     	ds	2
  4927  00D4                     _eusartRxLastError:
  4928  00D4                     	ds	1
  4929  00D5                     _eusartRxCount:
  4930  00D5                     	ds	1
  4931  00D6                     _eusartTxBufferRemaining:
  4932  00D6                     	ds	1
  4933  00D7                     _eusartTxTail:
  4934  00D7                     	ds	1
  4935  00D8                     _lastTrig:
  4936  00D8                     	ds	1
  4937  00D9                     _Sens1:
  4938  00D9                     	ds	6
  4939                           
  4940                           	psect	bssBANK2
  4941  0120                     __pbssBANK2:
  4942  0120                     _eusartRxStatusBuffer:
  4943  0120                     	ds	8
  4944  0128                     _eusartRxBuffer:
  4945  0128                     	ds	8
  4946  0130                     _eusartTxBuffer:
  4947  0130                     	ds	8
  4948  0138                     _Sens3:
  4949  0138                     	ds	6
  4950  013E                     _Sens2:
  4951  013E                     	ds	6
  4952  0144                     _dbuf:
  4953  0144                     	ds	32
  4954                           
  4955                           	psect	clrtext
  4956  0B98                     clear_ram0:	
  4957                           ;	Called with FSR0 containing the base address, and
  4958                           ;	WREG with the size to clear
  4959                           
  4960  0B98  0064               	clrwdt	;clear the watchdog before getting into this loop
  4961  0B99                     clrloop0:
  4962  0B99  0180               	clrf	0	;clear RAM location pointed to by FSR
  4963  0B9A  3101               	addfsr 0,1
  4964  0B9B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4965  0B9C  2B99               	goto	clrloop0	;have we reached the end yet?
  4966  0B9D  3400               	retlw	0	;all done for this memory range, return
  4967                           
  4968                           	psect	cstackBANK1
  4969  00DF                     __pcstackBANK1:
  4970  00DF                     ??_printf:
  4971                           
  4972                           ; 1 bytes @ 0x0
  4973  00DF                     	ds	1
  4974  00E0                     printf@ap:
  4975                           
  4976                           ; 1 bytes @ 0x1
  4977  00E0                     	ds	1
  4978  00E1                     ??_main:
  4979                           
  4980                           ; 1 bytes @ 0x2
  4981  00E1                     	ds	4
  4982  00E5                     main@prevMilli:
  4983                           
  4984                           ; 4 bytes @ 0x6
  4985  00E5                     	ds	4
  4986  00E9                     main@currMilli:
  4987                           
  4988                           ; 4 bytes @ 0xA
  4989  00E9                     	ds	4
  4990                           
  4991                           	psect	cstackCOMMON
  4992  0070                     __pcstackCOMMON:
  4993  0070                     ?_TMR1_Initialize:
  4994  0070                     ?_CCP1_Initialize:	
  4995                           ; 1 bytes @ 0x0
  4996                           
  4997  0070                     ?_PIC16_Init:	
  4998                           ; 1 bytes @ 0x0
  4999                           
  5000  0070                     ?_FR_Timer_Init:	
  5001                           ; 1 bytes @ 0x0
  5002                           
  5003  0070                     ?_JSN_GetLastTrig:	
  5004                           ; 1 bytes @ 0x0
  5005                           
  5006  0070                     ??_JSN_GetLastTrig:	
  5007                           ; 1 bytes @ 0x0
  5008                           
  5009  0070                     ?_TMR0_Initialize:	
  5010                           ; 1 bytes @ 0x0
  5011                           
  5012  0070                     ?_TMR0_ReadTimer:	
  5013                           ; 1 bytes @ 0x0
  5014                           
  5015  0070                     ?_SYSTEM_Initialize:	
  5016                           ; 1 bytes @ 0x0
  5017                           
  5018  0070                     ?_PMD_Initialize:	
  5019                           ; 1 bytes @ 0x0
  5020                           
  5021  0070                     ?_PIN_MANAGER_Initialize:	
  5022                           ; 1 bytes @ 0x0
  5023                           
  5024  0070                     ?_OSCILLATOR_Initialize:	
  5025                           ; 1 bytes @ 0x0
  5026                           
  5027  0070                     ?_WDT_Initialize:	
  5028                           ; 1 bytes @ 0x0
  5029                           
  5030  0070                     ?_CCP2_Initialize:	
  5031                           ; 1 bytes @ 0x0
  5032                           
  5033  0070                     ?_CCP3_Initialize:	
  5034                           ; 1 bytes @ 0x0
  5035                           
  5036  0070                     ?_EUSART_Initialize:	
  5037                           ; 1 bytes @ 0x0
  5038                           
  5039  0070                     ?_TMR0_CallBack:	
  5040                           ; 1 bytes @ 0x0
  5041                           
  5042  0070                     ??_TMR0_CallBack:	
  5043                           ; 1 bytes @ 0x0
  5044                           
  5045  0070                     ?_EUSART_Receive_ISR:	
  5046                           ; 1 bytes @ 0x0
  5047                           
  5048  0070                     ?_EUSART_Transmit_ISR:	
  5049                           ; 1 bytes @ 0x0
  5050                           
  5051  0070                     ??_EUSART_Transmit_ISR:	
  5052                           ; 1 bytes @ 0x0
  5053                           
  5054  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  5055                           ; 1 bytes @ 0x0
  5056                           
  5057  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  5058                           ; 1 bytes @ 0x0
  5059                           
  5060  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  5061                           ; 1 bytes @ 0x0
  5062                           
  5063  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  5064                           ; 1 bytes @ 0x0
  5065                           
  5066  0070                     ?_EUSART_DefaultErrorHandler:	
  5067                           ; 1 bytes @ 0x0
  5068                           
  5069  0070                     ?_EUSART_RxDataHandler:	
  5070                           ; 1 bytes @ 0x0
  5071                           
  5072  0070                     ??_EUSART_RxDataHandler:	
  5073                           ; 1 bytes @ 0x0
  5074                           
  5075  0070                     ?_JSN_Library_Init:	
  5076                           ; 1 bytes @ 0x0
  5077                           
  5078  0070                     ?_JSN_Sensor_Trig:	
  5079                           ; 1 bytes @ 0x0
  5080                           
  5081  0070                     ?_FR_Timer_IncMillis:	
  5082                           ; 1 bytes @ 0x0
  5083                           
  5084  0070                     ??_FR_Timer_IncMillis:	
  5085                           ; 1 bytes @ 0x0
  5086                           
  5087  0070                     ?_FR_Timer_IncMicros:	
  5088                           ; 1 bytes @ 0x0
  5089                           
  5090  0070                     ??_FR_Timer_IncMicros:	
  5091                           ; 1 bytes @ 0x0
  5092                           
  5093  0070                     ?_ReadPin:	
  5094                           ; 1 bytes @ 0x0
  5095                           
  5096  0070                     ??_ReadPin:	
  5097                           ; 1 bytes @ 0x0
  5098                           
  5099  0070                     ?_TMR0_ISR:	
  5100                           ; 1 bytes @ 0x0
  5101                           
  5102  0070                     ??_TMR0_ISR:	
  5103                           ; 1 bytes @ 0x0
  5104                           
  5105  0070                     ?_CCP1_CaptureISR:	
  5106                           ; 1 bytes @ 0x0
  5107                           
  5108  0070                     ?_CCP2_CaptureISR:	
  5109                           ; 1 bytes @ 0x0
  5110                           
  5111  0070                     ?_CCP3_DefaultCallBack:	
  5112                           ; 1 bytes @ 0x0
  5113                           
  5114  0070                     ?_CCP3_CaptureISR:	
  5115                           ; 1 bytes @ 0x0
  5116                           
  5117  0070                     ?_TMR1_WriteTimer:	
  5118                           ; 1 bytes @ 0x0
  5119                           
  5120  0070                     ?_TMR1_ISR:	
  5121                           ; 1 bytes @ 0x0
  5122                           
  5123  0070                     ?_EUSART_Write:	
  5124                           ; 1 bytes @ 0x0
  5125                           
  5126  0070                     ?_putch:	
  5127                           ; 1 bytes @ 0x0
  5128                           
  5129  0070                     ?_INTERRUPT_InterruptManager:	
  5130                           ; 1 bytes @ 0x0
  5131                           
  5132  0070                     ?_main:	
  5133                           ; 1 bytes @ 0x0
  5134                           
  5135  0070                     CCP3_DefaultCallBack@capturedValue:	
  5136                           ; 2 bytes @ 0x0
  5137                           
  5138  0070                     TMR1_WriteTimer@timerVal:	
  5139                           ; 2 bytes @ 0x0
  5140                           
  5141                           
  5142                           ; 2 bytes @ 0x0
  5143  0070                     	ds	1
  5144  0071                     ??_EUSART_Receive_ISR:
  5145  0071                     ??_EUSART_DefaultErrorHandler:	
  5146                           ; 1 bytes @ 0x1
  5147                           
  5148                           
  5149                           ; 1 bytes @ 0x1
  5150  0071                     	ds	1
  5151  0072                     ??_CCP3_DefaultCallBack:
  5152  0072                     ??_CCP3_CaptureISR:	
  5153                           ; 1 bytes @ 0x2
  5154                           
  5155  0072                     ??_TMR1_WriteTimer:	
  5156                           ; 1 bytes @ 0x2
  5157                           
  5158  0072                     ??_TMR1_ISR:	
  5159                           ; 1 bytes @ 0x2
  5160                           
  5161  0072                     ReadPin@pin:	
  5162                           ; 1 bytes @ 0x2
  5163                           
  5164                           
  5165                           ; 1 bytes @ 0x2
  5166  0072                     	ds	1
  5167  0073                     ?_CCP1_DefaultCallBack:
  5168  0073                     ?_CCP2_DefaultCallBack:	
  5169                           ; 1 bytes @ 0x3
  5170                           
  5171  0073                     CCP1_DefaultCallBack@capturedValue:	
  5172                           ; 1 bytes @ 0x3
  5173                           
  5174  0073                     CCP2_DefaultCallBack@capturedValue:	
  5175                           ; 2 bytes @ 0x3
  5176                           
  5177  0073                     CCP3_CaptureISR@module:	
  5178                           ; 2 bytes @ 0x3
  5179                           
  5180                           
  5181                           ; 2 bytes @ 0x3
  5182  0073                     	ds	2
  5183  0075                     ??_CCP1_DefaultCallBack:
  5184  0075                     ??_CCP2_DefaultCallBack:	
  5185                           ; 1 bytes @ 0x5
  5186                           
  5187                           
  5188                           ; 1 bytes @ 0x5
  5189  0075                     	ds	3
  5190  0078                     ??_CCP1_CaptureISR:
  5191  0078                     ??_CCP2_CaptureISR:	
  5192                           ; 1 bytes @ 0x8
  5193                           
  5194                           
  5195                           ; 1 bytes @ 0x8
  5196  0078                     	ds	1
  5197  0079                     CCP1_CaptureISR@module:
  5198  0079                     CCP2_CaptureISR@module:	
  5199                           ; 2 bytes @ 0x9
  5200                           
  5201                           
  5202                           ; 2 bytes @ 0x9
  5203  0079                     	ds	2
  5204  007B                     ??_INTERRUPT_InterruptManager:
  5205                           
  5206                           	psect	cstackBANK0
  5207  0020                     __pcstackBANK0:	
  5208                           ; 1 bytes @ 0xB
  5209                           
  5210  0020                     ?_SetPin:
  5211  0020                     ?_WritePin:	
  5212                           ; 1 bytes @ 0x0
  5213                           
  5214  0020                     ??_TMR0_ReadTimer:	
  5215                           ; 1 bytes @ 0x0
  5216                           
  5217  0020                     ??_PMD_Initialize:	
  5218                           ; 1 bytes @ 0x0
  5219                           
  5220  0020                     ??_PIN_MANAGER_Initialize:	
  5221                           ; 1 bytes @ 0x0
  5222                           
  5223  0020                     ??_OSCILLATOR_Initialize:	
  5224                           ; 1 bytes @ 0x0
  5225                           
  5226  0020                     ??_WDT_Initialize:	
  5227                           ; 1 bytes @ 0x0
  5228                           
  5229  0020                     ?_TMR0_SetInterruptHandler:	
  5230                           ; 1 bytes @ 0x0
  5231                           
  5232  0020                     ?_CCP1_SetCallBack:	
  5233                           ; 1 bytes @ 0x0
  5234                           
  5235  0020                     ?_CCP2_SetCallBack:	
  5236                           ; 1 bytes @ 0x0
  5237                           
  5238  0020                     ?_CCP3_SetCallBack:	
  5239                           ; 1 bytes @ 0x0
  5240                           
  5241  0020                     ?_TMR1_SetInterruptHandler:	
  5242                           ; 1 bytes @ 0x0
  5243                           
  5244  0020                     ?_EUSART_SetRxInterruptHandler:	
  5245                           ; 1 bytes @ 0x0
  5246                           
  5247  0020                     ?_EUSART_SetTxInterruptHandler:	
  5248                           ; 1 bytes @ 0x0
  5249                           
  5250  0020                     ?_EUSART_SetFramingErrorHandler:	
  5251                           ; 1 bytes @ 0x0
  5252                           
  5253  0020                     ?_EUSART_SetOverrunErrorHandler:	
  5254                           ; 1 bytes @ 0x0
  5255                           
  5256  0020                     ?_EUSART_SetErrorHandler:	
  5257                           ; 1 bytes @ 0x0
  5258                           
  5259  0020                     ??_EUSART_Write:	
  5260                           ; 1 bytes @ 0x0
  5261                           
  5262  0020                     ?_strlen:	
  5263                           ; 1 bytes @ 0x0
  5264                           
  5265  0020                     ?_FR_Timer_GetMillis:	
  5266                           ; 2 bytes @ 0x0
  5267                           
  5268  0020                     ?___lmul:	
  5269                           ; 4 bytes @ 0x0
  5270                           
  5271  0020                     ?___lodiv:	
  5272                           ; 4 bytes @ 0x0
  5273                           
  5274  0020                     ?___lomod:	
  5275                           ; 8 bytes @ 0x0
  5276                           
  5277  0020                     SetPin@io:	
  5278                           ; 8 bytes @ 0x0
  5279                           
  5280  0020                     WritePin@val:	
  5281                           ; 1 bytes @ 0x0
  5282                           
  5283  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  5284                           ; 1 bytes @ 0x0
  5285                           
  5286  0020                     CCP1_SetCallBack@customCallBack:	
  5287                           ; 2 bytes @ 0x0
  5288                           
  5289  0020                     CCP2_SetCallBack@customCallBack:	
  5290                           ; 2 bytes @ 0x0
  5291                           
  5292  0020                     CCP3_SetCallBack@customCallBack:	
  5293                           ; 2 bytes @ 0x0
  5294                           
  5295  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  5296                           ; 2 bytes @ 0x0
  5297                           
  5298  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  5299                           ; 2 bytes @ 0x0
  5300                           
  5301  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  5302                           ; 2 bytes @ 0x0
  5303                           
  5304  0020                     EUSART_SetErrorHandler@interruptHandler:	
  5305                           ; 2 bytes @ 0x0
  5306                           
  5307  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  5308                           ; 2 bytes @ 0x0
  5309                           
  5310  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  5311                           ; 2 bytes @ 0x0
  5312                           
  5313  0020                     ___lmul@multiplier:	
  5314                           ; 2 bytes @ 0x0
  5315                           
  5316  0020                     ___lodiv@divisor:	
  5317                           ; 4 bytes @ 0x0
  5318                           
  5319  0020                     ___lomod@divisor:	
  5320                           ; 8 bytes @ 0x0
  5321                           
  5322                           
  5323                           ; 8 bytes @ 0x0
  5324  0020                     	ds	1
  5325  0021                     ??_SetPin:
  5326  0021                     ??_WritePin:	
  5327                           ; 1 bytes @ 0x1
  5328                           
  5329  0021                     TMR0_ReadTimer@readVal:	
  5330                           ; 1 bytes @ 0x1
  5331                           
  5332  0021                     EUSART_Write@txData:	
  5333                           ; 1 bytes @ 0x1
  5334                           
  5335                           
  5336                           ; 1 bytes @ 0x1
  5337  0021                     	ds	1
  5338  0022                     ??_TMR1_Initialize:
  5339  0022                     ??_CCP1_Initialize:	
  5340                           ; 1 bytes @ 0x2
  5341                           
  5342  0022                     ??_FR_Timer_Init:	
  5343                           ; 1 bytes @ 0x2
  5344                           
  5345  0022                     ??_TMR0_Initialize:	
  5346                           ; 1 bytes @ 0x2
  5347                           
  5348  0022                     ??_CCP2_Initialize:	
  5349                           ; 1 bytes @ 0x2
  5350                           
  5351  0022                     ??_CCP3_Initialize:	
  5352                           ; 1 bytes @ 0x2
  5353                           
  5354  0022                     ??_EUSART_Initialize:	
  5355                           ; 1 bytes @ 0x2
  5356                           
  5357  0022                     ??_TMR0_SetInterruptHandler:	
  5358                           ; 1 bytes @ 0x2
  5359                           
  5360  0022                     ??_CCP1_SetCallBack:	
  5361                           ; 1 bytes @ 0x2
  5362                           
  5363  0022                     ??_CCP2_SetCallBack:	
  5364                           ; 1 bytes @ 0x2
  5365                           
  5366  0022                     ??_CCP3_SetCallBack:	
  5367                           ; 1 bytes @ 0x2
  5368                           
  5369  0022                     ??_TMR1_SetInterruptHandler:	
  5370                           ; 1 bytes @ 0x2
  5371                           
  5372  0022                     ??_EUSART_SetRxInterruptHandler:	
  5373                           ; 1 bytes @ 0x2
  5374                           
  5375  0022                     ??_EUSART_SetTxInterruptHandler:	
  5376                           ; 1 bytes @ 0x2
  5377                           
  5378  0022                     ??_EUSART_SetFramingErrorHandler:	
  5379                           ; 1 bytes @ 0x2
  5380                           
  5381  0022                     ??_EUSART_SetOverrunErrorHandler:	
  5382                           ; 1 bytes @ 0x2
  5383                           
  5384  0022                     ??_EUSART_SetErrorHandler:	
  5385                           ; 1 bytes @ 0x2
  5386                           
  5387  0022                     ??_strlen:	
  5388                           ; 1 bytes @ 0x2
  5389                           
  5390  0022                     ??_JSN_Library_Init:	
  5391                           ; 1 bytes @ 0x2
  5392                           
  5393  0022                     ??_putch:	
  5394                           ; 1 bytes @ 0x2
  5395                           
  5396  0022                     ?_FR_Timer_GetMicros:	
  5397                           ; 1 bytes @ 0x2
  5398                           
  5399  0022                     putch@txData:	
  5400                           ; 4 bytes @ 0x2
  5401                           
  5402                           
  5403                           ; 1 bytes @ 0x2
  5404  0022                     	ds	1
  5405  0023                     ??_PIC16_Init:
  5406  0023                     ??_SYSTEM_Initialize:	
  5407                           ; 1 bytes @ 0x3
  5408                           
  5409  0023                     ?_fputc:	
  5410                           ; 1 bytes @ 0x3
  5411                           
  5412  0023                     SetPin@pin:	
  5413                           ; 2 bytes @ 0x3
  5414                           
  5415  0023                     WritePin@pin:	
  5416                           ; 1 bytes @ 0x3
  5417                           
  5418  0023                     strlen@a:	
  5419                           ; 1 bytes @ 0x3
  5420                           
  5421  0023                     fputc@c:	
  5422                           ; 1 bytes @ 0x3
  5423                           
  5424                           
  5425                           ; 2 bytes @ 0x3
  5426  0023                     	ds	1
  5427  0024                     ??_FR_Timer_GetMillis:
  5428  0024                     ?_JSN_Sensor_Init:	
  5429                           ; 1 bytes @ 0x4
  5430                           
  5431  0024                     JSN_Sensor_Init@trigPin:	
  5432                           ; 1 bytes @ 0x4
  5433                           
  5434  0024                     strlen@s:	
  5435                           ; 1 bytes @ 0x4
  5436                           
  5437  0024                     ___lmul@multiplicand:	
  5438                           ; 1 bytes @ 0x4
  5439                           
  5440                           
  5441                           ; 4 bytes @ 0x4
  5442  0024                     	ds	1
  5443  0025                     JSN_Sensor_Init@echoPin:
  5444  0025                     fputc@fp:	
  5445                           ; 1 bytes @ 0x5
  5446                           
  5447                           
  5448                           ; 1 bytes @ 0x5
  5449  0025                     	ds	1
  5450  0026                     ??_FR_Timer_GetMicros:
  5451  0026                     ??_fputc:	
  5452                           ; 1 bytes @ 0x6
  5453                           
  5454  0026                     ??_JSN_Sensor_Init:	
  5455                           ; 1 bytes @ 0x6
  5456                           
  5457  0026                     ??_JSN_Sensor_Trig:	
  5458                           ; 1 bytes @ 0x6
  5459                           
  5460                           
  5461                           ; 1 bytes @ 0x6
  5462  0026                     	ds	2
  5463  0028                     ??___lmul:
  5464  0028                     JSN_Sensor_Init@Sensor:	
  5465                           ; 1 bytes @ 0x8
  5466                           
  5467  0028                     ___lmul@product:	
  5468                           ; 1 bytes @ 0x8
  5469                           
  5470  0028                     ___lodiv@dividend:	
  5471                           ; 4 bytes @ 0x8
  5472                           
  5473  0028                     ___lomod@dividend:	
  5474                           ; 8 bytes @ 0x8
  5475                           
  5476                           
  5477                           ; 8 bytes @ 0x8
  5478  0028                     	ds	2
  5479  002A                     JSN_Sensor_Trig@Sensor:
  5480                           
  5481                           ; 1 bytes @ 0xA
  5482  002A                     	ds	1
  5483  002B                     ?_fputs:
  5484  002B                     fputs@fp:	
  5485                           ; 2 bytes @ 0xB
  5486                           
  5487                           
  5488                           ; 1 bytes @ 0xB
  5489  002B                     	ds	1
  5490  002C                     ??_fputs:
  5491  002C                     ?___lldiv:	
  5492                           ; 1 bytes @ 0xC
  5493                           
  5494  002C                     ___lldiv@divisor:	
  5495                           ; 4 bytes @ 0xC
  5496                           
  5497                           
  5498                           ; 4 bytes @ 0xC
  5499  002C                     	ds	3
  5500  002F                     fputs@c:
  5501                           
  5502                           ; 1 bytes @ 0xF
  5503  002F                     	ds	1
  5504  0030                     ??___lodiv:
  5505  0030                     ??___lomod:	
  5506                           ; 1 bytes @ 0x10
  5507                           
  5508  0030                     fputs@i:	
  5509                           ; 1 bytes @ 0x10
  5510                           
  5511  0030                     ___lldiv@dividend:	
  5512                           ; 2 bytes @ 0x10
  5513                           
  5514                           
  5515                           ; 4 bytes @ 0x10
  5516  0030                     	ds	1
  5517  0031                     ___lomod@counter:
  5518  0031                     ___lodiv@quotient:	
  5519                           ; 1 bytes @ 0x11
  5520                           
  5521                           
  5522                           ; 8 bytes @ 0x11
  5523  0031                     	ds	1
  5524  0032                     fputs@s:
  5525                           
  5526                           ; 1 bytes @ 0x12
  5527  0032                     	ds	1
  5528  0033                     ?_pad:
  5529  0033                     pad@buf:	
  5530                           ; 2 bytes @ 0x13
  5531                           
  5532                           
  5533                           ; 1 bytes @ 0x13
  5534  0033                     	ds	1
  5535  0034                     ??___lldiv:
  5536  0034                     pad@p:	
  5537                           ; 1 bytes @ 0x14
  5538                           
  5539                           
  5540                           ; 2 bytes @ 0x14
  5541  0034                     	ds	1
  5542  0035                     ___lldiv@quotient:
  5543                           
  5544                           ; 4 bytes @ 0x15
  5545  0035                     	ds	1
  5546  0036                     ??_pad:
  5547                           
  5548                           ; 1 bytes @ 0x16
  5549  0036                     	ds	1
  5550  0037                     pad@i:
  5551                           
  5552                           ; 2 bytes @ 0x17
  5553  0037                     	ds	2
  5554  0039                     ___lldiv@counter:
  5555  0039                     ___lodiv@counter:	
  5556                           ; 1 bytes @ 0x19
  5557                           
  5558  0039                     pad@w:	
  5559                           ; 1 bytes @ 0x19
  5560                           
  5561                           
  5562                           ; 2 bytes @ 0x19
  5563  0039                     	ds	1
  5564  003A                     ?_JSN_Sensor_GetDistance:
  5565                           
  5566                           ; 2 bytes @ 0x1A
  5567  003A                     	ds	1
  5568  003B                     pad@fp:
  5569                           
  5570                           ; 1 bytes @ 0x1B
  5571  003B                     	ds	1
  5572  003C                     ??_JSN_Sensor_GetDistance:
  5573  003C                     ?_utoa:	
  5574                           ; 1 bytes @ 0x1C
  5575                           
  5576  003C                     utoa@d:	
  5577                           ; 2 bytes @ 0x1C
  5578                           
  5579                           
  5580                           ; 8 bytes @ 0x1C
  5581  003C                     	ds	2
  5582  003E                     JSN_Sensor_GetDistance@Sensor:
  5583                           
  5584                           ; 1 bytes @ 0x1E
  5585  003E                     	ds	6
  5586  0044                     ??_utoa:
  5587                           
  5588                           ; 1 bytes @ 0x24
  5589  0044                     	ds	1
  5590  0045                     utoa@p:
  5591                           
  5592                           ; 2 bytes @ 0x25
  5593  0045                     	ds	2
  5594  0047                     utoa@fp:
  5595                           
  5596                           ; 1 bytes @ 0x27
  5597  0047                     	ds	1
  5598  0048                     utoa@w:
  5599                           
  5600                           ; 2 bytes @ 0x28
  5601  0048                     	ds	2
  5602  004A                     utoa@n:
  5603                           
  5604                           ; 8 bytes @ 0x2A
  5605  004A                     	ds	8
  5606  0052                     utoa@i:
  5607                           
  5608                           ; 2 bytes @ 0x32
  5609  0052                     	ds	2
  5610  0054                     ?_vfpfcnvrt:
  5611  0054                     vfpfcnvrt@fmt:	
  5612                           ; 2 bytes @ 0x34
  5613                           
  5614                           
  5615                           ; 1 bytes @ 0x34
  5616  0054                     	ds	1
  5617  0055                     vfpfcnvrt@ap:
  5618                           
  5619                           ; 1 bytes @ 0x35
  5620  0055                     	ds	1
  5621  0056                     ??_vfpfcnvrt:
  5622                           
  5623                           ; 1 bytes @ 0x36
  5624  0056                     	ds	5
  5625  005B                     vfpfcnvrt@llu:
  5626                           
  5627                           ; 8 bytes @ 0x3B
  5628  005B                     	ds	8
  5629  0063                     vfpfcnvrt@fp:
  5630                           
  5631                           ; 1 bytes @ 0x43
  5632  0063                     	ds	1
  5633  0064                     ?_vfprintf:
  5634  0064                     vfprintf@fmt:	
  5635                           ; 2 bytes @ 0x44
  5636                           
  5637                           
  5638                           ; 2 bytes @ 0x44
  5639  0064                     	ds	2
  5640  0066                     vfprintf@ap:
  5641                           
  5642                           ; 1 bytes @ 0x46
  5643  0066                     	ds	1
  5644  0067                     ??_vfprintf:
  5645                           
  5646                           ; 1 bytes @ 0x47
  5647  0067                     	ds	2
  5648  0069                     vfprintf@fp:
  5649                           
  5650                           ; 1 bytes @ 0x49
  5651  0069                     	ds	1
  5652  006A                     vfprintf@cfmt:
  5653                           
  5654                           ; 2 bytes @ 0x4A
  5655  006A                     	ds	2
  5656  006C                     ?_printf:
  5657  006C                     printf@fmt:	
  5658                           ; 2 bytes @ 0x4C
  5659                           
  5660                           
  5661                           ; 2 bytes @ 0x4C
  5662  006C                     	ds	4
  5663                           
  5664                           	psect	maintext
  5665  03B5                     __pmaintext:	
  5666 ;;
  5667 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  5668 ;;
  5669 ;; *************** function _main *****************
  5670 ;; Defined at:
  5671 ;;		line 138 in file "JSN_Sensor.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;		None
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  currMilli       4   10[BANK1 ] unsigned long 
  5676 ;;  prevMilli       4    6[BANK1 ] unsigned long 
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  2   73[None  ] int 
  5679 ;; Registers used:
  5680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5681 ;; Tracked objects:
  5682 ;;		On entry : B1F/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5687 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5688 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5689 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  5690 ;;Total ram usage:       12 bytes
  5691 ;; Hardware stack levels required when called: 13
  5692 ;; This function calls:
  5693 ;;		_FR_Timer_GetMillis
  5694 ;;		_FR_Timer_Init
  5695 ;;		_JSN_Library_Init
  5696 ;;		_JSN_Sensor_GetDistance
  5697 ;;		_JSN_Sensor_Init
  5698 ;;		_JSN_Sensor_Trig
  5699 ;;		_PIC16_Init
  5700 ;;		_SetPin
  5701 ;;		_WritePin
  5702 ;;		_printf
  5703 ;; This function is called by:
  5704 ;;		Startup code after reset
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708  03B5                     _main:	
  5709                           ;psect for function _main
  5710                           
  5711  03B5                     l3673:	
  5712                           ;incstack = 0
  5713                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5714                           
  5715                           
  5716                           ;JSN_Sensor.c: 140:     PIC16_Init();
  5717  03B5  318F  2749  3183   	fcall	_PIC16_Init
  5718                           
  5719                           ;JSN_Sensor.c: 141:     FR_Timer_Init();
  5720  03B8  318B  2390  3183   	fcall	_FR_Timer_Init
  5721                           
  5722                           ;JSN_Sensor.c: 142:     JSN_Library_Init();
  5723  03BB  318B  23A5  3183   	fcall	_JSN_Library_Init
  5724  03BE                     l3675:
  5725                           
  5726                           ;JSN_Sensor.c: 143:     JSN_Sensor_Init(&Sens1, C6, C5);
  5727  03BE  3006               	movlw	6
  5728  03BF  0021               	movlb	1	; select bank1
  5729  03C0  00E1               	movwf	??_main^(0+128)
  5730  03C1  0861               	movf	??_main^(0+128),w
  5731  03C2  0020               	movlb	0	; select bank0
  5732  03C3  00A4               	movwf	JSN_Sensor_Init@trigPin
  5733  03C4  3003               	movlw	3
  5734  03C5  0021               	movlb	1	; select bank1
  5735  03C6  00E2               	movwf	(??_main+1)^(0+128)
  5736  03C7  0862               	movf	(??_main+1)^(0+128),w
  5737  03C8  0020               	movlb	0	; select bank0
  5738  03C9  00A5               	movwf	JSN_Sensor_Init@echoPin
  5739  03CA  30D9               	movlw	(low (_Sens1| 0))& (0+255)
  5740  03CB  3185  2576  3183   	fcall	_JSN_Sensor_Init
  5741  03CE                     l3677:
  5742  03CE                     l3679:
  5743                           
  5744                           ;JSN_Sensor.c: 147:     unsigned long prevMilli = 0;
  5745  03CE  3000               	movlw	0
  5746  03CF  0021               	movlb	1	; select bank1
  5747  03D0  00E8               	movwf	(main@prevMilli+3)^(0+128)
  5748  03D1  3000               	movlw	0
  5749  03D2  00E7               	movwf	(main@prevMilli+2)^(0+128)
  5750  03D3  3000               	movlw	0
  5751  03D4  00E6               	movwf	(main@prevMilli+1)^(0+128)
  5752  03D5  3000               	movlw	0
  5753  03D6  00E5               	movwf	main@prevMilli^(0+128)
  5754  03D7                     l3681:
  5755                           
  5756                           ;JSN_Sensor.c: 148:     SetPin(C0, 0);
  5757  03D7  0020               	movlb	0	; select bank0
  5758  03D8  01A0               	clrf	SetPin@io
  5759  03D9  300C               	movlw	12
  5760  03DA  3182  22FA  3183   	fcall	_SetPin
  5761  03DD                     l3683:
  5762                           
  5763                           ;JSN_Sensor.c: 149:     WritePin(C0, 0);
  5764  03DD  0020               	movlb	0	; select bank0
  5765  03DE  01A0               	clrf	WritePin@val
  5766  03DF  300C               	movlw	12
  5767  03E0  3182  223F  3183   	fcall	_WritePin
  5768  03E3                     l3685:
  5769                           
  5770                           ;JSN_Sensor.c: 151:     JSN_Sensor_Trig(&Sens1);
  5771  03E3  30D9               	movlw	(low (_Sens1| 0))& (0+255)
  5772  03E4  3187  271D  3183   	fcall	_JSN_Sensor_Trig
  5773  03E7                     l3687:
  5774                           
  5775                           ;JSN_Sensor.c: 154:         currMilli = FR_Timer_GetMillis();
  5776  03E7  318C  245C  3183   	fcall	_FR_Timer_GetMillis
  5777  03EA  0020               	movlb	0	; select bank0
  5778  03EB  0823               	movf	?_FR_Timer_GetMillis+3,w
  5779  03EC  0021               	movlb	1	; select bank1
  5780  03ED  00EC               	movwf	(main@currMilli+3)^(0+128)
  5781  03EE  0020               	movlb	0	; select bank0
  5782  03EF  0822               	movf	?_FR_Timer_GetMillis+2,w
  5783  03F0  0021               	movlb	1	; select bank1
  5784  03F1  00EB               	movwf	(main@currMilli+2)^(0+128)
  5785  03F2  0020               	movlb	0	; select bank0
  5786  03F3  0821               	movf	?_FR_Timer_GetMillis+1,w
  5787  03F4  0021               	movlb	1	; select bank1
  5788  03F5  00EA               	movwf	(main@currMilli+1)^(0+128)
  5789  03F6  0020               	movlb	0	; select bank0
  5790  03F7  0820               	movf	?_FR_Timer_GetMillis,w
  5791  03F8  0021               	movlb	1	; select bank1
  5792  03F9  00E9               	movwf	main@currMilli^(0+128)
  5793  03FA                     l3689:
  5794                           
  5795                           ;JSN_Sensor.c: 157:         if((currMilli - prevMilli) >= 50) {
  5796  03FA  0865               	movf	main@prevMilli^(0+128),w
  5797  03FB  0269               	subwf	main@currMilli^(0+128),w
  5798  03FC  00E1               	movwf	??_main^(0+128)
  5799  03FD  0866               	movf	(main@prevMilli+1)^(0+128),w
  5800  03FE  3B6A               	subwfb	(main@currMilli+1)^(0+128),w
  5801  03FF  00E2               	movwf	(??_main^(0+128)+1)
  5802  0400  0867               	movf	(main@prevMilli+2)^(0+128),w
  5803  0401  3B6B               	subwfb	(main@currMilli+2)^(0+128),w
  5804  0402  00E3               	movwf	(??_main^(0+128)+2)
  5805  0403  0868               	movf	(main@prevMilli+3)^(0+128),w
  5806  0404  3B6C               	subwfb	(main@currMilli+3)^(0+128),w
  5807  0405  00E4               	movwf	(??_main^(0+128)+3)
  5808  0406  0864               	movf	(??_main^(0+128)+3),w
  5809  0407  1D03               	btfss	3,2
  5810  0408  2C15               	goto	u1320
  5811  0409  0863               	movf	(??_main^(0+128)+2),w
  5812  040A  1D03               	btfss	3,2
  5813  040B  2C15               	goto	u1320
  5814  040C  0862               	movf	(??_main^(0+128)+1),w
  5815  040D  1D03               	btfss	3,2
  5816  040E  2C15               	goto	u1320
  5817  040F  3032               	movlw	50
  5818  0410  0261               	subwf	??_main^(0+128),w
  5819  0411  1C03               	btfss	3,0
  5820  0412  2C14               	goto	u1321
  5821  0413  2C15               	goto	u1320
  5822  0414                     u1321:
  5823  0414  2BE7               	goto	l3687
  5824  0415                     u1320:
  5825  0415                     l3691:
  5826                           
  5827                           ;JSN_Sensor.c: 160:             if(JSN_Sensor_GetDistance(&Sens1) < 500) {
  5828  0415  30D9               	movlw	(low (_Sens1| 0))& (0+255)
  5829  0416  318F  27C0  3183   	fcall	_JSN_Sensor_GetDistance
  5830  0419  3001               	movlw	1
  5831  041A  0020               	movlb	0	; select bank0
  5832  041B  023B               	subwf	?_JSN_Sensor_GetDistance+1,w
  5833  041C  30F4               	movlw	244
  5834  041D  1903               	skipnz
  5835  041E  023A               	subwf	?_JSN_Sensor_GetDistance,w
  5836  041F  1803               	skipnc
  5837  0420  2C22               	goto	u1331
  5838  0421  2C23               	goto	u1330
  5839  0422                     u1331:
  5840  0422  2C2A               	goto	l3695
  5841  0423                     u1330:
  5842  0423                     l3693:
  5843                           
  5844                           ;JSN_Sensor.c: 161:                 WritePin(C0, 1);
  5845  0423  01A0               	clrf	WritePin@val
  5846  0424  0AA0               	incf	WritePin@val,f
  5847  0425  300C               	movlw	12
  5848  0426  3182  223F  3183   	fcall	_WritePin
  5849                           
  5850                           ;JSN_Sensor.c: 162:             }
  5851  0429  2C3A               	goto	l3699
  5852  042A                     l3695:
  5853  042A  3001               	movlw	1
  5854  042B  0021               	movlb	1	; select bank1
  5855  042C  025C               	subwf	((_Sens1+1)^(0+128)+2),w
  5856  042D  30F5               	movlw	245
  5857  042E  1903               	skipnz
  5858  042F  025B               	subwf	(_Sens1^(0+128)+2),w
  5859  0430  1C03               	skipc
  5860  0431  2C33               	goto	u1341
  5861  0432  2C34               	goto	u1340
  5862  0433                     u1341:
  5863  0433  2C3A               	goto	l3699
  5864  0434                     u1340:
  5865  0434                     l3697:
  5866                           
  5867                           ;JSN_Sensor.c: 164:                 WritePin(C0, 0);
  5868  0434  0020               	movlb	0	; select bank0
  5869  0435  01A0               	clrf	WritePin@val
  5870  0436  300C               	movlw	12
  5871  0437  3182  223F  3183   	fcall	_WritePin
  5872  043A                     l3699:
  5873                           
  5874                           ;JSN_Sensor.c: 168:             printf("Distance = %u \n", JSN_Sensor_GetDistance(&Sens1
      +                          ));
  5875  043A  3000               	movlw	low (STR_1| (0+32768))
  5876  043B  0020               	movlb	0	; select bank0
  5877  043C  00EC               	movwf	printf@fmt
  5878  043D  3090               	movlw	high (STR_1| (0+32768))
  5879  043E  00ED               	movwf	printf@fmt+1
  5880  043F  30D9               	movlw	(low (_Sens1| 0))& (0+255)
  5881  0440  318F  27C0  3183   	fcall	_JSN_Sensor_GetDistance
  5882  0443  0020               	movlb	0	; select bank0
  5883  0444  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  5884  0445  00EF               	movwf	?_printf+3
  5885  0446  083A               	movf	?_JSN_Sensor_GetDistance,w
  5886  0447  00EE               	movwf	?_printf+2
  5887  0448  318C  2482  3183   	fcall	_printf
  5888  044B                     l3701:
  5889                           
  5890                           ;JSN_Sensor.c: 171:             JSN_Sensor_Trig(&Sens1);
  5891  044B  30D9               	movlw	(low (_Sens1| 0))& (0+255)
  5892  044C  3187  271D  3183   	fcall	_JSN_Sensor_Trig
  5893  044F                     l3703:
  5894                           
  5895                           ;JSN_Sensor.c: 174:             prevMilli = currMilli;
  5896  044F  0021               	movlb	1	; select bank1
  5897  0450  086C               	movf	(main@currMilli+3)^(0+128),w
  5898  0451  00E8               	movwf	(main@prevMilli+3)^(0+128)
  5899  0452  086B               	movf	(main@currMilli+2)^(0+128),w
  5900  0453  00E7               	movwf	(main@prevMilli+2)^(0+128)
  5901  0454  086A               	movf	(main@currMilli+1)^(0+128),w
  5902  0455  00E6               	movwf	(main@prevMilli+1)^(0+128)
  5903  0456  0869               	movf	main@currMilli^(0+128),w
  5904  0457  00E5               	movwf	main@prevMilli^(0+128)
  5905  0458  2BE7               	goto	l3687
  5906  0459  3180  2874         	ljmp	start
  5907  045B                     __end_of_main:
  5908                           
  5909                           	psect	text1
  5910  0C82                     __ptext1:	
  5911 ;; *************** function _printf *****************
  5912 ;; Defined at:
  5913 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\printf.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
  5916 ;;		 -> STR_1(16), 
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;  ret             2    0        int 
  5919 ;;  ap              1    1[BANK1 ] PTR void [1]
  5920 ;;		 -> ?_printf(2), 
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  2   76[BANK0 ] int 
  5923 ;; Registers used:
  5924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5930 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5931 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5932 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;Total ram usage:        6 bytes
  5935 ;; Hardware stack levels used: 1
  5936 ;; Hardware stack levels required when called: 12
  5937 ;; This function calls:
  5938 ;;		_vfprintf
  5939 ;; This function is called by:
  5940 ;;		_main
  5941 ;; This function uses a non-reentrant model
  5942 ;;
  5943                           
  5944  0C82                     _printf:	
  5945                           ;psect for function _printf
  5946                           
  5947  0C82                     l3583:	
  5948                           ;incstack = 0
  5949                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5950                           
  5951  0C82  306E               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5952  0C83  0021               	movlb	1	; select bank1
  5953  0C84  00DF               	movwf	??_printf^(0+128)
  5954  0C85  085F               	movf	??_printf^(0+128),w
  5955  0C86  00E0               	movwf	printf@ap^(0+128)
  5956  0C87                     l3585:
  5957  0C87  0020               	movlb	0	; select bank0
  5958  0C88  086D               	movf	printf@fmt+1,w
  5959  0C89  00E5               	movwf	vfprintf@fmt+1
  5960  0C8A  086C               	movf	printf@fmt,w
  5961  0C8B  00E4               	movwf	vfprintf@fmt
  5962  0C8C  30E0               	movlw	(low (printf@ap| 0))& (0+255)
  5963  0C8D  0021               	movlb	1	; select bank1
  5964  0C8E  00DF               	movwf	??_printf^(0+128)
  5965  0C8F  085F               	movf	??_printf^(0+128),w
  5966  0C90  0020               	movlb	0	; select bank0
  5967  0C91  00E6               	movwf	vfprintf@ap
  5968  0C92  3000               	movlw	0
  5969  0C93  318E  263A  318C   	fcall	_vfprintf
  5970  0C96                     l1430:
  5971  0C96  0008               	return
  5972  0C97                     __end_of_printf:
  5973                           
  5974                           	psect	text2
  5975  0E3A                     __ptext2:	
  5976 ;; *************** function _vfprintf *****************
  5977 ;; Defined at:
  5978 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;  fp              1    wreg     PTR struct _IO_FILE
  5981 ;;		 -> NULL(0), 
  5982 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
  5983 ;;		 -> STR_1(16), 
  5984 ;;  ap              1   70[BANK0 ] PTR PTR void 
  5985 ;;		 -> printf@ap(1), 
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
  5988 ;;		 -> NULL(0), 
  5989 ;;  cfmt            2   74[BANK0 ] PTR unsigned char 
  5990 ;;		 -> STR_1(16), 
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  2   68[BANK0 ] int 
  5993 ;; Registers used:
  5994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6000 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6001 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6002 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6003 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6004 ;;Total ram usage:        8 bytes
  6005 ;; Hardware stack levels used: 1
  6006 ;; Hardware stack levels required when called: 11
  6007 ;; This function calls:
  6008 ;;		_vfpfcnvrt
  6009 ;; This function is called by:
  6010 ;;		_printf
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014  0E3A                     _vfprintf:	
  6015                           ;psect for function _vfprintf
  6016                           
  6017                           
  6018                           ;incstack = 0
  6019                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6020                           ;vfprintf@fp stored from wreg
  6021  0E3A  0020               	movlb	0	; select bank0
  6022  0E3B  00E9               	movwf	vfprintf@fp
  6023  0E3C                     l3471:
  6024                           
  6025                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6026  0E3C  0865               	movf	vfprintf@fmt+1,w
  6027  0E3D  00EB               	movwf	vfprintf@cfmt+1
  6028  0E3E  0864               	movf	vfprintf@fmt,w
  6029  0E3F  00EA               	movwf	vfprintf@cfmt
  6030  0E40                     l3473:
  6031                           
  6032                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6033  0E40  0021               	movlb	1	; select bank1
  6034  0E41  01AC               	clrf	_nout^(0+128)
  6035  0E42  01AD               	clrf	(_nout+1)^(0+128)
  6036                           
  6037                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6038  0E43  2E58               	goto	l3477
  6039  0E44                     l3475:
  6040                           
  6041                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6042  0E44  306A               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6043  0E45  00E7               	movwf	??_vfprintf
  6044  0E46  0867               	movf	??_vfprintf,w
  6045  0E47  00D4               	movwf	vfpfcnvrt@fmt
  6046  0E48  0866               	movf	vfprintf@ap,w
  6047  0E49  00E8               	movwf	??_vfprintf+1
  6048  0E4A  0868               	movf	??_vfprintf+1,w
  6049  0E4B  00D5               	movwf	vfpfcnvrt@ap
  6050  0E4C  0869               	movf	vfprintf@fp,w
  6051  0E4D  3181  217C  318E   	fcall	_vfpfcnvrt
  6052  0E50  0020               	movlb	0	; select bank0
  6053  0E51  0854               	movf	?_vfpfcnvrt,w
  6054  0E52  0021               	movlb	1	; select bank1
  6055  0E53  07AC               	addwf	_nout^(0+128),f
  6056  0E54  0020               	movlb	0	; select bank0
  6057  0E55  0855               	movf	?_vfpfcnvrt+1,w
  6058  0E56  0021               	movlb	1	; select bank1
  6059  0E57  3DAD               	addwfc	(_nout+1)^(0+128),f
  6060  0E58                     l3477:
  6061                           
  6062                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6063  0E58  0020               	movlb	0	; select bank0
  6064  0E59  086A               	movf	vfprintf@cfmt,w
  6065  0E5A  0084               	movwf	4
  6066  0E5B  086B               	movf	vfprintf@cfmt+1,w
  6067  0E5C  0085               	movwf	5
  6068  0E5D  0012               	moviw fsr0++
  6069  0E5E  1D03               	btfss	3,2
  6070  0E5F  2E61               	goto	u1221
  6071  0E60  2E62               	goto	u1220
  6072  0E61                     u1221:
  6073  0E61  2E44               	goto	l3475
  6074  0E62                     u1220:
  6075  0E62                     l3479:
  6076                           
  6077                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6078  0E62  0021               	movlb	1	; select bank1
  6079  0E63  082D               	movf	(_nout+1)^(0+128),w
  6080  0E64  0020               	movlb	0	; select bank0
  6081  0E65  00E5               	movwf	?_vfprintf+1
  6082  0E66  0021               	movlb	1	; select bank1
  6083  0E67  082C               	movf	_nout^(0+128),w
  6084  0E68  0020               	movlb	0	; select bank0
  6085  0E69  00E4               	movwf	?_vfprintf
  6086  0E6A                     l1487:
  6087  0E6A  0008               	return
  6088  0E6B                     __end_of_vfprintf:
  6089                           
  6090                           	psect	text3
  6091  017C                     __ptext3:	
  6092 ;; *************** function _vfpfcnvrt *****************
  6093 ;; Defined at:
  6094 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  fp              1    wreg     PTR struct _IO_FILE
  6097 ;;		 -> NULL(0), 
  6098 ;;  fmt             1   52[BANK0 ] PTR PTR unsigned char 
  6099 ;;		 -> vfprintf@cfmt(2), 
  6100 ;;  ap              1   53[BANK0 ] PTR PTR void 
  6101 ;;		 -> printf@ap(1), 
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  6104 ;;		 -> NULL(0), 
  6105 ;;  llu             8   59[BANK0 ] unsigned long long 
  6106 ;;  ll              8    0        long long 
  6107 ;;  f               4    0        long long 
  6108 ;;  ct              3    0        unsigned char [3]
  6109 ;;  vp              2    0        PTR void 
  6110 ;;  i               2    0        int 
  6111 ;;  done            2    0        int 
  6112 ;;  cp              2    0        PTR unsigned char 
  6113 ;;  c               1    0        unsigned char 
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  2   52[BANK0 ] int 
  6116 ;; Registers used:
  6117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6123 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6124 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;Total ram usage:       16 bytes
  6128 ;; Hardware stack levels used: 1
  6129 ;; Hardware stack levels required when called: 10
  6130 ;; This function calls:
  6131 ;;		_fputc
  6132 ;;		_utoa
  6133 ;; This function is called by:
  6134 ;;		_vfprintf
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138  017C                     _vfpfcnvrt:	
  6139                           ;psect for function _vfpfcnvrt
  6140                           
  6141                           
  6142                           ;incstack = 0
  6143                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6144                           ;vfpfcnvrt@fp stored from wreg
  6145  017C  0020               	movlb	0	; select bank0
  6146  017D  00E3               	movwf	vfpfcnvrt@fp
  6147  017E                     l3173:
  6148                           
  6149                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6150  017E  0854               	movf	vfpfcnvrt@fmt,w
  6151  017F  0086               	movwf	6
  6152  0180  0187               	clrf	7
  6153  0181  3F40               	moviw [0]fsr1
  6154  0182  00D6               	movwf	??_vfpfcnvrt
  6155  0183  3F41               	moviw [1]fsr1
  6156  0184  00D7               	movwf	??_vfpfcnvrt+1
  6157  0185  0856               	movf	??_vfpfcnvrt,w
  6158  0186  0084               	movwf	4
  6159  0187  0857               	movf	??_vfpfcnvrt+1,w
  6160  0188  0085               	movwf	5
  6161  0189  0012               	moviw fsr0++
  6162  018A  3A25               	xorlw	37
  6163  018B  1D03               	btfss	3,2
  6164  018C  298E               	goto	u1071
  6165  018D  298F               	goto	u1070
  6166  018E                     u1071:
  6167  018E  2A1B               	goto	l3207
  6168  018F                     u1070:
  6169  018F                     l3175:
  6170                           
  6171                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6172  018F  0854               	movf	vfpfcnvrt@fmt,w
  6173  0190  0086               	movwf	6
  6174  0191  0187               	clrf	7
  6175  0192  3001               	movlw	1
  6176  0193  0781               	addwf	1,f
  6177  0194  3141               	addfsr 1,1
  6178  0195  1803               	skipnc
  6179  0196  0A81               	incf	1,f
  6180  0197                     l3177:
  6181                           
  6182                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6183  0197  0021               	movlb	1	; select bank1
  6184  0198  01AE               	clrf	_width^(0+128)
  6185  0199  01AF               	clrf	(_width+1)^(0+128)
  6186  019A  01B2               	clrf	_flags^(0+128)
  6187  019B  01B3               	clrf	(_flags+1)^(0+128)
  6188  019C                     l3179:
  6189                           
  6190                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6191  019C  30FF               	movlw	255
  6192  019D  00B0               	movwf	_prec^(0+128)
  6193  019E  30FF               	movlw	255
  6194  019F  00B1               	movwf	(_prec^(0+128)+1)
  6195  01A0                     l3181:
  6196                           
  6197                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  6198  01A0  0020               	movlb	0	; select bank0
  6199  01A1  0854               	movf	vfpfcnvrt@fmt,w
  6200  01A2  0086               	movwf	6
  6201  01A3  0187               	clrf	7
  6202  01A4  3F40               	moviw [0]fsr1
  6203  01A5  00D6               	movwf	??_vfpfcnvrt
  6204  01A6  3F41               	moviw [1]fsr1
  6205  01A7  00D7               	movwf	??_vfpfcnvrt+1
  6206  01A8  0856               	movf	??_vfpfcnvrt,w
  6207  01A9  0084               	movwf	4
  6208  01AA  0857               	movf	??_vfpfcnvrt+1,w
  6209  01AB  0085               	movwf	5
  6210  01AC  0012               	moviw fsr0++
  6211  01AD  3A75               	xorlw	117
  6212  01AE  1D03               	btfss	3,2
  6213  01AF  29B1               	goto	u1081
  6214  01B0  29B2               	goto	u1080
  6215  01B1                     u1081:
  6216  01B1  29E6               	goto	l3191
  6217  01B2                     u1080:
  6218  01B2                     l3183:
  6219                           
  6220                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  6221  01B2  0854               	movf	vfpfcnvrt@fmt,w
  6222  01B3  0086               	movwf	6
  6223  01B4  0187               	clrf	7
  6224  01B5  3001               	movlw	1
  6225  01B6  0781               	addwf	1,f
  6226  01B7  3141               	addfsr 1,1
  6227  01B8  1803               	skipnc
  6228  01B9  0A81               	incf	1,f
  6229  01BA                     l3185:
  6230                           
  6231                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  6232  01BA  0855               	movf	vfpfcnvrt@ap,w
  6233  01BB  0086               	movwf	6
  6234  01BC  0187               	clrf	7
  6235  01BD  0801               	movf	1,w
  6236  01BE  0084               	movwf	4
  6237  01BF  0185               	clrf	5
  6238  01C0  3002               	movlw	2
  6239  01C1  0781               	addwf	1,f
  6240  01C2  3F00               	moviw [0]fsr0
  6241  01C3  00DB               	movwf	vfpfcnvrt@llu
  6242  01C4  3F01               	moviw [1]fsr0
  6243  01C5  00DC               	movwf	vfpfcnvrt@llu+1
  6244  01C6  01DD               	clrf	vfpfcnvrt@llu+2
  6245  01C7  01DE               	clrf	vfpfcnvrt@llu+3
  6246  01C8  01DF               	clrf	vfpfcnvrt@llu+4
  6247  01C9  01E0               	clrf	vfpfcnvrt@llu+5
  6248  01CA  01E1               	clrf	vfpfcnvrt@llu+6
  6249  01CB  01E2               	clrf	vfpfcnvrt@llu+7
  6250  01CC                     l3187:
  6251                           
  6252                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  6253  01CC  085B               	movf	vfpfcnvrt@llu,w
  6254  01CD  00BC               	movwf	utoa@d
  6255  01CE  085C               	movf	vfpfcnvrt@llu+1,w
  6256  01CF  00BD               	movwf	utoa@d+1
  6257  01D0  085D               	movf	vfpfcnvrt@llu+2,w
  6258  01D1  00BE               	movwf	utoa@d+2
  6259  01D2  085E               	movf	vfpfcnvrt@llu+3,w
  6260  01D3  00BF               	movwf	utoa@d+3
  6261  01D4  085F               	movf	vfpfcnvrt@llu+4,w
  6262  01D5  00C0               	movwf	utoa@d+4
  6263  01D6  0860               	movf	vfpfcnvrt@llu+5,w
  6264  01D7  00C1               	movwf	utoa@d+5
  6265  01D8  0861               	movf	vfpfcnvrt@llu+6,w
  6266  01D9  00C2               	movwf	utoa@d+6
  6267  01DA  0862               	movf	vfpfcnvrt@llu+7,w
  6268  01DB  00C3               	movwf	utoa@d+7
  6269  01DC  0863               	movf	vfpfcnvrt@fp,w
  6270  01DD  3180  208D  3181   	fcall	_utoa
  6271  01E0  0020               	movlb	0	; select bank0
  6272  01E1  083D               	movf	?_utoa+1,w
  6273  01E2  00D5               	movwf	?_vfpfcnvrt+1
  6274  01E3  083C               	movf	?_utoa,w
  6275  01E4  00D4               	movwf	?_vfpfcnvrt
  6276  01E5  2A3E               	goto	l1480
  6277  01E6                     l3191:
  6278                           
  6279                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6280  01E6  0854               	movf	vfpfcnvrt@fmt,w
  6281  01E7  0086               	movwf	6
  6282  01E8  0187               	clrf	7
  6283  01E9  3F40               	moviw [0]fsr1
  6284  01EA  00D6               	movwf	??_vfpfcnvrt
  6285  01EB  3F41               	moviw [1]fsr1
  6286  01EC  00D7               	movwf	??_vfpfcnvrt+1
  6287  01ED  0856               	movf	??_vfpfcnvrt,w
  6288  01EE  0084               	movwf	4
  6289  01EF  0857               	movf	??_vfpfcnvrt+1,w
  6290  01F0  0085               	movwf	5
  6291  01F1  0012               	moviw fsr0++
  6292  01F2  3A25               	xorlw	37
  6293  01F3  1D03               	btfss	3,2
  6294  01F4  29F6               	goto	u1091
  6295  01F5  29F7               	goto	u1090
  6296  01F6                     u1091:
  6297  01F6  2A10               	goto	l3201
  6298  01F7                     u1090:
  6299  01F7                     l3193:
  6300                           
  6301                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6302  01F7  0854               	movf	vfpfcnvrt@fmt,w
  6303  01F8  0086               	movwf	6
  6304  01F9  0187               	clrf	7
  6305  01FA  3001               	movlw	1
  6306  01FB  0781               	addwf	1,f
  6307  01FC  3141               	addfsr 1,1
  6308  01FD  1803               	skipnc
  6309  01FE  0A81               	incf	1,f
  6310  01FF                     l3195:
  6311                           
  6312                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6313  01FF  3025               	movlw	37
  6314  0200  00A3               	movwf	fputc@c
  6315  0201  3000               	movlw	0
  6316  0202  00A4               	movwf	fputc@c+1
  6317  0203  0863               	movf	vfpfcnvrt@fp,w
  6318  0204  00D6               	movwf	??_vfpfcnvrt
  6319  0205  0856               	movf	??_vfpfcnvrt,w
  6320  0206  00A5               	movwf	fputc@fp
  6321  0207  3187  27BA  3181   	fcall	_fputc
  6322  020A                     l3197:
  6323                           
  6324                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6325  020A  3001               	movlw	1
  6326  020B  0020               	movlb	0	; select bank0
  6327  020C  00D4               	movwf	?_vfpfcnvrt
  6328  020D  3000               	movlw	0
  6329  020E  00D5               	movwf	?_vfpfcnvrt+1
  6330  020F  2A3E               	goto	l1480
  6331  0210                     l3201:
  6332                           
  6333                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6334  0210  0854               	movf	vfpfcnvrt@fmt,w
  6335  0211  0086               	movwf	6
  6336  0212  0187               	clrf	7
  6337  0213  3001               	movlw	1
  6338  0214  0781               	addwf	1,f
  6339  0215  3141               	addfsr 1,1
  6340  0216  1803               	skipnc
  6341  0217  0A81               	incf	1,f
  6342  0218                     l3203:
  6343                           
  6344                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6345  0218  01D4               	clrf	?_vfpfcnvrt
  6346  0219  01D5               	clrf	?_vfpfcnvrt+1
  6347  021A  2A3E               	goto	l1480
  6348  021B                     l3207:
  6349                           
  6350                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6351  021B  0854               	movf	vfpfcnvrt@fmt,w
  6352  021C  0086               	movwf	6
  6353  021D  0187               	clrf	7
  6354  021E  3F40               	moviw [0]fsr1
  6355  021F  00D6               	movwf	??_vfpfcnvrt
  6356  0220  3F41               	moviw [1]fsr1
  6357  0221  00D7               	movwf	??_vfpfcnvrt+1
  6358  0222  0856               	movf	??_vfpfcnvrt,w
  6359  0223  0084               	movwf	4
  6360  0224  0857               	movf	??_vfpfcnvrt+1,w
  6361  0225  0085               	movwf	5
  6362  0226  0800               	movf	0,w	;code access
  6363  0227  00D8               	movwf	??_vfpfcnvrt+2
  6364  0228  01D9               	clrf	??_vfpfcnvrt+3
  6365  0229  0858               	movf	??_vfpfcnvrt+2,w
  6366  022A  00A3               	movwf	fputc@c
  6367  022B  0859               	movf	??_vfpfcnvrt+3,w
  6368  022C  00A4               	movwf	fputc@c+1
  6369  022D  0863               	movf	vfpfcnvrt@fp,w
  6370  022E  00DA               	movwf	??_vfpfcnvrt+4
  6371  022F  085A               	movf	??_vfpfcnvrt+4,w
  6372  0230  00A5               	movwf	fputc@fp
  6373  0231  3187  27BA  3181   	fcall	_fputc
  6374  0234                     l3209:
  6375                           
  6376                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6377  0234  0020               	movlb	0	; select bank0
  6378  0235  0854               	movf	vfpfcnvrt@fmt,w
  6379  0236  0086               	movwf	6
  6380  0237  0187               	clrf	7
  6381  0238  3001               	movlw	1
  6382  0239  0781               	addwf	1,f
  6383  023A  3141               	addfsr 1,1
  6384  023B  1803               	skipnc
  6385  023C  0A81               	incf	1,f
  6386  023D  2A0A               	goto	l3197
  6387  023E                     l1480:
  6388  023E  0008               	return
  6389  023F                     __end_of_vfpfcnvrt:
  6390                           
  6391                           	psect	text4
  6392  008D                     __ptext4:	
  6393 ;; *************** function _utoa *****************
  6394 ;; Defined at:
  6395 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;  fp              1    wreg     PTR struct _IO_FILE
  6398 ;;		 -> NULL(0), 
  6399 ;;  d               8   28[BANK0 ] unsigned long long 
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;  fp              1   39[BANK0 ] PTR struct _IO_FILE
  6402 ;;		 -> NULL(0), 
  6403 ;;  n               8   42[BANK0 ] unsigned long long 
  6404 ;;  i               2   50[BANK0 ] int 
  6405 ;;  w               2   40[BANK0 ] int 
  6406 ;;  p               2   37[BANK0 ] int 
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  2   28[BANK0 ] int 
  6409 ;; Registers used:
  6410 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6416 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6417 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6418 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6419 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;Total ram usage:       24 bytes
  6421 ;; Hardware stack levels used: 1
  6422 ;; Hardware stack levels required when called: 9
  6423 ;; This function calls:
  6424 ;;		___lodiv
  6425 ;;		___lomod
  6426 ;;		_pad
  6427 ;; This function is called by:
  6428 ;;		_vfpfcnvrt
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432  008D                     _utoa:	
  6433                           ;psect for function _utoa
  6434                           
  6435                           
  6436                           ;incstack = 0
  6437                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6438                           ;utoa@fp stored from wreg
  6439  008D  0020               	movlb	0	; select bank0
  6440  008E  00C7               	movwf	utoa@fp
  6441  008F                     l2867:
  6442                           
  6443                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  6444  008F  0021               	movlb	1	; select bank1
  6445  0090  1BB1               	btfsc	(_prec+1)^(0+128),7
  6446  0091  2893               	goto	u981
  6447  0092  2894               	goto	u980
  6448  0093                     u981:
  6449  0093  2898               	goto	l1463
  6450  0094                     u980:
  6451  0094                     l2869:
  6452                           
  6453                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  6454  0094  30FD               	movlw	253
  6455  0095  05B2               	andwf	_flags^(0+128),f
  6456  0096  30FF               	movlw	255
  6457  0097  05B3               	andwf	(_flags+1)^(0+128),f
  6458  0098                     l1463:	
  6459                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 623:     }
  6460                           
  6461                           
  6462                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  6463  0098  0831               	movf	(_prec+1)^(0+128),w
  6464  0099  3A80               	xorlw	128
  6465  009A  0020               	movlb	0	; select bank0
  6466  009B  00C4               	movwf	??_utoa
  6467  009C  3080               	movlw	128
  6468  009D  0244               	subwf	??_utoa,w
  6469  009E  1D03               	skipz
  6470  009F  28A3               	goto	u995
  6471  00A0  3001               	movlw	1
  6472  00A1  0021               	movlb	1	; select bank1
  6473  00A2  0230               	subwf	_prec^(0+128),w
  6474  00A3                     u995:
  6475  00A3  1803               	skipnc
  6476  00A4  28A6               	goto	u991
  6477  00A5  28A7               	goto	u990
  6478  00A6                     u991:
  6479  00A6  28AD               	goto	l2873
  6480  00A7                     u990:
  6481  00A7                     l2871:
  6482  00A7  3001               	movlw	1
  6483  00A8  0020               	movlb	0	; select bank0
  6484  00A9  00C5               	movwf	utoa@p
  6485  00AA  3000               	movlw	0
  6486  00AB  00C6               	movwf	utoa@p+1
  6487  00AC  28B5               	goto	l1467
  6488  00AD                     l2873:
  6489  00AD  0021               	movlb	1	; select bank1
  6490  00AE  0831               	movf	(_prec+1)^(0+128),w
  6491  00AF  0020               	movlb	0	; select bank0
  6492  00B0  00C6               	movwf	utoa@p+1
  6493  00B1  0021               	movlb	1	; select bank1
  6494  00B2  0830               	movf	_prec^(0+128),w
  6495  00B3  0020               	movlb	0	; select bank0
  6496  00B4  00C5               	movwf	utoa@p
  6497  00B5                     l1467:
  6498                           
  6499                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  6500  00B5  0021               	movlb	1	; select bank1
  6501  00B6  082F               	movf	(_width+1)^(0+128),w
  6502  00B7  0020               	movlb	0	; select bank0
  6503  00B8  00C9               	movwf	utoa@w+1
  6504  00B9  0021               	movlb	1	; select bank1
  6505  00BA  082E               	movf	_width^(0+128),w
  6506  00BB  0020               	movlb	0	; select bank0
  6507  00BC  00C8               	movwf	utoa@w
  6508  00BD                     l2875:
  6509                           
  6510                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 628:     n = d;
  6511  00BD  083C               	movf	utoa@d,w
  6512  00BE  00CA               	movwf	utoa@n
  6513  00BF  083D               	movf	utoa@d+1,w
  6514  00C0  00CB               	movwf	utoa@n+1
  6515  00C1  083E               	movf	utoa@d+2,w
  6516  00C2  00CC               	movwf	utoa@n+2
  6517  00C3  083F               	movf	utoa@d+3,w
  6518  00C4  00CD               	movwf	utoa@n+3
  6519  00C5  0840               	movf	utoa@d+4,w
  6520  00C6  00CE               	movwf	utoa@n+4
  6521  00C7  0841               	movf	utoa@d+5,w
  6522  00C8  00CF               	movwf	utoa@n+5
  6523  00C9  0842               	movf	utoa@d+6,w
  6524  00CA  00D0               	movwf	utoa@n+6
  6525  00CB  0843               	movf	utoa@d+7,w
  6526  00CC  00D1               	movwf	utoa@n+7
  6527                           
  6528                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  6529  00CD  301F               	movlw	31
  6530  00CE  00D2               	movwf	utoa@i
  6531  00CF  3000               	movlw	0
  6532  00D0  00D3               	movwf	utoa@i+1
  6533  00D1                     l2877:
  6534                           
  6535                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  6536  00D1  0022               	movlb	2	; select bank2
  6537  00D2  01E3               	clrf	(_dbuf^(0+256)+31)
  6538                           
  6539                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6540  00D3  2935               	goto	l2889
  6541  00D4                     l2879:
  6542                           
  6543                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 632:         --i;
  6544  00D4  30FF               	movlw	255
  6545  00D5  0020               	movlb	0	; select bank0
  6546  00D6  07D2               	addwf	utoa@i,f
  6547  00D7  30FF               	movlw	255
  6548  00D8  3DD3               	addwfc	utoa@i+1,f
  6549  00D9                     l2881:
  6550                           
  6551                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  6552  00D9  300A               	movlw	10
  6553  00DA  00A0               	movwf	___lomod@divisor
  6554  00DB  01A1               	clrf	___lomod@divisor+1
  6555  00DC  01A2               	clrf	___lomod@divisor+2
  6556  00DD  01A3               	clrf	___lomod@divisor+3
  6557  00DE  01A4               	clrf	___lomod@divisor+4
  6558  00DF  01A5               	clrf	___lomod@divisor+5
  6559  00E0  01A6               	clrf	___lomod@divisor+6
  6560  00E1  01A7               	clrf	___lomod@divisor+7
  6561  00E2  084A               	movf	utoa@n,w
  6562  00E3  00A8               	movwf	___lomod@dividend
  6563  00E4  084B               	movf	utoa@n+1,w
  6564  00E5  00A9               	movwf	___lomod@dividend+1
  6565  00E6  084C               	movf	utoa@n+2,w
  6566  00E7  00AA               	movwf	___lomod@dividend+2
  6567  00E8  084D               	movf	utoa@n+3,w
  6568  00E9  00AB               	movwf	___lomod@dividend+3
  6569  00EA  084E               	movf	utoa@n+4,w
  6570  00EB  00AC               	movwf	___lomod@dividend+4
  6571  00EC  084F               	movf	utoa@n+5,w
  6572  00ED  00AD               	movwf	___lomod@dividend+5
  6573  00EE  0850               	movf	utoa@n+6,w
  6574  00EF  00AE               	movwf	___lomod@dividend+6
  6575  00F0  0851               	movf	utoa@n+7,w
  6576  00F1  00AF               	movwf	___lomod@dividend+7
  6577  00F2  3185  25F8  3180   	fcall	___lomod
  6578  00F5  0020               	movlb	0	; select bank0
  6579  00F6  0820               	movf	?___lomod,w
  6580  00F7  3E30               	addlw	48
  6581  00F8  00C4               	movwf	??_utoa
  6582  00F9  0852               	movf	utoa@i,w
  6583  00FA  3E44               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6584  00FB  0086               	movwf	6
  6585  00FC  3001               	movlw	1	; select bank2/3
  6586  00FD  0087               	movwf	7
  6587  00FE  0844               	movf	??_utoa,w
  6588  00FF  0081               	movwf	1
  6589  0100                     l2883:
  6590                           
  6591                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 634:         --p;
  6592  0100  30FF               	movlw	255
  6593  0101  07C5               	addwf	utoa@p,f
  6594  0102  30FF               	movlw	255
  6595  0103  3DC6               	addwfc	utoa@p+1,f
  6596  0104                     l2885:
  6597                           
  6598                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 635:         --w;
  6599  0104  30FF               	movlw	255
  6600  0105  07C8               	addwf	utoa@w,f
  6601  0106  30FF               	movlw	255
  6602  0107  3DC9               	addwfc	utoa@w+1,f
  6603  0108                     l2887:
  6604                           
  6605                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  6606  0108  300A               	movlw	10
  6607  0109  00A0               	movwf	___lodiv@divisor
  6608  010A  01A1               	clrf	___lodiv@divisor+1
  6609  010B  01A2               	clrf	___lodiv@divisor+2
  6610  010C  01A3               	clrf	___lodiv@divisor+3
  6611  010D  01A4               	clrf	___lodiv@divisor+4
  6612  010E  01A5               	clrf	___lodiv@divisor+5
  6613  010F  01A6               	clrf	___lodiv@divisor+6
  6614  0110  01A7               	clrf	___lodiv@divisor+7
  6615  0111  084A               	movf	utoa@n,w
  6616  0112  00A8               	movwf	___lodiv@dividend
  6617  0113  084B               	movf	utoa@n+1,w
  6618  0114  00A9               	movwf	___lodiv@dividend+1
  6619  0115  084C               	movf	utoa@n+2,w
  6620  0116  00AA               	movwf	___lodiv@dividend+2
  6621  0117  084D               	movf	utoa@n+3,w
  6622  0118  00AB               	movwf	___lodiv@dividend+3
  6623  0119  084E               	movf	utoa@n+4,w
  6624  011A  00AC               	movwf	___lodiv@dividend+4
  6625  011B  084F               	movf	utoa@n+5,w
  6626  011C  00AD               	movwf	___lodiv@dividend+5
  6627  011D  0850               	movf	utoa@n+6,w
  6628  011E  00AE               	movwf	___lodiv@dividend+6
  6629  011F  0851               	movf	utoa@n+7,w
  6630  0120  00AF               	movwf	___lodiv@dividend+7
  6631  0121  3184  24F2  3180   	fcall	___lodiv
  6632  0124  0020               	movlb	0	; select bank0
  6633  0125  0820               	movf	?___lodiv,w
  6634  0126  00CA               	movwf	utoa@n
  6635  0127  0821               	movf	?___lodiv+1,w
  6636  0128  00CB               	movwf	utoa@n+1
  6637  0129  0822               	movf	?___lodiv+2,w
  6638  012A  00CC               	movwf	utoa@n+2
  6639  012B  0823               	movf	?___lodiv+3,w
  6640  012C  00CD               	movwf	utoa@n+3
  6641  012D  0824               	movf	?___lodiv+4,w
  6642  012E  00CE               	movwf	utoa@n+4
  6643  012F  0825               	movf	?___lodiv+5,w
  6644  0130  00CF               	movwf	utoa@n+5
  6645  0131  0826               	movf	?___lodiv+6,w
  6646  0132  00D0               	movwf	utoa@n+6
  6647  0133  0827               	movf	?___lodiv+7,w
  6648  0134  00D1               	movwf	utoa@n+7
  6649  0135                     l2889:
  6650                           
  6651                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6652  0135  0020               	movlb	0	; select bank0
  6653  0136  0852               	movf	utoa@i,w
  6654  0137  0453               	iorwf	utoa@i+1,w
  6655  0138  1903               	btfsc	3,2
  6656  0139  293B               	goto	u1001
  6657  013A  293C               	goto	u1000
  6658  013B                     u1001:
  6659  013B  2968               	goto	l2899
  6660  013C                     u1000:
  6661  013C                     l2891:
  6662  013C  084A               	movf	utoa@n,w
  6663  013D  044B               	iorwf	utoa@n+1,w
  6664  013E  044C               	iorwf	utoa@n+2,w
  6665  013F  044D               	iorwf	utoa@n+3,w
  6666  0140  044E               	iorwf	utoa@n+4,w
  6667  0141  044F               	iorwf	utoa@n+5,w
  6668  0142  0450               	iorwf	utoa@n+6,w
  6669  0143  0451               	iorwf	utoa@n+7,w
  6670  0144  1D03               	skipz
  6671  0145  2947               	goto	u1011
  6672  0146  2948               	goto	u1010
  6673  0147                     u1011:
  6674  0147  28D4               	goto	l2879
  6675  0148                     u1010:
  6676  0148                     l2893:
  6677  0148  0846               	movf	utoa@p+1,w
  6678  0149  3A80               	xorlw	128
  6679  014A  00C4               	movwf	??_utoa
  6680  014B  3080               	movlw	128
  6681  014C  0244               	subwf	??_utoa,w
  6682  014D  1D03               	skipz
  6683  014E  2951               	goto	u1025
  6684  014F  3001               	movlw	1
  6685  0150  0245               	subwf	utoa@p,w
  6686  0151                     u1025:
  6687  0151  1803               	skipnc
  6688  0152  2954               	goto	u1021
  6689  0153  2955               	goto	u1020
  6690  0154                     u1021:
  6691  0154  28D4               	goto	l2879
  6692  0155                     u1020:
  6693  0155                     l2895:
  6694  0155  0020               	movlb	0	; select bank0
  6695  0156  0849               	movf	utoa@w+1,w
  6696  0157  3A80               	xorlw	128
  6697  0158  00C4               	movwf	??_utoa
  6698  0159  3080               	movlw	128
  6699  015A  0244               	subwf	??_utoa,w
  6700  015B  1D03               	skipz
  6701  015C  295F               	goto	u1035
  6702  015D  3001               	movlw	1
  6703  015E  0248               	subwf	utoa@w,w
  6704  015F                     u1035:
  6705  015F  1C03               	skipc
  6706  0160  2962               	goto	u1031
  6707  0161  2963               	goto	u1030
  6708  0162                     u1031:
  6709  0162  2968               	goto	l2899
  6710  0163                     u1030:
  6711  0163                     l2897:
  6712  0163  0021               	movlb	1	; select bank1
  6713  0164  18B2               	btfsc	_flags^(0+128),1
  6714  0165  2967               	goto	u1041
  6715  0166  2968               	goto	u1040
  6716  0167                     u1041:
  6717  0167  28D4               	goto	l2879
  6718  0168                     u1040:
  6719  0168                     l2899:
  6720                           
  6721                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  6722  0168  0020               	movlb	0	; select bank0
  6723  0169  0852               	movf	utoa@i,w
  6724  016A  3E44               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6725  016B  00C4               	movwf	??_utoa
  6726  016C  0844               	movf	??_utoa,w
  6727  016D  00B3               	movwf	pad@buf
  6728  016E  0849               	movf	utoa@w+1,w
  6729  016F  00B5               	movwf	pad@p+1
  6730  0170  0848               	movf	utoa@w,w
  6731  0171  00B4               	movwf	pad@p
  6732  0172  0847               	movf	utoa@fp,w
  6733  0173  3186  26C4  3180   	fcall	_pad
  6734  0176  0020               	movlb	0	; select bank0
  6735  0177  0834               	movf	?_pad+1,w
  6736  0178  00BD               	movwf	?_utoa+1
  6737  0179  0833               	movf	?_pad,w
  6738  017A  00BC               	movwf	?_utoa
  6739  017B                     l1475:
  6740  017B  0008               	return
  6741  017C                     __end_of_utoa:
  6742                           
  6743                           	psect	text5
  6744  06C4                     __ptext5:	
  6745 ;; *************** function _pad *****************
  6746 ;; Defined at:
  6747 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  fp              1    wreg     PTR struct _IO_FILE
  6750 ;;		 -> NULL(0), 
  6751 ;;  buf             1   19[BANK0 ] PTR unsigned char 
  6752 ;;		 -> dbuf(32), 
  6753 ;;  p               2   20[BANK0 ] int 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  6756 ;;		 -> NULL(0), 
  6757 ;;  w               2   25[BANK0 ] int 
  6758 ;;  i               2   23[BANK0 ] int 
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  2   19[BANK0 ] int 
  6761 ;; Registers used:
  6762 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6768 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6769 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6770 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6771 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6772 ;;Total ram usage:        9 bytes
  6773 ;; Hardware stack levels used: 1
  6774 ;; Hardware stack levels required when called: 8
  6775 ;; This function calls:
  6776 ;;		_fputc
  6777 ;;		_fputs
  6778 ;;		_strlen
  6779 ;; This function is called by:
  6780 ;;		_utoa
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784  06C4                     _pad:	
  6785                           ;psect for function _pad
  6786                           
  6787                           
  6788                           ;incstack = 0
  6789                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6790                           ;pad@fp stored from wreg
  6791  06C4  0020               	movlb	0	; select bank0
  6792  06C5  00BB               	movwf	pad@fp
  6793  06C6                     l2827:
  6794                           
  6795                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6796  06C6  0021               	movlb	1	; select bank1
  6797  06C7  1C32               	btfss	_flags^(0+128),0
  6798  06C8  2ECA               	goto	u941
  6799  06C9  2ECB               	goto	u940
  6800  06CA                     u941:
  6801  06CA  2ED4               	goto	l2831
  6802  06CB                     u940:
  6803  06CB                     l2829:
  6804                           
  6805                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6806  06CB  0020               	movlb	0	; select bank0
  6807  06CC  083B               	movf	pad@fp,w
  6808  06CD  00B6               	movwf	??_pad
  6809  06CE  0836               	movf	??_pad,w
  6810  06CF  00AB               	movwf	fputs@fp
  6811  06D0  0833               	movf	pad@buf,w
  6812  06D1  318D  25E4  3186   	fcall	_fputs
  6813  06D4                     l2831:
  6814                           
  6815                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6816  06D4  0020               	movlb	0	; select bank0
  6817  06D5  1BB5               	btfsc	pad@p+1,7
  6818  06D6  2ED8               	goto	u951
  6819  06D7  2ED9               	goto	u950
  6820  06D8                     u951:
  6821  06D8  2EDE               	goto	l2835
  6822  06D9                     u950:
  6823  06D9                     l2833:
  6824  06D9  0835               	movf	pad@p+1,w
  6825  06DA  00BA               	movwf	pad@w+1
  6826  06DB  0834               	movf	pad@p,w
  6827  06DC  00B9               	movwf	pad@w
  6828  06DD  2EE0               	goto	l1455
  6829  06DE                     l2835:
  6830  06DE  01B9               	clrf	pad@w
  6831  06DF  01BA               	clrf	pad@w+1
  6832  06E0                     l1455:
  6833                           
  6834                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6835  06E0  01B7               	clrf	pad@i
  6836  06E1  01B8               	clrf	pad@i+1
  6837                           
  6838                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6839  06E2  2EF4               	goto	l2841
  6840  06E3                     l2837:
  6841                           
  6842                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6843  06E3  3020               	movlw	32
  6844  06E4  0020               	movlb	0	; select bank0
  6845  06E5  00A3               	movwf	fputc@c
  6846  06E6  3000               	movlw	0
  6847  06E7  00A4               	movwf	fputc@c+1
  6848  06E8  083B               	movf	pad@fp,w
  6849  06E9  00B6               	movwf	??_pad
  6850  06EA  0836               	movf	??_pad,w
  6851  06EB  00A5               	movwf	fputc@fp
  6852  06EC  3187  27BA  3186   	fcall	_fputc
  6853  06EF                     l2839:
  6854                           
  6855                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6856  06EF  3001               	movlw	1
  6857  06F0  0020               	movlb	0	; select bank0
  6858  06F1  07B7               	addwf	pad@i,f
  6859  06F2  3000               	movlw	0
  6860  06F3  3DB8               	addwfc	pad@i+1,f
  6861  06F4                     l2841:
  6862                           
  6863                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6864  06F4  0838               	movf	pad@i+1,w
  6865  06F5  3A80               	xorlw	128
  6866  06F6  00B6               	movwf	??_pad
  6867  06F7  083A               	movf	pad@w+1,w
  6868  06F8  3A80               	xorlw	128
  6869  06F9  0236               	subwf	??_pad,w
  6870  06FA  1D03               	skipz
  6871  06FB  2EFE               	goto	u965
  6872  06FC  0839               	movf	pad@w,w
  6873  06FD  0237               	subwf	pad@i,w
  6874  06FE                     u965:
  6875  06FE  1C03               	skipc
  6876  06FF  2F01               	goto	u961
  6877  0700  2F02               	goto	u960
  6878  0701                     u961:
  6879  0701  2EE3               	goto	l2837
  6880  0702                     u960:
  6881  0702                     l1458:
  6882                           
  6883                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6884  0702  0021               	movlb	1	; select bank1
  6885  0703  1832               	btfsc	_flags^(0+128),0
  6886  0704  2F06               	goto	u971
  6887  0705  2F07               	goto	u970
  6888  0706                     u971:
  6889  0706  2F10               	goto	l1459
  6890  0707                     u970:
  6891  0707                     l2843:
  6892                           
  6893                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6894  0707  0020               	movlb	0	; select bank0
  6895  0708  083B               	movf	pad@fp,w
  6896  0709  00B6               	movwf	??_pad
  6897  070A  0836               	movf	??_pad,w
  6898  070B  00AB               	movwf	fputs@fp
  6899  070C  0833               	movf	pad@buf,w
  6900  070D  318D  25E4  3186   	fcall	_fputs
  6901  0710                     l1459:	
  6902                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 92:     }
  6903                           
  6904                           
  6905                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6906  0710  0020               	movlb	0	; select bank0
  6907  0711  0833               	movf	pad@buf,w
  6908  0712  318D  256C  3186   	fcall	_strlen
  6909  0715  0020               	movlb	0	; select bank0
  6910  0716  0839               	movf	pad@w,w
  6911  0717  0720               	addwf	?_strlen,w
  6912  0718  00B3               	movwf	?_pad
  6913  0719  083A               	movf	pad@w+1,w
  6914  071A  3D21               	addwfc	?_strlen+1,w
  6915  071B  00B4               	movwf	?_pad+1
  6916  071C                     l1460:
  6917  071C  0008               	return
  6918  071D                     __end_of_pad:
  6919                           
  6920                           	psect	text6
  6921  0D6C                     __ptext6:	
  6922 ;; *************** function _strlen *****************
  6923 ;; Defined at:
  6924 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;  s               1    wreg     PTR const unsigned char 
  6927 ;;		 -> dbuf(32), 
  6928 ;; Auto vars:     Size  Location     Type
  6929 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  6930 ;;		 -> dbuf(32), 
  6931 ;;  a               1    3[BANK0 ] PTR const unsigned char 
  6932 ;;		 -> dbuf(32), 
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  2    0[BANK0 ] unsigned int 
  6935 ;; Registers used:
  6936 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6942 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6943 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6944 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6945 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6946 ;;Total ram usage:        5 bytes
  6947 ;; Hardware stack levels used: 1
  6948 ;; Hardware stack levels required when called: 4
  6949 ;; This function calls:
  6950 ;;		Nothing
  6951 ;; This function is called by:
  6952 ;;		_pad
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956  0D6C                     _strlen:	
  6957                           ;psect for function _strlen
  6958                           
  6959                           
  6960                           ;incstack = 0
  6961                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6962                           ;strlen@s stored from wreg
  6963  0D6C  0020               	movlb	0	; select bank0
  6964  0D6D  00A4               	movwf	strlen@s
  6965  0D6E                     l2779:
  6966  0D6E  0824               	movf	strlen@s,w
  6967  0D6F  00A2               	movwf	??_strlen
  6968  0D70  0822               	movf	??_strlen,w
  6969  0D71  00A3               	movwf	strlen@a
  6970  0D72  2D77               	goto	l2783
  6971  0D73                     l2781:
  6972  0D73  3001               	movlw	1
  6973  0D74  00A2               	movwf	??_strlen
  6974  0D75  0822               	movf	??_strlen,w
  6975  0D76  07A4               	addwf	strlen@s,f
  6976  0D77                     l2783:
  6977  0D77  0824               	movf	strlen@s,w
  6978  0D78  0086               	movwf	6
  6979  0D79  3001               	movlw	1	; select bank2/3
  6980  0D7A  0087               	movwf	7
  6981  0D7B  0801               	movf	1,w
  6982  0D7C  1D03               	btfss	3,2
  6983  0D7D  2D7F               	goto	u841
  6984  0D7E  2D80               	goto	u840
  6985  0D7F                     u841:
  6986  0D7F  2D73               	goto	l2781
  6987  0D80                     u840:
  6988  0D80                     l2785:
  6989  0D80  0823               	movf	strlen@a,w
  6990  0D81  0224               	subwf	strlen@s,w
  6991  0D82  00A0               	movwf	?_strlen
  6992  0D83  01A1               	clrf	?_strlen+1
  6993  0D84  1BA0               	btfsc	?_strlen,7
  6994  0D85  03A1               	decf	?_strlen+1,f
  6995  0D86                     l1513:
  6996  0D86  0008               	return
  6997  0D87                     __end_of_strlen:
  6998                           
  6999                           	psect	text7
  7000  0DE4                     __ptext7:	
  7001 ;; *************** function _fputs *****************
  7002 ;; Defined at:
  7003 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  s               1    wreg     PTR const unsigned char 
  7006 ;;		 -> dbuf(32), 
  7007 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  7008 ;;		 -> NULL(0), 
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;  s               1   18[BANK0 ] PTR const unsigned char 
  7011 ;;		 -> dbuf(32), 
  7012 ;;  i               2   16[BANK0 ] int 
  7013 ;;  c               1   15[BANK0 ] unsigned char 
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  2   11[BANK0 ] int 
  7016 ;; Registers used:
  7017 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7023 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7024 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7025 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7026 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7027 ;;Total ram usage:        8 bytes
  7028 ;; Hardware stack levels used: 1
  7029 ;; Hardware stack levels required when called: 7
  7030 ;; This function calls:
  7031 ;;		_fputc
  7032 ;; This function is called by:
  7033 ;;		_pad
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037  0DE4                     _fputs:	
  7038                           ;psect for function _fputs
  7039                           
  7040                           
  7041                           ;incstack = 0
  7042                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7043                           ;fputs@s stored from wreg
  7044  0DE4  0020               	movlb	0	; select bank0
  7045  0DE5  00B2               	movwf	fputs@s
  7046  0DE6                     l2771:
  7047  0DE6  01B0               	clrf	fputs@i
  7048  0DE7  01B1               	clrf	fputs@i+1
  7049  0DE8  2DFC               	goto	l2777
  7050  0DE9                     l2773:
  7051  0DE9  082F               	movf	fputs@c,w
  7052  0DEA  00AC               	movwf	??_fputs
  7053  0DEB  01AD               	clrf	??_fputs+1
  7054  0DEC  082C               	movf	??_fputs,w
  7055  0DED  00A3               	movwf	fputc@c
  7056  0DEE  082D               	movf	??_fputs+1,w
  7057  0DEF  00A4               	movwf	fputc@c+1
  7058  0DF0  082B               	movf	fputs@fp,w
  7059  0DF1  00AE               	movwf	??_fputs+2
  7060  0DF2  082E               	movf	??_fputs+2,w
  7061  0DF3  00A5               	movwf	fputc@fp
  7062  0DF4  3187  27BA  318D   	fcall	_fputc
  7063  0DF7                     l2775:
  7064  0DF7  3001               	movlw	1
  7065  0DF8  0020               	movlb	0	; select bank0
  7066  0DF9  07B0               	addwf	fputs@i,f
  7067  0DFA  3000               	movlw	0
  7068  0DFB  3DB1               	addwfc	fputs@i+1,f
  7069  0DFC                     l2777:
  7070  0DFC  0830               	movf	fputs@i,w
  7071  0DFD  0732               	addwf	fputs@s,w
  7072  0DFE  00AC               	movwf	??_fputs
  7073  0DFF  082C               	movf	??_fputs,w
  7074  0E00  0086               	movwf	6
  7075  0E01  3001               	movlw	1	; select bank2/3
  7076  0E02  0087               	movwf	7
  7077  0E03  0801               	movf	1,w
  7078  0E04  00AD               	movwf	??_fputs+1
  7079  0E05  082D               	movf	??_fputs+1,w
  7080  0E06  00AF               	movwf	fputs@c
  7081  0E07  082F               	movf	fputs@c,w
  7082  0E08  1D03               	btfss	3,2
  7083  0E09  2E0B               	goto	u831
  7084  0E0A  2E0C               	goto	u830
  7085  0E0B                     u831:
  7086  0E0B  2DE9               	goto	l2773
  7087  0E0C                     u830:
  7088  0E0C                     l1507:
  7089  0E0C  0008               	return
  7090  0E0D                     __end_of_fputs:
  7091                           
  7092                           	psect	text8
  7093  07BA                     __ptext8:	
  7094 ;; *************** function _fputc *****************
  7095 ;; Defined at:
  7096 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;  c               2    3[BANK0 ] int 
  7099 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
  7100 ;;		 -> NULL(0), 
  7101 ;; Auto vars:     Size  Location     Type
  7102 ;;		None
  7103 ;; Return value:  Size  Location     Type
  7104 ;;                  2    3[BANK0 ] int 
  7105 ;; Registers used:
  7106 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7112 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7114 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7115 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7116 ;;Total ram usage:        8 bytes
  7117 ;; Hardware stack levels used: 1
  7118 ;; Hardware stack levels required when called: 6
  7119 ;; This function calls:
  7120 ;;		_putch
  7121 ;; This function is called by:
  7122 ;;		_pad
  7123 ;;		_vfpfcnvrt
  7124 ;;		_fputs
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128  07BA                     _fputc:	
  7129                           ;psect for function _fputc
  7130                           
  7131  07BA                     l2757:	
  7132                           ;incstack = 0
  7133                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7134                           
  7135  07BA  0020               	movlb	0	; select bank0
  7136  07BB  0825               	movf	fputc@fp,w
  7137  07BC  1903               	btfsc	3,2
  7138  07BD  2FBF               	goto	u791
  7139  07BE  2FC0               	goto	u790
  7140  07BF                     u791:
  7141  07BF  2FC5               	goto	l2761
  7142  07C0                     u790:
  7143  07C0                     l2759:
  7144  07C0  0825               	movf	fputc@fp,w
  7145  07C1  1D03               	btfss	3,2
  7146  07C2  2FC4               	goto	u801
  7147  07C3  2FC5               	goto	u800
  7148  07C4                     u801:
  7149  07C4  2FCA               	goto	l2763
  7150  07C5                     u800:
  7151  07C5                     l2761:
  7152  07C5  0823               	movf	fputc@c,w
  7153  07C6  318B  23B3  3187   	fcall	_putch
  7154  07C9  2FFC               	goto	l1499
  7155  07CA                     l2763:
  7156  07CA  0825               	movf	fputc@fp,w
  7157  07CB  3E08               	addlw	8
  7158  07CC  0086               	movwf	6
  7159  07CD  0187               	clrf	7
  7160  07CE  0016               	moviw fsr1++
  7161  07CF  0401               	iorwf	1,w
  7162  07D0  1903               	btfsc	3,2
  7163  07D1  2FD3               	goto	u811
  7164  07D2  2FD4               	goto	u810
  7165  07D3                     u811:
  7166  07D3  2FF2               	goto	l2767
  7167  07D4                     u810:
  7168  07D4                     l2765:
  7169  07D4  0825               	movf	fputc@fp,w
  7170  07D5  3E08               	addlw	8
  7171  07D6  0086               	movwf	6
  7172  07D7  0187               	clrf	7
  7173  07D8  3F40               	moviw [0]fsr1
  7174  07D9  00A6               	movwf	??_fputc
  7175  07DA  3F41               	moviw [1]fsr1
  7176  07DB  00A7               	movwf	??_fputc+1
  7177  07DC  0825               	movf	fputc@fp,w
  7178  07DD  3E02               	addlw	2
  7179  07DE  0086               	movwf	6
  7180  07DF  0187               	clrf	7
  7181  07E0  3F40               	moviw [0]fsr1
  7182  07E1  00A8               	movwf	??_fputc+2
  7183  07E2  3F41               	moviw [1]fsr1
  7184  07E3  00A9               	movwf	??_fputc+3
  7185  07E4  0829               	movf	??_fputc+3,w
  7186  07E5  3A80               	xorlw	128
  7187  07E6  00AA               	movwf	??_fputc+4
  7188  07E7  0827               	movf	??_fputc+1,w
  7189  07E8  3A80               	xorlw	128
  7190  07E9  022A               	subwf	??_fputc+4,w
  7191  07EA  1D03               	skipz
  7192  07EB  2FEE               	goto	u825
  7193  07EC  0826               	movf	??_fputc,w
  7194  07ED  0228               	subwf	??_fputc+2,w
  7195  07EE                     u825:
  7196  07EE  1803               	skipnc
  7197  07EF  2FF1               	goto	u821
  7198  07F0  2FF2               	goto	u820
  7199  07F1                     u821:
  7200  07F1  2FFC               	goto	l1499
  7201  07F2                     u820:
  7202  07F2                     l2767:
  7203  07F2  0020               	movlb	0	; select bank0
  7204  07F3  0825               	movf	fputc@fp,w
  7205  07F4  3E02               	addlw	2
  7206  07F5  0086               	movwf	6
  7207  07F6  0187               	clrf	7
  7208  07F7  3001               	movlw	1
  7209  07F8  0781               	addwf	1,f
  7210  07F9  3141               	addfsr 1,1
  7211  07FA  1803               	skipnc
  7212  07FB  0A81               	incf	1,f
  7213  07FC                     l1499:
  7214  07FC  0008               	return
  7215  07FD                     __end_of_fputc:
  7216                           
  7217                           	psect	text9
  7218  0BB3                     __ptext9:	
  7219 ;; *************** function _putch *****************
  7220 ;; Defined at:
  7221 ;;		line 174 in file "eusart.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;  txData          1    wreg     unsigned char 
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;  txData          1    2[BANK0 ] unsigned char 
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  1    wreg      void 
  7228 ;; Registers used:
  7229 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7230 ;; Tracked objects:
  7231 ;;		On entry : 0/0
  7232 ;;		On exit  : 0/0
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7236 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7238 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7239 ;;Total ram usage:        1 bytes
  7240 ;; Hardware stack levels used: 1
  7241 ;; Hardware stack levels required when called: 5
  7242 ;; This function calls:
  7243 ;;		_EUSART_Write
  7244 ;; This function is called by:
  7245 ;;		_fputc
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249  0BB3                     _putch:	
  7250                           ;psect for function _putch
  7251                           
  7252                           
  7253                           ;incstack = 0
  7254                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7255                           ;putch@txData stored from wreg
  7256  0BB3  0020               	movlb	0	; select bank0
  7257  0BB4  00A2               	movwf	putch@txData
  7258  0BB5                     l2755:
  7259                           
  7260                           ;eusart.c: 174: void putch(char txData);eusart.c: 175: {;eusart.c: 176:     EUSART_Write
      +                          (txData);
  7261  0BB5  0822               	movf	putch@txData,w
  7262  0BB6  318E  260D  318B   	fcall	_EUSART_Write
  7263  0BB9                     l669:
  7264  0BB9  0008               	return
  7265  0BBA                     __end_of_putch:
  7266                           
  7267                           	psect	text10
  7268  0E0D                     __ptext10:	
  7269 ;; *************** function _EUSART_Write *****************
  7270 ;; Defined at:
  7271 ;;		line 142 in file "eusart.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;  txData          1    wreg     unsigned char 
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;  txData          1    1[BANK0 ] unsigned char 
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1    wreg      void 
  7278 ;; Registers used:
  7279 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7287 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7288 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7289 ;;Total ram usage:        2 bytes
  7290 ;; Hardware stack levels used: 1
  7291 ;; Hardware stack levels required when called: 4
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_putch
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299  0E0D                     _EUSART_Write:	
  7300                           ;psect for function _EUSART_Write
  7301                           
  7302                           
  7303                           ;incstack = 0
  7304                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  7305                           ;EUSART_Write@txData stored from wreg
  7306  0E0D  0020               	movlb	0	; select bank0
  7307  0E0E  00A1               	movwf	EUSART_Write@txData
  7308  0E0F                     l2737:
  7309  0E0F                     l2739:	
  7310                           ;eusart.c: 142: void EUSART_Write(uint8_t txData);eusart.c: 143: {;eusart.c: 144:     wh
      +                          ile(0 == eusartTxBufferRemaining)
  7311                           
  7312                           
  7313                           ;eusart.c: 144:     while(0 == eusartTxBufferRemaining)
  7314  0E0F  0021               	movlb	1	; select bank1
  7315  0E10  0856               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
  7316  0E11  1903               	btfsc	3,2
  7317  0E12  2E14               	goto	u761
  7318  0E13  2E15               	goto	u760
  7319  0E14                     u761:
  7320  0E14  2E0F               	goto	l2739
  7321  0E15                     u760:
  7322  0E15                     l659:
  7323                           
  7324                           ;eusart.c: 148:     if(0 == PIE1bits.TXIE)
  7325  0E15  1A11               	btfsc	17,4	;volatile
  7326  0E16  2E18               	goto	u771
  7327  0E17  2E19               	goto	u770
  7328  0E18                     u771:
  7329  0E18  2E1E               	goto	l660
  7330  0E19                     u770:
  7331  0E19                     l2741:
  7332                           
  7333                           ;eusart.c: 149:     {;eusart.c: 150:         TX1REG = txData;
  7334  0E19  0020               	movlb	0	; select bank0
  7335  0E1A  0821               	movf	EUSART_Write@txData,w
  7336  0E1B  0023               	movlb	3	; select bank3
  7337  0E1C  009A               	movwf	26	;volatile
  7338                           
  7339                           ;eusart.c: 151:     }
  7340  0E1D  2E37               	goto	l2753
  7341  0E1E                     l660:	
  7342                           ;eusart.c: 152:     else
  7343                           
  7344                           
  7345                           ;eusart.c: 153:     {;eusart.c: 154:         PIE1bits.TXIE = 0;
  7346  0E1E  1211               	bcf	17,4	;volatile
  7347  0E1F                     l2743:
  7348                           
  7349                           ;eusart.c: 155:         eusartTxBuffer[eusartTxHead++] = txData;
  7350  0E1F  0020               	movlb	0	; select bank0
  7351  0E20  0821               	movf	EUSART_Write@txData,w
  7352  0E21  00A0               	movwf	??_EUSART_Write
  7353  0E22  087D               	movf	_eusartTxHead,w
  7354  0E23  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
  7355  0E24  0086               	movwf	6
  7356  0E25  3001               	movlw	1	; select bank2/3
  7357  0E26  0087               	movwf	7
  7358  0E27  0820               	movf	??_EUSART_Write,w
  7359  0E28  0081               	movwf	1
  7360  0E29                     l2745:
  7361  0E29  3001               	movlw	1
  7362  0E2A  00A0               	movwf	??_EUSART_Write
  7363  0E2B  0820               	movf	??_EUSART_Write,w
  7364  0E2C  07FD               	addwf	_eusartTxHead,f	;volatile
  7365  0E2D                     l2747:
  7366                           
  7367                           ;eusart.c: 156:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  7368  0E2D  3008               	movlw	8
  7369  0E2E  027D               	subwf	_eusartTxHead,w	;volatile
  7370  0E2F  1C03               	skipc
  7371  0E30  2E32               	goto	u781
  7372  0E31  2E33               	goto	u780
  7373  0E32                     u781:
  7374  0E32  2E34               	goto	l2751
  7375  0E33                     u780:
  7376  0E33                     l2749:
  7377                           
  7378                           ;eusart.c: 157:         {;eusart.c: 158:             eusartTxHead = 0;
  7379  0E33  01FD               	clrf	_eusartTxHead	;volatile
  7380  0E34                     l2751:
  7381                           
  7382                           ;eusart.c: 160:         eusartTxBufferRemaining--;
  7383  0E34  3001               	movlw	1
  7384  0E35  0021               	movlb	1	; select bank1
  7385  0E36  02D6               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  7386  0E37                     l2753:
  7387                           
  7388                           ;eusart.c: 162:     PIE1bits.TXIE = 1;
  7389  0E37  0021               	movlb	1	; select bank1
  7390  0E38  1611               	bsf	17,4	;volatile
  7391  0E39                     l663:
  7392  0E39  0008               	return
  7393  0E3A                     __end_of_EUSART_Write:
  7394                           
  7395                           	psect	text11
  7396  05F8                     __ptext11:	
  7397 ;; *************** function ___lomod *****************
  7398 ;; Defined at:
  7399 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lomod.c"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7402 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;  counter         1   17[BANK0 ] unsigned char 
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  8    0[BANK0 ] unsigned long long 
  7407 ;; Registers used:
  7408 ;;		wreg, status,2, status,0
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7414 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7415 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7416 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7417 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;Total ram usage:       18 bytes
  7419 ;; Hardware stack levels used: 1
  7420 ;; Hardware stack levels required when called: 4
  7421 ;; This function calls:
  7422 ;;		Nothing
  7423 ;; This function is called by:
  7424 ;;		_utoa
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428  05F8                     ___lomod:	
  7429                           ;psect for function ___lomod
  7430                           
  7431  05F8                     l2811:	
  7432                           ;incstack = 0
  7433                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7434                           
  7435  05F8  0020               	movlb	0	; select bank0
  7436  05F9  0820               	movf	___lomod@divisor,w
  7437  05FA  0421               	iorwf	___lomod@divisor+1,w
  7438  05FB  0422               	iorwf	___lomod@divisor+2,w
  7439  05FC  0423               	iorwf	___lomod@divisor+3,w
  7440  05FD  0424               	iorwf	___lomod@divisor+4,w
  7441  05FE  0425               	iorwf	___lomod@divisor+5,w
  7442  05FF  0426               	iorwf	___lomod@divisor+6,w
  7443  0600  0427               	iorwf	___lomod@divisor+7,w
  7444  0601  1903               	skipnz
  7445  0602  2E04               	goto	u901
  7446  0603  2E05               	goto	u900
  7447  0604                     u901:
  7448  0604  2E58               	goto	l1210
  7449  0605                     u900:
  7450  0605                     l2813:
  7451  0605  01B1               	clrf	___lomod@counter
  7452  0606  0AB1               	incf	___lomod@counter,f
  7453  0607  2E14               	goto	l2819
  7454  0608                     l2815:
  7455  0608  35A0               	lslf	___lomod@divisor,f
  7456  0609  0DA1               	rlf	___lomod@divisor+1,f
  7457  060A  0DA2               	rlf	___lomod@divisor+2,f
  7458  060B  0DA3               	rlf	___lomod@divisor+3,f
  7459  060C  0DA4               	rlf	___lomod@divisor+4,f
  7460  060D  0DA5               	rlf	___lomod@divisor+5,f
  7461  060E  0DA6               	rlf	___lomod@divisor+6,f
  7462  060F  0DA7               	rlf	___lomod@divisor+7,f
  7463  0610                     l2817:
  7464  0610  3001               	movlw	1
  7465  0611  00B0               	movwf	??___lomod
  7466  0612  0830               	movf	??___lomod,w
  7467  0613  07B1               	addwf	___lomod@counter,f
  7468  0614                     l2819:
  7469  0614  1FA7               	btfss	___lomod@divisor+7,7
  7470  0615  2E17               	goto	u911
  7471  0616  2E18               	goto	u910
  7472  0617                     u911:
  7473  0617  2E08               	goto	l2815
  7474  0618                     u910:
  7475  0618                     l2821:
  7476  0618  0827               	movf	___lomod@divisor+7,w
  7477  0619  022F               	subwf	___lomod@dividend+7,w
  7478  061A  1D03               	skipz
  7479  061B  2E36               	goto	u925
  7480  061C  0826               	movf	___lomod@divisor+6,w
  7481  061D  022E               	subwf	___lomod@dividend+6,w
  7482  061E  1D03               	skipz
  7483  061F  2E36               	goto	u925
  7484  0620  0825               	movf	___lomod@divisor+5,w
  7485  0621  022D               	subwf	___lomod@dividend+5,w
  7486  0622  1D03               	skipz
  7487  0623  2E36               	goto	u925
  7488  0624  0824               	movf	___lomod@divisor+4,w
  7489  0625  022C               	subwf	___lomod@dividend+4,w
  7490  0626  1D03               	skipz
  7491  0627  2E36               	goto	u925
  7492  0628  0823               	movf	___lomod@divisor+3,w
  7493  0629  022B               	subwf	___lomod@dividend+3,w
  7494  062A  1D03               	skipz
  7495  062B  2E36               	goto	u925
  7496  062C  0822               	movf	___lomod@divisor+2,w
  7497  062D  022A               	subwf	___lomod@dividend+2,w
  7498  062E  1D03               	skipz
  7499  062F  2E36               	goto	u925
  7500  0630  0821               	movf	___lomod@divisor+1,w
  7501  0631  0229               	subwf	___lomod@dividend+1,w
  7502  0632  1D03               	skipz
  7503  0633  2E36               	goto	u925
  7504  0634  0820               	movf	___lomod@divisor,w
  7505  0635  0228               	subwf	___lomod@dividend,w
  7506  0636                     u925:
  7507  0636  1C03               	skipc
  7508  0637  2E39               	goto	u921
  7509  0638  2E3A               	goto	u920
  7510  0639                     u921:
  7511  0639  2E4A               	goto	l2825
  7512  063A                     u920:
  7513  063A                     l2823:
  7514  063A  0820               	movf	___lomod@divisor,w
  7515  063B  02A8               	subwf	___lomod@dividend,f
  7516  063C  0821               	movf	___lomod@divisor+1,w
  7517  063D  3BA9               	subwfb	___lomod@dividend+1,f
  7518  063E  0822               	movf	___lomod@divisor+2,w
  7519  063F  3BAA               	subwfb	___lomod@dividend+2,f
  7520  0640  0823               	movf	___lomod@divisor+3,w
  7521  0641  3BAB               	subwfb	___lomod@dividend+3,f
  7522  0642  0824               	movf	___lomod@divisor+4,w
  7523  0643  3BAC               	subwfb	___lomod@dividend+4,f
  7524  0644  0825               	movf	___lomod@divisor+5,w
  7525  0645  3BAD               	subwfb	___lomod@dividend+5,f
  7526  0646  0826               	movf	___lomod@divisor+6,w
  7527  0647  3BAE               	subwfb	___lomod@dividend+6,f
  7528  0648  0827               	movf	___lomod@divisor+7,w
  7529  0649  3BAF               	subwfb	___lomod@dividend+7,f
  7530  064A                     l2825:
  7531  064A  36A7               	lsrf	___lomod@divisor+7,f
  7532  064B  0CA6               	rrf	___lomod@divisor+6,f
  7533  064C  0CA5               	rrf	___lomod@divisor+5,f
  7534  064D  0CA4               	rrf	___lomod@divisor+4,f
  7535  064E  0CA3               	rrf	___lomod@divisor+3,f
  7536  064F  0CA2               	rrf	___lomod@divisor+2,f
  7537  0650  0CA1               	rrf	___lomod@divisor+1,f
  7538  0651  0CA0               	rrf	___lomod@divisor,f
  7539  0652  3001               	movlw	1
  7540  0653  02B1               	subwf	___lomod@counter,f
  7541  0654  1D03               	btfss	3,2
  7542  0655  2E57               	goto	u931
  7543  0656  2E58               	goto	u930
  7544  0657                     u931:
  7545  0657  2E18               	goto	l2821
  7546  0658                     u930:
  7547  0658                     l1210:
  7548  0658  0828               	movf	___lomod@dividend,w
  7549  0659  00A0               	movwf	?___lomod
  7550  065A  0829               	movf	___lomod@dividend+1,w
  7551  065B  00A1               	movwf	?___lomod+1
  7552  065C  082A               	movf	___lomod@dividend+2,w
  7553  065D  00A2               	movwf	?___lomod+2
  7554  065E  082B               	movf	___lomod@dividend+3,w
  7555  065F  00A3               	movwf	?___lomod+3
  7556  0660  082C               	movf	___lomod@dividend+4,w
  7557  0661  00A4               	movwf	?___lomod+4
  7558  0662  082D               	movf	___lomod@dividend+5,w
  7559  0663  00A5               	movwf	?___lomod+5
  7560  0664  082E               	movf	___lomod@dividend+6,w
  7561  0665  00A6               	movwf	?___lomod+6
  7562  0666  082F               	movf	___lomod@dividend+7,w
  7563  0667  00A7               	movwf	?___lomod+7
  7564  0668                     l1217:
  7565  0668  0008               	return
  7566  0669                     __end_of___lomod:
  7567                           
  7568                           	psect	text12
  7569  04F2                     __ptext12:	
  7570 ;; *************** function ___lodiv *****************
  7571 ;; Defined at:
  7572 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lodiv.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7575 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;  quotient        8   17[BANK0 ] unsigned long long 
  7578 ;;  counter         1   25[BANK0 ] unsigned char 
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  8    0[BANK0 ] unsigned long long 
  7581 ;; Registers used:
  7582 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7583 ;; Tracked objects:
  7584 ;;		On entry : 0/0
  7585 ;;		On exit  : 0/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7588 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7589 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7590 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7591 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7592 ;;Total ram usage:       26 bytes
  7593 ;; Hardware stack levels used: 1
  7594 ;; Hardware stack levels required when called: 4
  7595 ;; This function calls:
  7596 ;;		Nothing
  7597 ;; This function is called by:
  7598 ;;		_utoa
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602  04F2                     ___lodiv:	
  7603                           ;psect for function ___lodiv
  7604                           
  7605  04F2                     l2789:	
  7606                           ;incstack = 0
  7607                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7608                           
  7609  04F2  3031               	movlw	low ___lodiv@quotient
  7610  04F3  0086               	movwf	6
  7611  04F4  3000               	movlw	high ___lodiv@quotient
  7612  04F5  0087               	movwf	7
  7613  04F6  3008               	movlw	8
  7614  04F7  0020               	movlb	0	; select bank0
  7615  04F8  00B0               	movwf	??___lodiv
  7616  04F9  3000               	movlw	0
  7617  04FA                     u850:
  7618  04FA  001E               	movwi fsr1++
  7619  04FB  0BB0               	decfsz	??___lodiv,f
  7620  04FC  2CFA               	goto	u850
  7621  04FD                     l2791:
  7622  04FD  0820               	movf	___lodiv@divisor,w
  7623  04FE  0421               	iorwf	___lodiv@divisor+1,w
  7624  04FF  0422               	iorwf	___lodiv@divisor+2,w
  7625  0500  0423               	iorwf	___lodiv@divisor+3,w
  7626  0501  0424               	iorwf	___lodiv@divisor+4,w
  7627  0502  0425               	iorwf	___lodiv@divisor+5,w
  7628  0503  0426               	iorwf	___lodiv@divisor+6,w
  7629  0504  0427               	iorwf	___lodiv@divisor+7,w
  7630  0505  1903               	skipnz
  7631  0506  2D08               	goto	u861
  7632  0507  2D09               	goto	u860
  7633  0508                     u861:
  7634  0508  2D65               	goto	l1200
  7635  0509                     u860:
  7636  0509                     l2793:
  7637  0509  01B9               	clrf	___lodiv@counter
  7638  050A  0AB9               	incf	___lodiv@counter,f
  7639  050B  2D18               	goto	l2799
  7640  050C                     l2795:
  7641  050C  35A0               	lslf	___lodiv@divisor,f
  7642  050D  0DA1               	rlf	___lodiv@divisor+1,f
  7643  050E  0DA2               	rlf	___lodiv@divisor+2,f
  7644  050F  0DA3               	rlf	___lodiv@divisor+3,f
  7645  0510  0DA4               	rlf	___lodiv@divisor+4,f
  7646  0511  0DA5               	rlf	___lodiv@divisor+5,f
  7647  0512  0DA6               	rlf	___lodiv@divisor+6,f
  7648  0513  0DA7               	rlf	___lodiv@divisor+7,f
  7649  0514                     l2797:
  7650  0514  3001               	movlw	1
  7651  0515  00B0               	movwf	??___lodiv
  7652  0516  0830               	movf	??___lodiv,w
  7653  0517  07B9               	addwf	___lodiv@counter,f
  7654  0518                     l2799:
  7655  0518  1FA7               	btfss	___lodiv@divisor+7,7
  7656  0519  2D1B               	goto	u871
  7657  051A  2D1C               	goto	u870
  7658  051B                     u871:
  7659  051B  2D0C               	goto	l2795
  7660  051C                     u870:
  7661  051C                     l2801:
  7662  051C  35B1               	lslf	___lodiv@quotient,f
  7663  051D  0DB2               	rlf	___lodiv@quotient+1,f
  7664  051E  0DB3               	rlf	___lodiv@quotient+2,f
  7665  051F  0DB4               	rlf	___lodiv@quotient+3,f
  7666  0520  0DB5               	rlf	___lodiv@quotient+4,f
  7667  0521  0DB6               	rlf	___lodiv@quotient+5,f
  7668  0522  0DB7               	rlf	___lodiv@quotient+6,f
  7669  0523  0DB8               	rlf	___lodiv@quotient+7,f
  7670  0524                     l2803:
  7671  0524  0827               	movf	___lodiv@divisor+7,w
  7672  0525  022F               	subwf	___lodiv@dividend+7,w
  7673  0526  1D03               	skipz
  7674  0527  2D42               	goto	u885
  7675  0528  0826               	movf	___lodiv@divisor+6,w
  7676  0529  022E               	subwf	___lodiv@dividend+6,w
  7677  052A  1D03               	skipz
  7678  052B  2D42               	goto	u885
  7679  052C  0825               	movf	___lodiv@divisor+5,w
  7680  052D  022D               	subwf	___lodiv@dividend+5,w
  7681  052E  1D03               	skipz
  7682  052F  2D42               	goto	u885
  7683  0530  0824               	movf	___lodiv@divisor+4,w
  7684  0531  022C               	subwf	___lodiv@dividend+4,w
  7685  0532  1D03               	skipz
  7686  0533  2D42               	goto	u885
  7687  0534  0823               	movf	___lodiv@divisor+3,w
  7688  0535  022B               	subwf	___lodiv@dividend+3,w
  7689  0536  1D03               	skipz
  7690  0537  2D42               	goto	u885
  7691  0538  0822               	movf	___lodiv@divisor+2,w
  7692  0539  022A               	subwf	___lodiv@dividend+2,w
  7693  053A  1D03               	skipz
  7694  053B  2D42               	goto	u885
  7695  053C  0821               	movf	___lodiv@divisor+1,w
  7696  053D  0229               	subwf	___lodiv@dividend+1,w
  7697  053E  1D03               	skipz
  7698  053F  2D42               	goto	u885
  7699  0540  0820               	movf	___lodiv@divisor,w
  7700  0541  0228               	subwf	___lodiv@dividend,w
  7701  0542                     u885:
  7702  0542  1C03               	skipc
  7703  0543  2D45               	goto	u881
  7704  0544  2D46               	goto	u880
  7705  0545                     u881:
  7706  0545  2D57               	goto	l2809
  7707  0546                     u880:
  7708  0546                     l2805:
  7709  0546  0820               	movf	___lodiv@divisor,w
  7710  0547  02A8               	subwf	___lodiv@dividend,f
  7711  0548  0821               	movf	___lodiv@divisor+1,w
  7712  0549  3BA9               	subwfb	___lodiv@dividend+1,f
  7713  054A  0822               	movf	___lodiv@divisor+2,w
  7714  054B  3BAA               	subwfb	___lodiv@dividend+2,f
  7715  054C  0823               	movf	___lodiv@divisor+3,w
  7716  054D  3BAB               	subwfb	___lodiv@dividend+3,f
  7717  054E  0824               	movf	___lodiv@divisor+4,w
  7718  054F  3BAC               	subwfb	___lodiv@dividend+4,f
  7719  0550  0825               	movf	___lodiv@divisor+5,w
  7720  0551  3BAD               	subwfb	___lodiv@dividend+5,f
  7721  0552  0826               	movf	___lodiv@divisor+6,w
  7722  0553  3BAE               	subwfb	___lodiv@dividend+6,f
  7723  0554  0827               	movf	___lodiv@divisor+7,w
  7724  0555  3BAF               	subwfb	___lodiv@dividend+7,f
  7725  0556                     l2807:
  7726  0556  1431               	bsf	___lodiv@quotient,0
  7727  0557                     l2809:
  7728  0557  36A7               	lsrf	___lodiv@divisor+7,f
  7729  0558  0CA6               	rrf	___lodiv@divisor+6,f
  7730  0559  0CA5               	rrf	___lodiv@divisor+5,f
  7731  055A  0CA4               	rrf	___lodiv@divisor+4,f
  7732  055B  0CA3               	rrf	___lodiv@divisor+3,f
  7733  055C  0CA2               	rrf	___lodiv@divisor+2,f
  7734  055D  0CA1               	rrf	___lodiv@divisor+1,f
  7735  055E  0CA0               	rrf	___lodiv@divisor,f
  7736  055F  3001               	movlw	1
  7737  0560  02B9               	subwf	___lodiv@counter,f
  7738  0561  1D03               	btfss	3,2
  7739  0562  2D64               	goto	u891
  7740  0563  2D65               	goto	u890
  7741  0564                     u891:
  7742  0564  2D1C               	goto	l2801
  7743  0565                     u890:
  7744  0565                     l1200:
  7745  0565  0831               	movf	___lodiv@quotient,w
  7746  0566  00A0               	movwf	?___lodiv
  7747  0567  0832               	movf	___lodiv@quotient+1,w
  7748  0568  00A1               	movwf	?___lodiv+1
  7749  0569  0833               	movf	___lodiv@quotient+2,w
  7750  056A  00A2               	movwf	?___lodiv+2
  7751  056B  0834               	movf	___lodiv@quotient+3,w
  7752  056C  00A3               	movwf	?___lodiv+3
  7753  056D  0835               	movf	___lodiv@quotient+4,w
  7754  056E  00A4               	movwf	?___lodiv+4
  7755  056F  0836               	movf	___lodiv@quotient+5,w
  7756  0570  00A5               	movwf	?___lodiv+5
  7757  0571  0837               	movf	___lodiv@quotient+6,w
  7758  0572  00A6               	movwf	?___lodiv+6
  7759  0573  0838               	movf	___lodiv@quotient+7,w
  7760  0574  00A7               	movwf	?___lodiv+7
  7761  0575                     l1207:
  7762  0575  0008               	return
  7763  0576                     __end_of___lodiv:
  7764                           
  7765                           	psect	text13
  7766  0F49                     __ptext13:	
  7767 ;; *************** function _PIC16_Init *****************
  7768 ;; Defined at:
  7769 ;;		line 16 in file "PIC16Xpress_DevBoard.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;		None
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;		None
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  1    wreg      void 
  7776 ;; Registers used:
  7777 ;;		wreg, status,2, status,0, pclath, cstack
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7787 ;;Total ram usage:        0 bytes
  7788 ;; Hardware stack levels used: 1
  7789 ;; Hardware stack levels required when called: 7
  7790 ;; This function calls:
  7791 ;;		_SYSTEM_Initialize
  7792 ;; This function is called by:
  7793 ;;		_main
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797  0F49                     _PIC16_Init:	
  7798                           ;psect for function _PIC16_Init
  7799                           
  7800  0F49                     l3543:	
  7801                           ;incstack = 0
  7802                           ; Regs used in _PIC16_Init: [wreg+status,2+status,0+pclath+cstack]
  7803                           
  7804                           
  7805                           ;PIC16Xpress_DevBoard.c: 18:     PIE0 = 0x00;
  7806  0F49  0021               	movlb	1	; select bank1
  7807  0F4A  0190               	clrf	16	;volatile
  7808                           
  7809                           ;PIC16Xpress_DevBoard.c: 19:     PIE1 = 0x00;
  7810  0F4B  0191               	clrf	17	;volatile
  7811                           
  7812                           ;PIC16Xpress_DevBoard.c: 20:     PIE2 = 0x00;
  7813  0F4C  0192               	clrf	18	;volatile
  7814                           
  7815                           ;PIC16Xpress_DevBoard.c: 21:     PIE3 = 0x00;
  7816  0F4D  0193               	clrf	19	;volatile
  7817                           
  7818                           ;PIC16Xpress_DevBoard.c: 22:     PIE4 = 0x00;
  7819  0F4E  0194               	clrf	20	;volatile
  7820                           
  7821                           ;PIC16Xpress_DevBoard.c: 25:     LATA = 0x00;
  7822  0F4F  0022               	movlb	2	; select bank2
  7823  0F50  018C               	clrf	12	;volatile
  7824                           
  7825                           ;PIC16Xpress_DevBoard.c: 26:     LATB = 0x00;
  7826  0F51  018D               	clrf	13	;volatile
  7827                           
  7828                           ;PIC16Xpress_DevBoard.c: 27:     LATC = 0x00;
  7829  0F52  018E               	clrf	14	;volatile
  7830  0F53                     l3545:
  7831                           
  7832                           ;PIC16Xpress_DevBoard.c: 29:     TRISA = 0x37;
  7833  0F53  3037               	movlw	55
  7834  0F54  0021               	movlb	1	; select bank1
  7835  0F55  008C               	movwf	12	;volatile
  7836  0F56                     l3547:
  7837                           
  7838                           ;PIC16Xpress_DevBoard.c: 30:     TRISB = 0xF0;
  7839  0F56  30F0               	movlw	240
  7840  0F57  008D               	movwf	13	;volatile
  7841  0F58                     l3549:
  7842                           
  7843                           ;PIC16Xpress_DevBoard.c: 31:     TRISC = 0xFF;
  7844  0F58  30FF               	movlw	255
  7845  0F59  008E               	movwf	14	;volatile
  7846  0F5A                     l3551:
  7847                           
  7848                           ;PIC16Xpress_DevBoard.c: 33:     ANSELC = 0xFF;
  7849  0F5A  30FF               	movlw	255
  7850  0F5B  0023               	movlb	3	; select bank3
  7851  0F5C  008E               	movwf	14	;volatile
  7852  0F5D                     l3553:
  7853                           
  7854                           ;PIC16Xpress_DevBoard.c: 34:     ANSELB = 0xF0;
  7855  0F5D  30F0               	movlw	240
  7856  0F5E  008D               	movwf	13	;volatile
  7857  0F5F                     l3555:
  7858                           
  7859                           ;PIC16Xpress_DevBoard.c: 35:     ANSELA = 0x37;
  7860  0F5F  3037               	movlw	55
  7861  0F60  008C               	movwf	12	;volatile
  7862                           
  7863                           ;PIC16Xpress_DevBoard.c: 37:     WPUB = 0x00;
  7864  0F61  0024               	movlb	4	; select bank4
  7865  0F62  018D               	clrf	13	;volatile
  7866                           
  7867                           ;PIC16Xpress_DevBoard.c: 38:     WPUA = 0x00;
  7868  0F63  018C               	clrf	12	;volatile
  7869                           
  7870                           ;PIC16Xpress_DevBoard.c: 39:     WPUC = 0x00;
  7871  0F64  018E               	clrf	14	;volatile
  7872                           
  7873                           ;PIC16Xpress_DevBoard.c: 41:     ODCONA = 0x00;
  7874  0F65  0025               	movlb	5	; select bank5
  7875  0F66  018C               	clrf	12	;volatile
  7876                           
  7877                           ;PIC16Xpress_DevBoard.c: 42:     ODCONB = 0x00;
  7878  0F67  018D               	clrf	13	;volatile
  7879                           
  7880                           ;PIC16Xpress_DevBoard.c: 43:     ODCONC = 0x00;
  7881  0F68  018E               	clrf	14	;volatile
  7882  0F69                     l3557:
  7883                           
  7884                           ;PIC16Xpress_DevBoard.c: 45:     SLRCONA = 0x37;
  7885  0F69  3037               	movlw	55
  7886  0F6A  0026               	movlb	6	; select bank6
  7887  0F6B  008C               	movwf	12	;volatile
  7888  0F6C                     l3559:
  7889                           
  7890                           ;PIC16Xpress_DevBoard.c: 46:     SLRCONB = 0xF0;
  7891  0F6C  30F0               	movlw	240
  7892  0F6D  008D               	movwf	13	;volatile
  7893  0F6E                     l3561:
  7894                           
  7895                           ;PIC16Xpress_DevBoard.c: 47:     SLRCONC = 0xFF;
  7896  0F6E  30FF               	movlw	255
  7897  0F6F  008E               	movwf	14	;volatile
  7898  0F70                     l3563:
  7899                           
  7900                           ;PIC16Xpress_DevBoard.c: 49:     INLVLA = 0x3F;
  7901  0F70  303F               	movlw	63
  7902  0F71  0027               	movlb	7	; select bank7
  7903  0F72  008C               	movwf	12	;volatile
  7904  0F73                     l3565:
  7905                           
  7906                           ;PIC16Xpress_DevBoard.c: 50:     INLVLB = 0xF0;
  7907  0F73  30F0               	movlw	240
  7908  0F74  008D               	movwf	13	;volatile
  7909  0F75                     l3567:
  7910                           
  7911                           ;PIC16Xpress_DevBoard.c: 51:     INLVLC = 0xFF;
  7912  0F75  30FF               	movlw	255
  7913  0F76  008E               	movwf	14	;volatile
  7914                           
  7915                           ;PIC16Xpress_DevBoard.c: 54:     PIR0 = 0x00;
  7916  0F77  0020               	movlb	0	; select bank0
  7917  0F78  0190               	clrf	16	;volatile
  7918                           
  7919                           ;PIC16Xpress_DevBoard.c: 55:     PIR1 = 0x00;
  7920  0F79  0191               	clrf	17	;volatile
  7921                           
  7922                           ;PIC16Xpress_DevBoard.c: 56:     PIR2 = 0x00;
  7923  0F7A  0192               	clrf	18	;volatile
  7924                           
  7925                           ;PIC16Xpress_DevBoard.c: 57:     PIR3 = 0x00;
  7926  0F7B  0193               	clrf	19	;volatile
  7927                           
  7928                           ;PIC16Xpress_DevBoard.c: 58:     PIR4 = 0x00;
  7929  0F7C  0194               	clrf	20	;volatile
  7930  0F7D                     l3569:
  7931                           
  7932                           ;PIC16Xpress_DevBoard.c: 60:     SYSTEM_Initialize();
  7933  0F7D  318D  25A3  318F   	fcall	_SYSTEM_Initialize
  7934  0F80                     l3571:
  7935                           
  7936                           ;PIC16Xpress_DevBoard.c: 61:     INTCONbits.PEIE = 1;
  7937  0F80  170B               	bsf	11,6	;volatile
  7938  0F81                     l3573:
  7939                           
  7940                           ;PIC16Xpress_DevBoard.c: 62:     INTCONbits.GIE = 1;
  7941  0F81  178B               	bsf	11,7	;volatile
  7942  0F82                     l191:
  7943  0F82  0008               	return
  7944  0F83                     __end_of_PIC16_Init:
  7945                           
  7946                           	psect	text14
  7947  0DA3                     __ptext14:	
  7948 ;; *************** function _SYSTEM_Initialize *****************
  7949 ;; Defined at:
  7950 ;;		line 15 in file "mcc.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;		None
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;		None
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  1    wreg      void 
  7957 ;; Registers used:
  7958 ;;		wreg, status,2, status,0, pclath, cstack
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7968 ;;Total ram usage:        0 bytes
  7969 ;; Hardware stack levels used: 1
  7970 ;; Hardware stack levels required when called: 6
  7971 ;; This function calls:
  7972 ;;		_CCP1_Initialize
  7973 ;;		_CCP2_Initialize
  7974 ;;		_CCP3_Initialize
  7975 ;;		_EUSART_Initialize
  7976 ;;		_OSCILLATOR_Initialize
  7977 ;;		_PIN_MANAGER_Initialize
  7978 ;;		_PMD_Initialize
  7979 ;;		_TMR0_Initialize
  7980 ;;		_TMR1_Initialize
  7981 ;;		_WDT_Initialize
  7982 ;; This function is called by:
  7983 ;;		_PIC16_Init
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987  0DA3                     _SYSTEM_Initialize:	
  7988                           ;psect for function _SYSTEM_Initialize
  7989                           
  7990  0DA3                     l3379:	
  7991                           ;incstack = 0
  7992                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7993                           
  7994                           
  7995                           ;mcc.c: 17:     PMD_Initialize();
  7996  0DA3  318C  243F  318D   	fcall	_PMD_Initialize
  7997                           
  7998                           ;mcc.c: 18:     PIN_MANAGER_Initialize();
  7999  0DA6  318E  269F  318D   	fcall	_PIN_MANAGER_Initialize
  8000                           
  8001                           ;mcc.c: 19:     OSCILLATOR_Initialize();
  8002  0DA9  318C  2433  318D   	fcall	_OSCILLATOR_Initialize
  8003                           
  8004                           ;mcc.c: 20:     WDT_Initialize();
  8005  0DAC  318B  2394  318D   	fcall	_WDT_Initialize
  8006                           
  8007                           ;mcc.c: 21:     CCP2_Initialize();
  8008  0DAF  318D  2508  318D   	fcall	_CCP2_Initialize
  8009                           
  8010                           ;mcc.c: 22:     CCP3_Initialize();
  8011  0DB2  318D  2520  318D   	fcall	_CCP3_Initialize
  8012                           
  8013                           ;mcc.c: 23:     CCP1_Initialize();
  8014  0DB5  318C  24F0  318D   	fcall	_CCP1_Initialize
  8015                           
  8016                           ;mcc.c: 24:     TMR1_Initialize();
  8017  0DB8  318D  2538  318D   	fcall	_TMR1_Initialize
  8018                           
  8019                           ;mcc.c: 25:     TMR0_Initialize();
  8020  0DBB  318C  246D  318D   	fcall	_TMR0_Initialize
  8021                           
  8022                           ;mcc.c: 26:     EUSART_Initialize();
  8023  0DBE  3187  2774  318D   	fcall	_EUSART_Initialize
  8024  0DC1                     l312:
  8025  0DC1  0008               	return
  8026  0DC2                     __end_of_SYSTEM_Initialize:
  8027                           
  8028                           	psect	text15
  8029  0B94                     __ptext15:	
  8030 ;; *************** function _WDT_Initialize *****************
  8031 ;; Defined at:
  8032 ;;		line 51 in file "mcc.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;		None
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;		None
  8037 ;; Return value:  Size  Location     Type
  8038 ;;                  1    wreg      void 
  8039 ;; Registers used:
  8040 ;;		wreg
  8041 ;; Tracked objects:
  8042 ;;		On entry : 0/0
  8043 ;;		On exit  : 0/0
  8044 ;;		Unchanged: 0/0
  8045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8050 ;;Total ram usage:        0 bytes
  8051 ;; Hardware stack levels used: 1
  8052 ;; Hardware stack levels required when called: 4
  8053 ;; This function calls:
  8054 ;;		Nothing
  8055 ;; This function is called by:
  8056 ;;		_SYSTEM_Initialize
  8057 ;; This function uses a non-reentrant model
  8058 ;;
  8059                           
  8060  0B94                     _WDT_Initialize:	
  8061                           ;psect for function _WDT_Initialize
  8062                           
  8063  0B94                     l3097:	
  8064                           ;incstack = 0
  8065                           ; Regs used in _WDT_Initialize: [wreg]
  8066                           
  8067                           
  8068                           ;mcc.c: 54:     WDTCON = 0x16;
  8069  0B94  3016               	movlw	22
  8070  0B95  0021               	movlb	1	; select bank1
  8071  0B96  0097               	movwf	23	;volatile
  8072  0B97                     l321:
  8073  0B97  0008               	return
  8074  0B98                     __end_of_WDT_Initialize:
  8075                           
  8076                           	psect	text16
  8077  0C3F                     __ptext16:	
  8078 ;; *************** function _PMD_Initialize *****************
  8079 ;; Defined at:
  8080 ;;		line 59 in file "mcc.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;		None
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;		None
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  1    wreg      void 
  8087 ;; Registers used:
  8088 ;;		wreg, status,2
  8089 ;; Tracked objects:
  8090 ;;		On entry : 0/0
  8091 ;;		On exit  : 0/0
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;Total ram usage:        0 bytes
  8099 ;; Hardware stack levels used: 1
  8100 ;; Hardware stack levels required when called: 4
  8101 ;; This function calls:
  8102 ;;		Nothing
  8103 ;; This function is called by:
  8104 ;;		_SYSTEM_Initialize
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108  0C3F                     _PMD_Initialize:	
  8109                           ;psect for function _PMD_Initialize
  8110                           
  8111  0C3F                     l3045:	
  8112                           ;incstack = 0
  8113                           ; Regs used in _PMD_Initialize: [wreg+status,2]
  8114                           
  8115                           
  8116                           ;mcc.c: 62:     PMD0 = 0x00;
  8117  0C3F  0032               	movlb	18	; select bank18
  8118  0C40  0191               	clrf	17	;volatile
  8119  0C41                     l3047:
  8120                           
  8121                           ;mcc.c: 64:     PMD1 = 0x7C;
  8122  0C41  307C               	movlw	124
  8123  0C42  0092               	movwf	18	;volatile
  8124  0C43                     l3049:
  8125                           
  8126                           ;mcc.c: 66:     PMD2 = 0x66;
  8127  0C43  3066               	movlw	102
  8128  0C44  0093               	movwf	19	;volatile
  8129  0C45                     l3051:
  8130                           
  8131                           ;mcc.c: 68:     PMD3 = 0xC8;
  8132  0C45  30C8               	movlw	200
  8133  0C46  0094               	movwf	20	;volatile
  8134  0C47                     l3053:
  8135                           
  8136                           ;mcc.c: 70:     PMD4 = 0x00;
  8137  0C47  0195               	clrf	21	;volatile
  8138                           
  8139                           ;mcc.c: 72:     PMD5 = 0x1F;
  8140  0C48  301F               	movlw	31
  8141  0C49  0096               	movwf	22	;volatile
  8142  0C4A                     l324:
  8143  0C4A  0008               	return
  8144  0C4B                     __end_of_PMD_Initialize:
  8145                           
  8146                           	psect	text17
  8147  0E9F                     __ptext17:	
  8148 ;; *************** function _PIN_MANAGER_Initialize *****************
  8149 ;; Defined at:
  8150 ;;		line 4 in file "pin_manager.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;		None
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;		None
  8155 ;; Return value:  Size  Location     Type
  8156 ;;                  1    wreg      void 
  8157 ;; Registers used:
  8158 ;;		wreg, status,2
  8159 ;; Tracked objects:
  8160 ;;		On entry : 0/0
  8161 ;;		On exit  : 0/0
  8162 ;;		Unchanged: 0/0
  8163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8168 ;;Total ram usage:        0 bytes
  8169 ;; Hardware stack levels used: 1
  8170 ;; Hardware stack levels required when called: 4
  8171 ;; This function calls:
  8172 ;;		Nothing
  8173 ;; This function is called by:
  8174 ;;		_SYSTEM_Initialize
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178  0E9F                     _PIN_MANAGER_Initialize:	
  8179                           ;psect for function _PIN_MANAGER_Initialize
  8180                           
  8181  0E9F                     l3055:	
  8182                           ;incstack = 0
  8183                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8184                           
  8185                           
  8186                           ;pin_manager.c: 9:     LATA = 0x00;
  8187  0E9F  0022               	movlb	2	; select bank2
  8188  0EA0  018C               	clrf	12	;volatile
  8189                           
  8190                           ;pin_manager.c: 10:     LATB = 0x00;
  8191  0EA1  018D               	clrf	13	;volatile
  8192                           
  8193                           ;pin_manager.c: 11:     LATC = 0x00;
  8194  0EA2  018E               	clrf	14	;volatile
  8195  0EA3                     l3057:
  8196                           
  8197                           ;pin_manager.c: 16:     TRISA = 0x37;
  8198  0EA3  3037               	movlw	55
  8199  0EA4  0021               	movlb	1	; select bank1
  8200  0EA5  008C               	movwf	12	;volatile
  8201  0EA6                     l3059:
  8202                           
  8203                           ;pin_manager.c: 17:     TRISB = 0xF0;
  8204  0EA6  30F0               	movlw	240
  8205  0EA7  008D               	movwf	13	;volatile
  8206  0EA8                     l3061:
  8207                           
  8208                           ;pin_manager.c: 18:     TRISC = 0xFF;
  8209  0EA8  30FF               	movlw	255
  8210  0EA9  008E               	movwf	14	;volatile
  8211  0EAA                     l3063:
  8212                           
  8213                           ;pin_manager.c: 23:     ANSELC = 0xD7;
  8214  0EAA  30D7               	movlw	215
  8215  0EAB  0023               	movlb	3	; select bank3
  8216  0EAC  008E               	movwf	14	;volatile
  8217  0EAD                     l3065:
  8218                           
  8219                           ;pin_manager.c: 24:     ANSELB = 0xF0;
  8220  0EAD  30F0               	movlw	240
  8221  0EAE  008D               	movwf	13	;volatile
  8222  0EAF                     l3067:
  8223                           
  8224                           ;pin_manager.c: 25:     ANSELA = 0x33;
  8225  0EAF  3033               	movlw	51
  8226  0EB0  008C               	movwf	12	;volatile
  8227                           
  8228                           ;pin_manager.c: 30:     WPUB = 0x00;
  8229  0EB1  0024               	movlb	4	; select bank4
  8230  0EB2  018D               	clrf	13	;volatile
  8231                           
  8232                           ;pin_manager.c: 31:     WPUA = 0x00;
  8233  0EB3  018C               	clrf	12	;volatile
  8234                           
  8235                           ;pin_manager.c: 32:     WPUC = 0x00;
  8236  0EB4  018E               	clrf	14	;volatile
  8237                           
  8238                           ;pin_manager.c: 37:     ODCONA = 0x00;
  8239  0EB5  0025               	movlb	5	; select bank5
  8240  0EB6  018C               	clrf	12	;volatile
  8241                           
  8242                           ;pin_manager.c: 38:     ODCONB = 0x00;
  8243  0EB7  018D               	clrf	13	;volatile
  8244                           
  8245                           ;pin_manager.c: 39:     ODCONC = 0x00;
  8246  0EB8  018E               	clrf	14	;volatile
  8247  0EB9                     l3069:
  8248                           
  8249                           ;pin_manager.c: 44:     SLRCONA = 0x37;
  8250  0EB9  3037               	movlw	55
  8251  0EBA  0026               	movlb	6	; select bank6
  8252  0EBB  008C               	movwf	12	;volatile
  8253  0EBC                     l3071:
  8254                           
  8255                           ;pin_manager.c: 45:     SLRCONB = 0xF0;
  8256  0EBC  30F0               	movlw	240
  8257  0EBD  008D               	movwf	13	;volatile
  8258  0EBE                     l3073:
  8259                           
  8260                           ;pin_manager.c: 46:     SLRCONC = 0xFF;
  8261  0EBE  30FF               	movlw	255
  8262  0EBF  008E               	movwf	14	;volatile
  8263  0EC0                     l3075:
  8264                           
  8265                           ;pin_manager.c: 51:     INLVLA = 0x3F;
  8266  0EC0  303F               	movlw	63
  8267  0EC1  0027               	movlb	7	; select bank7
  8268  0EC2  008C               	movwf	12	;volatile
  8269  0EC3                     l3077:
  8270                           
  8271                           ;pin_manager.c: 52:     INLVLB = 0xF0;
  8272  0EC3  30F0               	movlw	240
  8273  0EC4  008D               	movwf	13	;volatile
  8274  0EC5                     l3079:
  8275                           
  8276                           ;pin_manager.c: 53:     INLVLC = 0xFF;
  8277  0EC5  30FF               	movlw	255
  8278  0EC6  008E               	movwf	14	;volatile
  8279  0EC7                     l3081:
  8280                           
  8281                           ;pin_manager.c: 55:     RXPPS = 0x0D;
  8282  0EC7  300D               	movlw	13
  8283  0EC8  003C               	movlb	28	; select bank28
  8284  0EC9  00A4               	movwf	36	;volatile
  8285  0ECA                     l3083:
  8286                           
  8287                           ;pin_manager.c: 56:     CCP2PPS = 0x13;
  8288  0ECA  3013               	movlw	19
  8289  0ECB  0095               	movwf	21	;volatile
  8290  0ECC                     l3085:
  8291                           
  8292                           ;pin_manager.c: 57:     CCP3PPS = 0x02;
  8293  0ECC  3002               	movlw	2
  8294  0ECD  0096               	movwf	22	;volatile
  8295  0ECE                     l3087:
  8296                           
  8297                           ;pin_manager.c: 58:     RC4PPS = 0x14;
  8298  0ECE  3014               	movlw	20
  8299  0ECF  003D               	movlb	29	; select bank29
  8300  0ED0  00A4               	movwf	36	;volatile
  8301  0ED1                     l3089:
  8302                           
  8303                           ;pin_manager.c: 59:     CCP1PPS = 0x15;
  8304  0ED1  3015               	movlw	21
  8305  0ED2  003C               	movlb	28	; select bank28
  8306  0ED3  0094               	movwf	20	;volatile
  8307  0ED4                     l812:
  8308  0ED4  0008               	return
  8309  0ED5                     __end_of_PIN_MANAGER_Initialize:
  8310                           
  8311                           	psect	text18
  8312  0C33                     __ptext18:	
  8313 ;; *************** function _OSCILLATOR_Initialize *****************
  8314 ;; Defined at:
  8315 ;;		line 31 in file "mcc.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;		None
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;		None
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  1    wreg      void 
  8322 ;; Registers used:
  8323 ;;		wreg, status,2
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8333 ;;Total ram usage:        0 bytes
  8334 ;; Hardware stack levels used: 1
  8335 ;; Hardware stack levels required when called: 4
  8336 ;; This function calls:
  8337 ;;		Nothing
  8338 ;; This function is called by:
  8339 ;;		_SYSTEM_Initialize
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343  0C33                     _OSCILLATOR_Initialize:	
  8344                           ;psect for function _OSCILLATOR_Initialize
  8345                           
  8346  0C33                     l3091:	
  8347                           ;incstack = 0
  8348                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8349                           
  8350                           
  8351                           ;mcc.c: 34:     OSCCON1 = 0x00;
  8352  0C33  0032               	movlb	18	; select bank18
  8353  0C34  0199               	clrf	25	;volatile
  8354                           
  8355                           ;mcc.c: 36:     OSCCON3 = 0x00;
  8356  0C35  019B               	clrf	27	;volatile
  8357                           
  8358                           ;mcc.c: 38:     OSCEN = 0x00;
  8359  0C36  019D               	clrf	29	;volatile
  8360  0C37                     l3093:
  8361                           
  8362                           ;mcc.c: 40:     OSCFRQ = 0x04;
  8363  0C37  3004               	movlw	4
  8364  0C38  009F               	movwf	31	;volatile
  8365  0C39                     l3095:
  8366                           
  8367                           ;mcc.c: 42:     OSCTUNE = 0x00;
  8368  0C39  019E               	clrf	30	;volatile
  8369  0C3A                     l315:	
  8370                           ;mcc.c: 45:     {;mcc.c: 46:     }
  8371                           
  8372                           
  8373                           ;mcc.c: 44:     while(PLLR == 0)
  8374  0C3A  1C1C               	btfss	28,0	;volatile
  8375  0C3B  2C3D               	goto	u1051
  8376  0C3C  2C3E               	goto	u1050
  8377  0C3D                     u1051:
  8378  0C3D  2C3A               	goto	l315
  8379  0C3E                     u1050:
  8380  0C3E                     l318:
  8381  0C3E  0008               	return
  8382  0C3F                     __end_of_OSCILLATOR_Initialize:
  8383                           
  8384                           	psect	text19
  8385  0774                     __ptext19:	
  8386 ;; *************** function _EUSART_Initialize *****************
  8387 ;; Defined at:
  8388 ;;		line 45 in file "eusart.c"
  8389 ;; Parameters:    Size  Location     Type
  8390 ;;		None
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;		None
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  1    wreg      void 
  8395 ;; Registers used:
  8396 ;;		wreg, status,2, status,0, pclath, cstack
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8404 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8405 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8406 ;;Total ram usage:        1 bytes
  8407 ;; Hardware stack levels used: 1
  8408 ;; Hardware stack levels required when called: 5
  8409 ;; This function calls:
  8410 ;;		_EUSART_SetErrorHandler
  8411 ;;		_EUSART_SetFramingErrorHandler
  8412 ;;		_EUSART_SetOverrunErrorHandler
  8413 ;;		_EUSART_SetRxInterruptHandler
  8414 ;;		_EUSART_SetTxInterruptHandler
  8415 ;; This function is called by:
  8416 ;;		_SYSTEM_Initialize
  8417 ;; This function uses a non-reentrant model
  8418 ;;
  8419                           
  8420  0774                     _EUSART_Initialize:	
  8421                           ;psect for function _EUSART_Initialize
  8422                           
  8423  0774                     l3131:	
  8424                           ;incstack = 0
  8425                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8426                           
  8427                           
  8428                           ;eusart.c: 48:     PIE1bits.RCIE = 0;
  8429  0774  0021               	movlb	1	; select bank1
  8430  0775  1291               	bcf	17,5	;volatile
  8431  0776                     l3133:
  8432                           
  8433                           ;eusart.c: 49:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  8434  0776  3083               	movlw	low _EUSART_Receive_ISR
  8435  0777  0020               	movlb	0	; select bank0
  8436  0778  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  8437  0779  300F               	movlw	high _EUSART_Receive_ISR
  8438  077A  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  8439  077B  318C  2402  3187   	fcall	_EUSART_SetRxInterruptHandler
  8440  077E                     l3135:
  8441                           
  8442                           ;eusart.c: 50:     PIE1bits.TXIE = 0;
  8443  077E  0021               	movlb	1	; select bank1
  8444  077F  1211               	bcf	17,4	;volatile
  8445                           
  8446                           ;eusart.c: 51:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  8447  0780  30C2               	movlw	low _EUSART_Transmit_ISR
  8448  0781  0020               	movlb	0	; select bank0
  8449  0782  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  8450  0783  300D               	movlw	high _EUSART_Transmit_ISR
  8451  0784  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  8452  0785  318C  240B  3187   	fcall	_EUSART_SetTxInterruptHandler
  8453  0788                     l3137:
  8454                           
  8455                           ;eusart.c: 55:     BAUD1CON = 0x08;
  8456  0788  3008               	movlw	8
  8457  0789  0023               	movlb	3	; select bank3
  8458  078A  009F               	movwf	31	;volatile
  8459  078B                     l3139:
  8460                           
  8461                           ;eusart.c: 58:     RC1STA = 0x90;
  8462  078B  3090               	movlw	144
  8463  078C  009D               	movwf	29	;volatile
  8464  078D                     l3141:
  8465                           
  8466                           ;eusart.c: 61:     TX1STA = 0x24;
  8467  078D  3024               	movlw	36
  8468  078E  009E               	movwf	30	;volatile
  8469  078F                     l3143:
  8470                           
  8471                           ;eusart.c: 64:     SP1BRGL = 0xA0;
  8472  078F  30A0               	movlw	160
  8473  0790  009B               	movwf	27	;volatile
  8474  0791                     l3145:
  8475                           
  8476                           ;eusart.c: 67:     SP1BRGH = 0x01;
  8477  0791  3001               	movlw	1
  8478  0792  009C               	movwf	28	;volatile
  8479  0793                     l3147:
  8480                           
  8481                           ;eusart.c: 70:     EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  8482  0793  3003               	movlw	low _EUSART_DefaultFramingErrorHandler
  8483  0794  0020               	movlb	0	; select bank0
  8484  0795  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  8485  0796  3000               	movlw	high _EUSART_DefaultFramingErrorHandler
  8486  0797  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  8487  0798  318B  23F0  3187   	fcall	_EUSART_SetFramingErrorHandler
  8488  079B                     l3149:
  8489                           
  8490                           ;eusart.c: 71:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  8491  079B  308C               	movlw	low _EUSART_DefaultOverrunErrorHandler
  8492  079C  0020               	movlb	0	; select bank0
  8493  079D  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  8494  079E  300B               	movlw	high _EUSART_DefaultOverrunErrorHandler
  8495  079F  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  8496  07A0  318B  23F9  3187   	fcall	_EUSART_SetOverrunErrorHandler
  8497  07A3                     l3151:
  8498                           
  8499                           ;eusart.c: 72:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  8500  07A3  3088               	movlw	low _EUSART_DefaultErrorHandler
  8501  07A4  0020               	movlb	0	; select bank0
  8502  07A5  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  8503  07A6  300B               	movlw	high _EUSART_DefaultErrorHandler
  8504  07A7  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  8505  07A8  318B  23E7  3187   	fcall	_EUSART_SetErrorHandler
  8506  07AB                     l3153:
  8507                           
  8508                           ;eusart.c: 74:     eusartRxLastError.status = 0;
  8509  07AB  0021               	movlb	1	; select bank1
  8510  07AC  01D4               	clrf	_eusartRxLastError^(0+128)	;volatile
  8511  07AD                     l3155:
  8512                           
  8513                           ;eusart.c: 77:     eusartTxHead = 0;
  8514  07AD  01FD               	clrf	_eusartTxHead	;volatile
  8515  07AE                     l3157:
  8516                           
  8517                           ;eusart.c: 78:     eusartTxTail = 0;
  8518  07AE  01D7               	clrf	_eusartTxTail^(0+128)	;volatile
  8519  07AF                     l3159:
  8520                           
  8521                           ;eusart.c: 79:     eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  8522  07AF  3008               	movlw	8
  8523  07B0  0020               	movlb	0	; select bank0
  8524  07B1  00A2               	movwf	??_EUSART_Initialize
  8525  07B2  0822               	movf	??_EUSART_Initialize,w
  8526  07B3  0021               	movlb	1	; select bank1
  8527  07B4  00D6               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  8528                           
  8529                           ;eusart.c: 81:     eusartRxHead = 0;
  8530  07B5  01FC               	clrf	_eusartRxHead	;volatile
  8531                           
  8532                           ;eusart.c: 82:     eusartRxTail = 0;
  8533  07B6  01FB               	clrf	_eusartRxTail	;volatile
  8534                           
  8535                           ;eusart.c: 83:     eusartRxCount = 0;
  8536  07B7  01D5               	clrf	_eusartRxCount^(0+128)	;volatile
  8537  07B8                     l3161:
  8538                           
  8539                           ;eusart.c: 86:     PIE1bits.RCIE = 1;
  8540  07B8  1691               	bsf	17,5	;volatile
  8541  07B9                     l635:
  8542  07B9  0008               	return
  8543  07BA                     __end_of_EUSART_Initialize:
  8544                           
  8545                           	psect	text20
  8546  0C0B                     __ptext20:	
  8547 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  8548 ;; Defined at:
  8549 ;;		line 278 in file "eusart.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8552 ;;		 -> EUSART_Transmit_ISR(1), 
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;		None
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  1    wreg      void 
  8557 ;; Registers used:
  8558 ;;		wreg
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8564 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8567 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8568 ;;Total ram usage:        2 bytes
  8569 ;; Hardware stack levels used: 1
  8570 ;; Hardware stack levels required when called: 4
  8571 ;; This function calls:
  8572 ;;		Nothing
  8573 ;; This function is called by:
  8574 ;;		_EUSART_Initialize
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578  0C0B                     _EUSART_SetTxInterruptHandler:	
  8579                           ;psect for function _EUSART_SetTxInterruptHandler
  8580                           
  8581  0C0B                     l2859:	
  8582                           ;incstack = 0
  8583                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  8584                           
  8585                           
  8586                           ;eusart.c: 279:     EUSART_TxDefaultInterruptHandler = interruptHandler;
  8587  0C0B  0020               	movlb	0	; select bank0
  8588  0C0C  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  8589  0C0D  0021               	movlb	1	; select bank1
  8590  0C0E  00BD               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
  8591  0C0F  0020               	movlb	0	; select bank0
  8592  0C10  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  8593  0C11  0021               	movlb	1	; select bank1
  8594  0C12  00BC               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
  8595  0C13                     l707:
  8596  0C13  0008               	return
  8597  0C14                     __end_of_EUSART_SetTxInterruptHandler:
  8598                           
  8599                           	psect	text21
  8600  0C02                     __ptext21:	
  8601 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  8602 ;; Defined at:
  8603 ;;		line 284 in file "eusart.c"
  8604 ;; Parameters:    Size  Location     Type
  8605 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8606 ;;		 -> EUSART_Receive_ISR(1), 
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;		None
  8609 ;; Return value:  Size  Location     Type
  8610 ;;                  1    wreg      void 
  8611 ;; Registers used:
  8612 ;;		wreg
  8613 ;; Tracked objects:
  8614 ;;		On entry : 0/0
  8615 ;;		On exit  : 0/0
  8616 ;;		Unchanged: 0/0
  8617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8618 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8621 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8622 ;;Total ram usage:        2 bytes
  8623 ;; Hardware stack levels used: 1
  8624 ;; Hardware stack levels required when called: 4
  8625 ;; This function calls:
  8626 ;;		Nothing
  8627 ;; This function is called by:
  8628 ;;		_EUSART_Initialize
  8629 ;; This function uses a non-reentrant model
  8630 ;;
  8631                           
  8632  0C02                     _EUSART_SetRxInterruptHandler:	
  8633                           ;psect for function _EUSART_SetRxInterruptHandler
  8634                           
  8635  0C02                     l2857:	
  8636                           ;incstack = 0
  8637                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  8638                           
  8639                           
  8640                           ;eusart.c: 285:     EUSART_RxDefaultInterruptHandler = interruptHandler;
  8641  0C02  0020               	movlb	0	; select bank0
  8642  0C03  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  8643  0C04  0021               	movlb	1	; select bank1
  8644  0C05  00BB               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  8645  0C06  0020               	movlb	0	; select bank0
  8646  0C07  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  8647  0C08  0021               	movlb	1	; select bank1
  8648  0C09  00BA               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  8649  0C0A                     l710:
  8650  0C0A  0008               	return
  8651  0C0B                     __end_of_EUSART_SetRxInterruptHandler:
  8652                           
  8653                           	psect	text22
  8654  0BF9                     __ptext22:	
  8655 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8656 ;; Defined at:
  8657 ;;		line 266 in file "eusart.c"
  8658 ;; Parameters:    Size  Location     Type
  8659 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8660 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;		None
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  1    wreg      void 
  8665 ;; Registers used:
  8666 ;;		wreg
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8672 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8675 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8676 ;;Total ram usage:        2 bytes
  8677 ;; Hardware stack levels used: 1
  8678 ;; Hardware stack levels required when called: 4
  8679 ;; This function calls:
  8680 ;;		Nothing
  8681 ;; This function is called by:
  8682 ;;		_EUSART_Initialize
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685                           
  8686  0BF9                     _EUSART_SetOverrunErrorHandler:	
  8687                           ;psect for function _EUSART_SetOverrunErrorHandler
  8688                           
  8689  0BF9                     l2863:	
  8690                           ;incstack = 0
  8691                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8692                           
  8693                           
  8694                           ;eusart.c: 267:     EUSART_OverrunErrorHandler = interruptHandler;
  8695  0BF9  0020               	movlb	0	; select bank0
  8696  0BFA  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  8697  0BFB  0021               	movlb	1	; select bank1
  8698  0BFC  00B7               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  8699  0BFD  0020               	movlb	0	; select bank0
  8700  0BFE  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  8701  0BFF  0021               	movlb	1	; select bank1
  8702  0C00  00B6               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  8703  0C01                     l701:
  8704  0C01  0008               	return
  8705  0C02                     __end_of_EUSART_SetOverrunErrorHandler:
  8706                           
  8707                           	psect	text23
  8708  0BF0                     __ptext23:	
  8709 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8710 ;; Defined at:
  8711 ;;		line 260 in file "eusart.c"
  8712 ;; Parameters:    Size  Location     Type
  8713 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8714 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8715 ;; Auto vars:     Size  Location     Type
  8716 ;;		None
  8717 ;; Return value:  Size  Location     Type
  8718 ;;                  1    wreg      void 
  8719 ;; Registers used:
  8720 ;;		wreg
  8721 ;; Tracked objects:
  8722 ;;		On entry : 0/0
  8723 ;;		On exit  : 0/0
  8724 ;;		Unchanged: 0/0
  8725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8726 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8729 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8730 ;;Total ram usage:        2 bytes
  8731 ;; Hardware stack levels used: 1
  8732 ;; Hardware stack levels required when called: 4
  8733 ;; This function calls:
  8734 ;;		Nothing
  8735 ;; This function is called by:
  8736 ;;		_EUSART_Initialize
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740  0BF0                     _EUSART_SetFramingErrorHandler:	
  8741                           ;psect for function _EUSART_SetFramingErrorHandler
  8742                           
  8743  0BF0                     l2861:	
  8744                           ;incstack = 0
  8745                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8746                           
  8747                           
  8748                           ;eusart.c: 261:     EUSART_FramingErrorHandler = interruptHandler;
  8749  0BF0  0020               	movlb	0	; select bank0
  8750  0BF1  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  8751  0BF2  0021               	movlb	1	; select bank1
  8752  0BF3  00B9               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  8753  0BF4  0020               	movlb	0	; select bank0
  8754  0BF5  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  8755  0BF6  0021               	movlb	1	; select bank1
  8756  0BF7  00B8               	movwf	_EUSART_FramingErrorHandler^(0+128)
  8757  0BF8                     l698:
  8758  0BF8  0008               	return
  8759  0BF9                     __end_of_EUSART_SetFramingErrorHandler:
  8760                           
  8761                           	psect	text24
  8762  0BE7                     __ptext24:	
  8763 ;; *************** function _EUSART_SetErrorHandler *****************
  8764 ;; Defined at:
  8765 ;;		line 272 in file "eusart.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8768 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;		None
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  1    wreg      void 
  8773 ;; Registers used:
  8774 ;;		wreg
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8780 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8783 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;Total ram usage:        2 bytes
  8785 ;; Hardware stack levels used: 1
  8786 ;; Hardware stack levels required when called: 4
  8787 ;; This function calls:
  8788 ;;		Nothing
  8789 ;; This function is called by:
  8790 ;;		_EUSART_Initialize
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794  0BE7                     _EUSART_SetErrorHandler:	
  8795                           ;psect for function _EUSART_SetErrorHandler
  8796                           
  8797  0BE7                     l2865:	
  8798                           ;incstack = 0
  8799                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  8800                           
  8801                           
  8802                           ;eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  8803  0BE7  0020               	movlb	0	; select bank0
  8804  0BE8  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  8805  0BE9  0021               	movlb	1	; select bank1
  8806  0BEA  00B5               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  8807  0BEB  0020               	movlb	0	; select bank0
  8808  0BEC  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  8809  0BED  0021               	movlb	1	; select bank1
  8810  0BEE  00B4               	movwf	_EUSART_ErrorHandler^(0+128)
  8811  0BEF                     l704:
  8812  0BEF  0008               	return
  8813  0BF0                     __end_of_EUSART_SetErrorHandler:
  8814                           
  8815                           	psect	text25
  8816  0D20                     __ptext25:	
  8817 ;; *************** function _CCP3_Initialize *****************
  8818 ;; Defined at:
  8819 ;;		line 65 in file "ccp3.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;		None
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;		None
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  1    wreg      void 
  8826 ;; Registers used:
  8827 ;;		wreg, status,2, status,0, pclath, cstack
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8837 ;;Total ram usage:        0 bytes
  8838 ;; Hardware stack levels used: 1
  8839 ;; Hardware stack levels required when called: 5
  8840 ;; This function calls:
  8841 ;;		_CCP3_SetCallBack
  8842 ;; This function is called by:
  8843 ;;		_SYSTEM_Initialize
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847  0D20                     _CCP3_Initialize:	
  8848                           ;psect for function _CCP3_Initialize
  8849                           
  8850  0D20                     l3115:	
  8851                           ;incstack = 0
  8852                           ; Regs used in _CCP3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8853                           
  8854                           
  8855                           ;ccp3.c: 70:  CCP3CON = 0x83;
  8856  0D20  3083               	movlw	131
  8857  0D21  0026               	movlb	6	; select bank6
  8858  0D22  0093               	movwf	19	;volatile
  8859  0D23                     l3117:
  8860                           
  8861                           ;ccp3.c: 73:  CCP3CAP = 0x00;
  8862  0D23  0194               	clrf	20	;volatile
  8863  0D24                     l3119:
  8864                           
  8865                           ;ccp3.c: 76:  CCPR3H = 0x00;
  8866  0D24  0192               	clrf	18	;volatile
  8867  0D25                     l3121:
  8868                           
  8869                           ;ccp3.c: 79:  CCPR3L = 0x00;
  8870  0D25  0191               	clrf	17	;volatile
  8871  0D26                     l3123:
  8872                           
  8873                           ;ccp3.c: 82:     CCP3_SetCallBack(CCP3_DefaultCallBack);
  8874  0D26  3002               	movlw	low _CCP3_DefaultCallBack
  8875  0D27  0020               	movlb	0	; select bank0
  8876  0D28  00A0               	movwf	CCP3_SetCallBack@customCallBack
  8877  0D29  3000               	movlw	high _CCP3_DefaultCallBack
  8878  0D2A  00A1               	movwf	CCP3_SetCallBack@customCallBack+1
  8879  0D2B  318B  23DE  318D   	fcall	_CCP3_SetCallBack
  8880  0D2E                     l3125:
  8881                           
  8882                           ;ccp3.c: 85:  CCPTMRSbits.C3TSEL = 0x1;
  8883  0D2E  0025               	movlb	5	; select bank5
  8884  0D2F  081F               	movf	31,w	;volatile
  8885  0D30  39CF               	andlw	-49
  8886  0D31  3810               	iorlw	16
  8887  0D32  009F               	movwf	31	;volatile
  8888  0D33                     l3127:
  8889                           
  8890                           ;ccp3.c: 88:     PIR4bits.CCP3IF = 0;
  8891  0D33  0020               	movlb	0	; select bank0
  8892  0D34  1114               	bcf	20,2	;volatile
  8893  0D35                     l3129:
  8894                           
  8895                           ;ccp3.c: 91:     PIE4bits.CCP3IE = 1;
  8896  0D35  0021               	movlb	1	; select bank1
  8897  0D36  1514               	bsf	20,2	;volatile
  8898  0D37                     l491:
  8899  0D37  0008               	return
  8900  0D38                     __end_of_CCP3_Initialize:
  8901                           
  8902                           	psect	text26
  8903  0BDE                     __ptext26:	
  8904 ;; *************** function _CCP3_SetCallBack *****************
  8905 ;; Defined at:
  8906 ;;		line 109 in file "ccp3.c"
  8907 ;; Parameters:    Size  Location     Type
  8908 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  8909 ;;		 -> CCP3_DefaultCallBack(1), 
  8910 ;; Auto vars:     Size  Location     Type
  8911 ;;		None
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  1    wreg      void 
  8914 ;; Registers used:
  8915 ;;		wreg
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8921 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8924 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8925 ;;Total ram usage:        2 bytes
  8926 ;; Hardware stack levels used: 1
  8927 ;; Hardware stack levels required when called: 4
  8928 ;; This function calls:
  8929 ;;		Nothing
  8930 ;; This function is called by:
  8931 ;;		_CCP3_Initialize
  8932 ;; This function uses a non-reentrant model
  8933 ;;
  8934                           
  8935  0BDE                     _CCP3_SetCallBack:	
  8936                           ;psect for function _CCP3_SetCallBack
  8937                           
  8938  0BDE                     l2853:	
  8939                           ;incstack = 0
  8940                           ; Regs used in _CCP3_SetCallBack: [wreg]
  8941                           
  8942                           
  8943                           ;ccp3.c: 110:     CCP3_CallBack = customCallBack;
  8944  0BDE  0020               	movlb	0	; select bank0
  8945  0BDF  0821               	movf	CCP3_SetCallBack@customCallBack+1,w
  8946  0BE0  0021               	movlb	1	; select bank1
  8947  0BE1  00C3               	movwf	(_CCP3_CallBack+1)^(0+128)
  8948  0BE2  0020               	movlb	0	; select bank0
  8949  0BE3  0820               	movf	CCP3_SetCallBack@customCallBack,w
  8950  0BE4  0021               	movlb	1	; select bank1
  8951  0BE5  00C2               	movwf	_CCP3_CallBack^(0+128)
  8952  0BE6                     l497:
  8953  0BE6  0008               	return
  8954  0BE7                     __end_of_CCP3_SetCallBack:
  8955                           
  8956                           	psect	text27
  8957  0D08                     __ptext27:	
  8958 ;; *************** function _CCP2_Initialize *****************
  8959 ;; Defined at:
  8960 ;;		line 45 in file "ccp2.c"
  8961 ;; Parameters:    Size  Location     Type
  8962 ;;		None
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;		None
  8965 ;; Return value:  Size  Location     Type
  8966 ;;                  1    wreg      void 
  8967 ;; Registers used:
  8968 ;;		wreg, status,2, status,0, pclath, cstack
  8969 ;; Tracked objects:
  8970 ;;		On entry : 0/0
  8971 ;;		On exit  : 0/0
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8978 ;;Total ram usage:        0 bytes
  8979 ;; Hardware stack levels used: 1
  8980 ;; Hardware stack levels required when called: 5
  8981 ;; This function calls:
  8982 ;;		_CCP2_SetCallBack
  8983 ;; This function is called by:
  8984 ;;		_SYSTEM_Initialize
  8985 ;; This function uses a non-reentrant model
  8986 ;;
  8987                           
  8988  0D08                     _CCP2_Initialize:	
  8989                           ;psect for function _CCP2_Initialize
  8990                           
  8991  0D08                     l3099:	
  8992                           ;incstack = 0
  8993                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8994                           
  8995                           
  8996                           ;ccp2.c: 50:  CCP2CON = 0x83;
  8997  0D08  3083               	movlw	131
  8998  0D09  0025               	movlb	5	; select bank5
  8999  0D0A  0097               	movwf	23	;volatile
  9000  0D0B                     l3101:
  9001                           
  9002                           ;ccp2.c: 53:  CCP2CAP = 0x00;
  9003  0D0B  0198               	clrf	24	;volatile
  9004  0D0C                     l3103:
  9005                           
  9006                           ;ccp2.c: 56:  CCPR2H = 0x00;
  9007  0D0C  0196               	clrf	22	;volatile
  9008  0D0D                     l3105:
  9009                           
  9010                           ;ccp2.c: 59:  CCPR2L = 0x00;
  9011  0D0D  0195               	clrf	21	;volatile
  9012  0D0E                     l3107:
  9013                           
  9014                           ;ccp2.c: 62:     CCP2_SetCallBack(CCP2_DefaultCallBack);
  9015  0D0E  300F               	movlw	low _CCP2_DefaultCallBack
  9016  0D0F  0020               	movlb	0	; select bank0
  9017  0D10  00A0               	movwf	CCP2_SetCallBack@customCallBack
  9018  0D11  300F               	movlw	high _CCP2_DefaultCallBack
  9019  0D12  00A1               	movwf	CCP2_SetCallBack@customCallBack+1
  9020  0D13  318B  23D5  318D   	fcall	_CCP2_SetCallBack
  9021  0D16                     l3109:
  9022                           
  9023                           ;ccp2.c: 65:  CCPTMRSbits.C2TSEL = 0x1;
  9024  0D16  0025               	movlb	5	; select bank5
  9025  0D17  081F               	movf	31,w	;volatile
  9026  0D18  39F3               	andlw	-13
  9027  0D19  3804               	iorlw	4
  9028  0D1A  009F               	movwf	31	;volatile
  9029  0D1B                     l3111:
  9030                           
  9031                           ;ccp2.c: 68:     PIR4bits.CCP2IF = 0;
  9032  0D1B  0020               	movlb	0	; select bank0
  9033  0D1C  1094               	bcf	20,1	;volatile
  9034  0D1D                     l3113:
  9035                           
  9036                           ;ccp2.c: 71:     PIE4bits.CCP2IE = 1;
  9037  0D1D  0021               	movlb	1	; select bank1
  9038  0D1E  1494               	bsf	20,1	;volatile
  9039  0D1F                     l461:
  9040  0D1F  0008               	return
  9041  0D20                     __end_of_CCP2_Initialize:
  9042                           
  9043                           	psect	text28
  9044  0BD5                     __ptext28:	
  9045 ;; *************** function _CCP2_SetCallBack *****************
  9046 ;; Defined at:
  9047 ;;		line 93 in file "ccp2.c"
  9048 ;; Parameters:    Size  Location     Type
  9049 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  9050 ;;		 -> CCP2_DefaultCallBack(1), 
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;		None
  9053 ;; Return value:  Size  Location     Type
  9054 ;;                  1    wreg      void 
  9055 ;; Registers used:
  9056 ;;		wreg
  9057 ;; Tracked objects:
  9058 ;;		On entry : 0/0
  9059 ;;		On exit  : 0/0
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9062 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9065 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9066 ;;Total ram usage:        2 bytes
  9067 ;; Hardware stack levels used: 1
  9068 ;; Hardware stack levels required when called: 4
  9069 ;; This function calls:
  9070 ;;		Nothing
  9071 ;; This function is called by:
  9072 ;;		_CCP2_Initialize
  9073 ;; This function uses a non-reentrant model
  9074 ;;
  9075                           
  9076  0BD5                     _CCP2_SetCallBack:	
  9077                           ;psect for function _CCP2_SetCallBack
  9078                           
  9079  0BD5                     l2851:	
  9080                           ;incstack = 0
  9081                           ; Regs used in _CCP2_SetCallBack: [wreg]
  9082                           
  9083                           
  9084                           ;ccp2.c: 94:     CCP2_CallBack = customCallBack;
  9085  0BD5  0020               	movlb	0	; select bank0
  9086  0BD6  0821               	movf	CCP2_SetCallBack@customCallBack+1,w
  9087  0BD7  0021               	movlb	1	; select bank1
  9088  0BD8  00C9               	movwf	(_CCP2_CallBack+1)^(0+128)
  9089  0BD9  0020               	movlb	0	; select bank0
  9090  0BDA  0820               	movf	CCP2_SetCallBack@customCallBack,w
  9091  0BDB  0021               	movlb	1	; select bank1
  9092  0BDC  00C8               	movwf	_CCP2_CallBack^(0+128)
  9093  0BDD                     l467:
  9094  0BDD  0008               	return
  9095  0BDE                     __end_of_CCP2_SetCallBack:
  9096                           
  9097                           	psect	text29
  9098  071D                     __ptext29:	
  9099 ;; *************** function _JSN_Sensor_Trig *****************
  9100 ;; Defined at:
  9101 ;;		line 93 in file "JSN_Sensor.c"
  9102 ;; Parameters:    Size  Location     Type
  9103 ;;  Sensor          1    wreg     PTR struct .
  9104 ;;		 -> Sens1(6), 
  9105 ;; Auto vars:     Size  Location     Type
  9106 ;;  Sensor          1   10[BANK0 ] PTR struct .
  9107 ;;		 -> Sens1(6), 
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  1    wreg      void 
  9110 ;; Registers used:
  9111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9118 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9119 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9120 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9121 ;;Total ram usage:        5 bytes
  9122 ;; Hardware stack levels used: 1
  9123 ;; Hardware stack levels required when called: 6
  9124 ;; This function calls:
  9125 ;;		_FR_Timer_GetMicros
  9126 ;;		_WritePin
  9127 ;; This function is called by:
  9128 ;;		_main
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132  071D                     _JSN_Sensor_Trig:	
  9133                           ;psect for function _JSN_Sensor_Trig
  9134                           
  9135                           
  9136                           ;incstack = 0
  9137                           ; Regs used in _JSN_Sensor_Trig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9138                           ;JSN_Sensor_Trig@Sensor stored from wreg
  9139  071D  0020               	movlb	0	; select bank0
  9140  071E  00AA               	movwf	JSN_Sensor_Trig@Sensor
  9141  071F                     l3525:
  9142                           
  9143                           ;JSN_Sensor.c: 94:     micros = FR_Timer_GetMicros();
  9144  071F  318D  2587  3187   	fcall	_FR_Timer_GetMicros
  9145  0722  0020               	movlb	0	; select bank0
  9146  0723  0825               	movf	?_FR_Timer_GetMicros+3,w
  9147  0724  0021               	movlb	1	; select bank1
  9148  0725  00AB               	movwf	(_micros+3)^(0+128)
  9149  0726  0020               	movlb	0	; select bank0
  9150  0727  0824               	movf	?_FR_Timer_GetMicros+2,w
  9151  0728  0021               	movlb	1	; select bank1
  9152  0729  00AA               	movwf	(_micros+2)^(0+128)
  9153  072A  0020               	movlb	0	; select bank0
  9154  072B  0823               	movf	?_FR_Timer_GetMicros+1,w
  9155  072C  0021               	movlb	1	; select bank1
  9156  072D  00A9               	movwf	(_micros+1)^(0+128)
  9157  072E  0020               	movlb	0	; select bank0
  9158  072F  0822               	movf	?_FR_Timer_GetMicros,w
  9159  0730  0021               	movlb	1	; select bank1
  9160  0731  00A8               	movwf	_micros^(0+128)
  9161  0732                     l3527:
  9162                           
  9163                           ;JSN_Sensor.c: 97:     WritePin(Sensor->trigPin, 1);
  9164  0732  0020               	movlb	0	; select bank0
  9165  0733  01A0               	clrf	WritePin@val
  9166  0734  0AA0               	incf	WritePin@val,f
  9167  0735  082A               	movf	JSN_Sensor_Trig@Sensor,w
  9168  0736  3E04               	addlw	4
  9169  0737  0086               	movwf	6
  9170  0738  0187               	clrf	7
  9171  0739  0801               	movf	1,w
  9172  073A  3182  223F  3187   	fcall	_WritePin
  9173  073D                     l3529:	
  9174                           ;JSN_Sensor.c: 100:     while((FR_Timer_GetMicros() - micros) < 11);
  9175                           
  9176  073D  318D  2587  3187   	fcall	_FR_Timer_GetMicros
  9177  0740  0021               	movlb	1	; select bank1
  9178  0741  0828               	movf	_micros^(0+128),w
  9179  0742  0020               	movlb	0	; select bank0
  9180  0743  0222               	subwf	?_FR_Timer_GetMicros,w
  9181  0744  00A6               	movwf	??_JSN_Sensor_Trig
  9182  0745  0021               	movlb	1	; select bank1
  9183  0746  0829               	movf	(_micros+1)^(0+128),w
  9184  0747  0020               	movlb	0	; select bank0
  9185  0748  3B23               	subwfb	?_FR_Timer_GetMicros+1,w
  9186  0749  00A7               	movwf	??_JSN_Sensor_Trig+1
  9187  074A  0021               	movlb	1	; select bank1
  9188  074B  082A               	movf	(_micros+2)^(0+128),w
  9189  074C  0020               	movlb	0	; select bank0
  9190  074D  3B24               	subwfb	?_FR_Timer_GetMicros+2,w
  9191  074E  00A8               	movwf	??_JSN_Sensor_Trig+2
  9192  074F  0021               	movlb	1	; select bank1
  9193  0750  082B               	movf	(_micros+3)^(0+128),w
  9194  0751  0020               	movlb	0	; select bank0
  9195  0752  3B25               	subwfb	?_FR_Timer_GetMicros+3,w
  9196  0753  00A9               	movwf	??_JSN_Sensor_Trig+3
  9197  0754  0829               	movf	??_JSN_Sensor_Trig+3,w
  9198  0755  1D03               	btfss	3,2
  9199  0756  2F63               	goto	u1230
  9200  0757  0828               	movf	??_JSN_Sensor_Trig+2,w
  9201  0758  1D03               	btfss	3,2
  9202  0759  2F63               	goto	u1230
  9203  075A  0827               	movf	??_JSN_Sensor_Trig+1,w
  9204  075B  1D03               	btfss	3,2
  9205  075C  2F63               	goto	u1230
  9206  075D  300B               	movlw	11
  9207  075E  0226               	subwf	??_JSN_Sensor_Trig,w
  9208  075F  1C03               	btfss	3,0
  9209  0760  2F62               	goto	u1231
  9210  0761  2F63               	goto	u1230
  9211  0762                     u1231:
  9212  0762  2F3D               	goto	l3529
  9213  0763                     u1230:
  9214  0763                     l3531:
  9215                           
  9216                           ;JSN_Sensor.c: 103:     WritePin(Sensor->trigPin, 0);
  9217  0763  0020               	movlb	0	; select bank0
  9218  0764  01A0               	clrf	WritePin@val
  9219  0765  082A               	movf	JSN_Sensor_Trig@Sensor,w
  9220  0766  3E04               	addlw	4
  9221  0767  0086               	movwf	6
  9222  0768  0187               	clrf	7
  9223  0769  0801               	movf	1,w
  9224  076A  3182  223F  3187   	fcall	_WritePin
  9225  076D                     l3533:
  9226                           
  9227                           ;JSN_Sensor.c: 106:     lastTrig = Sensor;
  9228  076D  0020               	movlb	0	; select bank0
  9229  076E  082A               	movf	JSN_Sensor_Trig@Sensor,w
  9230  076F  00A6               	movwf	??_JSN_Sensor_Trig
  9231  0770  0826               	movf	??_JSN_Sensor_Trig,w
  9232  0771  0021               	movlb	1	; select bank1
  9233  0772  00D8               	movwf	_lastTrig^(0+128)
  9234  0773                     l63:
  9235  0773  0008               	return
  9236  0774                     __end_of_JSN_Sensor_Trig:
  9237                           
  9238                           	psect	text30
  9239  0D87                     __ptext30:	
  9240 ;; *************** function _FR_Timer_GetMicros *****************
  9241 ;; Defined at:
  9242 ;;		line 46 in file "FR_Timer.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;		None
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;		None
  9247 ;; Return value:  Size  Location     Type
  9248 ;;                  4    2[BANK0 ] unsigned long 
  9249 ;; Registers used:
  9250 ;;		wreg, pclath, cstack
  9251 ;; Tracked objects:
  9252 ;;		On entry : 0/0
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9256 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9259 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9260 ;;Total ram usage:        4 bytes
  9261 ;; Hardware stack levels used: 1
  9262 ;; Hardware stack levels required when called: 5
  9263 ;; This function calls:
  9264 ;;		_TMR0_ReadTimer
  9265 ;; This function is called by:
  9266 ;;		_JSN_Sensor_Trig
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270  0D87                     _FR_Timer_GetMicros:	
  9271                           ;psect for function _FR_Timer_GetMicros
  9272                           
  9273  0D87                     l3375:	
  9274                           ;incstack = 0
  9275                           ; Regs used in _FR_Timer_GetMicros: [wreg+pclath+cstack]
  9276                           
  9277                           
  9278                           ;FR_Timer.c: 47:     return (micros + TMR0_ReadTimer());
  9279  0D87  318B  23AC  318D   	fcall	_TMR0_ReadTimer
  9280  0D8A  0021               	movlb	1	; select bank1
  9281  0D8B  0720               	addwf	_micros@FR_Timer$F158^(0+128),w
  9282  0D8C  0020               	movlb	0	; select bank0
  9283  0D8D  00A2               	movwf	?_FR_Timer_GetMicros
  9284  0D8E  0021               	movlb	1	; select bank1
  9285  0D8F  0821               	movf	(_micros@FR_Timer$F158+1)^(0+128),w
  9286  0D90  1803               	skipnc
  9287  0D91  0F21               	incfsz	(_micros@FR_Timer$F158+1)^(0+128),w
  9288  0D92  1003               	clrc
  9289  0D93  0020               	movlb	0	; select bank0
  9290  0D94  00A3               	movwf	?_FR_Timer_GetMicros+1
  9291  0D95  0021               	movlb	1	; select bank1
  9292  0D96  0822               	movf	(_micros@FR_Timer$F158+2)^(0+128),w
  9293  0D97  1803               	skipnc
  9294  0D98  0F22               	incfsz	(_micros@FR_Timer$F158+2)^(0+128),w
  9295  0D99  1003               	clrc
  9296  0D9A  0020               	movlb	0	; select bank0
  9297  0D9B  00A4               	movwf	?_FR_Timer_GetMicros+2
  9298  0D9C  0021               	movlb	1	; select bank1
  9299  0D9D  0823               	movf	(_micros@FR_Timer$F158+3)^(0+128),w
  9300  0D9E  1803               	skipnc
  9301  0D9F  0A23               	incf	(_micros@FR_Timer$F158+3)^(0+128),w
  9302  0DA0  0020               	movlb	0	; select bank0
  9303  0DA1  00A5               	movwf	?_FR_Timer_GetMicros+3
  9304  0DA2                     l98:
  9305  0DA2  0008               	return
  9306  0DA3                     __end_of_FR_Timer_GetMicros:
  9307                           
  9308                           	psect	text31
  9309  0BAC                     __ptext31:	
  9310 ;; *************** function _TMR0_ReadTimer *****************
  9311 ;; Defined at:
  9312 ;;		line 62 in file "tmr0.c"
  9313 ;; Parameters:    Size  Location     Type
  9314 ;;		None
  9315 ;; Auto vars:     Size  Location     Type
  9316 ;;  readVal         1    1[BANK0 ] unsigned char 
  9317 ;; Return value:  Size  Location     Type
  9318 ;;                  1    wreg      unsigned char 
  9319 ;; Registers used:
  9320 ;;		wreg
  9321 ;; Tracked objects:
  9322 ;;		On entry : 0/0
  9323 ;;		On exit  : 0/0
  9324 ;;		Unchanged: 0/0
  9325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9327 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9328 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9329 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9330 ;;Total ram usage:        2 bytes
  9331 ;; Hardware stack levels used: 1
  9332 ;; Hardware stack levels required when called: 4
  9333 ;; This function calls:
  9334 ;;		Nothing
  9335 ;; This function is called by:
  9336 ;;		_FR_Timer_GetMicros
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340  0BAC                     _TMR0_ReadTimer:	
  9341                           ;psect for function _TMR0_ReadTimer
  9342                           
  9343  0BAC                     l2947:	
  9344                           ;incstack = 0
  9345                           ; Regs used in _TMR0_ReadTimer: [wreg]
  9346                           
  9347                           
  9348                           ;tmr0.c: 64:     uint8_t readVal;;tmr0.c: 67:     readVal = TMR0L;
  9349  0BAC  0020               	movlb	0	; select bank0
  9350  0BAD  0815               	movf	21,w	;volatile
  9351  0BAE  00A0               	movwf	??_TMR0_ReadTimer
  9352  0BAF  0820               	movf	??_TMR0_ReadTimer,w
  9353  0BB0  00A1               	movwf	TMR0_ReadTimer@readVal
  9354                           
  9355                           ;tmr0.c: 69:     return readVal;
  9356  0BB1  0821               	movf	TMR0_ReadTimer@readVal,w
  9357  0BB2                     l362:
  9358  0BB2  0008               	return
  9359  0BB3                     __end_of_TMR0_ReadTimer:
  9360                           
  9361                           	psect	text32
  9362  0576                     __ptext32:	
  9363 ;; *************** function _JSN_Sensor_Init *****************
  9364 ;; Defined at:
  9365 ;;		line 42 in file "JSN_Sensor.c"
  9366 ;; Parameters:    Size  Location     Type
  9367 ;;  Sensor          1    wreg     PTR struct .
  9368 ;;		 -> Sens1(6), 
  9369 ;;  trigPin         1    4[BANK0 ] enum E7110
  9370 ;;  echoPin         1    5[BANK0 ] enum E7110
  9371 ;; Auto vars:     Size  Location     Type
  9372 ;;  Sensor          1    8[BANK0 ] PTR struct .
  9373 ;;		 -> Sens1(6), 
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  1    wreg      unsigned char 
  9376 ;; Registers used:
  9377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9383 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9384 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9385 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9386 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9387 ;;Total ram usage:        5 bytes
  9388 ;; Hardware stack levels used: 1
  9389 ;; Hardware stack levels required when called: 5
  9390 ;; This function calls:
  9391 ;;		_SetPin
  9392 ;;		_WritePin
  9393 ;; This function is called by:
  9394 ;;		_main
  9395 ;; This function uses a non-reentrant model
  9396 ;;
  9397                           
  9398  0576                     _JSN_Sensor_Init:	
  9399                           ;psect for function _JSN_Sensor_Init
  9400                           
  9401                           
  9402                           ;incstack = 0
  9403                           ; Regs used in _JSN_Sensor_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9404                           ;JSN_Sensor_Init@Sensor stored from wreg
  9405  0576  0020               	movlb	0	; select bank0
  9406  0577  00A8               	movwf	JSN_Sensor_Init@Sensor
  9407  0578                     l3487:
  9408                           
  9409                           ;JSN_Sensor.c: 45:     switch(echoPin) {
  9410  0578  2D80               	goto	l3493
  9411  0579                     l37:	
  9412                           ;JSN_Sensor.c: 48:         case C3:
  9413                           
  9414  0579                     l3489:
  9415                           
  9416                           ;JSN_Sensor.c: 50:             SetPin(echoPin, 1);
  9417  0579  01A0               	clrf	SetPin@io
  9418  057A  0AA0               	incf	SetPin@io,f
  9419  057B  0825               	movf	JSN_Sensor_Init@echoPin,w
  9420  057C  3182  22FA  3185   	fcall	_SetPin
  9421                           
  9422                           ;JSN_Sensor.c: 51:             break;
  9423  057F  2DA2               	goto	l3499
  9424  0580                     l3493:
  9425  0580  0825               	movf	JSN_Sensor_Init@echoPin,w
  9426  0581  00A6               	movwf	??_JSN_Sensor_Init
  9427  0582  01A7               	clrf	??_JSN_Sensor_Init+1
  9428                           
  9429                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9430                           ; Switch size 1, requested type "simple"
  9431                           ; Number of cases is 1, Range of values is 0 to 0
  9432                           ; switch strategies available:
  9433                           ; Name         Instructions Cycles
  9434                           ; simple_byte            4     3 (average)
  9435                           ; direct_byte            8     6 (fixed)
  9436                           ; jumptable            260     6 (fixed)
  9437                           ;	Chosen strategy is simple_byte
  9438  0583  0827               	movf	??_JSN_Sensor_Init+1,w
  9439  0584  3A00               	xorlw	0	; case 0
  9440  0585  1903               	skipnz
  9441  0586  2D88               	goto	l3927
  9442  0587  2DF7               	goto	l41
  9443  0588                     l3927:
  9444                           
  9445                           ; Switch size 1, requested type "simple"
  9446                           ; Number of cases is 4, Range of values is 1 to 11
  9447                           ; switch strategies available:
  9448                           ; Name         Instructions Cycles
  9449                           ; simple_byte           13     7 (average)
  9450                           ; direct_byte           31     9 (fixed)
  9451                           ; jumptable            263     9 (fixed)
  9452                           ;	Chosen strategy is simple_byte
  9453  0588  0826               	movf	??_JSN_Sensor_Init,w
  9454  0589  3A01               	xorlw	1	; case 1
  9455  058A  1903               	skipnz
  9456  058B  2D79               	goto	l3489
  9457  058C  3A02               	xorlw	2	; case 3
  9458  058D  1903               	skipnz
  9459  058E  2D79               	goto	l3489
  9460  058F  3A06               	xorlw	6	; case 5
  9461  0590  1903               	skipnz
  9462  0591  2D79               	goto	l3489
  9463  0592  3A0E               	xorlw	14	; case 11
  9464  0593  1903               	skipnz
  9465  0594  2D79               	goto	l37
  9466  0595  2DF7               	goto	l41
  9467  0596                     l46:	
  9468                           ;JSN_Sensor.c: 61:         case C7:
  9469                           
  9470  0596                     l3495:
  9471                           
  9472                           ;JSN_Sensor.c: 71:             SetPin(trigPin, 0);
  9473  0596  01A0               	clrf	SetPin@io
  9474  0597  0824               	movf	JSN_Sensor_Init@trigPin,w
  9475  0598  3182  22FA  3185   	fcall	_SetPin
  9476                           
  9477                           ;JSN_Sensor.c: 72:             WritePin(trigPin, 0);
  9478  059B  0020               	movlb	0	; select bank0
  9479  059C  01A0               	clrf	WritePin@val
  9480  059D  0824               	movf	JSN_Sensor_Init@trigPin,w
  9481  059E  3182  223F  3185   	fcall	_WritePin
  9482                           
  9483                           ;JSN_Sensor.c: 73:             break;
  9484  05A1  2DD4               	goto	l3501
  9485  05A2                     l3499:
  9486  05A2  0020               	movlb	0	; select bank0
  9487  05A3  0824               	movf	JSN_Sensor_Init@trigPin,w
  9488  05A4  00A6               	movwf	??_JSN_Sensor_Init
  9489  05A5  01A7               	clrf	??_JSN_Sensor_Init+1
  9490                           
  9491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9492                           ; Switch size 1, requested type "simple"
  9493                           ; Number of cases is 1, Range of values is 0 to 0
  9494                           ; switch strategies available:
  9495                           ; Name         Instructions Cycles
  9496                           ; simple_byte            4     3 (average)
  9497                           ; direct_byte            8     6 (fixed)
  9498                           ; jumptable            260     6 (fixed)
  9499                           ;	Chosen strategy is simple_byte
  9500  05A6  0827               	movf	??_JSN_Sensor_Init+1,w
  9501  05A7  3A00               	xorlw	0	; case 0
  9502  05A8  1903               	skipnz
  9503  05A9  2DAB               	goto	l3929
  9504  05AA  2DF7               	goto	l41
  9505  05AB                     l3929:
  9506                           
  9507                           ; Switch size 1, requested type "simple"
  9508                           ; Number of cases is 13, Range of values is 0 to 17
  9509                           ; switch strategies available:
  9510                           ; Name         Instructions Cycles
  9511                           ; simple_byte           40    21 (average)
  9512                           ; direct_byte           42     6 (fixed)
  9513                           ; jumptable            260     6 (fixed)
  9514                           ;	Chosen strategy is simple_byte
  9515  05AB  0826               	movf	??_JSN_Sensor_Init,w
  9516  05AC  3A00               	xorlw	0	; case 0
  9517  05AD  1903               	skipnz
  9518  05AE  2D96               	goto	l46
  9519  05AF  3A04               	xorlw	4	; case 4
  9520  05B0  1903               	skipnz
  9521  05B1  2D96               	goto	l46
  9522  05B2  3A02               	xorlw	2	; case 6
  9523  05B3  1903               	skipnz
  9524  05B4  2D96               	goto	l46
  9525  05B5  3A01               	xorlw	1	; case 7
  9526  05B6  1903               	skipnz
  9527  05B7  2D96               	goto	l3495
  9528  05B8  3A0F               	xorlw	15	; case 8
  9529  05B9  1903               	skipnz
  9530  05BA  2D96               	goto	l3495
  9531  05BB  3A01               	xorlw	1	; case 9
  9532  05BC  1903               	skipnz
  9533  05BD  2D96               	goto	l3495
  9534  05BE  3A03               	xorlw	3	; case 10
  9535  05BF  1903               	skipnz
  9536  05C0  2D96               	goto	l3495
  9537  05C1  3A06               	xorlw	6	; case 12
  9538  05C2  1903               	skipnz
  9539  05C3  2D96               	goto	l3495
  9540  05C4  3A01               	xorlw	1	; case 13
  9541  05C5  1903               	skipnz
  9542  05C6  2D96               	goto	l3495
  9543  05C7  3A03               	xorlw	3	; case 14
  9544  05C8  1903               	skipnz
  9545  05C9  2D96               	goto	l3495
  9546  05CA  3A01               	xorlw	1	; case 15
  9547  05CB  1903               	skipnz
  9548  05CC  2D96               	goto	l3495
  9549  05CD  3A1F               	xorlw	31	; case 16
  9550  05CE  1903               	skipnz
  9551  05CF  2D96               	goto	l3495
  9552  05D0  3A01               	xorlw	1	; case 17
  9553  05D1  1903               	skipnz
  9554  05D2  2D96               	goto	l3495
  9555  05D3  2DF7               	goto	l41
  9556  05D4                     l3501:
  9557                           
  9558                           ;JSN_Sensor.c: 79:     Sensor->distance = 0;
  9559  05D4  0020               	movlb	0	; select bank0
  9560  05D5  0828               	movf	JSN_Sensor_Init@Sensor,w
  9561  05D6  3E02               	addlw	2
  9562  05D7  0086               	movwf	6
  9563  05D8  0187               	clrf	7
  9564  05D9  3000               	movlw	0
  9565  05DA  3FC0               	movwi [0]fsr1
  9566  05DB  3FC1               	movwi [1]fsr1
  9567  05DC                     l3503:
  9568                           
  9569                           ;JSN_Sensor.c: 80:     Sensor->echoHighTime = 0;
  9570  05DC  0828               	movf	JSN_Sensor_Init@Sensor,w
  9571  05DD  0086               	movwf	6
  9572  05DE  0187               	clrf	7
  9573  05DF  3000               	movlw	0
  9574  05E0  3FC0               	movwi [0]fsr1
  9575  05E1  3FC1               	movwi [1]fsr1
  9576  05E2                     l3505:
  9577                           
  9578                           ;JSN_Sensor.c: 81:     Sensor->echoPin = echoPin;
  9579  05E2  0825               	movf	JSN_Sensor_Init@echoPin,w
  9580  05E3  00A6               	movwf	??_JSN_Sensor_Init
  9581  05E4  0828               	movf	JSN_Sensor_Init@Sensor,w
  9582  05E5  3E05               	addlw	5
  9583  05E6  0086               	movwf	6
  9584  05E7  0187               	clrf	7
  9585  05E8  0826               	movf	??_JSN_Sensor_Init,w
  9586  05E9  0081               	movwf	1
  9587  05EA                     l3507:
  9588                           
  9589                           ;JSN_Sensor.c: 82:     Sensor->trigPin = trigPin;
  9590  05EA  0824               	movf	JSN_Sensor_Init@trigPin,w
  9591  05EB  00A6               	movwf	??_JSN_Sensor_Init
  9592  05EC  0828               	movf	JSN_Sensor_Init@Sensor,w
  9593  05ED  3E04               	addlw	4
  9594  05EE  0086               	movwf	6
  9595  05EF  0187               	clrf	7
  9596  05F0  0826               	movf	??_JSN_Sensor_Init,w
  9597  05F1  0081               	movwf	1
  9598  05F2                     l3509:
  9599                           
  9600                           ;JSN_Sensor.c: 84:     lastTrig = Sensor;
  9601  05F2  0828               	movf	JSN_Sensor_Init@Sensor,w
  9602  05F3  00A6               	movwf	??_JSN_Sensor_Init
  9603  05F4  0826               	movf	??_JSN_Sensor_Init,w
  9604  05F5  0021               	movlb	1	; select bank1
  9605  05F6  00D8               	movwf	_lastTrig^(0+128)
  9606  05F7                     l41:
  9607  05F7  0008               	return
  9608  05F8                     __end_of_JSN_Sensor_Init:
  9609                           
  9610                           	psect	text33
  9611  023F                     __ptext33:	
  9612 ;; *************** function _WritePin *****************
  9613 ;; Defined at:
  9614 ;;		line 174 in file "PIC16Xpress_DevBoard.c"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;  pin             1    wreg     enum E7110
  9617 ;;  val             1    0[BANK0 ] unsigned char 
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;  pin             1    3[BANK0 ] enum E7110
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  1    wreg      unsigned char 
  9622 ;; Registers used:
  9623 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9629 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9630 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9631 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9632 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9633 ;;Total ram usage:        4 bytes
  9634 ;; Hardware stack levels used: 1
  9635 ;; Hardware stack levels required when called: 4
  9636 ;; This function calls:
  9637 ;;		Nothing
  9638 ;; This function is called by:
  9639 ;;		_JSN_Sensor_Init
  9640 ;;		_JSN_Sensor_Trig
  9641 ;;		_main
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645  023F                     _WritePin:	
  9646                           ;psect for function _WritePin
  9647                           
  9648                           
  9649                           ;incstack = 0
  9650                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
  9651                           ;WritePin@pin stored from wreg
  9652  023F  0020               	movlb	0	; select bank0
  9653  0240  00A3               	movwf	WritePin@pin
  9654  0241                     l3295:
  9655                           
  9656                           ;PIC16Xpress_DevBoard.c: 175:     switch(pin) {
  9657  0241  2AB9               	goto	l3367
  9658  0242                     l3297:
  9659                           
  9660                           ;PIC16Xpress_DevBoard.c: 177:             LATAbits.LATA5 = val;
  9661  0242  0C20               	rrf	WritePin@val,w
  9662  0243  0022               	movlb	2	; select bank2
  9663  0244  1C03               	skipc
  9664  0245  128C               	bcf	12,5	;volatile
  9665  0246  1803               	skipnc
  9666  0247  168C               	bsf	12,5	;volatile
  9667  0248  2AF9               	goto	l244
  9668  0249                     l3301:
  9669                           
  9670                           ;PIC16Xpress_DevBoard.c: 180:             LATAbits.LATA4 = val;
  9671  0249  0C20               	rrf	WritePin@val,w
  9672  024A  0022               	movlb	2	; select bank2
  9673  024B  1C03               	skipc
  9674  024C  120C               	bcf	12,4	;volatile
  9675  024D  1803               	skipnc
  9676  024E  160C               	bsf	12,4	;volatile
  9677  024F  2AF9               	goto	l244
  9678  0250                     l3305:
  9679                           
  9680                           ;PIC16Xpress_DevBoard.c: 185:             LATCbits.LATC5 = val;
  9681  0250  0C20               	rrf	WritePin@val,w
  9682  0251  0022               	movlb	2	; select bank2
  9683  0252  1C03               	skipc
  9684  0253  128E               	bcf	14,5	;volatile
  9685  0254  1803               	skipnc
  9686  0255  168E               	bsf	14,5	;volatile
  9687  0256  2AF9               	goto	l244
  9688  0257                     l3309:
  9689                           
  9690                           ;PIC16Xpress_DevBoard.c: 188:             LATCbits.LATC4 = val;
  9691  0257  0C20               	rrf	WritePin@val,w
  9692  0258  0022               	movlb	2	; select bank2
  9693  0259  1C03               	skipc
  9694  025A  120E               	bcf	14,4	;volatile
  9695  025B  1803               	skipnc
  9696  025C  160E               	bsf	14,4	;volatile
  9697  025D  2AF9               	goto	l244
  9698  025E                     l3313:
  9699                           
  9700                           ;PIC16Xpress_DevBoard.c: 191:             LATCbits.LATC3 = val;
  9701  025E  0C20               	rrf	WritePin@val,w
  9702  025F  0022               	movlb	2	; select bank2
  9703  0260  1C03               	skipc
  9704  0261  118E               	bcf	14,3	;volatile
  9705  0262  1803               	skipnc
  9706  0263  158E               	bsf	14,3	;volatile
  9707  0264  2AF9               	goto	l244
  9708  0265                     l3317:
  9709                           
  9710                           ;PIC16Xpress_DevBoard.c: 194:             LATCbits.LATC6 = val;
  9711  0265  0C20               	rrf	WritePin@val,w
  9712  0266  0022               	movlb	2	; select bank2
  9713  0267  1C03               	skipc
  9714  0268  130E               	bcf	14,6	;volatile
  9715  0269  1803               	skipnc
  9716  026A  170E               	bsf	14,6	;volatile
  9717  026B  2AF9               	goto	l244
  9718  026C                     l3321:
  9719                           
  9720                           ;PIC16Xpress_DevBoard.c: 197:             LATCbits.LATC7 = val;
  9721  026C  0C20               	rrf	WritePin@val,w
  9722  026D  0022               	movlb	2	; select bank2
  9723  026E  1C03               	skipc
  9724  026F  138E               	bcf	14,7	;volatile
  9725  0270  1803               	skipnc
  9726  0271  178E               	bsf	14,7	;volatile
  9727  0272  2AF9               	goto	l244
  9728  0273                     l3325:
  9729                           
  9730                           ;PIC16Xpress_DevBoard.c: 200:             LATBbits.LATB7 = val;
  9731  0273  0C20               	rrf	WritePin@val,w
  9732  0274  0022               	movlb	2	; select bank2
  9733  0275  1C03               	skipc
  9734  0276  138D               	bcf	13,7	;volatile
  9735  0277  1803               	skipnc
  9736  0278  178D               	bsf	13,7	;volatile
  9737  0279  2AF9               	goto	l244
  9738  027A                     l3329:
  9739                           
  9740                           ;PIC16Xpress_DevBoard.c: 203:             LATAbits.LATA0 = val;
  9741  027A  0C20               	rrf	WritePin@val,w
  9742  027B  0022               	movlb	2	; select bank2
  9743  027C  1C03               	skipc
  9744  027D  100C               	bcf	12,0	;volatile
  9745  027E  1803               	skipnc
  9746  027F  140C               	bsf	12,0	;volatile
  9747  0280  2AF9               	goto	l244
  9748  0281                     l3333:
  9749                           
  9750                           ;PIC16Xpress_DevBoard.c: 206:             LATAbits.LATA1 = val;
  9751  0281  0C20               	rrf	WritePin@val,w
  9752  0282  0022               	movlb	2	; select bank2
  9753  0283  1C03               	skipc
  9754  0284  108C               	bcf	12,1	;volatile
  9755  0285  1803               	skipnc
  9756  0286  148C               	bsf	12,1	;volatile
  9757  0287  2AF9               	goto	l244
  9758  0288                     l3337:
  9759                           
  9760                           ;PIC16Xpress_DevBoard.c: 209:             LATAbits.LATA2 = val;
  9761  0288  0C20               	rrf	WritePin@val,w
  9762  0289  0022               	movlb	2	; select bank2
  9763  028A  1C03               	skipc
  9764  028B  110C               	bcf	12,2	;volatile
  9765  028C  1803               	skipnc
  9766  028D  150C               	bsf	12,2	;volatile
  9767  028E  2AF9               	goto	l244
  9768  028F                     l3341:
  9769                           
  9770                           ;PIC16Xpress_DevBoard.c: 212:             LATCbits.LATC0 = val;
  9771  028F  0C20               	rrf	WritePin@val,w
  9772  0290  0022               	movlb	2	; select bank2
  9773  0291  1C03               	skipc
  9774  0292  100E               	bcf	14,0	;volatile
  9775  0293  1803               	skipnc
  9776  0294  140E               	bsf	14,0	;volatile
  9777  0295  2AF9               	goto	l244
  9778  0296                     l3345:
  9779                           
  9780                           ;PIC16Xpress_DevBoard.c: 215:             LATCbits.LATC1 = val;
  9781  0296  0C20               	rrf	WritePin@val,w
  9782  0297  0022               	movlb	2	; select bank2
  9783  0298  1C03               	skipc
  9784  0299  108E               	bcf	14,1	;volatile
  9785  029A  1803               	skipnc
  9786  029B  148E               	bsf	14,1	;volatile
  9787  029C  2AF9               	goto	l244
  9788  029D                     l3349:
  9789                           
  9790                           ;PIC16Xpress_DevBoard.c: 218:             LATCbits.LATC2 = val;
  9791  029D  0C20               	rrf	WritePin@val,w
  9792  029E  0022               	movlb	2	; select bank2
  9793  029F  1C03               	skipc
  9794  02A0  110E               	bcf	14,2	;volatile
  9795  02A1  1803               	skipnc
  9796  02A2  150E               	bsf	14,2	;volatile
  9797  02A3  2AF9               	goto	l244
  9798  02A4                     l3353:
  9799                           
  9800                           ;PIC16Xpress_DevBoard.c: 221:             LATBbits.LATB4 = val;
  9801  02A4  0C20               	rrf	WritePin@val,w
  9802  02A5  0022               	movlb	2	; select bank2
  9803  02A6  1C03               	skipc
  9804  02A7  120D               	bcf	13,4	;volatile
  9805  02A8  1803               	skipnc
  9806  02A9  160D               	bsf	13,4	;volatile
  9807  02AA  2AF9               	goto	l244
  9808  02AB                     l3357:
  9809                           
  9810                           ;PIC16Xpress_DevBoard.c: 224:             LATBbits.LATB5 = val;
  9811  02AB  0C20               	rrf	WritePin@val,w
  9812  02AC  0022               	movlb	2	; select bank2
  9813  02AD  1C03               	skipc
  9814  02AE  128D               	bcf	13,5	;volatile
  9815  02AF  1803               	skipnc
  9816  02B0  168D               	bsf	13,5	;volatile
  9817  02B1  2AF9               	goto	l244
  9818  02B2                     l3361:
  9819                           
  9820                           ;PIC16Xpress_DevBoard.c: 227:             LATBbits.LATB6 = val;
  9821  02B2  0C20               	rrf	WritePin@val,w
  9822  02B3  0022               	movlb	2	; select bank2
  9823  02B4  1C03               	skipc
  9824  02B5  130D               	bcf	13,6	;volatile
  9825  02B6  1803               	skipnc
  9826  02B7  170D               	bsf	13,6	;volatile
  9827  02B8  2AF9               	goto	l244
  9828  02B9                     l3367:
  9829  02B9  0823               	movf	WritePin@pin,w
  9830  02BA  00A1               	movwf	??_WritePin
  9831  02BB  01A2               	clrf	??_WritePin+1
  9832                           
  9833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9834                           ; Switch size 1, requested type "simple"
  9835                           ; Number of cases is 1, Range of values is 0 to 0
  9836                           ; switch strategies available:
  9837                           ; Name         Instructions Cycles
  9838                           ; simple_byte            4     3 (average)
  9839                           ; direct_byte            8     6 (fixed)
  9840                           ; jumptable            260     6 (fixed)
  9841                           ;	Chosen strategy is simple_byte
  9842  02BC  0822               	movf	??_WritePin+1,w
  9843  02BD  3A00               	xorlw	0	; case 0
  9844  02BE  1903               	skipnz
  9845  02BF  2AC1               	goto	l3931
  9846  02C0  2AF9               	goto	l244
  9847  02C1                     l3931:
  9848                           
  9849                           ; Switch size 1, requested type "simple"
  9850                           ; Number of cases is 18, Range of values is 0 to 17
  9851                           ; switch strategies available:
  9852                           ; Name         Instructions Cycles
  9853                           ; direct_byte           42     6 (fixed)
  9854                           ; simple_byte           55    28 (average)
  9855                           ; jumptable            260     6 (fixed)
  9856                           ;	Chosen strategy is simple_byte
  9857  02C1  0821               	movf	??_WritePin,w
  9858  02C2  3A00               	xorlw	0	; case 0
  9859  02C3  1903               	skipnz
  9860  02C4  2A42               	goto	l3297
  9861  02C5  3A01               	xorlw	1	; case 1
  9862  02C6  1903               	skipnz
  9863  02C7  2A49               	goto	l3301
  9864  02C8  3A03               	xorlw	3	; case 2
  9865  02C9  1903               	skipnz
  9866  02CA  2AF9               	goto	l244
  9867  02CB  3A01               	xorlw	1	; case 3
  9868  02CC  1903               	skipnz
  9869  02CD  2A50               	goto	l3305
  9870  02CE  3A07               	xorlw	7	; case 4
  9871  02CF  1903               	skipnz
  9872  02D0  2A57               	goto	l3309
  9873  02D1  3A01               	xorlw	1	; case 5
  9874  02D2  1903               	skipnz
  9875  02D3  2A5E               	goto	l3313
  9876  02D4  3A03               	xorlw	3	; case 6
  9877  02D5  1903               	skipnz
  9878  02D6  2A65               	goto	l3317
  9879  02D7  3A01               	xorlw	1	; case 7
  9880  02D8  1903               	skipnz
  9881  02D9  2A6C               	goto	l3321
  9882  02DA  3A0F               	xorlw	15	; case 8
  9883  02DB  1903               	skipnz
  9884  02DC  2A73               	goto	l3325
  9885  02DD  3A01               	xorlw	1	; case 9
  9886  02DE  1903               	skipnz
  9887  02DF  2A7A               	goto	l3329
  9888  02E0  3A03               	xorlw	3	; case 10
  9889  02E1  1903               	skipnz
  9890  02E2  2A81               	goto	l3333
  9891  02E3  3A01               	xorlw	1	; case 11
  9892  02E4  1903               	skipnz
  9893  02E5  2A88               	goto	l3337
  9894  02E6  3A07               	xorlw	7	; case 12
  9895  02E7  1903               	skipnz
  9896  02E8  2A8F               	goto	l3341
  9897  02E9  3A01               	xorlw	1	; case 13
  9898  02EA  1903               	skipnz
  9899  02EB  2A96               	goto	l3345
  9900  02EC  3A03               	xorlw	3	; case 14
  9901  02ED  1903               	skipnz
  9902  02EE  2A9D               	goto	l3349
  9903  02EF  3A01               	xorlw	1	; case 15
  9904  02F0  1903               	skipnz
  9905  02F1  2AA4               	goto	l3353
  9906  02F2  3A1F               	xorlw	31	; case 16
  9907  02F3  1903               	skipnz
  9908  02F4  2AAB               	goto	l3357
  9909  02F5  3A01               	xorlw	1	; case 17
  9910  02F6  1903               	skipnz
  9911  02F7  2AB2               	goto	l3361
  9912  02F8  2AF9               	goto	l244
  9913  02F9                     l244:
  9914  02F9  0008               	return
  9915  02FA                     __end_of_WritePin:
  9916                           
  9917                           	psect	text34
  9918  02FA                     __ptext34:	
  9919 ;; *************** function _SetPin *****************
  9920 ;; Defined at:
  9921 ;;		line 67 in file "PIC16Xpress_DevBoard.c"
  9922 ;; Parameters:    Size  Location     Type
  9923 ;;  pin             1    wreg     enum E7110
  9924 ;;  io              1    0[BANK0 ] unsigned char 
  9925 ;; Auto vars:     Size  Location     Type
  9926 ;;  pin             1    3[BANK0 ] enum E7110
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  1    wreg      unsigned char 
  9929 ;; Registers used:
  9930 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9931 ;; Tracked objects:
  9932 ;;		On entry : 0/0
  9933 ;;		On exit  : 0/0
  9934 ;;		Unchanged: 0/0
  9935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9936 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9938 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9939 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9940 ;;Total ram usage:        4 bytes
  9941 ;; Hardware stack levels used: 1
  9942 ;; Hardware stack levels required when called: 4
  9943 ;; This function calls:
  9944 ;;		Nothing
  9945 ;; This function is called by:
  9946 ;;		_JSN_Sensor_Init
  9947 ;;		_main
  9948 ;; This function uses a non-reentrant model
  9949 ;;
  9950                           
  9951  02FA                     _SetPin:	
  9952                           ;psect for function _SetPin
  9953                           
  9954                           
  9955                           ;incstack = 0
  9956                           ; Regs used in _SetPin: [wreg-fsr0h+status,2+status,0]
  9957                           ;SetPin@pin stored from wreg
  9958  02FA  0020               	movlb	0	; select bank0
  9959  02FB  00A3               	movwf	SetPin@pin
  9960  02FC                     l3215:
  9961                           
  9962                           ;PIC16Xpress_DevBoard.c: 68:     switch(pin) {
  9963  02FC  2B74               	goto	l3287
  9964  02FD                     l3217:
  9965                           
  9966                           ;PIC16Xpress_DevBoard.c: 70:             TRISAbits.TRISA5 = io;
  9967  02FD  0C20               	rrf	SetPin@io,w
  9968  02FE  0021               	movlb	1	; select bank1
  9969  02FF  1C03               	skipc
  9970  0300  128C               	bcf	12,5	;volatile
  9971  0301  1803               	skipnc
  9972  0302  168C               	bsf	12,5	;volatile
  9973  0303  2BB4               	goto	l196
  9974  0304                     l3221:
  9975                           
  9976                           ;PIC16Xpress_DevBoard.c: 73:             TRISAbits.TRISA4 = io;
  9977  0304  0C20               	rrf	SetPin@io,w
  9978  0305  0021               	movlb	1	; select bank1
  9979  0306  1C03               	skipc
  9980  0307  120C               	bcf	12,4	;volatile
  9981  0308  1803               	skipnc
  9982  0309  160C               	bsf	12,4	;volatile
  9983  030A  2BB4               	goto	l196
  9984  030B                     l3225:
  9985                           
  9986                           ;PIC16Xpress_DevBoard.c: 78:             TRISCbits.TRISC5 = io;
  9987  030B  0C20               	rrf	SetPin@io,w
  9988  030C  0021               	movlb	1	; select bank1
  9989  030D  1C03               	skipc
  9990  030E  128E               	bcf	14,5	;volatile
  9991  030F  1803               	skipnc
  9992  0310  168E               	bsf	14,5	;volatile
  9993  0311  2BB4               	goto	l196
  9994  0312                     l3229:
  9995                           
  9996                           ;PIC16Xpress_DevBoard.c: 81:             TRISCbits.TRISC4 = io;
  9997  0312  0C20               	rrf	SetPin@io,w
  9998  0313  0021               	movlb	1	; select bank1
  9999  0314  1C03               	skipc
 10000  0315  120E               	bcf	14,4	;volatile
 10001  0316  1803               	skipnc
 10002  0317  160E               	bsf	14,4	;volatile
 10003  0318  2BB4               	goto	l196
 10004  0319                     l3233:
 10005                           
 10006                           ;PIC16Xpress_DevBoard.c: 84:             TRISCbits.TRISC3 = io;
 10007  0319  0C20               	rrf	SetPin@io,w
 10008  031A  0021               	movlb	1	; select bank1
 10009  031B  1C03               	skipc
 10010  031C  118E               	bcf	14,3	;volatile
 10011  031D  1803               	skipnc
 10012  031E  158E               	bsf	14,3	;volatile
 10013  031F  2BB4               	goto	l196
 10014  0320                     l3237:
 10015                           
 10016                           ;PIC16Xpress_DevBoard.c: 87:             TRISCbits.TRISC6 = io;
 10017  0320  0C20               	rrf	SetPin@io,w
 10018  0321  0021               	movlb	1	; select bank1
 10019  0322  1C03               	skipc
 10020  0323  130E               	bcf	14,6	;volatile
 10021  0324  1803               	skipnc
 10022  0325  170E               	bsf	14,6	;volatile
 10023  0326  2BB4               	goto	l196
 10024  0327                     l3241:
 10025                           
 10026                           ;PIC16Xpress_DevBoard.c: 90:             TRISCbits.TRISC7 = io;
 10027  0327  0C20               	rrf	SetPin@io,w
 10028  0328  0021               	movlb	1	; select bank1
 10029  0329  1C03               	skipc
 10030  032A  138E               	bcf	14,7	;volatile
 10031  032B  1803               	skipnc
 10032  032C  178E               	bsf	14,7	;volatile
 10033  032D  2BB4               	goto	l196
 10034  032E                     l3245:
 10035                           
 10036                           ;PIC16Xpress_DevBoard.c: 93:             TRISBbits.TRISB7 = io;
 10037  032E  0C20               	rrf	SetPin@io,w
 10038  032F  0021               	movlb	1	; select bank1
 10039  0330  1C03               	skipc
 10040  0331  138D               	bcf	13,7	;volatile
 10041  0332  1803               	skipnc
 10042  0333  178D               	bsf	13,7	;volatile
 10043  0334  2BB4               	goto	l196
 10044  0335                     l3249:
 10045                           
 10046                           ;PIC16Xpress_DevBoard.c: 96:             TRISAbits.TRISA0 = io;
 10047  0335  0C20               	rrf	SetPin@io,w
 10048  0336  0021               	movlb	1	; select bank1
 10049  0337  1C03               	skipc
 10050  0338  100C               	bcf	12,0	;volatile
 10051  0339  1803               	skipnc
 10052  033A  140C               	bsf	12,0	;volatile
 10053  033B  2BB4               	goto	l196
 10054  033C                     l3253:
 10055                           
 10056                           ;PIC16Xpress_DevBoard.c: 99:             TRISAbits.TRISA1 = io;
 10057  033C  0C20               	rrf	SetPin@io,w
 10058  033D  0021               	movlb	1	; select bank1
 10059  033E  1C03               	skipc
 10060  033F  108C               	bcf	12,1	;volatile
 10061  0340  1803               	skipnc
 10062  0341  148C               	bsf	12,1	;volatile
 10063  0342  2BB4               	goto	l196
 10064  0343                     l3257:
 10065                           
 10066                           ;PIC16Xpress_DevBoard.c: 102:             TRISAbits.TRISA2 = io;
 10067  0343  0C20               	rrf	SetPin@io,w
 10068  0344  0021               	movlb	1	; select bank1
 10069  0345  1C03               	skipc
 10070  0346  110C               	bcf	12,2	;volatile
 10071  0347  1803               	skipnc
 10072  0348  150C               	bsf	12,2	;volatile
 10073  0349  2BB4               	goto	l196
 10074  034A                     l3261:
 10075                           
 10076                           ;PIC16Xpress_DevBoard.c: 105:             TRISCbits.TRISC0 = io;
 10077  034A  0C20               	rrf	SetPin@io,w
 10078  034B  0021               	movlb	1	; select bank1
 10079  034C  1C03               	skipc
 10080  034D  100E               	bcf	14,0	;volatile
 10081  034E  1803               	skipnc
 10082  034F  140E               	bsf	14,0	;volatile
 10083  0350  2BB4               	goto	l196
 10084  0351                     l3265:
 10085                           
 10086                           ;PIC16Xpress_DevBoard.c: 108:             TRISCbits.TRISC1 = io;
 10087  0351  0C20               	rrf	SetPin@io,w
 10088  0352  0021               	movlb	1	; select bank1
 10089  0353  1C03               	skipc
 10090  0354  108E               	bcf	14,1	;volatile
 10091  0355  1803               	skipnc
 10092  0356  148E               	bsf	14,1	;volatile
 10093  0357  2BB4               	goto	l196
 10094  0358                     l3269:
 10095                           
 10096                           ;PIC16Xpress_DevBoard.c: 111:             TRISCbits.TRISC2 = io;
 10097  0358  0C20               	rrf	SetPin@io,w
 10098  0359  0021               	movlb	1	; select bank1
 10099  035A  1C03               	skipc
 10100  035B  110E               	bcf	14,2	;volatile
 10101  035C  1803               	skipnc
 10102  035D  150E               	bsf	14,2	;volatile
 10103  035E  2BB4               	goto	l196
 10104  035F                     l3273:
 10105                           
 10106                           ;PIC16Xpress_DevBoard.c: 114:             TRISBbits.TRISB4 = io;
 10107  035F  0C20               	rrf	SetPin@io,w
 10108  0360  0021               	movlb	1	; select bank1
 10109  0361  1C03               	skipc
 10110  0362  120D               	bcf	13,4	;volatile
 10111  0363  1803               	skipnc
 10112  0364  160D               	bsf	13,4	;volatile
 10113  0365  2BB4               	goto	l196
 10114  0366                     l3277:
 10115                           
 10116                           ;PIC16Xpress_DevBoard.c: 117:             TRISBbits.TRISB5 = io;
 10117  0366  0C20               	rrf	SetPin@io,w
 10118  0367  0021               	movlb	1	; select bank1
 10119  0368  1C03               	skipc
 10120  0369  128D               	bcf	13,5	;volatile
 10121  036A  1803               	skipnc
 10122  036B  168D               	bsf	13,5	;volatile
 10123  036C  2BB4               	goto	l196
 10124  036D                     l3281:
 10125                           
 10126                           ;PIC16Xpress_DevBoard.c: 120:             TRISBbits.TRISB6 = io;
 10127  036D  0C20               	rrf	SetPin@io,w
 10128  036E  0021               	movlb	1	; select bank1
 10129  036F  1C03               	skipc
 10130  0370  130D               	bcf	13,6	;volatile
 10131  0371  1803               	skipnc
 10132  0372  170D               	bsf	13,6	;volatile
 10133  0373  2BB4               	goto	l196
 10134  0374                     l3287:
 10135  0374  0823               	movf	SetPin@pin,w
 10136  0375  00A1               	movwf	??_SetPin
 10137  0376  01A2               	clrf	??_SetPin+1
 10138                           
 10139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10140                           ; Switch size 1, requested type "simple"
 10141                           ; Number of cases is 1, Range of values is 0 to 0
 10142                           ; switch strategies available:
 10143                           ; Name         Instructions Cycles
 10144                           ; simple_byte            4     3 (average)
 10145                           ; direct_byte            8     6 (fixed)
 10146                           ; jumptable            260     6 (fixed)
 10147                           ;	Chosen strategy is simple_byte
 10148  0377  0822               	movf	??_SetPin+1,w
 10149  0378  3A00               	xorlw	0	; case 0
 10150  0379  1903               	skipnz
 10151  037A  2B7C               	goto	l3933
 10152  037B  2BB4               	goto	l196
 10153  037C                     l3933:
 10154                           
 10155                           ; Switch size 1, requested type "simple"
 10156                           ; Number of cases is 18, Range of values is 0 to 17
 10157                           ; switch strategies available:
 10158                           ; Name         Instructions Cycles
 10159                           ; direct_byte           42     6 (fixed)
 10160                           ; simple_byte           55    28 (average)
 10161                           ; jumptable            260     6 (fixed)
 10162                           ;	Chosen strategy is simple_byte
 10163  037C  0821               	movf	??_SetPin,w
 10164  037D  3A00               	xorlw	0	; case 0
 10165  037E  1903               	skipnz
 10166  037F  2AFD               	goto	l3217
 10167  0380  3A01               	xorlw	1	; case 1
 10168  0381  1903               	skipnz
 10169  0382  2B04               	goto	l3221
 10170  0383  3A03               	xorlw	3	; case 2
 10171  0384  1903               	skipnz
 10172  0385  2BB4               	goto	l196
 10173  0386  3A01               	xorlw	1	; case 3
 10174  0387  1903               	skipnz
 10175  0388  2B0B               	goto	l3225
 10176  0389  3A07               	xorlw	7	; case 4
 10177  038A  1903               	skipnz
 10178  038B  2B12               	goto	l3229
 10179  038C  3A01               	xorlw	1	; case 5
 10180  038D  1903               	skipnz
 10181  038E  2B19               	goto	l3233
 10182  038F  3A03               	xorlw	3	; case 6
 10183  0390  1903               	skipnz
 10184  0391  2B20               	goto	l3237
 10185  0392  3A01               	xorlw	1	; case 7
 10186  0393  1903               	skipnz
 10187  0394  2B27               	goto	l3241
 10188  0395  3A0F               	xorlw	15	; case 8
 10189  0396  1903               	skipnz
 10190  0397  2B2E               	goto	l3245
 10191  0398  3A01               	xorlw	1	; case 9
 10192  0399  1903               	skipnz
 10193  039A  2B35               	goto	l3249
 10194  039B  3A03               	xorlw	3	; case 10
 10195  039C  1903               	skipnz
 10196  039D  2B3C               	goto	l3253
 10197  039E  3A01               	xorlw	1	; case 11
 10198  039F  1903               	skipnz
 10199  03A0  2B43               	goto	l3257
 10200  03A1  3A07               	xorlw	7	; case 12
 10201  03A2  1903               	skipnz
 10202  03A3  2B4A               	goto	l3261
 10203  03A4  3A01               	xorlw	1	; case 13
 10204  03A5  1903               	skipnz
 10205  03A6  2B51               	goto	l3265
 10206  03A7  3A03               	xorlw	3	; case 14
 10207  03A8  1903               	skipnz
 10208  03A9  2B58               	goto	l3269
 10209  03AA  3A01               	xorlw	1	; case 15
 10210  03AB  1903               	skipnz
 10211  03AC  2B5F               	goto	l3273
 10212  03AD  3A1F               	xorlw	31	; case 16
 10213  03AE  1903               	skipnz
 10214  03AF  2B66               	goto	l3277
 10215  03B0  3A01               	xorlw	1	; case 17
 10216  03B1  1903               	skipnz
 10217  03B2  2B6D               	goto	l3281
 10218  03B3  2BB4               	goto	l196
 10219  03B4                     l196:
 10220  03B4  0008               	return
 10221  03B5                     __end_of_SetPin:
 10222                           
 10223                           	psect	text35
 10224  0FC0                     __ptext35:	
 10225 ;; *************** function _JSN_Sensor_GetDistance *****************
 10226 ;; Defined at:
 10227 ;;		line 112 in file "JSN_Sensor.c"
 10228 ;; Parameters:    Size  Location     Type
 10229 ;;  Sensor          1    wreg     PTR struct .
 10230 ;;		 -> Sens1(6), 
 10231 ;; Auto vars:     Size  Location     Type
 10232 ;;  Sensor          1   30[BANK0 ] PTR struct .
 10233 ;;		 -> Sens1(6), 
 10234 ;; Return value:  Size  Location     Type
 10235 ;;                  2   26[BANK0 ] unsigned int 
 10236 ;; Registers used:
 10237 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10238 ;; Tracked objects:
 10239 ;;		On entry : 0/0
 10240 ;;		On exit  : 0/0
 10241 ;;		Unchanged: 0/0
 10242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10243 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10244 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10245 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10246 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10247 ;;Total ram usage:        5 bytes
 10248 ;; Hardware stack levels used: 1
 10249 ;; Hardware stack levels required when called: 5
 10250 ;; This function calls:
 10251 ;;		___lldiv
 10252 ;;		___lmul
 10253 ;; This function is called by:
 10254 ;;		_main
 10255 ;; This function uses a non-reentrant model
 10256 ;;
 10257                           
 10258  0FC0                     _JSN_Sensor_GetDistance:	
 10259                           ;psect for function _JSN_Sensor_GetDistance
 10260                           
 10261                           
 10262                           ;incstack = 0
 10263                           ; Regs used in _JSN_Sensor_GetDistance: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 10264                           ;JSN_Sensor_GetDistance@Sensor stored from wreg
 10265  0FC0  0020               	movlb	0	; select bank0
 10266  0FC1  00BE               	movwf	JSN_Sensor_GetDistance@Sensor
 10267  0FC2                     l3537:
 10268                           
 10269                           ;JSN_Sensor.c: 117:     Sensor->distance = (unsigned int)(((uint32_t)Sensor->echoHighTim
      +                          e *
 10270  0FC2  3000               	movlw	0
 10271  0FC3  00AF               	movwf	___lldiv@divisor+3
 10272  0FC4  3000               	movlw	0
 10273  0FC5  00AE               	movwf	___lldiv@divisor+2
 10274  0FC6  3007               	movlw	7
 10275  0FC7  00AD               	movwf	___lldiv@divisor+1
 10276  0FC8  30D0               	movlw	208
 10277  0FC9  00AC               	movwf	___lldiv@divisor
 10278  0FCA  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 10279  0FCB  0086               	movwf	6
 10280  0FCC  0187               	clrf	7
 10281  0FCD  3F40               	moviw [0]fsr1
 10282  0FCE  00BC               	movwf	??_JSN_Sensor_GetDistance
 10283  0FCF  3F41               	moviw [1]fsr1
 10284  0FD0  00BD               	movwf	??_JSN_Sensor_GetDistance+1
 10285  0FD1  083C               	movf	??_JSN_Sensor_GetDistance,w
 10286  0FD2  00A0               	movwf	___lmul@multiplier
 10287  0FD3  083D               	movf	??_JSN_Sensor_GetDistance+1,w
 10288  0FD4  00A1               	movwf	___lmul@multiplier+1
 10289  0FD5  01A2               	clrf	___lmul@multiplier+2
 10290  0FD6  01A3               	clrf	___lmul@multiplier+3
 10291  0FD7  3000               	movlw	0
 10292  0FD8  00A7               	movwf	___lmul@multiplicand+3
 10293  0FD9  3000               	movlw	0
 10294  0FDA  00A6               	movwf	___lmul@multiplicand+2
 10295  0FDB  3001               	movlw	1
 10296  0FDC  00A5               	movwf	___lmul@multiplicand+1
 10297  0FDD  3057               	movlw	87
 10298  0FDE  00A4               	movwf	___lmul@multiplicand
 10299  0FDF  318E  266B  318F   	fcall	___lmul
 10300  0FE2  0020               	movlb	0	; select bank0
 10301  0FE3  0823               	movf	?___lmul+3,w
 10302  0FE4  00B3               	movwf	___lldiv@dividend+3
 10303  0FE5  0822               	movf	?___lmul+2,w
 10304  0FE6  00B2               	movwf	___lldiv@dividend+2
 10305  0FE7  0821               	movf	?___lmul+1,w
 10306  0FE8  00B1               	movwf	___lldiv@dividend+1
 10307  0FE9  0820               	movf	?___lmul,w
 10308  0FEA  00B0               	movwf	___lldiv@dividend
 10309  0FEB  3186  2669  318F   	fcall	___lldiv
 10310  0FEE  0020               	movlb	0	; select bank0
 10311  0FEF  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 10312  0FF0  3E02               	addlw	2
 10313  0FF1  0086               	movwf	6
 10314  0FF2  0187               	clrf	7
 10315  0FF3  082C               	movf	?___lldiv,w
 10316  0FF4  3FC0               	movwi [0]fsr1
 10317  0FF5  082D               	movf	?___lldiv+1,w
 10318  0FF6  3FC1               	movwi [1]fsr1
 10319  0FF7                     l3539:
 10320                           
 10321                           ;JSN_Sensor.c: 119:     return Sensor->distance;
 10322  0FF7  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 10323  0FF8  3E02               	addlw	2
 10324  0FF9  0086               	movwf	6
 10325  0FFA  0187               	clrf	7
 10326  0FFB  3F40               	moviw [0]fsr1
 10327  0FFC  00BA               	movwf	?_JSN_Sensor_GetDistance
 10328  0FFD  3F41               	moviw [1]fsr1
 10329  0FFE  00BB               	movwf	?_JSN_Sensor_GetDistance+1
 10330  0FFF                     l66:
 10331  0FFF  0008               	return
 10332  1000                     __end_of_JSN_Sensor_GetDistance:
 10333                           
 10334                           	psect	text36
 10335  0E6B                     __ptext36:	
 10336 ;; *************** function ___lmul *****************
 10337 ;; Defined at:
 10338 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul32.c"
 10339 ;; Parameters:    Size  Location     Type
 10340 ;;  multiplier      4    0[BANK0 ] unsigned long 
 10341 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;  product         4    8[BANK0 ] unsigned long 
 10344 ;; Return value:  Size  Location     Type
 10345 ;;                  4    0[BANK0 ] unsigned long 
 10346 ;; Registers used:
 10347 ;;		wreg, status,2, status,0
 10348 ;; Tracked objects:
 10349 ;;		On entry : 0/0
 10350 ;;		On exit  : 0/0
 10351 ;;		Unchanged: 0/0
 10352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10353 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10354 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10356 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10357 ;;Total ram usage:       12 bytes
 10358 ;; Hardware stack levels used: 1
 10359 ;; Hardware stack levels required when called: 4
 10360 ;; This function calls:
 10361 ;;		Nothing
 10362 ;; This function is called by:
 10363 ;;		_JSN_Sensor_GetDistance
 10364 ;; This function uses a non-reentrant model
 10365 ;;
 10366                           
 10367  0E6B                     ___lmul:	
 10368                           ;psect for function ___lmul
 10369                           
 10370  0E6B                     l3433:	
 10371                           ;incstack = 0
 10372                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 10373                           
 10374  0E6B  3000               	movlw	0
 10375  0E6C  0020               	movlb	0	; select bank0
 10376  0E6D  00AB               	movwf	___lmul@product+3
 10377  0E6E  3000               	movlw	0
 10378  0E6F  00AA               	movwf	___lmul@product+2
 10379  0E70  3000               	movlw	0
 10380  0E71  00A9               	movwf	___lmul@product+1
 10381  0E72  3000               	movlw	0
 10382  0E73  00A8               	movwf	___lmul@product
 10383  0E74                     l3435:
 10384  0E74  1C20               	btfss	___lmul@multiplier,0
 10385  0E75  2E77               	goto	u1111
 10386  0E76  2E78               	goto	u1110
 10387  0E77                     u1111:
 10388  0E77  2E80               	goto	l3439
 10389  0E78                     u1110:
 10390  0E78                     l3437:
 10391  0E78  0824               	movf	___lmul@multiplicand,w
 10392  0E79  07A8               	addwf	___lmul@product,f
 10393  0E7A  0825               	movf	___lmul@multiplicand+1,w
 10394  0E7B  3DA9               	addwfc	___lmul@product+1,f
 10395  0E7C  0826               	movf	___lmul@multiplicand+2,w
 10396  0E7D  3DAA               	addwfc	___lmul@product+2,f
 10397  0E7E  0827               	movf	___lmul@multiplicand+3,w
 10398  0E7F  3DAB               	addwfc	___lmul@product+3,f
 10399  0E80                     l3439:
 10400  0E80  3001               	movlw	1
 10401  0E81                     u1125:
 10402  0E81  35A4               	lslf	___lmul@multiplicand,f
 10403  0E82  0DA5               	rlf	___lmul@multiplicand+1,f
 10404  0E83  0DA6               	rlf	___lmul@multiplicand+2,f
 10405  0E84  0DA7               	rlf	___lmul@multiplicand+3,f
 10406  0E85  0B89               	decfsz	9,f
 10407  0E86  2E81               	goto	u1125
 10408  0E87                     l3441:
 10409  0E87  3001               	movlw	1
 10410  0E88                     u1135:
 10411  0E88  36A3               	lsrf	___lmul@multiplier+3,f
 10412  0E89  0CA2               	rrf	___lmul@multiplier+2,f
 10413  0E8A  0CA1               	rrf	___lmul@multiplier+1,f
 10414  0E8B  0CA0               	rrf	___lmul@multiplier,f
 10415  0E8C  0B89               	decfsz	9,f
 10416  0E8D  2E88               	goto	u1135
 10417  0E8E  0823               	movf	___lmul@multiplier+3,w
 10418  0E8F  0422               	iorwf	___lmul@multiplier+2,w
 10419  0E90  0421               	iorwf	___lmul@multiplier+1,w
 10420  0E91  0420               	iorwf	___lmul@multiplier,w
 10421  0E92  1D03               	skipz
 10422  0E93  2E95               	goto	u1141
 10423  0E94  2E96               	goto	u1140
 10424  0E95                     u1141:
 10425  0E95  2E74               	goto	l3435
 10426  0E96                     u1140:
 10427  0E96                     l3443:
 10428  0E96  082B               	movf	___lmul@product+3,w
 10429  0E97  00A3               	movwf	?___lmul+3
 10430  0E98  082A               	movf	___lmul@product+2,w
 10431  0E99  00A2               	movwf	?___lmul+2
 10432  0E9A  0829               	movf	___lmul@product+1,w
 10433  0E9B  00A1               	movwf	?___lmul+1
 10434  0E9C  0828               	movf	___lmul@product,w
 10435  0E9D  00A0               	movwf	?___lmul
 10436  0E9E                     l981:
 10437  0E9E  0008               	return
 10438  0E9F                     __end_of___lmul:
 10439                           
 10440                           	psect	text37
 10441  0669                     __ptext37:	
 10442 ;; *************** function ___lldiv *****************
 10443 ;; Defined at:
 10444 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\__lldiv.c"
 10445 ;; Parameters:    Size  Location     Type
 10446 ;;  divisor         4   12[BANK0 ] unsigned long 
 10447 ;;  dividend        4   16[BANK0 ] unsigned long 
 10448 ;; Auto vars:     Size  Location     Type
 10449 ;;  quotient        4   21[BANK0 ] unsigned long 
 10450 ;;  counter         1   25[BANK0 ] unsigned char 
 10451 ;; Return value:  Size  Location     Type
 10452 ;;                  4   12[BANK0 ] unsigned long 
 10453 ;; Registers used:
 10454 ;;		wreg, status,2, status,0
 10455 ;; Tracked objects:
 10456 ;;		On entry : 0/0
 10457 ;;		On exit  : 0/0
 10458 ;;		Unchanged: 0/0
 10459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10460 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10461 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10462 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10463 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10464 ;;Total ram usage:       14 bytes
 10465 ;; Hardware stack levels used: 1
 10466 ;; Hardware stack levels required when called: 4
 10467 ;; This function calls:
 10468 ;;		Nothing
 10469 ;; This function is called by:
 10470 ;;		_JSN_Sensor_GetDistance
 10471 ;; This function uses a non-reentrant model
 10472 ;;
 10473                           
 10474  0669                     ___lldiv:	
 10475                           ;psect for function ___lldiv
 10476                           
 10477  0669                     l3447:	
 10478                           ;incstack = 0
 10479                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10480                           
 10481  0669  3000               	movlw	0
 10482  066A  0020               	movlb	0	; select bank0
 10483  066B  00B8               	movwf	___lldiv@quotient+3
 10484  066C  3000               	movlw	0
 10485  066D  00B7               	movwf	___lldiv@quotient+2
 10486  066E  3000               	movlw	0
 10487  066F  00B6               	movwf	___lldiv@quotient+1
 10488  0670  3000               	movlw	0
 10489  0671  00B5               	movwf	___lldiv@quotient
 10490  0672  082F               	movf	___lldiv@divisor+3,w
 10491  0673  042E               	iorwf	___lldiv@divisor+2,w
 10492  0674  042D               	iorwf	___lldiv@divisor+1,w
 10493  0675  042C               	iorwf	___lldiv@divisor,w
 10494  0676  1903               	skipnz
 10495  0677  2E79               	goto	u1151
 10496  0678  2E7A               	goto	u1150
 10497  0679                     u1151:
 10498  0679  2EBB               	goto	l3467
 10499  067A                     u1150:
 10500  067A                     l3449:
 10501  067A  01B9               	clrf	___lldiv@counter
 10502  067B  0AB9               	incf	___lldiv@counter,f
 10503  067C  2E88               	goto	l3453
 10504  067D                     l3451:
 10505  067D  3001               	movlw	1
 10506  067E                     u1165:
 10507  067E  35AC               	lslf	___lldiv@divisor,f
 10508  067F  0DAD               	rlf	___lldiv@divisor+1,f
 10509  0680  0DAE               	rlf	___lldiv@divisor+2,f
 10510  0681  0DAF               	rlf	___lldiv@divisor+3,f
 10511  0682  0B89               	decfsz	9,f
 10512  0683  2E7E               	goto	u1165
 10513  0684  3001               	movlw	1
 10514  0685  00B4               	movwf	??___lldiv
 10515  0686  0834               	movf	??___lldiv,w
 10516  0687  07B9               	addwf	___lldiv@counter,f
 10517  0688                     l3453:
 10518  0688  1FAF               	btfss	___lldiv@divisor+3,7
 10519  0689  2E8B               	goto	u1171
 10520  068A  2E8C               	goto	u1170
 10521  068B                     u1171:
 10522  068B  2E7D               	goto	l3451
 10523  068C                     u1170:
 10524  068C                     l3455:
 10525  068C  3001               	movlw	1
 10526  068D                     u1185:
 10527  068D  35B5               	lslf	___lldiv@quotient,f
 10528  068E  0DB6               	rlf	___lldiv@quotient+1,f
 10529  068F  0DB7               	rlf	___lldiv@quotient+2,f
 10530  0690  0DB8               	rlf	___lldiv@quotient+3,f
 10531  0691  0B89               	decfsz	9,f
 10532  0692  2E8D               	goto	u1185
 10533  0693                     l3457:
 10534  0693  082F               	movf	___lldiv@divisor+3,w
 10535  0694  0233               	subwf	___lldiv@dividend+3,w
 10536  0695  1D03               	skipz
 10537  0696  2EA1               	goto	u1195
 10538  0697  082E               	movf	___lldiv@divisor+2,w
 10539  0698  0232               	subwf	___lldiv@dividend+2,w
 10540  0699  1D03               	skipz
 10541  069A  2EA1               	goto	u1195
 10542  069B  082D               	movf	___lldiv@divisor+1,w
 10543  069C  0231               	subwf	___lldiv@dividend+1,w
 10544  069D  1D03               	skipz
 10545  069E  2EA1               	goto	u1195
 10546  069F  082C               	movf	___lldiv@divisor,w
 10547  06A0  0230               	subwf	___lldiv@dividend,w
 10548  06A1                     u1195:
 10549  06A1  1C03               	skipc
 10550  06A2  2EA4               	goto	u1191
 10551  06A3  2EA5               	goto	u1190
 10552  06A4                     u1191:
 10553  06A4  2EAE               	goto	l3463
 10554  06A5                     u1190:
 10555  06A5                     l3459:
 10556  06A5  082C               	movf	___lldiv@divisor,w
 10557  06A6  02B0               	subwf	___lldiv@dividend,f
 10558  06A7  082D               	movf	___lldiv@divisor+1,w
 10559  06A8  3BB1               	subwfb	___lldiv@dividend+1,f
 10560  06A9  082E               	movf	___lldiv@divisor+2,w
 10561  06AA  3BB2               	subwfb	___lldiv@dividend+2,f
 10562  06AB  082F               	movf	___lldiv@divisor+3,w
 10563  06AC  3BB3               	subwfb	___lldiv@dividend+3,f
 10564  06AD                     l3461:
 10565  06AD  1435               	bsf	___lldiv@quotient,0
 10566  06AE                     l3463:
 10567  06AE  3001               	movlw	1
 10568  06AF                     u1205:
 10569  06AF  36AF               	lsrf	___lldiv@divisor+3,f
 10570  06B0  0CAE               	rrf	___lldiv@divisor+2,f
 10571  06B1  0CAD               	rrf	___lldiv@divisor+1,f
 10572  06B2  0CAC               	rrf	___lldiv@divisor,f
 10573  06B3  0B89               	decfsz	9,f
 10574  06B4  2EAF               	goto	u1205
 10575  06B5                     l3465:
 10576  06B5  3001               	movlw	1
 10577  06B6  02B9               	subwf	___lldiv@counter,f
 10578  06B7  1D03               	btfss	3,2
 10579  06B8  2EBA               	goto	u1211
 10580  06B9  2EBB               	goto	u1210
 10581  06BA                     u1211:
 10582  06BA  2E8C               	goto	l3455
 10583  06BB                     u1210:
 10584  06BB                     l3467:
 10585  06BB  0838               	movf	___lldiv@quotient+3,w
 10586  06BC  00AF               	movwf	?___lldiv+3
 10587  06BD  0837               	movf	___lldiv@quotient+2,w
 10588  06BE  00AE               	movwf	?___lldiv+2
 10589  06BF  0836               	movf	___lldiv@quotient+1,w
 10590  06C0  00AD               	movwf	?___lldiv+1
 10591  06C1  0835               	movf	___lldiv@quotient,w
 10592  06C2  00AC               	movwf	?___lldiv
 10593  06C3                     l1003:
 10594  06C3  0008               	return
 10595  06C4                     __end_of___lldiv:
 10596                           
 10597                           	psect	text38
 10598  0BA5                     __ptext38:	
 10599 ;; *************** function _JSN_Library_Init *****************
 10600 ;; Defined at:
 10601 ;;		line 33 in file "JSN_Sensor.c"
 10602 ;; Parameters:    Size  Location     Type
 10603 ;;		None
 10604 ;; Auto vars:     Size  Location     Type
 10605 ;;		None
 10606 ;; Return value:  Size  Location     Type
 10607 ;;                  1    wreg      void 
 10608 ;; Registers used:
 10609 ;;		wreg, status,2, status,0, pclath, cstack
 10610 ;; Tracked objects:
 10611 ;;		On entry : 0/0
 10612 ;;		On exit  : 0/0
 10613 ;;		Unchanged: 0/0
 10614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10619 ;;Total ram usage:        0 bytes
 10620 ;; Hardware stack levels used: 1
 10621 ;; Hardware stack levels required when called: 6
 10622 ;; This function calls:
 10623 ;;		_CCP1_Initialize
 10624 ;;		_TMR1_Initialize
 10625 ;; This function is called by:
 10626 ;;		_main
 10627 ;; This function uses a non-reentrant model
 10628 ;;
 10629                           
 10630  0BA5                     _JSN_Library_Init:	
 10631                           ;psect for function _JSN_Library_Init
 10632                           
 10633  0BA5                     l3483:	
 10634                           ;incstack = 0
 10635                           ; Regs used in _JSN_Library_Init: [wreg+status,2+status,0+pclath+cstack]
 10636                           
 10637                           
 10638                           ;JSN_Sensor.c: 35:     TMR1_Initialize();
 10639  0BA5  318D  2538  318B   	fcall	_TMR1_Initialize
 10640                           
 10641                           ;JSN_Sensor.c: 36:     CCP1_Initialize();
 10642  0BA8  318C  24F0  318B   	fcall	_CCP1_Initialize
 10643  0BAB                     l31:
 10644  0BAB  0008               	return
 10645  0BAC                     __end_of_JSN_Library_Init:
 10646                           
 10647                           	psect	text39
 10648  0D38                     __ptext39:	
 10649 ;; *************** function _TMR1_Initialize *****************
 10650 ;; Defined at:
 10651 ;;		line 11 in file "tmr1.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;		None
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;		None
 10656 ;; Return value:  Size  Location     Type
 10657 ;;                  1    wreg      void 
 10658 ;; Registers used:
 10659 ;;		wreg, status,2, status,0, pclath, cstack
 10660 ;; Tracked objects:
 10661 ;;		On entry : 0/0
 10662 ;;		On exit  : 0/0
 10663 ;;		Unchanged: 0/0
 10664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;Total ram usage:        0 bytes
 10670 ;; Hardware stack levels used: 1
 10671 ;; Hardware stack levels required when called: 5
 10672 ;; This function calls:
 10673 ;;		_TMR1_SetInterruptHandler
 10674 ;; This function is called by:
 10675 ;;		_JSN_Library_Init
 10676 ;;		_SYSTEM_Initialize
 10677 ;; This function uses a non-reentrant model
 10678 ;;
 10679                           
 10680  0D38                     _TMR1_Initialize:	
 10681                           ;psect for function _TMR1_Initialize
 10682                           
 10683  0D38                     l2903:	
 10684                           ;incstack = 0
 10685                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10686                           
 10687                           
 10688                           ;tmr1.c: 16:     T1GCON = 0x00;
 10689  0D38  0020               	movlb	0	; select bank0
 10690  0D39  019C               	clrf	28	;volatile
 10691                           
 10692                           ;tmr1.c: 19:     TMR1H = 0x00;
 10693  0D3A  019A               	clrf	26	;volatile
 10694                           
 10695                           ;tmr1.c: 22:     TMR1L = 0x00;
 10696  0D3B  0199               	clrf	25	;volatile
 10697  0D3C                     l2905:
 10698                           
 10699                           ;tmr1.c: 25:     PIR1bits.TMR1IF = 0;
 10700  0D3C  1011               	bcf	17,0	;volatile
 10701  0D3D                     l2907:
 10702                           
 10703                           ;tmr1.c: 28:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 10704  0D3D  081A               	movf	26,w	;volatile
 10705  0D3E  0021               	movlb	1	; select bank1
 10706  0D3F  00C1               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 10707  0D40  0020               	movlb	0	; select bank0
 10708  0D41  0819               	movf	25,w	;volatile
 10709  0D42  0021               	movlb	1	; select bank1
 10710  0D43  00C0               	movwf	_timer1ReloadVal^(0+128)	;volatile
 10711  0D44                     l2909:
 10712                           
 10713                           ;tmr1.c: 31:     PIE1bits.TMR1IE = 1;
 10714  0D44  1411               	bsf	17,0	;volatile
 10715  0D45                     l2911:
 10716                           
 10717                           ;tmr1.c: 34:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 10718  0D45  3000               	movlw	0
 10719  0D46  0020               	movlb	0	; select bank0
 10720  0D47  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10721  0D48  3000               	movlw	0
 10722  0D49  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10723  0D4A  318B  23CC  318D   	fcall	_TMR1_SetInterruptHandler
 10724  0D4D                     l2913:
 10725                           
 10726                           ;tmr1.c: 37:     T1CON = 0x11;
 10727  0D4D  3011               	movlw	17
 10728  0D4E  0020               	movlb	0	; select bank0
 10729  0D4F  009B               	movwf	27	;volatile
 10730  0D50                     l524:
 10731  0D50  0008               	return
 10732  0D51                     __end_of_TMR1_Initialize:
 10733                           
 10734                           	psect	text40
 10735  0BCC                     __ptext40:	
 10736 ;; *************** function _TMR1_SetInterruptHandler *****************
 10737 ;; Defined at:
 10738 ;;		line 145 in file "tmr1.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 10741 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 10742 ;; Auto vars:     Size  Location     Type
 10743 ;;		None
 10744 ;; Return value:  Size  Location     Type
 10745 ;;                  1    wreg      void 
 10746 ;; Registers used:
 10747 ;;		wreg
 10748 ;; Tracked objects:
 10749 ;;		On entry : 0/0
 10750 ;;		On exit  : 0/0
 10751 ;;		Unchanged: 0/0
 10752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10753 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10756 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10757 ;;Total ram usage:        2 bytes
 10758 ;; Hardware stack levels used: 1
 10759 ;; Hardware stack levels required when called: 4
 10760 ;; This function calls:
 10761 ;;		Nothing
 10762 ;; This function is called by:
 10763 ;;		_TMR1_Initialize
 10764 ;; This function uses a non-reentrant model
 10765 ;;
 10766                           
 10767  0BCC                     _TMR1_SetInterruptHandler:	
 10768                           ;psect for function _TMR1_SetInterruptHandler
 10769                           
 10770  0BCC                     l2855:	
 10771                           ;incstack = 0
 10772                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 10773                           
 10774                           
 10775                           ;tmr1.c: 146:     TMR1_InterruptHandler = InterruptHandler;
 10776  0BCC  0020               	movlb	0	; select bank0
 10777  0BCD  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 10778  0BCE  0021               	movlb	1	; select bank1
 10779  0BCF  00BF               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 10780  0BD0  0020               	movlb	0	; select bank0
 10781  0BD1  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 10782  0BD2  0021               	movlb	1	; select bank1
 10783  0BD3  00BE               	movwf	_TMR1_InterruptHandler^(0+128)
 10784  0BD4                     l557:
 10785  0BD4  0008               	return
 10786  0BD5                     __end_of_TMR1_SetInterruptHandler:
 10787                           
 10788                           	psect	text41
 10789  0CF0                     __ptext41:	
 10790 ;; *************** function _CCP1_Initialize *****************
 10791 ;; Defined at:
 10792 ;;		line 47 in file "ccp1.c"
 10793 ;; Parameters:    Size  Location     Type
 10794 ;;		None
 10795 ;; Auto vars:     Size  Location     Type
 10796 ;;		None
 10797 ;; Return value:  Size  Location     Type
 10798 ;;                  1    wreg      void 
 10799 ;; Registers used:
 10800 ;;		wreg, status,2, status,0, pclath, cstack
 10801 ;; Tracked objects:
 10802 ;;		On entry : 0/0
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;Total ram usage:        0 bytes
 10811 ;; Hardware stack levels used: 1
 10812 ;; Hardware stack levels required when called: 5
 10813 ;; This function calls:
 10814 ;;		_CCP1_SetCallBack
 10815 ;; This function is called by:
 10816 ;;		_JSN_Library_Init
 10817 ;;		_SYSTEM_Initialize
 10818 ;; This function uses a non-reentrant model
 10819 ;;
 10820                           
 10821  0CF0                     _CCP1_Initialize:	
 10822                           ;psect for function _CCP1_Initialize
 10823                           
 10824  0CF0                     l2915:	
 10825                           ;incstack = 0
 10826                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10827                           
 10828                           
 10829                           ;ccp1.c: 52:  CCP1CON = 0x83;
 10830  0CF0  3083               	movlw	131
 10831  0CF1  0025               	movlb	5	; select bank5
 10832  0CF2  0093               	movwf	19	;volatile
 10833  0CF3                     l2917:
 10834                           
 10835                           ;ccp1.c: 55:  CCP1CAP = 0x00;
 10836  0CF3  0194               	clrf	20	;volatile
 10837  0CF4                     l2919:
 10838                           
 10839                           ;ccp1.c: 58:  CCPR1H = 0x00;
 10840  0CF4  0192               	clrf	18	;volatile
 10841  0CF5                     l2921:
 10842                           
 10843                           ;ccp1.c: 61:  CCPR1L = 0x00;
 10844  0CF5  0191               	clrf	17	;volatile
 10845  0CF6                     l2923:
 10846                           
 10847                           ;ccp1.c: 64:     CCP1_SetCallBack(CCP1_DefaultCallBack);
 10848  0CF6  30D5               	movlw	low _CCP1_DefaultCallBack
 10849  0CF7  0020               	movlb	0	; select bank0
 10850  0CF8  00A0               	movwf	CCP1_SetCallBack@customCallBack
 10851  0CF9  300E               	movlw	high _CCP1_DefaultCallBack
 10852  0CFA  00A1               	movwf	CCP1_SetCallBack@customCallBack+1
 10853  0CFB  318B  23C3  318C   	fcall	_CCP1_SetCallBack
 10854  0CFE                     l2925:
 10855                           
 10856                           ;ccp1.c: 67:  CCPTMRSbits.C1TSEL = 0x1;
 10857  0CFE  0025               	movlb	5	; select bank5
 10858  0CFF  081F               	movf	31,w	;volatile
 10859  0D00  39FC               	andlw	-4
 10860  0D01  3801               	iorlw	1
 10861  0D02  009F               	movwf	31	;volatile
 10862  0D03                     l2927:
 10863                           
 10864                           ;ccp1.c: 70:     PIR4bits.CCP1IF = 0;
 10865  0D03  0020               	movlb	0	; select bank0
 10866  0D04  1014               	bcf	20,0	;volatile
 10867  0D05                     l2929:
 10868                           
 10869                           ;ccp1.c: 73:     PIE4bits.CCP1IE = 1;
 10870  0D05  0021               	movlb	1	; select bank1
 10871  0D06  1414               	bsf	20,0	;volatile
 10872  0D07                     l419:
 10873  0D07  0008               	return
 10874  0D08                     __end_of_CCP1_Initialize:
 10875                           
 10876                           	psect	text42
 10877  0BC3                     __ptext42:	
 10878 ;; *************** function _CCP1_SetCallBack *****************
 10879 ;; Defined at:
 10880 ;;		line 95 in file "ccp1.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10883 ;;		 -> CCP1_DefaultCallBack(1), 
 10884 ;; Auto vars:     Size  Location     Type
 10885 ;;		None
 10886 ;; Return value:  Size  Location     Type
 10887 ;;                  1    wreg      void 
 10888 ;; Registers used:
 10889 ;;		wreg
 10890 ;; Tracked objects:
 10891 ;;		On entry : 0/0
 10892 ;;		On exit  : 0/0
 10893 ;;		Unchanged: 0/0
 10894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10895 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10898 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10899 ;;Total ram usage:        2 bytes
 10900 ;; Hardware stack levels used: 1
 10901 ;; Hardware stack levels required when called: 4
 10902 ;; This function calls:
 10903 ;;		Nothing
 10904 ;; This function is called by:
 10905 ;;		_CCP1_Initialize
 10906 ;; This function uses a non-reentrant model
 10907 ;;
 10908                           
 10909  0BC3                     _CCP1_SetCallBack:	
 10910                           ;psect for function _CCP1_SetCallBack
 10911                           
 10912  0BC3                     l2849:	
 10913                           ;incstack = 0
 10914                           ; Regs used in _CCP1_SetCallBack: [wreg]
 10915                           
 10916                           
 10917                           ;ccp1.c: 96:     CCP1_CallBack = customCallBack;
 10918  0BC3  0020               	movlb	0	; select bank0
 10919  0BC4  0821               	movf	CCP1_SetCallBack@customCallBack+1,w
 10920  0BC5  0021               	movlb	1	; select bank1
 10921  0BC6  00CF               	movwf	(_CCP1_CallBack+1)^(0+128)
 10922  0BC7  0020               	movlb	0	; select bank0
 10923  0BC8  0820               	movf	CCP1_SetCallBack@customCallBack,w
 10924  0BC9  0021               	movlb	1	; select bank1
 10925  0BCA  00CE               	movwf	_CCP1_CallBack^(0+128)
 10926  0BCB                     l425:
 10927  0BCB  0008               	return
 10928  0BCC                     __end_of_CCP1_SetCallBack:
 10929                           
 10930                           	psect	text43
 10931  0B90                     __ptext43:	
 10932 ;; *************** function _FR_Timer_Init *****************
 10933 ;; Defined at:
 10934 ;;		line 33 in file "FR_Timer.c"
 10935 ;; Parameters:    Size  Location     Type
 10936 ;;		None
 10937 ;; Auto vars:     Size  Location     Type
 10938 ;;		None
 10939 ;; Return value:  Size  Location     Type
 10940 ;;                  1    wreg      void 
 10941 ;; Registers used:
 10942 ;;		wreg, status,2, status,0, pclath, cstack
 10943 ;; Tracked objects:
 10944 ;;		On entry : 0/0
 10945 ;;		On exit  : 0/0
 10946 ;;		Unchanged: 0/0
 10947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10952 ;;Total ram usage:        0 bytes
 10953 ;; Hardware stack levels used: 1
 10954 ;; Hardware stack levels required when called: 6
 10955 ;; This function calls:
 10956 ;;		_TMR0_Initialize
 10957 ;; This function is called by:
 10958 ;;		_main
 10959 ;; This function uses a non-reentrant model
 10960 ;;
 10961                           
 10962  0B90                     _FR_Timer_Init:	
 10963                           ;psect for function _FR_Timer_Init
 10964                           
 10965  0B90                     l3575:	
 10966                           ;incstack = 0
 10967                           ; Regs used in _FR_Timer_Init: [wreg+status,2+status,0+pclath+cstack]
 10968                           
 10969                           
 10970                           ;FR_Timer.c: 34:     TMR0_Initialize();
 10971  0B90  318C  246D  318B   	fcall	_TMR0_Initialize
 10972  0B93                     l92:
 10973  0B93  0008               	return
 10974  0B94                     __end_of_FR_Timer_Init:
 10975                           
 10976                           	psect	text44
 10977  0C6D                     __ptext44:	
 10978 ;; *************** function _TMR0_Initialize *****************
 10979 ;; Defined at:
 10980 ;;		line 18 in file "tmr0.c"
 10981 ;; Parameters:    Size  Location     Type
 10982 ;;		None
 10983 ;; Auto vars:     Size  Location     Type
 10984 ;;		None
 10985 ;; Return value:  Size  Location     Type
 10986 ;;                  1    wreg      void 
 10987 ;; Registers used:
 10988 ;;		wreg, status,2, status,0, pclath, cstack
 10989 ;; Tracked objects:
 10990 ;;		On entry : 0/0
 10991 ;;		On exit  : 0/0
 10992 ;;		Unchanged: 0/0
 10993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10998 ;;Total ram usage:        0 bytes
 10999 ;; Hardware stack levels used: 1
 11000 ;; Hardware stack levels required when called: 5
 11001 ;; This function calls:
 11002 ;;		_TMR0_SetInterruptHandler
 11003 ;; This function is called by:
 11004 ;;		_FR_Timer_Init
 11005 ;;		_SYSTEM_Initialize
 11006 ;; This function uses a non-reentrant model
 11007 ;;
 11008                           
 11009  0C6D                     _TMR0_Initialize:	
 11010                           ;psect for function _TMR0_Initialize
 11011                           
 11012  0C6D                     l2935:	
 11013                           ;incstack = 0
 11014                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11015                           
 11016                           
 11017                           ;tmr0.c: 23:     T0CON1 = 0x42;
 11018  0C6D  3042               	movlw	66
 11019  0C6E  0020               	movlb	0	; select bank0
 11020  0C6F  0098               	movwf	24	;volatile
 11021                           
 11022                           ;tmr0.c: 26:     TMR0H = 0xF9;
 11023  0C70  30F9               	movlw	249
 11024  0C71  0096               	movwf	22	;volatile
 11025  0C72                     l2937:
 11026                           
 11027                           ;tmr0.c: 29:     TMR0L = 0x00;
 11028  0C72  0195               	clrf	21	;volatile
 11029  0C73                     l2939:
 11030                           
 11031                           ;tmr0.c: 32:     PIR0bits.TMR0IF = 0;
 11032  0C73  1290               	bcf	16,5	;volatile
 11033  0C74                     l2941:
 11034                           
 11035                           ;tmr0.c: 35:     PIE0bits.TMR0IE = 1;
 11036  0C74  0021               	movlb	1	; select bank1
 11037  0C75  1690               	bsf	16,5	;volatile
 11038  0C76                     l2943:
 11039                           
 11040                           ;tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 11041  0C76  3000               	movlw	0
 11042  0C77  0020               	movlb	0	; select bank0
 11043  0C78  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 11044  0C79  3000               	movlw	0
 11045  0C7A  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 11046  0C7B  318B  23BA  318C   	fcall	_TMR0_SetInterruptHandler
 11047  0C7E                     l2945:
 11048                           
 11049                           ;tmr0.c: 41:     T0CON0 = 0x80;
 11050  0C7E  3080               	movlw	128
 11051  0C7F  0020               	movlb	0	; select bank0
 11052  0C80  0097               	movwf	23	;volatile
 11053  0C81                     l353:
 11054  0C81  0008               	return
 11055  0C82                     __end_of_TMR0_Initialize:
 11056                           
 11057                           	psect	text45
 11058  0BBA                     __ptext45:	
 11059 ;; *************** function _TMR0_SetInterruptHandler *****************
 11060 ;; Defined at:
 11061 ;;		line 119 in file "tmr0.c"
 11062 ;; Parameters:    Size  Location     Type
 11063 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 11064 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 11065 ;; Auto vars:     Size  Location     Type
 11066 ;;		None
 11067 ;; Return value:  Size  Location     Type
 11068 ;;                  1    wreg      void 
 11069 ;; Registers used:
 11070 ;;		wreg
 11071 ;; Tracked objects:
 11072 ;;		On entry : 0/0
 11073 ;;		On exit  : 0/0
 11074 ;;		Unchanged: 0/0
 11075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11076 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11079 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11080 ;;Total ram usage:        2 bytes
 11081 ;; Hardware stack levels used: 1
 11082 ;; Hardware stack levels required when called: 4
 11083 ;; This function calls:
 11084 ;;		Nothing
 11085 ;; This function is called by:
 11086 ;;		_TMR0_Initialize
 11087 ;; This function uses a non-reentrant model
 11088 ;;
 11089                           
 11090  0BBA                     _TMR0_SetInterruptHandler:	
 11091                           ;psect for function _TMR0_SetInterruptHandler
 11092                           
 11093  0BBA                     l2847:	
 11094                           ;incstack = 0
 11095                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 11096                           
 11097                           
 11098                           ;tmr0.c: 120:     TMR0_InterruptHandler = InterruptHandler;
 11099  0BBA  0020               	movlb	0	; select bank0
 11100  0BBB  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 11101  0BBC  0021               	movlb	1	; select bank1
 11102  0BBD  00D3               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 11103  0BBE  0020               	movlb	0	; select bank0
 11104  0BBF  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 11105  0BC0  0021               	movlb	1	; select bank1
 11106  0BC1  00D2               	movwf	_TMR0_InterruptHandler^(0+128)
 11107  0BC2                     l380:
 11108  0BC2  0008               	return
 11109  0BC3                     __end_of_TMR0_SetInterruptHandler:
 11110                           
 11111                           	psect	text46
 11112  0C5C                     __ptext46:	
 11113 ;; *************** function _FR_Timer_GetMillis *****************
 11114 ;; Defined at:
 11115 ;;		line 40 in file "FR_Timer.c"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;		None
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;		None
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  4    0[BANK0 ] unsigned long 
 11122 ;; Registers used:
 11123 ;;		wreg
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11129 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11132 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11133 ;;Total ram usage:        4 bytes
 11134 ;; Hardware stack levels used: 1
 11135 ;; Hardware stack levels required when called: 4
 11136 ;; This function calls:
 11137 ;;		Nothing
 11138 ;; This function is called by:
 11139 ;;		_main
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143  0C5C                     _FR_Timer_GetMillis:	
 11144                           ;psect for function _FR_Timer_GetMillis
 11145                           
 11146  0C5C                     l3579:	
 11147                           ;incstack = 0
 11148                           ; Regs used in _FR_Timer_GetMillis: [wreg]
 11149                           
 11150                           
 11151                           ;FR_Timer.c: 41:     return millis;
 11152  0C5C  0021               	movlb	1	; select bank1
 11153  0C5D  0827               	movf	(_millis+3)^(0+128),w
 11154  0C5E  0020               	movlb	0	; select bank0
 11155  0C5F  00A3               	movwf	?_FR_Timer_GetMillis+3
 11156  0C60  0021               	movlb	1	; select bank1
 11157  0C61  0826               	movf	(_millis+2)^(0+128),w
 11158  0C62  0020               	movlb	0	; select bank0
 11159  0C63  00A2               	movwf	?_FR_Timer_GetMillis+2
 11160  0C64  0021               	movlb	1	; select bank1
 11161  0C65  0825               	movf	(_millis+1)^(0+128),w
 11162  0C66  0020               	movlb	0	; select bank0
 11163  0C67  00A1               	movwf	?_FR_Timer_GetMillis+1
 11164  0C68  0021               	movlb	1	; select bank1
 11165  0C69  0824               	movf	_millis^(0+128),w
 11166  0C6A  0020               	movlb	0	; select bank0
 11167  0C6B  00A0               	movwf	?_FR_Timer_GetMillis
 11168  0C6C                     l95:
 11169  0C6C  0008               	return
 11170  0C6D                     __end_of_FR_Timer_GetMillis:
 11171                           
 11172                           	psect	intentry
 11173  0004                     __pintentry:	
 11174 ;; *************** function _INTERRUPT_InterruptManager *****************
 11175 ;; Defined at:
 11176 ;;		line 5 in file "interrupt_manager.c"
 11177 ;; Parameters:    Size  Location     Type
 11178 ;;		None
 11179 ;; Auto vars:     Size  Location     Type
 11180 ;;		None
 11181 ;; Return value:  Size  Location     Type
 11182 ;;                  1    wreg      void 
 11183 ;; Registers used:
 11184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11185 ;; Tracked objects:
 11186 ;;		On entry : 0/0
 11187 ;;		On exit  : 0/0
 11188 ;;		Unchanged: 0/0
 11189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;Total ram usage:        0 bytes
 11195 ;; Hardware stack levels used: 1
 11196 ;; Hardware stack levels required when called: 3
 11197 ;; This function calls:
 11198 ;;		Absolute function
 11199 ;;		_CCP1_CaptureISR
 11200 ;;		_CCP2_CaptureISR
 11201 ;;		_CCP3_CaptureISR
 11202 ;;		_EUSART_Receive_ISR
 11203 ;;		_EUSART_Transmit_ISR
 11204 ;;		_TMR0_ISR
 11205 ;;		_TMR1_ISR
 11206 ;; This function is called by:
 11207 ;;		Interrupt level 1
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211  0004                     _INTERRUPT_InterruptManager:
 11212                           
 11213                           ;incstack = 0
 11214  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11215                           
 11216                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11217  0005  3180               	pagesel	$
 11218  0006                     i1l3715:
 11219                           
 11220                           ;interrupt_manager.c: 8:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 11221  0006  0021               	movlb	1	; select bank1
 11222  0007  1E90               	btfss	16,5	;volatile
 11223  0008  280A               	goto	u136_21
 11224  0009  280B               	goto	u136_20
 11225  000A                     u136_21:
 11226  000A  2814               	goto	i1l743
 11227  000B                     u136_20:
 11228  000B                     i1l3717:
 11229  000B  0020               	movlb	0	; select bank0
 11230  000C  1E90               	btfss	16,5	;volatile
 11231  000D  280F               	goto	u137_21
 11232  000E  2810               	goto	u137_20
 11233  000F                     u137_21:
 11234  000F  2814               	goto	i1l743
 11235  0010                     u137_20:
 11236  0010                     i1l3719:
 11237                           
 11238                           ;interrupt_manager.c: 9:     {;interrupt_manager.c: 10:         TMR0_ISR();
 11239  0010  318C  24D9  3180   	fcall	_TMR0_ISR
 11240                           
 11241                           ;interrupt_manager.c: 11:     }
 11242  0013  2872               	goto	i1l757
 11243  0014                     i1l743:	
 11244                           ;interrupt_manager.c: 12:     else if(INTCONbits.PEIE == 1)
 11245                           
 11246  0014  1F0B               	btfss	11,6	;volatile
 11247  0015  2817               	goto	u138_21
 11248  0016  2818               	goto	u138_20
 11249  0017                     u138_21:
 11250  0017  2872               	goto	i1l757
 11251  0018                     u138_20:
 11252  0018                     i1l3721:
 11253                           
 11254                           ;interrupt_manager.c: 13:     {;interrupt_manager.c: 14:         if(PIE4bits.CCP1IE == 1
      +                           && PIR4bits.CCP1IF == 1)
 11255  0018  0021               	movlb	1	; select bank1
 11256  0019  1C14               	btfss	20,0	;volatile
 11257  001A  281C               	goto	u139_21
 11258  001B  281D               	goto	u139_20
 11259  001C                     u139_21:
 11260  001C  2826               	goto	i1l746
 11261  001D                     u139_20:
 11262  001D                     i1l3723:
 11263  001D  0020               	movlb	0	; select bank0
 11264  001E  1C14               	btfss	20,0	;volatile
 11265  001F  2821               	goto	u140_21
 11266  0020  2822               	goto	u140_20
 11267  0021                     u140_21:
 11268  0021  2826               	goto	i1l746
 11269  0022                     u140_20:
 11270  0022                     i1l3725:
 11271                           
 11272                           ;interrupt_manager.c: 15:         {;interrupt_manager.c: 16:             CCP1_CaptureISR
      +                          ();
 11273  0022  318C  2497  3180   	fcall	_CCP1_CaptureISR
 11274                           
 11275                           ;interrupt_manager.c: 17:         }
 11276  0025  2872               	goto	i1l757
 11277  0026                     i1l746:	
 11278                           ;interrupt_manager.c: 18:         else if(PIE4bits.CCP2IE == 1 && PIR4bits.CCP2IF == 1)
 11279                           
 11280  0026  0021               	movlb	1	; select bank1
 11281  0027  1C94               	btfss	20,1	;volatile
 11282  0028  282A               	goto	u141_21
 11283  0029  282B               	goto	u141_20
 11284  002A                     u141_21:
 11285  002A  2834               	goto	i1l748
 11286  002B                     u141_20:
 11287  002B                     i1l3727:
 11288  002B  0020               	movlb	0	; select bank0
 11289  002C  1C94               	btfss	20,1	;volatile
 11290  002D  282F               	goto	u142_21
 11291  002E  2830               	goto	u142_20
 11292  002F                     u142_21:
 11293  002F  2834               	goto	i1l748
 11294  0030                     u142_20:
 11295  0030                     i1l3729:
 11296                           
 11297                           ;interrupt_manager.c: 19:         {;interrupt_manager.c: 20:             CCP2_CaptureISR
      +                          ();
 11298  0030  318C  24AD  3180   	fcall	_CCP2_CaptureISR
 11299                           
 11300                           ;interrupt_manager.c: 21:         }
 11301  0033  2872               	goto	i1l757
 11302  0034                     i1l748:	
 11303                           ;interrupt_manager.c: 22:         else if(PIE4bits.CCP3IE == 1 && PIR4bits.CCP3IF == 1)
 11304                           
 11305  0034  0021               	movlb	1	; select bank1
 11306  0035  1D14               	btfss	20,2	;volatile
 11307  0036  2838               	goto	u143_21
 11308  0037  2839               	goto	u143_20
 11309  0038                     u143_21:
 11310  0038  2842               	goto	i1l750
 11311  0039                     u143_20:
 11312  0039                     i1l3731:
 11313  0039  0020               	movlb	0	; select bank0
 11314  003A  1D14               	btfss	20,2	;volatile
 11315  003B  283D               	goto	u144_21
 11316  003C  283E               	goto	u144_20
 11317  003D                     u144_21:
 11318  003D  2842               	goto	i1l750
 11319  003E                     u144_20:
 11320  003E                     i1l3733:
 11321                           
 11322                           ;interrupt_manager.c: 23:         {;interrupt_manager.c: 24:             CCP3_CaptureISR
      +                          ();
 11323  003E  318C  24C3  3180   	fcall	_CCP3_CaptureISR
 11324                           
 11325                           ;interrupt_manager.c: 25:         }
 11326  0041  2872               	goto	i1l757
 11327  0042                     i1l750:	
 11328                           ;interrupt_manager.c: 26:         else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 11329                           
 11330  0042  0021               	movlb	1	; select bank1
 11331  0043  1C11               	btfss	17,0	;volatile
 11332  0044  2846               	goto	u145_21
 11333  0045  2847               	goto	u145_20
 11334  0046                     u145_21:
 11335  0046  2850               	goto	i1l752
 11336  0047                     u145_20:
 11337  0047                     i1l3735:
 11338  0047  0020               	movlb	0	; select bank0
 11339  0048  1C11               	btfss	17,0	;volatile
 11340  0049  284B               	goto	u146_21
 11341  004A  284C               	goto	u146_20
 11342  004B                     u146_21:
 11343  004B  2850               	goto	i1l752
 11344  004C                     u146_20:
 11345  004C                     i1l3737:
 11346                           
 11347                           ;interrupt_manager.c: 27:         {;interrupt_manager.c: 28:             TMR1_ISR();
 11348  004C  318C  2428  3180   	fcall	_TMR1_ISR
 11349                           
 11350                           ;interrupt_manager.c: 29:         }
 11351  004F  2872               	goto	i1l757
 11352  0050                     i1l752:	
 11353                           ;interrupt_manager.c: 30:         else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 11354                           
 11355  0050  0021               	movlb	1	; select bank1
 11356  0051  1E91               	btfss	17,5	;volatile
 11357  0052  2854               	goto	u147_21
 11358  0053  2855               	goto	u147_20
 11359  0054                     u147_21:
 11360  0054  2861               	goto	i1l754
 11361  0055                     u147_20:
 11362  0055                     i1l3739:
 11363  0055  0020               	movlb	0	; select bank0
 11364  0056  1E91               	btfss	17,5	;volatile
 11365  0057  2859               	goto	u148_21
 11366  0058  285A               	goto	u148_20
 11367  0059                     u148_21:
 11368  0059  2861               	goto	i1l754
 11369  005A                     u148_20:
 11370  005A                     i1l3741:
 11371                           
 11372                           ;interrupt_manager.c: 31:         {;interrupt_manager.c: 32:             EUSART_RxDefaul
      +                          tInterruptHandler();
 11373  005A  0021               	movlb	1	; select bank1
 11374  005B  083B               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 11375  005C  008A               	movwf	10
 11376  005D  083A               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 11377  005E  000A               	callw
 11378  005F  3180               	pagesel	$
 11379                           
 11380                           ;interrupt_manager.c: 33:         }
 11381  0060  2872               	goto	i1l757
 11382  0061                     i1l754:	
 11383                           ;interrupt_manager.c: 34:         else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 11384                           
 11385  0061  0021               	movlb	1	; select bank1
 11386  0062  1E11               	btfss	17,4	;volatile
 11387  0063  2865               	goto	u149_21
 11388  0064  2866               	goto	u149_20
 11389  0065                     u149_21:
 11390  0065  2872               	goto	i1l751
 11391  0066                     u149_20:
 11392  0066                     i1l3743:
 11393  0066  0020               	movlb	0	; select bank0
 11394  0067  1E11               	btfss	17,4	;volatile
 11395  0068  286A               	goto	u150_21
 11396  0069  286B               	goto	u150_20
 11397  006A                     u150_21:
 11398  006A  2872               	goto	i1l751
 11399  006B                     u150_20:
 11400  006B                     i1l3745:
 11401                           
 11402                           ;interrupt_manager.c: 35:         {;interrupt_manager.c: 36:             EUSART_TxDefaul
      +                          tInterruptHandler();
 11403  006B  0021               	movlb	1	; select bank1
 11404  006C  083D               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 11405  006D  008A               	movwf	10
 11406  006E  083C               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 11407  006F  000A               	callw
 11408  0070  3180               	pagesel	$
 11409  0071  2872               	goto	i1l757
 11410  0072                     i1l751:
 11411  0072                     i1l757:
 11412  0072  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11413  0073  0009               	retfie
 11414  0074                     __end_of_INTERRUPT_InterruptManager:
 11415                           
 11416                           	psect	text48
 11417  0C28                     __ptext48:	
 11418 ;; *************** function _TMR1_ISR *****************
 11419 ;; Defined at:
 11420 ;;		line 120 in file "tmr1.c"
 11421 ;; Parameters:    Size  Location     Type
 11422 ;;		None
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;		None
 11425 ;; Return value:  Size  Location     Type
 11426 ;;                  1    wreg      void 
 11427 ;; Registers used:
 11428 ;;		wreg, status,2, status,0, pclath, cstack
 11429 ;; Tracked objects:
 11430 ;;		On entry : 0/0
 11431 ;;		On exit  : 0/0
 11432 ;;		Unchanged: 0/0
 11433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11438 ;;Total ram usage:        0 bytes
 11439 ;; Hardware stack levels used: 1
 11440 ;; Hardware stack levels required when called: 1
 11441 ;; This function calls:
 11442 ;;		_TMR1_WriteTimer
 11443 ;; This function is called by:
 11444 ;;		_INTERRUPT_InterruptManager
 11445 ;; This function uses a non-reentrant model
 11446 ;;
 11447                           
 11448  0C28                     _TMR1_ISR:	
 11449                           ;psect for function _TMR1_ISR
 11450                           
 11451  0C28                     i1l3615:	
 11452                           ;incstack = 0
 11453                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 11454                           
 11455                           
 11456                           ;tmr1.c: 124:     PIR1bits.TMR1IF = 0;
 11457  0C28  0020               	movlb	0	; select bank0
 11458  0C29  1011               	bcf	17,0	;volatile
 11459  0C2A                     i1l3617:
 11460                           
 11461                           ;tmr1.c: 125:     TMR1_WriteTimer(timer1ReloadVal);
 11462  0C2A  0021               	movlb	1	; select bank1
 11463  0C2B  0841               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 11464  0C2C  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 11465  0C2D  0840               	movf	_timer1ReloadVal^(0+128),w	;volatile
 11466  0C2E  00F0               	movwf	TMR1_WriteTimer@timerVal
 11467  0C2F  318C  244B  318C   	fcall	_TMR1_WriteTimer
 11468  0C32                     i1l550:
 11469  0C32  0008               	return
 11470  0C33                     __end_of_TMR1_ISR:
 11471                           
 11472                           	psect	text49
 11473  0C4B                     __ptext49:	
 11474 ;; *************** function _TMR1_WriteTimer *****************
 11475 ;; Defined at:
 11476 ;;		line 75 in file "tmr1.c"
 11477 ;; Parameters:    Size  Location     Type
 11478 ;;  timerVal        2    0[COMMON] unsigned short 
 11479 ;; Auto vars:     Size  Location     Type
 11480 ;;		None
 11481 ;; Return value:  Size  Location     Type
 11482 ;;                  1    wreg      void 
 11483 ;; Registers used:
 11484 ;;		wreg, status,2
 11485 ;; Tracked objects:
 11486 ;;		On entry : 0/0
 11487 ;;		On exit  : 0/0
 11488 ;;		Unchanged: 0/0
 11489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11494 ;;Total ram usage:        2 bytes
 11495 ;; Hardware stack levels used: 1
 11496 ;; This function calls:
 11497 ;;		Nothing
 11498 ;; This function is called by:
 11499 ;;		_TMR1_ISR
 11500 ;;		_TMR1_Reload
 11501 ;; This function uses a non-reentrant model
 11502 ;;
 11503                           
 11504  0C4B                     _TMR1_WriteTimer:	
 11505                           ;psect for function _TMR1_WriteTimer
 11506                           
 11507  0C4B                     i1l3415:	
 11508                           ;incstack = 0
 11509                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 11510                           
 11511                           
 11512                           ;tmr1.c: 75: void TMR1_WriteTimer(uint16_t timerVal);tmr1.c: 76: {;tmr1.c: 77:     if (T
      +                          1CONbits.T1SYNC == 1)
 11513  0C4B  0020               	movlb	0	; select bank0
 11514  0C4C  1D1B               	btfss	27,2	;volatile
 11515  0C4D  2C4F               	goto	u110_21
 11516  0C4E  2C50               	goto	u110_20
 11517  0C4F                     u110_21:
 11518  0C4F  2C57               	goto	i1l3425
 11519  0C50                     u110_20:
 11520  0C50                     i1l3417:
 11521                           
 11522                           ;tmr1.c: 78:     {;tmr1.c: 80:         T1CONbits.TMR1ON = 0;
 11523  0C50  101B               	bcf	27,0	;volatile
 11524  0C51                     i1l3419:
 11525                           
 11526                           ;tmr1.c: 83:         TMR1H = (uint8_t)(timerVal >> 8);
 11527  0C51  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11528  0C52  009A               	movwf	26	;volatile
 11529  0C53                     i1l3421:
 11530                           
 11531                           ;tmr1.c: 84:         TMR1L = (uint8_t)timerVal;
 11532  0C53  0870               	movf	TMR1_WriteTimer@timerVal,w
 11533  0C54  0099               	movwf	25	;volatile
 11534  0C55                     i1l3423:
 11535                           
 11536                           ;tmr1.c: 87:         T1CONbits.TMR1ON =1;
 11537  0C55  141B               	bsf	27,0	;volatile
 11538                           
 11539                           ;tmr1.c: 88:     }
 11540  0C56  2C5B               	goto	i1l538
 11541  0C57                     i1l3425:
 11542                           
 11543                           ;tmr1.c: 90:     {;tmr1.c: 92:         TMR1H = (uint8_t)(timerVal >> 8);
 11544  0C57  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11545  0C58  009A               	movwf	26	;volatile
 11546  0C59                     i1l3427:
 11547                           
 11548                           ;tmr1.c: 93:         TMR1L = (uint8_t)timerVal;
 11549  0C59  0870               	movf	TMR1_WriteTimer@timerVal,w
 11550  0C5A  0099               	movwf	25	;volatile
 11551  0C5B                     i1l538:
 11552  0C5B  0008               	return
 11553  0C5C                     __end_of_TMR1_WriteTimer:
 11554                           
 11555                           	psect	text50
 11556  0CD9                     __ptext50:	
 11557 ;; *************** function _TMR0_ISR *****************
 11558 ;; Defined at:
 11559 ;;		line 90 in file "tmr0.c"
 11560 ;; Parameters:    Size  Location     Type
 11561 ;;		None
 11562 ;; Auto vars:     Size  Location     Type
 11563 ;;		None
 11564 ;; Return value:  Size  Location     Type
 11565 ;;                  1    wreg      void 
 11566 ;; Registers used:
 11567 ;;		wreg, status,2, status,0, pclath, cstack
 11568 ;; Tracked objects:
 11569 ;;		On entry : 0/0
 11570 ;;		On exit  : 0/0
 11571 ;;		Unchanged: 0/0
 11572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11577 ;;Total ram usage:        0 bytes
 11578 ;; Hardware stack levels used: 1
 11579 ;; Hardware stack levels required when called: 2
 11580 ;; This function calls:
 11581 ;;		_TMR0_CallBack
 11582 ;; This function is called by:
 11583 ;;		_INTERRUPT_InterruptManager
 11584 ;; This function uses a non-reentrant model
 11585 ;;
 11586                           
 11587  0CD9                     _TMR0_ISR:	
 11588                           ;psect for function _TMR0_ISR
 11589                           
 11590  0CD9                     i1l3589:	
 11591                           ;incstack = 0
 11592                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 11593                           
 11594                           
 11595                           ;tmr0.c: 92:     static volatile uint16_t CountCallBack = 0;;tmr0.c: 95:     PIR0bits.TM
      +                          R0IF = 0;
 11596  0CD9  0020               	movlb	0	; select bank0
 11597  0CDA  1290               	bcf	16,5	;volatile
 11598  0CDB                     i1l3591:
 11599                           
 11600                           ;tmr0.c: 97:     if (++CountCallBack >= 4)
 11601  0CDB  3001               	movlw	1
 11602  0CDC  0021               	movlb	1	; select bank1
 11603  0CDD  07D0               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
 11604  0CDE  3000               	movlw	0
 11605  0CDF  3DD1               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
 11606  0CE0  3000               	movlw	0
 11607  0CE1  0251               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
 11608  0CE2  3004               	movlw	4
 11609  0CE3  1903               	skipnz
 11610  0CE4  0250               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
 11611  0CE5  1C03               	skipc
 11612  0CE6  2CE8               	goto	u124_21
 11613  0CE7  2CE9               	goto	u124_20
 11614  0CE8                     u124_21:
 11615  0CE8  2CEF               	goto	i1l374
 11616  0CE9                     u124_20:
 11617  0CE9                     i1l3593:
 11618                           
 11619                           ;tmr0.c: 98:     {;tmr0.c: 100:         TMR0_CallBack();
 11620  0CE9  318B  239E  318C   	fcall	_TMR0_CallBack
 11621  0CEC                     i1l3595:
 11622                           
 11623                           ;tmr0.c: 103:         CountCallBack = 0;
 11624  0CEC  0021               	movlb	1	; select bank1
 11625  0CED  01D0               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
 11626  0CEE  01D1               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
 11627  0CEF                     i1l374:
 11628  0CEF  0008               	return
 11629  0CF0                     __end_of_TMR0_ISR:
 11630                           
 11631                           	psect	text51
 11632  0B9E                     __ptext51:	
 11633 ;; *************** function _TMR0_CallBack *****************
 11634 ;; Defined at:
 11635 ;;		line 111 in file "tmr0.c"
 11636 ;; Parameters:    Size  Location     Type
 11637 ;;		None
 11638 ;; Auto vars:     Size  Location     Type
 11639 ;;		None
 11640 ;; Return value:  Size  Location     Type
 11641 ;;                  1    wreg      void 
 11642 ;; Registers used:
 11643 ;;		wreg, status,2, status,0, pclath, cstack
 11644 ;; Tracked objects:
 11645 ;;		On entry : 0/0
 11646 ;;		On exit  : 0/0
 11647 ;;		Unchanged: 0/0
 11648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11653 ;;Total ram usage:        0 bytes
 11654 ;; Hardware stack levels used: 1
 11655 ;; Hardware stack levels required when called: 1
 11656 ;; This function calls:
 11657 ;;		_FR_Timer_IncMicros
 11658 ;;		_FR_Timer_IncMillis
 11659 ;; This function is called by:
 11660 ;;		_TMR0_ISR
 11661 ;; This function uses a non-reentrant model
 11662 ;;
 11663                           
 11664  0B9E                     _TMR0_CallBack:	
 11665                           ;psect for function _TMR0_CallBack
 11666                           
 11667  0B9E                     i1l3381:	
 11668                           ;incstack = 0
 11669                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 11670                           
 11671                           
 11672                           ;tmr0.c: 113:     FR_Timer_IncMillis();
 11673  0B9E  318C  241E  318B   	fcall	_FR_Timer_IncMillis
 11674                           
 11675                           ;tmr0.c: 114:     FR_Timer_IncMicros();
 11676  0BA1  318C  2414  318B   	fcall	_FR_Timer_IncMicros
 11677  0BA4                     i1l377:
 11678  0BA4  0008               	return
 11679  0BA5                     __end_of_TMR0_CallBack:
 11680                           
 11681                           	psect	text52
 11682  0C1E                     __ptext52:	
 11683 ;; *************** function _FR_Timer_IncMillis *****************
 11684 ;; Defined at:
 11685 ;;		line 52 in file "FR_Timer.c"
 11686 ;; Parameters:    Size  Location     Type
 11687 ;;		None
 11688 ;; Auto vars:     Size  Location     Type
 11689 ;;		None
 11690 ;; Return value:  Size  Location     Type
 11691 ;;                  1    wreg      void 
 11692 ;; Registers used:
 11693 ;;		wreg
 11694 ;; Tracked objects:
 11695 ;;		On entry : 0/0
 11696 ;;		On exit  : 0/0
 11697 ;;		Unchanged: 0/0
 11698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11703 ;;Total ram usage:        0 bytes
 11704 ;; Hardware stack levels used: 1
 11705 ;; This function calls:
 11706 ;;		Nothing
 11707 ;; This function is called by:
 11708 ;;		_TMR0_CallBack
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712  0C1E                     _FR_Timer_IncMillis:	
 11713                           ;psect for function _FR_Timer_IncMillis
 11714                           
 11715  0C1E                     i1l2951:	
 11716                           ;incstack = 0
 11717                           ; Regs used in _FR_Timer_IncMillis: [wreg]
 11718                           
 11719                           
 11720                           ;FR_Timer.c: 53:     millis ++;
 11721  0C1E  3001               	movlw	1
 11722  0C1F  0021               	movlb	1	; select bank1
 11723  0C20  07A4               	addwf	_millis^(0+128),f
 11724  0C21  3000               	movlw	0
 11725  0C22  3DA5               	addwfc	(_millis+1)^(0+128),f
 11726  0C23  3000               	movlw	0
 11727  0C24  3DA6               	addwfc	(_millis+2)^(0+128),f
 11728  0C25  3000               	movlw	0
 11729  0C26  3DA7               	addwfc	(_millis+3)^(0+128),f
 11730  0C27                     i1l101:
 11731  0C27  0008               	return
 11732  0C28                     __end_of_FR_Timer_IncMillis:
 11733                           
 11734                           	psect	text53
 11735  0C14                     __ptext53:	
 11736 ;; *************** function _FR_Timer_IncMicros *****************
 11737 ;; Defined at:
 11738 ;;		line 59 in file "FR_Timer.c"
 11739 ;; Parameters:    Size  Location     Type
 11740 ;;		None
 11741 ;; Auto vars:     Size  Location     Type
 11742 ;;		None
 11743 ;; Return value:  Size  Location     Type
 11744 ;;                  1    wreg      void 
 11745 ;; Registers used:
 11746 ;;		wreg
 11747 ;; Tracked objects:
 11748 ;;		On entry : 0/0
 11749 ;;		On exit  : 0/0
 11750 ;;		Unchanged: 0/0
 11751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11756 ;;Total ram usage:        0 bytes
 11757 ;; Hardware stack levels used: 1
 11758 ;; This function calls:
 11759 ;;		Nothing
 11760 ;; This function is called by:
 11761 ;;		_TMR0_CallBack
 11762 ;; This function uses a non-reentrant model
 11763 ;;
 11764                           
 11765  0C14                     _FR_Timer_IncMicros:	
 11766                           ;psect for function _FR_Timer_IncMicros
 11767                           
 11768  0C14                     i1l2955:	
 11769                           ;incstack = 0
 11770                           ; Regs used in _FR_Timer_IncMicros: [wreg]
 11771                           
 11772                           
 11773                           ;FR_Timer.c: 60:     micros += 1000;
 11774  0C14  30E8               	movlw	232
 11775  0C15  0021               	movlb	1	; select bank1
 11776  0C16  07A0               	addwf	_micros@FR_Timer$F158^(0+128),f
 11777  0C17  3003               	movlw	3
 11778  0C18  3DA1               	addwfc	(_micros@FR_Timer$F158+1)^(0+128),f
 11779  0C19  3000               	movlw	0
 11780  0C1A  3DA2               	addwfc	(_micros@FR_Timer$F158+2)^(0+128),f
 11781  0C1B  3000               	movlw	0
 11782  0C1C  3DA3               	addwfc	(_micros@FR_Timer$F158+3)^(0+128),f
 11783  0C1D                     i1l104:
 11784  0C1D  0008               	return
 11785  0C1E                     __end_of_FR_Timer_IncMicros:
 11786                           
 11787                           	psect	text54
 11788  0DC2                     __ptext54:	
 11789 ;; *************** function _EUSART_Transmit_ISR *****************
 11790 ;; Defined at:
 11791 ;;		line 181 in file "eusart.c"
 11792 ;; Parameters:    Size  Location     Type
 11793 ;;		None
 11794 ;; Auto vars:     Size  Location     Type
 11795 ;;		None
 11796 ;; Return value:  Size  Location     Type
 11797 ;;                  1    wreg      void 
 11798 ;; Registers used:
 11799 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11800 ;; Tracked objects:
 11801 ;;		On entry : 0/0
 11802 ;;		On exit  : 0/0
 11803 ;;		Unchanged: 0/0
 11804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11807 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11808 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11809 ;;Total ram usage:        1 bytes
 11810 ;; Hardware stack levels used: 1
 11811 ;; This function calls:
 11812 ;;		Nothing
 11813 ;; This function is called by:
 11814 ;;		_EUSART_Initialize
 11815 ;;		_INTERRUPT_InterruptManager
 11816 ;; This function uses a non-reentrant model
 11817 ;;
 11818                           
 11819  0DC2                     _EUSART_Transmit_ISR:	
 11820                           ;psect for function _EUSART_Transmit_ISR
 11821                           
 11822  0DC2                     i1l3641:	
 11823                           ;incstack = 0
 11824                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 11825                           
 11826                           
 11827                           ;eusart.c: 185:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 11828  0DC2  3008               	movlw	8
 11829  0DC3  0021               	movlb	1	; select bank1
 11830  0DC4  0256               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 11831  0DC5  1803               	skipnc
 11832  0DC6  2DC8               	goto	u127_21
 11833  0DC7  2DC9               	goto	u127_20
 11834  0DC8                     u127_21:
 11835  0DC8  2DE2               	goto	i1l672
 11836  0DC9                     u127_20:
 11837  0DC9                     i1l3643:
 11838                           
 11839                           ;eusart.c: 186:     {;eusart.c: 187:         TX1REG = eusartTxBuffer[eusartTxTail++];
 11840  0DC9  0857               	movf	_eusartTxTail^(0+128),w
 11841  0DCA  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 11842  0DCB  0086               	movwf	6
 11843  0DCC  3001               	movlw	1	; select bank2/3
 11844  0DCD  0087               	movwf	7
 11845  0DCE  0801               	movf	1,w
 11846  0DCF  0023               	movlb	3	; select bank3
 11847  0DD0  009A               	movwf	26	;volatile
 11848  0DD1                     i1l3645:
 11849  0DD1  3001               	movlw	1
 11850  0DD2  00F0               	movwf	??_EUSART_Transmit_ISR
 11851  0DD3  0870               	movf	??_EUSART_Transmit_ISR,w
 11852  0DD4  0021               	movlb	1	; select bank1
 11853  0DD5  07D7               	addwf	_eusartTxTail^(0+128),f	;volatile
 11854  0DD6                     i1l3647:
 11855                           
 11856                           ;eusart.c: 188:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 11857  0DD6  3008               	movlw	8
 11858  0DD7  0257               	subwf	_eusartTxTail^(0+128),w	;volatile
 11859  0DD8  1C03               	skipc
 11860  0DD9  2DDB               	goto	u128_21
 11861  0DDA  2DDC               	goto	u128_20
 11862  0DDB                     u128_21:
 11863  0DDB  2DDD               	goto	i1l3651
 11864  0DDC                     u128_20:
 11865  0DDC                     i1l3649:
 11866                           
 11867                           ;eusart.c: 189:         {;eusart.c: 190:             eusartTxTail = 0;
 11868  0DDC  01D7               	clrf	_eusartTxTail^(0+128)	;volatile
 11869  0DDD                     i1l3651:
 11870                           
 11871                           ;eusart.c: 192:         eusartTxBufferRemaining++;
 11872  0DDD  3001               	movlw	1
 11873  0DDE  00F0               	movwf	??_EUSART_Transmit_ISR
 11874  0DDF  0870               	movf	??_EUSART_Transmit_ISR,w
 11875  0DE0  07D6               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 11876                           
 11877                           ;eusart.c: 193:     }
 11878  0DE1  2DE3               	goto	i1l675
 11879  0DE2                     i1l672:	
 11880                           ;eusart.c: 194:     else
 11881                           
 11882                           
 11883                           ;eusart.c: 195:     {;eusart.c: 196:         PIE1bits.TXIE = 0;
 11884  0DE2  1211               	bcf	17,4	;volatile
 11885  0DE3                     i1l675:
 11886  0DE3  0008               	return
 11887  0DE4                     __end_of_EUSART_Transmit_ISR:
 11888                           
 11889                           	psect	text55
 11890  0F83                     __ptext55:	
 11891 ;; *************** function _EUSART_Receive_ISR *****************
 11892 ;; Defined at:
 11893 ;;		line 202 in file "eusart.c"
 11894 ;; Parameters:    Size  Location     Type
 11895 ;;		None
 11896 ;; Auto vars:     Size  Location     Type
 11897 ;;		None
 11898 ;; Return value:  Size  Location     Type
 11899 ;;                  1    wreg      void 
 11900 ;; Registers used:
 11901 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11902 ;; Tracked objects:
 11903 ;;		On entry : 0/0
 11904 ;;		On exit  : 0/0
 11905 ;;		Unchanged: 0/0
 11906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11911 ;;Total ram usage:        0 bytes
 11912 ;; Hardware stack levels used: 1
 11913 ;; Hardware stack levels required when called: 2
 11914 ;; This function calls:
 11915 ;;		Absolute function
 11916 ;;		_EUSART_DefaultErrorHandler
 11917 ;;		_EUSART_DefaultFramingErrorHandler
 11918 ;;		_EUSART_DefaultOverrunErrorHandler
 11919 ;;		_EUSART_RxDataHandler
 11920 ;; This function is called by:
 11921 ;;		_EUSART_Initialize
 11922 ;;		_INTERRUPT_InterruptManager
 11923 ;; This function uses a non-reentrant model
 11924 ;;
 11925                           
 11926  0F83                     _EUSART_Receive_ISR:	
 11927                           ;psect for function _EUSART_Receive_ISR
 11928                           
 11929  0F83                     i1l3653:	
 11930                           ;incstack = 0
 11931                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11932                           
 11933                           
 11934                           ;eusart.c: 205:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 11935  0F83  087C               	movf	_eusartRxHead,w	;volatile
 11936  0F84  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11937  0F85  0086               	movwf	6
 11938  0F86  3001               	movlw	1	; select bank2/3
 11939  0F87  0087               	movwf	7
 11940  0F88  0181               	clrf	1
 11941  0F89                     i1l3655:
 11942                           
 11943                           ;eusart.c: 207:     if(RC1STAbits.FERR){
 11944  0F89  0023               	movlb	3	; select bank3
 11945  0F8A  1D1D               	btfss	29,2	;volatile
 11946  0F8B  2F8D               	goto	u129_21
 11947  0F8C  2F8E               	goto	u129_20
 11948  0F8D                     u129_21:
 11949  0F8D  2F9A               	goto	i1l3661
 11950  0F8E                     u129_20:
 11951  0F8E                     i1l3657:
 11952                           
 11953                           ;eusart.c: 208:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 11954  0F8E  087C               	movf	_eusartRxHead,w	;volatile
 11955  0F8F  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11956  0F90  0086               	movwf	6
 11957  0F91  3001               	movlw	1	; select bank2/3
 11958  0F92  0087               	movwf	7
 11959  0F93  1481               	bsf	1,1
 11960  0F94                     i1l3659:
 11961                           
 11962                           ;eusart.c: 209:         EUSART_FramingErrorHandler();
 11963  0F94  0021               	movlb	1	; select bank1
 11964  0F95  0839               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 11965  0F96  008A               	movwf	10
 11966  0F97  0838               	movf	_EUSART_FramingErrorHandler^(0+128),w
 11967  0F98  000A               	callw
 11968  0F99  318F               	pagesel	$
 11969  0F9A                     i1l3661:
 11970                           
 11971                           ;eusart.c: 212:     if(RC1STAbits.OERR){
 11972  0F9A  0023               	movlb	3	; select bank3
 11973  0F9B  1C9D               	btfss	29,1	;volatile
 11974  0F9C  2F9E               	goto	u130_21
 11975  0F9D  2F9F               	goto	u130_20
 11976  0F9E                     u130_21:
 11977  0F9E  2FAB               	goto	i1l3667
 11978  0F9F                     u130_20:
 11979  0F9F                     i1l3663:
 11980                           
 11981                           ;eusart.c: 213:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 11982  0F9F  087C               	movf	_eusartRxHead,w	;volatile
 11983  0FA0  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11984  0FA1  0086               	movwf	6
 11985  0FA2  3001               	movlw	1	; select bank2/3
 11986  0FA3  0087               	movwf	7
 11987  0FA4  1501               	bsf	1,2
 11988  0FA5                     i1l3665:
 11989                           
 11990                           ;eusart.c: 214:         EUSART_OverrunErrorHandler();
 11991  0FA5  0021               	movlb	1	; select bank1
 11992  0FA6  0837               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 11993  0FA7  008A               	movwf	10
 11994  0FA8  0836               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 11995  0FA9  000A               	callw
 11996  0FAA  318F               	pagesel	$
 11997  0FAB                     i1l3667:
 11998                           
 11999                           ;eusart.c: 217:     if(eusartRxStatusBuffer[eusartRxHead].status){
 12000  0FAB  087C               	movf	_eusartRxHead,w	;volatile
 12001  0FAC  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 12002  0FAD  0086               	movwf	6
 12003  0FAE  3001               	movlw	1	; select bank2/3
 12004  0FAF  0087               	movwf	7
 12005  0FB0  0801               	movf	1,w
 12006  0FB1  1903               	btfsc	3,2
 12007  0FB2  2FB4               	goto	u131_21
 12008  0FB3  2FB5               	goto	u131_20
 12009  0FB4                     u131_21:
 12010  0FB4  2FBC               	goto	i1l3671
 12011  0FB5                     u131_20:
 12012  0FB5                     i1l3669:
 12013                           
 12014                           ;eusart.c: 218:         EUSART_ErrorHandler();
 12015  0FB5  0021               	movlb	1	; select bank1
 12016  0FB6  0835               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 12017  0FB7  008A               	movwf	10
 12018  0FB8  0834               	movf	_EUSART_ErrorHandler^(0+128),w
 12019  0FB9  000A               	callw
 12020  0FBA  318F               	pagesel	$
 12021                           
 12022                           ;eusart.c: 219:     } else {
 12023  0FBB  2FBF               	goto	i1l682
 12024  0FBC                     i1l3671:
 12025                           
 12026                           ;eusart.c: 220:         EUSART_RxDataHandler();
 12027  0FBC  318D  2551  318F   	fcall	_EUSART_RxDataHandler
 12028  0FBF                     i1l682:
 12029  0FBF  0008               	return
 12030  0FC0                     __end_of_EUSART_Receive_ISR:
 12031                           
 12032                           	psect	text56
 12033  0B8C                     __ptext56:	
 12034 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 12035 ;; Defined at:
 12036 ;;		line 244 in file "eusart.c"
 12037 ;; Parameters:    Size  Location     Type
 12038 ;;		None
 12039 ;; Auto vars:     Size  Location     Type
 12040 ;;		None
 12041 ;; Return value:  Size  Location     Type
 12042 ;;                  1    wreg      void 
 12043 ;; Registers used:
 12044 ;;		None
 12045 ;; Tracked objects:
 12046 ;;		On entry : 0/0
 12047 ;;		On exit  : 0/0
 12048 ;;		Unchanged: 0/0
 12049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12054 ;;Total ram usage:        0 bytes
 12055 ;; Hardware stack levels used: 1
 12056 ;; This function calls:
 12057 ;;		Nothing
 12058 ;; This function is called by:
 12059 ;;		_EUSART_Initialize
 12060 ;;		_EUSART_Receive_ISR
 12061 ;; This function uses a non-reentrant model
 12062 ;;
 12063                           
 12064  0B8C                     _EUSART_DefaultOverrunErrorHandler:	
 12065                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 12066                           
 12067  0B8C                     i1l3429:	
 12068                           ;incstack = 0
 12069                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 12070                           
 12071                           
 12072                           ;eusart.c: 247:     RC1STAbits.CREN = 0;
 12073  0B8C  0023               	movlb	3	; select bank3
 12074  0B8D  121D               	bcf	29,4	;volatile
 12075                           
 12076                           ;eusart.c: 248:     RC1STAbits.CREN = 1;
 12077  0B8E  161D               	bsf	29,4	;volatile
 12078  0B8F                     i1l692:
 12079  0B8F  0008               	return
 12080  0B90                     __end_of_EUSART_DefaultOverrunErrorHandler:
 12081                           
 12082                           	psect	text57
 12083  0003                     __ptext57:	
 12084 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 12085 ;; Defined at:
 12086 ;;		line 240 in file "eusart.c"
 12087 ;; Parameters:    Size  Location     Type
 12088 ;;		None
 12089 ;; Auto vars:     Size  Location     Type
 12090 ;;		None
 12091 ;; Return value:  Size  Location     Type
 12092 ;;                  1    wreg      void 
 12093 ;; Registers used:
 12094 ;;		None
 12095 ;; Tracked objects:
 12096 ;;		On entry : 0/0
 12097 ;;		On exit  : 0/0
 12098 ;;		Unchanged: 0/0
 12099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12104 ;;Total ram usage:        0 bytes
 12105 ;; Hardware stack levels used: 1
 12106 ;; This function calls:
 12107 ;;		Nothing
 12108 ;; This function is called by:
 12109 ;;		_EUSART_Initialize
 12110 ;;		_EUSART_Receive_ISR
 12111 ;; This function uses a non-reentrant model
 12112 ;;
 12113                           
 12114  0003                     _EUSART_DefaultFramingErrorHandler:	
 12115                           ;psect for function _EUSART_DefaultFramingErrorHandler
 12116                           
 12117  0003                     i1l689:	
 12118                           ;incstack = 0
 12119                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 12120                           
 12121  0003  0008               	return
 12122  0004                     __end_of_EUSART_DefaultFramingErrorHandler:
 12123                           
 12124                           	psect	text58
 12125  0B88                     __ptext58:	
 12126 ;; *************** function _EUSART_DefaultErrorHandler *****************
 12127 ;; Defined at:
 12128 ;;		line 254 in file "eusart.c"
 12129 ;; Parameters:    Size  Location     Type
 12130 ;;		None
 12131 ;; Auto vars:     Size  Location     Type
 12132 ;;		None
 12133 ;; Return value:  Size  Location     Type
 12134 ;;                  1    wreg      void 
 12135 ;; Registers used:
 12136 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12137 ;; Tracked objects:
 12138 ;;		On entry : 0/0
 12139 ;;		On exit  : 0/0
 12140 ;;		Unchanged: 0/0
 12141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12146 ;;Total ram usage:        0 bytes
 12147 ;; Hardware stack levels used: 1
 12148 ;; Hardware stack levels required when called: 1
 12149 ;; This function calls:
 12150 ;;		_EUSART_RxDataHandler
 12151 ;; This function is called by:
 12152 ;;		_EUSART_Initialize
 12153 ;;		_EUSART_Receive_ISR
 12154 ;; This function uses a non-reentrant model
 12155 ;;
 12156                           
 12157  0B88                     _EUSART_DefaultErrorHandler:	
 12158                           ;psect for function _EUSART_DefaultErrorHandler
 12159                           
 12160  0B88                     i1l3431:	
 12161                           ;incstack = 0
 12162                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12163                           
 12164                           
 12165                           ;eusart.c: 255:     EUSART_RxDataHandler();
 12166  0B88  318D  2551  318B   	fcall	_EUSART_RxDataHandler
 12167  0B8B                     i1l695:
 12168  0B8B  0008               	return
 12169  0B8C                     __end_of_EUSART_DefaultErrorHandler:
 12170                           
 12171                           	psect	text59
 12172  0D51                     __ptext59:	
 12173 ;; *************** function _EUSART_RxDataHandler *****************
 12174 ;; Defined at:
 12175 ;;		line 228 in file "eusart.c"
 12176 ;; Parameters:    Size  Location     Type
 12177 ;;		None
 12178 ;; Auto vars:     Size  Location     Type
 12179 ;;		None
 12180 ;; Return value:  Size  Location     Type
 12181 ;;                  1    wreg      void 
 12182 ;; Registers used:
 12183 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12184 ;; Tracked objects:
 12185 ;;		On entry : 0/0
 12186 ;;		On exit  : 0/0
 12187 ;;		Unchanged: 0/0
 12188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12192 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12193 ;;Total ram usage:        1 bytes
 12194 ;; Hardware stack levels used: 1
 12195 ;; This function calls:
 12196 ;;		Nothing
 12197 ;; This function is called by:
 12198 ;;		_EUSART_Receive_ISR
 12199 ;;		_EUSART_DefaultErrorHandler
 12200 ;; This function uses a non-reentrant model
 12201 ;;
 12202                           
 12203  0D51                     _EUSART_RxDataHandler:	
 12204                           ;psect for function _EUSART_RxDataHandler
 12205                           
 12206  0D51                     i1l3163:	
 12207                           ;incstack = 0
 12208                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12209                           
 12210                           
 12211                           ;eusart.c: 230:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 12212  0D51  0023               	movlb	3	; select bank3
 12213  0D52  0819               	movf	25,w	;volatile
 12214  0D53  00F0               	movwf	??_EUSART_RxDataHandler
 12215  0D54  087C               	movf	_eusartRxHead,w
 12216  0D55  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 12217  0D56  0086               	movwf	6
 12218  0D57  3001               	movlw	1	; select bank2/3
 12219  0D58  0087               	movwf	7
 12220  0D59  0870               	movf	??_EUSART_RxDataHandler,w
 12221  0D5A  0081               	movwf	1
 12222  0D5B                     i1l3165:
 12223  0D5B  3001               	movlw	1
 12224  0D5C  00F0               	movwf	??_EUSART_RxDataHandler
 12225  0D5D  0870               	movf	??_EUSART_RxDataHandler,w
 12226  0D5E  07FC               	addwf	_eusartRxHead,f	;volatile
 12227  0D5F                     i1l3167:
 12228                           
 12229                           ;eusart.c: 231:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 12230  0D5F  3008               	movlw	8
 12231  0D60  027C               	subwf	_eusartRxHead,w	;volatile
 12232  0D61  1C03               	skipc
 12233  0D62  2D64               	goto	u106_21
 12234  0D63  2D65               	goto	u106_20
 12235  0D64                     u106_21:
 12236  0D64  2D66               	goto	i1l3171
 12237  0D65                     u106_20:
 12238  0D65                     i1l3169:
 12239                           
 12240                           ;eusart.c: 232:     {;eusart.c: 233:         eusartRxHead = 0;
 12241  0D65  01FC               	clrf	_eusartRxHead	;volatile
 12242  0D66                     i1l3171:
 12243                           
 12244                           ;eusart.c: 235:     eusartRxCount++;
 12245  0D66  3001               	movlw	1
 12246  0D67  00F0               	movwf	??_EUSART_RxDataHandler
 12247  0D68  0870               	movf	??_EUSART_RxDataHandler,w
 12248  0D69  0021               	movlb	1	; select bank1
 12249  0D6A  07D5               	addwf	_eusartRxCount^(0+128),f	;volatile
 12250  0D6B                     i1l686:
 12251  0D6B  0008               	return
 12252  0D6C                     __end_of_EUSART_RxDataHandler:
 12253                           
 12254                           	psect	text60
 12255  0CC3                     __ptext60:	
 12256 ;; *************** function _CCP3_CaptureISR *****************
 12257 ;; Defined at:
 12258 ;;		line 94 in file "ccp3.c"
 12259 ;; Parameters:    Size  Location     Type
 12260 ;;		None
 12261 ;; Auto vars:     Size  Location     Type
 12262 ;;  module          2    3[COMMON] struct CCPR3Reg_tag
 12263 ;; Return value:  Size  Location     Type
 12264 ;;                  1    wreg      void 
 12265 ;; Registers used:
 12266 ;;		wreg, status,2, status,0, pclath, cstack
 12267 ;; Tracked objects:
 12268 ;;		On entry : 0/0
 12269 ;;		On exit  : 0/0
 12270 ;;		Unchanged: 0/0
 12271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12273 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12274 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12275 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12276 ;;Total ram usage:        3 bytes
 12277 ;; Hardware stack levels used: 1
 12278 ;; Hardware stack levels required when called: 1
 12279 ;; This function calls:
 12280 ;;		Absolute function
 12281 ;;		_CCP3_DefaultCallBack
 12282 ;; This function is called by:
 12283 ;;		_INTERRUPT_InterruptManager
 12284 ;; This function uses a non-reentrant model
 12285 ;;
 12286                           
 12287  0CC3                     _CCP3_CaptureISR:	
 12288                           ;psect for function _CCP3_CaptureISR
 12289                           
 12290  0CC3                     i1l3609:	
 12291                           ;incstack = 0
 12292                           ; Regs used in _CCP3_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
 12293                           
 12294                           
 12295                           ;ccp3.c: 96:     CCP3_PERIOD_REG_T module;;ccp3.c: 99:     PIR4bits.CCP3IF = 0;
 12296  0CC3  0020               	movlb	0	; select bank0
 12297  0CC4  1114               	bcf	20,2	;volatile
 12298  0CC5                     i1l3611:
 12299                           
 12300                           ;ccp3.c: 102:     module.ccpr3l = CCPR3L;
 12301  0CC5  0026               	movlb	6	; select bank6
 12302  0CC6  0811               	movf	17,w	;volatile
 12303  0CC7  00F2               	movwf	??_CCP3_CaptureISR
 12304  0CC8  0872               	movf	??_CCP3_CaptureISR,w
 12305  0CC9  00F3               	movwf	CCP3_CaptureISR@module
 12306                           
 12307                           ;ccp3.c: 103:     module.ccpr3h = CCPR3H;
 12308  0CCA  0812               	movf	18,w	;volatile
 12309  0CCB  00F2               	movwf	??_CCP3_CaptureISR
 12310  0CCC  0872               	movf	??_CCP3_CaptureISR,w
 12311  0CCD  00F4               	movwf	CCP3_CaptureISR@module+1
 12312  0CCE                     i1l3613:
 12313                           
 12314                           ;ccp3.c: 106:     CCP3_CallBack(module.ccpr3_16Bit);
 12315  0CCE  0874               	movf	CCP3_CaptureISR@module+1,w
 12316  0CCF  00F1               	movwf	CCP3_DefaultCallBack@capturedValue+1
 12317  0CD0  0873               	movf	CCP3_CaptureISR@module,w
 12318  0CD1  00F0               	movwf	CCP3_DefaultCallBack@capturedValue
 12319  0CD2  0021               	movlb	1	; select bank1
 12320  0CD3  0843               	movf	(_CCP3_CallBack+1)^(0+128),w
 12321  0CD4  008A               	movwf	10
 12322  0CD5  0842               	movf	_CCP3_CallBack^(0+128),w
 12323  0CD6  000A               	callw
 12324  0CD7  318C               	pagesel	$
 12325  0CD8                     i1l494:
 12326  0CD8  0008               	return
 12327  0CD9                     __end_of_CCP3_CaptureISR:
 12328                           
 12329                           	psect	text61
 12330  0002                     __ptext61:	
 12331 ;; *************** function _CCP3_DefaultCallBack *****************
 12332 ;; Defined at:
 12333 ;;		line 60 in file "ccp3.c"
 12334 ;; Parameters:    Size  Location     Type
 12335 ;;  capturedValu    2    0[COMMON] unsigned short 
 12336 ;; Auto vars:     Size  Location     Type
 12337 ;;		None
 12338 ;; Return value:  Size  Location     Type
 12339 ;;                  1    wreg      void 
 12340 ;; Registers used:
 12341 ;;		None
 12342 ;; Tracked objects:
 12343 ;;		On entry : 0/0
 12344 ;;		On exit  : 0/0
 12345 ;;		Unchanged: 0/0
 12346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12351 ;;Total ram usage:        2 bytes
 12352 ;; Hardware stack levels used: 1
 12353 ;; This function calls:
 12354 ;;		Nothing
 12355 ;; This function is called by:
 12356 ;;		_CCP3_Initialize
 12357 ;;		_CCP3_CaptureISR
 12358 ;; This function uses a non-reentrant model
 12359 ;;
 12360                           
 12361  0002                     _CCP3_DefaultCallBack:	
 12362                           ;psect for function _CCP3_DefaultCallBack
 12363                           
 12364  0002                     i1l488:	
 12365                           ;incstack = 0
 12366                           ; Regs used in _CCP3_DefaultCallBack: []
 12367                           
 12368  0002  0008               	return
 12369  0003                     __end_of_CCP3_DefaultCallBack:
 12370                           
 12371                           	psect	text62
 12372  0CAD                     __ptext62:	
 12373 ;; *************** function _CCP2_CaptureISR *****************
 12374 ;; Defined at:
 12375 ;;		line 76 in file "ccp2.c"
 12376 ;; Parameters:    Size  Location     Type
 12377 ;;		None
 12378 ;; Auto vars:     Size  Location     Type
 12379 ;;  module          2    9[COMMON] struct CCPR2Reg_tag
 12380 ;; Return value:  Size  Location     Type
 12381 ;;                  1    wreg      void 
 12382 ;; Registers used:
 12383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12384 ;; Tracked objects:
 12385 ;;		On entry : 0/0
 12386 ;;		On exit  : 0/0
 12387 ;;		Unchanged: 0/0
 12388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12390 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12392 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12393 ;;Total ram usage:        3 bytes
 12394 ;; Hardware stack levels used: 1
 12395 ;; Hardware stack levels required when called: 2
 12396 ;; This function calls:
 12397 ;;		Absolute function
 12398 ;;		_CCP2_DefaultCallBack
 12399 ;; This function is called by:
 12400 ;;		_INTERRUPT_InterruptManager
 12401 ;; This function uses a non-reentrant model
 12402 ;;
 12403                           
 12404  0CAD                     _CCP2_CaptureISR:	
 12405                           ;psect for function _CCP2_CaptureISR
 12406                           
 12407  0CAD                     i1l3603:	
 12408                           ;incstack = 0
 12409                           ; Regs used in _CCP2_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12410                           
 12411                           
 12412                           ;ccp2.c: 78:     CCP2_PERIOD_REG_T module;;ccp2.c: 81:     PIR4bits.CCP2IF = 0;
 12413  0CAD  0020               	movlb	0	; select bank0
 12414  0CAE  1094               	bcf	20,1	;volatile
 12415  0CAF                     i1l3605:
 12416                           
 12417                           ;ccp2.c: 84:     module.ccpr2l = CCPR2L;
 12418  0CAF  0025               	movlb	5	; select bank5
 12419  0CB0  0815               	movf	21,w	;volatile
 12420  0CB1  00F8               	movwf	??_CCP2_CaptureISR
 12421  0CB2  0878               	movf	??_CCP2_CaptureISR,w
 12422  0CB3  00F9               	movwf	CCP2_CaptureISR@module
 12423                           
 12424                           ;ccp2.c: 85:     module.ccpr2h = CCPR2H;
 12425  0CB4  0816               	movf	22,w	;volatile
 12426  0CB5  00F8               	movwf	??_CCP2_CaptureISR
 12427  0CB6  0878               	movf	??_CCP2_CaptureISR,w
 12428  0CB7  00FA               	movwf	CCP2_CaptureISR@module+1
 12429  0CB8                     i1l3607:
 12430                           
 12431                           ;ccp2.c: 88:     CCP2_CallBack(module.ccpr2_16Bit);
 12432  0CB8  087A               	movf	CCP2_CaptureISR@module+1,w
 12433  0CB9  00F4               	movwf	CCP2_DefaultCallBack@capturedValue+1
 12434  0CBA  0879               	movf	CCP2_CaptureISR@module,w
 12435  0CBB  00F3               	movwf	CCP2_DefaultCallBack@capturedValue
 12436  0CBC  0021               	movlb	1	; select bank1
 12437  0CBD  0849               	movf	(_CCP2_CallBack+1)^(0+128),w
 12438  0CBE  008A               	movwf	10
 12439  0CBF  0848               	movf	_CCP2_CallBack^(0+128),w
 12440  0CC0  000A               	callw
 12441  0CC1  318C               	pagesel	$
 12442  0CC2                     i1l464:
 12443  0CC2  0008               	return
 12444  0CC3                     __end_of_CCP2_CaptureISR:
 12445                           
 12446                           	psect	text63
 12447  0F0F                     __ptext63:	
 12448 ;; *************** function _CCP2_DefaultCallBack *****************
 12449 ;; Defined at:
 12450 ;;		line 28 in file "ccp2.c"
 12451 ;; Parameters:    Size  Location     Type
 12452 ;;  capturedValu    2    3[COMMON] unsigned short 
 12453 ;; Auto vars:     Size  Location     Type
 12454 ;;		None
 12455 ;; Return value:  Size  Location     Type
 12456 ;;                  1    wreg      void 
 12457 ;; Registers used:
 12458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12459 ;; Tracked objects:
 12460 ;;		On entry : 0/0
 12461 ;;		On exit  : 0/0
 12462 ;;		Unchanged: 0/0
 12463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12466 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12467 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12468 ;;Total ram usage:        5 bytes
 12469 ;; Hardware stack levels used: 1
 12470 ;; Hardware stack levels required when called: 1
 12471 ;; This function calls:
 12472 ;;		_JSN_GetLastTrig
 12473 ;;		_ReadPin
 12474 ;; This function is called by:
 12475 ;;		_CCP2_Initialize
 12476 ;;		_CCP2_CaptureISR
 12477 ;; This function uses a non-reentrant model
 12478 ;;
 12479                           
 12480  0F0F                     _CCP2_DefaultCallBack:	
 12481                           ;psect for function _CCP2_DefaultCallBack
 12482                           
 12483  0F0F                     i1l3399:	
 12484                           ;incstack = 0
 12485                           ; Regs used in _CCP2_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12486                           
 12487                           
 12488                           ;ccp2.c: 28: static void CCP2_DefaultCallBack(uint16_t capturedValue);ccp2.c: 29: {;ccp2
      +                          .c: 30:     switch(ReadPin(JSN_GetLastTrig()->echoPin)) {
 12489  0F0F  2F2D               	goto	i1l3409
 12490  0F10                     i1l3401:
 12491                           
 12492                           ;ccp2.c: 33:             ticksUp = capturedValue;
 12493  0F10  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 12494  0F11  0021               	movlb	1	; select bank1
 12495  0F12  00C7               	movwf	(_ticksUp@ccp2$F876+1)^(0+128)
 12496  0F13  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 12497  0F14  00C6               	movwf	_ticksUp@ccp2$F876^(0+128)
 12498                           
 12499                           ;ccp2.c: 34:             break;
 12500  0F15  2F48               	goto	i1l458
 12501  0F16                     i1l3403:
 12502                           
 12503                           ;ccp2.c: 37:             ticksDown = capturedValue;
 12504  0F16  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 12505  0F17  0021               	movlb	1	; select bank1
 12506  0F18  00C5               	movwf	(_ticksDown@ccp2$F877+1)^(0+128)
 12507  0F19  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 12508  0F1A  00C4               	movwf	_ticksDown@ccp2$F877^(0+128)
 12509  0F1B                     i1l3405:
 12510                           
 12511                           ;ccp2.c: 38:             JSN_GetLastTrig()->echoHighTime = ((ticksDown - ticksUp)>>1);
 12512  0F1B  0846               	movf	_ticksUp@ccp2$F876^(0+128),w
 12513  0F1C  0244               	subwf	_ticksDown@ccp2$F877^(0+128),w
 12514  0F1D  00F5               	movwf	??_CCP2_DefaultCallBack
 12515  0F1E  0847               	movf	(_ticksUp@ccp2$F876+1)^(0+128),w
 12516  0F1F  3B45               	subwfb	(_ticksDown@ccp2$F877+1)^(0+128),w
 12517  0F20  00F6               	movwf	??_CCP2_DefaultCallBack+1
 12518  0F21  36F6               	lsrf	??_CCP2_DefaultCallBack+1,f
 12519  0F22  0CF5               	rrf	??_CCP2_DefaultCallBack,f
 12520  0F23  3187  27FD  318F   	fcall	_JSN_GetLastTrig
 12521  0F26  0086               	movwf	6
 12522  0F27  0187               	clrf	7
 12523  0F28  0875               	movf	??_CCP2_DefaultCallBack,w
 12524  0F29  3FC0               	movwi [0]fsr1
 12525  0F2A  0876               	movf	??_CCP2_DefaultCallBack+1,w
 12526  0F2B  3FC1               	movwi [1]fsr1
 12527                           
 12528                           ;ccp2.c: 39:             break;
 12529  0F2C  2F48               	goto	i1l458
 12530  0F2D                     i1l3409:
 12531  0F2D  3187  27FD  318F   	fcall	_JSN_GetLastTrig
 12532  0F30  00F5               	movwf	??_CCP2_DefaultCallBack
 12533  0F31  3005               	movlw	5
 12534  0F32  0775               	addwf	??_CCP2_DefaultCallBack,w
 12535  0F33  0086               	movwf	6
 12536  0F34  0187               	clrf	7
 12537  0F35  0801               	movf	1,w
 12538  0F36  3184  245B  318F   	fcall	_ReadPin
 12539  0F39  00F6               	movwf	??_CCP2_DefaultCallBack+1
 12540  0F3A  01F7               	clrf	??_CCP2_DefaultCallBack+2
 12541                           
 12542                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12543                           ; Switch size 1, requested type "simple"
 12544                           ; Number of cases is 1, Range of values is 0 to 0
 12545                           ; switch strategies available:
 12546                           ; Name         Instructions Cycles
 12547                           ; simple_byte            4     3 (average)
 12548                           ; direct_byte            8     6 (fixed)
 12549                           ; jumptable            260     6 (fixed)
 12550                           ;	Chosen strategy is simple_byte
 12551  0F3B  0877               	movf	??_CCP2_DefaultCallBack+2,w
 12552  0F3C  3A00               	xorlw	0	; case 0
 12553  0F3D  1903               	skipnz
 12554  0F3E  2F40               	goto	i1l3935
 12555  0F3F  2F48               	goto	i1l458
 12556  0F40                     i1l3935:
 12557                           
 12558                           ; Switch size 1, requested type "simple"
 12559                           ; Number of cases is 2, Range of values is 0 to 1
 12560                           ; switch strategies available:
 12561                           ; Name         Instructions Cycles
 12562                           ; simple_byte            7     4 (average)
 12563                           ; direct_byte           10     6 (fixed)
 12564                           ; jumptable            260     6 (fixed)
 12565                           ;	Chosen strategy is simple_byte
 12566  0F40  0876               	movf	??_CCP2_DefaultCallBack+1,w
 12567  0F41  3A00               	xorlw	0	; case 0
 12568  0F42  1903               	skipnz
 12569  0F43  2F16               	goto	i1l3403
 12570  0F44  3A01               	xorlw	1	; case 1
 12571  0F45  1903               	skipnz
 12572  0F46  2F10               	goto	i1l3401
 12573  0F47  2F48               	goto	i1l458
 12574  0F48                     i1l458:
 12575  0F48  0008               	return
 12576  0F49                     __end_of_CCP2_DefaultCallBack:
 12577                           
 12578                           	psect	text64
 12579  0C97                     __ptext64:	
 12580 ;; *************** function _CCP1_CaptureISR *****************
 12581 ;; Defined at:
 12582 ;;		line 78 in file "ccp1.c"
 12583 ;; Parameters:    Size  Location     Type
 12584 ;;		None
 12585 ;; Auto vars:     Size  Location     Type
 12586 ;;  module          2    9[COMMON] struct CCPR1Reg_tag
 12587 ;; Return value:  Size  Location     Type
 12588 ;;                  1    wreg      void 
 12589 ;; Registers used:
 12590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12591 ;; Tracked objects:
 12592 ;;		On entry : 0/0
 12593 ;;		On exit  : 0/0
 12594 ;;		Unchanged: 0/0
 12595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12597 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12599 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12600 ;;Total ram usage:        3 bytes
 12601 ;; Hardware stack levels used: 1
 12602 ;; Hardware stack levels required when called: 2
 12603 ;; This function calls:
 12604 ;;		Absolute function
 12605 ;;		_CCP1_DefaultCallBack
 12606 ;; This function is called by:
 12607 ;;		_INTERRUPT_InterruptManager
 12608 ;; This function uses a non-reentrant model
 12609 ;;
 12610                           
 12611  0C97                     _CCP1_CaptureISR:	
 12612                           ;psect for function _CCP1_CaptureISR
 12613                           
 12614  0C97                     i1l3597:	
 12615                           ;incstack = 0
 12616                           ; Regs used in _CCP1_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12617                           
 12618                           
 12619                           ;ccp1.c: 80:     CCP1_PERIOD_REG_T module;;ccp1.c: 83:     PIR4bits.CCP1IF = 0;
 12620  0C97  0020               	movlb	0	; select bank0
 12621  0C98  1014               	bcf	20,0	;volatile
 12622  0C99                     i1l3599:
 12623                           
 12624                           ;ccp1.c: 86:     module.ccpr1l = CCPR1L;
 12625  0C99  0025               	movlb	5	; select bank5
 12626  0C9A  0811               	movf	17,w	;volatile
 12627  0C9B  00F8               	movwf	??_CCP1_CaptureISR
 12628  0C9C  0878               	movf	??_CCP1_CaptureISR,w
 12629  0C9D  00F9               	movwf	CCP1_CaptureISR@module
 12630                           
 12631                           ;ccp1.c: 87:     module.ccpr1h = CCPR1H;
 12632  0C9E  0812               	movf	18,w	;volatile
 12633  0C9F  00F8               	movwf	??_CCP1_CaptureISR
 12634  0CA0  0878               	movf	??_CCP1_CaptureISR,w
 12635  0CA1  00FA               	movwf	CCP1_CaptureISR@module+1
 12636  0CA2                     i1l3601:
 12637                           
 12638                           ;ccp1.c: 90:     CCP1_CallBack(module.ccpr1_16Bit);
 12639  0CA2  087A               	movf	CCP1_CaptureISR@module+1,w
 12640  0CA3  00F4               	movwf	CCP1_DefaultCallBack@capturedValue+1
 12641  0CA4  0879               	movf	CCP1_CaptureISR@module,w
 12642  0CA5  00F3               	movwf	CCP1_DefaultCallBack@capturedValue
 12643  0CA6  0021               	movlb	1	; select bank1
 12644  0CA7  084F               	movf	(_CCP1_CallBack+1)^(0+128),w
 12645  0CA8  008A               	movwf	10
 12646  0CA9  084E               	movf	_CCP1_CallBack^(0+128),w
 12647  0CAA  000A               	callw
 12648  0CAB  318C               	pagesel	$
 12649  0CAC                     i1l422:
 12650  0CAC  0008               	return
 12651  0CAD                     __end_of_CCP1_CaptureISR:
 12652                           
 12653                           	psect	text65
 12654  0ED5                     __ptext65:	
 12655 ;; *************** function _CCP1_DefaultCallBack *****************
 12656 ;; Defined at:
 12657 ;;		line 30 in file "ccp1.c"
 12658 ;; Parameters:    Size  Location     Type
 12659 ;;  capturedValu    2    3[COMMON] unsigned short 
 12660 ;; Auto vars:     Size  Location     Type
 12661 ;;		None
 12662 ;; Return value:  Size  Location     Type
 12663 ;;                  1    wreg      void 
 12664 ;; Registers used:
 12665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12666 ;; Tracked objects:
 12667 ;;		On entry : 0/0
 12668 ;;		On exit  : 0/0
 12669 ;;		Unchanged: 0/0
 12670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12673 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12674 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12675 ;;Total ram usage:        5 bytes
 12676 ;; Hardware stack levels used: 1
 12677 ;; Hardware stack levels required when called: 1
 12678 ;; This function calls:
 12679 ;;		_JSN_GetLastTrig
 12680 ;;		_ReadPin
 12681 ;; This function is called by:
 12682 ;;		_CCP1_Initialize
 12683 ;;		_CCP1_CaptureISR
 12684 ;; This function uses a non-reentrant model
 12685 ;;
 12686                           
 12687  0ED5                     _CCP1_DefaultCallBack:	
 12688                           ;psect for function _CCP1_DefaultCallBack
 12689                           
 12690  0ED5                     i1l3383:	
 12691                           ;incstack = 0
 12692                           ; Regs used in _CCP1_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12693                           
 12694                           
 12695                           ;ccp1.c: 30: static void CCP1_DefaultCallBack(uint16_t capturedValue);ccp1.c: 31: {;ccp1
      +                          .c: 32:     switch(ReadPin(JSN_GetLastTrig()->echoPin)) {
 12696  0ED5  2EF3               	goto	i1l3393
 12697  0ED6                     i1l3385:
 12698                           
 12699                           ;ccp1.c: 35:             ticksUp = capturedValue;
 12700  0ED6  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 12701  0ED7  0021               	movlb	1	; select bank1
 12702  0ED8  00CD               	movwf	(_ticksUp+1)^(0+128)
 12703  0ED9  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 12704  0EDA  00CC               	movwf	_ticksUp^(0+128)
 12705                           
 12706                           ;ccp1.c: 36:             break;
 12707  0EDB  2F0E               	goto	i1l416
 12708  0EDC                     i1l3387:
 12709                           
 12710                           ;ccp1.c: 39:             ticksDown = capturedValue;
 12711  0EDC  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 12712  0EDD  0021               	movlb	1	; select bank1
 12713  0EDE  00CB               	movwf	(_ticksDown+1)^(0+128)
 12714  0EDF  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 12715  0EE0  00CA               	movwf	_ticksDown^(0+128)
 12716  0EE1                     i1l3389:
 12717                           
 12718                           ;ccp1.c: 40:             JSN_GetLastTrig()->echoHighTime = ((ticksDown - ticksUp)>>1);
 12719  0EE1  084C               	movf	_ticksUp^(0+128),w
 12720  0EE2  024A               	subwf	_ticksDown^(0+128),w
 12721  0EE3  00F5               	movwf	??_CCP1_DefaultCallBack
 12722  0EE4  084D               	movf	(_ticksUp+1)^(0+128),w
 12723  0EE5  3B4B               	subwfb	(_ticksDown+1)^(0+128),w
 12724  0EE6  00F6               	movwf	??_CCP1_DefaultCallBack+1
 12725  0EE7  36F6               	lsrf	??_CCP1_DefaultCallBack+1,f
 12726  0EE8  0CF5               	rrf	??_CCP1_DefaultCallBack,f
 12727  0EE9  3187  27FD  318E   	fcall	_JSN_GetLastTrig
 12728  0EEC  0086               	movwf	6
 12729  0EED  0187               	clrf	7
 12730  0EEE  0875               	movf	??_CCP1_DefaultCallBack,w
 12731  0EEF  3FC0               	movwi [0]fsr1
 12732  0EF0  0876               	movf	??_CCP1_DefaultCallBack+1,w
 12733  0EF1  3FC1               	movwi [1]fsr1
 12734                           
 12735                           ;ccp1.c: 41:             break;
 12736  0EF2  2F0E               	goto	i1l416
 12737  0EF3                     i1l3393:
 12738  0EF3  3187  27FD  318E   	fcall	_JSN_GetLastTrig
 12739  0EF6  00F5               	movwf	??_CCP1_DefaultCallBack
 12740  0EF7  3005               	movlw	5
 12741  0EF8  0775               	addwf	??_CCP1_DefaultCallBack,w
 12742  0EF9  0086               	movwf	6
 12743  0EFA  0187               	clrf	7
 12744  0EFB  0801               	movf	1,w
 12745  0EFC  3184  245B  318E   	fcall	_ReadPin
 12746  0EFF  00F6               	movwf	??_CCP1_DefaultCallBack+1
 12747  0F00  01F7               	clrf	??_CCP1_DefaultCallBack+2
 12748                           
 12749                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12750                           ; Switch size 1, requested type "simple"
 12751                           ; Number of cases is 1, Range of values is 0 to 0
 12752                           ; switch strategies available:
 12753                           ; Name         Instructions Cycles
 12754                           ; simple_byte            4     3 (average)
 12755                           ; direct_byte            8     6 (fixed)
 12756                           ; jumptable            260     6 (fixed)
 12757                           ;	Chosen strategy is simple_byte
 12758  0F01  0877               	movf	??_CCP1_DefaultCallBack+2,w
 12759  0F02  3A00               	xorlw	0	; case 0
 12760  0F03  1903               	skipnz
 12761  0F04  2F06               	goto	i1l3937
 12762  0F05  2F0E               	goto	i1l416
 12763  0F06                     i1l3937:
 12764                           
 12765                           ; Switch size 1, requested type "simple"
 12766                           ; Number of cases is 2, Range of values is 0 to 1
 12767                           ; switch strategies available:
 12768                           ; Name         Instructions Cycles
 12769                           ; simple_byte            7     4 (average)
 12770                           ; direct_byte           10     6 (fixed)
 12771                           ; jumptable            260     6 (fixed)
 12772                           ;	Chosen strategy is simple_byte
 12773  0F06  0876               	movf	??_CCP1_DefaultCallBack+1,w
 12774  0F07  3A00               	xorlw	0	; case 0
 12775  0F08  1903               	skipnz
 12776  0F09  2EDC               	goto	i1l3387
 12777  0F0A  3A01               	xorlw	1	; case 1
 12778  0F0B  1903               	skipnz
 12779  0F0C  2ED6               	goto	i1l3385
 12780  0F0D  2F0E               	goto	i1l416
 12781  0F0E                     i1l416:
 12782  0F0E  0008               	return
 12783  0F0F                     __end_of_CCP1_DefaultCallBack:
 12784                           
 12785                           	psect	text66
 12786  045B                     __ptext66:	
 12787 ;; *************** function _ReadPin *****************
 12788 ;; Defined at:
 12789 ;;		line 129 in file "PIC16Xpress_DevBoard.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;  pin             1    wreg     enum E7110
 12792 ;; Auto vars:     Size  Location     Type
 12793 ;;  pin             1    2[COMMON] enum E7110
 12794 ;; Return value:  Size  Location     Type
 12795 ;;                  1    wreg      unsigned char 
 12796 ;; Registers used:
 12797 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12798 ;; Tracked objects:
 12799 ;;		On entry : 0/0
 12800 ;;		On exit  : 0/0
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12806 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12807 ;;Total ram usage:        3 bytes
 12808 ;; Hardware stack levels used: 1
 12809 ;; This function calls:
 12810 ;;		Nothing
 12811 ;; This function is called by:
 12812 ;;		_CCP1_DefaultCallBack
 12813 ;;		_CCP2_DefaultCallBack
 12814 ;; This function uses a non-reentrant model
 12815 ;;
 12816                           
 12817  045B                     _ReadPin:	
 12818                           ;psect for function _ReadPin
 12819                           
 12820                           
 12821                           ;incstack = 0
 12822                           ; Regs used in _ReadPin: [wreg-fsr0h+status,2+status,0]
 12823                           ;ReadPin@pin stored from wreg
 12824  045B  00F2               	movwf	ReadPin@pin
 12825  045C                     i1l2959:
 12826                           
 12827                           ;PIC16Xpress_DevBoard.c: 130:     switch(pin) {
 12828  045C  2CB1               	goto	i1l3039
 12829  045D                     i1l2961:
 12830                           
 12831                           ;PIC16Xpress_DevBoard.c: 132:             return PORTAbits.RA5;
 12832  045D  0020               	movlb	0	; select bank0
 12833  045E  0E0C               	swapf	12,w	;volatile
 12834  045F  0C89               	rrf	9,f
 12835  0460  3901               	andlw	1
 12836  0461  2CF1               	goto	i1l220
 12837  0462                     i1l2965:
 12838                           
 12839                           ;PIC16Xpress_DevBoard.c: 134:             return PORTAbits.RA4;
 12840  0462  0020               	movlb	0	; select bank0
 12841  0463  0E0C               	swapf	12,w	;volatile
 12842  0464  3901               	andlw	1
 12843  0465  2CF1               	goto	i1l220
 12844  0466                     i1l2969:
 12845                           
 12846                           ;PIC16Xpress_DevBoard.c: 136:             return 0xFF;
 12847  0466  30FF               	movlw	255
 12848  0467  2CF1               	goto	i1l220
 12849  0468                     i1l2973:
 12850                           
 12851                           ;PIC16Xpress_DevBoard.c: 138:             return PORTCbits.RC5;
 12852  0468  0020               	movlb	0	; select bank0
 12853  0469  0E0E               	swapf	14,w	;volatile
 12854  046A  0C89               	rrf	9,f
 12855  046B  3901               	andlw	1
 12856  046C  2CF1               	goto	i1l220
 12857  046D                     i1l2977:
 12858                           
 12859                           ;PIC16Xpress_DevBoard.c: 140:             return PORTCbits.RC4;
 12860  046D  0020               	movlb	0	; select bank0
 12861  046E  0E0E               	swapf	14,w	;volatile
 12862  046F  3901               	andlw	1
 12863  0470  2CF1               	goto	i1l220
 12864  0471                     i1l2981:
 12865                           
 12866                           ;PIC16Xpress_DevBoard.c: 142:             return PORTCbits.RC3;
 12867  0471  0020               	movlb	0	; select bank0
 12868  0472  0C0E               	rrf	14,w	;volatile
 12869  0473  00F0               	movwf	??_ReadPin
 12870  0474  0CF0               	rrf	??_ReadPin,f
 12871  0475  0C70               	rrf	??_ReadPin,w
 12872  0476  3901               	andlw	1
 12873  0477  2CF1               	goto	i1l220
 12874  0478                     i1l2985:
 12875                           
 12876                           ;PIC16Xpress_DevBoard.c: 144:             return PORTCbits.RC6;
 12877  0478  0020               	movlb	0	; select bank0
 12878  0479  0E0E               	swapf	14,w	;volatile
 12879  047A  0C89               	rrf	9,f
 12880  047B  0C89               	rrf	9,f
 12881  047C  3901               	andlw	1
 12882  047D  2CF1               	goto	i1l220
 12883  047E                     i1l2989:
 12884                           
 12885                           ;PIC16Xpress_DevBoard.c: 146:             return PORTCbits.RC7;
 12886  047E  0020               	movlb	0	; select bank0
 12887  047F  0D0E               	rlf	14,w	;volatile
 12888  0480  0D0E               	rlf	14,w	;volatile
 12889  0481  3901               	andlw	1
 12890  0482  2CF1               	goto	i1l220
 12891  0483                     i1l2993:
 12892                           
 12893                           ;PIC16Xpress_DevBoard.c: 148:             return PORTBbits.RB7;
 12894  0483  0020               	movlb	0	; select bank0
 12895  0484  0D0D               	rlf	13,w	;volatile
 12896  0485  0D0D               	rlf	13,w	;volatile
 12897  0486  3901               	andlw	1
 12898  0487  2CF1               	goto	i1l220
 12899  0488                     i1l2997:
 12900                           
 12901                           ;PIC16Xpress_DevBoard.c: 150:             return PORTAbits.RA0;
 12902  0488  0020               	movlb	0	; select bank0
 12903  0489  080C               	movf	12,w	;volatile
 12904  048A  3901               	andlw	1
 12905  048B  2CF1               	goto	i1l220
 12906  048C                     i1l3001:
 12907                           
 12908                           ;PIC16Xpress_DevBoard.c: 152:             return PORTAbits.RA1;
 12909  048C  0020               	movlb	0	; select bank0
 12910  048D  0C0C               	rrf	12,w	;volatile
 12911  048E  3901               	andlw	1
 12912  048F  2CF1               	goto	i1l220
 12913  0490                     i1l3005:
 12914                           
 12915                           ;PIC16Xpress_DevBoard.c: 154:             return PORTAbits.RA2;
 12916  0490  0020               	movlb	0	; select bank0
 12917  0491  0C0C               	rrf	12,w	;volatile
 12918  0492  0C89               	rrf	9,f
 12919  0493  3901               	andlw	1
 12920  0494  2CF1               	goto	i1l220
 12921  0495                     i1l3009:
 12922                           
 12923                           ;PIC16Xpress_DevBoard.c: 156:             return PORTCbits.RC0;
 12924  0495  0020               	movlb	0	; select bank0
 12925  0496  080E               	movf	14,w	;volatile
 12926  0497  3901               	andlw	1
 12927  0498  2CF1               	goto	i1l220
 12928  0499                     i1l3013:
 12929                           
 12930                           ;PIC16Xpress_DevBoard.c: 158:             return PORTCbits.RC1;
 12931  0499  0020               	movlb	0	; select bank0
 12932  049A  0C0E               	rrf	14,w	;volatile
 12933  049B  3901               	andlw	1
 12934  049C  2CF1               	goto	i1l220
 12935  049D                     i1l3017:
 12936                           
 12937                           ;PIC16Xpress_DevBoard.c: 160:             return PORTCbits.RC2;
 12938  049D  0020               	movlb	0	; select bank0
 12939  049E  0C0E               	rrf	14,w	;volatile
 12940  049F  0C89               	rrf	9,f
 12941  04A0  3901               	andlw	1
 12942  04A1  2CF1               	goto	i1l220
 12943  04A2                     i1l3021:
 12944                           
 12945                           ;PIC16Xpress_DevBoard.c: 162:             return PORTBbits.RB4;
 12946  04A2  0020               	movlb	0	; select bank0
 12947  04A3  0E0D               	swapf	13,w	;volatile
 12948  04A4  3901               	andlw	1
 12949  04A5  2CF1               	goto	i1l220
 12950  04A6                     i1l3025:
 12951                           
 12952                           ;PIC16Xpress_DevBoard.c: 164:             return PORTBbits.RB5;
 12953  04A6  0020               	movlb	0	; select bank0
 12954  04A7  0E0D               	swapf	13,w	;volatile
 12955  04A8  0C89               	rrf	9,f
 12956  04A9  3901               	andlw	1
 12957  04AA  2CF1               	goto	i1l220
 12958  04AB                     i1l3029:
 12959                           
 12960                           ;PIC16Xpress_DevBoard.c: 166:             return PORTBbits.RB6;
 12961  04AB  0020               	movlb	0	; select bank0
 12962  04AC  0E0D               	swapf	13,w	;volatile
 12963  04AD  0C89               	rrf	9,f
 12964  04AE  0C89               	rrf	9,f
 12965  04AF  3901               	andlw	1
 12966  04B0  2CF1               	goto	i1l220
 12967  04B1                     i1l3039:
 12968  04B1  0872               	movf	ReadPin@pin,w
 12969  04B2  00F0               	movwf	??_ReadPin
 12970  04B3  01F1               	clrf	??_ReadPin+1
 12971                           
 12972                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12973                           ; Switch size 1, requested type "simple"
 12974                           ; Number of cases is 1, Range of values is 0 to 0
 12975                           ; switch strategies available:
 12976                           ; Name         Instructions Cycles
 12977                           ; simple_byte            4     3 (average)
 12978                           ; direct_byte            8     6 (fixed)
 12979                           ; jumptable            260     6 (fixed)
 12980                           ;	Chosen strategy is simple_byte
 12981  04B4  0871               	movf	??_ReadPin+1,w
 12982  04B5  3A00               	xorlw	0	; case 0
 12983  04B6  1903               	skipnz
 12984  04B7  2CB9               	goto	i1l3939
 12985  04B8  2C66               	goto	i1l2969
 12986  04B9                     i1l3939:
 12987                           
 12988                           ; Switch size 1, requested type "simple"
 12989                           ; Number of cases is 18, Range of values is 0 to 17
 12990                           ; switch strategies available:
 12991                           ; Name         Instructions Cycles
 12992                           ; direct_byte           42     6 (fixed)
 12993                           ; simple_byte           55    28 (average)
 12994                           ; jumptable            260     6 (fixed)
 12995                           ;	Chosen strategy is simple_byte
 12996  04B9  0870               	movf	??_ReadPin,w
 12997  04BA  3A00               	xorlw	0	; case 0
 12998  04BB  1903               	skipnz
 12999  04BC  2C5D               	goto	i1l2961
 13000  04BD  3A01               	xorlw	1	; case 1
 13001  04BE  1903               	skipnz
 13002  04BF  2C62               	goto	i1l2965
 13003  04C0  3A03               	xorlw	3	; case 2
 13004  04C1  1903               	skipnz
 13005  04C2  2C66               	goto	i1l2969
 13006  04C3  3A01               	xorlw	1	; case 3
 13007  04C4  1903               	skipnz
 13008  04C5  2C68               	goto	i1l2973
 13009  04C6  3A07               	xorlw	7	; case 4
 13010  04C7  1903               	skipnz
 13011  04C8  2C6D               	goto	i1l2977
 13012  04C9  3A01               	xorlw	1	; case 5
 13013  04CA  1903               	skipnz
 13014  04CB  2C71               	goto	i1l2981
 13015  04CC  3A03               	xorlw	3	; case 6
 13016  04CD  1903               	skipnz
 13017  04CE  2C78               	goto	i1l2985
 13018  04CF  3A01               	xorlw	1	; case 7
 13019  04D0  1903               	skipnz
 13020  04D1  2C7E               	goto	i1l2989
 13021  04D2  3A0F               	xorlw	15	; case 8
 13022  04D3  1903               	skipnz
 13023  04D4  2C83               	goto	i1l2993
 13024  04D5  3A01               	xorlw	1	; case 9
 13025  04D6  1903               	skipnz
 13026  04D7  2C88               	goto	i1l2997
 13027  04D8  3A03               	xorlw	3	; case 10
 13028  04D9  1903               	skipnz
 13029  04DA  2C8C               	goto	i1l3001
 13030  04DB  3A01               	xorlw	1	; case 11
 13031  04DC  1903               	skipnz
 13032  04DD  2C90               	goto	i1l3005
 13033  04DE  3A07               	xorlw	7	; case 12
 13034  04DF  1903               	skipnz
 13035  04E0  2C95               	goto	i1l3009
 13036  04E1  3A01               	xorlw	1	; case 13
 13037  04E2  1903               	skipnz
 13038  04E3  2C99               	goto	i1l3013
 13039  04E4  3A03               	xorlw	3	; case 14
 13040  04E5  1903               	skipnz
 13041  04E6  2C9D               	goto	i1l3017
 13042  04E7  3A01               	xorlw	1	; case 15
 13043  04E8  1903               	skipnz
 13044  04E9  2CA2               	goto	i1l3021
 13045  04EA  3A1F               	xorlw	31	; case 16
 13046  04EB  1903               	skipnz
 13047  04EC  2CA6               	goto	i1l3025
 13048  04ED  3A01               	xorlw	1	; case 17
 13049  04EE  1903               	skipnz
 13050  04EF  2CAB               	goto	i1l3029
 13051  04F0  2C66               	goto	i1l2969
 13052  04F1                     i1l220:
 13053  04F1  0008               	return
 13054  04F2                     __end_of_ReadPin:
 13055                           
 13056                           	psect	text67
 13057  07FD                     __ptext67:	
 13058 ;; *************** function _JSN_GetLastTrig *****************
 13059 ;; Defined at:
 13060 ;;		line 124 in file "JSN_Sensor.c"
 13061 ;; Parameters:    Size  Location     Type
 13062 ;;		None
 13063 ;; Auto vars:     Size  Location     Type
 13064 ;;		None
 13065 ;; Return value:  Size  Location     Type
 13066 ;;                  1    wreg      PTR struct .
 13067 ;; Registers used:
 13068 ;;		wreg
 13069 ;; Tracked objects:
 13070 ;;		On entry : 0/0
 13071 ;;		On exit  : 0/0
 13072 ;;		Unchanged: 0/0
 13073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13078 ;;Total ram usage:        0 bytes
 13079 ;; Hardware stack levels used: 1
 13080 ;; This function calls:
 13081 ;;		Nothing
 13082 ;; This function is called by:
 13083 ;;		_CCP1_DefaultCallBack
 13084 ;;		_CCP2_DefaultCallBack
 13085 ;; This function uses a non-reentrant model
 13086 ;;
 13087                           
 13088  07FD                     _JSN_GetLastTrig:	
 13089                           ;psect for function _JSN_GetLastTrig
 13090                           
 13091  07FD                     i1l2931:	
 13092                           ;incstack = 0
 13093                           ; Regs used in _JSN_GetLastTrig: [wreg]
 13094                           
 13095                           
 13096                           ;JSN_Sensor.c: 125:     return lastTrig;
 13097  07FD  0021               	movlb	1	; select bank1
 13098  07FE  0858               	movf	_lastTrig^(0+128),w
 13099  07FF                     i1l69:
 13100  07FF  0008               	return
 13101  0800                     __end_of_JSN_GetLastTrig:
 13102  007E                     btemp	set	126	;btemp
 13103  007E                     int$flags	set	126
 13104  007E                     wtemp0	set	126
 13105                           
 13106                           	psect	idloc
 13107                           
 13108                           ;Config register IDLOC0 @ 0x8000
 13109                           ;	unspecified, using default values
 13110  8000                     	org	32768
 13111  8000  3FFF               	dw	16383
 13112                           
 13113                           ;Config register IDLOC1 @ 0x8001
 13114                           ;	unspecified, using default values
 13115  8001                     	org	32769
 13116  8001  3FFF               	dw	16383
 13117                           
 13118                           ;Config register IDLOC2 @ 0x8002
 13119                           ;	unspecified, using default values
 13120  8002                     	org	32770
 13121  8002  3FFF               	dw	16383
 13122                           
 13123                           ;Config register IDLOC3 @ 0x8003
 13124                           ;	unspecified, using default values
 13125  8003                     	org	32771
 13126  8003  3FFF               	dw	16383
 13127                           
 13128                           	psect	config
 13129                           
 13130                           ;Config register CONFIG1 @ 0x8007
 13131                           ;	FEXTOSC External Oscillator mode Selection bits
 13132                           ;	FEXTOSC = OFF, Oscillator not enabled
 13133                           ;	Power-up default value for COSC bits
 13134                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 13135                           ;	Clock Out Enable bit
 13136                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 13137                           ;	Clock Switch Enable bit
 13138                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13139                           ;	Fail-Safe Clock Monitor Enable
 13140                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13141  8007                     	org	32775
 13142  8007  3F8C               	dw	16268
 13143                           
 13144                           ;Config register CONFIG2 @ 0x8008
 13145                           ;	Master Clear Enable bit
 13146                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 13147                           ;	Power-up Timer Enable bit
 13148                           ;	PWRTE = OFF, PWRT disabled
 13149                           ;	Watchdog Timer Enable bits
 13150                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 13151                           ;	Low-power BOR enable bit
 13152                           ;	LPBOREN = OFF, ULPBOR disabled
 13153                           ;	Brown-out Reset Enable bits
 13154                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 13155                           ;	Brown-out Reset Voltage selection bit
 13156                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 13157                           ;	PPSLOCK bit One-Way Set Enable bit
 13158                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 13159                           ;	Stack Overflow/Underflow Reset Enable bit
 13160                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13161                           ;	Debugger enable bit
 13162                           ;	DEBUG = OFF, Background debugger disabled
 13163  8008                     	org	32776
 13164  8008  3FF3               	dw	16371
 13165                           
 13166                           ;Config register CONFIG3 @ 0x8009
 13167                           ;	User NVM self-write protection bits
 13168                           ;	WRT = OFF, Write protection off
 13169                           ;	Low Voltage Programming Enable bit
 13170                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 13171  8009                     	org	32777
 13172  8009  3FFF               	dw	16383
 13173                           
 13174                           ;Config register CONFIG4 @ 0x800A
 13175                           ;	User NVM Program Memory Code Protection bit
 13176                           ;	CP = OFF, User NVM code protection disabled
 13177                           ;	Data NVM Memory Code Protection bit
 13178                           ;	CPD = OFF, Data NVM code protection disabled
 13179  800A                     	org	32778
 13180  800A  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         134
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     80      80
    BANK1            80     14      77
    BANK2            80      0      68
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1930$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    S1930$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP3_DefaultCallBack(), 

    CCP2_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP2_DefaultCallBack(), 

    CCP2_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP2_DefaultCallBack(), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP1_DefaultCallBack(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    sp__JSN_GetLastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK1[6]), 

    JSN_Sensor_GetDistance@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK1[6]), 

    JSN_Sensor_Trig@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK1[6]), 

    lastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK1[6]), 

    JSN_Sensor_Init@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK1[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _INTERRUPT_InterruptManager->_CCP2_CaptureISR
    _TMR1_ISR->_TMR1_WriteTimer
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _CCP3_CaptureISR->_CCP3_DefaultCallBack
    _CCP2_CaptureISR->_CCP2_DefaultCallBack
    _CCP2_DefaultCallBack->_ReadPin
    _CCP1_CaptureISR->_CCP1_DefaultCallBack
    _CCP1_DefaultCallBack->_ReadPin

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _CCP3_Initialize->_CCP3_SetCallBack
    _CCP2_Initialize->_CCP2_SetCallBack
    _JSN_Sensor_Trig->_FR_Timer_GetMicros
    _FR_Timer_GetMicros->_TMR0_ReadTimer
    _JSN_Sensor_Init->_SetPin
    _JSN_Sensor_Init->_WritePin
    _JSN_Sensor_GetDistance->___lldiv
    ___lldiv->___lmul
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _CCP1_Initialize->_CCP1_SetCallBack
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   11822
                                              2 BANK1     12    12      0
                 _FR_Timer_GetMillis
                      _FR_Timer_Init
                   _JSN_Library_Init
             _JSN_Sensor_GetDistance
                    _JSN_Sensor_Init
                    _JSN_Sensor_Trig
                         _PIC16_Init
                             _SetPin
                           _WritePin
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5380
                                             76 BANK0      4     0      4
                                              0 BANK1      2     2      0
             _JSN_Sensor_GetDistance (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5250
                                             68 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    4923
                                             52 BANK0     16    14      2
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                24    16      8    3578
                                             28 BANK0     24    16      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2554
                                             19 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                             11 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     834
                                              3 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      66
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             18     2     16     311
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             26    10     16     314
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _PIC16_Init                                           0     0      0     980
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     980
                    _CCP1_Initialize
                    _CCP2_Initialize
                    _CCP3_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Initialize                                    1     1      0     490
                                              2 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP3_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP2_Initialize                                      0     0      0      98
                   _CCP2_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP2_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Trig                                      5     5      0    1007
                                              6 BANK0      5     5      0
                 _FR_Timer_GetMicros
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _FR_Timer_GetMicros                                   4     0      4      23
                                              2 BANK0      4     0      4
                     _TMR0_ReadTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_ReadTimer                                       2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Init                                      5     3      2    1925
                                              4 BANK0      5     3      2
                             _SetPin
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _WritePin                                             4     3      1     852
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetPin                                               4     3      1     624
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_GetDistance                               5     3      2     690
                                             26 BANK0      5     3      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _JSN_Library_Init                                     0     0      0     196
                    _CCP1_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR1_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP1_Initialize                                      0     0      0      98
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP1_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _FR_Timer_Init                                        0     0      0      98
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _FR_Timer_GetMillis                                   4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0     672
                   Absolute function *
                    _CCP1_CaptureISR
                    _CCP2_CaptureISR
                    _CCP3_CaptureISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR0_CallBack                                       0     0      0       0
                 _FR_Timer_IncMicros
                 _FR_Timer_IncMillis
 ---------------------------------------------------------------------------------
 (13) _FR_Timer_IncMillis                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _FR_Timer_IncMicros                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CCP3_CaptureISR                                     3     3      0     100
                                              2 COMMON     3     3      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (12) _CCP3_DefaultCallBack                                2     0      2      53
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _CCP2_CaptureISR                                     3     3      0     166
                                              8 COMMON     3     3      0
                   Absolute function *
               _CCP2_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (12) _CCP2_DefaultCallBack                                5     3      2     119
                                              3 COMMON     5     3      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (11) _CCP1_CaptureISR                                     3     3      0     166
                                              8 COMMON     3     3      0
                   Absolute function *
               _CCP1_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (12) _CCP1_DefaultCallBack                                5     3      2     119
                                              3 COMMON     5     3      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (13) _ReadPin                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (13) _JSN_GetLastTrig                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FR_Timer_GetMillis
   _FR_Timer_Init
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _JSN_Library_Init
     _CCP1_Initialize
       _CCP1_SetCallBack
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _JSN_Sensor_GetDistance
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _JSN_Sensor_Init
     _SetPin
     _WritePin
   _JSN_Sensor_Trig
     _FR_Timer_GetMicros
       _TMR0_ReadTimer
     _WritePin
   _PIC16_Init
     _SYSTEM_Initialize
       _CCP1_Initialize
       _CCP2_Initialize
         _CCP2_SetCallBack
       _CCP3_Initialize
         _CCP3_SetCallBack
       _EUSART_Initialize
         _EUSART_SetErrorHandler
         _EUSART_SetFramingErrorHandler
         _EUSART_SetOverrunErrorHandler
         _EUSART_SetRxInterruptHandler
         _EUSART_SetTxInterruptHandler
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _TMR0_Initialize
       _TMR1_Initialize
       _WDT_Initialize
   _SetPin
   _WritePin
   _printf
     _JSN_Sensor_GetDistance (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc
             _strlen

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _CCP1_CaptureISR *
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP2_CaptureISR *
     Absolute function(Fake) *
     _CCP2_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP3_CaptureISR *
     Absolute function(Fake) *
     _CCP3_DefaultCallBack *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     _TMR0_CallBack
       _FR_Timer_IncMicros
       _FR_Timer_IncMillis
   _TMR1_ISR *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      E      4D       7       96.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      44       9       85.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      EF      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      EF      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Jan 29 22:37:45 2022

                ?_EUSART_SetRxInterruptHandler 0020                         ??_CCP3_DefaultCallBack 0072  
                                           l31 0BAB                                             l41 05F7  
                                           l37 0579                                             l46 0596  
                                           l63 0773                                             l66 0FFF  
                                           l92 0B93                                             l95 0C6C  
                                           l98 0DA2                        __end_of_CCP1_Initialize 0D08  
                                          l312 0DC1                                            l321 0B97  
                                          l315 0C3A                                            l244 02F9  
                                          l324 0C4A                                            l318 0C3E  
                                          l191 0F82                                            l353 0C81  
                                          l425 0BCB                                            l362 0BB2  
                                          l419 0D07                                            l380 0BC2  
                                          l524 0D50                                            l196 03B4  
                                          l461 0D1F                                            l701 0C01  
                                          l710 0C0A                                            l704 0BEF  
                                          l467 0BDD                                            l491 0D37  
                                          l707 0C13                                            l635 07B9  
                                          l812 0ED4                                            l660 0E1E  
                                          l557 0BD4                                            l663 0E39  
                                          l497 0BE6                                            l659 0E15  
                                          l669 0BB9                                            l698 0BF8  
                                          l981 0E9E                                            u800 07C5  
                                          u801 07C4                                            u810 07D4  
                                          u811 07D3                                            u900 0605  
                                          u820 07F2                                            u901 0604  
                                          u821 07F1                                            u910 0618  
                                          u830 0E0C                                            u911 0617  
                                          u831 0E0B                                            u920 063A  
                                          u760 0E15                                            u840 0D80  
                                          u921 0639                                            u761 0E14  
                                          u825 07EE                                            u841 0D7F  
                                          u850 04FA                                            u930 0658  
                                          u770 0E19                                            u931 0657  
                                          u771 0E18                                            u860 0509  
                                          u780 0E33                                            u940 06CB  
                                          u861 0508                                            u925 0636  
                                          u781 0E32                                            u941 06CA  
                                          u870 051C                                            u790 07C0  
                                          u950 06D9                                            u871 051B  
                                          u791 07BF                                            u951 06D8  
                                          u880 0546                                            u960 0702  
                                          u881 0545                                            u961 0701  
                                          u890 0565                                            u970 0707  
                                          u891 0564                                            u971 0706  
                                          u980 0094                                            u885 0542  
                                          u965 06FE                                            u981 0093  
                                          u990 00A7                                            u991 00A6  
                                          u995 00A3                                _timer1ReloadVal 00C0  
                       ??_EUSART_RxDataHandler 0070                                            _pad 06C4  
               ?_EUSART_SetFramingErrorHandler 0020                                            wreg 0009  
                                         l1003 06C3                                           l1200 0565  
                                         l1210 0658                                           l1207 0575  
                                         l1217 0668                                           l3101 0D0B  
                                         l1430 0C96                   JSN_Sensor_GetDistance@Sensor 003E  
                                         l3111 0D1B                                           l3103 0D0C  
                                         l3113 0D1D                                           l3105 0D0D  
                                         l3121 0D25                                           l1513 0D86  
                                         l3201 0210                                           l3107 0D0E  
                                         l3123 0D26                                           l3115 0D20  
                                         l3131 0774                                           l3051 0C45  
                                         l1507 0E0C                                           l3203 0218  
                                         l1460 071C                                           l3221 0304  
                                         l3301 0249                                           l3109 0D16  
                                         l3125 0D2E                                           l3117 0D23  
                                         l3141 078D                                           l3133 0776  
                                         l3061 0EA8                                           l3053 0C47  
                                         l3045 0C3F                                           l3215 02FC  
                                         l3127 0D33                                           l3119 0D24  
                                         l3151 07A3                                           l3143 078F  
                                         l3135 077E                                           l3071 0EBC  
                                         l3063 0EAA                                           l3055 0E9F  
                                         l3047 0C41                                           l1455 06E0  
                                         l1463 0098                                           l3207 021B  
                                         l1480 023E                                           l3241 0327  
                                         l3233 0319                                           l3225 030B  
                                         l3217 02FD                                           l3321 026C  
                                         l3313 025E                                           l3305 0250  
                                         l3129 0D35                                           l3161 07B8  
                                         l3153 07AB                                           l3145 0791  
                                         l3137 0788                                           l3081 0EC7  
                                         l3073 0EBE                                           l3065 0EAD  
                                         l3057 0EA3                                           l3049 0C43  
                                         l3209 0234                                           l1458 0702  
                                         l3155 07AD                                           l3147 0793  
                                         l3139 078B                                           l3091 0C33  
                                         l3083 0ECA                                           l3075 0EC0  
                                         l3067 0EAF                                           l3059 0EA6  
                                         l1459 0710                                           l1475 017B  
                                         l1467 00B5                                           l3261 034A  
                                         l3253 033C                                           l3245 032E  
                                         l3237 0320                                           l3229 0312  
                                         l3341 028F                                           l3333 0281  
                                         l3325 0273                                           l3317 0265  
                                         l3309 0257                                           l3501 05D4  
                                         l3157 07AE                                           l3149 079B  
                                         l3093 0C37                                           l3085 0ECC  
                                         l3077 0EC3                                           l3069 0EB9  
                                         l3181 01A0                                           l3173 017E  
                                         l3503 05DC                                           l3159 07AF  
                                         l3095 0C39                                           l3087 0ECE  
                                         l3079 0EC5                                           l3183 01B2  
                                         l3191 01E6                                           l3175 018F  
                                         l1487 0E6A                                           l3441 0E87  
                                         l3433 0E6B                                           l3281 036D  
                                         l3273 035F                                           l3265 0351  
                                         l3257 0343                                           l3249 0335  
                                         l3361 02B2                                           l3353 02A4  
                                         l3345 0296                                           l3337 0288  
                                         l3329 027A                                           l3505 05E2  
                                         l3089 0ED1                                           l3097 0B94  
                                         l2801 051C                                           l3193 01F7  
                                         l3185 01BA                                           l3177 0197  
                                         l3451 067D                                           l3443 0E96  
                                         l3435 0E74                                           l3507 05EA  
                                         l3531 0763                                           l3099 0D08  
                                         l2803 0524                                           l2811 05F8  
                                         l1499 07FC                                           l3195 01FF  
                                         l3187 01CC                                           l3179 019C  
                                         l3461 06AD                                           l3453 0688  
                                         l3437 0E78                                           l3277 0366  
                                         l3269 0358                                           l3357 02AB  
                                         l3349 029D                                           l3509 05F2  
                                         l3533 076D                                           l3525 071F  
                                         l2805 0546                                           l2821 0618  
                                         l2813 0605                                           l2741 0E19  
                                         l3197 020A                                           l3701 044B  
                                         l2911 0D45                                           l2903 0D38  
                                         l3463 06AE                                           l3455 068C  
                                         l3447 0669                                           l3439 0E80  
                                         l3287 0374                                           l3367 02B9  
                                         l3295 0241                                           l3375 0D87  
                                         l3527 0732                                           l3551 0F5A  
                                         l3543 0F49                                           l2807 0556  
                                         l2823 063A                                           l2815 0608  
                                         l2751 0E34                                           l2743 0E1F  
                                         l2831 06D4                                           l3471 0E3C  
                                         l3703 044F                                           l2921 0CF5  
                                         l2913 0D4D                                           l2905 0D3C  
                                         l3465 06B5                                           l3457 0693  
                                         l3449 067A                                           l3537 0FC2  
                                         l3297 0242                                           l3529 073D  
                                         l3561 0F6E                                           l3553 0F5D  
                                         l3545 0F53                                           l2809 0557  
                                         l2825 064A                                           l2817 0610  
                                         l2745 0E29                                           l2753 0E37  
                                         l2737 0E0F                                           l2761 07C5  
                                         l2841 06F4                                           l2833 06D9  
                                         l3473 0E40                                           l2923 0CF6  
                                         l2915 0CF0                                           l2907 0D3D  
                                         l3483 0BA5                                           l3459 06A5  
                                         l3467 06BB                                           l3539 0FF7  
                                         l2851 0BD5                                           l3379 0DA3  
                                         l3571 0F80                                           l3563 0F70  
                                         l3555 0F5F                                           l3547 0F56  
                                         l2819 0614                                           l2747 0E2D  
                                         l2739 0E0F                                           l2755 0BB5  
                                         l2763 07CA                                           l2771 0DE6  
                                         l2843 0707                                           l2835 06DE  
                                         l2827 06C6                                           l3475 0E44  
                                         l2941 0C74                                           l2925 0CFE  
                                         l2917 0CF3                                           l2909 0D44  
                                         l3493 0580                                           l2853 0BDE  
                                         l2861 0BF0                                           l3573 0F81  
                                         l3565 0F73                                           l3557 0F69  
                                         l3549 0F58                                           l2749 0E33  
                                         l2765 07D4                                           l2757 07BA  
                                         l2773 0DE9                                           l2781 0D73  
                                         l2837 06E3                                           l2829 06CB  
                                         l3477 0E58                                           ?_pad 0033  
                                         l2847 0BBA                                           l2943 0C76  
                                         l2935 0C6D                                           l3575 0B90  
                                         l2927 0D03                                           l2919 0CF4  
                                         l2855 0BCC                                           l3495 0596  
                                         l3487 0578                                           l2863 0BF9  
                                         l3567 0F75                                           l3559 0F6C  
                                         l2791 04FD                                           l2767 07F2  
                                         l2759 07C0                                           l2775 0DF7  
                                         l2783 0D77                                           l2839 06EF  
                                         l2871 00A7                                           l3479 0E62  
                                         l3583 0C82                                           l2945 0C7E  
                                         l2937 0C72                                           l2849 0BC3  
                                         l2929 0D05                                           l3489 0579  
                                         l2865 0BE7                                           l2857 0C02  
                                         l3569 0F7D                                           l2793 0509  
                                         l2777 0DFC                                           l2785 0D80  
                                         l2881 00D9                                           l2873 00AD  
                                         l3585 0C87                                           l3681 03D7  
                                         l3673 03B5                                           l3579 0C5C  
                                         l2939 0C73                                           l3931 02C1  
                                         l3499 05A2                                           l2947 0BAC  
                                         l2859 0C0B                                           l2795 050C  
                                         l2779 0D6E                                           l2891 013C  
                                         l2883 0100                                           l2875 00BD  
                                         l2867 008F                                           l3691 0415  
                                         l3683 03DD                                           l3675 03BE  
                                         l3933 037C                                           l2797 0514  
                                         l2789 04F2                                           l2893 0148  
                                         l2885 0104                                           l2877 00D1  
                                         l2869 0094                                           l3693 0423  
                                         l3685 03E3                                           l3677 03CE  
                                         l3927 0588                                           l2799 0518  
                                         l2895 0155                                           l2887 0108  
                                         l2879 00D4                                           l3695 042A  
                                         l3687 03E7                                           l3679 03CE  
                                         l3929 05AB                                           l2897 0163  
                                         l2889 0135                                           l3697 0434  
                                         l3689 03FA                                           l2899 0168  
                                         l3699 043A                                           STR_1 1000  
                                         u1000 013C                                           u1001 013B  
                                         u1010 0148                                           u1011 0147  
                                         u1020 0155                                           u1021 0154  
                                         u1110 0E78                                           u1030 0163  
                                         u1111 0E77                                           u1031 0162  
                                         u1040 0168                                           u1041 0167  
                                         u1025 0151                                           u1210 06BB  
                                         u1050 0C3E                                           u1211 06BA  
                                         u1051 0C3D                                           u1035 015F  
                                         u1140 0E96                                           u1220 0E62  
                                         u1205 06AF                                           u1141 0E95  
                                         u1125 0E81                                           u1221 0E61  
                                         u1150 067A                                           u1230 0763  
                                         u1070 018F                                           u1151 0679  
                                         u1135 0E88                                           u1231 0762  
                                         u1071 018E                                           u1080 01B2  
                                         u1320 0415                                           u1081 01B1  
                                         u1321 0414                                           u1170 068C  
                                         u1090 01F7                                           u1330 0423  
                                         u1171 068B                                           u1091 01F6  
                                         u1331 0422                                           u1340 0434  
                                         u1165 067E                                           u1341 0433  
                                         _LATA 010C                                           u1190 06A5  
                                         _LATB 010D                                           u1191 06A4  
                                         _LATC 010E                                           u1185 068D  
                                         u1195 06A1                                           _PIE0 0090  
                                         _PIE1 0091                                           _PIE2 0092  
                                         _PIE3 0093                                           _PIE4 0094  
                                         _PMD0 0911                                           _PMD1 0912  
                                         _PMD2 0913                                           _PMD3 0914  
                                         _PMD4 0915                                           _PMD5 0916  
                                         _PIR0 0010                                           _PIR1 0011  
                                         _PIR2 0012                                           _PIR3 0013  
                                         _PIR4 0014                                           i1l69 07FF  
                                         _PLLR 48E0                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                         _dbuf 0144                        __end_of_CCP2_Initialize 0D20  
                                         _main 03B5                                           _prec 00B0  
                                         _nout 00AC                                           pad@i 0037  
                                         pad@p 0034                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 0039  
                                         btemp 007E                                           _utoa 008D  
                                   ReadPin@pin 0072                                           start 0074  
                     __end_of_CCP1_SetCallBack 0BCC                     ??_TMR1_SetInterruptHandler 0022  
                             ?_CCP1_CaptureISR 0070                                __end_of_ReadPin 04F2  
                         _micros@FR_Timer$F158 00A0                                          ??_pad 0036  
                      __end_of_TMR0_Initialize 0C82                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 0C3F                              ?_JSN_Library_Init 0070  
                      __end_of_CCP3_Initialize 0D38                                          ?_main 0070  
                              __end_of___lldiv 06C4                                          ?_utoa 003C  
                              __end_of___lodiv 0576                                          _T1CON 001B  
                              __end_of___lomod 0669                                          i1l101 0C27  
                                        i1l104 0C1D                                          i1l220 04F1  
                                        i1l422 0CAC                                          i1l416 0F0E  
                                        i1l374 0CEF                                          i1l550 0C32  
                                        i1l464 0CC2                                          i1l377 0BA4  
                                        i1l458 0F48                                          i1l538 0C5B  
                                        i1l494 0CD8                                          i1l750 0042  
                                        i1l751 0072                                          i1l743 0014  
                                        i1l488 0002                                          i1l672 0DE2  
                                        i1l752 0050                                          i1l682 0FBF  
                                        i1l754 0061                                          i1l746 0026  
                                        i1l675 0DE3                                          i1l692 0B8F  
                                        i1l748 0034                                          i1l757 0072  
                                        i1l686 0D6B                                          i1l695 0B8B  
                                        i1l689 0003                                          _OSCEN 091D  
                                 vfpfcnvrt@fmt 0054                             ??_JSN_Library_Init 0022  
                                        _TMR0H 0016                                   vfpfcnvrt@llu 005B  
                                        _TMR1H 001A                                          _TMR0L 0015  
                                        _TMR1L 0019                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _RXPPS 0E24                            ___lmul@multiplicand 0024  
                    ?_TMR0_SetInterruptHandler 0020                                          _Sens1 00D9  
                                        _Sens2 013E                                          _Sens3 0138  
                             __end_of_TMR0_ISR 0CF0                               __end_of_TMR1_ISR 0C33  
                             ?_CCP2_CaptureISR 0070                                          _flags 00B2  
                               _WDT_Initialize 0B94                                          _fputc 07BA  
                                        _fputs 0DE4                                          pad@fp 003B  
                                        _width 00AE                                          _putch 0BB3  
                      __end_of_TMR1_Initialize 0D51                                          pclath 000A  
                                        utoa@d 003C                                          utoa@i 0052  
                                        utoa@n 004A                                          utoa@p 0045  
                                        utoa@w 0048                                          status 0003  
                                        wtemp0 007E                          __end_of_FR_Timer_Init 0B94  
                             ___lodiv@dividend 0028                                _TMR1_WriteTimer 0C4B  
                     __end_of_CCP2_SetCallBack 0BDE                                __initialization 0076  
                             ?_CCP3_CaptureISR 0070                                   __end_of_main 045B  
                                 __end_of_utoa 017C                                 ??_EUSART_Write 0020  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0022  
                                       ??_main 00E1                               ?_CCP1_Initialize 0070  
                                       ??_utoa 0044                               ___lodiv@quotient 0031  
                       __end_of_WDT_Initialize 0B98                                _JSN_GetLastTrig 07FD  
    __end_of_EUSART_DefaultFramingErrorHandler 0004            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 0003  
                   _EUSART_OverrunErrorHandler 00B6                                         ?_fputc 0023  
                                       ?_fputs 002B                                         _CCPR1H 0292  
                                       _CCPR2H 0296                                         _CCPR3H 0312  
                                       _CCPR1L 0291                                         _CCPR2L 0295  
                                       _CCPR3L 0311                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _T0CON0 0017  
                                       _T0CON1 0018                                         _T1GCON 001C  
                                       _RC1REG 0199                               __end_of_WritePin 02FA  
                                       _RC1STA 019D                                         u110_20 0C50  
                                       u110_21 0C4F                        TMR1_WriteTimer@timerVal 0070  
                                       _RC4PPS 0EA4                                         i1l3001 048C  
                                       i1l3021 04A2                                         i1l3013 0499  
                                       i1l3005 0490                                         i1l3025 04A6  
                                       i1l3017 049D                                         i1l3009 0495  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         i1l3029 04AB  
                                       i1l3039 04B1                                         i1l3401 0F10  
                                       i1l3403 0F16                                         i1l3171 0D66  
                                       i1l3163 0D51                                         i1l3405 0F1B  
                                       i1l3165 0D5B                                         i1l3421 0C53  
                                       i1l3167 0D5F                                         i1l3431 0B88  
                                       i1l3423 0C55                                         i1l3415 0C4B  
                                       u106_20 0D65                                         u130_20 0F9F  
                                       i1l3601 0CA2                                         i1l3409 0F2D  
                                       i1l3169 0D65                                         u106_21 0D64  
                                       u130_21 0F9E                                         i1l3417 0C50  
                                       i1l3425 0C57                                         i1l3603 0CAD  
                                       i1l3611 0CC5                                         i1l3427 0C59  
                                       i1l3419 0C51                                         i1l3605 0CAF  
                                       i1l3613 0CCE                                         i1l3429 0B8C  
                                       i1l3381 0B9E                                         i1l3383 0ED5  
                                       i1l3607 0CB8                                         i1l3615 0C28  
                                       u131_20 0FB5                                         i1l3385 0ED6  
                                       i1l3393 0EF3                                         i1l3609 0CC3  
                                       u131_21 0FB4                                         i1l3641 0DC2  
                                       i1l3617 0C2A                                         i1l3721 0018  
                                       i1l2931 07FD                                         i1l3387 0EDC  
                                       i1l3651 0DDD                                         i1l3643 0DC9  
                                       i1l3731 0039                                         i1l3723 001D  
                                       i1l3715 0006                                         i1l3389 0EE1  
                                       i1l3661 0F9A                                         i1l3653 0F83  
                                       i1l3645 0DD1                                         i1l3741 005A  
                                       i1l3733 003E                                         i1l3725 0022  
                                       i1l3717 000B                                         i1l3399 0F0F  
                                       i1l3671 0FBC                                         i1l3663 0F9F  
                                       i1l3655 0F89                                         i1l3647 0DD6  
                                       i1l2951 0C1E                                         i1l3591 0CDB  
                                       i1l3743 0066                                         i1l3735 0047  
                                       i1l3727 002B                                         i1l3719 0010  
                                       u124_20 0CE9                                         u140_20 0022  
                                       i1l2961 045D                                         i1l3665 0FA5  
                                       i1l3657 0F8E                                         i1l3649 0DDC  
                                       i1l3593 0CE9                                         u124_21 0CE8  
                                       i1l3745 006B                                         i1l3737 004C  
                                       i1l3729 0030                                         u140_21 0021  
                                       i1l3667 0FAB                                         i1l3659 0F94  
                                       i1l2955 0C14                                         i1l3595 0CEC  
                                       i1l3739 0055                                         i1l2981 0471  
                                       i1l2973 0468                                         i1l2965 0462  
                                       i1l3597 0C97                                         i1l3669 0FB5  
                                       i1l3589 0CD9                                         i1l2959 045C  
                                       i1l3599 0C99                                         i1l3935 0F40  
                                       u141_20 002B                                         i1l2993 0483  
                                       i1l2985 0478                                         i1l2977 046D  
                                       i1l2969 0466                                         i1l3937 0F06  
                                       u141_21 002A                                         i1l3939 04B9  
                                       i1l2997 0488                                         i1l2989 047E  
                                       u150_20 006B                                         u142_20 0030  
                                       u150_21 006A                                         u142_21 002F  
                                       u127_20 0DC9                                         u143_20 0039  
                                       u127_21 0DC8                                         u143_21 0038  
                                       u128_20 0DDC                                         u144_20 003E  
                                       u136_20 000B                                         u128_21 0DDB  
                                       u144_21 003D                                         u136_21 000A  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         u129_20 0F8E  
                                       u145_20 0047                                         u137_20 0010  
                                       u129_21 0F8D                                         u145_21 0046  
                                       u137_21 000F                                         u146_20 004C  
                                       u138_20 0018                                         u146_21 004B  
                                       u138_21 0017                                         u147_20 0055  
                                       u139_20 001D                                         u147_21 0054  
                                       u139_21 001C                                         u148_20 005A  
                                       u148_21 0059                                         u149_20 0066  
                                       u149_21 0065                                  main@currMilli 00E9  
                                       _OSCFRQ 091F                                         _TX1REG 019A  
                                       _WDTCON 0097                                         _TX1STA 019E  
                             ?_CCP2_Initialize 0070                              ??_JSN_Sensor_Init 0026  
                                    ??_ReadPin 0070                              ??_JSN_Sensor_Trig 0026  
                                _CCP1_CallBack 00CE                       __end_of_CCP3_SetCallBack 0BE7  
                                       _SetPin 02FA                   _TMR1_DefaultInterruptHandler 0000  
                                _CCP2_CallBack 00C8                                   vfprintf@cfmt 006A  
                                       ___lmul 0E6B                                      ??___lldiv 0034  
                                    ??___lodiv 0030                                      ??___lomod 0030  
                                _CCP3_CallBack 00C2                            _EUSART_Transmit_ISR 0DC2  
                             ?_TMR0_Initialize 0070                                         _micros 00A8  
                                       _millis 00A4                                         _printf 0C82  
                                       pad@buf 0033                                  main@prevMilli 00E5  
                             ?_CCP3_Initialize 0070                                         _strlen 0D6C  
                                       fputc@c 0023                                 _PMD_Initialize 0C3F  
                                       fputs@c 002F                                         fputs@i 0030  
                                       fputs@s 0032              CCP2_DefaultCallBack@capturedValue 0073  
                              ?_WDT_Initialize 0070                          __end_of_TMR0_CallBack 0BA5  
                             __end_of_vfprintf 0E6B                                         utoa@fp 0047  
     TMR1_SetInterruptHandler@InterruptHandler 0020       TMR0_SetInterruptHandler@InterruptHandler 0020  
                      __end_of_TMR1_WriteTimer 0C5C                           ?_EUSART_Transmit_ISR 0070  
                             ?_TMR1_Initialize 0070                              _SYSTEM_Initialize 0DA3  
                      __end_of__initialization 0089                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 0C14                   _EUSART_SetTxInterruptHandler 0C0B  
                                 ??_PIC16_Init 0023                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0023                                      ?_TMR0_ISR 0070  
                                    ?_TMR1_ISR 0070                                  __end_of_fputc 07FD  
                                __end_of_fputs 0E0D                                  __end_of_putch 0BBA  
                       __end_of_PMD_Initialize 0C4B                        __end_of_JSN_GetLastTrig 0800  
                        CCP3_CaptureISR@module 0073                          TMR0_ISR@CountCallBack 00D0  
                         _eusartRxStatusBuffer 0120                 CCP3_SetCallBack@customCallBack 0020  
              ??_EUSART_SetOverrunErrorHandler 0022                             __end_of_PIC16_Init 0F83  
                                      ??_fputc 0026                      __end_of_SYSTEM_Initialize 0DC2  
                                      ??_fputs 002C                          ??_EUSART_Transmit_ISR 0070  
                                      ??_putch 0022                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 0E3A  
                     ??_JSN_Sensor_GetDistance 003C                                        ?_SetPin 0020  
                            ?_CCP1_SetCallBack 0020                                     __pmaintext 03B5  
                ?_EUSART_SetTxInterruptHandler 0020               _EUSART_TxDefaultInterruptHandler 00BC  
             __end_of_TMR0_SetInterruptHandler 0BC3                                        ?___lmul 0020  
                                   ??_TMR0_ISR 0070                                     ??_TMR1_ISR 0072  
                           ??_CCP1_SetCallBack 0022                                     __pintentry 0004  
                                      _CCP1CAP 0294                                        _CCP2CAP 0298  
                                      _CCP3CAP 0314                                        _CCP1CON 0293  
                                      _CCP2CON 0297                                        _CCP3CON 0313  
                                      _CCP1PPS 0E14                                        _CCP2PPS 0E15  
                                      _CCP3PPS 0E16                                 ___lmul@product 0028  
                 ??_EUSART_DefaultErrorHandler 0071                                        ?_printf 006C  
                              ?_PMD_Initialize 0070                                      ?_WritePin 0020  
                                      ?_strlen 0020                                  _eusartRxCount 00D5  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                                      _OSCCON1 0919                                        _OSCCON3 091B  
                                      _OSCTUNE 091E                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 0022                               ?_TMR1_WriteTimer 0070  
                             ___lomod@dividend 0028              CCP1_DefaultCallBack@capturedValue 0073  
                                      _ReadPin 045B                              ?_CCP2_SetCallBack 0020  
                                      ___lldiv 0669                                        ___lodiv 04F2  
                           ??_CCP2_SetCallBack 0022                                        ___lomod 05F8  
                                    ?_vfprintf 0064                                     ??_WritePin 0021  
                                      __ptext1 0C82                                        __ptext2 0E3A  
                                      __ptext3 017C                                        __ptext4 008D  
                                      __ptext5 06C4                                        __ptext6 0D6C  
                                      __ptext7 0DE4                                        __ptext8 07BA  
                                      __ptext9 0BB3                               ?_JSN_GetLastTrig 0070  
                                    _T1CONbits 001B                          _OSCILLATOR_Initialize 0C33  
                     ??_PIN_MANAGER_Initialize 0020                      ?_TMR1_SetInterruptHandler 0020  
                                      _ticksUp 00CC                                _JSN_Sensor_Init 0576  
                              _JSN_Sensor_Trig 071D                                        clrloop0 0B99  
                         end_of_initialization 0089          __end_of_EUSART_SetOverrunErrorHandler 0C02  
                _EUSART_SetOverrunErrorHandler 0BF9                                        fputc@fp 0025  
                                      fputs@fp 002B                              _EUSART_Initialize 0774  
                              ___lldiv@divisor 002C                                ___lldiv@counter 0039  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 023F  
                            ?_CCP3_SetCallBack 0020                          TMR0_ReadTimer@readVal 0021  
                 __end_of_CCP1_DefaultCallBack 0F0F                             ??_CCP3_SetCallBack 0022  
                                   ??_vfprintf 0067                                 _TMR0_ReadTimer 0BAC  
                                      strlen@a 0023                                        strlen@s 0024  
                          ??_EUSART_Initialize 0022                               ??_WDT_Initialize 0020  
               ??_EUSART_SetTxInterruptHandler 0022                       _TMR0_SetInterruptHandler 0BBA  
                                    _PORTAbits 000C                                      _PORTBbits 000D  
                                    _PORTCbits 000E                                      _TRISAbits 008C  
                                    _TRISBbits 008D                                      _TRISCbits 008E  
                    __end_of_EUSART_Initialize 07BA                         __end_of_TMR0_ReadTimer 0BB3  
                               __end_of_SetPin 03B5                                 __end_of___lmul 0E9F  
           __end_of_EUSART_DefaultErrorHandler 0B8C                     _EUSART_DefaultErrorHandler 0B88  
                                  vfpfcnvrt@ap 0055                                    vfpfcnvrt@fp 0063  
                                 _EUSART_Write 0E0D                        __end_of_JSN_Sensor_Init 05F8  
                       _JSN_Sensor_GetDistance 0FC0                         ?_OSCILLATOR_Initialize 0070  
                      __end_of_JSN_Sensor_Trig 0774                   __end_of_CCP2_DefaultCallBack 0F49  
                               __end_of_printf 0C97                                 __end_of_strlen 0D87  
                          start_initialization 0076                                ___lodiv@divisor 0020  
                              ___lodiv@counter 0039                 CCP2_SetCallBack@customCallBack 0020  
                                    SetPin@pin 0023                                    __end_of_pad 071D  
                            ??_CCP1_CaptureISR 0078   EUSART_SetRxInterruptHandler@interruptHandler 0020  
 EUSART_SetTxInterruptHandler@interruptHandler 0020                                    putch@txData 0022  
                             _JSN_Library_Init 0BA5                     __end_of_FR_Timer_GetMicros 0DA3  
                   __end_of_FR_Timer_GetMillis 0C6D                                  _FR_Timer_Init 0B90  
                            _ticksUp@ccp2$F876 00C6                 ?_EUSART_SetOverrunErrorHandler 0020  
                                     ??_SetPin 0021                     __end_of_FR_Timer_IncMicros 0C1E  
                   __end_of_FR_Timer_IncMillis 0C28                                    vfprintf@fmt 0064  
                   _EUSART_FramingErrorHandler 00B8                               ??_PMD_Initialize 0020  
                              ?_TMR0_ReadTimer 0070                                       ??___lmul 0028  
                            ??_CCP2_CaptureISR 0078                         _EUSART_SetErrorHandler 0BE7  
                       JSN_Sensor_Init@echoPin 0025                                    _CCPTMRSbits 029F  
                                     ??_printf 00DF                                       ??_strlen 0022  
                        CCP1_CaptureISR@module 0079                    __end_of_EUSART_Transmit_ISR 0DE4  
                                  __pbssCOMMON 007B                                      ___latbits 0002  
                       JSN_Sensor_Init@trigPin 0024                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00DF                              ??_CCP3_CaptureISR 0072  
                 __end_of_CCP3_DefaultCallBack 0003                           _CCP1_DefaultCallBack 0ED5  
                   __end_of_EUSART_Receive_ISR 0FC0               _EUSART_RxDefaultInterruptHandler 00BA  
                               ?_FR_Timer_Init 0070                          _TMR0_InterruptHandler 00D2  
                            ??_CCP1_Initialize 0022                                       ?_ReadPin 0070  
                                  WritePin@pin 0023                                    WritePin@val 0020  
                 __end_of_EUSART_RxDataHandler 0D6C                         _PIN_MANAGER_Initialize 0E9F  
             __end_of_TMR1_SetInterruptHandler 0BD5              CCP3_DefaultCallBack@capturedValue 0070  
                                     ?___lldiv 002C                                       ?___lodiv 0020  
                                     ?___lomod 0020                                   _eusartRxHead 007C  
                                 _eusartTxHead 007D                                   _eusartRxTail 007B  
                                 _eusartTxTail 00D7                   ??_INTERRUPT_InterruptManager 007B  
                             ?_JSN_Sensor_Init 0024                               ?_JSN_Sensor_Trig 0070  
                      _eusartTxBufferRemaining 00D6                                ___lomod@divisor 0020  
                                     _BAUD1CON 019F                              ??_CCP2_Initialize 0022  
                              ___lomod@counter 0031                                  _TMR0_CallBack 0B9E  
                        ?_CCP1_DefaultCallBack 0073                                 _eusartRxBuffer 0128  
                            ??_TMR0_Initialize 0022                                 _eusartTxBuffer 0130  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0020  
                                     _LATBbits 010D                                       _LATCbits 010E  
                                    clear_ram0 0B98                              ??_CCP3_Initialize 0022  
                                     _PIE0bits 0090                                       _PIE1bits 0091  
                                     _PIE4bits 0094                              _eusartRxLastError 00D4  
                         _CCP2_DefaultCallBack 0F0F                     ??_TMR0_SetInterruptHandler 0022  
                                     _PIR0bits 0010                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0022                                      _ticksDown 00CA  
                                     _PIR4bits 0014                                       _TMR0_ISR 0CD9  
    __end_of_EUSART_DefaultOverrunErrorHandler 0B90            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 0B8C  
                                     _TMR1_ISR 0C28                                      _vfpfcnvrt 017C  
                            ??_TMR1_Initialize 0022                                 ?_TMR0_CallBack 0070  
                            ___lmul@multiplier 0020                                ??_FR_Timer_Init 0022  
                                     SetPin@io 0020                          ?_CCP2_DefaultCallBack 0073  
                        JSN_Sensor_Init@Sensor 0028                                     vfprintf@ap 0066  
                                   vfprintf@fp 0069                        ?_JSN_Sensor_GetDistance 003A  
                      ??_OSCILLATOR_Initialize 0020                            _EUSART_ErrorHandler 00B4  
                         _CCP3_DefaultCallBack 0002                    ?_EUSART_DefaultErrorHandler 0070  
                                   ?_vfpfcnvrt 0054                       __end_of_JSN_Library_Init 0BAC  
                              _CCP1_CaptureISR 0C97                                       _WritePin 023F  
                     _TMR1_SetInterruptHandler 0BCC                          _TMR1_InterruptHandler 00BE  
                                   _T0CON0bits 0017                               _CCP1_SetCallBack 0BC3  
                         _EUSART_RxDataHandler 0D51                 CCP1_SetCallBack@customCallBack 0020  
                                     __ptext10 0E0D                                       __ptext11 05F8  
                                     __ptext20 0C0B                                       __ptext12 04F2  
                                     __ptext21 0C02                                       __ptext13 0F49  
                                   _T1GCONbits 001C                                       __ptext30 0D87  
                                     __ptext22 0BF9                                       __ptext14 0DA3  
                                     __ptext31 0BAC                                       __ptext23 0BF0  
                                     __ptext15 0B94                                       __ptext40 0BCC  
                                     __ptext32 0576                                       __ptext24 0BE7  
                                     __ptext16 0C3F                                       __ptext41 0CF0  
                                     __ptext33 023F                                       __ptext25 0D20  
                                     __ptext17 0E9F                                       __ptext50 0CD9  
                                     __ptext42 0BC3                                       __ptext34 02FA  
                                     __ptext26 0BDE                                       __ptext18 0C33  
                                     __ptext51 0B9E                                       __ptext43 0B90  
                                     __ptext35 0FC0                                       __ptext27 0D08  
                                     __ptext19 0774                                       __ptext60 0CC3  
                                     __ptext52 0C1E                                       __ptext44 0C6D  
                                     __ptext36 0E6B                                       __ptext28 0BD5  
                                     __ptext61 0002                                       __ptext53 0C14  
                                     __ptext45 0BBA                                       __ptext37 0669  
                                     __ptext29 071D                                       __ptext62 0CAD  
                                     __ptext54 0DC2                                       __ptext46 0C5C  
                                     __ptext38 0BA5                                       __ptext63 0F0F  
                                     __ptext55 0F83                                       __ptext39 0D38  
                                     __ptext64 0C97                                       __ptext56 0B8C  
                                     __ptext48 0C28                                       __ptext65 0ED5  
                                     __ptext57 0003                                       __ptext49 0C4B  
                                     __ptext66 045B                                       __ptext58 0B88  
                                     __ptext67 07FD                                       __ptext59 0D51  
                       ??_CCP1_DefaultCallBack 0075                                       _lastTrig 00D8  
                              _CCP2_CaptureISR 0CAD                               ??_TMR0_ReadTimer 0020  
                 _TMR0_DefaultInterruptHandler 0000                        ?_EUSART_SetErrorHandler 0020  
                          _ticksDown@ccp2$F877 00C4                                     _PIC16_Init 0F49  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
               __end_of_JSN_Sensor_GetDistance 1000                                       int$flags 007E  
                        ?_CCP3_DefaultCallBack 0070                                       _vfprintf 0E3A  
           __end_of_INTERRUPT_InterruptManager 0074                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 006C          __end_of_EUSART_SetFramingErrorHandler 0BF9  
                _EUSART_SetFramingErrorHandler 0BF0                              ??_TMR1_WriteTimer 0072  
                           _FR_Timer_GetMicros 0D87                             _FR_Timer_GetMillis 0C5C  
                              _CCP3_CaptureISR 0CC3                             _FR_Timer_IncMicros 0C14  
                           _FR_Timer_IncMillis 0C1E                                     _INTCONbits 000B  
                              ??_TMR0_CallBack 0070                               _CCP2_SetCallBack 0BD5  
                        ?_EUSART_RxDataHandler 0070                            ?_FR_Timer_GetMicros 0022  
                          ?_FR_Timer_GetMillis 0020                                _CCP1_Initialize 0CF0  
                          ?_FR_Timer_IncMicros 0070                            ?_FR_Timer_IncMillis 0070  
                                     intlevel1 0000                               ___lldiv@dividend 0030  
                      ?_PIN_MANAGER_Initialize 0070                         ??_CCP2_DefaultCallBack 0075  
               __end_of_EUSART_SetErrorHandler 0BF0                              ??_JSN_GetLastTrig 0070  
         __end_of_EUSART_SetRxInterruptHandler 0C0B                   _EUSART_SetRxInterruptHandler 0C02  
                         ??_FR_Timer_GetMicros 0026                           ??_FR_Timer_GetMillis 0024  
                      __end_of_CCP1_CaptureISR 0CAD                                _CCP2_Initialize 0D08  
                                     printf@ap 00E0                           ??_FR_Timer_IncMicros 0070  
                         ??_FR_Timer_IncMillis 0070                             _EUSART_Receive_ISR 0F83  
EUSART_SetFramingErrorHandler@interruptHandler 0020                                    ??_vfpfcnvrt 0056  
                                __pstringtext1 1000                                  __pstringtext2 0000  
                        CCP2_CaptureISR@module 0079                            ?_EUSART_Receive_ISR 0070  
                             ___lldiv@quotient 0035                                _TMR0_Initialize 0C6D  
                             _CCP3_SetCallBack 0BDE                        __end_of_CCP2_CaptureISR 0CC3  
                              _CCP3_Initialize 0D20                                     _TX1STAbits 019E  
                           EUSART_Write@txData 0021                 __end_of_PIN_MANAGER_Initialize 0ED5  
                         ??_EUSART_Receive_ISR 0071                          JSN_Sensor_Trig@Sensor 002A  
                              _TMR1_Initialize 0D38                                    ?_PIC16_Init 0070  
                      __end_of_CCP3_CaptureISR 0CD9  
