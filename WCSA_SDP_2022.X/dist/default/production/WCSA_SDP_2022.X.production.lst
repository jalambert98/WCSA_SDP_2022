

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Jan 29 22:08:52 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	intentry,global,class=CODE,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	text64,local,class=CODE,merge=1,delta=2
    79                           	psect	text65,local,class=CODE,merge=1,delta=2
    80                           	psect	text66,local,class=CODE,merge=1,delta=2
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    83                           	dabs	1,0x7E,2
    84  0000                     
    85                           ; Version 2.40
    86                           ; Generated 19/01/2022 GMT
    87                           ; 
    88                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution. Publication is not required when
   102                           ;        this file is used in an embedded application.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC16F18345 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0090                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0097                     	;# 
   163  009B                     	;# 
   164  009B                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  0111                     	;# 
   173  0112                     	;# 
   174  0113                     	;# 
   175  0114                     	;# 
   176  0115                     	;# 
   177  0116                     	;# 
   178  0117                     	;# 
   179  0118                     	;# 
   180  0119                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  018E                     	;# 
   184  0197                     	;# 
   185  0199                     	;# 
   186  0199                     	;# 
   187  0199                     	;# 
   188  019A                     	;# 
   189  019A                     	;# 
   190  019A                     	;# 
   191  019B                     	;# 
   192  019B                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019C                     	;# 
   197  019C                     	;# 
   198  019C                     	;# 
   199  019D                     	;# 
   200  019D                     	;# 
   201  019D                     	;# 
   202  019E                     	;# 
   203  019E                     	;# 
   204  019E                     	;# 
   205  019F                     	;# 
   206  019F                     	;# 
   207  019F                     	;# 
   208  019F                     	;# 
   209  019F                     	;# 
   210  020C                     	;# 
   211  020D                     	;# 
   212  020E                     	;# 
   213  0211                     	;# 
   214  0211                     	;# 
   215  0212                     	;# 
   216  0212                     	;# 
   217  0213                     	;# 
   218  0213                     	;# 
   219  0214                     	;# 
   220  0214                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0215                     	;# 
   224  0215                     	;# 
   225  0216                     	;# 
   226  0216                     	;# 
   227  0217                     	;# 
   228  0217                     	;# 
   229  0219                     	;# 
   230  021A                     	;# 
   231  021B                     	;# 
   232  021C                     	;# 
   233  021D                     	;# 
   234  021D                     	;# 
   235  021E                     	;# 
   236  021F                     	;# 
   237  028C                     	;# 
   238  028D                     	;# 
   239  028E                     	;# 
   240  0291                     	;# 
   241  0291                     	;# 
   242  0292                     	;# 
   243  0293                     	;# 
   244  0294                     	;# 
   245  0295                     	;# 
   246  0295                     	;# 
   247  0296                     	;# 
   248  0297                     	;# 
   249  0298                     	;# 
   250  029F                     	;# 
   251  030C                     	;# 
   252  030D                     	;# 
   253  030E                     	;# 
   254  0311                     	;# 
   255  0311                     	;# 
   256  0312                     	;# 
   257  0313                     	;# 
   258  0314                     	;# 
   259  0315                     	;# 
   260  0315                     	;# 
   261  0316                     	;# 
   262  0317                     	;# 
   263  0318                     	;# 
   264  038C                     	;# 
   265  038D                     	;# 
   266  038E                     	;# 
   267  0391                     	;# 
   268  0392                     	;# 
   269  0393                     	;# 
   270  0394                     	;# 
   271  0395                     	;# 
   272  0396                     	;# 
   273  0397                     	;# 
   274  0398                     	;# 
   275  0399                     	;# 
   276  039A                     	;# 
   277  039C                     	;# 
   278  039D                     	;# 
   279  039E                     	;# 
   280  039F                     	;# 
   281  0411                     	;# 
   282  0411                     	;# 
   283  0412                     	;# 
   284  0413                     	;# 
   285  0414                     	;# 
   286  0415                     	;# 
   287  0416                     	;# 
   288  0417                     	;# 
   289  0418                     	;# 
   290  0418                     	;# 
   291  0419                     	;# 
   292  041A                     	;# 
   293  041B                     	;# 
   294  041C                     	;# 
   295  041D                     	;# 
   296  041E                     	;# 
   297  041F                     	;# 
   298  0498                     	;# 
   299  0498                     	;# 
   300  0499                     	;# 
   301  049A                     	;# 
   302  049B                     	;# 
   303  049B                     	;# 
   304  049C                     	;# 
   305  049D                     	;# 
   306  049E                     	;# 
   307  049F                     	;# 
   308  0617                     	;# 
   309  0618                     	;# 
   310  0619                     	;# 
   311  0619                     	;# 
   312  061A                     	;# 
   313  061B                     	;# 
   314  061C                     	;# 
   315  061C                     	;# 
   316  061F                     	;# 
   317  0691                     	;# 
   318  0692                     	;# 
   319  0693                     	;# 
   320  0694                     	;# 
   321  0695                     	;# 
   322  0696                     	;# 
   323  0697                     	;# 
   324  0698                     	;# 
   325  0699                     	;# 
   326  0711                     	;# 
   327  0712                     	;# 
   328  0713                     	;# 
   329  0714                     	;# 
   330  0715                     	;# 
   331  0716                     	;# 
   332  0717                     	;# 
   333  0718                     	;# 
   334  0719                     	;# 
   335  0891                     	;# 
   336  0891                     	;# 
   337  0891                     	;# 
   338  0891                     	;# 
   339  0891                     	;# 
   340  0891                     	;# 
   341  0892                     	;# 
   342  0892                     	;# 
   343  0892                     	;# 
   344  0893                     	;# 
   345  0893                     	;# 
   346  0893                     	;# 
   347  0893                     	;# 
   348  0893                     	;# 
   349  0893                     	;# 
   350  0894                     	;# 
   351  0894                     	;# 
   352  0894                     	;# 
   353  0895                     	;# 
   354  0895                     	;# 
   355  0895                     	;# 
   356  0896                     	;# 
   357  0896                     	;# 
   358  0896                     	;# 
   359  089B                     	;# 
   360  0911                     	;# 
   361  0912                     	;# 
   362  0913                     	;# 
   363  0914                     	;# 
   364  0915                     	;# 
   365  0916                     	;# 
   366  0918                     	;# 
   367  0919                     	;# 
   368  091A                     	;# 
   369  091B                     	;# 
   370  091C                     	;# 
   371  091D                     	;# 
   372  091E                     	;# 
   373  091F                     	;# 
   374  0E0F                     	;# 
   375  0E10                     	;# 
   376  0E11                     	;# 
   377  0E12                     	;# 
   378  0E13                     	;# 
   379  0E14                     	;# 
   380  0E15                     	;# 
   381  0E16                     	;# 
   382  0E17                     	;# 
   383  0E18                     	;# 
   384  0E19                     	;# 
   385  0E1A                     	;# 
   386  0E1B                     	;# 
   387  0E1C                     	;# 
   388  0E1D                     	;# 
   389  0E1E                     	;# 
   390  0E1F                     	;# 
   391  0E20                     	;# 
   392  0E21                     	;# 
   393  0E22                     	;# 
   394  0E24                     	;# 
   395  0E25                     	;# 
   396  0E28                     	;# 
   397  0E29                     	;# 
   398  0E2A                     	;# 
   399  0E2B                     	;# 
   400  0E2C                     	;# 
   401  0E2D                     	;# 
   402  0E2E                     	;# 
   403  0E2F                     	;# 
   404  0E90                     	;# 
   405  0E91                     	;# 
   406  0E92                     	;# 
   407  0E94                     	;# 
   408  0E95                     	;# 
   409  0E9C                     	;# 
   410  0E9D                     	;# 
   411  0E9E                     	;# 
   412  0E9F                     	;# 
   413  0EA0                     	;# 
   414  0EA1                     	;# 
   415  0EA2                     	;# 
   416  0EA3                     	;# 
   417  0EA4                     	;# 
   418  0EA5                     	;# 
   419  0EA6                     	;# 
   420  0EA7                     	;# 
   421  0F0F                     	;# 
   422  0F10                     	;# 
   423  0F11                     	;# 
   424  0F12                     	;# 
   425  0F13                     	;# 
   426  0F14                     	;# 
   427  0F15                     	;# 
   428  0F16                     	;# 
   429  0F17                     	;# 
   430  0F18                     	;# 
   431  0F19                     	;# 
   432  0F1A                     	;# 
   433  0F1B                     	;# 
   434  0F1C                     	;# 
   435  0F1D                     	;# 
   436  0F1E                     	;# 
   437  0F1F                     	;# 
   438  0F20                     	;# 
   439  0F21                     	;# 
   440  0F22                     	;# 
   441  0F23                     	;# 
   442  0F24                     	;# 
   443  0F25                     	;# 
   444  0F26                     	;# 
   445  0F27                     	;# 
   446  0F28                     	;# 
   447  0F29                     	;# 
   448  0F2A                     	;# 
   449  0F2B                     	;# 
   450  0F2C                     	;# 
   451  0F2D                     	;# 
   452  0F2E                     	;# 
   453  0F2F                     	;# 
   454  0F30                     	;# 
   455  0F31                     	;# 
   456  0F32                     	;# 
   457  0F33                     	;# 
   458  0F34                     	;# 
   459  0F35                     	;# 
   460  0F36                     	;# 
   461  0F37                     	;# 
   462  0FE4                     	;# 
   463  0FE5                     	;# 
   464  0FE6                     	;# 
   465  0FE7                     	;# 
   466  0FE8                     	;# 
   467  0FE9                     	;# 
   468  0FEA                     	;# 
   469  0FEB                     	;# 
   470  0FED                     	;# 
   471  0FEE                     	;# 
   472  0FEF                     	;# 
   473  0000                     	;# 
   474  0001                     	;# 
   475  0002                     	;# 
   476  0003                     	;# 
   477  0004                     	;# 
   478  0005                     	;# 
   479  0006                     	;# 
   480  0007                     	;# 
   481  0008                     	;# 
   482  0009                     	;# 
   483  000A                     	;# 
   484  000B                     	;# 
   485  000C                     	;# 
   486  000D                     	;# 
   487  000E                     	;# 
   488  0010                     	;# 
   489  0011                     	;# 
   490  0012                     	;# 
   491  0013                     	;# 
   492  0014                     	;# 
   493  0015                     	;# 
   494  0015                     	;# 
   495  0016                     	;# 
   496  0016                     	;# 
   497  0017                     	;# 
   498  0018                     	;# 
   499  0019                     	;# 
   500  0019                     	;# 
   501  001A                     	;# 
   502  001B                     	;# 
   503  001C                     	;# 
   504  001D                     	;# 
   505  001E                     	;# 
   506  001F                     	;# 
   507  008C                     	;# 
   508  008D                     	;# 
   509  008E                     	;# 
   510  0090                     	;# 
   511  0091                     	;# 
   512  0092                     	;# 
   513  0093                     	;# 
   514  0094                     	;# 
   515  0097                     	;# 
   516  009B                     	;# 
   517  009B                     	;# 
   518  009C                     	;# 
   519  009D                     	;# 
   520  009E                     	;# 
   521  009F                     	;# 
   522  010C                     	;# 
   523  010D                     	;# 
   524  010E                     	;# 
   525  0111                     	;# 
   526  0112                     	;# 
   527  0113                     	;# 
   528  0114                     	;# 
   529  0115                     	;# 
   530  0116                     	;# 
   531  0117                     	;# 
   532  0118                     	;# 
   533  0119                     	;# 
   534  018C                     	;# 
   535  018D                     	;# 
   536  018E                     	;# 
   537  0197                     	;# 
   538  0199                     	;# 
   539  0199                     	;# 
   540  0199                     	;# 
   541  019A                     	;# 
   542  019A                     	;# 
   543  019A                     	;# 
   544  019B                     	;# 
   545  019B                     	;# 
   546  019B                     	;# 
   547  019B                     	;# 
   548  019B                     	;# 
   549  019C                     	;# 
   550  019C                     	;# 
   551  019C                     	;# 
   552  019D                     	;# 
   553  019D                     	;# 
   554  019D                     	;# 
   555  019E                     	;# 
   556  019E                     	;# 
   557  019E                     	;# 
   558  019F                     	;# 
   559  019F                     	;# 
   560  019F                     	;# 
   561  019F                     	;# 
   562  019F                     	;# 
   563  020C                     	;# 
   564  020D                     	;# 
   565  020E                     	;# 
   566  0211                     	;# 
   567  0211                     	;# 
   568  0212                     	;# 
   569  0212                     	;# 
   570  0213                     	;# 
   571  0213                     	;# 
   572  0214                     	;# 
   573  0214                     	;# 
   574  0215                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0216                     	;# 
   579  0216                     	;# 
   580  0217                     	;# 
   581  0217                     	;# 
   582  0219                     	;# 
   583  021A                     	;# 
   584  021B                     	;# 
   585  021C                     	;# 
   586  021D                     	;# 
   587  021D                     	;# 
   588  021E                     	;# 
   589  021F                     	;# 
   590  028C                     	;# 
   591  028D                     	;# 
   592  028E                     	;# 
   593  0291                     	;# 
   594  0291                     	;# 
   595  0292                     	;# 
   596  0293                     	;# 
   597  0294                     	;# 
   598  0295                     	;# 
   599  0295                     	;# 
   600  0296                     	;# 
   601  0297                     	;# 
   602  0298                     	;# 
   603  029F                     	;# 
   604  030C                     	;# 
   605  030D                     	;# 
   606  030E                     	;# 
   607  0311                     	;# 
   608  0311                     	;# 
   609  0312                     	;# 
   610  0313                     	;# 
   611  0314                     	;# 
   612  0315                     	;# 
   613  0315                     	;# 
   614  0316                     	;# 
   615  0317                     	;# 
   616  0318                     	;# 
   617  038C                     	;# 
   618  038D                     	;# 
   619  038E                     	;# 
   620  0391                     	;# 
   621  0392                     	;# 
   622  0393                     	;# 
   623  0394                     	;# 
   624  0395                     	;# 
   625  0396                     	;# 
   626  0397                     	;# 
   627  0398                     	;# 
   628  0399                     	;# 
   629  039A                     	;# 
   630  039C                     	;# 
   631  039D                     	;# 
   632  039E                     	;# 
   633  039F                     	;# 
   634  0411                     	;# 
   635  0411                     	;# 
   636  0412                     	;# 
   637  0413                     	;# 
   638  0414                     	;# 
   639  0415                     	;# 
   640  0416                     	;# 
   641  0417                     	;# 
   642  0418                     	;# 
   643  0418                     	;# 
   644  0419                     	;# 
   645  041A                     	;# 
   646  041B                     	;# 
   647  041C                     	;# 
   648  041D                     	;# 
   649  041E                     	;# 
   650  041F                     	;# 
   651  0498                     	;# 
   652  0498                     	;# 
   653  0499                     	;# 
   654  049A                     	;# 
   655  049B                     	;# 
   656  049B                     	;# 
   657  049C                     	;# 
   658  049D                     	;# 
   659  049E                     	;# 
   660  049F                     	;# 
   661  0617                     	;# 
   662  0618                     	;# 
   663  0619                     	;# 
   664  0619                     	;# 
   665  061A                     	;# 
   666  061B                     	;# 
   667  061C                     	;# 
   668  061C                     	;# 
   669  061F                     	;# 
   670  0691                     	;# 
   671  0692                     	;# 
   672  0693                     	;# 
   673  0694                     	;# 
   674  0695                     	;# 
   675  0696                     	;# 
   676  0697                     	;# 
   677  0698                     	;# 
   678  0699                     	;# 
   679  0711                     	;# 
   680  0712                     	;# 
   681  0713                     	;# 
   682  0714                     	;# 
   683  0715                     	;# 
   684  0716                     	;# 
   685  0717                     	;# 
   686  0718                     	;# 
   687  0719                     	;# 
   688  0891                     	;# 
   689  0891                     	;# 
   690  0891                     	;# 
   691  0891                     	;# 
   692  0891                     	;# 
   693  0891                     	;# 
   694  0892                     	;# 
   695  0892                     	;# 
   696  0892                     	;# 
   697  0893                     	;# 
   698  0893                     	;# 
   699  0893                     	;# 
   700  0893                     	;# 
   701  0893                     	;# 
   702  0893                     	;# 
   703  0894                     	;# 
   704  0894                     	;# 
   705  0894                     	;# 
   706  0895                     	;# 
   707  0895                     	;# 
   708  0895                     	;# 
   709  0896                     	;# 
   710  0896                     	;# 
   711  0896                     	;# 
   712  089B                     	;# 
   713  0911                     	;# 
   714  0912                     	;# 
   715  0913                     	;# 
   716  0914                     	;# 
   717  0915                     	;# 
   718  0916                     	;# 
   719  0918                     	;# 
   720  0919                     	;# 
   721  091A                     	;# 
   722  091B                     	;# 
   723  091C                     	;# 
   724  091D                     	;# 
   725  091E                     	;# 
   726  091F                     	;# 
   727  0E0F                     	;# 
   728  0E10                     	;# 
   729  0E11                     	;# 
   730  0E12                     	;# 
   731  0E13                     	;# 
   732  0E14                     	;# 
   733  0E15                     	;# 
   734  0E16                     	;# 
   735  0E17                     	;# 
   736  0E18                     	;# 
   737  0E19                     	;# 
   738  0E1A                     	;# 
   739  0E1B                     	;# 
   740  0E1C                     	;# 
   741  0E1D                     	;# 
   742  0E1E                     	;# 
   743  0E1F                     	;# 
   744  0E20                     	;# 
   745  0E21                     	;# 
   746  0E22                     	;# 
   747  0E24                     	;# 
   748  0E25                     	;# 
   749  0E28                     	;# 
   750  0E29                     	;# 
   751  0E2A                     	;# 
   752  0E2B                     	;# 
   753  0E2C                     	;# 
   754  0E2D                     	;# 
   755  0E2E                     	;# 
   756  0E2F                     	;# 
   757  0E90                     	;# 
   758  0E91                     	;# 
   759  0E92                     	;# 
   760  0E94                     	;# 
   761  0E95                     	;# 
   762  0E9C                     	;# 
   763  0E9D                     	;# 
   764  0E9E                     	;# 
   765  0E9F                     	;# 
   766  0EA0                     	;# 
   767  0EA1                     	;# 
   768  0EA2                     	;# 
   769  0EA3                     	;# 
   770  0EA4                     	;# 
   771  0EA5                     	;# 
   772  0EA6                     	;# 
   773  0EA7                     	;# 
   774  0F0F                     	;# 
   775  0F10                     	;# 
   776  0F11                     	;# 
   777  0F12                     	;# 
   778  0F13                     	;# 
   779  0F14                     	;# 
   780  0F15                     	;# 
   781  0F16                     	;# 
   782  0F17                     	;# 
   783  0F18                     	;# 
   784  0F19                     	;# 
   785  0F1A                     	;# 
   786  0F1B                     	;# 
   787  0F1C                     	;# 
   788  0F1D                     	;# 
   789  0F1E                     	;# 
   790  0F1F                     	;# 
   791  0F20                     	;# 
   792  0F21                     	;# 
   793  0F22                     	;# 
   794  0F23                     	;# 
   795  0F24                     	;# 
   796  0F25                     	;# 
   797  0F26                     	;# 
   798  0F27                     	;# 
   799  0F28                     	;# 
   800  0F29                     	;# 
   801  0F2A                     	;# 
   802  0F2B                     	;# 
   803  0F2C                     	;# 
   804  0F2D                     	;# 
   805  0F2E                     	;# 
   806  0F2F                     	;# 
   807  0F30                     	;# 
   808  0F31                     	;# 
   809  0F32                     	;# 
   810  0F33                     	;# 
   811  0F34                     	;# 
   812  0F35                     	;# 
   813  0F36                     	;# 
   814  0F37                     	;# 
   815  0FE4                     	;# 
   816  0FE5                     	;# 
   817  0FE6                     	;# 
   818  0FE7                     	;# 
   819  0FE8                     	;# 
   820  0FE9                     	;# 
   821  0FEA                     	;# 
   822  0FEB                     	;# 
   823  0FED                     	;# 
   824  0FEE                     	;# 
   825  0FEF                     	;# 
   826  0000                     	;# 
   827  0001                     	;# 
   828  0002                     	;# 
   829  0003                     	;# 
   830  0004                     	;# 
   831  0005                     	;# 
   832  0006                     	;# 
   833  0007                     	;# 
   834  0008                     	;# 
   835  0009                     	;# 
   836  000A                     	;# 
   837  000B                     	;# 
   838  000C                     	;# 
   839  000D                     	;# 
   840  000E                     	;# 
   841  0010                     	;# 
   842  0011                     	;# 
   843  0012                     	;# 
   844  0013                     	;# 
   845  0014                     	;# 
   846  0015                     	;# 
   847  0015                     	;# 
   848  0016                     	;# 
   849  0016                     	;# 
   850  0017                     	;# 
   851  0018                     	;# 
   852  0019                     	;# 
   853  0019                     	;# 
   854  001A                     	;# 
   855  001B                     	;# 
   856  001C                     	;# 
   857  001D                     	;# 
   858  001E                     	;# 
   859  001F                     	;# 
   860  008C                     	;# 
   861  008D                     	;# 
   862  008E                     	;# 
   863  0090                     	;# 
   864  0091                     	;# 
   865  0092                     	;# 
   866  0093                     	;# 
   867  0094                     	;# 
   868  0097                     	;# 
   869  009B                     	;# 
   870  009B                     	;# 
   871  009C                     	;# 
   872  009D                     	;# 
   873  009E                     	;# 
   874  009F                     	;# 
   875  010C                     	;# 
   876  010D                     	;# 
   877  010E                     	;# 
   878  0111                     	;# 
   879  0112                     	;# 
   880  0113                     	;# 
   881  0114                     	;# 
   882  0115                     	;# 
   883  0116                     	;# 
   884  0117                     	;# 
   885  0118                     	;# 
   886  0119                     	;# 
   887  018C                     	;# 
   888  018D                     	;# 
   889  018E                     	;# 
   890  0197                     	;# 
   891  0199                     	;# 
   892  0199                     	;# 
   893  0199                     	;# 
   894  019A                     	;# 
   895  019A                     	;# 
   896  019A                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019B                     	;# 
   902  019C                     	;# 
   903  019C                     	;# 
   904  019C                     	;# 
   905  019D                     	;# 
   906  019D                     	;# 
   907  019D                     	;# 
   908  019E                     	;# 
   909  019E                     	;# 
   910  019E                     	;# 
   911  019F                     	;# 
   912  019F                     	;# 
   913  019F                     	;# 
   914  019F                     	;# 
   915  019F                     	;# 
   916  020C                     	;# 
   917  020D                     	;# 
   918  020E                     	;# 
   919  0211                     	;# 
   920  0211                     	;# 
   921  0212                     	;# 
   922  0212                     	;# 
   923  0213                     	;# 
   924  0213                     	;# 
   925  0214                     	;# 
   926  0214                     	;# 
   927  0215                     	;# 
   928  0215                     	;# 
   929  0215                     	;# 
   930  0215                     	;# 
   931  0216                     	;# 
   932  0216                     	;# 
   933  0217                     	;# 
   934  0217                     	;# 
   935  0219                     	;# 
   936  021A                     	;# 
   937  021B                     	;# 
   938  021C                     	;# 
   939  021D                     	;# 
   940  021D                     	;# 
   941  021E                     	;# 
   942  021F                     	;# 
   943  028C                     	;# 
   944  028D                     	;# 
   945  028E                     	;# 
   946  0291                     	;# 
   947  0291                     	;# 
   948  0292                     	;# 
   949  0293                     	;# 
   950  0294                     	;# 
   951  0295                     	;# 
   952  0295                     	;# 
   953  0296                     	;# 
   954  0297                     	;# 
   955  0298                     	;# 
   956  029F                     	;# 
   957  030C                     	;# 
   958  030D                     	;# 
   959  030E                     	;# 
   960  0311                     	;# 
   961  0311                     	;# 
   962  0312                     	;# 
   963  0313                     	;# 
   964  0314                     	;# 
   965  0315                     	;# 
   966  0315                     	;# 
   967  0316                     	;# 
   968  0317                     	;# 
   969  0318                     	;# 
   970  038C                     	;# 
   971  038D                     	;# 
   972  038E                     	;# 
   973  0391                     	;# 
   974  0392                     	;# 
   975  0393                     	;# 
   976  0394                     	;# 
   977  0395                     	;# 
   978  0396                     	;# 
   979  0397                     	;# 
   980  0398                     	;# 
   981  0399                     	;# 
   982  039A                     	;# 
   983  039C                     	;# 
   984  039D                     	;# 
   985  039E                     	;# 
   986  039F                     	;# 
   987  0411                     	;# 
   988  0411                     	;# 
   989  0412                     	;# 
   990  0413                     	;# 
   991  0414                     	;# 
   992  0415                     	;# 
   993  0416                     	;# 
   994  0417                     	;# 
   995  0418                     	;# 
   996  0418                     	;# 
   997  0419                     	;# 
   998  041A                     	;# 
   999  041B                     	;# 
  1000  041C                     	;# 
  1001  041D                     	;# 
  1002  041E                     	;# 
  1003  041F                     	;# 
  1004  0498                     	;# 
  1005  0498                     	;# 
  1006  0499                     	;# 
  1007  049A                     	;# 
  1008  049B                     	;# 
  1009  049B                     	;# 
  1010  049C                     	;# 
  1011  049D                     	;# 
  1012  049E                     	;# 
  1013  049F                     	;# 
  1014  0617                     	;# 
  1015  0618                     	;# 
  1016  0619                     	;# 
  1017  0619                     	;# 
  1018  061A                     	;# 
  1019  061B                     	;# 
  1020  061C                     	;# 
  1021  061C                     	;# 
  1022  061F                     	;# 
  1023  0691                     	;# 
  1024  0692                     	;# 
  1025  0693                     	;# 
  1026  0694                     	;# 
  1027  0695                     	;# 
  1028  0696                     	;# 
  1029  0697                     	;# 
  1030  0698                     	;# 
  1031  0699                     	;# 
  1032  0711                     	;# 
  1033  0712                     	;# 
  1034  0713                     	;# 
  1035  0714                     	;# 
  1036  0715                     	;# 
  1037  0716                     	;# 
  1038  0717                     	;# 
  1039  0718                     	;# 
  1040  0719                     	;# 
  1041  0891                     	;# 
  1042  0891                     	;# 
  1043  0891                     	;# 
  1044  0891                     	;# 
  1045  0891                     	;# 
  1046  0891                     	;# 
  1047  0892                     	;# 
  1048  0892                     	;# 
  1049  0892                     	;# 
  1050  0893                     	;# 
  1051  0893                     	;# 
  1052  0893                     	;# 
  1053  0893                     	;# 
  1054  0893                     	;# 
  1055  0893                     	;# 
  1056  0894                     	;# 
  1057  0894                     	;# 
  1058  0894                     	;# 
  1059  0895                     	;# 
  1060  0895                     	;# 
  1061  0895                     	;# 
  1062  0896                     	;# 
  1063  0896                     	;# 
  1064  0896                     	;# 
  1065  089B                     	;# 
  1066  0911                     	;# 
  1067  0912                     	;# 
  1068  0913                     	;# 
  1069  0914                     	;# 
  1070  0915                     	;# 
  1071  0916                     	;# 
  1072  0918                     	;# 
  1073  0919                     	;# 
  1074  091A                     	;# 
  1075  091B                     	;# 
  1076  091C                     	;# 
  1077  091D                     	;# 
  1078  091E                     	;# 
  1079  091F                     	;# 
  1080  0E0F                     	;# 
  1081  0E10                     	;# 
  1082  0E11                     	;# 
  1083  0E12                     	;# 
  1084  0E13                     	;# 
  1085  0E14                     	;# 
  1086  0E15                     	;# 
  1087  0E16                     	;# 
  1088  0E17                     	;# 
  1089  0E18                     	;# 
  1090  0E19                     	;# 
  1091  0E1A                     	;# 
  1092  0E1B                     	;# 
  1093  0E1C                     	;# 
  1094  0E1D                     	;# 
  1095  0E1E                     	;# 
  1096  0E1F                     	;# 
  1097  0E20                     	;# 
  1098  0E21                     	;# 
  1099  0E22                     	;# 
  1100  0E24                     	;# 
  1101  0E25                     	;# 
  1102  0E28                     	;# 
  1103  0E29                     	;# 
  1104  0E2A                     	;# 
  1105  0E2B                     	;# 
  1106  0E2C                     	;# 
  1107  0E2D                     	;# 
  1108  0E2E                     	;# 
  1109  0E2F                     	;# 
  1110  0E90                     	;# 
  1111  0E91                     	;# 
  1112  0E92                     	;# 
  1113  0E94                     	;# 
  1114  0E95                     	;# 
  1115  0E9C                     	;# 
  1116  0E9D                     	;# 
  1117  0E9E                     	;# 
  1118  0E9F                     	;# 
  1119  0EA0                     	;# 
  1120  0EA1                     	;# 
  1121  0EA2                     	;# 
  1122  0EA3                     	;# 
  1123  0EA4                     	;# 
  1124  0EA5                     	;# 
  1125  0EA6                     	;# 
  1126  0EA7                     	;# 
  1127  0F0F                     	;# 
  1128  0F10                     	;# 
  1129  0F11                     	;# 
  1130  0F12                     	;# 
  1131  0F13                     	;# 
  1132  0F14                     	;# 
  1133  0F15                     	;# 
  1134  0F16                     	;# 
  1135  0F17                     	;# 
  1136  0F18                     	;# 
  1137  0F19                     	;# 
  1138  0F1A                     	;# 
  1139  0F1B                     	;# 
  1140  0F1C                     	;# 
  1141  0F1D                     	;# 
  1142  0F1E                     	;# 
  1143  0F1F                     	;# 
  1144  0F20                     	;# 
  1145  0F21                     	;# 
  1146  0F22                     	;# 
  1147  0F23                     	;# 
  1148  0F24                     	;# 
  1149  0F25                     	;# 
  1150  0F26                     	;# 
  1151  0F27                     	;# 
  1152  0F28                     	;# 
  1153  0F29                     	;# 
  1154  0F2A                     	;# 
  1155  0F2B                     	;# 
  1156  0F2C                     	;# 
  1157  0F2D                     	;# 
  1158  0F2E                     	;# 
  1159  0F2F                     	;# 
  1160  0F30                     	;# 
  1161  0F31                     	;# 
  1162  0F32                     	;# 
  1163  0F33                     	;# 
  1164  0F34                     	;# 
  1165  0F35                     	;# 
  1166  0F36                     	;# 
  1167  0F37                     	;# 
  1168  0FE4                     	;# 
  1169  0FE5                     	;# 
  1170  0FE6                     	;# 
  1171  0FE7                     	;# 
  1172  0FE8                     	;# 
  1173  0FE9                     	;# 
  1174  0FEA                     	;# 
  1175  0FEB                     	;# 
  1176  0FED                     	;# 
  1177  0FEE                     	;# 
  1178  0FEF                     	;# 
  1179  0000                     	;# 
  1180  0001                     	;# 
  1181  0002                     	;# 
  1182  0003                     	;# 
  1183  0004                     	;# 
  1184  0005                     	;# 
  1185  0006                     	;# 
  1186  0007                     	;# 
  1187  0008                     	;# 
  1188  0009                     	;# 
  1189  000A                     	;# 
  1190  000B                     	;# 
  1191  000C                     	;# 
  1192  000D                     	;# 
  1193  000E                     	;# 
  1194  0010                     	;# 
  1195  0011                     	;# 
  1196  0012                     	;# 
  1197  0013                     	;# 
  1198  0014                     	;# 
  1199  0015                     	;# 
  1200  0015                     	;# 
  1201  0016                     	;# 
  1202  0016                     	;# 
  1203  0017                     	;# 
  1204  0018                     	;# 
  1205  0019                     	;# 
  1206  0019                     	;# 
  1207  001A                     	;# 
  1208  001B                     	;# 
  1209  001C                     	;# 
  1210  001D                     	;# 
  1211  001E                     	;# 
  1212  001F                     	;# 
  1213  008C                     	;# 
  1214  008D                     	;# 
  1215  008E                     	;# 
  1216  0090                     	;# 
  1217  0091                     	;# 
  1218  0092                     	;# 
  1219  0093                     	;# 
  1220  0094                     	;# 
  1221  0097                     	;# 
  1222  009B                     	;# 
  1223  009B                     	;# 
  1224  009C                     	;# 
  1225  009D                     	;# 
  1226  009E                     	;# 
  1227  009F                     	;# 
  1228  010C                     	;# 
  1229  010D                     	;# 
  1230  010E                     	;# 
  1231  0111                     	;# 
  1232  0112                     	;# 
  1233  0113                     	;# 
  1234  0114                     	;# 
  1235  0115                     	;# 
  1236  0116                     	;# 
  1237  0117                     	;# 
  1238  0118                     	;# 
  1239  0119                     	;# 
  1240  018C                     	;# 
  1241  018D                     	;# 
  1242  018E                     	;# 
  1243  0197                     	;# 
  1244  0199                     	;# 
  1245  0199                     	;# 
  1246  0199                     	;# 
  1247  019A                     	;# 
  1248  019A                     	;# 
  1249  019A                     	;# 
  1250  019B                     	;# 
  1251  019B                     	;# 
  1252  019B                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019C                     	;# 
  1256  019C                     	;# 
  1257  019C                     	;# 
  1258  019D                     	;# 
  1259  019D                     	;# 
  1260  019D                     	;# 
  1261  019E                     	;# 
  1262  019E                     	;# 
  1263  019E                     	;# 
  1264  019F                     	;# 
  1265  019F                     	;# 
  1266  019F                     	;# 
  1267  019F                     	;# 
  1268  019F                     	;# 
  1269  020C                     	;# 
  1270  020D                     	;# 
  1271  020E                     	;# 
  1272  0211                     	;# 
  1273  0211                     	;# 
  1274  0212                     	;# 
  1275  0212                     	;# 
  1276  0213                     	;# 
  1277  0213                     	;# 
  1278  0214                     	;# 
  1279  0214                     	;# 
  1280  0215                     	;# 
  1281  0215                     	;# 
  1282  0215                     	;# 
  1283  0215                     	;# 
  1284  0216                     	;# 
  1285  0216                     	;# 
  1286  0217                     	;# 
  1287  0217                     	;# 
  1288  0219                     	;# 
  1289  021A                     	;# 
  1290  021B                     	;# 
  1291  021C                     	;# 
  1292  021D                     	;# 
  1293  021D                     	;# 
  1294  021E                     	;# 
  1295  021F                     	;# 
  1296  028C                     	;# 
  1297  028D                     	;# 
  1298  028E                     	;# 
  1299  0291                     	;# 
  1300  0291                     	;# 
  1301  0292                     	;# 
  1302  0293                     	;# 
  1303  0294                     	;# 
  1304  0295                     	;# 
  1305  0295                     	;# 
  1306  0296                     	;# 
  1307  0297                     	;# 
  1308  0298                     	;# 
  1309  029F                     	;# 
  1310  030C                     	;# 
  1311  030D                     	;# 
  1312  030E                     	;# 
  1313  0311                     	;# 
  1314  0311                     	;# 
  1315  0312                     	;# 
  1316  0313                     	;# 
  1317  0314                     	;# 
  1318  0315                     	;# 
  1319  0315                     	;# 
  1320  0316                     	;# 
  1321  0317                     	;# 
  1322  0318                     	;# 
  1323  038C                     	;# 
  1324  038D                     	;# 
  1325  038E                     	;# 
  1326  0391                     	;# 
  1327  0392                     	;# 
  1328  0393                     	;# 
  1329  0394                     	;# 
  1330  0395                     	;# 
  1331  0396                     	;# 
  1332  0397                     	;# 
  1333  0398                     	;# 
  1334  0399                     	;# 
  1335  039A                     	;# 
  1336  039C                     	;# 
  1337  039D                     	;# 
  1338  039E                     	;# 
  1339  039F                     	;# 
  1340  0411                     	;# 
  1341  0411                     	;# 
  1342  0412                     	;# 
  1343  0413                     	;# 
  1344  0414                     	;# 
  1345  0415                     	;# 
  1346  0416                     	;# 
  1347  0417                     	;# 
  1348  0418                     	;# 
  1349  0418                     	;# 
  1350  0419                     	;# 
  1351  041A                     	;# 
  1352  041B                     	;# 
  1353  041C                     	;# 
  1354  041D                     	;# 
  1355  041E                     	;# 
  1356  041F                     	;# 
  1357  0498                     	;# 
  1358  0498                     	;# 
  1359  0499                     	;# 
  1360  049A                     	;# 
  1361  049B                     	;# 
  1362  049B                     	;# 
  1363  049C                     	;# 
  1364  049D                     	;# 
  1365  049E                     	;# 
  1366  049F                     	;# 
  1367  0617                     	;# 
  1368  0618                     	;# 
  1369  0619                     	;# 
  1370  0619                     	;# 
  1371  061A                     	;# 
  1372  061B                     	;# 
  1373  061C                     	;# 
  1374  061C                     	;# 
  1375  061F                     	;# 
  1376  0691                     	;# 
  1377  0692                     	;# 
  1378  0693                     	;# 
  1379  0694                     	;# 
  1380  0695                     	;# 
  1381  0696                     	;# 
  1382  0697                     	;# 
  1383  0698                     	;# 
  1384  0699                     	;# 
  1385  0711                     	;# 
  1386  0712                     	;# 
  1387  0713                     	;# 
  1388  0714                     	;# 
  1389  0715                     	;# 
  1390  0716                     	;# 
  1391  0717                     	;# 
  1392  0718                     	;# 
  1393  0719                     	;# 
  1394  0891                     	;# 
  1395  0891                     	;# 
  1396  0891                     	;# 
  1397  0891                     	;# 
  1398  0891                     	;# 
  1399  0891                     	;# 
  1400  0892                     	;# 
  1401  0892                     	;# 
  1402  0892                     	;# 
  1403  0893                     	;# 
  1404  0893                     	;# 
  1405  0893                     	;# 
  1406  0893                     	;# 
  1407  0893                     	;# 
  1408  0893                     	;# 
  1409  0894                     	;# 
  1410  0894                     	;# 
  1411  0894                     	;# 
  1412  0895                     	;# 
  1413  0895                     	;# 
  1414  0895                     	;# 
  1415  0896                     	;# 
  1416  0896                     	;# 
  1417  0896                     	;# 
  1418  089B                     	;# 
  1419  0911                     	;# 
  1420  0912                     	;# 
  1421  0913                     	;# 
  1422  0914                     	;# 
  1423  0915                     	;# 
  1424  0916                     	;# 
  1425  0918                     	;# 
  1426  0919                     	;# 
  1427  091A                     	;# 
  1428  091B                     	;# 
  1429  091C                     	;# 
  1430  091D                     	;# 
  1431  091E                     	;# 
  1432  091F                     	;# 
  1433  0E0F                     	;# 
  1434  0E10                     	;# 
  1435  0E11                     	;# 
  1436  0E12                     	;# 
  1437  0E13                     	;# 
  1438  0E14                     	;# 
  1439  0E15                     	;# 
  1440  0E16                     	;# 
  1441  0E17                     	;# 
  1442  0E18                     	;# 
  1443  0E19                     	;# 
  1444  0E1A                     	;# 
  1445  0E1B                     	;# 
  1446  0E1C                     	;# 
  1447  0E1D                     	;# 
  1448  0E1E                     	;# 
  1449  0E1F                     	;# 
  1450  0E20                     	;# 
  1451  0E21                     	;# 
  1452  0E22                     	;# 
  1453  0E24                     	;# 
  1454  0E25                     	;# 
  1455  0E28                     	;# 
  1456  0E29                     	;# 
  1457  0E2A                     	;# 
  1458  0E2B                     	;# 
  1459  0E2C                     	;# 
  1460  0E2D                     	;# 
  1461  0E2E                     	;# 
  1462  0E2F                     	;# 
  1463  0E90                     	;# 
  1464  0E91                     	;# 
  1465  0E92                     	;# 
  1466  0E94                     	;# 
  1467  0E95                     	;# 
  1468  0E9C                     	;# 
  1469  0E9D                     	;# 
  1470  0E9E                     	;# 
  1471  0E9F                     	;# 
  1472  0EA0                     	;# 
  1473  0EA1                     	;# 
  1474  0EA2                     	;# 
  1475  0EA3                     	;# 
  1476  0EA4                     	;# 
  1477  0EA5                     	;# 
  1478  0EA6                     	;# 
  1479  0EA7                     	;# 
  1480  0F0F                     	;# 
  1481  0F10                     	;# 
  1482  0F11                     	;# 
  1483  0F12                     	;# 
  1484  0F13                     	;# 
  1485  0F14                     	;# 
  1486  0F15                     	;# 
  1487  0F16                     	;# 
  1488  0F17                     	;# 
  1489  0F18                     	;# 
  1490  0F19                     	;# 
  1491  0F1A                     	;# 
  1492  0F1B                     	;# 
  1493  0F1C                     	;# 
  1494  0F1D                     	;# 
  1495  0F1E                     	;# 
  1496  0F1F                     	;# 
  1497  0F20                     	;# 
  1498  0F21                     	;# 
  1499  0F22                     	;# 
  1500  0F23                     	;# 
  1501  0F24                     	;# 
  1502  0F25                     	;# 
  1503  0F26                     	;# 
  1504  0F27                     	;# 
  1505  0F28                     	;# 
  1506  0F29                     	;# 
  1507  0F2A                     	;# 
  1508  0F2B                     	;# 
  1509  0F2C                     	;# 
  1510  0F2D                     	;# 
  1511  0F2E                     	;# 
  1512  0F2F                     	;# 
  1513  0F30                     	;# 
  1514  0F31                     	;# 
  1515  0F32                     	;# 
  1516  0F33                     	;# 
  1517  0F34                     	;# 
  1518  0F35                     	;# 
  1519  0F36                     	;# 
  1520  0F37                     	;# 
  1521  0FE4                     	;# 
  1522  0FE5                     	;# 
  1523  0FE6                     	;# 
  1524  0FE7                     	;# 
  1525  0FE8                     	;# 
  1526  0FE9                     	;# 
  1527  0FEA                     	;# 
  1528  0FEB                     	;# 
  1529  0FED                     	;# 
  1530  0FEE                     	;# 
  1531  0FEF                     	;# 
  1532  0000                     	;# 
  1533  0001                     	;# 
  1534  0002                     	;# 
  1535  0003                     	;# 
  1536  0004                     	;# 
  1537  0005                     	;# 
  1538  0006                     	;# 
  1539  0007                     	;# 
  1540  0008                     	;# 
  1541  0009                     	;# 
  1542  000A                     	;# 
  1543  000B                     	;# 
  1544  000C                     	;# 
  1545  000D                     	;# 
  1546  000E                     	;# 
  1547  0010                     	;# 
  1548  0011                     	;# 
  1549  0012                     	;# 
  1550  0013                     	;# 
  1551  0014                     	;# 
  1552  0015                     	;# 
  1553  0015                     	;# 
  1554  0016                     	;# 
  1555  0016                     	;# 
  1556  0017                     	;# 
  1557  0018                     	;# 
  1558  0019                     	;# 
  1559  0019                     	;# 
  1560  001A                     	;# 
  1561  001B                     	;# 
  1562  001C                     	;# 
  1563  001D                     	;# 
  1564  001E                     	;# 
  1565  001F                     	;# 
  1566  008C                     	;# 
  1567  008D                     	;# 
  1568  008E                     	;# 
  1569  0090                     	;# 
  1570  0091                     	;# 
  1571  0092                     	;# 
  1572  0093                     	;# 
  1573  0094                     	;# 
  1574  0097                     	;# 
  1575  009B                     	;# 
  1576  009B                     	;# 
  1577  009C                     	;# 
  1578  009D                     	;# 
  1579  009E                     	;# 
  1580  009F                     	;# 
  1581  010C                     	;# 
  1582  010D                     	;# 
  1583  010E                     	;# 
  1584  0111                     	;# 
  1585  0112                     	;# 
  1586  0113                     	;# 
  1587  0114                     	;# 
  1588  0115                     	;# 
  1589  0116                     	;# 
  1590  0117                     	;# 
  1591  0118                     	;# 
  1592  0119                     	;# 
  1593  018C                     	;# 
  1594  018D                     	;# 
  1595  018E                     	;# 
  1596  0197                     	;# 
  1597  0199                     	;# 
  1598  0199                     	;# 
  1599  0199                     	;# 
  1600  019A                     	;# 
  1601  019A                     	;# 
  1602  019A                     	;# 
  1603  019B                     	;# 
  1604  019B                     	;# 
  1605  019B                     	;# 
  1606  019B                     	;# 
  1607  019B                     	;# 
  1608  019C                     	;# 
  1609  019C                     	;# 
  1610  019C                     	;# 
  1611  019D                     	;# 
  1612  019D                     	;# 
  1613  019D                     	;# 
  1614  019E                     	;# 
  1615  019E                     	;# 
  1616  019E                     	;# 
  1617  019F                     	;# 
  1618  019F                     	;# 
  1619  019F                     	;# 
  1620  019F                     	;# 
  1621  019F                     	;# 
  1622  020C                     	;# 
  1623  020D                     	;# 
  1624  020E                     	;# 
  1625  0211                     	;# 
  1626  0211                     	;# 
  1627  0212                     	;# 
  1628  0212                     	;# 
  1629  0213                     	;# 
  1630  0213                     	;# 
  1631  0214                     	;# 
  1632  0214                     	;# 
  1633  0215                     	;# 
  1634  0215                     	;# 
  1635  0215                     	;# 
  1636  0215                     	;# 
  1637  0216                     	;# 
  1638  0216                     	;# 
  1639  0217                     	;# 
  1640  0217                     	;# 
  1641  0219                     	;# 
  1642  021A                     	;# 
  1643  021B                     	;# 
  1644  021C                     	;# 
  1645  021D                     	;# 
  1646  021D                     	;# 
  1647  021E                     	;# 
  1648  021F                     	;# 
  1649  028C                     	;# 
  1650  028D                     	;# 
  1651  028E                     	;# 
  1652  0291                     	;# 
  1653  0291                     	;# 
  1654  0292                     	;# 
  1655  0293                     	;# 
  1656  0294                     	;# 
  1657  0295                     	;# 
  1658  0295                     	;# 
  1659  0296                     	;# 
  1660  0297                     	;# 
  1661  0298                     	;# 
  1662  029F                     	;# 
  1663  030C                     	;# 
  1664  030D                     	;# 
  1665  030E                     	;# 
  1666  0311                     	;# 
  1667  0311                     	;# 
  1668  0312                     	;# 
  1669  0313                     	;# 
  1670  0314                     	;# 
  1671  0315                     	;# 
  1672  0315                     	;# 
  1673  0316                     	;# 
  1674  0317                     	;# 
  1675  0318                     	;# 
  1676  038C                     	;# 
  1677  038D                     	;# 
  1678  038E                     	;# 
  1679  0391                     	;# 
  1680  0392                     	;# 
  1681  0393                     	;# 
  1682  0394                     	;# 
  1683  0395                     	;# 
  1684  0396                     	;# 
  1685  0397                     	;# 
  1686  0398                     	;# 
  1687  0399                     	;# 
  1688  039A                     	;# 
  1689  039C                     	;# 
  1690  039D                     	;# 
  1691  039E                     	;# 
  1692  039F                     	;# 
  1693  0411                     	;# 
  1694  0411                     	;# 
  1695  0412                     	;# 
  1696  0413                     	;# 
  1697  0414                     	;# 
  1698  0415                     	;# 
  1699  0416                     	;# 
  1700  0417                     	;# 
  1701  0418                     	;# 
  1702  0418                     	;# 
  1703  0419                     	;# 
  1704  041A                     	;# 
  1705  041B                     	;# 
  1706  041C                     	;# 
  1707  041D                     	;# 
  1708  041E                     	;# 
  1709  041F                     	;# 
  1710  0498                     	;# 
  1711  0498                     	;# 
  1712  0499                     	;# 
  1713  049A                     	;# 
  1714  049B                     	;# 
  1715  049B                     	;# 
  1716  049C                     	;# 
  1717  049D                     	;# 
  1718  049E                     	;# 
  1719  049F                     	;# 
  1720  0617                     	;# 
  1721  0618                     	;# 
  1722  0619                     	;# 
  1723  0619                     	;# 
  1724  061A                     	;# 
  1725  061B                     	;# 
  1726  061C                     	;# 
  1727  061C                     	;# 
  1728  061F                     	;# 
  1729  0691                     	;# 
  1730  0692                     	;# 
  1731  0693                     	;# 
  1732  0694                     	;# 
  1733  0695                     	;# 
  1734  0696                     	;# 
  1735  0697                     	;# 
  1736  0698                     	;# 
  1737  0699                     	;# 
  1738  0711                     	;# 
  1739  0712                     	;# 
  1740  0713                     	;# 
  1741  0714                     	;# 
  1742  0715                     	;# 
  1743  0716                     	;# 
  1744  0717                     	;# 
  1745  0718                     	;# 
  1746  0719                     	;# 
  1747  0891                     	;# 
  1748  0891                     	;# 
  1749  0891                     	;# 
  1750  0891                     	;# 
  1751  0891                     	;# 
  1752  0891                     	;# 
  1753  0892                     	;# 
  1754  0892                     	;# 
  1755  0892                     	;# 
  1756  0893                     	;# 
  1757  0893                     	;# 
  1758  0893                     	;# 
  1759  0893                     	;# 
  1760  0893                     	;# 
  1761  0893                     	;# 
  1762  0894                     	;# 
  1763  0894                     	;# 
  1764  0894                     	;# 
  1765  0895                     	;# 
  1766  0895                     	;# 
  1767  0895                     	;# 
  1768  0896                     	;# 
  1769  0896                     	;# 
  1770  0896                     	;# 
  1771  089B                     	;# 
  1772  0911                     	;# 
  1773  0912                     	;# 
  1774  0913                     	;# 
  1775  0914                     	;# 
  1776  0915                     	;# 
  1777  0916                     	;# 
  1778  0918                     	;# 
  1779  0919                     	;# 
  1780  091A                     	;# 
  1781  091B                     	;# 
  1782  091C                     	;# 
  1783  091D                     	;# 
  1784  091E                     	;# 
  1785  091F                     	;# 
  1786  0E0F                     	;# 
  1787  0E10                     	;# 
  1788  0E11                     	;# 
  1789  0E12                     	;# 
  1790  0E13                     	;# 
  1791  0E14                     	;# 
  1792  0E15                     	;# 
  1793  0E16                     	;# 
  1794  0E17                     	;# 
  1795  0E18                     	;# 
  1796  0E19                     	;# 
  1797  0E1A                     	;# 
  1798  0E1B                     	;# 
  1799  0E1C                     	;# 
  1800  0E1D                     	;# 
  1801  0E1E                     	;# 
  1802  0E1F                     	;# 
  1803  0E20                     	;# 
  1804  0E21                     	;# 
  1805  0E22                     	;# 
  1806  0E24                     	;# 
  1807  0E25                     	;# 
  1808  0E28                     	;# 
  1809  0E29                     	;# 
  1810  0E2A                     	;# 
  1811  0E2B                     	;# 
  1812  0E2C                     	;# 
  1813  0E2D                     	;# 
  1814  0E2E                     	;# 
  1815  0E2F                     	;# 
  1816  0E90                     	;# 
  1817  0E91                     	;# 
  1818  0E92                     	;# 
  1819  0E94                     	;# 
  1820  0E95                     	;# 
  1821  0E9C                     	;# 
  1822  0E9D                     	;# 
  1823  0E9E                     	;# 
  1824  0E9F                     	;# 
  1825  0EA0                     	;# 
  1826  0EA1                     	;# 
  1827  0EA2                     	;# 
  1828  0EA3                     	;# 
  1829  0EA4                     	;# 
  1830  0EA5                     	;# 
  1831  0EA6                     	;# 
  1832  0EA7                     	;# 
  1833  0F0F                     	;# 
  1834  0F10                     	;# 
  1835  0F11                     	;# 
  1836  0F12                     	;# 
  1837  0F13                     	;# 
  1838  0F14                     	;# 
  1839  0F15                     	;# 
  1840  0F16                     	;# 
  1841  0F17                     	;# 
  1842  0F18                     	;# 
  1843  0F19                     	;# 
  1844  0F1A                     	;# 
  1845  0F1B                     	;# 
  1846  0F1C                     	;# 
  1847  0F1D                     	;# 
  1848  0F1E                     	;# 
  1849  0F1F                     	;# 
  1850  0F20                     	;# 
  1851  0F21                     	;# 
  1852  0F22                     	;# 
  1853  0F23                     	;# 
  1854  0F24                     	;# 
  1855  0F25                     	;# 
  1856  0F26                     	;# 
  1857  0F27                     	;# 
  1858  0F28                     	;# 
  1859  0F29                     	;# 
  1860  0F2A                     	;# 
  1861  0F2B                     	;# 
  1862  0F2C                     	;# 
  1863  0F2D                     	;# 
  1864  0F2E                     	;# 
  1865  0F2F                     	;# 
  1866  0F30                     	;# 
  1867  0F31                     	;# 
  1868  0F32                     	;# 
  1869  0F33                     	;# 
  1870  0F34                     	;# 
  1871  0F35                     	;# 
  1872  0F36                     	;# 
  1873  0F37                     	;# 
  1874  0FE4                     	;# 
  1875  0FE5                     	;# 
  1876  0FE6                     	;# 
  1877  0FE7                     	;# 
  1878  0FE8                     	;# 
  1879  0FE9                     	;# 
  1880  0FEA                     	;# 
  1881  0FEB                     	;# 
  1882  0FED                     	;# 
  1883  0FEE                     	;# 
  1884  0FEF                     	;# 
  1885  0000                     	;# 
  1886  0001                     	;# 
  1887  0002                     	;# 
  1888  0003                     	;# 
  1889  0004                     	;# 
  1890  0005                     	;# 
  1891  0006                     	;# 
  1892  0007                     	;# 
  1893  0008                     	;# 
  1894  0009                     	;# 
  1895  000A                     	;# 
  1896  000B                     	;# 
  1897  000C                     	;# 
  1898  000D                     	;# 
  1899  000E                     	;# 
  1900  0010                     	;# 
  1901  0011                     	;# 
  1902  0012                     	;# 
  1903  0013                     	;# 
  1904  0014                     	;# 
  1905  0015                     	;# 
  1906  0015                     	;# 
  1907  0016                     	;# 
  1908  0016                     	;# 
  1909  0017                     	;# 
  1910  0018                     	;# 
  1911  0019                     	;# 
  1912  0019                     	;# 
  1913  001A                     	;# 
  1914  001B                     	;# 
  1915  001C                     	;# 
  1916  001D                     	;# 
  1917  001E                     	;# 
  1918  001F                     	;# 
  1919  008C                     	;# 
  1920  008D                     	;# 
  1921  008E                     	;# 
  1922  0090                     	;# 
  1923  0091                     	;# 
  1924  0092                     	;# 
  1925  0093                     	;# 
  1926  0094                     	;# 
  1927  0097                     	;# 
  1928  009B                     	;# 
  1929  009B                     	;# 
  1930  009C                     	;# 
  1931  009D                     	;# 
  1932  009E                     	;# 
  1933  009F                     	;# 
  1934  010C                     	;# 
  1935  010D                     	;# 
  1936  010E                     	;# 
  1937  0111                     	;# 
  1938  0112                     	;# 
  1939  0113                     	;# 
  1940  0114                     	;# 
  1941  0115                     	;# 
  1942  0116                     	;# 
  1943  0117                     	;# 
  1944  0118                     	;# 
  1945  0119                     	;# 
  1946  018C                     	;# 
  1947  018D                     	;# 
  1948  018E                     	;# 
  1949  0197                     	;# 
  1950  0199                     	;# 
  1951  0199                     	;# 
  1952  0199                     	;# 
  1953  019A                     	;# 
  1954  019A                     	;# 
  1955  019A                     	;# 
  1956  019B                     	;# 
  1957  019B                     	;# 
  1958  019B                     	;# 
  1959  019B                     	;# 
  1960  019B                     	;# 
  1961  019C                     	;# 
  1962  019C                     	;# 
  1963  019C                     	;# 
  1964  019D                     	;# 
  1965  019D                     	;# 
  1966  019D                     	;# 
  1967  019E                     	;# 
  1968  019E                     	;# 
  1969  019E                     	;# 
  1970  019F                     	;# 
  1971  019F                     	;# 
  1972  019F                     	;# 
  1973  019F                     	;# 
  1974  019F                     	;# 
  1975  020C                     	;# 
  1976  020D                     	;# 
  1977  020E                     	;# 
  1978  0211                     	;# 
  1979  0211                     	;# 
  1980  0212                     	;# 
  1981  0212                     	;# 
  1982  0213                     	;# 
  1983  0213                     	;# 
  1984  0214                     	;# 
  1985  0214                     	;# 
  1986  0215                     	;# 
  1987  0215                     	;# 
  1988  0215                     	;# 
  1989  0215                     	;# 
  1990  0216                     	;# 
  1991  0216                     	;# 
  1992  0217                     	;# 
  1993  0217                     	;# 
  1994  0219                     	;# 
  1995  021A                     	;# 
  1996  021B                     	;# 
  1997  021C                     	;# 
  1998  021D                     	;# 
  1999  021D                     	;# 
  2000  021E                     	;# 
  2001  021F                     	;# 
  2002  028C                     	;# 
  2003  028D                     	;# 
  2004  028E                     	;# 
  2005  0291                     	;# 
  2006  0291                     	;# 
  2007  0292                     	;# 
  2008  0293                     	;# 
  2009  0294                     	;# 
  2010  0295                     	;# 
  2011  0295                     	;# 
  2012  0296                     	;# 
  2013  0297                     	;# 
  2014  0298                     	;# 
  2015  029F                     	;# 
  2016  030C                     	;# 
  2017  030D                     	;# 
  2018  030E                     	;# 
  2019  0311                     	;# 
  2020  0311                     	;# 
  2021  0312                     	;# 
  2022  0313                     	;# 
  2023  0314                     	;# 
  2024  0315                     	;# 
  2025  0315                     	;# 
  2026  0316                     	;# 
  2027  0317                     	;# 
  2028  0318                     	;# 
  2029  038C                     	;# 
  2030  038D                     	;# 
  2031  038E                     	;# 
  2032  0391                     	;# 
  2033  0392                     	;# 
  2034  0393                     	;# 
  2035  0394                     	;# 
  2036  0395                     	;# 
  2037  0396                     	;# 
  2038  0397                     	;# 
  2039  0398                     	;# 
  2040  0399                     	;# 
  2041  039A                     	;# 
  2042  039C                     	;# 
  2043  039D                     	;# 
  2044  039E                     	;# 
  2045  039F                     	;# 
  2046  0411                     	;# 
  2047  0411                     	;# 
  2048  0412                     	;# 
  2049  0413                     	;# 
  2050  0414                     	;# 
  2051  0415                     	;# 
  2052  0416                     	;# 
  2053  0417                     	;# 
  2054  0418                     	;# 
  2055  0418                     	;# 
  2056  0419                     	;# 
  2057  041A                     	;# 
  2058  041B                     	;# 
  2059  041C                     	;# 
  2060  041D                     	;# 
  2061  041E                     	;# 
  2062  041F                     	;# 
  2063  0498                     	;# 
  2064  0498                     	;# 
  2065  0499                     	;# 
  2066  049A                     	;# 
  2067  049B                     	;# 
  2068  049B                     	;# 
  2069  049C                     	;# 
  2070  049D                     	;# 
  2071  049E                     	;# 
  2072  049F                     	;# 
  2073  0617                     	;# 
  2074  0618                     	;# 
  2075  0619                     	;# 
  2076  0619                     	;# 
  2077  061A                     	;# 
  2078  061B                     	;# 
  2079  061C                     	;# 
  2080  061C                     	;# 
  2081  061F                     	;# 
  2082  0691                     	;# 
  2083  0692                     	;# 
  2084  0693                     	;# 
  2085  0694                     	;# 
  2086  0695                     	;# 
  2087  0696                     	;# 
  2088  0697                     	;# 
  2089  0698                     	;# 
  2090  0699                     	;# 
  2091  0711                     	;# 
  2092  0712                     	;# 
  2093  0713                     	;# 
  2094  0714                     	;# 
  2095  0715                     	;# 
  2096  0716                     	;# 
  2097  0717                     	;# 
  2098  0718                     	;# 
  2099  0719                     	;# 
  2100  0891                     	;# 
  2101  0891                     	;# 
  2102  0891                     	;# 
  2103  0891                     	;# 
  2104  0891                     	;# 
  2105  0891                     	;# 
  2106  0892                     	;# 
  2107  0892                     	;# 
  2108  0892                     	;# 
  2109  0893                     	;# 
  2110  0893                     	;# 
  2111  0893                     	;# 
  2112  0893                     	;# 
  2113  0893                     	;# 
  2114  0893                     	;# 
  2115  0894                     	;# 
  2116  0894                     	;# 
  2117  0894                     	;# 
  2118  0895                     	;# 
  2119  0895                     	;# 
  2120  0895                     	;# 
  2121  0896                     	;# 
  2122  0896                     	;# 
  2123  0896                     	;# 
  2124  089B                     	;# 
  2125  0911                     	;# 
  2126  0912                     	;# 
  2127  0913                     	;# 
  2128  0914                     	;# 
  2129  0915                     	;# 
  2130  0916                     	;# 
  2131  0918                     	;# 
  2132  0919                     	;# 
  2133  091A                     	;# 
  2134  091B                     	;# 
  2135  091C                     	;# 
  2136  091D                     	;# 
  2137  091E                     	;# 
  2138  091F                     	;# 
  2139  0E0F                     	;# 
  2140  0E10                     	;# 
  2141  0E11                     	;# 
  2142  0E12                     	;# 
  2143  0E13                     	;# 
  2144  0E14                     	;# 
  2145  0E15                     	;# 
  2146  0E16                     	;# 
  2147  0E17                     	;# 
  2148  0E18                     	;# 
  2149  0E19                     	;# 
  2150  0E1A                     	;# 
  2151  0E1B                     	;# 
  2152  0E1C                     	;# 
  2153  0E1D                     	;# 
  2154  0E1E                     	;# 
  2155  0E1F                     	;# 
  2156  0E20                     	;# 
  2157  0E21                     	;# 
  2158  0E22                     	;# 
  2159  0E24                     	;# 
  2160  0E25                     	;# 
  2161  0E28                     	;# 
  2162  0E29                     	;# 
  2163  0E2A                     	;# 
  2164  0E2B                     	;# 
  2165  0E2C                     	;# 
  2166  0E2D                     	;# 
  2167  0E2E                     	;# 
  2168  0E2F                     	;# 
  2169  0E90                     	;# 
  2170  0E91                     	;# 
  2171  0E92                     	;# 
  2172  0E94                     	;# 
  2173  0E95                     	;# 
  2174  0E9C                     	;# 
  2175  0E9D                     	;# 
  2176  0E9E                     	;# 
  2177  0E9F                     	;# 
  2178  0EA0                     	;# 
  2179  0EA1                     	;# 
  2180  0EA2                     	;# 
  2181  0EA3                     	;# 
  2182  0EA4                     	;# 
  2183  0EA5                     	;# 
  2184  0EA6                     	;# 
  2185  0EA7                     	;# 
  2186  0F0F                     	;# 
  2187  0F10                     	;# 
  2188  0F11                     	;# 
  2189  0F12                     	;# 
  2190  0F13                     	;# 
  2191  0F14                     	;# 
  2192  0F15                     	;# 
  2193  0F16                     	;# 
  2194  0F17                     	;# 
  2195  0F18                     	;# 
  2196  0F19                     	;# 
  2197  0F1A                     	;# 
  2198  0F1B                     	;# 
  2199  0F1C                     	;# 
  2200  0F1D                     	;# 
  2201  0F1E                     	;# 
  2202  0F1F                     	;# 
  2203  0F20                     	;# 
  2204  0F21                     	;# 
  2205  0F22                     	;# 
  2206  0F23                     	;# 
  2207  0F24                     	;# 
  2208  0F25                     	;# 
  2209  0F26                     	;# 
  2210  0F27                     	;# 
  2211  0F28                     	;# 
  2212  0F29                     	;# 
  2213  0F2A                     	;# 
  2214  0F2B                     	;# 
  2215  0F2C                     	;# 
  2216  0F2D                     	;# 
  2217  0F2E                     	;# 
  2218  0F2F                     	;# 
  2219  0F30                     	;# 
  2220  0F31                     	;# 
  2221  0F32                     	;# 
  2222  0F33                     	;# 
  2223  0F34                     	;# 
  2224  0F35                     	;# 
  2225  0F36                     	;# 
  2226  0F37                     	;# 
  2227  0FE4                     	;# 
  2228  0FE5                     	;# 
  2229  0FE6                     	;# 
  2230  0FE7                     	;# 
  2231  0FE8                     	;# 
  2232  0FE9                     	;# 
  2233  0FEA                     	;# 
  2234  0FEB                     	;# 
  2235  0FED                     	;# 
  2236  0FEE                     	;# 
  2237  0FEF                     	;# 
  2238  0000                     	;# 
  2239  0001                     	;# 
  2240  0002                     	;# 
  2241  0003                     	;# 
  2242  0004                     	;# 
  2243  0005                     	;# 
  2244  0006                     	;# 
  2245  0007                     	;# 
  2246  0008                     	;# 
  2247  0009                     	;# 
  2248  000A                     	;# 
  2249  000B                     	;# 
  2250  000C                     	;# 
  2251  000D                     	;# 
  2252  000E                     	;# 
  2253  0010                     	;# 
  2254  0011                     	;# 
  2255  0012                     	;# 
  2256  0013                     	;# 
  2257  0014                     	;# 
  2258  0015                     	;# 
  2259  0015                     	;# 
  2260  0016                     	;# 
  2261  0016                     	;# 
  2262  0017                     	;# 
  2263  0018                     	;# 
  2264  0019                     	;# 
  2265  0019                     	;# 
  2266  001A                     	;# 
  2267  001B                     	;# 
  2268  001C                     	;# 
  2269  001D                     	;# 
  2270  001E                     	;# 
  2271  001F                     	;# 
  2272  008C                     	;# 
  2273  008D                     	;# 
  2274  008E                     	;# 
  2275  0090                     	;# 
  2276  0091                     	;# 
  2277  0092                     	;# 
  2278  0093                     	;# 
  2279  0094                     	;# 
  2280  0097                     	;# 
  2281  009B                     	;# 
  2282  009B                     	;# 
  2283  009C                     	;# 
  2284  009D                     	;# 
  2285  009E                     	;# 
  2286  009F                     	;# 
  2287  010C                     	;# 
  2288  010D                     	;# 
  2289  010E                     	;# 
  2290  0111                     	;# 
  2291  0112                     	;# 
  2292  0113                     	;# 
  2293  0114                     	;# 
  2294  0115                     	;# 
  2295  0116                     	;# 
  2296  0117                     	;# 
  2297  0118                     	;# 
  2298  0119                     	;# 
  2299  018C                     	;# 
  2300  018D                     	;# 
  2301  018E                     	;# 
  2302  0197                     	;# 
  2303  0199                     	;# 
  2304  0199                     	;# 
  2305  0199                     	;# 
  2306  019A                     	;# 
  2307  019A                     	;# 
  2308  019A                     	;# 
  2309  019B                     	;# 
  2310  019B                     	;# 
  2311  019B                     	;# 
  2312  019B                     	;# 
  2313  019B                     	;# 
  2314  019C                     	;# 
  2315  019C                     	;# 
  2316  019C                     	;# 
  2317  019D                     	;# 
  2318  019D                     	;# 
  2319  019D                     	;# 
  2320  019E                     	;# 
  2321  019E                     	;# 
  2322  019E                     	;# 
  2323  019F                     	;# 
  2324  019F                     	;# 
  2325  019F                     	;# 
  2326  019F                     	;# 
  2327  019F                     	;# 
  2328  020C                     	;# 
  2329  020D                     	;# 
  2330  020E                     	;# 
  2331  0211                     	;# 
  2332  0211                     	;# 
  2333  0212                     	;# 
  2334  0212                     	;# 
  2335  0213                     	;# 
  2336  0213                     	;# 
  2337  0214                     	;# 
  2338  0214                     	;# 
  2339  0215                     	;# 
  2340  0215                     	;# 
  2341  0215                     	;# 
  2342  0215                     	;# 
  2343  0216                     	;# 
  2344  0216                     	;# 
  2345  0217                     	;# 
  2346  0217                     	;# 
  2347  0219                     	;# 
  2348  021A                     	;# 
  2349  021B                     	;# 
  2350  021C                     	;# 
  2351  021D                     	;# 
  2352  021D                     	;# 
  2353  021E                     	;# 
  2354  021F                     	;# 
  2355  028C                     	;# 
  2356  028D                     	;# 
  2357  028E                     	;# 
  2358  0291                     	;# 
  2359  0291                     	;# 
  2360  0292                     	;# 
  2361  0293                     	;# 
  2362  0294                     	;# 
  2363  0295                     	;# 
  2364  0295                     	;# 
  2365  0296                     	;# 
  2366  0297                     	;# 
  2367  0298                     	;# 
  2368  029F                     	;# 
  2369  030C                     	;# 
  2370  030D                     	;# 
  2371  030E                     	;# 
  2372  0311                     	;# 
  2373  0311                     	;# 
  2374  0312                     	;# 
  2375  0313                     	;# 
  2376  0314                     	;# 
  2377  0315                     	;# 
  2378  0315                     	;# 
  2379  0316                     	;# 
  2380  0317                     	;# 
  2381  0318                     	;# 
  2382  038C                     	;# 
  2383  038D                     	;# 
  2384  038E                     	;# 
  2385  0391                     	;# 
  2386  0392                     	;# 
  2387  0393                     	;# 
  2388  0394                     	;# 
  2389  0395                     	;# 
  2390  0396                     	;# 
  2391  0397                     	;# 
  2392  0398                     	;# 
  2393  0399                     	;# 
  2394  039A                     	;# 
  2395  039C                     	;# 
  2396  039D                     	;# 
  2397  039E                     	;# 
  2398  039F                     	;# 
  2399  0411                     	;# 
  2400  0411                     	;# 
  2401  0412                     	;# 
  2402  0413                     	;# 
  2403  0414                     	;# 
  2404  0415                     	;# 
  2405  0416                     	;# 
  2406  0417                     	;# 
  2407  0418                     	;# 
  2408  0418                     	;# 
  2409  0419                     	;# 
  2410  041A                     	;# 
  2411  041B                     	;# 
  2412  041C                     	;# 
  2413  041D                     	;# 
  2414  041E                     	;# 
  2415  041F                     	;# 
  2416  0498                     	;# 
  2417  0498                     	;# 
  2418  0499                     	;# 
  2419  049A                     	;# 
  2420  049B                     	;# 
  2421  049B                     	;# 
  2422  049C                     	;# 
  2423  049D                     	;# 
  2424  049E                     	;# 
  2425  049F                     	;# 
  2426  0617                     	;# 
  2427  0618                     	;# 
  2428  0619                     	;# 
  2429  0619                     	;# 
  2430  061A                     	;# 
  2431  061B                     	;# 
  2432  061C                     	;# 
  2433  061C                     	;# 
  2434  061F                     	;# 
  2435  0691                     	;# 
  2436  0692                     	;# 
  2437  0693                     	;# 
  2438  0694                     	;# 
  2439  0695                     	;# 
  2440  0696                     	;# 
  2441  0697                     	;# 
  2442  0698                     	;# 
  2443  0699                     	;# 
  2444  0711                     	;# 
  2445  0712                     	;# 
  2446  0713                     	;# 
  2447  0714                     	;# 
  2448  0715                     	;# 
  2449  0716                     	;# 
  2450  0717                     	;# 
  2451  0718                     	;# 
  2452  0719                     	;# 
  2453  0891                     	;# 
  2454  0891                     	;# 
  2455  0891                     	;# 
  2456  0891                     	;# 
  2457  0891                     	;# 
  2458  0891                     	;# 
  2459  0892                     	;# 
  2460  0892                     	;# 
  2461  0892                     	;# 
  2462  0893                     	;# 
  2463  0893                     	;# 
  2464  0893                     	;# 
  2465  0893                     	;# 
  2466  0893                     	;# 
  2467  0893                     	;# 
  2468  0894                     	;# 
  2469  0894                     	;# 
  2470  0894                     	;# 
  2471  0895                     	;# 
  2472  0895                     	;# 
  2473  0895                     	;# 
  2474  0896                     	;# 
  2475  0896                     	;# 
  2476  0896                     	;# 
  2477  089B                     	;# 
  2478  0911                     	;# 
  2479  0912                     	;# 
  2480  0913                     	;# 
  2481  0914                     	;# 
  2482  0915                     	;# 
  2483  0916                     	;# 
  2484  0918                     	;# 
  2485  0919                     	;# 
  2486  091A                     	;# 
  2487  091B                     	;# 
  2488  091C                     	;# 
  2489  091D                     	;# 
  2490  091E                     	;# 
  2491  091F                     	;# 
  2492  0E0F                     	;# 
  2493  0E10                     	;# 
  2494  0E11                     	;# 
  2495  0E12                     	;# 
  2496  0E13                     	;# 
  2497  0E14                     	;# 
  2498  0E15                     	;# 
  2499  0E16                     	;# 
  2500  0E17                     	;# 
  2501  0E18                     	;# 
  2502  0E19                     	;# 
  2503  0E1A                     	;# 
  2504  0E1B                     	;# 
  2505  0E1C                     	;# 
  2506  0E1D                     	;# 
  2507  0E1E                     	;# 
  2508  0E1F                     	;# 
  2509  0E20                     	;# 
  2510  0E21                     	;# 
  2511  0E22                     	;# 
  2512  0E24                     	;# 
  2513  0E25                     	;# 
  2514  0E28                     	;# 
  2515  0E29                     	;# 
  2516  0E2A                     	;# 
  2517  0E2B                     	;# 
  2518  0E2C                     	;# 
  2519  0E2D                     	;# 
  2520  0E2E                     	;# 
  2521  0E2F                     	;# 
  2522  0E90                     	;# 
  2523  0E91                     	;# 
  2524  0E92                     	;# 
  2525  0E94                     	;# 
  2526  0E95                     	;# 
  2527  0E9C                     	;# 
  2528  0E9D                     	;# 
  2529  0E9E                     	;# 
  2530  0E9F                     	;# 
  2531  0EA0                     	;# 
  2532  0EA1                     	;# 
  2533  0EA2                     	;# 
  2534  0EA3                     	;# 
  2535  0EA4                     	;# 
  2536  0EA5                     	;# 
  2537  0EA6                     	;# 
  2538  0EA7                     	;# 
  2539  0F0F                     	;# 
  2540  0F10                     	;# 
  2541  0F11                     	;# 
  2542  0F12                     	;# 
  2543  0F13                     	;# 
  2544  0F14                     	;# 
  2545  0F15                     	;# 
  2546  0F16                     	;# 
  2547  0F17                     	;# 
  2548  0F18                     	;# 
  2549  0F19                     	;# 
  2550  0F1A                     	;# 
  2551  0F1B                     	;# 
  2552  0F1C                     	;# 
  2553  0F1D                     	;# 
  2554  0F1E                     	;# 
  2555  0F1F                     	;# 
  2556  0F20                     	;# 
  2557  0F21                     	;# 
  2558  0F22                     	;# 
  2559  0F23                     	;# 
  2560  0F24                     	;# 
  2561  0F25                     	;# 
  2562  0F26                     	;# 
  2563  0F27                     	;# 
  2564  0F28                     	;# 
  2565  0F29                     	;# 
  2566  0F2A                     	;# 
  2567  0F2B                     	;# 
  2568  0F2C                     	;# 
  2569  0F2D                     	;# 
  2570  0F2E                     	;# 
  2571  0F2F                     	;# 
  2572  0F30                     	;# 
  2573  0F31                     	;# 
  2574  0F32                     	;# 
  2575  0F33                     	;# 
  2576  0F34                     	;# 
  2577  0F35                     	;# 
  2578  0F36                     	;# 
  2579  0F37                     	;# 
  2580  0FE4                     	;# 
  2581  0FE5                     	;# 
  2582  0FE6                     	;# 
  2583  0FE7                     	;# 
  2584  0FE8                     	;# 
  2585  0FE9                     	;# 
  2586  0FEA                     	;# 
  2587  0FEB                     	;# 
  2588  0FED                     	;# 
  2589  0FEE                     	;# 
  2590  0FEF                     	;# 
  2591  0000                     	;# 
  2592  0001                     	;# 
  2593  0002                     	;# 
  2594  0003                     	;# 
  2595  0004                     	;# 
  2596  0005                     	;# 
  2597  0006                     	;# 
  2598  0007                     	;# 
  2599  0008                     	;# 
  2600  0009                     	;# 
  2601  000A                     	;# 
  2602  000B                     	;# 
  2603  000C                     	;# 
  2604  000D                     	;# 
  2605  000E                     	;# 
  2606  0010                     	;# 
  2607  0011                     	;# 
  2608  0012                     	;# 
  2609  0013                     	;# 
  2610  0014                     	;# 
  2611  0015                     	;# 
  2612  0015                     	;# 
  2613  0016                     	;# 
  2614  0016                     	;# 
  2615  0017                     	;# 
  2616  0018                     	;# 
  2617  0019                     	;# 
  2618  0019                     	;# 
  2619  001A                     	;# 
  2620  001B                     	;# 
  2621  001C                     	;# 
  2622  001D                     	;# 
  2623  001E                     	;# 
  2624  001F                     	;# 
  2625  008C                     	;# 
  2626  008D                     	;# 
  2627  008E                     	;# 
  2628  0090                     	;# 
  2629  0091                     	;# 
  2630  0092                     	;# 
  2631  0093                     	;# 
  2632  0094                     	;# 
  2633  0097                     	;# 
  2634  009B                     	;# 
  2635  009B                     	;# 
  2636  009C                     	;# 
  2637  009D                     	;# 
  2638  009E                     	;# 
  2639  009F                     	;# 
  2640  010C                     	;# 
  2641  010D                     	;# 
  2642  010E                     	;# 
  2643  0111                     	;# 
  2644  0112                     	;# 
  2645  0113                     	;# 
  2646  0114                     	;# 
  2647  0115                     	;# 
  2648  0116                     	;# 
  2649  0117                     	;# 
  2650  0118                     	;# 
  2651  0119                     	;# 
  2652  018C                     	;# 
  2653  018D                     	;# 
  2654  018E                     	;# 
  2655  0197                     	;# 
  2656  0199                     	;# 
  2657  0199                     	;# 
  2658  0199                     	;# 
  2659  019A                     	;# 
  2660  019A                     	;# 
  2661  019A                     	;# 
  2662  019B                     	;# 
  2663  019B                     	;# 
  2664  019B                     	;# 
  2665  019B                     	;# 
  2666  019B                     	;# 
  2667  019C                     	;# 
  2668  019C                     	;# 
  2669  019C                     	;# 
  2670  019D                     	;# 
  2671  019D                     	;# 
  2672  019D                     	;# 
  2673  019E                     	;# 
  2674  019E                     	;# 
  2675  019E                     	;# 
  2676  019F                     	;# 
  2677  019F                     	;# 
  2678  019F                     	;# 
  2679  019F                     	;# 
  2680  019F                     	;# 
  2681  020C                     	;# 
  2682  020D                     	;# 
  2683  020E                     	;# 
  2684  0211                     	;# 
  2685  0211                     	;# 
  2686  0212                     	;# 
  2687  0212                     	;# 
  2688  0213                     	;# 
  2689  0213                     	;# 
  2690  0214                     	;# 
  2691  0214                     	;# 
  2692  0215                     	;# 
  2693  0215                     	;# 
  2694  0215                     	;# 
  2695  0215                     	;# 
  2696  0216                     	;# 
  2697  0216                     	;# 
  2698  0217                     	;# 
  2699  0217                     	;# 
  2700  0219                     	;# 
  2701  021A                     	;# 
  2702  021B                     	;# 
  2703  021C                     	;# 
  2704  021D                     	;# 
  2705  021D                     	;# 
  2706  021E                     	;# 
  2707  021F                     	;# 
  2708  028C                     	;# 
  2709  028D                     	;# 
  2710  028E                     	;# 
  2711  0291                     	;# 
  2712  0291                     	;# 
  2713  0292                     	;# 
  2714  0293                     	;# 
  2715  0294                     	;# 
  2716  0295                     	;# 
  2717  0295                     	;# 
  2718  0296                     	;# 
  2719  0297                     	;# 
  2720  0298                     	;# 
  2721  029F                     	;# 
  2722  030C                     	;# 
  2723  030D                     	;# 
  2724  030E                     	;# 
  2725  0311                     	;# 
  2726  0311                     	;# 
  2727  0312                     	;# 
  2728  0313                     	;# 
  2729  0314                     	;# 
  2730  0315                     	;# 
  2731  0315                     	;# 
  2732  0316                     	;# 
  2733  0317                     	;# 
  2734  0318                     	;# 
  2735  038C                     	;# 
  2736  038D                     	;# 
  2737  038E                     	;# 
  2738  0391                     	;# 
  2739  0392                     	;# 
  2740  0393                     	;# 
  2741  0394                     	;# 
  2742  0395                     	;# 
  2743  0396                     	;# 
  2744  0397                     	;# 
  2745  0398                     	;# 
  2746  0399                     	;# 
  2747  039A                     	;# 
  2748  039C                     	;# 
  2749  039D                     	;# 
  2750  039E                     	;# 
  2751  039F                     	;# 
  2752  0411                     	;# 
  2753  0411                     	;# 
  2754  0412                     	;# 
  2755  0413                     	;# 
  2756  0414                     	;# 
  2757  0415                     	;# 
  2758  0416                     	;# 
  2759  0417                     	;# 
  2760  0418                     	;# 
  2761  0418                     	;# 
  2762  0419                     	;# 
  2763  041A                     	;# 
  2764  041B                     	;# 
  2765  041C                     	;# 
  2766  041D                     	;# 
  2767  041E                     	;# 
  2768  041F                     	;# 
  2769  0498                     	;# 
  2770  0498                     	;# 
  2771  0499                     	;# 
  2772  049A                     	;# 
  2773  049B                     	;# 
  2774  049B                     	;# 
  2775  049C                     	;# 
  2776  049D                     	;# 
  2777  049E                     	;# 
  2778  049F                     	;# 
  2779  0617                     	;# 
  2780  0618                     	;# 
  2781  0619                     	;# 
  2782  0619                     	;# 
  2783  061A                     	;# 
  2784  061B                     	;# 
  2785  061C                     	;# 
  2786  061C                     	;# 
  2787  061F                     	;# 
  2788  0691                     	;# 
  2789  0692                     	;# 
  2790  0693                     	;# 
  2791  0694                     	;# 
  2792  0695                     	;# 
  2793  0696                     	;# 
  2794  0697                     	;# 
  2795  0698                     	;# 
  2796  0699                     	;# 
  2797  0711                     	;# 
  2798  0712                     	;# 
  2799  0713                     	;# 
  2800  0714                     	;# 
  2801  0715                     	;# 
  2802  0716                     	;# 
  2803  0717                     	;# 
  2804  0718                     	;# 
  2805  0719                     	;# 
  2806  0891                     	;# 
  2807  0891                     	;# 
  2808  0891                     	;# 
  2809  0891                     	;# 
  2810  0891                     	;# 
  2811  0891                     	;# 
  2812  0892                     	;# 
  2813  0892                     	;# 
  2814  0892                     	;# 
  2815  0893                     	;# 
  2816  0893                     	;# 
  2817  0893                     	;# 
  2818  0893                     	;# 
  2819  0893                     	;# 
  2820  0893                     	;# 
  2821  0894                     	;# 
  2822  0894                     	;# 
  2823  0894                     	;# 
  2824  0895                     	;# 
  2825  0895                     	;# 
  2826  0895                     	;# 
  2827  0896                     	;# 
  2828  0896                     	;# 
  2829  0896                     	;# 
  2830  089B                     	;# 
  2831  0911                     	;# 
  2832  0912                     	;# 
  2833  0913                     	;# 
  2834  0914                     	;# 
  2835  0915                     	;# 
  2836  0916                     	;# 
  2837  0918                     	;# 
  2838  0919                     	;# 
  2839  091A                     	;# 
  2840  091B                     	;# 
  2841  091C                     	;# 
  2842  091D                     	;# 
  2843  091E                     	;# 
  2844  091F                     	;# 
  2845  0E0F                     	;# 
  2846  0E10                     	;# 
  2847  0E11                     	;# 
  2848  0E12                     	;# 
  2849  0E13                     	;# 
  2850  0E14                     	;# 
  2851  0E15                     	;# 
  2852  0E16                     	;# 
  2853  0E17                     	;# 
  2854  0E18                     	;# 
  2855  0E19                     	;# 
  2856  0E1A                     	;# 
  2857  0E1B                     	;# 
  2858  0E1C                     	;# 
  2859  0E1D                     	;# 
  2860  0E1E                     	;# 
  2861  0E1F                     	;# 
  2862  0E20                     	;# 
  2863  0E21                     	;# 
  2864  0E22                     	;# 
  2865  0E24                     	;# 
  2866  0E25                     	;# 
  2867  0E28                     	;# 
  2868  0E29                     	;# 
  2869  0E2A                     	;# 
  2870  0E2B                     	;# 
  2871  0E2C                     	;# 
  2872  0E2D                     	;# 
  2873  0E2E                     	;# 
  2874  0E2F                     	;# 
  2875  0E90                     	;# 
  2876  0E91                     	;# 
  2877  0E92                     	;# 
  2878  0E94                     	;# 
  2879  0E95                     	;# 
  2880  0E9C                     	;# 
  2881  0E9D                     	;# 
  2882  0E9E                     	;# 
  2883  0E9F                     	;# 
  2884  0EA0                     	;# 
  2885  0EA1                     	;# 
  2886  0EA2                     	;# 
  2887  0EA3                     	;# 
  2888  0EA4                     	;# 
  2889  0EA5                     	;# 
  2890  0EA6                     	;# 
  2891  0EA7                     	;# 
  2892  0F0F                     	;# 
  2893  0F10                     	;# 
  2894  0F11                     	;# 
  2895  0F12                     	;# 
  2896  0F13                     	;# 
  2897  0F14                     	;# 
  2898  0F15                     	;# 
  2899  0F16                     	;# 
  2900  0F17                     	;# 
  2901  0F18                     	;# 
  2902  0F19                     	;# 
  2903  0F1A                     	;# 
  2904  0F1B                     	;# 
  2905  0F1C                     	;# 
  2906  0F1D                     	;# 
  2907  0F1E                     	;# 
  2908  0F1F                     	;# 
  2909  0F20                     	;# 
  2910  0F21                     	;# 
  2911  0F22                     	;# 
  2912  0F23                     	;# 
  2913  0F24                     	;# 
  2914  0F25                     	;# 
  2915  0F26                     	;# 
  2916  0F27                     	;# 
  2917  0F28                     	;# 
  2918  0F29                     	;# 
  2919  0F2A                     	;# 
  2920  0F2B                     	;# 
  2921  0F2C                     	;# 
  2922  0F2D                     	;# 
  2923  0F2E                     	;# 
  2924  0F2F                     	;# 
  2925  0F30                     	;# 
  2926  0F31                     	;# 
  2927  0F32                     	;# 
  2928  0F33                     	;# 
  2929  0F34                     	;# 
  2930  0F35                     	;# 
  2931  0F36                     	;# 
  2932  0F37                     	;# 
  2933  0FE4                     	;# 
  2934  0FE5                     	;# 
  2935  0FE6                     	;# 
  2936  0FE7                     	;# 
  2937  0FE8                     	;# 
  2938  0FE9                     	;# 
  2939  0FEA                     	;# 
  2940  0FEB                     	;# 
  2941  0FED                     	;# 
  2942  0FEE                     	;# 
  2943  0FEF                     	;# 
  2944  0000                     	;# 
  2945  0001                     	;# 
  2946  0002                     	;# 
  2947  0003                     	;# 
  2948  0004                     	;# 
  2949  0005                     	;# 
  2950  0006                     	;# 
  2951  0007                     	;# 
  2952  0008                     	;# 
  2953  0009                     	;# 
  2954  000A                     	;# 
  2955  000B                     	;# 
  2956  000C                     	;# 
  2957  000D                     	;# 
  2958  000E                     	;# 
  2959  0010                     	;# 
  2960  0011                     	;# 
  2961  0012                     	;# 
  2962  0013                     	;# 
  2963  0014                     	;# 
  2964  0015                     	;# 
  2965  0015                     	;# 
  2966  0016                     	;# 
  2967  0016                     	;# 
  2968  0017                     	;# 
  2969  0018                     	;# 
  2970  0019                     	;# 
  2971  0019                     	;# 
  2972  001A                     	;# 
  2973  001B                     	;# 
  2974  001C                     	;# 
  2975  001D                     	;# 
  2976  001E                     	;# 
  2977  001F                     	;# 
  2978  008C                     	;# 
  2979  008D                     	;# 
  2980  008E                     	;# 
  2981  0090                     	;# 
  2982  0091                     	;# 
  2983  0092                     	;# 
  2984  0093                     	;# 
  2985  0094                     	;# 
  2986  0097                     	;# 
  2987  009B                     	;# 
  2988  009B                     	;# 
  2989  009C                     	;# 
  2990  009D                     	;# 
  2991  009E                     	;# 
  2992  009F                     	;# 
  2993  010C                     	;# 
  2994  010D                     	;# 
  2995  010E                     	;# 
  2996  0111                     	;# 
  2997  0112                     	;# 
  2998  0113                     	;# 
  2999  0114                     	;# 
  3000  0115                     	;# 
  3001  0116                     	;# 
  3002  0117                     	;# 
  3003  0118                     	;# 
  3004  0119                     	;# 
  3005  018C                     	;# 
  3006  018D                     	;# 
  3007  018E                     	;# 
  3008  0197                     	;# 
  3009  0199                     	;# 
  3010  0199                     	;# 
  3011  0199                     	;# 
  3012  019A                     	;# 
  3013  019A                     	;# 
  3014  019A                     	;# 
  3015  019B                     	;# 
  3016  019B                     	;# 
  3017  019B                     	;# 
  3018  019B                     	;# 
  3019  019B                     	;# 
  3020  019C                     	;# 
  3021  019C                     	;# 
  3022  019C                     	;# 
  3023  019D                     	;# 
  3024  019D                     	;# 
  3025  019D                     	;# 
  3026  019E                     	;# 
  3027  019E                     	;# 
  3028  019E                     	;# 
  3029  019F                     	;# 
  3030  019F                     	;# 
  3031  019F                     	;# 
  3032  019F                     	;# 
  3033  019F                     	;# 
  3034  020C                     	;# 
  3035  020D                     	;# 
  3036  020E                     	;# 
  3037  0211                     	;# 
  3038  0211                     	;# 
  3039  0212                     	;# 
  3040  0212                     	;# 
  3041  0213                     	;# 
  3042  0213                     	;# 
  3043  0214                     	;# 
  3044  0214                     	;# 
  3045  0215                     	;# 
  3046  0215                     	;# 
  3047  0215                     	;# 
  3048  0215                     	;# 
  3049  0216                     	;# 
  3050  0216                     	;# 
  3051  0217                     	;# 
  3052  0217                     	;# 
  3053  0219                     	;# 
  3054  021A                     	;# 
  3055  021B                     	;# 
  3056  021C                     	;# 
  3057  021D                     	;# 
  3058  021D                     	;# 
  3059  021E                     	;# 
  3060  021F                     	;# 
  3061  028C                     	;# 
  3062  028D                     	;# 
  3063  028E                     	;# 
  3064  0291                     	;# 
  3065  0291                     	;# 
  3066  0292                     	;# 
  3067  0293                     	;# 
  3068  0294                     	;# 
  3069  0295                     	;# 
  3070  0295                     	;# 
  3071  0296                     	;# 
  3072  0297                     	;# 
  3073  0298                     	;# 
  3074  029F                     	;# 
  3075  030C                     	;# 
  3076  030D                     	;# 
  3077  030E                     	;# 
  3078  0311                     	;# 
  3079  0311                     	;# 
  3080  0312                     	;# 
  3081  0313                     	;# 
  3082  0314                     	;# 
  3083  0315                     	;# 
  3084  0315                     	;# 
  3085  0316                     	;# 
  3086  0317                     	;# 
  3087  0318                     	;# 
  3088  038C                     	;# 
  3089  038D                     	;# 
  3090  038E                     	;# 
  3091  0391                     	;# 
  3092  0392                     	;# 
  3093  0393                     	;# 
  3094  0394                     	;# 
  3095  0395                     	;# 
  3096  0396                     	;# 
  3097  0397                     	;# 
  3098  0398                     	;# 
  3099  0399                     	;# 
  3100  039A                     	;# 
  3101  039C                     	;# 
  3102  039D                     	;# 
  3103  039E                     	;# 
  3104  039F                     	;# 
  3105  0411                     	;# 
  3106  0411                     	;# 
  3107  0412                     	;# 
  3108  0413                     	;# 
  3109  0414                     	;# 
  3110  0415                     	;# 
  3111  0416                     	;# 
  3112  0417                     	;# 
  3113  0418                     	;# 
  3114  0418                     	;# 
  3115  0419                     	;# 
  3116  041A                     	;# 
  3117  041B                     	;# 
  3118  041C                     	;# 
  3119  041D                     	;# 
  3120  041E                     	;# 
  3121  041F                     	;# 
  3122  0498                     	;# 
  3123  0498                     	;# 
  3124  0499                     	;# 
  3125  049A                     	;# 
  3126  049B                     	;# 
  3127  049B                     	;# 
  3128  049C                     	;# 
  3129  049D                     	;# 
  3130  049E                     	;# 
  3131  049F                     	;# 
  3132  0617                     	;# 
  3133  0618                     	;# 
  3134  0619                     	;# 
  3135  0619                     	;# 
  3136  061A                     	;# 
  3137  061B                     	;# 
  3138  061C                     	;# 
  3139  061C                     	;# 
  3140  061F                     	;# 
  3141  0691                     	;# 
  3142  0692                     	;# 
  3143  0693                     	;# 
  3144  0694                     	;# 
  3145  0695                     	;# 
  3146  0696                     	;# 
  3147  0697                     	;# 
  3148  0698                     	;# 
  3149  0699                     	;# 
  3150  0711                     	;# 
  3151  0712                     	;# 
  3152  0713                     	;# 
  3153  0714                     	;# 
  3154  0715                     	;# 
  3155  0716                     	;# 
  3156  0717                     	;# 
  3157  0718                     	;# 
  3158  0719                     	;# 
  3159  0891                     	;# 
  3160  0891                     	;# 
  3161  0891                     	;# 
  3162  0891                     	;# 
  3163  0891                     	;# 
  3164  0891                     	;# 
  3165  0892                     	;# 
  3166  0892                     	;# 
  3167  0892                     	;# 
  3168  0893                     	;# 
  3169  0893                     	;# 
  3170  0893                     	;# 
  3171  0893                     	;# 
  3172  0893                     	;# 
  3173  0893                     	;# 
  3174  0894                     	;# 
  3175  0894                     	;# 
  3176  0894                     	;# 
  3177  0895                     	;# 
  3178  0895                     	;# 
  3179  0895                     	;# 
  3180  0896                     	;# 
  3181  0896                     	;# 
  3182  0896                     	;# 
  3183  089B                     	;# 
  3184  0911                     	;# 
  3185  0912                     	;# 
  3186  0913                     	;# 
  3187  0914                     	;# 
  3188  0915                     	;# 
  3189  0916                     	;# 
  3190  0918                     	;# 
  3191  0919                     	;# 
  3192  091A                     	;# 
  3193  091B                     	;# 
  3194  091C                     	;# 
  3195  091D                     	;# 
  3196  091E                     	;# 
  3197  091F                     	;# 
  3198  0E0F                     	;# 
  3199  0E10                     	;# 
  3200  0E11                     	;# 
  3201  0E12                     	;# 
  3202  0E13                     	;# 
  3203  0E14                     	;# 
  3204  0E15                     	;# 
  3205  0E16                     	;# 
  3206  0E17                     	;# 
  3207  0E18                     	;# 
  3208  0E19                     	;# 
  3209  0E1A                     	;# 
  3210  0E1B                     	;# 
  3211  0E1C                     	;# 
  3212  0E1D                     	;# 
  3213  0E1E                     	;# 
  3214  0E1F                     	;# 
  3215  0E20                     	;# 
  3216  0E21                     	;# 
  3217  0E22                     	;# 
  3218  0E24                     	;# 
  3219  0E25                     	;# 
  3220  0E28                     	;# 
  3221  0E29                     	;# 
  3222  0E2A                     	;# 
  3223  0E2B                     	;# 
  3224  0E2C                     	;# 
  3225  0E2D                     	;# 
  3226  0E2E                     	;# 
  3227  0E2F                     	;# 
  3228  0E90                     	;# 
  3229  0E91                     	;# 
  3230  0E92                     	;# 
  3231  0E94                     	;# 
  3232  0E95                     	;# 
  3233  0E9C                     	;# 
  3234  0E9D                     	;# 
  3235  0E9E                     	;# 
  3236  0E9F                     	;# 
  3237  0EA0                     	;# 
  3238  0EA1                     	;# 
  3239  0EA2                     	;# 
  3240  0EA3                     	;# 
  3241  0EA4                     	;# 
  3242  0EA5                     	;# 
  3243  0EA6                     	;# 
  3244  0EA7                     	;# 
  3245  0F0F                     	;# 
  3246  0F10                     	;# 
  3247  0F11                     	;# 
  3248  0F12                     	;# 
  3249  0F13                     	;# 
  3250  0F14                     	;# 
  3251  0F15                     	;# 
  3252  0F16                     	;# 
  3253  0F17                     	;# 
  3254  0F18                     	;# 
  3255  0F19                     	;# 
  3256  0F1A                     	;# 
  3257  0F1B                     	;# 
  3258  0F1C                     	;# 
  3259  0F1D                     	;# 
  3260  0F1E                     	;# 
  3261  0F1F                     	;# 
  3262  0F20                     	;# 
  3263  0F21                     	;# 
  3264  0F22                     	;# 
  3265  0F23                     	;# 
  3266  0F24                     	;# 
  3267  0F25                     	;# 
  3268  0F26                     	;# 
  3269  0F27                     	;# 
  3270  0F28                     	;# 
  3271  0F29                     	;# 
  3272  0F2A                     	;# 
  3273  0F2B                     	;# 
  3274  0F2C                     	;# 
  3275  0F2D                     	;# 
  3276  0F2E                     	;# 
  3277  0F2F                     	;# 
  3278  0F30                     	;# 
  3279  0F31                     	;# 
  3280  0F32                     	;# 
  3281  0F33                     	;# 
  3282  0F34                     	;# 
  3283  0F35                     	;# 
  3284  0F36                     	;# 
  3285  0F37                     	;# 
  3286  0FE4                     	;# 
  3287  0FE5                     	;# 
  3288  0FE6                     	;# 
  3289  0FE7                     	;# 
  3290  0FE8                     	;# 
  3291  0FE9                     	;# 
  3292  0FEA                     	;# 
  3293  0FEB                     	;# 
  3294  0FED                     	;# 
  3295  0FEE                     	;# 
  3296  0FEF                     	;# 
  3297  0000                     	;# 
  3298  0001                     	;# 
  3299  0002                     	;# 
  3300  0003                     	;# 
  3301  0004                     	;# 
  3302  0005                     	;# 
  3303  0006                     	;# 
  3304  0007                     	;# 
  3305  0008                     	;# 
  3306  0009                     	;# 
  3307  000A                     	;# 
  3308  000B                     	;# 
  3309  000C                     	;# 
  3310  000D                     	;# 
  3311  000E                     	;# 
  3312  0010                     	;# 
  3313  0011                     	;# 
  3314  0012                     	;# 
  3315  0013                     	;# 
  3316  0014                     	;# 
  3317  0015                     	;# 
  3318  0015                     	;# 
  3319  0016                     	;# 
  3320  0016                     	;# 
  3321  0017                     	;# 
  3322  0018                     	;# 
  3323  0019                     	;# 
  3324  0019                     	;# 
  3325  001A                     	;# 
  3326  001B                     	;# 
  3327  001C                     	;# 
  3328  001D                     	;# 
  3329  001E                     	;# 
  3330  001F                     	;# 
  3331  008C                     	;# 
  3332  008D                     	;# 
  3333  008E                     	;# 
  3334  0090                     	;# 
  3335  0091                     	;# 
  3336  0092                     	;# 
  3337  0093                     	;# 
  3338  0094                     	;# 
  3339  0097                     	;# 
  3340  009B                     	;# 
  3341  009B                     	;# 
  3342  009C                     	;# 
  3343  009D                     	;# 
  3344  009E                     	;# 
  3345  009F                     	;# 
  3346  010C                     	;# 
  3347  010D                     	;# 
  3348  010E                     	;# 
  3349  0111                     	;# 
  3350  0112                     	;# 
  3351  0113                     	;# 
  3352  0114                     	;# 
  3353  0115                     	;# 
  3354  0116                     	;# 
  3355  0117                     	;# 
  3356  0118                     	;# 
  3357  0119                     	;# 
  3358  018C                     	;# 
  3359  018D                     	;# 
  3360  018E                     	;# 
  3361  0197                     	;# 
  3362  0199                     	;# 
  3363  0199                     	;# 
  3364  0199                     	;# 
  3365  019A                     	;# 
  3366  019A                     	;# 
  3367  019A                     	;# 
  3368  019B                     	;# 
  3369  019B                     	;# 
  3370  019B                     	;# 
  3371  019B                     	;# 
  3372  019B                     	;# 
  3373  019C                     	;# 
  3374  019C                     	;# 
  3375  019C                     	;# 
  3376  019D                     	;# 
  3377  019D                     	;# 
  3378  019D                     	;# 
  3379  019E                     	;# 
  3380  019E                     	;# 
  3381  019E                     	;# 
  3382  019F                     	;# 
  3383  019F                     	;# 
  3384  019F                     	;# 
  3385  019F                     	;# 
  3386  019F                     	;# 
  3387  020C                     	;# 
  3388  020D                     	;# 
  3389  020E                     	;# 
  3390  0211                     	;# 
  3391  0211                     	;# 
  3392  0212                     	;# 
  3393  0212                     	;# 
  3394  0213                     	;# 
  3395  0213                     	;# 
  3396  0214                     	;# 
  3397  0214                     	;# 
  3398  0215                     	;# 
  3399  0215                     	;# 
  3400  0215                     	;# 
  3401  0215                     	;# 
  3402  0216                     	;# 
  3403  0216                     	;# 
  3404  0217                     	;# 
  3405  0217                     	;# 
  3406  0219                     	;# 
  3407  021A                     	;# 
  3408  021B                     	;# 
  3409  021C                     	;# 
  3410  021D                     	;# 
  3411  021D                     	;# 
  3412  021E                     	;# 
  3413  021F                     	;# 
  3414  028C                     	;# 
  3415  028D                     	;# 
  3416  028E                     	;# 
  3417  0291                     	;# 
  3418  0291                     	;# 
  3419  0292                     	;# 
  3420  0293                     	;# 
  3421  0294                     	;# 
  3422  0295                     	;# 
  3423  0295                     	;# 
  3424  0296                     	;# 
  3425  0297                     	;# 
  3426  0298                     	;# 
  3427  029F                     	;# 
  3428  030C                     	;# 
  3429  030D                     	;# 
  3430  030E                     	;# 
  3431  0311                     	;# 
  3432  0311                     	;# 
  3433  0312                     	;# 
  3434  0313                     	;# 
  3435  0314                     	;# 
  3436  0315                     	;# 
  3437  0315                     	;# 
  3438  0316                     	;# 
  3439  0317                     	;# 
  3440  0318                     	;# 
  3441  038C                     	;# 
  3442  038D                     	;# 
  3443  038E                     	;# 
  3444  0391                     	;# 
  3445  0392                     	;# 
  3446  0393                     	;# 
  3447  0394                     	;# 
  3448  0395                     	;# 
  3449  0396                     	;# 
  3450  0397                     	;# 
  3451  0398                     	;# 
  3452  0399                     	;# 
  3453  039A                     	;# 
  3454  039C                     	;# 
  3455  039D                     	;# 
  3456  039E                     	;# 
  3457  039F                     	;# 
  3458  0411                     	;# 
  3459  0411                     	;# 
  3460  0412                     	;# 
  3461  0413                     	;# 
  3462  0414                     	;# 
  3463  0415                     	;# 
  3464  0416                     	;# 
  3465  0417                     	;# 
  3466  0418                     	;# 
  3467  0418                     	;# 
  3468  0419                     	;# 
  3469  041A                     	;# 
  3470  041B                     	;# 
  3471  041C                     	;# 
  3472  041D                     	;# 
  3473  041E                     	;# 
  3474  041F                     	;# 
  3475  0498                     	;# 
  3476  0498                     	;# 
  3477  0499                     	;# 
  3478  049A                     	;# 
  3479  049B                     	;# 
  3480  049B                     	;# 
  3481  049C                     	;# 
  3482  049D                     	;# 
  3483  049E                     	;# 
  3484  049F                     	;# 
  3485  0617                     	;# 
  3486  0618                     	;# 
  3487  0619                     	;# 
  3488  0619                     	;# 
  3489  061A                     	;# 
  3490  061B                     	;# 
  3491  061C                     	;# 
  3492  061C                     	;# 
  3493  061F                     	;# 
  3494  0691                     	;# 
  3495  0692                     	;# 
  3496  0693                     	;# 
  3497  0694                     	;# 
  3498  0695                     	;# 
  3499  0696                     	;# 
  3500  0697                     	;# 
  3501  0698                     	;# 
  3502  0699                     	;# 
  3503  0711                     	;# 
  3504  0712                     	;# 
  3505  0713                     	;# 
  3506  0714                     	;# 
  3507  0715                     	;# 
  3508  0716                     	;# 
  3509  0717                     	;# 
  3510  0718                     	;# 
  3511  0719                     	;# 
  3512  0891                     	;# 
  3513  0891                     	;# 
  3514  0891                     	;# 
  3515  0891                     	;# 
  3516  0891                     	;# 
  3517  0891                     	;# 
  3518  0892                     	;# 
  3519  0892                     	;# 
  3520  0892                     	;# 
  3521  0893                     	;# 
  3522  0893                     	;# 
  3523  0893                     	;# 
  3524  0893                     	;# 
  3525  0893                     	;# 
  3526  0893                     	;# 
  3527  0894                     	;# 
  3528  0894                     	;# 
  3529  0894                     	;# 
  3530  0895                     	;# 
  3531  0895                     	;# 
  3532  0895                     	;# 
  3533  0896                     	;# 
  3534  0896                     	;# 
  3535  0896                     	;# 
  3536  089B                     	;# 
  3537  0911                     	;# 
  3538  0912                     	;# 
  3539  0913                     	;# 
  3540  0914                     	;# 
  3541  0915                     	;# 
  3542  0916                     	;# 
  3543  0918                     	;# 
  3544  0919                     	;# 
  3545  091A                     	;# 
  3546  091B                     	;# 
  3547  091C                     	;# 
  3548  091D                     	;# 
  3549  091E                     	;# 
  3550  091F                     	;# 
  3551  0E0F                     	;# 
  3552  0E10                     	;# 
  3553  0E11                     	;# 
  3554  0E12                     	;# 
  3555  0E13                     	;# 
  3556  0E14                     	;# 
  3557  0E15                     	;# 
  3558  0E16                     	;# 
  3559  0E17                     	;# 
  3560  0E18                     	;# 
  3561  0E19                     	;# 
  3562  0E1A                     	;# 
  3563  0E1B                     	;# 
  3564  0E1C                     	;# 
  3565  0E1D                     	;# 
  3566  0E1E                     	;# 
  3567  0E1F                     	;# 
  3568  0E20                     	;# 
  3569  0E21                     	;# 
  3570  0E22                     	;# 
  3571  0E24                     	;# 
  3572  0E25                     	;# 
  3573  0E28                     	;# 
  3574  0E29                     	;# 
  3575  0E2A                     	;# 
  3576  0E2B                     	;# 
  3577  0E2C                     	;# 
  3578  0E2D                     	;# 
  3579  0E2E                     	;# 
  3580  0E2F                     	;# 
  3581  0E90                     	;# 
  3582  0E91                     	;# 
  3583  0E92                     	;# 
  3584  0E94                     	;# 
  3585  0E95                     	;# 
  3586  0E9C                     	;# 
  3587  0E9D                     	;# 
  3588  0E9E                     	;# 
  3589  0E9F                     	;# 
  3590  0EA0                     	;# 
  3591  0EA1                     	;# 
  3592  0EA2                     	;# 
  3593  0EA3                     	;# 
  3594  0EA4                     	;# 
  3595  0EA5                     	;# 
  3596  0EA6                     	;# 
  3597  0EA7                     	;# 
  3598  0F0F                     	;# 
  3599  0F10                     	;# 
  3600  0F11                     	;# 
  3601  0F12                     	;# 
  3602  0F13                     	;# 
  3603  0F14                     	;# 
  3604  0F15                     	;# 
  3605  0F16                     	;# 
  3606  0F17                     	;# 
  3607  0F18                     	;# 
  3608  0F19                     	;# 
  3609  0F1A                     	;# 
  3610  0F1B                     	;# 
  3611  0F1C                     	;# 
  3612  0F1D                     	;# 
  3613  0F1E                     	;# 
  3614  0F1F                     	;# 
  3615  0F20                     	;# 
  3616  0F21                     	;# 
  3617  0F22                     	;# 
  3618  0F23                     	;# 
  3619  0F24                     	;# 
  3620  0F25                     	;# 
  3621  0F26                     	;# 
  3622  0F27                     	;# 
  3623  0F28                     	;# 
  3624  0F29                     	;# 
  3625  0F2A                     	;# 
  3626  0F2B                     	;# 
  3627  0F2C                     	;# 
  3628  0F2D                     	;# 
  3629  0F2E                     	;# 
  3630  0F2F                     	;# 
  3631  0F30                     	;# 
  3632  0F31                     	;# 
  3633  0F32                     	;# 
  3634  0F33                     	;# 
  3635  0F34                     	;# 
  3636  0F35                     	;# 
  3637  0F36                     	;# 
  3638  0F37                     	;# 
  3639  0FE4                     	;# 
  3640  0FE5                     	;# 
  3641  0FE6                     	;# 
  3642  0FE7                     	;# 
  3643  0FE8                     	;# 
  3644  0FE9                     	;# 
  3645  0FEA                     	;# 
  3646  0FEB                     	;# 
  3647  0FED                     	;# 
  3648  0FEE                     	;# 
  3649  0FEF                     	;# 
  3650  0000                     	;# 
  3651  0001                     	;# 
  3652  0002                     	;# 
  3653  0003                     	;# 
  3654  0004                     	;# 
  3655  0005                     	;# 
  3656  0006                     	;# 
  3657  0007                     	;# 
  3658  0008                     	;# 
  3659  0009                     	;# 
  3660  000A                     	;# 
  3661  000B                     	;# 
  3662  000C                     	;# 
  3663  000D                     	;# 
  3664  000E                     	;# 
  3665  0010                     	;# 
  3666  0011                     	;# 
  3667  0012                     	;# 
  3668  0013                     	;# 
  3669  0014                     	;# 
  3670  0015                     	;# 
  3671  0015                     	;# 
  3672  0016                     	;# 
  3673  0016                     	;# 
  3674  0017                     	;# 
  3675  0018                     	;# 
  3676  0019                     	;# 
  3677  0019                     	;# 
  3678  001A                     	;# 
  3679  001B                     	;# 
  3680  001C                     	;# 
  3681  001D                     	;# 
  3682  001E                     	;# 
  3683  001F                     	;# 
  3684  008C                     	;# 
  3685  008D                     	;# 
  3686  008E                     	;# 
  3687  0090                     	;# 
  3688  0091                     	;# 
  3689  0092                     	;# 
  3690  0093                     	;# 
  3691  0094                     	;# 
  3692  0097                     	;# 
  3693  009B                     	;# 
  3694  009B                     	;# 
  3695  009C                     	;# 
  3696  009D                     	;# 
  3697  009E                     	;# 
  3698  009F                     	;# 
  3699  010C                     	;# 
  3700  010D                     	;# 
  3701  010E                     	;# 
  3702  0111                     	;# 
  3703  0112                     	;# 
  3704  0113                     	;# 
  3705  0114                     	;# 
  3706  0115                     	;# 
  3707  0116                     	;# 
  3708  0117                     	;# 
  3709  0118                     	;# 
  3710  0119                     	;# 
  3711  018C                     	;# 
  3712  018D                     	;# 
  3713  018E                     	;# 
  3714  0197                     	;# 
  3715  0199                     	;# 
  3716  0199                     	;# 
  3717  0199                     	;# 
  3718  019A                     	;# 
  3719  019A                     	;# 
  3720  019A                     	;# 
  3721  019B                     	;# 
  3722  019B                     	;# 
  3723  019B                     	;# 
  3724  019B                     	;# 
  3725  019B                     	;# 
  3726  019C                     	;# 
  3727  019C                     	;# 
  3728  019C                     	;# 
  3729  019D                     	;# 
  3730  019D                     	;# 
  3731  019D                     	;# 
  3732  019E                     	;# 
  3733  019E                     	;# 
  3734  019E                     	;# 
  3735  019F                     	;# 
  3736  019F                     	;# 
  3737  019F                     	;# 
  3738  019F                     	;# 
  3739  019F                     	;# 
  3740  020C                     	;# 
  3741  020D                     	;# 
  3742  020E                     	;# 
  3743  0211                     	;# 
  3744  0211                     	;# 
  3745  0212                     	;# 
  3746  0212                     	;# 
  3747  0213                     	;# 
  3748  0213                     	;# 
  3749  0214                     	;# 
  3750  0214                     	;# 
  3751  0215                     	;# 
  3752  0215                     	;# 
  3753  0215                     	;# 
  3754  0215                     	;# 
  3755  0216                     	;# 
  3756  0216                     	;# 
  3757  0217                     	;# 
  3758  0217                     	;# 
  3759  0219                     	;# 
  3760  021A                     	;# 
  3761  021B                     	;# 
  3762  021C                     	;# 
  3763  021D                     	;# 
  3764  021D                     	;# 
  3765  021E                     	;# 
  3766  021F                     	;# 
  3767  028C                     	;# 
  3768  028D                     	;# 
  3769  028E                     	;# 
  3770  0291                     	;# 
  3771  0291                     	;# 
  3772  0292                     	;# 
  3773  0293                     	;# 
  3774  0294                     	;# 
  3775  0295                     	;# 
  3776  0295                     	;# 
  3777  0296                     	;# 
  3778  0297                     	;# 
  3779  0298                     	;# 
  3780  029F                     	;# 
  3781  030C                     	;# 
  3782  030D                     	;# 
  3783  030E                     	;# 
  3784  0311                     	;# 
  3785  0311                     	;# 
  3786  0312                     	;# 
  3787  0313                     	;# 
  3788  0314                     	;# 
  3789  0315                     	;# 
  3790  0315                     	;# 
  3791  0316                     	;# 
  3792  0317                     	;# 
  3793  0318                     	;# 
  3794  038C                     	;# 
  3795  038D                     	;# 
  3796  038E                     	;# 
  3797  0391                     	;# 
  3798  0392                     	;# 
  3799  0393                     	;# 
  3800  0394                     	;# 
  3801  0395                     	;# 
  3802  0396                     	;# 
  3803  0397                     	;# 
  3804  0398                     	;# 
  3805  0399                     	;# 
  3806  039A                     	;# 
  3807  039C                     	;# 
  3808  039D                     	;# 
  3809  039E                     	;# 
  3810  039F                     	;# 
  3811  0411                     	;# 
  3812  0411                     	;# 
  3813  0412                     	;# 
  3814  0413                     	;# 
  3815  0414                     	;# 
  3816  0415                     	;# 
  3817  0416                     	;# 
  3818  0417                     	;# 
  3819  0418                     	;# 
  3820  0418                     	;# 
  3821  0419                     	;# 
  3822  041A                     	;# 
  3823  041B                     	;# 
  3824  041C                     	;# 
  3825  041D                     	;# 
  3826  041E                     	;# 
  3827  041F                     	;# 
  3828  0498                     	;# 
  3829  0498                     	;# 
  3830  0499                     	;# 
  3831  049A                     	;# 
  3832  049B                     	;# 
  3833  049B                     	;# 
  3834  049C                     	;# 
  3835  049D                     	;# 
  3836  049E                     	;# 
  3837  049F                     	;# 
  3838  0617                     	;# 
  3839  0618                     	;# 
  3840  0619                     	;# 
  3841  0619                     	;# 
  3842  061A                     	;# 
  3843  061B                     	;# 
  3844  061C                     	;# 
  3845  061C                     	;# 
  3846  061F                     	;# 
  3847  0691                     	;# 
  3848  0692                     	;# 
  3849  0693                     	;# 
  3850  0694                     	;# 
  3851  0695                     	;# 
  3852  0696                     	;# 
  3853  0697                     	;# 
  3854  0698                     	;# 
  3855  0699                     	;# 
  3856  0711                     	;# 
  3857  0712                     	;# 
  3858  0713                     	;# 
  3859  0714                     	;# 
  3860  0715                     	;# 
  3861  0716                     	;# 
  3862  0717                     	;# 
  3863  0718                     	;# 
  3864  0719                     	;# 
  3865  0891                     	;# 
  3866  0891                     	;# 
  3867  0891                     	;# 
  3868  0891                     	;# 
  3869  0891                     	;# 
  3870  0891                     	;# 
  3871  0892                     	;# 
  3872  0892                     	;# 
  3873  0892                     	;# 
  3874  0893                     	;# 
  3875  0893                     	;# 
  3876  0893                     	;# 
  3877  0893                     	;# 
  3878  0893                     	;# 
  3879  0893                     	;# 
  3880  0894                     	;# 
  3881  0894                     	;# 
  3882  0894                     	;# 
  3883  0895                     	;# 
  3884  0895                     	;# 
  3885  0895                     	;# 
  3886  0896                     	;# 
  3887  0896                     	;# 
  3888  0896                     	;# 
  3889  089B                     	;# 
  3890  0911                     	;# 
  3891  0912                     	;# 
  3892  0913                     	;# 
  3893  0914                     	;# 
  3894  0915                     	;# 
  3895  0916                     	;# 
  3896  0918                     	;# 
  3897  0919                     	;# 
  3898  091A                     	;# 
  3899  091B                     	;# 
  3900  091C                     	;# 
  3901  091D                     	;# 
  3902  091E                     	;# 
  3903  091F                     	;# 
  3904  0E0F                     	;# 
  3905  0E10                     	;# 
  3906  0E11                     	;# 
  3907  0E12                     	;# 
  3908  0E13                     	;# 
  3909  0E14                     	;# 
  3910  0E15                     	;# 
  3911  0E16                     	;# 
  3912  0E17                     	;# 
  3913  0E18                     	;# 
  3914  0E19                     	;# 
  3915  0E1A                     	;# 
  3916  0E1B                     	;# 
  3917  0E1C                     	;# 
  3918  0E1D                     	;# 
  3919  0E1E                     	;# 
  3920  0E1F                     	;# 
  3921  0E20                     	;# 
  3922  0E21                     	;# 
  3923  0E22                     	;# 
  3924  0E24                     	;# 
  3925  0E25                     	;# 
  3926  0E28                     	;# 
  3927  0E29                     	;# 
  3928  0E2A                     	;# 
  3929  0E2B                     	;# 
  3930  0E2C                     	;# 
  3931  0E2D                     	;# 
  3932  0E2E                     	;# 
  3933  0E2F                     	;# 
  3934  0E90                     	;# 
  3935  0E91                     	;# 
  3936  0E92                     	;# 
  3937  0E94                     	;# 
  3938  0E95                     	;# 
  3939  0E9C                     	;# 
  3940  0E9D                     	;# 
  3941  0E9E                     	;# 
  3942  0E9F                     	;# 
  3943  0EA0                     	;# 
  3944  0EA1                     	;# 
  3945  0EA2                     	;# 
  3946  0EA3                     	;# 
  3947  0EA4                     	;# 
  3948  0EA5                     	;# 
  3949  0EA6                     	;# 
  3950  0EA7                     	;# 
  3951  0F0F                     	;# 
  3952  0F10                     	;# 
  3953  0F11                     	;# 
  3954  0F12                     	;# 
  3955  0F13                     	;# 
  3956  0F14                     	;# 
  3957  0F15                     	;# 
  3958  0F16                     	;# 
  3959  0F17                     	;# 
  3960  0F18                     	;# 
  3961  0F19                     	;# 
  3962  0F1A                     	;# 
  3963  0F1B                     	;# 
  3964  0F1C                     	;# 
  3965  0F1D                     	;# 
  3966  0F1E                     	;# 
  3967  0F1F                     	;# 
  3968  0F20                     	;# 
  3969  0F21                     	;# 
  3970  0F22                     	;# 
  3971  0F23                     	;# 
  3972  0F24                     	;# 
  3973  0F25                     	;# 
  3974  0F26                     	;# 
  3975  0F27                     	;# 
  3976  0F28                     	;# 
  3977  0F29                     	;# 
  3978  0F2A                     	;# 
  3979  0F2B                     	;# 
  3980  0F2C                     	;# 
  3981  0F2D                     	;# 
  3982  0F2E                     	;# 
  3983  0F2F                     	;# 
  3984  0F30                     	;# 
  3985  0F31                     	;# 
  3986  0F32                     	;# 
  3987  0F33                     	;# 
  3988  0F34                     	;# 
  3989  0F35                     	;# 
  3990  0F36                     	;# 
  3991  0F37                     	;# 
  3992  0FE4                     	;# 
  3993  0FE5                     	;# 
  3994  0FE6                     	;# 
  3995  0FE7                     	;# 
  3996  0FE8                     	;# 
  3997  0FE9                     	;# 
  3998  0FEA                     	;# 
  3999  0FEB                     	;# 
  4000  0FED                     	;# 
  4001  0FEE                     	;# 
  4002  0FEF                     	;# 
  4003  0000                     	;# 
  4004  0001                     	;# 
  4005  0002                     	;# 
  4006  0003                     	;# 
  4007  0004                     	;# 
  4008  0005                     	;# 
  4009  0006                     	;# 
  4010  0007                     	;# 
  4011  0008                     	;# 
  4012  0009                     	;# 
  4013  000A                     	;# 
  4014  000B                     	;# 
  4015  000C                     	;# 
  4016  000D                     	;# 
  4017  000E                     	;# 
  4018  0010                     	;# 
  4019  0011                     	;# 
  4020  0012                     	;# 
  4021  0013                     	;# 
  4022  0014                     	;# 
  4023  0015                     	;# 
  4024  0015                     	;# 
  4025  0016                     	;# 
  4026  0016                     	;# 
  4027  0017                     	;# 
  4028  0018                     	;# 
  4029  0019                     	;# 
  4030  0019                     	;# 
  4031  001A                     	;# 
  4032  001B                     	;# 
  4033  001C                     	;# 
  4034  001D                     	;# 
  4035  001E                     	;# 
  4036  001F                     	;# 
  4037  008C                     	;# 
  4038  008D                     	;# 
  4039  008E                     	;# 
  4040  0090                     	;# 
  4041  0091                     	;# 
  4042  0092                     	;# 
  4043  0093                     	;# 
  4044  0094                     	;# 
  4045  0097                     	;# 
  4046  009B                     	;# 
  4047  009B                     	;# 
  4048  009C                     	;# 
  4049  009D                     	;# 
  4050  009E                     	;# 
  4051  009F                     	;# 
  4052  010C                     	;# 
  4053  010D                     	;# 
  4054  010E                     	;# 
  4055  0111                     	;# 
  4056  0112                     	;# 
  4057  0113                     	;# 
  4058  0114                     	;# 
  4059  0115                     	;# 
  4060  0116                     	;# 
  4061  0117                     	;# 
  4062  0118                     	;# 
  4063  0119                     	;# 
  4064  018C                     	;# 
  4065  018D                     	;# 
  4066  018E                     	;# 
  4067  0197                     	;# 
  4068  0199                     	;# 
  4069  0199                     	;# 
  4070  0199                     	;# 
  4071  019A                     	;# 
  4072  019A                     	;# 
  4073  019A                     	;# 
  4074  019B                     	;# 
  4075  019B                     	;# 
  4076  019B                     	;# 
  4077  019B                     	;# 
  4078  019B                     	;# 
  4079  019C                     	;# 
  4080  019C                     	;# 
  4081  019C                     	;# 
  4082  019D                     	;# 
  4083  019D                     	;# 
  4084  019D                     	;# 
  4085  019E                     	;# 
  4086  019E                     	;# 
  4087  019E                     	;# 
  4088  019F                     	;# 
  4089  019F                     	;# 
  4090  019F                     	;# 
  4091  019F                     	;# 
  4092  019F                     	;# 
  4093  020C                     	;# 
  4094  020D                     	;# 
  4095  020E                     	;# 
  4096  0211                     	;# 
  4097  0211                     	;# 
  4098  0212                     	;# 
  4099  0212                     	;# 
  4100  0213                     	;# 
  4101  0213                     	;# 
  4102  0214                     	;# 
  4103  0214                     	;# 
  4104  0215                     	;# 
  4105  0215                     	;# 
  4106  0215                     	;# 
  4107  0215                     	;# 
  4108  0216                     	;# 
  4109  0216                     	;# 
  4110  0217                     	;# 
  4111  0217                     	;# 
  4112  0219                     	;# 
  4113  021A                     	;# 
  4114  021B                     	;# 
  4115  021C                     	;# 
  4116  021D                     	;# 
  4117  021D                     	;# 
  4118  021E                     	;# 
  4119  021F                     	;# 
  4120  028C                     	;# 
  4121  028D                     	;# 
  4122  028E                     	;# 
  4123  0291                     	;# 
  4124  0291                     	;# 
  4125  0292                     	;# 
  4126  0293                     	;# 
  4127  0294                     	;# 
  4128  0295                     	;# 
  4129  0295                     	;# 
  4130  0296                     	;# 
  4131  0297                     	;# 
  4132  0298                     	;# 
  4133  029F                     	;# 
  4134  030C                     	;# 
  4135  030D                     	;# 
  4136  030E                     	;# 
  4137  0311                     	;# 
  4138  0311                     	;# 
  4139  0312                     	;# 
  4140  0313                     	;# 
  4141  0314                     	;# 
  4142  0315                     	;# 
  4143  0315                     	;# 
  4144  0316                     	;# 
  4145  0317                     	;# 
  4146  0318                     	;# 
  4147  038C                     	;# 
  4148  038D                     	;# 
  4149  038E                     	;# 
  4150  0391                     	;# 
  4151  0392                     	;# 
  4152  0393                     	;# 
  4153  0394                     	;# 
  4154  0395                     	;# 
  4155  0396                     	;# 
  4156  0397                     	;# 
  4157  0398                     	;# 
  4158  0399                     	;# 
  4159  039A                     	;# 
  4160  039C                     	;# 
  4161  039D                     	;# 
  4162  039E                     	;# 
  4163  039F                     	;# 
  4164  0411                     	;# 
  4165  0411                     	;# 
  4166  0412                     	;# 
  4167  0413                     	;# 
  4168  0414                     	;# 
  4169  0415                     	;# 
  4170  0416                     	;# 
  4171  0417                     	;# 
  4172  0418                     	;# 
  4173  0418                     	;# 
  4174  0419                     	;# 
  4175  041A                     	;# 
  4176  041B                     	;# 
  4177  041C                     	;# 
  4178  041D                     	;# 
  4179  041E                     	;# 
  4180  041F                     	;# 
  4181  0498                     	;# 
  4182  0498                     	;# 
  4183  0499                     	;# 
  4184  049A                     	;# 
  4185  049B                     	;# 
  4186  049B                     	;# 
  4187  049C                     	;# 
  4188  049D                     	;# 
  4189  049E                     	;# 
  4190  049F                     	;# 
  4191  0617                     	;# 
  4192  0618                     	;# 
  4193  0619                     	;# 
  4194  0619                     	;# 
  4195  061A                     	;# 
  4196  061B                     	;# 
  4197  061C                     	;# 
  4198  061C                     	;# 
  4199  061F                     	;# 
  4200  0691                     	;# 
  4201  0692                     	;# 
  4202  0693                     	;# 
  4203  0694                     	;# 
  4204  0695                     	;# 
  4205  0696                     	;# 
  4206  0697                     	;# 
  4207  0698                     	;# 
  4208  0699                     	;# 
  4209  0711                     	;# 
  4210  0712                     	;# 
  4211  0713                     	;# 
  4212  0714                     	;# 
  4213  0715                     	;# 
  4214  0716                     	;# 
  4215  0717                     	;# 
  4216  0718                     	;# 
  4217  0719                     	;# 
  4218  0891                     	;# 
  4219  0891                     	;# 
  4220  0891                     	;# 
  4221  0891                     	;# 
  4222  0891                     	;# 
  4223  0891                     	;# 
  4224  0892                     	;# 
  4225  0892                     	;# 
  4226  0892                     	;# 
  4227  0893                     	;# 
  4228  0893                     	;# 
  4229  0893                     	;# 
  4230  0893                     	;# 
  4231  0893                     	;# 
  4232  0893                     	;# 
  4233  0894                     	;# 
  4234  0894                     	;# 
  4235  0894                     	;# 
  4236  0895                     	;# 
  4237  0895                     	;# 
  4238  0895                     	;# 
  4239  0896                     	;# 
  4240  0896                     	;# 
  4241  0896                     	;# 
  4242  089B                     	;# 
  4243  0911                     	;# 
  4244  0912                     	;# 
  4245  0913                     	;# 
  4246  0914                     	;# 
  4247  0915                     	;# 
  4248  0916                     	;# 
  4249  0918                     	;# 
  4250  0919                     	;# 
  4251  091A                     	;# 
  4252  091B                     	;# 
  4253  091C                     	;# 
  4254  091D                     	;# 
  4255  091E                     	;# 
  4256  091F                     	;# 
  4257  0E0F                     	;# 
  4258  0E10                     	;# 
  4259  0E11                     	;# 
  4260  0E12                     	;# 
  4261  0E13                     	;# 
  4262  0E14                     	;# 
  4263  0E15                     	;# 
  4264  0E16                     	;# 
  4265  0E17                     	;# 
  4266  0E18                     	;# 
  4267  0E19                     	;# 
  4268  0E1A                     	;# 
  4269  0E1B                     	;# 
  4270  0E1C                     	;# 
  4271  0E1D                     	;# 
  4272  0E1E                     	;# 
  4273  0E1F                     	;# 
  4274  0E20                     	;# 
  4275  0E21                     	;# 
  4276  0E22                     	;# 
  4277  0E24                     	;# 
  4278  0E25                     	;# 
  4279  0E28                     	;# 
  4280  0E29                     	;# 
  4281  0E2A                     	;# 
  4282  0E2B                     	;# 
  4283  0E2C                     	;# 
  4284  0E2D                     	;# 
  4285  0E2E                     	;# 
  4286  0E2F                     	;# 
  4287  0E90                     	;# 
  4288  0E91                     	;# 
  4289  0E92                     	;# 
  4290  0E94                     	;# 
  4291  0E95                     	;# 
  4292  0E9C                     	;# 
  4293  0E9D                     	;# 
  4294  0E9E                     	;# 
  4295  0E9F                     	;# 
  4296  0EA0                     	;# 
  4297  0EA1                     	;# 
  4298  0EA2                     	;# 
  4299  0EA3                     	;# 
  4300  0EA4                     	;# 
  4301  0EA5                     	;# 
  4302  0EA6                     	;# 
  4303  0EA7                     	;# 
  4304  0F0F                     	;# 
  4305  0F10                     	;# 
  4306  0F11                     	;# 
  4307  0F12                     	;# 
  4308  0F13                     	;# 
  4309  0F14                     	;# 
  4310  0F15                     	;# 
  4311  0F16                     	;# 
  4312  0F17                     	;# 
  4313  0F18                     	;# 
  4314  0F19                     	;# 
  4315  0F1A                     	;# 
  4316  0F1B                     	;# 
  4317  0F1C                     	;# 
  4318  0F1D                     	;# 
  4319  0F1E                     	;# 
  4320  0F1F                     	;# 
  4321  0F20                     	;# 
  4322  0F21                     	;# 
  4323  0F22                     	;# 
  4324  0F23                     	;# 
  4325  0F24                     	;# 
  4326  0F25                     	;# 
  4327  0F26                     	;# 
  4328  0F27                     	;# 
  4329  0F28                     	;# 
  4330  0F29                     	;# 
  4331  0F2A                     	;# 
  4332  0F2B                     	;# 
  4333  0F2C                     	;# 
  4334  0F2D                     	;# 
  4335  0F2E                     	;# 
  4336  0F2F                     	;# 
  4337  0F30                     	;# 
  4338  0F31                     	;# 
  4339  0F32                     	;# 
  4340  0F33                     	;# 
  4341  0F34                     	;# 
  4342  0F35                     	;# 
  4343  0F36                     	;# 
  4344  0F37                     	;# 
  4345  0FE4                     	;# 
  4346  0FE5                     	;# 
  4347  0FE6                     	;# 
  4348  0FE7                     	;# 
  4349  0FE8                     	;# 
  4350  0FE9                     	;# 
  4351  0FEA                     	;# 
  4352  0FEB                     	;# 
  4353  0FED                     	;# 
  4354  0FEE                     	;# 
  4355  0FEF                     	;# 
  4356  0000                     	;# 
  4357  0001                     	;# 
  4358  0002                     	;# 
  4359  0003                     	;# 
  4360  0004                     	;# 
  4361  0005                     	;# 
  4362  0006                     	;# 
  4363  0007                     	;# 
  4364  0008                     	;# 
  4365  0009                     	;# 
  4366  000A                     	;# 
  4367  000B                     	;# 
  4368  000C                     	;# 
  4369  000D                     	;# 
  4370  000E                     	;# 
  4371  0010                     	;# 
  4372  0011                     	;# 
  4373  0012                     	;# 
  4374  0013                     	;# 
  4375  0014                     	;# 
  4376  0015                     	;# 
  4377  0015                     	;# 
  4378  0016                     	;# 
  4379  0016                     	;# 
  4380  0017                     	;# 
  4381  0018                     	;# 
  4382  0019                     	;# 
  4383  0019                     	;# 
  4384  001A                     	;# 
  4385  001B                     	;# 
  4386  001C                     	;# 
  4387  001D                     	;# 
  4388  001E                     	;# 
  4389  001F                     	;# 
  4390  008C                     	;# 
  4391  008D                     	;# 
  4392  008E                     	;# 
  4393  0090                     	;# 
  4394  0091                     	;# 
  4395  0092                     	;# 
  4396  0093                     	;# 
  4397  0094                     	;# 
  4398  0097                     	;# 
  4399  009B                     	;# 
  4400  009B                     	;# 
  4401  009C                     	;# 
  4402  009D                     	;# 
  4403  009E                     	;# 
  4404  009F                     	;# 
  4405  010C                     	;# 
  4406  010D                     	;# 
  4407  010E                     	;# 
  4408  0111                     	;# 
  4409  0112                     	;# 
  4410  0113                     	;# 
  4411  0114                     	;# 
  4412  0115                     	;# 
  4413  0116                     	;# 
  4414  0117                     	;# 
  4415  0118                     	;# 
  4416  0119                     	;# 
  4417  018C                     	;# 
  4418  018D                     	;# 
  4419  018E                     	;# 
  4420  0197                     	;# 
  4421  0199                     	;# 
  4422  0199                     	;# 
  4423  0199                     	;# 
  4424  019A                     	;# 
  4425  019A                     	;# 
  4426  019A                     	;# 
  4427  019B                     	;# 
  4428  019B                     	;# 
  4429  019B                     	;# 
  4430  019B                     	;# 
  4431  019B                     	;# 
  4432  019C                     	;# 
  4433  019C                     	;# 
  4434  019C                     	;# 
  4435  019D                     	;# 
  4436  019D                     	;# 
  4437  019D                     	;# 
  4438  019E                     	;# 
  4439  019E                     	;# 
  4440  019E                     	;# 
  4441  019F                     	;# 
  4442  019F                     	;# 
  4443  019F                     	;# 
  4444  019F                     	;# 
  4445  019F                     	;# 
  4446  020C                     	;# 
  4447  020D                     	;# 
  4448  020E                     	;# 
  4449  0211                     	;# 
  4450  0211                     	;# 
  4451  0212                     	;# 
  4452  0212                     	;# 
  4453  0213                     	;# 
  4454  0213                     	;# 
  4455  0214                     	;# 
  4456  0214                     	;# 
  4457  0215                     	;# 
  4458  0215                     	;# 
  4459  0215                     	;# 
  4460  0215                     	;# 
  4461  0216                     	;# 
  4462  0216                     	;# 
  4463  0217                     	;# 
  4464  0217                     	;# 
  4465  0219                     	;# 
  4466  021A                     	;# 
  4467  021B                     	;# 
  4468  021C                     	;# 
  4469  021D                     	;# 
  4470  021D                     	;# 
  4471  021E                     	;# 
  4472  021F                     	;# 
  4473  028C                     	;# 
  4474  028D                     	;# 
  4475  028E                     	;# 
  4476  0291                     	;# 
  4477  0291                     	;# 
  4478  0292                     	;# 
  4479  0293                     	;# 
  4480  0294                     	;# 
  4481  0295                     	;# 
  4482  0295                     	;# 
  4483  0296                     	;# 
  4484  0297                     	;# 
  4485  0298                     	;# 
  4486  029F                     	;# 
  4487  030C                     	;# 
  4488  030D                     	;# 
  4489  030E                     	;# 
  4490  0311                     	;# 
  4491  0311                     	;# 
  4492  0312                     	;# 
  4493  0313                     	;# 
  4494  0314                     	;# 
  4495  0315                     	;# 
  4496  0315                     	;# 
  4497  0316                     	;# 
  4498  0317                     	;# 
  4499  0318                     	;# 
  4500  038C                     	;# 
  4501  038D                     	;# 
  4502  038E                     	;# 
  4503  0391                     	;# 
  4504  0392                     	;# 
  4505  0393                     	;# 
  4506  0394                     	;# 
  4507  0395                     	;# 
  4508  0396                     	;# 
  4509  0397                     	;# 
  4510  0398                     	;# 
  4511  0399                     	;# 
  4512  039A                     	;# 
  4513  039C                     	;# 
  4514  039D                     	;# 
  4515  039E                     	;# 
  4516  039F                     	;# 
  4517  0411                     	;# 
  4518  0411                     	;# 
  4519  0412                     	;# 
  4520  0413                     	;# 
  4521  0414                     	;# 
  4522  0415                     	;# 
  4523  0416                     	;# 
  4524  0417                     	;# 
  4525  0418                     	;# 
  4526  0418                     	;# 
  4527  0419                     	;# 
  4528  041A                     	;# 
  4529  041B                     	;# 
  4530  041C                     	;# 
  4531  041D                     	;# 
  4532  041E                     	;# 
  4533  041F                     	;# 
  4534  0498                     	;# 
  4535  0498                     	;# 
  4536  0499                     	;# 
  4537  049A                     	;# 
  4538  049B                     	;# 
  4539  049B                     	;# 
  4540  049C                     	;# 
  4541  049D                     	;# 
  4542  049E                     	;# 
  4543  049F                     	;# 
  4544  0617                     	;# 
  4545  0618                     	;# 
  4546  0619                     	;# 
  4547  0619                     	;# 
  4548  061A                     	;# 
  4549  061B                     	;# 
  4550  061C                     	;# 
  4551  061C                     	;# 
  4552  061F                     	;# 
  4553  0691                     	;# 
  4554  0692                     	;# 
  4555  0693                     	;# 
  4556  0694                     	;# 
  4557  0695                     	;# 
  4558  0696                     	;# 
  4559  0697                     	;# 
  4560  0698                     	;# 
  4561  0699                     	;# 
  4562  0711                     	;# 
  4563  0712                     	;# 
  4564  0713                     	;# 
  4565  0714                     	;# 
  4566  0715                     	;# 
  4567  0716                     	;# 
  4568  0717                     	;# 
  4569  0718                     	;# 
  4570  0719                     	;# 
  4571  0891                     	;# 
  4572  0891                     	;# 
  4573  0891                     	;# 
  4574  0891                     	;# 
  4575  0891                     	;# 
  4576  0891                     	;# 
  4577  0892                     	;# 
  4578  0892                     	;# 
  4579  0892                     	;# 
  4580  0893                     	;# 
  4581  0893                     	;# 
  4582  0893                     	;# 
  4583  0893                     	;# 
  4584  0893                     	;# 
  4585  0893                     	;# 
  4586  0894                     	;# 
  4587  0894                     	;# 
  4588  0894                     	;# 
  4589  0895                     	;# 
  4590  0895                     	;# 
  4591  0895                     	;# 
  4592  0896                     	;# 
  4593  0896                     	;# 
  4594  0896                     	;# 
  4595  089B                     	;# 
  4596  0911                     	;# 
  4597  0912                     	;# 
  4598  0913                     	;# 
  4599  0914                     	;# 
  4600  0915                     	;# 
  4601  0916                     	;# 
  4602  0918                     	;# 
  4603  0919                     	;# 
  4604  091A                     	;# 
  4605  091B                     	;# 
  4606  091C                     	;# 
  4607  091D                     	;# 
  4608  091E                     	;# 
  4609  091F                     	;# 
  4610  0E0F                     	;# 
  4611  0E10                     	;# 
  4612  0E11                     	;# 
  4613  0E12                     	;# 
  4614  0E13                     	;# 
  4615  0E14                     	;# 
  4616  0E15                     	;# 
  4617  0E16                     	;# 
  4618  0E17                     	;# 
  4619  0E18                     	;# 
  4620  0E19                     	;# 
  4621  0E1A                     	;# 
  4622  0E1B                     	;# 
  4623  0E1C                     	;# 
  4624  0E1D                     	;# 
  4625  0E1E                     	;# 
  4626  0E1F                     	;# 
  4627  0E20                     	;# 
  4628  0E21                     	;# 
  4629  0E22                     	;# 
  4630  0E24                     	;# 
  4631  0E25                     	;# 
  4632  0E28                     	;# 
  4633  0E29                     	;# 
  4634  0E2A                     	;# 
  4635  0E2B                     	;# 
  4636  0E2C                     	;# 
  4637  0E2D                     	;# 
  4638  0E2E                     	;# 
  4639  0E2F                     	;# 
  4640  0E90                     	;# 
  4641  0E91                     	;# 
  4642  0E92                     	;# 
  4643  0E94                     	;# 
  4644  0E95                     	;# 
  4645  0E9C                     	;# 
  4646  0E9D                     	;# 
  4647  0E9E                     	;# 
  4648  0E9F                     	;# 
  4649  0EA0                     	;# 
  4650  0EA1                     	;# 
  4651  0EA2                     	;# 
  4652  0EA3                     	;# 
  4653  0EA4                     	;# 
  4654  0EA5                     	;# 
  4655  0EA6                     	;# 
  4656  0EA7                     	;# 
  4657  0F0F                     	;# 
  4658  0F10                     	;# 
  4659  0F11                     	;# 
  4660  0F12                     	;# 
  4661  0F13                     	;# 
  4662  0F14                     	;# 
  4663  0F15                     	;# 
  4664  0F16                     	;# 
  4665  0F17                     	;# 
  4666  0F18                     	;# 
  4667  0F19                     	;# 
  4668  0F1A                     	;# 
  4669  0F1B                     	;# 
  4670  0F1C                     	;# 
  4671  0F1D                     	;# 
  4672  0F1E                     	;# 
  4673  0F1F                     	;# 
  4674  0F20                     	;# 
  4675  0F21                     	;# 
  4676  0F22                     	;# 
  4677  0F23                     	;# 
  4678  0F24                     	;# 
  4679  0F25                     	;# 
  4680  0F26                     	;# 
  4681  0F27                     	;# 
  4682  0F28                     	;# 
  4683  0F29                     	;# 
  4684  0F2A                     	;# 
  4685  0F2B                     	;# 
  4686  0F2C                     	;# 
  4687  0F2D                     	;# 
  4688  0F2E                     	;# 
  4689  0F2F                     	;# 
  4690  0F30                     	;# 
  4691  0F31                     	;# 
  4692  0F32                     	;# 
  4693  0F33                     	;# 
  4694  0F34                     	;# 
  4695  0F35                     	;# 
  4696  0F36                     	;# 
  4697  0F37                     	;# 
  4698  0FE4                     	;# 
  4699  0FE5                     	;# 
  4700  0FE6                     	;# 
  4701  0FE7                     	;# 
  4702  0FE8                     	;# 
  4703  0FE9                     	;# 
  4704  0FEA                     	;# 
  4705  0FEB                     	;# 
  4706  0FED                     	;# 
  4707  0FEE                     	;# 
  4708  0FEF                     	;# 
  4709                           
  4710 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
  4711  0000                     
  4712 ;; Function _TMR1_DefaultInterruptHandler is unused but had its address taken
  4713  001C                     _T1GCONbits	set	28
  4714  001B                     _T1CONbits	set	27
  4715  001B                     _T1CON	set	27
  4716  0011                     _PIR1bits	set	17
  4717  0019                     _TMR1L	set	25
  4718  001A                     _TMR1H	set	26
  4719  001C                     _T1GCON	set	28
  4720  0014                     _PIR4bits	set	20
  4721  0017                     _T0CON0bits	set	23
  4722  0017                     _T0CON0	set	23
  4723  0010                     _PIR0bits	set	16
  4724  0015                     _TMR0L	set	21
  4725  0016                     _TMR0H	set	22
  4726  0018                     _T0CON1	set	24
  4727  000D                     _PORTBbits	set	13
  4728  000E                     _PORTCbits	set	14
  4729  000C                     _PORTAbits	set	12
  4730  000B                     _INTCONbits	set	11
  4731  0014                     _PIR4	set	20
  4732  0013                     _PIR3	set	19
  4733  0012                     _PIR2	set	18
  4734  0011                     _PIR1	set	17
  4735  0010                     _PIR0	set	16
  4736  0091                     _PIE1bits	set	145
  4737  0094                     _PIE4bits	set	148
  4738  0090                     _PIE0bits	set	144
  4739  0097                     _WDTCON	set	151
  4740  008D                     _TRISBbits	set	141
  4741  008E                     _TRISCbits	set	142
  4742  008C                     _TRISAbits	set	140
  4743  008E                     _TRISC	set	142
  4744  008D                     _TRISB	set	141
  4745  008C                     _TRISA	set	140
  4746  0094                     _PIE4	set	148
  4747  0093                     _PIE3	set	147
  4748  0092                     _PIE2	set	146
  4749  0091                     _PIE1	set	145
  4750  0090                     _PIE0	set	144
  4751  010D                     _LATBbits	set	269
  4752  010E                     _LATCbits	set	270
  4753  010C                     _LATAbits	set	268
  4754  010E                     _LATC	set	270
  4755  010D                     _LATB	set	269
  4756  010C                     _LATA	set	268
  4757  0199                     _RC1REG	set	409
  4758  019D                     _RC1STAbits	set	413
  4759  019A                     _TX1REG	set	410
  4760  019E                     _TX1STAbits	set	414
  4761  019C                     _SP1BRGH	set	412
  4762  019B                     _SP1BRGL	set	411
  4763  019E                     _TX1STA	set	414
  4764  019D                     _RC1STA	set	413
  4765  019F                     _BAUD1CON	set	415
  4766  018C                     _ANSELA	set	396
  4767  018D                     _ANSELB	set	397
  4768  018E                     _ANSELC	set	398
  4769  020E                     _WPUC	set	526
  4770  020C                     _WPUA	set	524
  4771  020D                     _WPUB	set	525
  4772  0295                     _CCPR2L	set	661
  4773  0296                     _CCPR2H	set	662
  4774  0298                     _CCP2CAP	set	664
  4775  0297                     _CCP2CON	set	663
  4776  029F                     _CCPTMRSbits	set	671
  4777  0291                     _CCPR1L	set	657
  4778  0292                     _CCPR1H	set	658
  4779  0294                     _CCP1CAP	set	660
  4780  0293                     _CCP1CON	set	659
  4781  028E                     _ODCONC	set	654
  4782  028D                     _ODCONB	set	653
  4783  028C                     _ODCONA	set	652
  4784  0311                     _CCPR3L	set	785
  4785  0312                     _CCPR3H	set	786
  4786  0314                     _CCP3CAP	set	788
  4787  0313                     _CCP3CON	set	787
  4788  030E                     _SLRCONC	set	782
  4789  030D                     _SLRCONB	set	781
  4790  030C                     _SLRCONA	set	780
  4791  038E                     _INLVLC	set	910
  4792  038D                     _INLVLB	set	909
  4793  038C                     _INLVLA	set	908
  4794  0916                     _PMD5	set	2326
  4795  0915                     _PMD4	set	2325
  4796  0914                     _PMD3	set	2324
  4797  0913                     _PMD2	set	2323
  4798  0912                     _PMD1	set	2322
  4799  0911                     _PMD0	set	2321
  4800  091E                     _OSCTUNE	set	2334
  4801  091F                     _OSCFRQ	set	2335
  4802  091D                     _OSCEN	set	2333
  4803  091B                     _OSCCON3	set	2331
  4804  0919                     _OSCCON1	set	2329
  4805  48E0                     _PLLR	set	18656
  4806  0E14                     _CCP1PPS	set	3604
  4807  0E16                     _CCP3PPS	set	3606
  4808  0E15                     _CCP2PPS	set	3605
  4809  0E24                     _RXPPS	set	3620
  4810  0EA4                     _RC4PPS	set	3748
  4811                           
  4812                           	psect	stringtext1
  4813  1000                     __pstringtext1:
  4814  1000                     STR_1:
  4815  1000  3444               	retlw	68	;'D'
  4816  1001  3469               	retlw	105	;'i'
  4817  1002  3473               	retlw	115	;'s'
  4818  1003  3474               	retlw	116	;'t'
  4819  1004  3461               	retlw	97	;'a'
  4820  1005  346E               	retlw	110	;'n'
  4821  1006  3463               	retlw	99	;'c'
  4822  1007  3465               	retlw	101	;'e'
  4823  1008  3420               	retlw	32	;' '
  4824  1009  343D               	retlw	61	;'='
  4825  100A  3420               	retlw	32	;' '
  4826  100B  3425               	retlw	37	;'%'
  4827  100C  3475               	retlw	117	;'u'
  4828  100D  3420               	retlw	32	;' '
  4829  100E  340A               	retlw	10
  4830  100F  3400               	retlw	0
  4831                           
  4832                           	psect	stringtext2
  4833  0000                     __pstringtext2:
  4834                           
  4835                           	psect	cinit
  4836  0076                     start_initialization:	
  4837                           ; #config settings
  4838                           
  4839  0076                     __initialization:
  4840                           
  4841                           ; Clear objects allocated to COMMON
  4842  0076  01F0               	clrf	__pbssCOMMON& (0+127)
  4843  0077  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  4844  0078  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  4845  0079  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  4846  007A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  4847  007B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  4848  007C  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  4849                           
  4850                           ; Clear objects allocated to BANK1
  4851  007D  30A0               	movlw	low __pbssBANK1
  4852  007E  0084               	movwf	4
  4853  007F  3000               	movlw	high __pbssBANK1
  4854  0080  0085               	movwf	5
  4855  0081  303F               	movlw	63
  4856  0082  318C  247A  3180   	fcall	clear_ram0
  4857                           
  4858                           ; Clear objects allocated to BANK2
  4859  0085  3020               	movlw	low __pbssBANK2
  4860  0086  0084               	movwf	4
  4861  0087  3001               	movlw	high __pbssBANK2
  4862  0088  0085               	movwf	5
  4863  0089  303C               	movlw	60
  4864  008A  318C  247A  3180   	fcall	clear_ram0
  4865  008D                     end_of_initialization:	
  4866                           ;End of C runtime variable initialization code
  4867                           
  4868  008D                     __end_of__initialization:
  4869  008D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4870  008E  0020               	movlb	0
  4871  008F  3183  2BB9         	ljmp	_main	;jump to C main() function
  4872                           
  4873                           	psect	bssCOMMON
  4874  0070                     __pbssCOMMON:
  4875  0070                     _eusartRxCount:
  4876  0070                     	ds	1
  4877  0071                     _eusartRxTail:
  4878  0071                     	ds	1
  4879  0072                     _eusartRxHead:
  4880  0072                     	ds	1
  4881  0073                     _eusartTxBufferRemaining:
  4882  0073                     	ds	1
  4883  0074                     _eusartTxTail:
  4884  0074                     	ds	1
  4885  0075                     _eusartTxHead:
  4886  0075                     	ds	1
  4887  0076                     _lastTrig:
  4888  0076                     	ds	1
  4889                           
  4890                           	psect	bssBANK1
  4891  00A0                     __pbssBANK1:
  4892  00A0                     _eusartRxStatusBuffer:
  4893  00A0                     	ds	8
  4894  00A8                     _micros@FR_Timer$F164:
  4895  00A8                     	ds	4
  4896  00AC                     _millis:
  4897  00AC                     	ds	4
  4898  00B0                     _micros:
  4899  00B0                     	ds	4
  4900  00B4                     _nout:
  4901  00B4                     	ds	2
  4902  00B6                     _width:
  4903  00B6                     	ds	2
  4904  00B8                     _prec:
  4905  00B8                     	ds	2
  4906  00BA                     _flags:
  4907  00BA                     	ds	2
  4908  00BC                     _EUSART_ErrorHandler:
  4909  00BC                     	ds	2
  4910  00BE                     _EUSART_OverrunErrorHandler:
  4911  00BE                     	ds	2
  4912  00C0                     _EUSART_FramingErrorHandler:
  4913  00C0                     	ds	2
  4914  00C2                     _EUSART_RxDefaultInterruptHandler:
  4915  00C2                     	ds	2
  4916  00C4                     _EUSART_TxDefaultInterruptHandler:
  4917  00C4                     	ds	2
  4918  00C6                     _TMR1_InterruptHandler:
  4919  00C6                     	ds	2
  4920  00C8                     _timer1ReloadVal:
  4921  00C8                     	ds	2
  4922  00CA                     _CCP3_CallBack:
  4923  00CA                     	ds	2
  4924  00CC                     _CCP2_CallBack:
  4925  00CC                     	ds	2
  4926  00CE                     _ticksDown:
  4927  00CE                     	ds	2
  4928  00D0                     _ticksUp:
  4929  00D0                     	ds	2
  4930  00D2                     _CCP1_CallBack:
  4931  00D2                     	ds	2
  4932  00D4                     TMR0_ISR@CountCallBack:
  4933  00D4                     	ds	2
  4934  00D6                     _TMR0_InterruptHandler:
  4935  00D6                     	ds	2
  4936  00D8                     _eusartRxLastError:
  4937  00D8                     	ds	1
  4938  00D9                     _Sens1:
  4939  00D9                     	ds	6
  4940                           
  4941                           	psect	bssBANK2
  4942  0120                     __pbssBANK2:
  4943  0120                     _eusartRxBuffer:
  4944  0120                     	ds	8
  4945  0128                     _eusartTxBuffer:
  4946  0128                     	ds	8
  4947  0130                     _Sens3:
  4948  0130                     	ds	6
  4949  0136                     _Sens2:
  4950  0136                     	ds	6
  4951  013C                     _dbuf:
  4952  013C                     	ds	32
  4953                           
  4954                           	psect	clrtext
  4955  0C7A                     clear_ram0:	
  4956                           ;	Called with FSR0 containing the base address, and
  4957                           ;	WREG with the size to clear
  4958                           
  4959  0C7A  0064               	clrwdt	;clear the watchdog before getting into this loop
  4960  0C7B                     clrloop0:
  4961  0C7B  0180               	clrf	0	;clear RAM location pointed to by FSR
  4962  0C7C  3101               	addfsr 0,1
  4963  0C7D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4964  0C7E  2C7B               	goto	clrloop0	;have we reached the end yet?
  4965  0C7F  3400               	retlw	0	;all done for this memory range, return
  4966                           
  4967                           	psect	cstackBANK1
  4968  00DF                     __pcstackBANK1:
  4969  00DF                     ??_printf:
  4970                           
  4971                           ; 1 bytes @ 0x0
  4972  00DF                     	ds	1
  4973  00E0                     printf@ap:
  4974                           
  4975                           ; 1 bytes @ 0x1
  4976  00E0                     	ds	1
  4977  00E1                     ??_main:
  4978                           
  4979                           ; 1 bytes @ 0x2
  4980  00E1                     	ds	4
  4981  00E5                     main@prevMilli:
  4982                           
  4983                           ; 4 bytes @ 0x6
  4984  00E5                     	ds	4
  4985  00E9                     main@currMilli:
  4986                           
  4987                           ; 4 bytes @ 0xA
  4988  00E9                     	ds	4
  4989                           
  4990                           	psect	cstackCOMMON
  4991  0077                     __pcstackCOMMON:
  4992  0077                     ?_TMR1_Initialize:
  4993  0077                     ?_CCP1_Initialize:	
  4994                           ; 1 bytes @ 0x0
  4995                           
  4996  0077                     ?_PIC16_Init:	
  4997                           ; 1 bytes @ 0x0
  4998                           
  4999  0077                     ?_FR_Timer_Init:	
  5000                           ; 1 bytes @ 0x0
  5001                           
  5002  0077                     ?_JSN_GetLastTrig:	
  5003                           ; 1 bytes @ 0x0
  5004                           
  5005  0077                     ??_JSN_GetLastTrig:	
  5006                           ; 1 bytes @ 0x0
  5007                           
  5008  0077                     ?_TMR0_Initialize:	
  5009                           ; 1 bytes @ 0x0
  5010                           
  5011  0077                     ?_TMR0_ReadTimer:	
  5012                           ; 1 bytes @ 0x0
  5013                           
  5014  0077                     ?_SYSTEM_Initialize:	
  5015                           ; 1 bytes @ 0x0
  5016                           
  5017  0077                     ?_PMD_Initialize:	
  5018                           ; 1 bytes @ 0x0
  5019                           
  5020  0077                     ?_PIN_MANAGER_Initialize:	
  5021                           ; 1 bytes @ 0x0
  5022                           
  5023  0077                     ?_OSCILLATOR_Initialize:	
  5024                           ; 1 bytes @ 0x0
  5025                           
  5026  0077                     ?_WDT_Initialize:	
  5027                           ; 1 bytes @ 0x0
  5028                           
  5029  0077                     ?_CCP2_Initialize:	
  5030                           ; 1 bytes @ 0x0
  5031                           
  5032  0077                     ?_CCP3_Initialize:	
  5033                           ; 1 bytes @ 0x0
  5034                           
  5035  0077                     ?_EUSART_Initialize:	
  5036                           ; 1 bytes @ 0x0
  5037                           
  5038  0077                     ?_TMR0_CallBack:	
  5039                           ; 1 bytes @ 0x0
  5040                           
  5041  0077                     ??_TMR0_CallBack:	
  5042                           ; 1 bytes @ 0x0
  5043                           
  5044  0077                     ?_EUSART_Receive_ISR:	
  5045                           ; 1 bytes @ 0x0
  5046                           
  5047  0077                     ?_EUSART_Transmit_ISR:	
  5048                           ; 1 bytes @ 0x0
  5049                           
  5050  0077                     ??_EUSART_Transmit_ISR:	
  5051                           ; 1 bytes @ 0x0
  5052                           
  5053  0077                     ?_EUSART_DefaultFramingErrorHandler:	
  5054                           ; 1 bytes @ 0x0
  5055                           
  5056  0077                     ??_EUSART_DefaultFramingErrorHandler:	
  5057                           ; 1 bytes @ 0x0
  5058                           
  5059  0077                     ?_EUSART_DefaultOverrunErrorHandler:	
  5060                           ; 1 bytes @ 0x0
  5061                           
  5062  0077                     ??_EUSART_DefaultOverrunErrorHandler:	
  5063                           ; 1 bytes @ 0x0
  5064                           
  5065  0077                     ?_EUSART_DefaultErrorHandler:	
  5066                           ; 1 bytes @ 0x0
  5067                           
  5068  0077                     ?_EUSART_RxDataHandler:	
  5069                           ; 1 bytes @ 0x0
  5070                           
  5071  0077                     ??_EUSART_RxDataHandler:	
  5072                           ; 1 bytes @ 0x0
  5073                           
  5074  0077                     ?_JSN_Library_Init:	
  5075                           ; 1 bytes @ 0x0
  5076                           
  5077  0077                     ?_JSN_Sensor_Trig:	
  5078                           ; 1 bytes @ 0x0
  5079                           
  5080  0077                     ?_FR_Timer_IncMillis:	
  5081                           ; 1 bytes @ 0x0
  5082                           
  5083  0077                     ??_FR_Timer_IncMillis:	
  5084                           ; 1 bytes @ 0x0
  5085                           
  5086  0077                     ?_FR_Timer_IncMicros:	
  5087                           ; 1 bytes @ 0x0
  5088                           
  5089  0077                     ??_FR_Timer_IncMicros:	
  5090                           ; 1 bytes @ 0x0
  5091                           
  5092  0077                     ?_TMR0_ISR:	
  5093                           ; 1 bytes @ 0x0
  5094                           
  5095  0077                     ??_TMR0_ISR:	
  5096                           ; 1 bytes @ 0x0
  5097                           
  5098  0077                     ?_CCP1_DefaultCallBack:	
  5099                           ; 1 bytes @ 0x0
  5100                           
  5101  0077                     ?_CCP1_CaptureISR:	
  5102                           ; 1 bytes @ 0x0
  5103                           
  5104  0077                     ?_CCP2_DefaultCallBack:	
  5105                           ; 1 bytes @ 0x0
  5106                           
  5107  0077                     ?_CCP2_CaptureISR:	
  5108                           ; 1 bytes @ 0x0
  5109                           
  5110  0077                     ?_CCP3_DefaultCallBack:	
  5111                           ; 1 bytes @ 0x0
  5112                           
  5113  0077                     ?_CCP3_CaptureISR:	
  5114                           ; 1 bytes @ 0x0
  5115                           
  5116  0077                     ?_TMR1_WriteTimer:	
  5117                           ; 1 bytes @ 0x0
  5118                           
  5119  0077                     ?_TMR1_ISR:	
  5120                           ; 1 bytes @ 0x0
  5121                           
  5122  0077                     ?_EUSART_Write:	
  5123                           ; 1 bytes @ 0x0
  5124                           
  5125  0077                     ?_putch:	
  5126                           ; 1 bytes @ 0x0
  5127                           
  5128  0077                     ?_INTERRUPT_InterruptManager:	
  5129                           ; 1 bytes @ 0x0
  5130                           
  5131  0077                     ?_main:	
  5132                           ; 1 bytes @ 0x0
  5133                           
  5134  0077                     CCP1_DefaultCallBack@capturedValue:	
  5135                           ; 2 bytes @ 0x0
  5136                           
  5137  0077                     CCP2_DefaultCallBack@capturedValue:	
  5138                           ; 2 bytes @ 0x0
  5139                           
  5140  0077                     CCP3_DefaultCallBack@capturedValue:	
  5141                           ; 2 bytes @ 0x0
  5142                           
  5143  0077                     TMR1_WriteTimer@timerVal:	
  5144                           ; 2 bytes @ 0x0
  5145                           
  5146                           
  5147                           ; 2 bytes @ 0x0
  5148  0077                     	ds	1
  5149  0078                     ??_EUSART_Receive_ISR:
  5150  0078                     ??_EUSART_DefaultErrorHandler:	
  5151                           ; 1 bytes @ 0x1
  5152                           
  5153                           
  5154                           ; 1 bytes @ 0x1
  5155  0078                     	ds	1
  5156  0079                     ??_CCP1_DefaultCallBack:
  5157  0079                     ??_CCP2_DefaultCallBack:	
  5158                           ; 1 bytes @ 0x2
  5159                           
  5160  0079                     ??_CCP2_CaptureISR:	
  5161                           ; 1 bytes @ 0x2
  5162                           
  5163  0079                     ??_CCP3_DefaultCallBack:	
  5164                           ; 1 bytes @ 0x2
  5165                           
  5166  0079                     ??_CCP3_CaptureISR:	
  5167                           ; 1 bytes @ 0x2
  5168                           
  5169  0079                     ??_TMR1_WriteTimer:	
  5170                           ; 1 bytes @ 0x2
  5171                           
  5172  0079                     ??_TMR1_ISR:	
  5173                           ; 1 bytes @ 0x2
  5174                           
  5175                           
  5176                           ; 1 bytes @ 0x2
  5177  0079                     	ds	1
  5178  007A                     CCP2_CaptureISR@module:
  5179  007A                     CCP3_CaptureISR@module:	
  5180                           ; 2 bytes @ 0x3
  5181                           
  5182                           
  5183                           ; 2 bytes @ 0x3
  5184  007A                     	ds	1
  5185  007B                     ??_CCP1_CaptureISR:
  5186                           
  5187                           ; 1 bytes @ 0x4
  5188  007B                     	ds	1
  5189  007C                     CCP1_CaptureISR@module:
  5190                           
  5191                           ; 2 bytes @ 0x5
  5192  007C                     	ds	2
  5193  007E                     ??_INTERRUPT_InterruptManager:
  5194                           
  5195                           	psect	cstackBANK0
  5196  0020                     __pcstackBANK0:	
  5197                           ; 1 bytes @ 0x7
  5198                           
  5199  0020                     ?_SetPin:
  5200  0020                     ?_WritePin:	
  5201                           ; 1 bytes @ 0x0
  5202                           
  5203  0020                     ??_TMR0_ReadTimer:	
  5204                           ; 1 bytes @ 0x0
  5205                           
  5206  0020                     ??_PMD_Initialize:	
  5207                           ; 1 bytes @ 0x0
  5208                           
  5209  0020                     ??_PIN_MANAGER_Initialize:	
  5210                           ; 1 bytes @ 0x0
  5211                           
  5212  0020                     ??_OSCILLATOR_Initialize:	
  5213                           ; 1 bytes @ 0x0
  5214                           
  5215  0020                     ??_WDT_Initialize:	
  5216                           ; 1 bytes @ 0x0
  5217                           
  5218  0020                     ?_TMR0_SetInterruptHandler:	
  5219                           ; 1 bytes @ 0x0
  5220                           
  5221  0020                     ?_CCP1_SetCallBack:	
  5222                           ; 1 bytes @ 0x0
  5223                           
  5224  0020                     ?_CCP2_SetCallBack:	
  5225                           ; 1 bytes @ 0x0
  5226                           
  5227  0020                     ?_CCP3_SetCallBack:	
  5228                           ; 1 bytes @ 0x0
  5229                           
  5230  0020                     ?_TMR1_SetInterruptHandler:	
  5231                           ; 1 bytes @ 0x0
  5232                           
  5233  0020                     ?_EUSART_SetRxInterruptHandler:	
  5234                           ; 1 bytes @ 0x0
  5235                           
  5236  0020                     ?_EUSART_SetTxInterruptHandler:	
  5237                           ; 1 bytes @ 0x0
  5238                           
  5239  0020                     ?_EUSART_SetFramingErrorHandler:	
  5240                           ; 1 bytes @ 0x0
  5241                           
  5242  0020                     ?_EUSART_SetOverrunErrorHandler:	
  5243                           ; 1 bytes @ 0x0
  5244                           
  5245  0020                     ?_EUSART_SetErrorHandler:	
  5246                           ; 1 bytes @ 0x0
  5247                           
  5248  0020                     ??_EUSART_Write:	
  5249                           ; 1 bytes @ 0x0
  5250                           
  5251  0020                     ?_strlen:	
  5252                           ; 1 bytes @ 0x0
  5253                           
  5254  0020                     ?_FR_Timer_GetMillis:	
  5255                           ; 2 bytes @ 0x0
  5256                           
  5257  0020                     ?___lmul:	
  5258                           ; 4 bytes @ 0x0
  5259                           
  5260  0020                     ?___lodiv:	
  5261                           ; 4 bytes @ 0x0
  5262                           
  5263  0020                     ?___lomod:	
  5264                           ; 8 bytes @ 0x0
  5265                           
  5266  0020                     SetPin@io:	
  5267                           ; 8 bytes @ 0x0
  5268                           
  5269  0020                     WritePin@val:	
  5270                           ; 1 bytes @ 0x0
  5271                           
  5272  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  5273                           ; 1 bytes @ 0x0
  5274                           
  5275  0020                     CCP1_SetCallBack@customCallBack:	
  5276                           ; 2 bytes @ 0x0
  5277                           
  5278  0020                     CCP2_SetCallBack@customCallBack:	
  5279                           ; 2 bytes @ 0x0
  5280                           
  5281  0020                     CCP3_SetCallBack@customCallBack:	
  5282                           ; 2 bytes @ 0x0
  5283                           
  5284  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  5285                           ; 2 bytes @ 0x0
  5286                           
  5287  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  5288                           ; 2 bytes @ 0x0
  5289                           
  5290  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  5291                           ; 2 bytes @ 0x0
  5292                           
  5293  0020                     EUSART_SetErrorHandler@interruptHandler:	
  5294                           ; 2 bytes @ 0x0
  5295                           
  5296  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  5297                           ; 2 bytes @ 0x0
  5298                           
  5299  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  5300                           ; 2 bytes @ 0x0
  5301                           
  5302  0020                     ___lmul@multiplier:	
  5303                           ; 2 bytes @ 0x0
  5304                           
  5305  0020                     ___lodiv@divisor:	
  5306                           ; 4 bytes @ 0x0
  5307                           
  5308  0020                     ___lomod@divisor:	
  5309                           ; 8 bytes @ 0x0
  5310                           
  5311                           
  5312                           ; 8 bytes @ 0x0
  5313  0020                     	ds	1
  5314  0021                     ??_SetPin:
  5315  0021                     ??_WritePin:	
  5316                           ; 1 bytes @ 0x1
  5317                           
  5318  0021                     TMR0_ReadTimer@readVal:	
  5319                           ; 1 bytes @ 0x1
  5320                           
  5321  0021                     EUSART_Write@txData:	
  5322                           ; 1 bytes @ 0x1
  5323                           
  5324                           
  5325                           ; 1 bytes @ 0x1
  5326  0021                     	ds	1
  5327  0022                     ??_TMR1_Initialize:
  5328  0022                     ??_CCP1_Initialize:	
  5329                           ; 1 bytes @ 0x2
  5330                           
  5331  0022                     ??_FR_Timer_Init:	
  5332                           ; 1 bytes @ 0x2
  5333                           
  5334  0022                     ??_TMR0_Initialize:	
  5335                           ; 1 bytes @ 0x2
  5336                           
  5337  0022                     ??_CCP2_Initialize:	
  5338                           ; 1 bytes @ 0x2
  5339                           
  5340  0022                     ??_CCP3_Initialize:	
  5341                           ; 1 bytes @ 0x2
  5342                           
  5343  0022                     ??_EUSART_Initialize:	
  5344                           ; 1 bytes @ 0x2
  5345                           
  5346  0022                     ??_TMR0_SetInterruptHandler:	
  5347                           ; 1 bytes @ 0x2
  5348                           
  5349  0022                     ??_CCP1_SetCallBack:	
  5350                           ; 1 bytes @ 0x2
  5351                           
  5352  0022                     ??_CCP2_SetCallBack:	
  5353                           ; 1 bytes @ 0x2
  5354                           
  5355  0022                     ??_CCP3_SetCallBack:	
  5356                           ; 1 bytes @ 0x2
  5357                           
  5358  0022                     ??_TMR1_SetInterruptHandler:	
  5359                           ; 1 bytes @ 0x2
  5360                           
  5361  0022                     ??_EUSART_SetRxInterruptHandler:	
  5362                           ; 1 bytes @ 0x2
  5363                           
  5364  0022                     ??_EUSART_SetTxInterruptHandler:	
  5365                           ; 1 bytes @ 0x2
  5366                           
  5367  0022                     ??_EUSART_SetFramingErrorHandler:	
  5368                           ; 1 bytes @ 0x2
  5369                           
  5370  0022                     ??_EUSART_SetOverrunErrorHandler:	
  5371                           ; 1 bytes @ 0x2
  5372                           
  5373  0022                     ??_EUSART_SetErrorHandler:	
  5374                           ; 1 bytes @ 0x2
  5375                           
  5376  0022                     ??_strlen:	
  5377                           ; 1 bytes @ 0x2
  5378                           
  5379  0022                     ??_putch:	
  5380                           ; 1 bytes @ 0x2
  5381                           
  5382  0022                     ?_FR_Timer_GetMicros:	
  5383                           ; 1 bytes @ 0x2
  5384                           
  5385  0022                     putch@txData:	
  5386                           ; 4 bytes @ 0x2
  5387                           
  5388                           
  5389                           ; 1 bytes @ 0x2
  5390  0022                     	ds	1
  5391  0023                     ??_PIC16_Init:
  5392  0023                     ??_SYSTEM_Initialize:	
  5393                           ; 1 bytes @ 0x3
  5394                           
  5395  0023                     ?_fputc:	
  5396                           ; 1 bytes @ 0x3
  5397                           
  5398  0023                     SetPin@pin:	
  5399                           ; 2 bytes @ 0x3
  5400                           
  5401  0023                     WritePin@pin:	
  5402                           ; 1 bytes @ 0x3
  5403                           
  5404  0023                     strlen@a:	
  5405                           ; 1 bytes @ 0x3
  5406                           
  5407  0023                     fputc@c:	
  5408                           ; 1 bytes @ 0x3
  5409                           
  5410                           
  5411                           ; 2 bytes @ 0x3
  5412  0023                     	ds	1
  5413  0024                     ?_JSN_Sensor_Init:
  5414  0024                     ??_FR_Timer_GetMillis:	
  5415                           ; 1 bytes @ 0x4
  5416                           
  5417  0024                     JSN_Sensor_Init@trigPin:	
  5418                           ; 1 bytes @ 0x4
  5419                           
  5420  0024                     strlen@s:	
  5421                           ; 1 bytes @ 0x4
  5422                           
  5423  0024                     ___lmul@multiplicand:	
  5424                           ; 1 bytes @ 0x4
  5425                           
  5426                           
  5427                           ; 4 bytes @ 0x4
  5428  0024                     	ds	1
  5429  0025                     JSN_Sensor_Init@echoPin:
  5430  0025                     fputc@fp:	
  5431                           ; 1 bytes @ 0x5
  5432                           
  5433                           
  5434                           ; 1 bytes @ 0x5
  5435  0025                     	ds	1
  5436  0026                     ??_JSN_Sensor_Init:
  5437  0026                     ??_FR_Timer_GetMicros:	
  5438                           ; 1 bytes @ 0x6
  5439                           
  5440  0026                     ??_fputc:	
  5441                           ; 1 bytes @ 0x6
  5442                           
  5443  0026                     ??_JSN_Sensor_Trig:	
  5444                           ; 1 bytes @ 0x6
  5445                           
  5446                           
  5447                           ; 1 bytes @ 0x6
  5448  0026                     	ds	2
  5449  0028                     ??___lmul:
  5450  0028                     JSN_Sensor_Init@Sensor:	
  5451                           ; 1 bytes @ 0x8
  5452                           
  5453  0028                     ___lmul@product:	
  5454                           ; 1 bytes @ 0x8
  5455                           
  5456  0028                     ___lodiv@dividend:	
  5457                           ; 4 bytes @ 0x8
  5458                           
  5459  0028                     ___lomod@dividend:	
  5460                           ; 8 bytes @ 0x8
  5461                           
  5462                           
  5463                           ; 8 bytes @ 0x8
  5464  0028                     	ds	1
  5465  0029                     ??_JSN_Library_Init:
  5466                           
  5467                           ; 1 bytes @ 0x9
  5468  0029                     	ds	1
  5469  002A                     JSN_Sensor_Trig@Sensor:
  5470                           
  5471                           ; 1 bytes @ 0xA
  5472  002A                     	ds	1
  5473  002B                     ?_fputs:
  5474  002B                     fputs@fp:	
  5475                           ; 2 bytes @ 0xB
  5476                           
  5477                           
  5478                           ; 1 bytes @ 0xB
  5479  002B                     	ds	1
  5480  002C                     ??_fputs:
  5481  002C                     ?___lldiv:	
  5482                           ; 1 bytes @ 0xC
  5483                           
  5484  002C                     ___lldiv@divisor:	
  5485                           ; 4 bytes @ 0xC
  5486                           
  5487                           
  5488                           ; 4 bytes @ 0xC
  5489  002C                     	ds	3
  5490  002F                     fputs@c:
  5491                           
  5492                           ; 1 bytes @ 0xF
  5493  002F                     	ds	1
  5494  0030                     ??___lodiv:
  5495  0030                     ??___lomod:	
  5496                           ; 1 bytes @ 0x10
  5497                           
  5498  0030                     fputs@i:	
  5499                           ; 1 bytes @ 0x10
  5500                           
  5501  0030                     ___lldiv@dividend:	
  5502                           ; 2 bytes @ 0x10
  5503                           
  5504                           
  5505                           ; 4 bytes @ 0x10
  5506  0030                     	ds	1
  5507  0031                     ___lomod@counter:
  5508  0031                     ___lodiv@quotient:	
  5509                           ; 1 bytes @ 0x11
  5510                           
  5511                           
  5512                           ; 8 bytes @ 0x11
  5513  0031                     	ds	1
  5514  0032                     fputs@s:
  5515                           
  5516                           ; 1 bytes @ 0x12
  5517  0032                     	ds	1
  5518  0033                     ?_pad:
  5519  0033                     pad@buf:	
  5520                           ; 2 bytes @ 0x13
  5521                           
  5522                           
  5523                           ; 1 bytes @ 0x13
  5524  0033                     	ds	1
  5525  0034                     ??___lldiv:
  5526  0034                     pad@p:	
  5527                           ; 1 bytes @ 0x14
  5528                           
  5529                           
  5530                           ; 2 bytes @ 0x14
  5531  0034                     	ds	1
  5532  0035                     ___lldiv@quotient:
  5533                           
  5534                           ; 4 bytes @ 0x15
  5535  0035                     	ds	1
  5536  0036                     ??_pad:
  5537                           
  5538                           ; 1 bytes @ 0x16
  5539  0036                     	ds	1
  5540  0037                     pad@i:
  5541                           
  5542                           ; 2 bytes @ 0x17
  5543  0037                     	ds	2
  5544  0039                     ___lldiv@counter:
  5545  0039                     ___lodiv@counter:	
  5546                           ; 1 bytes @ 0x19
  5547                           
  5548  0039                     pad@w:	
  5549                           ; 1 bytes @ 0x19
  5550                           
  5551                           
  5552                           ; 2 bytes @ 0x19
  5553  0039                     	ds	1
  5554  003A                     ?_JSN_Sensor_GetDistance:
  5555                           
  5556                           ; 2 bytes @ 0x1A
  5557  003A                     	ds	1
  5558  003B                     pad@fp:
  5559                           
  5560                           ; 1 bytes @ 0x1B
  5561  003B                     	ds	1
  5562  003C                     ??_JSN_Sensor_GetDistance:
  5563  003C                     ?_utoa:	
  5564                           ; 1 bytes @ 0x1C
  5565                           
  5566  003C                     utoa@d:	
  5567                           ; 2 bytes @ 0x1C
  5568                           
  5569                           
  5570                           ; 8 bytes @ 0x1C
  5571  003C                     	ds	2
  5572  003E                     JSN_Sensor_GetDistance@Sensor:
  5573                           
  5574                           ; 1 bytes @ 0x1E
  5575  003E                     	ds	6
  5576  0044                     ??_utoa:
  5577                           
  5578                           ; 1 bytes @ 0x24
  5579  0044                     	ds	1
  5580  0045                     utoa@fp:
  5581                           
  5582                           ; 1 bytes @ 0x25
  5583  0045                     	ds	1
  5584  0046                     utoa@p:
  5585                           
  5586                           ; 2 bytes @ 0x26
  5587  0046                     	ds	2
  5588  0048                     utoa@w:
  5589                           
  5590                           ; 2 bytes @ 0x28
  5591  0048                     	ds	2
  5592  004A                     utoa@n:
  5593                           
  5594                           ; 8 bytes @ 0x2A
  5595  004A                     	ds	8
  5596  0052                     utoa@i:
  5597                           
  5598                           ; 2 bytes @ 0x32
  5599  0052                     	ds	2
  5600  0054                     ?_vfpfcnvrt:
  5601  0054                     vfpfcnvrt@fmt:	
  5602                           ; 2 bytes @ 0x34
  5603                           
  5604                           
  5605                           ; 1 bytes @ 0x34
  5606  0054                     	ds	1
  5607  0055                     vfpfcnvrt@ap:
  5608                           
  5609                           ; 1 bytes @ 0x35
  5610  0055                     	ds	1
  5611  0056                     ??_vfpfcnvrt:
  5612                           
  5613                           ; 1 bytes @ 0x36
  5614  0056                     	ds	5
  5615  005B                     vfpfcnvrt@llu:
  5616                           
  5617                           ; 8 bytes @ 0x3B
  5618  005B                     	ds	8
  5619  0063                     vfpfcnvrt@fp:
  5620                           
  5621                           ; 1 bytes @ 0x43
  5622  0063                     	ds	1
  5623  0064                     ?_vfprintf:
  5624  0064                     vfprintf@fmt:	
  5625                           ; 2 bytes @ 0x44
  5626                           
  5627                           
  5628                           ; 2 bytes @ 0x44
  5629  0064                     	ds	2
  5630  0066                     vfprintf@ap:
  5631                           
  5632                           ; 1 bytes @ 0x46
  5633  0066                     	ds	1
  5634  0067                     ??_vfprintf:
  5635                           
  5636                           ; 1 bytes @ 0x47
  5637  0067                     	ds	2
  5638  0069                     vfprintf@fp:
  5639                           
  5640                           ; 1 bytes @ 0x49
  5641  0069                     	ds	1
  5642  006A                     vfprintf@cfmt:
  5643                           
  5644                           ; 2 bytes @ 0x4A
  5645  006A                     	ds	2
  5646  006C                     ?_printf:
  5647  006C                     printf@fmt:	
  5648                           ; 2 bytes @ 0x4C
  5649                           
  5650                           
  5651                           ; 2 bytes @ 0x4C
  5652  006C                     	ds	4
  5653                           
  5654                           	psect	maintext
  5655  03B9                     __pmaintext:	
  5656 ;;
  5657 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  5658 ;;
  5659 ;; *************** function _main *****************
  5660 ;; Defined at:
  5661 ;;		line 139 in file "JSN_Sensor.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;		None
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;  currMilli       4   10[BANK1 ] unsigned long 
  5666 ;;  prevMilli       4    6[BANK1 ] unsigned long 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  2   75[None  ] int 
  5669 ;; Registers used:
  5670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5671 ;; Tracked objects:
  5672 ;;		On entry : B1F/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5679 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;Total ram usage:       12 bytes
  5681 ;; Hardware stack levels required when called: 13
  5682 ;; This function calls:
  5683 ;;		_FR_Timer_GetMillis
  5684 ;;		_FR_Timer_Init
  5685 ;;		_JSN_Library_Init
  5686 ;;		_JSN_Sensor_GetDistance
  5687 ;;		_JSN_Sensor_Trig
  5688 ;;		_PIC16_Init
  5689 ;;		_SetPin
  5690 ;;		_WritePin
  5691 ;;		_printf
  5692 ;; This function is called by:
  5693 ;;		Startup code after reset
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697  03B9                     _main:	
  5698                           ;psect for function _main
  5699                           
  5700  03B9                     l4013:	
  5701                           ;incstack = 0
  5702                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5703                           
  5704                           
  5705                           ;JSN_Sensor.c: 141:     PIC16_Init();
  5706  03B9  3187  2798  3183   	fcall	_PIC16_Init
  5707                           
  5708                           ;JSN_Sensor.c: 142:     FR_Timer_Init();
  5709  03BC  318C  2472  3183   	fcall	_FR_Timer_Init
  5710  03BF                     l4015:
  5711                           
  5712                           ;JSN_Sensor.c: 143:     JSN_Library_Init();
  5713  03BF  318D  2548  3183   	fcall	_JSN_Library_Init
  5714  03C2                     l4017:
  5715  03C2                     l4019:
  5716                           
  5717                           ;JSN_Sensor.c: 147:     unsigned long prevMilli = 0;
  5718  03C2  3000               	movlw	0
  5719  03C3  0021               	movlb	1	; select bank1
  5720  03C4  00E8               	movwf	(main@prevMilli+3)^(0+128)
  5721  03C5  3000               	movlw	0
  5722  03C6  00E7               	movwf	(main@prevMilli+2)^(0+128)
  5723  03C7  3000               	movlw	0
  5724  03C8  00E6               	movwf	(main@prevMilli+1)^(0+128)
  5725  03C9  3000               	movlw	0
  5726  03CA  00E5               	movwf	main@prevMilli^(0+128)
  5727  03CB                     l4021:
  5728                           
  5729                           ;JSN_Sensor.c: 148:     SetPin(C0, 0);
  5730  03CB  0020               	movlb	0	; select bank0
  5731  03CC  01A0               	clrf	SetPin@io
  5732  03CD  300C               	movlw	12
  5733  03CE  3182  22FE  3183   	fcall	_SetPin
  5734  03D1                     l4023:
  5735                           
  5736                           ;JSN_Sensor.c: 149:     WritePin(C0, 0);
  5737  03D1  0020               	movlb	0	; select bank0
  5738  03D2  01A0               	clrf	WritePin@val
  5739  03D3  300C               	movlw	12
  5740  03D4  3182  2243  3183   	fcall	_WritePin
  5741  03D7                     l4025:
  5742                           
  5743                           ;JSN_Sensor.c: 151:     JSN_Sensor_Trig(&Sens1);
  5744  03D7  30D9               	movlw	(low (_Sens1| 0))& (0+255)
  5745  03D8  3186  2679  3183   	fcall	_JSN_Sensor_Trig
  5746  03DB                     l4027:
  5747                           
  5748                           ;JSN_Sensor.c: 154:         currMilli = FR_Timer_GetMillis();
  5749  03DB  318D  2537  3183   	fcall	_FR_Timer_GetMillis
  5750  03DE  0020               	movlb	0	; select bank0
  5751  03DF  0823               	movf	?_FR_Timer_GetMillis+3,w
  5752  03E0  0021               	movlb	1	; select bank1
  5753  03E1  00EC               	movwf	(main@currMilli+3)^(0+128)
  5754  03E2  0020               	movlb	0	; select bank0
  5755  03E3  0822               	movf	?_FR_Timer_GetMillis+2,w
  5756  03E4  0021               	movlb	1	; select bank1
  5757  03E5  00EB               	movwf	(main@currMilli+2)^(0+128)
  5758  03E6  0020               	movlb	0	; select bank0
  5759  03E7  0821               	movf	?_FR_Timer_GetMillis+1,w
  5760  03E8  0021               	movlb	1	; select bank1
  5761  03E9  00EA               	movwf	(main@currMilli+1)^(0+128)
  5762  03EA  0020               	movlb	0	; select bank0
  5763  03EB  0820               	movf	?_FR_Timer_GetMillis,w
  5764  03EC  0021               	movlb	1	; select bank1
  5765  03ED  00E9               	movwf	main@currMilli^(0+128)
  5766  03EE                     l4029:
  5767                           
  5768                           ;JSN_Sensor.c: 157:         if((currMilli - prevMilli) >= 50) {
  5769  03EE  0865               	movf	main@prevMilli^(0+128),w
  5770  03EF  0269               	subwf	main@currMilli^(0+128),w
  5771  03F0  00E1               	movwf	??_main^(0+128)
  5772  03F1  0866               	movf	(main@prevMilli+1)^(0+128),w
  5773  03F2  3B6A               	subwfb	(main@currMilli+1)^(0+128),w
  5774  03F3  00E2               	movwf	(??_main^(0+128)+1)
  5775  03F4  0867               	movf	(main@prevMilli+2)^(0+128),w
  5776  03F5  3B6B               	subwfb	(main@currMilli+2)^(0+128),w
  5777  03F6  00E3               	movwf	(??_main^(0+128)+2)
  5778  03F7  0868               	movf	(main@prevMilli+3)^(0+128),w
  5779  03F8  3B6C               	subwfb	(main@currMilli+3)^(0+128),w
  5780  03F9  00E4               	movwf	(??_main^(0+128)+3)
  5781  03FA  0864               	movf	(??_main^(0+128)+3),w
  5782  03FB  1D03               	btfss	3,2
  5783  03FC  2C09               	goto	u1770
  5784  03FD  0863               	movf	(??_main^(0+128)+2),w
  5785  03FE  1D03               	btfss	3,2
  5786  03FF  2C09               	goto	u1770
  5787  0400  0862               	movf	(??_main^(0+128)+1),w
  5788  0401  1D03               	btfss	3,2
  5789  0402  2C09               	goto	u1770
  5790  0403  3032               	movlw	50
  5791  0404  0261               	subwf	??_main^(0+128),w
  5792  0405  1C03               	btfss	3,0
  5793  0406  2C08               	goto	u1771
  5794  0407  2C09               	goto	u1770
  5795  0408                     u1771:
  5796  0408  2BDB               	goto	l4027
  5797  0409                     u1770:
  5798  0409                     l4031:
  5799                           
  5800                           ;JSN_Sensor.c: 160:             if(JSN_Sensor_GetDistance(&Sens1) < 500) {
  5801  0409  30D9               	movlw	(low (_Sens1| 0))& (0+255)
  5802  040A  3187  2758  3183   	fcall	_JSN_Sensor_GetDistance
  5803  040D  3001               	movlw	1
  5804  040E  0020               	movlb	0	; select bank0
  5805  040F  023B               	subwf	?_JSN_Sensor_GetDistance+1,w
  5806  0410  30F4               	movlw	244
  5807  0411  1903               	skipnz
  5808  0412  023A               	subwf	?_JSN_Sensor_GetDistance,w
  5809  0413  1803               	skipnc
  5810  0414  2C16               	goto	u1781
  5811  0415  2C17               	goto	u1780
  5812  0416                     u1781:
  5813  0416  2C1E               	goto	l4035
  5814  0417                     u1780:
  5815  0417                     l4033:
  5816                           
  5817                           ;JSN_Sensor.c: 161:                 WritePin(C0, 1);
  5818  0417  01A0               	clrf	WritePin@val
  5819  0418  0AA0               	incf	WritePin@val,f
  5820  0419  300C               	movlw	12
  5821  041A  3182  2243  3183   	fcall	_WritePin
  5822                           
  5823                           ;JSN_Sensor.c: 162:             }
  5824  041D  2C2E               	goto	l4039
  5825  041E                     l4035:
  5826  041E  3001               	movlw	1
  5827  041F  0021               	movlb	1	; select bank1
  5828  0420  025C               	subwf	((_Sens1+1)^(0+128)+2),w
  5829  0421  30F5               	movlw	245
  5830  0422  1903               	skipnz
  5831  0423  025B               	subwf	(_Sens1^(0+128)+2),w
  5832  0424  1C03               	skipc
  5833  0425  2C27               	goto	u1791
  5834  0426  2C28               	goto	u1790
  5835  0427                     u1791:
  5836  0427  2C2E               	goto	l4039
  5837  0428                     u1790:
  5838  0428                     l4037:
  5839                           
  5840                           ;JSN_Sensor.c: 164:                 WritePin(C0, 0);
  5841  0428  0020               	movlb	0	; select bank0
  5842  0429  01A0               	clrf	WritePin@val
  5843  042A  300C               	movlw	12
  5844  042B  3182  2243  3183   	fcall	_WritePin
  5845  042E                     l4039:
  5846                           
  5847                           ;JSN_Sensor.c: 168:             printf("Distance = %u \n", JSN_Sensor_GetDistance(&Sens1
      +                          ));
  5848  042E  3000               	movlw	low (STR_1| (0+32768))
  5849  042F  0020               	movlb	0	; select bank0
  5850  0430  00EC               	movwf	printf@fmt
  5851  0431  3090               	movlw	high (STR_1| (0+32768))
  5852  0432  00ED               	movwf	printf@fmt+1
  5853  0433  30D9               	movlw	(low (_Sens1| 0))& (0+255)
  5854  0434  3187  2758  3183   	fcall	_JSN_Sensor_GetDistance
  5855  0437  0020               	movlb	0	; select bank0
  5856  0438  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  5857  0439  00EF               	movwf	?_printf+3
  5858  043A  083A               	movf	?_JSN_Sensor_GetDistance,w
  5859  043B  00EE               	movwf	?_printf+2
  5860  043C  318D  2571  3183   	fcall	_printf
  5861  043F                     l4041:
  5862                           
  5863                           ;JSN_Sensor.c: 171:             JSN_Sensor_Trig(&Sens1);
  5864  043F  30D9               	movlw	(low (_Sens1| 0))& (0+255)
  5865  0440  3186  2679  3183   	fcall	_JSN_Sensor_Trig
  5866  0443                     l4043:
  5867                           
  5868                           ;JSN_Sensor.c: 174:             prevMilli = currMilli;
  5869  0443  0021               	movlb	1	; select bank1
  5870  0444  086C               	movf	(main@currMilli+3)^(0+128),w
  5871  0445  00E8               	movwf	(main@prevMilli+3)^(0+128)
  5872  0446  086B               	movf	(main@currMilli+2)^(0+128),w
  5873  0447  00E7               	movwf	(main@prevMilli+2)^(0+128)
  5874  0448  086A               	movf	(main@currMilli+1)^(0+128),w
  5875  0449  00E6               	movwf	(main@prevMilli+1)^(0+128)
  5876  044A  0869               	movf	main@currMilli^(0+128),w
  5877  044B  00E5               	movwf	main@prevMilli^(0+128)
  5878  044C  2BDB               	goto	l4027
  5879  044D  3180  2874         	ljmp	start
  5880  044F                     __end_of_main:
  5881                           
  5882                           	psect	text1
  5883  0D71                     __ptext1:	
  5884 ;; *************** function _printf *****************
  5885 ;; Defined at:
  5886 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\printf.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
  5889 ;;		 -> STR_1(16), 
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;  ret             2    0        int 
  5892 ;;  ap              1    1[BANK1 ] PTR void [1]
  5893 ;;		 -> ?_printf(2), 
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  2   76[BANK0 ] int 
  5896 ;; Registers used:
  5897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5903 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5904 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5905 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5906 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5907 ;;Total ram usage:        6 bytes
  5908 ;; Hardware stack levels used: 1
  5909 ;; Hardware stack levels required when called: 12
  5910 ;; This function calls:
  5911 ;;		_vfprintf
  5912 ;; This function is called by:
  5913 ;;		_main
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917  0D71                     _printf:	
  5918                           ;psect for function _printf
  5919                           
  5920  0D71                     l4007:	
  5921                           ;incstack = 0
  5922                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5923                           
  5924  0D71  306E               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5925  0D72  0021               	movlb	1	; select bank1
  5926  0D73  00DF               	movwf	??_printf^(0+128)
  5927  0D74  085F               	movf	??_printf^(0+128),w
  5928  0D75  00E0               	movwf	printf@ap^(0+128)
  5929  0D76                     l4009:
  5930  0D76  0020               	movlb	0	; select bank0
  5931  0D77  086D               	movf	printf@fmt+1,w
  5932  0D78  00E5               	movwf	vfprintf@fmt+1
  5933  0D79  086C               	movf	printf@fmt,w
  5934  0D7A  00E4               	movwf	vfprintf@fmt
  5935  0D7B  30E0               	movlw	(low (printf@ap| 0))& (0+255)
  5936  0D7C  0021               	movlb	1	; select bank1
  5937  0D7D  00DF               	movwf	??_printf^(0+128)
  5938  0D7E  085F               	movf	??_printf^(0+128),w
  5939  0D7F  0020               	movlb	0	; select bank0
  5940  0D80  00E6               	movwf	vfprintf@ap
  5941  0D81  3000               	movlw	0
  5942  0D82  318E  26FA  318D   	fcall	_vfprintf
  5943  0D85                     l1420:
  5944  0D85  0008               	return
  5945  0D86                     __end_of_printf:
  5946                           
  5947                           	psect	text2
  5948  0EFA                     __ptext2:	
  5949 ;; *************** function _vfprintf *****************
  5950 ;; Defined at:
  5951 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;  fp              1    wreg     PTR struct _IO_FILE
  5954 ;;		 -> NULL(0), 
  5955 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
  5956 ;;		 -> STR_1(16), 
  5957 ;;  ap              1   70[BANK0 ] PTR PTR void 
  5958 ;;		 -> printf@ap(1), 
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
  5961 ;;		 -> NULL(0), 
  5962 ;;  cfmt            2   74[BANK0 ] PTR unsigned char 
  5963 ;;		 -> STR_1(16), 
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  2   68[BANK0 ] int 
  5966 ;; Registers used:
  5967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5973 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5974 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5975 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5976 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5977 ;;Total ram usage:        8 bytes
  5978 ;; Hardware stack levels used: 1
  5979 ;; Hardware stack levels required when called: 11
  5980 ;; This function calls:
  5981 ;;		_vfpfcnvrt
  5982 ;; This function is called by:
  5983 ;;		_printf
  5984 ;; This function uses a non-reentrant model
  5985 ;;
  5986                           
  5987  0EFA                     _vfprintf:	
  5988                           ;psect for function _vfprintf
  5989                           
  5990                           
  5991                           ;incstack = 0
  5992                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5993                           ;vfprintf@fp stored from wreg
  5994  0EFA  0020               	movlb	0	; select bank0
  5995  0EFB  00E9               	movwf	vfprintf@fp
  5996  0EFC                     l3931:
  5997                           
  5998                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5999  0EFC  0865               	movf	vfprintf@fmt+1,w
  6000  0EFD  00EB               	movwf	vfprintf@cfmt+1
  6001  0EFE  0864               	movf	vfprintf@fmt,w
  6002  0EFF  00EA               	movwf	vfprintf@cfmt
  6003  0F00                     l3933:
  6004                           
  6005                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6006  0F00  0021               	movlb	1	; select bank1
  6007  0F01  01B4               	clrf	_nout^(0+128)
  6008  0F02  01B5               	clrf	(_nout+1)^(0+128)
  6009                           
  6010                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6011  0F03  2F18               	goto	l3937
  6012  0F04                     l3935:
  6013                           
  6014                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6015  0F04  306A               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6016  0F05  00E7               	movwf	??_vfprintf
  6017  0F06  0867               	movf	??_vfprintf,w
  6018  0F07  00D4               	movwf	vfpfcnvrt@fmt
  6019  0F08  0866               	movf	vfprintf@ap,w
  6020  0F09  00E8               	movwf	??_vfprintf+1
  6021  0F0A  0868               	movf	??_vfprintf+1,w
  6022  0F0B  00D5               	movwf	vfpfcnvrt@ap
  6023  0F0C  0869               	movf	vfprintf@fp,w
  6024  0F0D  3181  2180  318E   	fcall	_vfpfcnvrt
  6025  0F10  0020               	movlb	0	; select bank0
  6026  0F11  0854               	movf	?_vfpfcnvrt,w
  6027  0F12  0021               	movlb	1	; select bank1
  6028  0F13  07B4               	addwf	_nout^(0+128),f
  6029  0F14  0020               	movlb	0	; select bank0
  6030  0F15  0855               	movf	?_vfpfcnvrt+1,w
  6031  0F16  0021               	movlb	1	; select bank1
  6032  0F17  3DB5               	addwfc	(_nout+1)^(0+128),f
  6033  0F18                     l3937:
  6034                           
  6035                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6036  0F18  0020               	movlb	0	; select bank0
  6037  0F19  086A               	movf	vfprintf@cfmt,w
  6038  0F1A  0084               	movwf	4
  6039  0F1B  086B               	movf	vfprintf@cfmt+1,w
  6040  0F1C  0085               	movwf	5
  6041  0F1D  0012               	moviw fsr0++
  6042  0F1E  1D03               	btfss	3,2
  6043  0F1F  2F21               	goto	u1751
  6044  0F20  2F22               	goto	u1750
  6045  0F21                     u1751:
  6046  0F21  2F04               	goto	l3935
  6047  0F22                     u1750:
  6048  0F22                     l3939:
  6049                           
  6050                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6051  0F22  0021               	movlb	1	; select bank1
  6052  0F23  0835               	movf	(_nout+1)^(0+128),w
  6053  0F24  0020               	movlb	0	; select bank0
  6054  0F25  00E5               	movwf	?_vfprintf+1
  6055  0F26  0021               	movlb	1	; select bank1
  6056  0F27  0834               	movf	_nout^(0+128),w
  6057  0F28  0020               	movlb	0	; select bank0
  6058  0F29  00E4               	movwf	?_vfprintf
  6059  0F2A                     l1477:
  6060  0F2A  0008               	return
  6061  0F2B                     __end_of_vfprintf:
  6062                           
  6063                           	psect	text3
  6064  0180                     __ptext3:	
  6065 ;; *************** function _vfpfcnvrt *****************
  6066 ;; Defined at:
  6067 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;  fp              1    wreg     PTR struct _IO_FILE
  6070 ;;		 -> NULL(0), 
  6071 ;;  fmt             1   52[BANK0 ] PTR PTR unsigned char 
  6072 ;;		 -> vfprintf@cfmt(2), 
  6073 ;;  ap              1   53[BANK0 ] PTR PTR void 
  6074 ;;		 -> printf@ap(1), 
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  6077 ;;		 -> NULL(0), 
  6078 ;;  llu             8   59[BANK0 ] unsigned long long 
  6079 ;;  ll              8    0        long long 
  6080 ;;  f               4    0        long long 
  6081 ;;  ct              3    0        unsigned char [3]
  6082 ;;  vp              2    0        PTR void 
  6083 ;;  i               2    0        int 
  6084 ;;  done            2    0        int 
  6085 ;;  cp              2    0        PTR unsigned char 
  6086 ;;  c               1    0        unsigned char 
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  2   52[BANK0 ] int 
  6089 ;; Registers used:
  6090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6096 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6097 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6098 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6100 ;;Total ram usage:       16 bytes
  6101 ;; Hardware stack levels used: 1
  6102 ;; Hardware stack levels required when called: 10
  6103 ;; This function calls:
  6104 ;;		_fputc
  6105 ;;		_utoa
  6106 ;; This function is called by:
  6107 ;;		_vfprintf
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111  0180                     _vfpfcnvrt:	
  6112                           ;psect for function _vfpfcnvrt
  6113                           
  6114                           
  6115                           ;incstack = 0
  6116                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6117                           ;vfpfcnvrt@fp stored from wreg
  6118  0180  0020               	movlb	0	; select bank0
  6119  0181  00E3               	movwf	vfpfcnvrt@fp
  6120  0182                     l3869:
  6121                           
  6122                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6123  0182  0854               	movf	vfpfcnvrt@fmt,w
  6124  0183  0086               	movwf	6
  6125  0184  0187               	clrf	7
  6126  0185  3F40               	moviw [0]fsr1
  6127  0186  00D6               	movwf	??_vfpfcnvrt
  6128  0187  3F41               	moviw [1]fsr1
  6129  0188  00D7               	movwf	??_vfpfcnvrt+1
  6130  0189  0856               	movf	??_vfpfcnvrt,w
  6131  018A  0084               	movwf	4
  6132  018B  0857               	movf	??_vfpfcnvrt+1,w
  6133  018C  0085               	movwf	5
  6134  018D  0012               	moviw fsr0++
  6135  018E  3A25               	xorlw	37
  6136  018F  1D03               	btfss	3,2
  6137  0190  2992               	goto	u1681
  6138  0191  2993               	goto	u1680
  6139  0192                     u1681:
  6140  0192  2A1F               	goto	l3903
  6141  0193                     u1680:
  6142  0193                     l3871:
  6143                           
  6144                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6145  0193  0854               	movf	vfpfcnvrt@fmt,w
  6146  0194  0086               	movwf	6
  6147  0195  0187               	clrf	7
  6148  0196  3001               	movlw	1
  6149  0197  0781               	addwf	1,f
  6150  0198  3141               	addfsr 1,1
  6151  0199  1803               	skipnc
  6152  019A  0A81               	incf	1,f
  6153  019B                     l3873:
  6154                           
  6155                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6156  019B  0021               	movlb	1	; select bank1
  6157  019C  01B6               	clrf	_width^(0+128)
  6158  019D  01B7               	clrf	(_width+1)^(0+128)
  6159  019E  01BA               	clrf	_flags^(0+128)
  6160  019F  01BB               	clrf	(_flags+1)^(0+128)
  6161  01A0                     l3875:
  6162                           
  6163                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6164  01A0  30FF               	movlw	255
  6165  01A1  00B8               	movwf	_prec^(0+128)
  6166  01A2  30FF               	movlw	255
  6167  01A3  00B9               	movwf	(_prec^(0+128)+1)
  6168  01A4                     l3877:
  6169                           
  6170                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  6171  01A4  0020               	movlb	0	; select bank0
  6172  01A5  0854               	movf	vfpfcnvrt@fmt,w
  6173  01A6  0086               	movwf	6
  6174  01A7  0187               	clrf	7
  6175  01A8  3F40               	moviw [0]fsr1
  6176  01A9  00D6               	movwf	??_vfpfcnvrt
  6177  01AA  3F41               	moviw [1]fsr1
  6178  01AB  00D7               	movwf	??_vfpfcnvrt+1
  6179  01AC  0856               	movf	??_vfpfcnvrt,w
  6180  01AD  0084               	movwf	4
  6181  01AE  0857               	movf	??_vfpfcnvrt+1,w
  6182  01AF  0085               	movwf	5
  6183  01B0  0012               	moviw fsr0++
  6184  01B1  3A75               	xorlw	117
  6185  01B2  1D03               	btfss	3,2
  6186  01B3  29B5               	goto	u1691
  6187  01B4  29B6               	goto	u1690
  6188  01B5                     u1691:
  6189  01B5  29EA               	goto	l3887
  6190  01B6                     u1690:
  6191  01B6                     l3879:
  6192                           
  6193                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  6194  01B6  0854               	movf	vfpfcnvrt@fmt,w
  6195  01B7  0086               	movwf	6
  6196  01B8  0187               	clrf	7
  6197  01B9  3001               	movlw	1
  6198  01BA  0781               	addwf	1,f
  6199  01BB  3141               	addfsr 1,1
  6200  01BC  1803               	skipnc
  6201  01BD  0A81               	incf	1,f
  6202  01BE                     l3881:
  6203                           
  6204                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  6205  01BE  0855               	movf	vfpfcnvrt@ap,w
  6206  01BF  0086               	movwf	6
  6207  01C0  0187               	clrf	7
  6208  01C1  0801               	movf	1,w
  6209  01C2  0084               	movwf	4
  6210  01C3  0185               	clrf	5
  6211  01C4  3002               	movlw	2
  6212  01C5  0781               	addwf	1,f
  6213  01C6  3F00               	moviw [0]fsr0
  6214  01C7  00DB               	movwf	vfpfcnvrt@llu
  6215  01C8  3F01               	moviw [1]fsr0
  6216  01C9  00DC               	movwf	vfpfcnvrt@llu+1
  6217  01CA  01DD               	clrf	vfpfcnvrt@llu+2
  6218  01CB  01DE               	clrf	vfpfcnvrt@llu+3
  6219  01CC  01DF               	clrf	vfpfcnvrt@llu+4
  6220  01CD  01E0               	clrf	vfpfcnvrt@llu+5
  6221  01CE  01E1               	clrf	vfpfcnvrt@llu+6
  6222  01CF  01E2               	clrf	vfpfcnvrt@llu+7
  6223  01D0                     l3883:
  6224                           
  6225                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  6226  01D0  085B               	movf	vfpfcnvrt@llu,w
  6227  01D1  00BC               	movwf	utoa@d
  6228  01D2  085C               	movf	vfpfcnvrt@llu+1,w
  6229  01D3  00BD               	movwf	utoa@d+1
  6230  01D4  085D               	movf	vfpfcnvrt@llu+2,w
  6231  01D5  00BE               	movwf	utoa@d+2
  6232  01D6  085E               	movf	vfpfcnvrt@llu+3,w
  6233  01D7  00BF               	movwf	utoa@d+3
  6234  01D8  085F               	movf	vfpfcnvrt@llu+4,w
  6235  01D9  00C0               	movwf	utoa@d+4
  6236  01DA  0860               	movf	vfpfcnvrt@llu+5,w
  6237  01DB  00C1               	movwf	utoa@d+5
  6238  01DC  0861               	movf	vfpfcnvrt@llu+6,w
  6239  01DD  00C2               	movwf	utoa@d+6
  6240  01DE  0862               	movf	vfpfcnvrt@llu+7,w
  6241  01DF  00C3               	movwf	utoa@d+7
  6242  01E0  0863               	movf	vfpfcnvrt@fp,w
  6243  01E1  3180  2091  3181   	fcall	_utoa
  6244  01E4  0020               	movlb	0	; select bank0
  6245  01E5  083D               	movf	?_utoa+1,w
  6246  01E6  00D5               	movwf	?_vfpfcnvrt+1
  6247  01E7  083C               	movf	?_utoa,w
  6248  01E8  00D4               	movwf	?_vfpfcnvrt
  6249  01E9  2A42               	goto	l1470
  6250  01EA                     l3887:
  6251                           
  6252                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6253  01EA  0854               	movf	vfpfcnvrt@fmt,w
  6254  01EB  0086               	movwf	6
  6255  01EC  0187               	clrf	7
  6256  01ED  3F40               	moviw [0]fsr1
  6257  01EE  00D6               	movwf	??_vfpfcnvrt
  6258  01EF  3F41               	moviw [1]fsr1
  6259  01F0  00D7               	movwf	??_vfpfcnvrt+1
  6260  01F1  0856               	movf	??_vfpfcnvrt,w
  6261  01F2  0084               	movwf	4
  6262  01F3  0857               	movf	??_vfpfcnvrt+1,w
  6263  01F4  0085               	movwf	5
  6264  01F5  0012               	moviw fsr0++
  6265  01F6  3A25               	xorlw	37
  6266  01F7  1D03               	btfss	3,2
  6267  01F8  29FA               	goto	u1701
  6268  01F9  29FB               	goto	u1700
  6269  01FA                     u1701:
  6270  01FA  2A14               	goto	l3897
  6271  01FB                     u1700:
  6272  01FB                     l3889:
  6273                           
  6274                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6275  01FB  0854               	movf	vfpfcnvrt@fmt,w
  6276  01FC  0086               	movwf	6
  6277  01FD  0187               	clrf	7
  6278  01FE  3001               	movlw	1
  6279  01FF  0781               	addwf	1,f
  6280  0200  3141               	addfsr 1,1
  6281  0201  1803               	skipnc
  6282  0202  0A81               	incf	1,f
  6283  0203                     l3891:
  6284                           
  6285                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6286  0203  3025               	movlw	37
  6287  0204  00A3               	movwf	fputc@c
  6288  0205  3000               	movlw	0
  6289  0206  00A4               	movwf	fputc@c+1
  6290  0207  0863               	movf	vfpfcnvrt@fp,w
  6291  0208  00D6               	movwf	??_vfpfcnvrt
  6292  0209  0856               	movf	??_vfpfcnvrt,w
  6293  020A  00A5               	movwf	fputc@fp
  6294  020B  3187  2715  3181   	fcall	_fputc
  6295  020E                     l3893:
  6296                           
  6297                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6298  020E  3001               	movlw	1
  6299  020F  0020               	movlb	0	; select bank0
  6300  0210  00D4               	movwf	?_vfpfcnvrt
  6301  0211  3000               	movlw	0
  6302  0212  00D5               	movwf	?_vfpfcnvrt+1
  6303  0213  2A42               	goto	l1470
  6304  0214                     l3897:
  6305                           
  6306                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6307  0214  0854               	movf	vfpfcnvrt@fmt,w
  6308  0215  0086               	movwf	6
  6309  0216  0187               	clrf	7
  6310  0217  3001               	movlw	1
  6311  0218  0781               	addwf	1,f
  6312  0219  3141               	addfsr 1,1
  6313  021A  1803               	skipnc
  6314  021B  0A81               	incf	1,f
  6315  021C                     l3899:
  6316                           
  6317                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6318  021C  01D4               	clrf	?_vfpfcnvrt
  6319  021D  01D5               	clrf	?_vfpfcnvrt+1
  6320  021E  2A42               	goto	l1470
  6321  021F                     l3903:
  6322                           
  6323                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6324  021F  0854               	movf	vfpfcnvrt@fmt,w
  6325  0220  0086               	movwf	6
  6326  0221  0187               	clrf	7
  6327  0222  3F40               	moviw [0]fsr1
  6328  0223  00D6               	movwf	??_vfpfcnvrt
  6329  0224  3F41               	moviw [1]fsr1
  6330  0225  00D7               	movwf	??_vfpfcnvrt+1
  6331  0226  0856               	movf	??_vfpfcnvrt,w
  6332  0227  0084               	movwf	4
  6333  0228  0857               	movf	??_vfpfcnvrt+1,w
  6334  0229  0085               	movwf	5
  6335  022A  0800               	movf	0,w	;code access
  6336  022B  00D8               	movwf	??_vfpfcnvrt+2
  6337  022C  01D9               	clrf	??_vfpfcnvrt+3
  6338  022D  0858               	movf	??_vfpfcnvrt+2,w
  6339  022E  00A3               	movwf	fputc@c
  6340  022F  0859               	movf	??_vfpfcnvrt+3,w
  6341  0230  00A4               	movwf	fputc@c+1
  6342  0231  0863               	movf	vfpfcnvrt@fp,w
  6343  0232  00DA               	movwf	??_vfpfcnvrt+4
  6344  0233  085A               	movf	??_vfpfcnvrt+4,w
  6345  0234  00A5               	movwf	fputc@fp
  6346  0235  3187  2715  3181   	fcall	_fputc
  6347  0238                     l3905:
  6348                           
  6349                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6350  0238  0020               	movlb	0	; select bank0
  6351  0239  0854               	movf	vfpfcnvrt@fmt,w
  6352  023A  0086               	movwf	6
  6353  023B  0187               	clrf	7
  6354  023C  3001               	movlw	1
  6355  023D  0781               	addwf	1,f
  6356  023E  3141               	addfsr 1,1
  6357  023F  1803               	skipnc
  6358  0240  0A81               	incf	1,f
  6359  0241  2A0E               	goto	l3893
  6360  0242                     l1470:
  6361  0242  0008               	return
  6362  0243                     __end_of_vfpfcnvrt:
  6363                           
  6364                           	psect	text4
  6365  0091                     __ptext4:	
  6366 ;; *************** function _utoa *****************
  6367 ;; Defined at:
  6368 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;  fp              1    wreg     PTR struct _IO_FILE
  6371 ;;		 -> NULL(0), 
  6372 ;;  d               8   28[BANK0 ] unsigned long long 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;  fp              1   37[BANK0 ] PTR struct _IO_FILE
  6375 ;;		 -> NULL(0), 
  6376 ;;  n               8   42[BANK0 ] unsigned long long 
  6377 ;;  i               2   50[BANK0 ] int 
  6378 ;;  w               2   40[BANK0 ] int 
  6379 ;;  p               2   38[BANK0 ] int 
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  2   28[BANK0 ] int 
  6382 ;; Registers used:
  6383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6389 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6390 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6391 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6392 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6393 ;;Total ram usage:       24 bytes
  6394 ;; Hardware stack levels used: 1
  6395 ;; Hardware stack levels required when called: 9
  6396 ;; This function calls:
  6397 ;;		___lodiv
  6398 ;;		___lomod
  6399 ;;		_pad
  6400 ;; This function is called by:
  6401 ;;		_vfpfcnvrt
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405  0091                     _utoa:	
  6406                           ;psect for function _utoa
  6407                           
  6408                           
  6409                           ;incstack = 0
  6410                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6411                           ;utoa@fp stored from wreg
  6412  0091  0020               	movlb	0	; select bank0
  6413  0092  00C5               	movwf	utoa@fp
  6414  0093                     l3675:
  6415                           
  6416                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  6417  0093  0021               	movlb	1	; select bank1
  6418  0094  1BB9               	btfsc	(_prec+1)^(0+128),7
  6419  0095  2897               	goto	u1601
  6420  0096  2898               	goto	u1600
  6421  0097                     u1601:
  6422  0097  289C               	goto	l1453
  6423  0098                     u1600:
  6424  0098                     l3677:
  6425                           
  6426                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  6427  0098  30FD               	movlw	253
  6428  0099  05BA               	andwf	_flags^(0+128),f
  6429  009A  30FF               	movlw	255
  6430  009B  05BB               	andwf	(_flags+1)^(0+128),f
  6431  009C                     l1453:	
  6432                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 623:     }
  6433                           
  6434                           
  6435                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  6436  009C  0839               	movf	(_prec+1)^(0+128),w
  6437  009D  3A80               	xorlw	128
  6438  009E  0020               	movlb	0	; select bank0
  6439  009F  00C4               	movwf	??_utoa
  6440  00A0  3080               	movlw	128
  6441  00A1  0244               	subwf	??_utoa,w
  6442  00A2  1D03               	skipz
  6443  00A3  28A7               	goto	u1615
  6444  00A4  3001               	movlw	1
  6445  00A5  0021               	movlb	1	; select bank1
  6446  00A6  0238               	subwf	_prec^(0+128),w
  6447  00A7                     u1615:
  6448  00A7  1803               	skipnc
  6449  00A8  28AA               	goto	u1611
  6450  00A9  28AB               	goto	u1610
  6451  00AA                     u1611:
  6452  00AA  28B1               	goto	l3681
  6453  00AB                     u1610:
  6454  00AB                     l3679:
  6455  00AB  3001               	movlw	1
  6456  00AC  0020               	movlb	0	; select bank0
  6457  00AD  00C6               	movwf	utoa@p
  6458  00AE  3000               	movlw	0
  6459  00AF  00C7               	movwf	utoa@p+1
  6460  00B0  28B9               	goto	l1457
  6461  00B1                     l3681:
  6462  00B1  0021               	movlb	1	; select bank1
  6463  00B2  0839               	movf	(_prec+1)^(0+128),w
  6464  00B3  0020               	movlb	0	; select bank0
  6465  00B4  00C7               	movwf	utoa@p+1
  6466  00B5  0021               	movlb	1	; select bank1
  6467  00B6  0838               	movf	_prec^(0+128),w
  6468  00B7  0020               	movlb	0	; select bank0
  6469  00B8  00C6               	movwf	utoa@p
  6470  00B9                     l1457:
  6471                           
  6472                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  6473  00B9  0021               	movlb	1	; select bank1
  6474  00BA  0837               	movf	(_width+1)^(0+128),w
  6475  00BB  0020               	movlb	0	; select bank0
  6476  00BC  00C9               	movwf	utoa@w+1
  6477  00BD  0021               	movlb	1	; select bank1
  6478  00BE  0836               	movf	_width^(0+128),w
  6479  00BF  0020               	movlb	0	; select bank0
  6480  00C0  00C8               	movwf	utoa@w
  6481  00C1                     l3683:
  6482                           
  6483                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 628:     n = d;
  6484  00C1  083C               	movf	utoa@d,w
  6485  00C2  00CA               	movwf	utoa@n
  6486  00C3  083D               	movf	utoa@d+1,w
  6487  00C4  00CB               	movwf	utoa@n+1
  6488  00C5  083E               	movf	utoa@d+2,w
  6489  00C6  00CC               	movwf	utoa@n+2
  6490  00C7  083F               	movf	utoa@d+3,w
  6491  00C8  00CD               	movwf	utoa@n+3
  6492  00C9  0840               	movf	utoa@d+4,w
  6493  00CA  00CE               	movwf	utoa@n+4
  6494  00CB  0841               	movf	utoa@d+5,w
  6495  00CC  00CF               	movwf	utoa@n+5
  6496  00CD  0842               	movf	utoa@d+6,w
  6497  00CE  00D0               	movwf	utoa@n+6
  6498  00CF  0843               	movf	utoa@d+7,w
  6499  00D0  00D1               	movwf	utoa@n+7
  6500                           
  6501                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  6502  00D1  301F               	movlw	31
  6503  00D2  00D2               	movwf	utoa@i
  6504  00D3  3000               	movlw	0
  6505  00D4  00D3               	movwf	utoa@i+1
  6506  00D5                     l3685:
  6507                           
  6508                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  6509  00D5  0022               	movlb	2	; select bank2
  6510  00D6  01DB               	clrf	(_dbuf^(0+256)+31)
  6511                           
  6512                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6513  00D7  2939               	goto	l3697
  6514  00D8                     l3687:
  6515                           
  6516                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 632:         --i;
  6517  00D8  30FF               	movlw	255
  6518  00D9  0020               	movlb	0	; select bank0
  6519  00DA  07D2               	addwf	utoa@i,f
  6520  00DB  30FF               	movlw	255
  6521  00DC  3DD3               	addwfc	utoa@i+1,f
  6522  00DD                     l3689:
  6523                           
  6524                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  6525  00DD  300A               	movlw	10
  6526  00DE  00A0               	movwf	___lomod@divisor
  6527  00DF  01A1               	clrf	___lomod@divisor+1
  6528  00E0  01A2               	clrf	___lomod@divisor+2
  6529  00E1  01A3               	clrf	___lomod@divisor+3
  6530  00E2  01A4               	clrf	___lomod@divisor+4
  6531  00E3  01A5               	clrf	___lomod@divisor+5
  6532  00E4  01A6               	clrf	___lomod@divisor+6
  6533  00E5  01A7               	clrf	___lomod@divisor+7
  6534  00E6  084A               	movf	utoa@n,w
  6535  00E7  00A8               	movwf	___lomod@dividend
  6536  00E8  084B               	movf	utoa@n+1,w
  6537  00E9  00A9               	movwf	___lomod@dividend+1
  6538  00EA  084C               	movf	utoa@n+2,w
  6539  00EB  00AA               	movwf	___lomod@dividend+2
  6540  00EC  084D               	movf	utoa@n+3,w
  6541  00ED  00AB               	movwf	___lomod@dividend+3
  6542  00EE  084E               	movf	utoa@n+4,w
  6543  00EF  00AC               	movwf	___lomod@dividend+4
  6544  00F0  084F               	movf	utoa@n+5,w
  6545  00F1  00AD               	movwf	___lomod@dividend+5
  6546  00F2  0850               	movf	utoa@n+6,w
  6547  00F3  00AE               	movwf	___lomod@dividend+6
  6548  00F4  0851               	movf	utoa@n+7,w
  6549  00F5  00AF               	movwf	___lomod@dividend+7
  6550  00F6  3185  2554  3180   	fcall	___lomod
  6551  00F9  0020               	movlb	0	; select bank0
  6552  00FA  0820               	movf	?___lomod,w
  6553  00FB  3E30               	addlw	48
  6554  00FC  00C4               	movwf	??_utoa
  6555  00FD  0852               	movf	utoa@i,w
  6556  00FE  3E3C               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6557  00FF  0086               	movwf	6
  6558  0100  3001               	movlw	1	; select bank2/3
  6559  0101  0087               	movwf	7
  6560  0102  0844               	movf	??_utoa,w
  6561  0103  0081               	movwf	1
  6562  0104                     l3691:
  6563                           
  6564                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 634:         --p;
  6565  0104  30FF               	movlw	255
  6566  0105  07C6               	addwf	utoa@p,f
  6567  0106  30FF               	movlw	255
  6568  0107  3DC7               	addwfc	utoa@p+1,f
  6569  0108                     l3693:
  6570                           
  6571                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 635:         --w;
  6572  0108  30FF               	movlw	255
  6573  0109  07C8               	addwf	utoa@w,f
  6574  010A  30FF               	movlw	255
  6575  010B  3DC9               	addwfc	utoa@w+1,f
  6576  010C                     l3695:
  6577                           
  6578                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  6579  010C  300A               	movlw	10
  6580  010D  00A0               	movwf	___lodiv@divisor
  6581  010E  01A1               	clrf	___lodiv@divisor+1
  6582  010F  01A2               	clrf	___lodiv@divisor+2
  6583  0110  01A3               	clrf	___lodiv@divisor+3
  6584  0111  01A4               	clrf	___lodiv@divisor+4
  6585  0112  01A5               	clrf	___lodiv@divisor+5
  6586  0113  01A6               	clrf	___lodiv@divisor+6
  6587  0114  01A7               	clrf	___lodiv@divisor+7
  6588  0115  084A               	movf	utoa@n,w
  6589  0116  00A8               	movwf	___lodiv@dividend
  6590  0117  084B               	movf	utoa@n+1,w
  6591  0118  00A9               	movwf	___lodiv@dividend+1
  6592  0119  084C               	movf	utoa@n+2,w
  6593  011A  00AA               	movwf	___lodiv@dividend+2
  6594  011B  084D               	movf	utoa@n+3,w
  6595  011C  00AB               	movwf	___lodiv@dividend+3
  6596  011D  084E               	movf	utoa@n+4,w
  6597  011E  00AC               	movwf	___lodiv@dividend+4
  6598  011F  084F               	movf	utoa@n+5,w
  6599  0120  00AD               	movwf	___lodiv@dividend+5
  6600  0121  0850               	movf	utoa@n+6,w
  6601  0122  00AE               	movwf	___lodiv@dividend+6
  6602  0123  0851               	movf	utoa@n+7,w
  6603  0124  00AF               	movwf	___lodiv@dividend+7
  6604  0125  3184  244F  3180   	fcall	___lodiv
  6605  0128  0020               	movlb	0	; select bank0
  6606  0129  0820               	movf	?___lodiv,w
  6607  012A  00CA               	movwf	utoa@n
  6608  012B  0821               	movf	?___lodiv+1,w
  6609  012C  00CB               	movwf	utoa@n+1
  6610  012D  0822               	movf	?___lodiv+2,w
  6611  012E  00CC               	movwf	utoa@n+2
  6612  012F  0823               	movf	?___lodiv+3,w
  6613  0130  00CD               	movwf	utoa@n+3
  6614  0131  0824               	movf	?___lodiv+4,w
  6615  0132  00CE               	movwf	utoa@n+4
  6616  0133  0825               	movf	?___lodiv+5,w
  6617  0134  00CF               	movwf	utoa@n+5
  6618  0135  0826               	movf	?___lodiv+6,w
  6619  0136  00D0               	movwf	utoa@n+6
  6620  0137  0827               	movf	?___lodiv+7,w
  6621  0138  00D1               	movwf	utoa@n+7
  6622  0139                     l3697:
  6623                           
  6624                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6625  0139  0020               	movlb	0	; select bank0
  6626  013A  0852               	movf	utoa@i,w
  6627  013B  0453               	iorwf	utoa@i+1,w
  6628  013C  1903               	btfsc	3,2
  6629  013D  293F               	goto	u1621
  6630  013E  2940               	goto	u1620
  6631  013F                     u1621:
  6632  013F  296C               	goto	l3707
  6633  0140                     u1620:
  6634  0140                     l3699:
  6635  0140  084A               	movf	utoa@n,w
  6636  0141  044B               	iorwf	utoa@n+1,w
  6637  0142  044C               	iorwf	utoa@n+2,w
  6638  0143  044D               	iorwf	utoa@n+3,w
  6639  0144  044E               	iorwf	utoa@n+4,w
  6640  0145  044F               	iorwf	utoa@n+5,w
  6641  0146  0450               	iorwf	utoa@n+6,w
  6642  0147  0451               	iorwf	utoa@n+7,w
  6643  0148  1D03               	skipz
  6644  0149  294B               	goto	u1631
  6645  014A  294C               	goto	u1630
  6646  014B                     u1631:
  6647  014B  28D8               	goto	l3687
  6648  014C                     u1630:
  6649  014C                     l3701:
  6650  014C  0847               	movf	utoa@p+1,w
  6651  014D  3A80               	xorlw	128
  6652  014E  00C4               	movwf	??_utoa
  6653  014F  3080               	movlw	128
  6654  0150  0244               	subwf	??_utoa,w
  6655  0151  1D03               	skipz
  6656  0152  2955               	goto	u1645
  6657  0153  3001               	movlw	1
  6658  0154  0246               	subwf	utoa@p,w
  6659  0155                     u1645:
  6660  0155  1803               	skipnc
  6661  0156  2958               	goto	u1641
  6662  0157  2959               	goto	u1640
  6663  0158                     u1641:
  6664  0158  28D8               	goto	l3687
  6665  0159                     u1640:
  6666  0159                     l3703:
  6667  0159  0020               	movlb	0	; select bank0
  6668  015A  0849               	movf	utoa@w+1,w
  6669  015B  3A80               	xorlw	128
  6670  015C  00C4               	movwf	??_utoa
  6671  015D  3080               	movlw	128
  6672  015E  0244               	subwf	??_utoa,w
  6673  015F  1D03               	skipz
  6674  0160  2963               	goto	u1655
  6675  0161  3001               	movlw	1
  6676  0162  0248               	subwf	utoa@w,w
  6677  0163                     u1655:
  6678  0163  1C03               	skipc
  6679  0164  2966               	goto	u1651
  6680  0165  2967               	goto	u1650
  6681  0166                     u1651:
  6682  0166  296C               	goto	l3707
  6683  0167                     u1650:
  6684  0167                     l3705:
  6685  0167  0021               	movlb	1	; select bank1
  6686  0168  18BA               	btfsc	_flags^(0+128),1
  6687  0169  296B               	goto	u1661
  6688  016A  296C               	goto	u1660
  6689  016B                     u1661:
  6690  016B  28D8               	goto	l3687
  6691  016C                     u1660:
  6692  016C                     l3707:
  6693                           
  6694                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  6695  016C  0020               	movlb	0	; select bank0
  6696  016D  0852               	movf	utoa@i,w
  6697  016E  3E3C               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6698  016F  00C4               	movwf	??_utoa
  6699  0170  0844               	movf	??_utoa,w
  6700  0171  00B3               	movwf	pad@buf
  6701  0172  0849               	movf	utoa@w+1,w
  6702  0173  00B5               	movwf	pad@p+1
  6703  0174  0848               	movf	utoa@w,w
  6704  0175  00B4               	movwf	pad@p
  6705  0176  0845               	movf	utoa@fp,w
  6706  0177  3186  2620  3180   	fcall	_pad
  6707  017A  0020               	movlb	0	; select bank0
  6708  017B  0834               	movf	?_pad+1,w
  6709  017C  00BD               	movwf	?_utoa+1
  6710  017D  0833               	movf	?_pad,w
  6711  017E  00BC               	movwf	?_utoa
  6712  017F                     l1465:
  6713  017F  0008               	return
  6714  0180                     __end_of_utoa:
  6715                           
  6716                           	psect	text5
  6717  0620                     __ptext5:	
  6718 ;; *************** function _pad *****************
  6719 ;; Defined at:
  6720 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6721 ;; Parameters:    Size  Location     Type
  6722 ;;  fp              1    wreg     PTR struct _IO_FILE
  6723 ;;		 -> NULL(0), 
  6724 ;;  buf             1   19[BANK0 ] PTR unsigned char 
  6725 ;;		 -> dbuf(32), 
  6726 ;;  p               2   20[BANK0 ] int 
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  6729 ;;		 -> NULL(0), 
  6730 ;;  w               2   25[BANK0 ] int 
  6731 ;;  i               2   23[BANK0 ] int 
  6732 ;; Return value:  Size  Location     Type
  6733 ;;                  2   19[BANK0 ] int 
  6734 ;; Registers used:
  6735 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6736 ;; Tracked objects:
  6737 ;;		On entry : 0/0
  6738 ;;		On exit  : 0/0
  6739 ;;		Unchanged: 0/0
  6740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6741 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6742 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6743 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6744 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6745 ;;Total ram usage:        9 bytes
  6746 ;; Hardware stack levels used: 1
  6747 ;; Hardware stack levels required when called: 8
  6748 ;; This function calls:
  6749 ;;		_fputc
  6750 ;;		_fputs
  6751 ;;		_strlen
  6752 ;; This function is called by:
  6753 ;;		_utoa
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757  0620                     _pad:	
  6758                           ;psect for function _pad
  6759                           
  6760                           
  6761                           ;incstack = 0
  6762                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6763                           ;pad@fp stored from wreg
  6764  0620  0020               	movlb	0	; select bank0
  6765  0621  00BB               	movwf	pad@fp
  6766  0622                     l3635:
  6767                           
  6768                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6769  0622  0021               	movlb	1	; select bank1
  6770  0623  1C3A               	btfss	_flags^(0+128),0
  6771  0624  2E26               	goto	u1561
  6772  0625  2E27               	goto	u1560
  6773  0626                     u1561:
  6774  0626  2E30               	goto	l3639
  6775  0627                     u1560:
  6776  0627                     l3637:
  6777                           
  6778                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6779  0627  0020               	movlb	0	; select bank0
  6780  0628  083B               	movf	pad@fp,w
  6781  0629  00B6               	movwf	??_pad
  6782  062A  0836               	movf	??_pad,w
  6783  062B  00AB               	movwf	fputs@fp
  6784  062C  0833               	movf	pad@buf,w
  6785  062D  318E  26D1  3186   	fcall	_fputs
  6786  0630                     l3639:
  6787                           
  6788                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6789  0630  0020               	movlb	0	; select bank0
  6790  0631  1BB5               	btfsc	pad@p+1,7
  6791  0632  2E34               	goto	u1571
  6792  0633  2E35               	goto	u1570
  6793  0634                     u1571:
  6794  0634  2E3A               	goto	l3643
  6795  0635                     u1570:
  6796  0635                     l3641:
  6797  0635  0835               	movf	pad@p+1,w
  6798  0636  00BA               	movwf	pad@w+1
  6799  0637  0834               	movf	pad@p,w
  6800  0638  00B9               	movwf	pad@w
  6801  0639  2E3C               	goto	l1445
  6802  063A                     l3643:
  6803  063A  01B9               	clrf	pad@w
  6804  063B  01BA               	clrf	pad@w+1
  6805  063C                     l1445:
  6806                           
  6807                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6808  063C  01B7               	clrf	pad@i
  6809  063D  01B8               	clrf	pad@i+1
  6810                           
  6811                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6812  063E  2E50               	goto	l3649
  6813  063F                     l3645:
  6814                           
  6815                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6816  063F  3020               	movlw	32
  6817  0640  0020               	movlb	0	; select bank0
  6818  0641  00A3               	movwf	fputc@c
  6819  0642  3000               	movlw	0
  6820  0643  00A4               	movwf	fputc@c+1
  6821  0644  083B               	movf	pad@fp,w
  6822  0645  00B6               	movwf	??_pad
  6823  0646  0836               	movf	??_pad,w
  6824  0647  00A5               	movwf	fputc@fp
  6825  0648  3187  2715  3186   	fcall	_fputc
  6826  064B                     l3647:
  6827                           
  6828                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6829  064B  3001               	movlw	1
  6830  064C  0020               	movlb	0	; select bank0
  6831  064D  07B7               	addwf	pad@i,f
  6832  064E  3000               	movlw	0
  6833  064F  3DB8               	addwfc	pad@i+1,f
  6834  0650                     l3649:
  6835                           
  6836                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6837  0650  0838               	movf	pad@i+1,w
  6838  0651  3A80               	xorlw	128
  6839  0652  00B6               	movwf	??_pad
  6840  0653  083A               	movf	pad@w+1,w
  6841  0654  3A80               	xorlw	128
  6842  0655  0236               	subwf	??_pad,w
  6843  0656  1D03               	skipz
  6844  0657  2E5A               	goto	u1585
  6845  0658  0839               	movf	pad@w,w
  6846  0659  0237               	subwf	pad@i,w
  6847  065A                     u1585:
  6848  065A  1C03               	skipc
  6849  065B  2E5D               	goto	u1581
  6850  065C  2E5E               	goto	u1580
  6851  065D                     u1581:
  6852  065D  2E3F               	goto	l3645
  6853  065E                     u1580:
  6854  065E                     l1448:
  6855                           
  6856                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6857  065E  0021               	movlb	1	; select bank1
  6858  065F  183A               	btfsc	_flags^(0+128),0
  6859  0660  2E62               	goto	u1591
  6860  0661  2E63               	goto	u1590
  6861  0662                     u1591:
  6862  0662  2E6C               	goto	l1449
  6863  0663                     u1590:
  6864  0663                     l3651:
  6865                           
  6866                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6867  0663  0020               	movlb	0	; select bank0
  6868  0664  083B               	movf	pad@fp,w
  6869  0665  00B6               	movwf	??_pad
  6870  0666  0836               	movf	??_pad,w
  6871  0667  00AB               	movwf	fputs@fp
  6872  0668  0833               	movf	pad@buf,w
  6873  0669  318E  26D1  3186   	fcall	_fputs
  6874  066C                     l1449:	
  6875                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 92:     }
  6876                           
  6877                           
  6878                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6879  066C  0020               	movlb	0	; select bank0
  6880  066D  0833               	movf	pad@buf,w
  6881  066E  318E  265A  3186   	fcall	_strlen
  6882  0671  0020               	movlb	0	; select bank0
  6883  0672  0839               	movf	pad@w,w
  6884  0673  0720               	addwf	?_strlen,w
  6885  0674  00B3               	movwf	?_pad
  6886  0675  083A               	movf	pad@w+1,w
  6887  0676  3D21               	addwfc	?_strlen+1,w
  6888  0677  00B4               	movwf	?_pad+1
  6889  0678                     l1450:
  6890  0678  0008               	return
  6891  0679                     __end_of_pad:
  6892                           
  6893                           	psect	text6
  6894  0E5A                     __ptext6:	
  6895 ;; *************** function _strlen *****************
  6896 ;; Defined at:
  6897 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;  s               1    wreg     PTR const unsigned char 
  6900 ;;		 -> dbuf(32), 
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  6903 ;;		 -> dbuf(32), 
  6904 ;;  a               1    3[BANK0 ] PTR const unsigned char 
  6905 ;;		 -> dbuf(32), 
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  2    0[BANK0 ] unsigned int 
  6908 ;; Registers used:
  6909 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6915 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6916 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6917 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6918 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6919 ;;Total ram usage:        5 bytes
  6920 ;; Hardware stack levels used: 1
  6921 ;; Hardware stack levels required when called: 4
  6922 ;; This function calls:
  6923 ;;		Nothing
  6924 ;; This function is called by:
  6925 ;;		_pad
  6926 ;; This function uses a non-reentrant model
  6927 ;;
  6928                           
  6929  0E5A                     _strlen:	
  6930                           ;psect for function _strlen
  6931                           
  6932                           
  6933                           ;incstack = 0
  6934                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6935                           ;strlen@s stored from wreg
  6936  0E5A  0020               	movlb	0	; select bank0
  6937  0E5B  00A4               	movwf	strlen@s
  6938  0E5C                     l2603:
  6939  0E5C  0824               	movf	strlen@s,w
  6940  0E5D  00A2               	movwf	??_strlen
  6941  0E5E  0822               	movf	??_strlen,w
  6942  0E5F  00A3               	movwf	strlen@a
  6943  0E60  2E65               	goto	l2607
  6944  0E61                     l2605:
  6945  0E61  3001               	movlw	1
  6946  0E62  00A2               	movwf	??_strlen
  6947  0E63  0822               	movf	??_strlen,w
  6948  0E64  07A4               	addwf	strlen@s,f
  6949  0E65                     l2607:
  6950  0E65  0824               	movf	strlen@s,w
  6951  0E66  0086               	movwf	6
  6952  0E67  3001               	movlw	1	; select bank2/3
  6953  0E68  0087               	movwf	7
  6954  0E69  0801               	movf	1,w
  6955  0E6A  1D03               	btfss	3,2
  6956  0E6B  2E6D               	goto	u841
  6957  0E6C  2E6E               	goto	u840
  6958  0E6D                     u841:
  6959  0E6D  2E61               	goto	l2605
  6960  0E6E                     u840:
  6961  0E6E                     l2609:
  6962  0E6E  0823               	movf	strlen@a,w
  6963  0E6F  0224               	subwf	strlen@s,w
  6964  0E70  00A0               	movwf	?_strlen
  6965  0E71  01A1               	clrf	?_strlen+1
  6966  0E72  1BA0               	btfsc	?_strlen,7
  6967  0E73  03A1               	decf	?_strlen+1,f
  6968  0E74                     l1503:
  6969  0E74  0008               	return
  6970  0E75                     __end_of_strlen:
  6971                           
  6972                           	psect	text7
  6973  0ED1                     __ptext7:	
  6974 ;; *************** function _fputs *****************
  6975 ;; Defined at:
  6976 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;  s               1    wreg     PTR const unsigned char 
  6979 ;;		 -> dbuf(32), 
  6980 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  6981 ;;		 -> NULL(0), 
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;  s               1   18[BANK0 ] PTR const unsigned char 
  6984 ;;		 -> dbuf(32), 
  6985 ;;  i               2   16[BANK0 ] int 
  6986 ;;  c               1   15[BANK0 ] unsigned char 
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  2   11[BANK0 ] int 
  6989 ;; Registers used:
  6990 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6996 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6997 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6999 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7000 ;;Total ram usage:        8 bytes
  7001 ;; Hardware stack levels used: 1
  7002 ;; Hardware stack levels required when called: 7
  7003 ;; This function calls:
  7004 ;;		_fputc
  7005 ;; This function is called by:
  7006 ;;		_pad
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010  0ED1                     _fputs:	
  7011                           ;psect for function _fputs
  7012                           
  7013                           
  7014                           ;incstack = 0
  7015                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7016                           ;fputs@s stored from wreg
  7017  0ED1  0020               	movlb	0	; select bank0
  7018  0ED2  00B2               	movwf	fputs@s
  7019  0ED3                     l3627:
  7020  0ED3  01B0               	clrf	fputs@i
  7021  0ED4  01B1               	clrf	fputs@i+1
  7022  0ED5  2EE9               	goto	l3633
  7023  0ED6                     l3629:
  7024  0ED6  082F               	movf	fputs@c,w
  7025  0ED7  00AC               	movwf	??_fputs
  7026  0ED8  01AD               	clrf	??_fputs+1
  7027  0ED9  082C               	movf	??_fputs,w
  7028  0EDA  00A3               	movwf	fputc@c
  7029  0EDB  082D               	movf	??_fputs+1,w
  7030  0EDC  00A4               	movwf	fputc@c+1
  7031  0EDD  082B               	movf	fputs@fp,w
  7032  0EDE  00AE               	movwf	??_fputs+2
  7033  0EDF  082E               	movf	??_fputs+2,w
  7034  0EE0  00A5               	movwf	fputc@fp
  7035  0EE1  3187  2715  318E   	fcall	_fputc
  7036  0EE4                     l3631:
  7037  0EE4  3001               	movlw	1
  7038  0EE5  0020               	movlb	0	; select bank0
  7039  0EE6  07B0               	addwf	fputs@i,f
  7040  0EE7  3000               	movlw	0
  7041  0EE8  3DB1               	addwfc	fputs@i+1,f
  7042  0EE9                     l3633:
  7043  0EE9  0830               	movf	fputs@i,w
  7044  0EEA  0732               	addwf	fputs@s,w
  7045  0EEB  00AC               	movwf	??_fputs
  7046  0EEC  082C               	movf	??_fputs,w
  7047  0EED  0086               	movwf	6
  7048  0EEE  3001               	movlw	1	; select bank2/3
  7049  0EEF  0087               	movwf	7
  7050  0EF0  0801               	movf	1,w
  7051  0EF1  00AD               	movwf	??_fputs+1
  7052  0EF2  082D               	movf	??_fputs+1,w
  7053  0EF3  00AF               	movwf	fputs@c
  7054  0EF4  082F               	movf	fputs@c,w
  7055  0EF5  1D03               	btfss	3,2
  7056  0EF6  2EF8               	goto	u1551
  7057  0EF7  2EF9               	goto	u1550
  7058  0EF8                     u1551:
  7059  0EF8  2ED6               	goto	l3629
  7060  0EF9                     u1550:
  7061  0EF9                     l1497:
  7062  0EF9  0008               	return
  7063  0EFA                     __end_of_fputs:
  7064                           
  7065                           	psect	text8
  7066  0715                     __ptext8:	
  7067 ;; *************** function _fputc *****************
  7068 ;; Defined at:
  7069 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  c               2    3[BANK0 ] int 
  7072 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
  7073 ;;		 -> NULL(0), 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  2    3[BANK0 ] int 
  7078 ;; Registers used:
  7079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7085 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;Total ram usage:        8 bytes
  7090 ;; Hardware stack levels used: 1
  7091 ;; Hardware stack levels required when called: 6
  7092 ;; This function calls:
  7093 ;;		_putch
  7094 ;; This function is called by:
  7095 ;;		_pad
  7096 ;;		_vfpfcnvrt
  7097 ;;		_fputs
  7098 ;; This function uses a non-reentrant model
  7099 ;;
  7100                           
  7101  0715                     _fputc:	
  7102                           ;psect for function _fputc
  7103                           
  7104  0715                     l3613:	
  7105                           ;incstack = 0
  7106                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7107                           
  7108  0715  0020               	movlb	0	; select bank0
  7109  0716  0825               	movf	fputc@fp,w
  7110  0717  1903               	btfsc	3,2
  7111  0718  2F1A               	goto	u1511
  7112  0719  2F1B               	goto	u1510
  7113  071A                     u1511:
  7114  071A  2F20               	goto	l3617
  7115  071B                     u1510:
  7116  071B                     l3615:
  7117  071B  0825               	movf	fputc@fp,w
  7118  071C  1D03               	btfss	3,2
  7119  071D  2F1F               	goto	u1521
  7120  071E  2F20               	goto	u1520
  7121  071F                     u1521:
  7122  071F  2F25               	goto	l3619
  7123  0720                     u1520:
  7124  0720                     l3617:
  7125  0720  0823               	movf	fputc@c,w
  7126  0721  318C  248E  3187   	fcall	_putch
  7127  0724  2F57               	goto	l1489
  7128  0725                     l3619:
  7129  0725  0825               	movf	fputc@fp,w
  7130  0726  3E08               	addlw	8
  7131  0727  0086               	movwf	6
  7132  0728  0187               	clrf	7
  7133  0729  0016               	moviw fsr1++
  7134  072A  0401               	iorwf	1,w
  7135  072B  1903               	btfsc	3,2
  7136  072C  2F2E               	goto	u1531
  7137  072D  2F2F               	goto	u1530
  7138  072E                     u1531:
  7139  072E  2F4D               	goto	l3623
  7140  072F                     u1530:
  7141  072F                     l3621:
  7142  072F  0825               	movf	fputc@fp,w
  7143  0730  3E08               	addlw	8
  7144  0731  0086               	movwf	6
  7145  0732  0187               	clrf	7
  7146  0733  3F40               	moviw [0]fsr1
  7147  0734  00A6               	movwf	??_fputc
  7148  0735  3F41               	moviw [1]fsr1
  7149  0736  00A7               	movwf	??_fputc+1
  7150  0737  0825               	movf	fputc@fp,w
  7151  0738  3E02               	addlw	2
  7152  0739  0086               	movwf	6
  7153  073A  0187               	clrf	7
  7154  073B  3F40               	moviw [0]fsr1
  7155  073C  00A8               	movwf	??_fputc+2
  7156  073D  3F41               	moviw [1]fsr1
  7157  073E  00A9               	movwf	??_fputc+3
  7158  073F  0829               	movf	??_fputc+3,w
  7159  0740  3A80               	xorlw	128
  7160  0741  00AA               	movwf	??_fputc+4
  7161  0742  0827               	movf	??_fputc+1,w
  7162  0743  3A80               	xorlw	128
  7163  0744  022A               	subwf	??_fputc+4,w
  7164  0745  1D03               	skipz
  7165  0746  2F49               	goto	u1545
  7166  0747  0826               	movf	??_fputc,w
  7167  0748  0228               	subwf	??_fputc+2,w
  7168  0749                     u1545:
  7169  0749  1803               	skipnc
  7170  074A  2F4C               	goto	u1541
  7171  074B  2F4D               	goto	u1540
  7172  074C                     u1541:
  7173  074C  2F57               	goto	l1489
  7174  074D                     u1540:
  7175  074D                     l3623:
  7176  074D  0020               	movlb	0	; select bank0
  7177  074E  0825               	movf	fputc@fp,w
  7178  074F  3E02               	addlw	2
  7179  0750  0086               	movwf	6
  7180  0751  0187               	clrf	7
  7181  0752  3001               	movlw	1
  7182  0753  0781               	addwf	1,f
  7183  0754  3141               	addfsr 1,1
  7184  0755  1803               	skipnc
  7185  0756  0A81               	incf	1,f
  7186  0757                     l1489:
  7187  0757  0008               	return
  7188  0758                     __end_of_fputc:
  7189                           
  7190                           	psect	text9
  7191  0C8E                     __ptext9:	
  7192 ;; *************** function _putch *****************
  7193 ;; Defined at:
  7194 ;;		line 174 in file "eusart.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;  txData          1    wreg     unsigned char 
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;  txData          1    2[BANK0 ] unsigned char 
  7199 ;; Return value:  Size  Location     Type
  7200 ;;                  1    wreg      void 
  7201 ;; Registers used:
  7202 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7209 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7211 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7212 ;;Total ram usage:        1 bytes
  7213 ;; Hardware stack levels used: 1
  7214 ;; Hardware stack levels required when called: 5
  7215 ;; This function calls:
  7216 ;;		_EUSART_Write
  7217 ;; This function is called by:
  7218 ;;		_fputc
  7219 ;; This function uses a non-reentrant model
  7220 ;;
  7221                           
  7222  0C8E                     _putch:	
  7223                           ;psect for function _putch
  7224                           
  7225                           
  7226                           ;incstack = 0
  7227                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7228                           ;putch@txData stored from wreg
  7229  0C8E  0020               	movlb	0	; select bank0
  7230  0C8F  00A2               	movwf	putch@txData
  7231  0C90                     l3611:
  7232                           
  7233                           ;eusart.c: 174: void putch(char txData);eusart.c: 175: {;eusart.c: 176:     EUSART_Write
      +                          (txData);
  7234  0C90  0822               	movf	putch@txData,w
  7235  0C91  3187  27D2  318C   	fcall	_EUSART_Write
  7236  0C94                     l659:
  7237  0C94  0008               	return
  7238  0C95                     __end_of_putch:
  7239                           
  7240                           	psect	text10
  7241  07D2                     __ptext10:	
  7242 ;; *************** function _EUSART_Write *****************
  7243 ;; Defined at:
  7244 ;;		line 142 in file "eusart.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;  txData          1    wreg     unsigned char 
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;  txData          1    1[BANK0 ] unsigned char 
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  1    wreg      void 
  7251 ;; Registers used:
  7252 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7259 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7260 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7261 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7262 ;;Total ram usage:        2 bytes
  7263 ;; Hardware stack levels used: 1
  7264 ;; Hardware stack levels required when called: 4
  7265 ;; This function calls:
  7266 ;;		Nothing
  7267 ;; This function is called by:
  7268 ;;		_putch
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272  07D2                     _EUSART_Write:	
  7273                           ;psect for function _EUSART_Write
  7274                           
  7275                           
  7276                           ;incstack = 0
  7277                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  7278                           ;EUSART_Write@txData stored from wreg
  7279  07D2  0020               	movlb	0	; select bank0
  7280  07D3  00A1               	movwf	EUSART_Write@txData
  7281  07D4                     l2561:
  7282  07D4                     l2563:	
  7283                           ;eusart.c: 142: void EUSART_Write(uint8_t txData);eusart.c: 143: {;eusart.c: 144:     wh
      +                          ile(0 == eusartTxBufferRemaining)
  7284                           
  7285                           
  7286                           ;eusart.c: 144:     while(0 == eusartTxBufferRemaining)
  7287  07D4  0873               	movf	_eusartTxBufferRemaining,w	;volatile
  7288  07D5  1903               	btfsc	3,2
  7289  07D6  2FD8               	goto	u761
  7290  07D7  2FD9               	goto	u760
  7291  07D8                     u761:
  7292  07D8  2FD4               	goto	l2563
  7293  07D9                     u760:
  7294  07D9                     l649:
  7295                           
  7296                           ;eusart.c: 148:     if(0 == PIE1bits.TXIE)
  7297  07D9  0021               	movlb	1	; select bank1
  7298  07DA  1A11               	btfsc	17,4	;volatile
  7299  07DB  2FDD               	goto	u771
  7300  07DC  2FDE               	goto	u770
  7301  07DD                     u771:
  7302  07DD  2FE3               	goto	l650
  7303  07DE                     u770:
  7304  07DE                     l2565:
  7305                           
  7306                           ;eusart.c: 149:     {;eusart.c: 150:         TX1REG = txData;
  7307  07DE  0020               	movlb	0	; select bank0
  7308  07DF  0821               	movf	EUSART_Write@txData,w
  7309  07E0  0023               	movlb	3	; select bank3
  7310  07E1  009A               	movwf	26	;volatile
  7311                           
  7312                           ;eusart.c: 151:     }
  7313  07E2  2FFB               	goto	l2577
  7314  07E3                     l650:	
  7315                           ;eusart.c: 152:     else
  7316                           
  7317                           
  7318                           ;eusart.c: 153:     {;eusart.c: 154:         PIE1bits.TXIE = 0;
  7319  07E3  1211               	bcf	17,4	;volatile
  7320  07E4                     l2567:
  7321                           
  7322                           ;eusart.c: 155:         eusartTxBuffer[eusartTxHead++] = txData;
  7323  07E4  0020               	movlb	0	; select bank0
  7324  07E5  0821               	movf	EUSART_Write@txData,w
  7325  07E6  00A0               	movwf	??_EUSART_Write
  7326  07E7  0875               	movf	_eusartTxHead,w
  7327  07E8  3E28               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
  7328  07E9  0086               	movwf	6
  7329  07EA  3001               	movlw	1	; select bank2/3
  7330  07EB  0087               	movwf	7
  7331  07EC  0820               	movf	??_EUSART_Write,w
  7332  07ED  0081               	movwf	1
  7333  07EE                     l2569:
  7334  07EE  3001               	movlw	1
  7335  07EF  00A0               	movwf	??_EUSART_Write
  7336  07F0  0820               	movf	??_EUSART_Write,w
  7337  07F1  07F5               	addwf	_eusartTxHead,f	;volatile
  7338  07F2                     l2571:
  7339                           
  7340                           ;eusart.c: 156:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  7341  07F2  3008               	movlw	8
  7342  07F3  0275               	subwf	_eusartTxHead,w	;volatile
  7343  07F4  1C03               	skipc
  7344  07F5  2FF7               	goto	u781
  7345  07F6  2FF8               	goto	u780
  7346  07F7                     u781:
  7347  07F7  2FF9               	goto	l2575
  7348  07F8                     u780:
  7349  07F8                     l2573:
  7350                           
  7351                           ;eusart.c: 157:         {;eusart.c: 158:             eusartTxHead = 0;
  7352  07F8  01F5               	clrf	_eusartTxHead	;volatile
  7353  07F9                     l2575:
  7354                           
  7355                           ;eusart.c: 160:         eusartTxBufferRemaining--;
  7356  07F9  3001               	movlw	1
  7357  07FA  02F3               	subwf	_eusartTxBufferRemaining,f	;volatile
  7358  07FB                     l2577:
  7359                           
  7360                           ;eusart.c: 162:     PIE1bits.TXIE = 1;
  7361  07FB  0021               	movlb	1	; select bank1
  7362  07FC  1611               	bsf	17,4	;volatile
  7363  07FD                     l653:
  7364  07FD  0008               	return
  7365  07FE                     __end_of_EUSART_Write:
  7366                           
  7367                           	psect	text11
  7368  0554                     __ptext11:	
  7369 ;; *************** function ___lomod *****************
  7370 ;; Defined at:
  7371 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lomod.c"
  7372 ;; Parameters:    Size  Location     Type
  7373 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7374 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7375 ;; Auto vars:     Size  Location     Type
  7376 ;;  counter         1   17[BANK0 ] unsigned char 
  7377 ;; Return value:  Size  Location     Type
  7378 ;;                  8    0[BANK0 ] unsigned long long 
  7379 ;; Registers used:
  7380 ;;		wreg, status,2, status,0
  7381 ;; Tracked objects:
  7382 ;;		On entry : 0/0
  7383 ;;		On exit  : 0/0
  7384 ;;		Unchanged: 0/0
  7385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7386 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7387 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7388 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7389 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7390 ;;Total ram usage:       18 bytes
  7391 ;; Hardware stack levels used: 1
  7392 ;; Hardware stack levels required when called: 4
  7393 ;; This function calls:
  7394 ;;		Nothing
  7395 ;; This function is called by:
  7396 ;;		_utoa
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400  0554                     ___lomod:	
  7401                           ;psect for function ___lomod
  7402                           
  7403  0554                     l2635:	
  7404                           ;incstack = 0
  7405                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7406                           
  7407  0554  0020               	movlb	0	; select bank0
  7408  0555  0820               	movf	___lomod@divisor,w
  7409  0556  0421               	iorwf	___lomod@divisor+1,w
  7410  0557  0422               	iorwf	___lomod@divisor+2,w
  7411  0558  0423               	iorwf	___lomod@divisor+3,w
  7412  0559  0424               	iorwf	___lomod@divisor+4,w
  7413  055A  0425               	iorwf	___lomod@divisor+5,w
  7414  055B  0426               	iorwf	___lomod@divisor+6,w
  7415  055C  0427               	iorwf	___lomod@divisor+7,w
  7416  055D  1903               	skipnz
  7417  055E  2D60               	goto	u901
  7418  055F  2D61               	goto	u900
  7419  0560                     u901:
  7420  0560  2DB4               	goto	l1200
  7421  0561                     u900:
  7422  0561                     l2637:
  7423  0561  01B1               	clrf	___lomod@counter
  7424  0562  0AB1               	incf	___lomod@counter,f
  7425  0563  2D70               	goto	l2643
  7426  0564                     l2639:
  7427  0564  35A0               	lslf	___lomod@divisor,f
  7428  0565  0DA1               	rlf	___lomod@divisor+1,f
  7429  0566  0DA2               	rlf	___lomod@divisor+2,f
  7430  0567  0DA3               	rlf	___lomod@divisor+3,f
  7431  0568  0DA4               	rlf	___lomod@divisor+4,f
  7432  0569  0DA5               	rlf	___lomod@divisor+5,f
  7433  056A  0DA6               	rlf	___lomod@divisor+6,f
  7434  056B  0DA7               	rlf	___lomod@divisor+7,f
  7435  056C                     l2641:
  7436  056C  3001               	movlw	1
  7437  056D  00B0               	movwf	??___lomod
  7438  056E  0830               	movf	??___lomod,w
  7439  056F  07B1               	addwf	___lomod@counter,f
  7440  0570                     l2643:
  7441  0570  1FA7               	btfss	___lomod@divisor+7,7
  7442  0571  2D73               	goto	u911
  7443  0572  2D74               	goto	u910
  7444  0573                     u911:
  7445  0573  2D64               	goto	l2639
  7446  0574                     u910:
  7447  0574                     l2645:
  7448  0574  0827               	movf	___lomod@divisor+7,w
  7449  0575  022F               	subwf	___lomod@dividend+7,w
  7450  0576  1D03               	skipz
  7451  0577  2D92               	goto	u925
  7452  0578  0826               	movf	___lomod@divisor+6,w
  7453  0579  022E               	subwf	___lomod@dividend+6,w
  7454  057A  1D03               	skipz
  7455  057B  2D92               	goto	u925
  7456  057C  0825               	movf	___lomod@divisor+5,w
  7457  057D  022D               	subwf	___lomod@dividend+5,w
  7458  057E  1D03               	skipz
  7459  057F  2D92               	goto	u925
  7460  0580  0824               	movf	___lomod@divisor+4,w
  7461  0581  022C               	subwf	___lomod@dividend+4,w
  7462  0582  1D03               	skipz
  7463  0583  2D92               	goto	u925
  7464  0584  0823               	movf	___lomod@divisor+3,w
  7465  0585  022B               	subwf	___lomod@dividend+3,w
  7466  0586  1D03               	skipz
  7467  0587  2D92               	goto	u925
  7468  0588  0822               	movf	___lomod@divisor+2,w
  7469  0589  022A               	subwf	___lomod@dividend+2,w
  7470  058A  1D03               	skipz
  7471  058B  2D92               	goto	u925
  7472  058C  0821               	movf	___lomod@divisor+1,w
  7473  058D  0229               	subwf	___lomod@dividend+1,w
  7474  058E  1D03               	skipz
  7475  058F  2D92               	goto	u925
  7476  0590  0820               	movf	___lomod@divisor,w
  7477  0591  0228               	subwf	___lomod@dividend,w
  7478  0592                     u925:
  7479  0592  1C03               	skipc
  7480  0593  2D95               	goto	u921
  7481  0594  2D96               	goto	u920
  7482  0595                     u921:
  7483  0595  2DA6               	goto	l2649
  7484  0596                     u920:
  7485  0596                     l2647:
  7486  0596  0820               	movf	___lomod@divisor,w
  7487  0597  02A8               	subwf	___lomod@dividend,f
  7488  0598  0821               	movf	___lomod@divisor+1,w
  7489  0599  3BA9               	subwfb	___lomod@dividend+1,f
  7490  059A  0822               	movf	___lomod@divisor+2,w
  7491  059B  3BAA               	subwfb	___lomod@dividend+2,f
  7492  059C  0823               	movf	___lomod@divisor+3,w
  7493  059D  3BAB               	subwfb	___lomod@dividend+3,f
  7494  059E  0824               	movf	___lomod@divisor+4,w
  7495  059F  3BAC               	subwfb	___lomod@dividend+4,f
  7496  05A0  0825               	movf	___lomod@divisor+5,w
  7497  05A1  3BAD               	subwfb	___lomod@dividend+5,f
  7498  05A2  0826               	movf	___lomod@divisor+6,w
  7499  05A3  3BAE               	subwfb	___lomod@dividend+6,f
  7500  05A4  0827               	movf	___lomod@divisor+7,w
  7501  05A5  3BAF               	subwfb	___lomod@dividend+7,f
  7502  05A6                     l2649:
  7503  05A6  36A7               	lsrf	___lomod@divisor+7,f
  7504  05A7  0CA6               	rrf	___lomod@divisor+6,f
  7505  05A8  0CA5               	rrf	___lomod@divisor+5,f
  7506  05A9  0CA4               	rrf	___lomod@divisor+4,f
  7507  05AA  0CA3               	rrf	___lomod@divisor+3,f
  7508  05AB  0CA2               	rrf	___lomod@divisor+2,f
  7509  05AC  0CA1               	rrf	___lomod@divisor+1,f
  7510  05AD  0CA0               	rrf	___lomod@divisor,f
  7511  05AE  3001               	movlw	1
  7512  05AF  02B1               	subwf	___lomod@counter,f
  7513  05B0  1D03               	btfss	3,2
  7514  05B1  2DB3               	goto	u931
  7515  05B2  2DB4               	goto	u930
  7516  05B3                     u931:
  7517  05B3  2D74               	goto	l2645
  7518  05B4                     u930:
  7519  05B4                     l1200:
  7520  05B4  0828               	movf	___lomod@dividend,w
  7521  05B5  00A0               	movwf	?___lomod
  7522  05B6  0829               	movf	___lomod@dividend+1,w
  7523  05B7  00A1               	movwf	?___lomod+1
  7524  05B8  082A               	movf	___lomod@dividend+2,w
  7525  05B9  00A2               	movwf	?___lomod+2
  7526  05BA  082B               	movf	___lomod@dividend+3,w
  7527  05BB  00A3               	movwf	?___lomod+3
  7528  05BC  082C               	movf	___lomod@dividend+4,w
  7529  05BD  00A4               	movwf	?___lomod+4
  7530  05BE  082D               	movf	___lomod@dividend+5,w
  7531  05BF  00A5               	movwf	?___lomod+5
  7532  05C0  082E               	movf	___lomod@dividend+6,w
  7533  05C1  00A6               	movwf	?___lomod+6
  7534  05C2  082F               	movf	___lomod@dividend+7,w
  7535  05C3  00A7               	movwf	?___lomod+7
  7536  05C4                     l1207:
  7537  05C4  0008               	return
  7538  05C5                     __end_of___lomod:
  7539                           
  7540                           	psect	text12
  7541  044F                     __ptext12:	
  7542 ;; *************** function ___lodiv *****************
  7543 ;; Defined at:
  7544 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lodiv.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7547 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7548 ;; Auto vars:     Size  Location     Type
  7549 ;;  quotient        8   17[BANK0 ] unsigned long long 
  7550 ;;  counter         1   25[BANK0 ] unsigned char 
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  8    0[BANK0 ] unsigned long long 
  7553 ;; Registers used:
  7554 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7560 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7561 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7562 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7563 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7564 ;;Total ram usage:       26 bytes
  7565 ;; Hardware stack levels used: 1
  7566 ;; Hardware stack levels required when called: 4
  7567 ;; This function calls:
  7568 ;;		Nothing
  7569 ;; This function is called by:
  7570 ;;		_utoa
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574  044F                     ___lodiv:	
  7575                           ;psect for function ___lodiv
  7576                           
  7577  044F                     l2613:	
  7578                           ;incstack = 0
  7579                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7580                           
  7581  044F  3031               	movlw	low ___lodiv@quotient
  7582  0450  0086               	movwf	6
  7583  0451  3000               	movlw	high ___lodiv@quotient
  7584  0452  0087               	movwf	7
  7585  0453  3008               	movlw	8
  7586  0454  0020               	movlb	0	; select bank0
  7587  0455  00B0               	movwf	??___lodiv
  7588  0456  3000               	movlw	0
  7589  0457                     u850:
  7590  0457  001E               	movwi fsr1++
  7591  0458  0BB0               	decfsz	??___lodiv,f
  7592  0459  2C57               	goto	u850
  7593  045A                     l2615:
  7594  045A  0820               	movf	___lodiv@divisor,w
  7595  045B  0421               	iorwf	___lodiv@divisor+1,w
  7596  045C  0422               	iorwf	___lodiv@divisor+2,w
  7597  045D  0423               	iorwf	___lodiv@divisor+3,w
  7598  045E  0424               	iorwf	___lodiv@divisor+4,w
  7599  045F  0425               	iorwf	___lodiv@divisor+5,w
  7600  0460  0426               	iorwf	___lodiv@divisor+6,w
  7601  0461  0427               	iorwf	___lodiv@divisor+7,w
  7602  0462  1903               	skipnz
  7603  0463  2C65               	goto	u861
  7604  0464  2C66               	goto	u860
  7605  0465                     u861:
  7606  0465  2CC2               	goto	l1190
  7607  0466                     u860:
  7608  0466                     l2617:
  7609  0466  01B9               	clrf	___lodiv@counter
  7610  0467  0AB9               	incf	___lodiv@counter,f
  7611  0468  2C75               	goto	l2623
  7612  0469                     l2619:
  7613  0469  35A0               	lslf	___lodiv@divisor,f
  7614  046A  0DA1               	rlf	___lodiv@divisor+1,f
  7615  046B  0DA2               	rlf	___lodiv@divisor+2,f
  7616  046C  0DA3               	rlf	___lodiv@divisor+3,f
  7617  046D  0DA4               	rlf	___lodiv@divisor+4,f
  7618  046E  0DA5               	rlf	___lodiv@divisor+5,f
  7619  046F  0DA6               	rlf	___lodiv@divisor+6,f
  7620  0470  0DA7               	rlf	___lodiv@divisor+7,f
  7621  0471                     l2621:
  7622  0471  3001               	movlw	1
  7623  0472  00B0               	movwf	??___lodiv
  7624  0473  0830               	movf	??___lodiv,w
  7625  0474  07B9               	addwf	___lodiv@counter,f
  7626  0475                     l2623:
  7627  0475  1FA7               	btfss	___lodiv@divisor+7,7
  7628  0476  2C78               	goto	u871
  7629  0477  2C79               	goto	u870
  7630  0478                     u871:
  7631  0478  2C69               	goto	l2619
  7632  0479                     u870:
  7633  0479                     l2625:
  7634  0479  35B1               	lslf	___lodiv@quotient,f
  7635  047A  0DB2               	rlf	___lodiv@quotient+1,f
  7636  047B  0DB3               	rlf	___lodiv@quotient+2,f
  7637  047C  0DB4               	rlf	___lodiv@quotient+3,f
  7638  047D  0DB5               	rlf	___lodiv@quotient+4,f
  7639  047E  0DB6               	rlf	___lodiv@quotient+5,f
  7640  047F  0DB7               	rlf	___lodiv@quotient+6,f
  7641  0480  0DB8               	rlf	___lodiv@quotient+7,f
  7642  0481                     l2627:
  7643  0481  0827               	movf	___lodiv@divisor+7,w
  7644  0482  022F               	subwf	___lodiv@dividend+7,w
  7645  0483  1D03               	skipz
  7646  0484  2C9F               	goto	u885
  7647  0485  0826               	movf	___lodiv@divisor+6,w
  7648  0486  022E               	subwf	___lodiv@dividend+6,w
  7649  0487  1D03               	skipz
  7650  0488  2C9F               	goto	u885
  7651  0489  0825               	movf	___lodiv@divisor+5,w
  7652  048A  022D               	subwf	___lodiv@dividend+5,w
  7653  048B  1D03               	skipz
  7654  048C  2C9F               	goto	u885
  7655  048D  0824               	movf	___lodiv@divisor+4,w
  7656  048E  022C               	subwf	___lodiv@dividend+4,w
  7657  048F  1D03               	skipz
  7658  0490  2C9F               	goto	u885
  7659  0491  0823               	movf	___lodiv@divisor+3,w
  7660  0492  022B               	subwf	___lodiv@dividend+3,w
  7661  0493  1D03               	skipz
  7662  0494  2C9F               	goto	u885
  7663  0495  0822               	movf	___lodiv@divisor+2,w
  7664  0496  022A               	subwf	___lodiv@dividend+2,w
  7665  0497  1D03               	skipz
  7666  0498  2C9F               	goto	u885
  7667  0499  0821               	movf	___lodiv@divisor+1,w
  7668  049A  0229               	subwf	___lodiv@dividend+1,w
  7669  049B  1D03               	skipz
  7670  049C  2C9F               	goto	u885
  7671  049D  0820               	movf	___lodiv@divisor,w
  7672  049E  0228               	subwf	___lodiv@dividend,w
  7673  049F                     u885:
  7674  049F  1C03               	skipc
  7675  04A0  2CA2               	goto	u881
  7676  04A1  2CA3               	goto	u880
  7677  04A2                     u881:
  7678  04A2  2CB4               	goto	l2633
  7679  04A3                     u880:
  7680  04A3                     l2629:
  7681  04A3  0820               	movf	___lodiv@divisor,w
  7682  04A4  02A8               	subwf	___lodiv@dividend,f
  7683  04A5  0821               	movf	___lodiv@divisor+1,w
  7684  04A6  3BA9               	subwfb	___lodiv@dividend+1,f
  7685  04A7  0822               	movf	___lodiv@divisor+2,w
  7686  04A8  3BAA               	subwfb	___lodiv@dividend+2,f
  7687  04A9  0823               	movf	___lodiv@divisor+3,w
  7688  04AA  3BAB               	subwfb	___lodiv@dividend+3,f
  7689  04AB  0824               	movf	___lodiv@divisor+4,w
  7690  04AC  3BAC               	subwfb	___lodiv@dividend+4,f
  7691  04AD  0825               	movf	___lodiv@divisor+5,w
  7692  04AE  3BAD               	subwfb	___lodiv@dividend+5,f
  7693  04AF  0826               	movf	___lodiv@divisor+6,w
  7694  04B0  3BAE               	subwfb	___lodiv@dividend+6,f
  7695  04B1  0827               	movf	___lodiv@divisor+7,w
  7696  04B2  3BAF               	subwfb	___lodiv@dividend+7,f
  7697  04B3                     l2631:
  7698  04B3  1431               	bsf	___lodiv@quotient,0
  7699  04B4                     l2633:
  7700  04B4  36A7               	lsrf	___lodiv@divisor+7,f
  7701  04B5  0CA6               	rrf	___lodiv@divisor+6,f
  7702  04B6  0CA5               	rrf	___lodiv@divisor+5,f
  7703  04B7  0CA4               	rrf	___lodiv@divisor+4,f
  7704  04B8  0CA3               	rrf	___lodiv@divisor+3,f
  7705  04B9  0CA2               	rrf	___lodiv@divisor+2,f
  7706  04BA  0CA1               	rrf	___lodiv@divisor+1,f
  7707  04BB  0CA0               	rrf	___lodiv@divisor,f
  7708  04BC  3001               	movlw	1
  7709  04BD  02B9               	subwf	___lodiv@counter,f
  7710  04BE  1D03               	btfss	3,2
  7711  04BF  2CC1               	goto	u891
  7712  04C0  2CC2               	goto	u890
  7713  04C1                     u891:
  7714  04C1  2C79               	goto	l2625
  7715  04C2                     u890:
  7716  04C2                     l1190:
  7717  04C2  0831               	movf	___lodiv@quotient,w
  7718  04C3  00A0               	movwf	?___lodiv
  7719  04C4  0832               	movf	___lodiv@quotient+1,w
  7720  04C5  00A1               	movwf	?___lodiv+1
  7721  04C6  0833               	movf	___lodiv@quotient+2,w
  7722  04C7  00A2               	movwf	?___lodiv+2
  7723  04C8  0834               	movf	___lodiv@quotient+3,w
  7724  04C9  00A3               	movwf	?___lodiv+3
  7725  04CA  0835               	movf	___lodiv@quotient+4,w
  7726  04CB  00A4               	movwf	?___lodiv+4
  7727  04CC  0836               	movf	___lodiv@quotient+5,w
  7728  04CD  00A5               	movwf	?___lodiv+5
  7729  04CE  0837               	movf	___lodiv@quotient+6,w
  7730  04CF  00A6               	movwf	?___lodiv+6
  7731  04D0  0838               	movf	___lodiv@quotient+7,w
  7732  04D1  00A7               	movwf	?___lodiv+7
  7733  04D2                     l1197:
  7734  04D2  0008               	return
  7735  04D3                     __end_of___lodiv:
  7736                           
  7737                           	psect	text13
  7738  0798                     __ptext13:	
  7739 ;; *************** function _PIC16_Init *****************
  7740 ;; Defined at:
  7741 ;;		line 16 in file "PIC16Xpress_DevBoard.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;		None
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      void 
  7748 ;; Registers used:
  7749 ;;		wreg, status,2, status,0, pclath, cstack
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;Total ram usage:        0 bytes
  7760 ;; Hardware stack levels used: 1
  7761 ;; Hardware stack levels required when called: 7
  7762 ;; This function calls:
  7763 ;;		_SYSTEM_Initialize
  7764 ;; This function is called by:
  7765 ;;		_main
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769  0798                     _PIC16_Init:	
  7770                           ;psect for function _PIC16_Init
  7771                           
  7772  0798                     l3967:	
  7773                           ;incstack = 0
  7774                           ; Regs used in _PIC16_Init: [wreg+status,2+status,0+pclath+cstack]
  7775                           
  7776                           
  7777                           ;PIC16Xpress_DevBoard.c: 18:     PIE0 = 0x00;
  7778  0798  0021               	movlb	1	; select bank1
  7779  0799  0190               	clrf	16	;volatile
  7780                           
  7781                           ;PIC16Xpress_DevBoard.c: 19:     PIE1 = 0x00;
  7782  079A  0191               	clrf	17	;volatile
  7783                           
  7784                           ;PIC16Xpress_DevBoard.c: 20:     PIE2 = 0x00;
  7785  079B  0192               	clrf	18	;volatile
  7786                           
  7787                           ;PIC16Xpress_DevBoard.c: 21:     PIE3 = 0x00;
  7788  079C  0193               	clrf	19	;volatile
  7789                           
  7790                           ;PIC16Xpress_DevBoard.c: 22:     PIE4 = 0x00;
  7791  079D  0194               	clrf	20	;volatile
  7792                           
  7793                           ;PIC16Xpress_DevBoard.c: 25:     LATA = 0x00;
  7794  079E  0022               	movlb	2	; select bank2
  7795  079F  018C               	clrf	12	;volatile
  7796                           
  7797                           ;PIC16Xpress_DevBoard.c: 26:     LATB = 0x00;
  7798  07A0  018D               	clrf	13	;volatile
  7799                           
  7800                           ;PIC16Xpress_DevBoard.c: 27:     LATC = 0x00;
  7801  07A1  018E               	clrf	14	;volatile
  7802  07A2                     l3969:
  7803                           
  7804                           ;PIC16Xpress_DevBoard.c: 29:     TRISA = 0x37;
  7805  07A2  3037               	movlw	55
  7806  07A3  0021               	movlb	1	; select bank1
  7807  07A4  008C               	movwf	12	;volatile
  7808  07A5                     l3971:
  7809                           
  7810                           ;PIC16Xpress_DevBoard.c: 30:     TRISB = 0xF0;
  7811  07A5  30F0               	movlw	240
  7812  07A6  008D               	movwf	13	;volatile
  7813  07A7                     l3973:
  7814                           
  7815                           ;PIC16Xpress_DevBoard.c: 31:     TRISC = 0xFF;
  7816  07A7  30FF               	movlw	255
  7817  07A8  008E               	movwf	14	;volatile
  7818  07A9                     l3975:
  7819                           
  7820                           ;PIC16Xpress_DevBoard.c: 33:     ANSELC = 0xFF;
  7821  07A9  30FF               	movlw	255
  7822  07AA  0023               	movlb	3	; select bank3
  7823  07AB  008E               	movwf	14	;volatile
  7824  07AC                     l3977:
  7825                           
  7826                           ;PIC16Xpress_DevBoard.c: 34:     ANSELB = 0xF0;
  7827  07AC  30F0               	movlw	240
  7828  07AD  008D               	movwf	13	;volatile
  7829  07AE                     l3979:
  7830                           
  7831                           ;PIC16Xpress_DevBoard.c: 35:     ANSELA = 0x37;
  7832  07AE  3037               	movlw	55
  7833  07AF  008C               	movwf	12	;volatile
  7834                           
  7835                           ;PIC16Xpress_DevBoard.c: 37:     WPUB = 0x00;
  7836  07B0  0024               	movlb	4	; select bank4
  7837  07B1  018D               	clrf	13	;volatile
  7838                           
  7839                           ;PIC16Xpress_DevBoard.c: 38:     WPUA = 0x00;
  7840  07B2  018C               	clrf	12	;volatile
  7841                           
  7842                           ;PIC16Xpress_DevBoard.c: 39:     WPUC = 0x00;
  7843  07B3  018E               	clrf	14	;volatile
  7844                           
  7845                           ;PIC16Xpress_DevBoard.c: 41:     ODCONA = 0x00;
  7846  07B4  0025               	movlb	5	; select bank5
  7847  07B5  018C               	clrf	12	;volatile
  7848                           
  7849                           ;PIC16Xpress_DevBoard.c: 42:     ODCONB = 0x00;
  7850  07B6  018D               	clrf	13	;volatile
  7851                           
  7852                           ;PIC16Xpress_DevBoard.c: 43:     ODCONC = 0x00;
  7853  07B7  018E               	clrf	14	;volatile
  7854  07B8                     l3981:
  7855                           
  7856                           ;PIC16Xpress_DevBoard.c: 45:     SLRCONA = 0x37;
  7857  07B8  3037               	movlw	55
  7858  07B9  0026               	movlb	6	; select bank6
  7859  07BA  008C               	movwf	12	;volatile
  7860  07BB                     l3983:
  7861                           
  7862                           ;PIC16Xpress_DevBoard.c: 46:     SLRCONB = 0xF0;
  7863  07BB  30F0               	movlw	240
  7864  07BC  008D               	movwf	13	;volatile
  7865  07BD                     l3985:
  7866                           
  7867                           ;PIC16Xpress_DevBoard.c: 47:     SLRCONC = 0xFF;
  7868  07BD  30FF               	movlw	255
  7869  07BE  008E               	movwf	14	;volatile
  7870  07BF                     l3987:
  7871                           
  7872                           ;PIC16Xpress_DevBoard.c: 49:     INLVLA = 0x3F;
  7873  07BF  303F               	movlw	63
  7874  07C0  0027               	movlb	7	; select bank7
  7875  07C1  008C               	movwf	12	;volatile
  7876  07C2                     l3989:
  7877                           
  7878                           ;PIC16Xpress_DevBoard.c: 50:     INLVLB = 0xF0;
  7879  07C2  30F0               	movlw	240
  7880  07C3  008D               	movwf	13	;volatile
  7881  07C4                     l3991:
  7882                           
  7883                           ;PIC16Xpress_DevBoard.c: 51:     INLVLC = 0xFF;
  7884  07C4  30FF               	movlw	255
  7885  07C5  008E               	movwf	14	;volatile
  7886                           
  7887                           ;PIC16Xpress_DevBoard.c: 54:     PIR0 = 0x00;
  7888  07C6  0020               	movlb	0	; select bank0
  7889  07C7  0190               	clrf	16	;volatile
  7890                           
  7891                           ;PIC16Xpress_DevBoard.c: 55:     PIR1 = 0x00;
  7892  07C8  0191               	clrf	17	;volatile
  7893                           
  7894                           ;PIC16Xpress_DevBoard.c: 56:     PIR2 = 0x00;
  7895  07C9  0192               	clrf	18	;volatile
  7896                           
  7897                           ;PIC16Xpress_DevBoard.c: 57:     PIR3 = 0x00;
  7898  07CA  0193               	clrf	19	;volatile
  7899                           
  7900                           ;PIC16Xpress_DevBoard.c: 58:     PIR4 = 0x00;
  7901  07CB  0194               	clrf	20	;volatile
  7902  07CC                     l3993:
  7903                           
  7904                           ;PIC16Xpress_DevBoard.c: 60:     SYSTEM_Initialize();
  7905  07CC  318E  2691  3187   	fcall	_SYSTEM_Initialize
  7906  07CF                     l3995:
  7907                           
  7908                           ;PIC16Xpress_DevBoard.c: 61:     INTCONbits.PEIE = 1;
  7909  07CF  170B               	bsf	11,6	;volatile
  7910  07D0                     l3997:
  7911                           
  7912                           ;PIC16Xpress_DevBoard.c: 62:     INTCONbits.GIE = 1;
  7913  07D0  178B               	bsf	11,7	;volatile
  7914  07D1                     l193:
  7915  07D1  0008               	return
  7916  07D2                     __end_of_PIC16_Init:
  7917                           
  7918                           	psect	text14
  7919  0E91                     __ptext14:	
  7920 ;; *************** function _SYSTEM_Initialize *****************
  7921 ;; Defined at:
  7922 ;;		line 15 in file "mcc.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;		None
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;		None
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  1    wreg      void 
  7929 ;; Registers used:
  7930 ;;		wreg, status,2, status,0, pclath, cstack
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7940 ;;Total ram usage:        0 bytes
  7941 ;; Hardware stack levels used: 1
  7942 ;; Hardware stack levels required when called: 6
  7943 ;; This function calls:
  7944 ;;		_CCP1_Initialize
  7945 ;;		_CCP2_Initialize
  7946 ;;		_CCP3_Initialize
  7947 ;;		_EUSART_Initialize
  7948 ;;		_OSCILLATOR_Initialize
  7949 ;;		_PIN_MANAGER_Initialize
  7950 ;;		_PMD_Initialize
  7951 ;;		_TMR0_Initialize
  7952 ;;		_TMR1_Initialize
  7953 ;;		_WDT_Initialize
  7954 ;; This function is called by:
  7955 ;;		_PIC16_Init
  7956 ;; This function uses a non-reentrant model
  7957 ;;
  7958                           
  7959  0E91                     _SYSTEM_Initialize:	
  7960                           ;psect for function _SYSTEM_Initialize
  7961                           
  7962  0E91                     l3915:	
  7963                           ;incstack = 0
  7964                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7965                           
  7966                           
  7967                           ;mcc.c: 17:     PMD_Initialize();
  7968  0E91  318D  251A  318E   	fcall	_PMD_Initialize
  7969                           
  7970                           ;mcc.c: 18:     PIN_MANAGER_Initialize();
  7971  0E94  318F  2791  318E   	fcall	_PIN_MANAGER_Initialize
  7972                           
  7973                           ;mcc.c: 19:     OSCILLATOR_Initialize();
  7974  0E97  318D  250E  318E   	fcall	_OSCILLATOR_Initialize
  7975                           
  7976                           ;mcc.c: 20:     WDT_Initialize();
  7977  0E9A  318C  2476  318E   	fcall	_WDT_Initialize
  7978                           
  7979                           ;mcc.c: 21:     CCP2_Initialize();
  7980  0E9D  318D  25F7  318E   	fcall	_CCP2_Initialize
  7981                           
  7982                           ;mcc.c: 22:     CCP3_Initialize();
  7983  0EA0  318E  260F  318E   	fcall	_CCP3_Initialize
  7984                           
  7985                           ;mcc.c: 23:     CCP1_Initialize();
  7986  0EA3  318D  25DF  318E   	fcall	_CCP1_Initialize
  7987                           
  7988                           ;mcc.c: 24:     TMR1_Initialize();
  7989  0EA6  318E  2627  318E   	fcall	_TMR1_Initialize
  7990                           
  7991                           ;mcc.c: 25:     TMR0_Initialize();
  7992  0EA9  318D  255C  318E   	fcall	_TMR0_Initialize
  7993                           
  7994                           ;mcc.c: 26:     EUSART_Initialize();
  7995  0EAC  3186  26CF  318E   	fcall	_EUSART_Initialize
  7996  0EAF                     l314:
  7997  0EAF  0008               	return
  7998  0EB0                     __end_of_SYSTEM_Initialize:
  7999                           
  8000                           	psect	text15
  8001  0C76                     __ptext15:	
  8002 ;; *************** function _WDT_Initialize *****************
  8003 ;; Defined at:
  8004 ;;		line 51 in file "mcc.c"
  8005 ;; Parameters:    Size  Location     Type
  8006 ;;		None
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;		None
  8009 ;; Return value:  Size  Location     Type
  8010 ;;                  1    wreg      void 
  8011 ;; Registers used:
  8012 ;;		wreg
  8013 ;; Tracked objects:
  8014 ;;		On entry : 0/0
  8015 ;;		On exit  : 0/0
  8016 ;;		Unchanged: 0/0
  8017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8022 ;;Total ram usage:        0 bytes
  8023 ;; Hardware stack levels used: 1
  8024 ;; Hardware stack levels required when called: 4
  8025 ;; This function calls:
  8026 ;;		Nothing
  8027 ;; This function is called by:
  8028 ;;		_SYSTEM_Initialize
  8029 ;; This function uses a non-reentrant model
  8030 ;;
  8031                           
  8032  0C76                     _WDT_Initialize:	
  8033                           ;psect for function _WDT_Initialize
  8034                           
  8035  0C76                     l3803:	
  8036                           ;incstack = 0
  8037                           ; Regs used in _WDT_Initialize: [wreg]
  8038                           
  8039                           
  8040                           ;mcc.c: 54:     WDTCON = 0x16;
  8041  0C76  3016               	movlw	22
  8042  0C77  0021               	movlb	1	; select bank1
  8043  0C78  0097               	movwf	23	;volatile
  8044  0C79                     l323:
  8045  0C79  0008               	return
  8046  0C7A                     __end_of_WDT_Initialize:
  8047                           
  8048                           	psect	text16
  8049  0D1A                     __ptext16:	
  8050 ;; *************** function _PMD_Initialize *****************
  8051 ;; Defined at:
  8052 ;;		line 59 in file "mcc.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;		None
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;		None
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  1    wreg      void 
  8059 ;; Registers used:
  8060 ;;		wreg, status,2
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8070 ;;Total ram usage:        0 bytes
  8071 ;; Hardware stack levels used: 1
  8072 ;; Hardware stack levels required when called: 4
  8073 ;; This function calls:
  8074 ;;		Nothing
  8075 ;; This function is called by:
  8076 ;;		_SYSTEM_Initialize
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080  0D1A                     _PMD_Initialize:	
  8081                           ;psect for function _PMD_Initialize
  8082                           
  8083  0D1A                     l3751:	
  8084                           ;incstack = 0
  8085                           ; Regs used in _PMD_Initialize: [wreg+status,2]
  8086                           
  8087                           
  8088                           ;mcc.c: 62:     PMD0 = 0x00;
  8089  0D1A  0032               	movlb	18	; select bank18
  8090  0D1B  0191               	clrf	17	;volatile
  8091  0D1C                     l3753:
  8092                           
  8093                           ;mcc.c: 64:     PMD1 = 0x7C;
  8094  0D1C  307C               	movlw	124
  8095  0D1D  0092               	movwf	18	;volatile
  8096  0D1E                     l3755:
  8097                           
  8098                           ;mcc.c: 66:     PMD2 = 0x66;
  8099  0D1E  3066               	movlw	102
  8100  0D1F  0093               	movwf	19	;volatile
  8101  0D20                     l3757:
  8102                           
  8103                           ;mcc.c: 68:     PMD3 = 0xC8;
  8104  0D20  30C8               	movlw	200
  8105  0D21  0094               	movwf	20	;volatile
  8106  0D22                     l3759:
  8107                           
  8108                           ;mcc.c: 70:     PMD4 = 0x00;
  8109  0D22  0195               	clrf	21	;volatile
  8110                           
  8111                           ;mcc.c: 72:     PMD5 = 0x1F;
  8112  0D23  301F               	movlw	31
  8113  0D24  0096               	movwf	22	;volatile
  8114  0D25                     l326:
  8115  0D25  0008               	return
  8116  0D26                     __end_of_PMD_Initialize:
  8117                           
  8118                           	psect	text17
  8119  0F91                     __ptext17:	
  8120 ;; *************** function _PIN_MANAGER_Initialize *****************
  8121 ;; Defined at:
  8122 ;;		line 4 in file "pin_manager.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;		None
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;		None
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  1    wreg      void 
  8129 ;; Registers used:
  8130 ;;		wreg, status,2
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8140 ;;Total ram usage:        0 bytes
  8141 ;; Hardware stack levels used: 1
  8142 ;; Hardware stack levels required when called: 4
  8143 ;; This function calls:
  8144 ;;		Nothing
  8145 ;; This function is called by:
  8146 ;;		_SYSTEM_Initialize
  8147 ;; This function uses a non-reentrant model
  8148 ;;
  8149                           
  8150  0F91                     _PIN_MANAGER_Initialize:	
  8151                           ;psect for function _PIN_MANAGER_Initialize
  8152                           
  8153  0F91                     l3761:	
  8154                           ;incstack = 0
  8155                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8156                           
  8157                           
  8158                           ;pin_manager.c: 9:     LATA = 0x00;
  8159  0F91  0022               	movlb	2	; select bank2
  8160  0F92  018C               	clrf	12	;volatile
  8161                           
  8162                           ;pin_manager.c: 10:     LATB = 0x00;
  8163  0F93  018D               	clrf	13	;volatile
  8164                           
  8165                           ;pin_manager.c: 11:     LATC = 0x00;
  8166  0F94  018E               	clrf	14	;volatile
  8167  0F95                     l3763:
  8168                           
  8169                           ;pin_manager.c: 16:     TRISA = 0x37;
  8170  0F95  3037               	movlw	55
  8171  0F96  0021               	movlb	1	; select bank1
  8172  0F97  008C               	movwf	12	;volatile
  8173  0F98                     l3765:
  8174                           
  8175                           ;pin_manager.c: 17:     TRISB = 0xF0;
  8176  0F98  30F0               	movlw	240
  8177  0F99  008D               	movwf	13	;volatile
  8178  0F9A                     l3767:
  8179                           
  8180                           ;pin_manager.c: 18:     TRISC = 0xFF;
  8181  0F9A  30FF               	movlw	255
  8182  0F9B  008E               	movwf	14	;volatile
  8183  0F9C                     l3769:
  8184                           
  8185                           ;pin_manager.c: 23:     ANSELC = 0xD7;
  8186  0F9C  30D7               	movlw	215
  8187  0F9D  0023               	movlb	3	; select bank3
  8188  0F9E  008E               	movwf	14	;volatile
  8189  0F9F                     l3771:
  8190                           
  8191                           ;pin_manager.c: 24:     ANSELB = 0xF0;
  8192  0F9F  30F0               	movlw	240
  8193  0FA0  008D               	movwf	13	;volatile
  8194  0FA1                     l3773:
  8195                           
  8196                           ;pin_manager.c: 25:     ANSELA = 0x33;
  8197  0FA1  3033               	movlw	51
  8198  0FA2  008C               	movwf	12	;volatile
  8199                           
  8200                           ;pin_manager.c: 30:     WPUB = 0x00;
  8201  0FA3  0024               	movlb	4	; select bank4
  8202  0FA4  018D               	clrf	13	;volatile
  8203                           
  8204                           ;pin_manager.c: 31:     WPUA = 0x00;
  8205  0FA5  018C               	clrf	12	;volatile
  8206                           
  8207                           ;pin_manager.c: 32:     WPUC = 0x00;
  8208  0FA6  018E               	clrf	14	;volatile
  8209                           
  8210                           ;pin_manager.c: 37:     ODCONA = 0x00;
  8211  0FA7  0025               	movlb	5	; select bank5
  8212  0FA8  018C               	clrf	12	;volatile
  8213                           
  8214                           ;pin_manager.c: 38:     ODCONB = 0x00;
  8215  0FA9  018D               	clrf	13	;volatile
  8216                           
  8217                           ;pin_manager.c: 39:     ODCONC = 0x00;
  8218  0FAA  018E               	clrf	14	;volatile
  8219  0FAB                     l3775:
  8220                           
  8221                           ;pin_manager.c: 44:     SLRCONA = 0x37;
  8222  0FAB  3037               	movlw	55
  8223  0FAC  0026               	movlb	6	; select bank6
  8224  0FAD  008C               	movwf	12	;volatile
  8225  0FAE                     l3777:
  8226                           
  8227                           ;pin_manager.c: 45:     SLRCONB = 0xF0;
  8228  0FAE  30F0               	movlw	240
  8229  0FAF  008D               	movwf	13	;volatile
  8230  0FB0                     l3779:
  8231                           
  8232                           ;pin_manager.c: 46:     SLRCONC = 0xFF;
  8233  0FB0  30FF               	movlw	255
  8234  0FB1  008E               	movwf	14	;volatile
  8235  0FB2                     l3781:
  8236                           
  8237                           ;pin_manager.c: 51:     INLVLA = 0x3F;
  8238  0FB2  303F               	movlw	63
  8239  0FB3  0027               	movlb	7	; select bank7
  8240  0FB4  008C               	movwf	12	;volatile
  8241  0FB5                     l3783:
  8242                           
  8243                           ;pin_manager.c: 52:     INLVLB = 0xF0;
  8244  0FB5  30F0               	movlw	240
  8245  0FB6  008D               	movwf	13	;volatile
  8246  0FB7                     l3785:
  8247                           
  8248                           ;pin_manager.c: 53:     INLVLC = 0xFF;
  8249  0FB7  30FF               	movlw	255
  8250  0FB8  008E               	movwf	14	;volatile
  8251  0FB9                     l3787:
  8252                           
  8253                           ;pin_manager.c: 55:     RXPPS = 0x0D;
  8254  0FB9  300D               	movlw	13
  8255  0FBA  003C               	movlb	28	; select bank28
  8256  0FBB  00A4               	movwf	36	;volatile
  8257  0FBC                     l3789:
  8258                           
  8259                           ;pin_manager.c: 56:     CCP2PPS = 0x13;
  8260  0FBC  3013               	movlw	19
  8261  0FBD  0095               	movwf	21	;volatile
  8262  0FBE                     l3791:
  8263                           
  8264                           ;pin_manager.c: 57:     CCP3PPS = 0x02;
  8265  0FBE  3002               	movlw	2
  8266  0FBF  0096               	movwf	22	;volatile
  8267  0FC0                     l3793:
  8268                           
  8269                           ;pin_manager.c: 58:     RC4PPS = 0x14;
  8270  0FC0  3014               	movlw	20
  8271  0FC1  003D               	movlb	29	; select bank29
  8272  0FC2  00A4               	movwf	36	;volatile
  8273  0FC3                     l3795:
  8274                           
  8275                           ;pin_manager.c: 59:     CCP1PPS = 0x15;
  8276  0FC3  3015               	movlw	21
  8277  0FC4  003C               	movlb	28	; select bank28
  8278  0FC5  0094               	movwf	20	;volatile
  8279  0FC6                     l802:
  8280  0FC6  0008               	return
  8281  0FC7                     __end_of_PIN_MANAGER_Initialize:
  8282                           
  8283                           	psect	text18
  8284  0D0E                     __ptext18:	
  8285 ;; *************** function _OSCILLATOR_Initialize *****************
  8286 ;; Defined at:
  8287 ;;		line 31 in file "mcc.c"
  8288 ;; Parameters:    Size  Location     Type
  8289 ;;		None
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;		None
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  1    wreg      void 
  8294 ;; Registers used:
  8295 ;;		wreg, status,2
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8305 ;;Total ram usage:        0 bytes
  8306 ;; Hardware stack levels used: 1
  8307 ;; Hardware stack levels required when called: 4
  8308 ;; This function calls:
  8309 ;;		Nothing
  8310 ;; This function is called by:
  8311 ;;		_SYSTEM_Initialize
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315  0D0E                     _OSCILLATOR_Initialize:	
  8316                           ;psect for function _OSCILLATOR_Initialize
  8317                           
  8318  0D0E                     l3797:	
  8319                           ;incstack = 0
  8320                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8321                           
  8322                           
  8323                           ;mcc.c: 34:     OSCCON1 = 0x00;
  8324  0D0E  0032               	movlb	18	; select bank18
  8325  0D0F  0199               	clrf	25	;volatile
  8326                           
  8327                           ;mcc.c: 36:     OSCCON3 = 0x00;
  8328  0D10  019B               	clrf	27	;volatile
  8329                           
  8330                           ;mcc.c: 38:     OSCEN = 0x00;
  8331  0D11  019D               	clrf	29	;volatile
  8332  0D12                     l3799:
  8333                           
  8334                           ;mcc.c: 40:     OSCFRQ = 0x04;
  8335  0D12  3004               	movlw	4
  8336  0D13  009F               	movwf	31	;volatile
  8337  0D14                     l3801:
  8338                           
  8339                           ;mcc.c: 42:     OSCTUNE = 0x00;
  8340  0D14  019E               	clrf	30	;volatile
  8341  0D15                     l317:	
  8342                           ;mcc.c: 45:     {;mcc.c: 46:     }
  8343                           
  8344                           
  8345                           ;mcc.c: 44:     while(PLLR == 0)
  8346  0D15  1C1C               	btfss	28,0	;volatile
  8347  0D16  2D18               	goto	u1671
  8348  0D17  2D19               	goto	u1670
  8349  0D18                     u1671:
  8350  0D18  2D15               	goto	l317
  8351  0D19                     u1670:
  8352  0D19                     l320:
  8353  0D19  0008               	return
  8354  0D1A                     __end_of_OSCILLATOR_Initialize:
  8355                           
  8356                           	psect	text19
  8357  06CF                     __ptext19:	
  8358 ;; *************** function _EUSART_Initialize *****************
  8359 ;; Defined at:
  8360 ;;		line 45 in file "eusart.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;		None
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;		None
  8365 ;; Return value:  Size  Location     Type
  8366 ;;                  1    wreg      void 
  8367 ;; Registers used:
  8368 ;;		wreg, status,2, status,0, pclath, cstack
  8369 ;; Tracked objects:
  8370 ;;		On entry : 0/0
  8371 ;;		On exit  : 0/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8376 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8377 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8378 ;;Total ram usage:        1 bytes
  8379 ;; Hardware stack levels used: 1
  8380 ;; Hardware stack levels required when called: 5
  8381 ;; This function calls:
  8382 ;;		_EUSART_SetErrorHandler
  8383 ;;		_EUSART_SetFramingErrorHandler
  8384 ;;		_EUSART_SetOverrunErrorHandler
  8385 ;;		_EUSART_SetRxInterruptHandler
  8386 ;;		_EUSART_SetTxInterruptHandler
  8387 ;; This function is called by:
  8388 ;;		_SYSTEM_Initialize
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392  06CF                     _EUSART_Initialize:	
  8393                           ;psect for function _EUSART_Initialize
  8394                           
  8395  06CF                     l3837:	
  8396                           ;incstack = 0
  8397                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8398                           
  8399                           
  8400                           ;eusart.c: 48:     PIE1bits.RCIE = 0;
  8401  06CF  0021               	movlb	1	; select bank1
  8402  06D0  1291               	bcf	17,5	;volatile
  8403  06D1                     l3839:
  8404                           
  8405                           ;eusart.c: 49:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  8406  06D1  30C7               	movlw	low _EUSART_Receive_ISR
  8407  06D2  0020               	movlb	0	; select bank0
  8408  06D3  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  8409  06D4  300F               	movlw	high _EUSART_Receive_ISR
  8410  06D5  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  8411  06D6  318C  24DD  3186   	fcall	_EUSART_SetRxInterruptHandler
  8412  06D9                     l3841:
  8413                           
  8414                           ;eusart.c: 50:     PIE1bits.TXIE = 0;
  8415  06D9  0021               	movlb	1	; select bank1
  8416  06DA  1211               	bcf	17,4	;volatile
  8417                           
  8418                           ;eusart.c: 51:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  8419  06DB  30B0               	movlw	low _EUSART_Transmit_ISR
  8420  06DC  0020               	movlb	0	; select bank0
  8421  06DD  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  8422  06DE  300E               	movlw	high _EUSART_Transmit_ISR
  8423  06DF  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  8424  06E0  318C  24E6  3186   	fcall	_EUSART_SetTxInterruptHandler
  8425  06E3                     l3843:
  8426                           
  8427                           ;eusart.c: 55:     BAUD1CON = 0x08;
  8428  06E3  3008               	movlw	8
  8429  06E4  0023               	movlb	3	; select bank3
  8430  06E5  009F               	movwf	31	;volatile
  8431  06E6                     l3845:
  8432                           
  8433                           ;eusart.c: 58:     RC1STA = 0x90;
  8434  06E6  3090               	movlw	144
  8435  06E7  009D               	movwf	29	;volatile
  8436  06E8                     l3847:
  8437                           
  8438                           ;eusart.c: 61:     TX1STA = 0x24;
  8439  06E8  3024               	movlw	36
  8440  06E9  009E               	movwf	30	;volatile
  8441  06EA                     l3849:
  8442                           
  8443                           ;eusart.c: 64:     SP1BRGL = 0xA0;
  8444  06EA  30A0               	movlw	160
  8445  06EB  009B               	movwf	27	;volatile
  8446  06EC                     l3851:
  8447                           
  8448                           ;eusart.c: 67:     SP1BRGH = 0x01;
  8449  06EC  3001               	movlw	1
  8450  06ED  009C               	movwf	28	;volatile
  8451  06EE                     l3853:
  8452                           
  8453                           ;eusart.c: 70:     EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  8454  06EE  3003               	movlw	low _EUSART_DefaultFramingErrorHandler
  8455  06EF  0020               	movlb	0	; select bank0
  8456  06F0  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  8457  06F1  3000               	movlw	high _EUSART_DefaultFramingErrorHandler
  8458  06F2  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  8459  06F3  318C  24CB  3186   	fcall	_EUSART_SetFramingErrorHandler
  8460  06F6                     l3855:
  8461                           
  8462                           ;eusart.c: 71:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  8463  06F6  306E               	movlw	low _EUSART_DefaultOverrunErrorHandler
  8464  06F7  0020               	movlb	0	; select bank0
  8465  06F8  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  8466  06F9  300C               	movlw	high _EUSART_DefaultOverrunErrorHandler
  8467  06FA  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  8468  06FB  318C  24D4  3186   	fcall	_EUSART_SetOverrunErrorHandler
  8469  06FE                     l3857:
  8470                           
  8471                           ;eusart.c: 72:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  8472  06FE  306A               	movlw	low _EUSART_DefaultErrorHandler
  8473  06FF  0020               	movlb	0	; select bank0
  8474  0700  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  8475  0701  300C               	movlw	high _EUSART_DefaultErrorHandler
  8476  0702  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  8477  0703  318C  24C2  3186   	fcall	_EUSART_SetErrorHandler
  8478  0706                     l3859:
  8479                           
  8480                           ;eusart.c: 74:     eusartRxLastError.status = 0;
  8481  0706  0021               	movlb	1	; select bank1
  8482  0707  01D8               	clrf	_eusartRxLastError^(0+128)	;volatile
  8483  0708                     l3861:
  8484                           
  8485                           ;eusart.c: 77:     eusartTxHead = 0;
  8486  0708  01F5               	clrf	_eusartTxHead	;volatile
  8487  0709                     l3863:
  8488                           
  8489                           ;eusart.c: 78:     eusartTxTail = 0;
  8490  0709  01F4               	clrf	_eusartTxTail	;volatile
  8491  070A                     l3865:
  8492                           
  8493                           ;eusart.c: 79:     eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  8494  070A  3008               	movlw	8
  8495  070B  0020               	movlb	0	; select bank0
  8496  070C  00A2               	movwf	??_EUSART_Initialize
  8497  070D  0822               	movf	??_EUSART_Initialize,w
  8498  070E  00F3               	movwf	_eusartTxBufferRemaining	;volatile
  8499                           
  8500                           ;eusart.c: 81:     eusartRxHead = 0;
  8501  070F  01F2               	clrf	_eusartRxHead	;volatile
  8502                           
  8503                           ;eusart.c: 82:     eusartRxTail = 0;
  8504  0710  01F1               	clrf	_eusartRxTail	;volatile
  8505                           
  8506                           ;eusart.c: 83:     eusartRxCount = 0;
  8507  0711  01F0               	clrf	_eusartRxCount	;volatile
  8508  0712                     l3867:
  8509                           
  8510                           ;eusart.c: 86:     PIE1bits.RCIE = 1;
  8511  0712  0021               	movlb	1	; select bank1
  8512  0713  1691               	bsf	17,5	;volatile
  8513  0714                     l625:
  8514  0714  0008               	return
  8515  0715                     __end_of_EUSART_Initialize:
  8516                           
  8517                           	psect	text20
  8518  0CE6                     __ptext20:	
  8519 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  8520 ;; Defined at:
  8521 ;;		line 278 in file "eusart.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8524 ;;		 -> EUSART_Transmit_ISR(1), 
  8525 ;; Auto vars:     Size  Location     Type
  8526 ;;		None
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  1    wreg      void 
  8529 ;; Registers used:
  8530 ;;		wreg
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8536 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8539 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8540 ;;Total ram usage:        2 bytes
  8541 ;; Hardware stack levels used: 1
  8542 ;; Hardware stack levels required when called: 4
  8543 ;; This function calls:
  8544 ;;		Nothing
  8545 ;; This function is called by:
  8546 ;;		_EUSART_Initialize
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550  0CE6                     _EUSART_SetTxInterruptHandler:	
  8551                           ;psect for function _EUSART_SetTxInterruptHandler
  8552                           
  8553  0CE6                     l3667:	
  8554                           ;incstack = 0
  8555                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  8556                           
  8557                           
  8558                           ;eusart.c: 279:     EUSART_TxDefaultInterruptHandler = interruptHandler;
  8559  0CE6  0020               	movlb	0	; select bank0
  8560  0CE7  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  8561  0CE8  0021               	movlb	1	; select bank1
  8562  0CE9  00C5               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
  8563  0CEA  0020               	movlb	0	; select bank0
  8564  0CEB  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  8565  0CEC  0021               	movlb	1	; select bank1
  8566  0CED  00C4               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
  8567  0CEE                     l697:
  8568  0CEE  0008               	return
  8569  0CEF                     __end_of_EUSART_SetTxInterruptHandler:
  8570                           
  8571                           	psect	text21
  8572  0CDD                     __ptext21:	
  8573 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  8574 ;; Defined at:
  8575 ;;		line 284 in file "eusart.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8578 ;;		 -> EUSART_Receive_ISR(1), 
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;		None
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  1    wreg      void 
  8583 ;; Registers used:
  8584 ;;		wreg
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8590 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8593 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8594 ;;Total ram usage:        2 bytes
  8595 ;; Hardware stack levels used: 1
  8596 ;; Hardware stack levels required when called: 4
  8597 ;; This function calls:
  8598 ;;		Nothing
  8599 ;; This function is called by:
  8600 ;;		_EUSART_Initialize
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604  0CDD                     _EUSART_SetRxInterruptHandler:	
  8605                           ;psect for function _EUSART_SetRxInterruptHandler
  8606                           
  8607  0CDD                     l3665:	
  8608                           ;incstack = 0
  8609                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  8610                           
  8611                           
  8612                           ;eusart.c: 285:     EUSART_RxDefaultInterruptHandler = interruptHandler;
  8613  0CDD  0020               	movlb	0	; select bank0
  8614  0CDE  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  8615  0CDF  0021               	movlb	1	; select bank1
  8616  0CE0  00C3               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  8617  0CE1  0020               	movlb	0	; select bank0
  8618  0CE2  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  8619  0CE3  0021               	movlb	1	; select bank1
  8620  0CE4  00C2               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  8621  0CE5                     l700:
  8622  0CE5  0008               	return
  8623  0CE6                     __end_of_EUSART_SetRxInterruptHandler:
  8624                           
  8625                           	psect	text22
  8626  0CD4                     __ptext22:	
  8627 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8628 ;; Defined at:
  8629 ;;		line 266 in file "eusart.c"
  8630 ;; Parameters:    Size  Location     Type
  8631 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8632 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;		None
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  1    wreg      void 
  8637 ;; Registers used:
  8638 ;;		wreg
  8639 ;; Tracked objects:
  8640 ;;		On entry : 0/0
  8641 ;;		On exit  : 0/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8644 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8647 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8648 ;;Total ram usage:        2 bytes
  8649 ;; Hardware stack levels used: 1
  8650 ;; Hardware stack levels required when called: 4
  8651 ;; This function calls:
  8652 ;;		Nothing
  8653 ;; This function is called by:
  8654 ;;		_EUSART_Initialize
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658  0CD4                     _EUSART_SetOverrunErrorHandler:	
  8659                           ;psect for function _EUSART_SetOverrunErrorHandler
  8660                           
  8661  0CD4                     l3671:	
  8662                           ;incstack = 0
  8663                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8664                           
  8665                           
  8666                           ;eusart.c: 267:     EUSART_OverrunErrorHandler = interruptHandler;
  8667  0CD4  0020               	movlb	0	; select bank0
  8668  0CD5  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  8669  0CD6  0021               	movlb	1	; select bank1
  8670  0CD7  00BF               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  8671  0CD8  0020               	movlb	0	; select bank0
  8672  0CD9  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  8673  0CDA  0021               	movlb	1	; select bank1
  8674  0CDB  00BE               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  8675  0CDC                     l691:
  8676  0CDC  0008               	return
  8677  0CDD                     __end_of_EUSART_SetOverrunErrorHandler:
  8678                           
  8679                           	psect	text23
  8680  0CCB                     __ptext23:	
  8681 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8682 ;; Defined at:
  8683 ;;		line 260 in file "eusart.c"
  8684 ;; Parameters:    Size  Location     Type
  8685 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8686 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;		None
  8689 ;; Return value:  Size  Location     Type
  8690 ;;                  1    wreg      void 
  8691 ;; Registers used:
  8692 ;;		wreg
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8698 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;Total ram usage:        2 bytes
  8703 ;; Hardware stack levels used: 1
  8704 ;; Hardware stack levels required when called: 4
  8705 ;; This function calls:
  8706 ;;		Nothing
  8707 ;; This function is called by:
  8708 ;;		_EUSART_Initialize
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712  0CCB                     _EUSART_SetFramingErrorHandler:	
  8713                           ;psect for function _EUSART_SetFramingErrorHandler
  8714                           
  8715  0CCB                     l3669:	
  8716                           ;incstack = 0
  8717                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8718                           
  8719                           
  8720                           ;eusart.c: 261:     EUSART_FramingErrorHandler = interruptHandler;
  8721  0CCB  0020               	movlb	0	; select bank0
  8722  0CCC  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  8723  0CCD  0021               	movlb	1	; select bank1
  8724  0CCE  00C1               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  8725  0CCF  0020               	movlb	0	; select bank0
  8726  0CD0  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  8727  0CD1  0021               	movlb	1	; select bank1
  8728  0CD2  00C0               	movwf	_EUSART_FramingErrorHandler^(0+128)
  8729  0CD3                     l688:
  8730  0CD3  0008               	return
  8731  0CD4                     __end_of_EUSART_SetFramingErrorHandler:
  8732                           
  8733                           	psect	text24
  8734  0CC2                     __ptext24:	
  8735 ;; *************** function _EUSART_SetErrorHandler *****************
  8736 ;; Defined at:
  8737 ;;		line 272 in file "eusart.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8740 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;		None
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  1    wreg      void 
  8745 ;; Registers used:
  8746 ;;		wreg
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8752 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8755 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;Total ram usage:        2 bytes
  8757 ;; Hardware stack levels used: 1
  8758 ;; Hardware stack levels required when called: 4
  8759 ;; This function calls:
  8760 ;;		Nothing
  8761 ;; This function is called by:
  8762 ;;		_EUSART_Initialize
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766  0CC2                     _EUSART_SetErrorHandler:	
  8767                           ;psect for function _EUSART_SetErrorHandler
  8768                           
  8769  0CC2                     l3673:	
  8770                           ;incstack = 0
  8771                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  8772                           
  8773                           
  8774                           ;eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  8775  0CC2  0020               	movlb	0	; select bank0
  8776  0CC3  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  8777  0CC4  0021               	movlb	1	; select bank1
  8778  0CC5  00BD               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  8779  0CC6  0020               	movlb	0	; select bank0
  8780  0CC7  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  8781  0CC8  0021               	movlb	1	; select bank1
  8782  0CC9  00BC               	movwf	_EUSART_ErrorHandler^(0+128)
  8783  0CCA                     l694:
  8784  0CCA  0008               	return
  8785  0CCB                     __end_of_EUSART_SetErrorHandler:
  8786                           
  8787                           	psect	text25
  8788  0E0F                     __ptext25:	
  8789 ;; *************** function _CCP3_Initialize *****************
  8790 ;; Defined at:
  8791 ;;		line 65 in file "ccp3.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;		None
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;		None
  8796 ;; Return value:  Size  Location     Type
  8797 ;;                  1    wreg      void 
  8798 ;; Registers used:
  8799 ;;		wreg, status,2, status,0, pclath, cstack
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8809 ;;Total ram usage:        0 bytes
  8810 ;; Hardware stack levels used: 1
  8811 ;; Hardware stack levels required when called: 5
  8812 ;; This function calls:
  8813 ;;		_CCP3_SetCallBack
  8814 ;; This function is called by:
  8815 ;;		_SYSTEM_Initialize
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819  0E0F                     _CCP3_Initialize:	
  8820                           ;psect for function _CCP3_Initialize
  8821                           
  8822  0E0F                     l3821:	
  8823                           ;incstack = 0
  8824                           ; Regs used in _CCP3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8825                           
  8826                           
  8827                           ;ccp3.c: 70:  CCP3CON = 0x83;
  8828  0E0F  3083               	movlw	131
  8829  0E10  0026               	movlb	6	; select bank6
  8830  0E11  0093               	movwf	19	;volatile
  8831  0E12                     l3823:
  8832                           
  8833                           ;ccp3.c: 73:  CCP3CAP = 0x00;
  8834  0E12  0194               	clrf	20	;volatile
  8835  0E13                     l3825:
  8836                           
  8837                           ;ccp3.c: 76:  CCPR3H = 0x00;
  8838  0E13  0192               	clrf	18	;volatile
  8839  0E14                     l3827:
  8840                           
  8841                           ;ccp3.c: 79:  CCPR3L = 0x00;
  8842  0E14  0191               	clrf	17	;volatile
  8843  0E15                     l3829:
  8844                           
  8845                           ;ccp3.c: 82:     CCP3_SetCallBack(CCP3_DefaultCallBack);
  8846  0E15  3002               	movlw	low _CCP3_DefaultCallBack
  8847  0E16  0020               	movlb	0	; select bank0
  8848  0E17  00A0               	movwf	CCP3_SetCallBack@customCallBack
  8849  0E18  3000               	movlw	high _CCP3_DefaultCallBack
  8850  0E19  00A1               	movwf	CCP3_SetCallBack@customCallBack+1
  8851  0E1A  318C  24B9  318E   	fcall	_CCP3_SetCallBack
  8852  0E1D                     l3831:
  8853                           
  8854                           ;ccp3.c: 85:  CCPTMRSbits.C3TSEL = 0x1;
  8855  0E1D  0025               	movlb	5	; select bank5
  8856  0E1E  081F               	movf	31,w	;volatile
  8857  0E1F  39CF               	andlw	-49
  8858  0E20  3810               	iorlw	16
  8859  0E21  009F               	movwf	31	;volatile
  8860  0E22                     l3833:
  8861                           
  8862                           ;ccp3.c: 88:     PIR4bits.CCP3IF = 0;
  8863  0E22  0020               	movlb	0	; select bank0
  8864  0E23  1114               	bcf	20,2	;volatile
  8865  0E24                     l3835:
  8866                           
  8867                           ;ccp3.c: 91:     PIE4bits.CCP3IE = 1;
  8868  0E24  0021               	movlb	1	; select bank1
  8869  0E25  1514               	bsf	20,2	;volatile
  8870  0E26                     l481:
  8871  0E26  0008               	return
  8872  0E27                     __end_of_CCP3_Initialize:
  8873                           
  8874                           	psect	text26
  8875  0CB9                     __ptext26:	
  8876 ;; *************** function _CCP3_SetCallBack *****************
  8877 ;; Defined at:
  8878 ;;		line 109 in file "ccp3.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  8881 ;;		 -> CCP3_DefaultCallBack(1), 
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;		None
  8884 ;; Return value:  Size  Location     Type
  8885 ;;                  1    wreg      void 
  8886 ;; Registers used:
  8887 ;;		wreg
  8888 ;; Tracked objects:
  8889 ;;		On entry : 0/0
  8890 ;;		On exit  : 0/0
  8891 ;;		Unchanged: 0/0
  8892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8896 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8897 ;;Total ram usage:        2 bytes
  8898 ;; Hardware stack levels used: 1
  8899 ;; Hardware stack levels required when called: 4
  8900 ;; This function calls:
  8901 ;;		Nothing
  8902 ;; This function is called by:
  8903 ;;		_CCP3_Initialize
  8904 ;; This function uses a non-reentrant model
  8905 ;;
  8906                           
  8907  0CB9                     _CCP3_SetCallBack:	
  8908                           ;psect for function _CCP3_SetCallBack
  8909                           
  8910  0CB9                     l3661:	
  8911                           ;incstack = 0
  8912                           ; Regs used in _CCP3_SetCallBack: [wreg]
  8913                           
  8914                           
  8915                           ;ccp3.c: 110:     CCP3_CallBack = customCallBack;
  8916  0CB9  0020               	movlb	0	; select bank0
  8917  0CBA  0821               	movf	CCP3_SetCallBack@customCallBack+1,w
  8918  0CBB  0021               	movlb	1	; select bank1
  8919  0CBC  00CB               	movwf	(_CCP3_CallBack+1)^(0+128)
  8920  0CBD  0020               	movlb	0	; select bank0
  8921  0CBE  0820               	movf	CCP3_SetCallBack@customCallBack,w
  8922  0CBF  0021               	movlb	1	; select bank1
  8923  0CC0  00CA               	movwf	_CCP3_CallBack^(0+128)
  8924  0CC1                     l487:
  8925  0CC1  0008               	return
  8926  0CC2                     __end_of_CCP3_SetCallBack:
  8927                           
  8928                           	psect	text27
  8929  0DF7                     __ptext27:	
  8930 ;; *************** function _CCP2_Initialize *****************
  8931 ;; Defined at:
  8932 ;;		line 65 in file "ccp2.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;		None
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;		None
  8937 ;; Return value:  Size  Location     Type
  8938 ;;                  1    wreg      void 
  8939 ;; Registers used:
  8940 ;;		wreg, status,2, status,0, pclath, cstack
  8941 ;; Tracked objects:
  8942 ;;		On entry : 0/0
  8943 ;;		On exit  : 0/0
  8944 ;;		Unchanged: 0/0
  8945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8950 ;;Total ram usage:        0 bytes
  8951 ;; Hardware stack levels used: 1
  8952 ;; Hardware stack levels required when called: 5
  8953 ;; This function calls:
  8954 ;;		_CCP2_SetCallBack
  8955 ;; This function is called by:
  8956 ;;		_SYSTEM_Initialize
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960  0DF7                     _CCP2_Initialize:	
  8961                           ;psect for function _CCP2_Initialize
  8962                           
  8963  0DF7                     l3805:	
  8964                           ;incstack = 0
  8965                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8966                           
  8967                           
  8968                           ;ccp2.c: 70:  CCP2CON = 0x83;
  8969  0DF7  3083               	movlw	131
  8970  0DF8  0025               	movlb	5	; select bank5
  8971  0DF9  0097               	movwf	23	;volatile
  8972  0DFA                     l3807:
  8973                           
  8974                           ;ccp2.c: 73:  CCP2CAP = 0x00;
  8975  0DFA  0198               	clrf	24	;volatile
  8976  0DFB                     l3809:
  8977                           
  8978                           ;ccp2.c: 76:  CCPR2H = 0x00;
  8979  0DFB  0196               	clrf	22	;volatile
  8980  0DFC                     l3811:
  8981                           
  8982                           ;ccp2.c: 79:  CCPR2L = 0x00;
  8983  0DFC  0195               	clrf	21	;volatile
  8984  0DFD                     l3813:
  8985                           
  8986                           ;ccp2.c: 82:     CCP2_SetCallBack(CCP2_DefaultCallBack);
  8987  0DFD  3069               	movlw	low _CCP2_DefaultCallBack
  8988  0DFE  0020               	movlb	0	; select bank0
  8989  0DFF  00A0               	movwf	CCP2_SetCallBack@customCallBack
  8990  0E00  300C               	movlw	high _CCP2_DefaultCallBack
  8991  0E01  00A1               	movwf	CCP2_SetCallBack@customCallBack+1
  8992  0E02  318C  24B0  318D   	fcall	_CCP2_SetCallBack
  8993  0E05                     l3815:
  8994                           
  8995                           ;ccp2.c: 85:  CCPTMRSbits.C2TSEL = 0x1;
  8996  0E05  0025               	movlb	5	; select bank5
  8997  0E06  081F               	movf	31,w	;volatile
  8998  0E07  39F3               	andlw	-13
  8999  0E08  3804               	iorlw	4
  9000  0E09  009F               	movwf	31	;volatile
  9001  0E0A                     l3817:
  9002                           
  9003                           ;ccp2.c: 88:     PIR4bits.CCP2IF = 0;
  9004  0E0A  0020               	movlb	0	; select bank0
  9005  0E0B  1094               	bcf	20,1	;volatile
  9006  0E0C                     l3819:
  9007                           
  9008                           ;ccp2.c: 91:     PIE4bits.CCP2IE = 1;
  9009  0E0C  0021               	movlb	1	; select bank1
  9010  0E0D  1494               	bsf	20,1	;volatile
  9011  0E0E                     l451:
  9012  0E0E  0008               	return
  9013  0E0F                     __end_of_CCP2_Initialize:
  9014                           
  9015                           	psect	text28
  9016  0CB0                     __ptext28:	
  9017 ;; *************** function _CCP2_SetCallBack *****************
  9018 ;; Defined at:
  9019 ;;		line 109 in file "ccp2.c"
  9020 ;; Parameters:    Size  Location     Type
  9021 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  9022 ;;		 -> CCP2_DefaultCallBack(1), 
  9023 ;; Auto vars:     Size  Location     Type
  9024 ;;		None
  9025 ;; Return value:  Size  Location     Type
  9026 ;;                  1    wreg      void 
  9027 ;; Registers used:
  9028 ;;		wreg
  9029 ;; Tracked objects:
  9030 ;;		On entry : 0/0
  9031 ;;		On exit  : 0/0
  9032 ;;		Unchanged: 0/0
  9033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9034 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9037 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9038 ;;Total ram usage:        2 bytes
  9039 ;; Hardware stack levels used: 1
  9040 ;; Hardware stack levels required when called: 4
  9041 ;; This function calls:
  9042 ;;		Nothing
  9043 ;; This function is called by:
  9044 ;;		_CCP2_Initialize
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048  0CB0                     _CCP2_SetCallBack:	
  9049                           ;psect for function _CCP2_SetCallBack
  9050                           
  9051  0CB0                     l3659:	
  9052                           ;incstack = 0
  9053                           ; Regs used in _CCP2_SetCallBack: [wreg]
  9054                           
  9055                           
  9056                           ;ccp2.c: 110:     CCP2_CallBack = customCallBack;
  9057  0CB0  0020               	movlb	0	; select bank0
  9058  0CB1  0821               	movf	CCP2_SetCallBack@customCallBack+1,w
  9059  0CB2  0021               	movlb	1	; select bank1
  9060  0CB3  00CD               	movwf	(_CCP2_CallBack+1)^(0+128)
  9061  0CB4  0020               	movlb	0	; select bank0
  9062  0CB5  0820               	movf	CCP2_SetCallBack@customCallBack,w
  9063  0CB6  0021               	movlb	1	; select bank1
  9064  0CB7  00CC               	movwf	_CCP2_CallBack^(0+128)
  9065  0CB8                     l457:
  9066  0CB8  0008               	return
  9067  0CB9                     __end_of_CCP2_SetCallBack:
  9068                           
  9069                           	psect	text29
  9070  0679                     __ptext29:	
  9071 ;; *************** function _JSN_Sensor_Trig *****************
  9072 ;; Defined at:
  9073 ;;		line 94 in file "JSN_Sensor.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;  Sensor          1    wreg     PTR struct .
  9076 ;;		 -> Sens1(6), 
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;  Sensor          1   10[BANK0 ] PTR struct .
  9079 ;;		 -> Sens1(6), 
  9080 ;; Return value:  Size  Location     Type
  9081 ;;                  1    wreg      void 
  9082 ;; Registers used:
  9083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9091 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9092 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9093 ;;Total ram usage:        5 bytes
  9094 ;; Hardware stack levels used: 1
  9095 ;; Hardware stack levels required when called: 6
  9096 ;; This function calls:
  9097 ;;		_FR_Timer_GetMicros
  9098 ;;		_WritePin
  9099 ;; This function is called by:
  9100 ;;		_main
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104  0679                     _JSN_Sensor_Trig:	
  9105                           ;psect for function _JSN_Sensor_Trig
  9106                           
  9107                           
  9108                           ;incstack = 0
  9109                           ; Regs used in _JSN_Sensor_Trig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9110                           ;JSN_Sensor_Trig@Sensor stored from wreg
  9111  0679  0020               	movlb	0	; select bank0
  9112  067A  00AA               	movwf	JSN_Sensor_Trig@Sensor
  9113  067B                     l3949:
  9114                           
  9115                           ;JSN_Sensor.c: 95:     micros = FR_Timer_GetMicros();
  9116  067B  318E  2675  3186   	fcall	_FR_Timer_GetMicros
  9117  067E  0020               	movlb	0	; select bank0
  9118  067F  0825               	movf	?_FR_Timer_GetMicros+3,w
  9119  0680  0021               	movlb	1	; select bank1
  9120  0681  00B3               	movwf	(_micros+3)^(0+128)
  9121  0682  0020               	movlb	0	; select bank0
  9122  0683  0824               	movf	?_FR_Timer_GetMicros+2,w
  9123  0684  0021               	movlb	1	; select bank1
  9124  0685  00B2               	movwf	(_micros+2)^(0+128)
  9125  0686  0020               	movlb	0	; select bank0
  9126  0687  0823               	movf	?_FR_Timer_GetMicros+1,w
  9127  0688  0021               	movlb	1	; select bank1
  9128  0689  00B1               	movwf	(_micros+1)^(0+128)
  9129  068A  0020               	movlb	0	; select bank0
  9130  068B  0822               	movf	?_FR_Timer_GetMicros,w
  9131  068C  0021               	movlb	1	; select bank1
  9132  068D  00B0               	movwf	_micros^(0+128)
  9133  068E                     l3951:
  9134                           
  9135                           ;JSN_Sensor.c: 98:     WritePin(Sensor->trigPin, 1);
  9136  068E  0020               	movlb	0	; select bank0
  9137  068F  01A0               	clrf	WritePin@val
  9138  0690  0AA0               	incf	WritePin@val,f
  9139  0691  082A               	movf	JSN_Sensor_Trig@Sensor,w
  9140  0692  3E04               	addlw	4
  9141  0693  0086               	movwf	6
  9142  0694  0187               	clrf	7
  9143  0695  0801               	movf	1,w
  9144  0696  3182  2243  3186   	fcall	_WritePin
  9145  0699                     l3953:	
  9146                           ;JSN_Sensor.c: 101:     while((FR_Timer_GetMicros() - micros) < 11);
  9147                           
  9148  0699  318E  2675  3186   	fcall	_FR_Timer_GetMicros
  9149  069C  0021               	movlb	1	; select bank1
  9150  069D  0830               	movf	_micros^(0+128),w
  9151  069E  0020               	movlb	0	; select bank0
  9152  069F  0222               	subwf	?_FR_Timer_GetMicros,w
  9153  06A0  00A6               	movwf	??_JSN_Sensor_Trig
  9154  06A1  0021               	movlb	1	; select bank1
  9155  06A2  0831               	movf	(_micros+1)^(0+128),w
  9156  06A3  0020               	movlb	0	; select bank0
  9157  06A4  3B23               	subwfb	?_FR_Timer_GetMicros+1,w
  9158  06A5  00A7               	movwf	??_JSN_Sensor_Trig+1
  9159  06A6  0021               	movlb	1	; select bank1
  9160  06A7  0832               	movf	(_micros+2)^(0+128),w
  9161  06A8  0020               	movlb	0	; select bank0
  9162  06A9  3B24               	subwfb	?_FR_Timer_GetMicros+2,w
  9163  06AA  00A8               	movwf	??_JSN_Sensor_Trig+2
  9164  06AB  0021               	movlb	1	; select bank1
  9165  06AC  0833               	movf	(_micros+3)^(0+128),w
  9166  06AD  0020               	movlb	0	; select bank0
  9167  06AE  3B25               	subwfb	?_FR_Timer_GetMicros+3,w
  9168  06AF  00A9               	movwf	??_JSN_Sensor_Trig+3
  9169  06B0  0829               	movf	??_JSN_Sensor_Trig+3,w
  9170  06B1  1D03               	btfss	3,2
  9171  06B2  2EBF               	goto	u1760
  9172  06B3  0828               	movf	??_JSN_Sensor_Trig+2,w
  9173  06B4  1D03               	btfss	3,2
  9174  06B5  2EBF               	goto	u1760
  9175  06B6  0827               	movf	??_JSN_Sensor_Trig+1,w
  9176  06B7  1D03               	btfss	3,2
  9177  06B8  2EBF               	goto	u1760
  9178  06B9  300B               	movlw	11
  9179  06BA  0226               	subwf	??_JSN_Sensor_Trig,w
  9180  06BB  1C03               	btfss	3,0
  9181  06BC  2EBE               	goto	u1761
  9182  06BD  2EBF               	goto	u1760
  9183  06BE                     u1761:
  9184  06BE  2E99               	goto	l3953
  9185  06BF                     u1760:
  9186  06BF                     l3955:
  9187                           
  9188                           ;JSN_Sensor.c: 104:     WritePin(Sensor->trigPin, 0);
  9189  06BF  0020               	movlb	0	; select bank0
  9190  06C0  01A0               	clrf	WritePin@val
  9191  06C1  082A               	movf	JSN_Sensor_Trig@Sensor,w
  9192  06C2  3E04               	addlw	4
  9193  06C3  0086               	movwf	6
  9194  06C4  0187               	clrf	7
  9195  06C5  0801               	movf	1,w
  9196  06C6  3182  2243  3186   	fcall	_WritePin
  9197  06C9                     l3957:
  9198                           
  9199                           ;JSN_Sensor.c: 107:     lastTrig = Sensor;
  9200  06C9  0020               	movlb	0	; select bank0
  9201  06CA  082A               	movf	JSN_Sensor_Trig@Sensor,w
  9202  06CB  00A6               	movwf	??_JSN_Sensor_Trig
  9203  06CC  0826               	movf	??_JSN_Sensor_Trig,w
  9204  06CD  00F6               	movwf	_lastTrig
  9205  06CE                     l65:
  9206  06CE  0008               	return
  9207  06CF                     __end_of_JSN_Sensor_Trig:
  9208                           
  9209                           	psect	text30
  9210  0E75                     __ptext30:	
  9211 ;; *************** function _FR_Timer_GetMicros *****************
  9212 ;; Defined at:
  9213 ;;		line 46 in file "FR_Timer.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;		None
  9216 ;; Auto vars:     Size  Location     Type
  9217 ;;		None
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  4    2[BANK0 ] unsigned long 
  9220 ;; Registers used:
  9221 ;;		wreg, pclath, cstack
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9227 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9230 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9231 ;;Total ram usage:        4 bytes
  9232 ;; Hardware stack levels used: 1
  9233 ;; Hardware stack levels required when called: 5
  9234 ;; This function calls:
  9235 ;;		_TMR0_ReadTimer
  9236 ;; This function is called by:
  9237 ;;		_JSN_Sensor_Trig
  9238 ;; This function uses a non-reentrant model
  9239 ;;
  9240                           
  9241  0E75                     _FR_Timer_GetMicros:	
  9242                           ;psect for function _FR_Timer_GetMicros
  9243                           
  9244  0E75                     l3911:	
  9245                           ;incstack = 0
  9246                           ; Regs used in _FR_Timer_GetMicros: [wreg+pclath+cstack]
  9247                           
  9248                           
  9249                           ;FR_Timer.c: 47:     return (micros + TMR0_ReadTimer());
  9250  0E75  318C  2487  318E   	fcall	_TMR0_ReadTimer
  9251  0E78  0021               	movlb	1	; select bank1
  9252  0E79  0728               	addwf	_micros@FR_Timer$F164^(0+128),w
  9253  0E7A  0020               	movlb	0	; select bank0
  9254  0E7B  00A2               	movwf	?_FR_Timer_GetMicros
  9255  0E7C  0021               	movlb	1	; select bank1
  9256  0E7D  0829               	movf	(_micros@FR_Timer$F164+1)^(0+128),w
  9257  0E7E  1803               	skipnc
  9258  0E7F  0F29               	incfsz	(_micros@FR_Timer$F164+1)^(0+128),w
  9259  0E80  1003               	clrc
  9260  0E81  0020               	movlb	0	; select bank0
  9261  0E82  00A3               	movwf	?_FR_Timer_GetMicros+1
  9262  0E83  0021               	movlb	1	; select bank1
  9263  0E84  082A               	movf	(_micros@FR_Timer$F164+2)^(0+128),w
  9264  0E85  1803               	skipnc
  9265  0E86  0F2A               	incfsz	(_micros@FR_Timer$F164+2)^(0+128),w
  9266  0E87  1003               	clrc
  9267  0E88  0020               	movlb	0	; select bank0
  9268  0E89  00A4               	movwf	?_FR_Timer_GetMicros+2
  9269  0E8A  0021               	movlb	1	; select bank1
  9270  0E8B  082B               	movf	(_micros@FR_Timer$F164+3)^(0+128),w
  9271  0E8C  1803               	skipnc
  9272  0E8D  0A2B               	incf	(_micros@FR_Timer$F164+3)^(0+128),w
  9273  0E8E  0020               	movlb	0	; select bank0
  9274  0E8F  00A5               	movwf	?_FR_Timer_GetMicros+3
  9275  0E90                     l100:
  9276  0E90  0008               	return
  9277  0E91                     __end_of_FR_Timer_GetMicros:
  9278                           
  9279                           	psect	text31
  9280  0C87                     __ptext31:	
  9281 ;; *************** function _TMR0_ReadTimer *****************
  9282 ;; Defined at:
  9283 ;;		line 62 in file "tmr0.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;		None
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;  readVal         1    1[BANK0 ] unsigned char 
  9288 ;; Return value:  Size  Location     Type
  9289 ;;                  1    wreg      unsigned char 
  9290 ;; Registers used:
  9291 ;;		wreg
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 0/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9298 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9299 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9300 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9301 ;;Total ram usage:        2 bytes
  9302 ;; Hardware stack levels used: 1
  9303 ;; Hardware stack levels required when called: 4
  9304 ;; This function calls:
  9305 ;;		Nothing
  9306 ;; This function is called by:
  9307 ;;		_FR_Timer_GetMicros
  9308 ;; This function uses a non-reentrant model
  9309 ;;
  9310                           
  9311  0C87                     _TMR0_ReadTimer:	
  9312                           ;psect for function _TMR0_ReadTimer
  9313                           
  9314  0C87                     l2931:	
  9315                           ;incstack = 0
  9316                           ; Regs used in _TMR0_ReadTimer: [wreg]
  9317                           
  9318                           
  9319                           ;tmr0.c: 64:     uint8_t readVal;;tmr0.c: 67:     readVal = TMR0L;
  9320  0C87  0020               	movlb	0	; select bank0
  9321  0C88  0815               	movf	21,w	;volatile
  9322  0C89  00A0               	movwf	??_TMR0_ReadTimer
  9323  0C8A  0820               	movf	??_TMR0_ReadTimer,w
  9324  0C8B  00A1               	movwf	TMR0_ReadTimer@readVal
  9325                           
  9326                           ;tmr0.c: 69:     return readVal;
  9327  0C8C  0821               	movf	TMR0_ReadTimer@readVal,w
  9328  0C8D                     l364:
  9329  0C8D  0008               	return
  9330  0C8E                     __end_of_TMR0_ReadTimer:
  9331                           
  9332                           	psect	text32
  9333  0758                     __ptext32:	
  9334 ;; *************** function _JSN_Sensor_GetDistance *****************
  9335 ;; Defined at:
  9336 ;;		line 113 in file "JSN_Sensor.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;  Sensor          1    wreg     PTR struct .
  9339 ;;		 -> Sens1(6), 
  9340 ;; Auto vars:     Size  Location     Type
  9341 ;;  Sensor          1   30[BANK0 ] PTR struct .
  9342 ;;		 -> Sens1(6), 
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  2   26[BANK0 ] unsigned int 
  9345 ;; Registers used:
  9346 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9347 ;; Tracked objects:
  9348 ;;		On entry : 0/0
  9349 ;;		On exit  : 0/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9352 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9353 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9354 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9355 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9356 ;;Total ram usage:        5 bytes
  9357 ;; Hardware stack levels used: 1
  9358 ;; Hardware stack levels required when called: 5
  9359 ;; This function calls:
  9360 ;;		___lldiv
  9361 ;;		___lmul
  9362 ;; This function is called by:
  9363 ;;		_main
  9364 ;; This function uses a non-reentrant model
  9365 ;;
  9366                           
  9367  0758                     _JSN_Sensor_GetDistance:	
  9368                           ;psect for function _JSN_Sensor_GetDistance
  9369                           
  9370                           
  9371                           ;incstack = 0
  9372                           ; Regs used in _JSN_Sensor_GetDistance: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  9373                           ;JSN_Sensor_GetDistance@Sensor stored from wreg
  9374  0758  0020               	movlb	0	; select bank0
  9375  0759  00BE               	movwf	JSN_Sensor_GetDistance@Sensor
  9376  075A                     l3961:
  9377                           
  9378                           ;JSN_Sensor.c: 118:     Sensor->distance = (unsigned int)(((uint32_t)Sensor->echoHighTim
      +                          e *
  9379  075A  3000               	movlw	0
  9380  075B  00AF               	movwf	___lldiv@divisor+3
  9381  075C  3000               	movlw	0
  9382  075D  00AE               	movwf	___lldiv@divisor+2
  9383  075E  3007               	movlw	7
  9384  075F  00AD               	movwf	___lldiv@divisor+1
  9385  0760  30D0               	movlw	208
  9386  0761  00AC               	movwf	___lldiv@divisor
  9387  0762  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
  9388  0763  0086               	movwf	6
  9389  0764  0187               	clrf	7
  9390  0765  3F40               	moviw [0]fsr1
  9391  0766  00BC               	movwf	??_JSN_Sensor_GetDistance
  9392  0767  3F41               	moviw [1]fsr1
  9393  0768  00BD               	movwf	??_JSN_Sensor_GetDistance+1
  9394  0769  083C               	movf	??_JSN_Sensor_GetDistance,w
  9395  076A  00A0               	movwf	___lmul@multiplier
  9396  076B  083D               	movf	??_JSN_Sensor_GetDistance+1,w
  9397  076C  00A1               	movwf	___lmul@multiplier+1
  9398  076D  01A2               	clrf	___lmul@multiplier+2
  9399  076E  01A3               	clrf	___lmul@multiplier+3
  9400  076F  3000               	movlw	0
  9401  0770  00A7               	movwf	___lmul@multiplicand+3
  9402  0771  3000               	movlw	0
  9403  0772  00A6               	movwf	___lmul@multiplicand+2
  9404  0773  3001               	movlw	1
  9405  0774  00A5               	movwf	___lmul@multiplicand+1
  9406  0775  3057               	movlw	87
  9407  0776  00A4               	movwf	___lmul@multiplicand
  9408  0777  318F  275D  3187   	fcall	___lmul
  9409  077A  0020               	movlb	0	; select bank0
  9410  077B  0823               	movf	?___lmul+3,w
  9411  077C  00B3               	movwf	___lldiv@dividend+3
  9412  077D  0822               	movf	?___lmul+2,w
  9413  077E  00B2               	movwf	___lldiv@dividend+2
  9414  077F  0821               	movf	?___lmul+1,w
  9415  0780  00B1               	movwf	___lldiv@dividend+1
  9416  0781  0820               	movf	?___lmul,w
  9417  0782  00B0               	movwf	___lldiv@dividend
  9418  0783  3185  25C5  3187   	fcall	___lldiv
  9419  0786  0020               	movlb	0	; select bank0
  9420  0787  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
  9421  0788  3E02               	addlw	2
  9422  0789  0086               	movwf	6
  9423  078A  0187               	clrf	7
  9424  078B  082C               	movf	?___lldiv,w
  9425  078C  3FC0               	movwi [0]fsr1
  9426  078D  082D               	movf	?___lldiv+1,w
  9427  078E  3FC1               	movwi [1]fsr1
  9428  078F                     l3963:
  9429                           
  9430                           ;JSN_Sensor.c: 120:     return Sensor->distance;
  9431  078F  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
  9432  0790  3E02               	addlw	2
  9433  0791  0086               	movwf	6
  9434  0792  0187               	clrf	7
  9435  0793  3F40               	moviw [0]fsr1
  9436  0794  00BA               	movwf	?_JSN_Sensor_GetDistance
  9437  0795  3F41               	moviw [1]fsr1
  9438  0796  00BB               	movwf	?_JSN_Sensor_GetDistance+1
  9439  0797                     l68:
  9440  0797  0008               	return
  9441  0798                     __end_of_JSN_Sensor_GetDistance:
  9442                           
  9443                           	psect	text33
  9444  0F5D                     __ptext33:	
  9445 ;; *************** function ___lmul *****************
  9446 ;; Defined at:
  9447 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul32.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;  multiplier      4    0[BANK0 ] unsigned long 
  9450 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;  product         4    8[BANK0 ] unsigned long 
  9453 ;; Return value:  Size  Location     Type
  9454 ;;                  4    0[BANK0 ] unsigned long 
  9455 ;; Registers used:
  9456 ;;		wreg, status,2, status,0
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9462 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9463 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9465 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9466 ;;Total ram usage:       12 bytes
  9467 ;; Hardware stack levels used: 1
  9468 ;; Hardware stack levels required when called: 4
  9469 ;; This function calls:
  9470 ;;		Nothing
  9471 ;; This function is called by:
  9472 ;;		_JSN_Sensor_GetDistance
  9473 ;; This function uses a non-reentrant model
  9474 ;;
  9475                           
  9476  0F5D                     ___lmul:	
  9477                           ;psect for function ___lmul
  9478                           
  9479  0F5D                     l3917:	
  9480                           ;incstack = 0
  9481                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  9482                           
  9483  0F5D  3000               	movlw	0
  9484  0F5E  0020               	movlb	0	; select bank0
  9485  0F5F  00AB               	movwf	___lmul@product+3
  9486  0F60  3000               	movlw	0
  9487  0F61  00AA               	movwf	___lmul@product+2
  9488  0F62  3000               	movlw	0
  9489  0F63  00A9               	movwf	___lmul@product+1
  9490  0F64  3000               	movlw	0
  9491  0F65  00A8               	movwf	___lmul@product
  9492  0F66                     l3919:
  9493  0F66  1C20               	btfss	___lmul@multiplier,0
  9494  0F67  2F69               	goto	u1711
  9495  0F68  2F6A               	goto	u1710
  9496  0F69                     u1711:
  9497  0F69  2F72               	goto	l3923
  9498  0F6A                     u1710:
  9499  0F6A                     l3921:
  9500  0F6A  0824               	movf	___lmul@multiplicand,w
  9501  0F6B  07A8               	addwf	___lmul@product,f
  9502  0F6C  0825               	movf	___lmul@multiplicand+1,w
  9503  0F6D  3DA9               	addwfc	___lmul@product+1,f
  9504  0F6E  0826               	movf	___lmul@multiplicand+2,w
  9505  0F6F  3DAA               	addwfc	___lmul@product+2,f
  9506  0F70  0827               	movf	___lmul@multiplicand+3,w
  9507  0F71  3DAB               	addwfc	___lmul@product+3,f
  9508  0F72                     l3923:
  9509  0F72  3001               	movlw	1
  9510  0F73                     u1725:
  9511  0F73  35A4               	lslf	___lmul@multiplicand,f
  9512  0F74  0DA5               	rlf	___lmul@multiplicand+1,f
  9513  0F75  0DA6               	rlf	___lmul@multiplicand+2,f
  9514  0F76  0DA7               	rlf	___lmul@multiplicand+3,f
  9515  0F77  0B89               	decfsz	9,f
  9516  0F78  2F73               	goto	u1725
  9517  0F79                     l3925:
  9518  0F79  3001               	movlw	1
  9519  0F7A                     u1735:
  9520  0F7A  36A3               	lsrf	___lmul@multiplier+3,f
  9521  0F7B  0CA2               	rrf	___lmul@multiplier+2,f
  9522  0F7C  0CA1               	rrf	___lmul@multiplier+1,f
  9523  0F7D  0CA0               	rrf	___lmul@multiplier,f
  9524  0F7E  0B89               	decfsz	9,f
  9525  0F7F  2F7A               	goto	u1735
  9526  0F80  0823               	movf	___lmul@multiplier+3,w
  9527  0F81  0422               	iorwf	___lmul@multiplier+2,w
  9528  0F82  0421               	iorwf	___lmul@multiplier+1,w
  9529  0F83  0420               	iorwf	___lmul@multiplier,w
  9530  0F84  1D03               	skipz
  9531  0F85  2F87               	goto	u1741
  9532  0F86  2F88               	goto	u1740
  9533  0F87                     u1741:
  9534  0F87  2F66               	goto	l3919
  9535  0F88                     u1740:
  9536  0F88                     l3927:
  9537  0F88  082B               	movf	___lmul@product+3,w
  9538  0F89  00A3               	movwf	?___lmul+3
  9539  0F8A  082A               	movf	___lmul@product+2,w
  9540  0F8B  00A2               	movwf	?___lmul+2
  9541  0F8C  0829               	movf	___lmul@product+1,w
  9542  0F8D  00A1               	movwf	?___lmul+1
  9543  0F8E  0828               	movf	___lmul@product,w
  9544  0F8F  00A0               	movwf	?___lmul
  9545  0F90                     l971:
  9546  0F90  0008               	return
  9547  0F91                     __end_of___lmul:
  9548                           
  9549                           	psect	text34
  9550  05C5                     __ptext34:	
  9551 ;; *************** function ___lldiv *****************
  9552 ;; Defined at:
  9553 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\__lldiv.c"
  9554 ;; Parameters:    Size  Location     Type
  9555 ;;  divisor         4   12[BANK0 ] unsigned long 
  9556 ;;  dividend        4   16[BANK0 ] unsigned long 
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;  quotient        4   21[BANK0 ] unsigned long 
  9559 ;;  counter         1   25[BANK0 ] unsigned char 
  9560 ;; Return value:  Size  Location     Type
  9561 ;;                  4   12[BANK0 ] unsigned long 
  9562 ;; Registers used:
  9563 ;;		wreg, status,2, status,0
  9564 ;; Tracked objects:
  9565 ;;		On entry : 0/0
  9566 ;;		On exit  : 0/0
  9567 ;;		Unchanged: 0/0
  9568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9569 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9570 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9571 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9572 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9573 ;;Total ram usage:       14 bytes
  9574 ;; Hardware stack levels used: 1
  9575 ;; Hardware stack levels required when called: 4
  9576 ;; This function calls:
  9577 ;;		Nothing
  9578 ;; This function is called by:
  9579 ;;		_JSN_Sensor_GetDistance
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583  05C5                     ___lldiv:	
  9584                           ;psect for function ___lldiv
  9585                           
  9586  05C5                     l3207:	
  9587                           ;incstack = 0
  9588                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9589                           
  9590  05C5  3000               	movlw	0
  9591  05C6  0020               	movlb	0	; select bank0
  9592  05C7  00B8               	movwf	___lldiv@quotient+3
  9593  05C8  3000               	movlw	0
  9594  05C9  00B7               	movwf	___lldiv@quotient+2
  9595  05CA  3000               	movlw	0
  9596  05CB  00B6               	movwf	___lldiv@quotient+1
  9597  05CC  3000               	movlw	0
  9598  05CD  00B5               	movwf	___lldiv@quotient
  9599  05CE  082F               	movf	___lldiv@divisor+3,w
  9600  05CF  042E               	iorwf	___lldiv@divisor+2,w
  9601  05D0  042D               	iorwf	___lldiv@divisor+1,w
  9602  05D1  042C               	iorwf	___lldiv@divisor,w
  9603  05D2  1903               	skipnz
  9604  05D3  2DD5               	goto	u1151
  9605  05D4  2DD6               	goto	u1150
  9606  05D5                     u1151:
  9607  05D5  2E17               	goto	l3227
  9608  05D6                     u1150:
  9609  05D6                     l3209:
  9610  05D6  01B9               	clrf	___lldiv@counter
  9611  05D7  0AB9               	incf	___lldiv@counter,f
  9612  05D8  2DE4               	goto	l3213
  9613  05D9                     l3211:
  9614  05D9  3001               	movlw	1
  9615  05DA                     u1165:
  9616  05DA  35AC               	lslf	___lldiv@divisor,f
  9617  05DB  0DAD               	rlf	___lldiv@divisor+1,f
  9618  05DC  0DAE               	rlf	___lldiv@divisor+2,f
  9619  05DD  0DAF               	rlf	___lldiv@divisor+3,f
  9620  05DE  0B89               	decfsz	9,f
  9621  05DF  2DDA               	goto	u1165
  9622  05E0  3001               	movlw	1
  9623  05E1  00B4               	movwf	??___lldiv
  9624  05E2  0834               	movf	??___lldiv,w
  9625  05E3  07B9               	addwf	___lldiv@counter,f
  9626  05E4                     l3213:
  9627  05E4  1FAF               	btfss	___lldiv@divisor+3,7
  9628  05E5  2DE7               	goto	u1171
  9629  05E6  2DE8               	goto	u1170
  9630  05E7                     u1171:
  9631  05E7  2DD9               	goto	l3211
  9632  05E8                     u1170:
  9633  05E8                     l3215:
  9634  05E8  3001               	movlw	1
  9635  05E9                     u1185:
  9636  05E9  35B5               	lslf	___lldiv@quotient,f
  9637  05EA  0DB6               	rlf	___lldiv@quotient+1,f
  9638  05EB  0DB7               	rlf	___lldiv@quotient+2,f
  9639  05EC  0DB8               	rlf	___lldiv@quotient+3,f
  9640  05ED  0B89               	decfsz	9,f
  9641  05EE  2DE9               	goto	u1185
  9642  05EF                     l3217:
  9643  05EF  082F               	movf	___lldiv@divisor+3,w
  9644  05F0  0233               	subwf	___lldiv@dividend+3,w
  9645  05F1  1D03               	skipz
  9646  05F2  2DFD               	goto	u1195
  9647  05F3  082E               	movf	___lldiv@divisor+2,w
  9648  05F4  0232               	subwf	___lldiv@dividend+2,w
  9649  05F5  1D03               	skipz
  9650  05F6  2DFD               	goto	u1195
  9651  05F7  082D               	movf	___lldiv@divisor+1,w
  9652  05F8  0231               	subwf	___lldiv@dividend+1,w
  9653  05F9  1D03               	skipz
  9654  05FA  2DFD               	goto	u1195
  9655  05FB  082C               	movf	___lldiv@divisor,w
  9656  05FC  0230               	subwf	___lldiv@dividend,w
  9657  05FD                     u1195:
  9658  05FD  1C03               	skipc
  9659  05FE  2E00               	goto	u1191
  9660  05FF  2E01               	goto	u1190
  9661  0600                     u1191:
  9662  0600  2E0A               	goto	l3223
  9663  0601                     u1190:
  9664  0601                     l3219:
  9665  0601  082C               	movf	___lldiv@divisor,w
  9666  0602  02B0               	subwf	___lldiv@dividend,f
  9667  0603  082D               	movf	___lldiv@divisor+1,w
  9668  0604  3BB1               	subwfb	___lldiv@dividend+1,f
  9669  0605  082E               	movf	___lldiv@divisor+2,w
  9670  0606  3BB2               	subwfb	___lldiv@dividend+2,f
  9671  0607  082F               	movf	___lldiv@divisor+3,w
  9672  0608  3BB3               	subwfb	___lldiv@dividend+3,f
  9673  0609                     l3221:
  9674  0609  1435               	bsf	___lldiv@quotient,0
  9675  060A                     l3223:
  9676  060A  3001               	movlw	1
  9677  060B                     u1205:
  9678  060B  36AF               	lsrf	___lldiv@divisor+3,f
  9679  060C  0CAE               	rrf	___lldiv@divisor+2,f
  9680  060D  0CAD               	rrf	___lldiv@divisor+1,f
  9681  060E  0CAC               	rrf	___lldiv@divisor,f
  9682  060F  0B89               	decfsz	9,f
  9683  0610  2E0B               	goto	u1205
  9684  0611                     l3225:
  9685  0611  3001               	movlw	1
  9686  0612  02B9               	subwf	___lldiv@counter,f
  9687  0613  1D03               	btfss	3,2
  9688  0614  2E16               	goto	u1211
  9689  0615  2E17               	goto	u1210
  9690  0616                     u1211:
  9691  0616  2DE8               	goto	l3215
  9692  0617                     u1210:
  9693  0617                     l3227:
  9694  0617  0838               	movf	___lldiv@quotient+3,w
  9695  0618  00AF               	movwf	?___lldiv+3
  9696  0619  0837               	movf	___lldiv@quotient+2,w
  9697  061A  00AE               	movwf	?___lldiv+2
  9698  061B  0836               	movf	___lldiv@quotient+1,w
  9699  061C  00AD               	movwf	?___lldiv+1
  9700  061D  0835               	movf	___lldiv@quotient,w
  9701  061E  00AC               	movwf	?___lldiv
  9702  061F                     l993:
  9703  061F  0008               	return
  9704  0620                     __end_of___lldiv:
  9705                           
  9706                           	psect	text35
  9707  0D48                     __ptext35:	
  9708 ;; *************** function _JSN_Library_Init *****************
  9709 ;; Defined at:
  9710 ;;		line 33 in file "JSN_Sensor.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;		None
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;		None
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  1    wreg      void 
  9717 ;; Registers used:
  9718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9719 ;; Tracked objects:
  9720 ;;		On entry : 0/0
  9721 ;;		On exit  : 0/0
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9726 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9727 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9728 ;;Total ram usage:        2 bytes
  9729 ;; Hardware stack levels used: 1
  9730 ;; Hardware stack levels required when called: 6
  9731 ;; This function calls:
  9732 ;;		_CCP1_Initialize
  9733 ;;		_JSN_Sensor_Init
  9734 ;;		_TMR1_Initialize
  9735 ;; This function is called by:
  9736 ;;		_main
  9737 ;; This function uses a non-reentrant model
  9738 ;;
  9739                           
  9740  0D48                     _JSN_Library_Init:	
  9741                           ;psect for function _JSN_Library_Init
  9742                           
  9743  0D48                     l3943:	
  9744                           ;incstack = 0
  9745                           ; Regs used in _JSN_Library_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9746                           
  9747                           
  9748                           ;JSN_Sensor.c: 35:     TMR1_Initialize();
  9749  0D48  318E  2627  318D   	fcall	_TMR1_Initialize
  9750                           
  9751                           ;JSN_Sensor.c: 36:     CCP1_Initialize();
  9752  0D4B  318D  25DF  318D   	fcall	_CCP1_Initialize
  9753  0D4E                     l3945:
  9754                           
  9755                           ;JSN_Sensor.c: 37:     JSN_Sensor_Init(&Sens1, C6, C5);
  9756  0D4E  3006               	movlw	6
  9757  0D4F  0020               	movlb	0	; select bank0
  9758  0D50  00A9               	movwf	??_JSN_Library_Init
  9759  0D51  0829               	movf	??_JSN_Library_Init,w
  9760  0D52  00A4               	movwf	JSN_Sensor_Init@trigPin
  9761  0D53  3003               	movlw	3
  9762  0D54  00AA               	movwf	??_JSN_Library_Init+1
  9763  0D55  082A               	movf	??_JSN_Library_Init+1,w
  9764  0D56  00A5               	movwf	JSN_Sensor_Init@echoPin
  9765  0D57  30D9               	movlw	(low (_Sens1| 0))& (0+255)
  9766  0D58  3184  24D3  318D   	fcall	_JSN_Sensor_Init
  9767  0D5B                     l33:
  9768  0D5B  0008               	return
  9769  0D5C                     __end_of_JSN_Library_Init:
  9770                           
  9771                           	psect	text36
  9772  0E27                     __ptext36:	
  9773 ;; *************** function _TMR1_Initialize *****************
  9774 ;; Defined at:
  9775 ;;		line 11 in file "tmr1.c"
  9776 ;; Parameters:    Size  Location     Type
  9777 ;;		None
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;		None
  9780 ;; Return value:  Size  Location     Type
  9781 ;;                  1    wreg      void 
  9782 ;; Registers used:
  9783 ;;		wreg, status,2, status,0, pclath, cstack
  9784 ;; Tracked objects:
  9785 ;;		On entry : 0/0
  9786 ;;		On exit  : 0/0
  9787 ;;		Unchanged: 0/0
  9788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9793 ;;Total ram usage:        0 bytes
  9794 ;; Hardware stack levels used: 1
  9795 ;; Hardware stack levels required when called: 5
  9796 ;; This function calls:
  9797 ;;		_TMR1_SetInterruptHandler
  9798 ;; This function is called by:
  9799 ;;		_JSN_Library_Init
  9800 ;;		_SYSTEM_Initialize
  9801 ;; This function uses a non-reentrant model
  9802 ;;
  9803                           
  9804  0E27                     _TMR1_Initialize:	
  9805                           ;psect for function _TMR1_Initialize
  9806                           
  9807  0E27                     l3711:	
  9808                           ;incstack = 0
  9809                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9810                           
  9811                           
  9812                           ;tmr1.c: 16:     T1GCON = 0x00;
  9813  0E27  0020               	movlb	0	; select bank0
  9814  0E28  019C               	clrf	28	;volatile
  9815                           
  9816                           ;tmr1.c: 19:     TMR1H = 0x00;
  9817  0E29  019A               	clrf	26	;volatile
  9818                           
  9819                           ;tmr1.c: 22:     TMR1L = 0x00;
  9820  0E2A  0199               	clrf	25	;volatile
  9821  0E2B                     l3713:
  9822                           
  9823                           ;tmr1.c: 25:     PIR1bits.TMR1IF = 0;
  9824  0E2B  1011               	bcf	17,0	;volatile
  9825  0E2C                     l3715:
  9826                           
  9827                           ;tmr1.c: 28:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  9828  0E2C  081A               	movf	26,w	;volatile
  9829  0E2D  0021               	movlb	1	; select bank1
  9830  0E2E  00C9               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  9831  0E2F  0020               	movlb	0	; select bank0
  9832  0E30  0819               	movf	25,w	;volatile
  9833  0E31  0021               	movlb	1	; select bank1
  9834  0E32  00C8               	movwf	_timer1ReloadVal^(0+128)	;volatile
  9835  0E33                     l3717:
  9836                           
  9837                           ;tmr1.c: 31:     PIE1bits.TMR1IE = 1;
  9838  0E33  1411               	bsf	17,0	;volatile
  9839  0E34                     l3719:
  9840                           
  9841                           ;tmr1.c: 34:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  9842  0E34  3000               	movlw	0
  9843  0E35  0020               	movlb	0	; select bank0
  9844  0E36  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  9845  0E37  3000               	movlw	0
  9846  0E38  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  9847  0E39  318C  24A7  318E   	fcall	_TMR1_SetInterruptHandler
  9848  0E3C                     l3721:
  9849                           
  9850                           ;tmr1.c: 37:     T1CON = 0x11;
  9851  0E3C  3011               	movlw	17
  9852  0E3D  0020               	movlb	0	; select bank0
  9853  0E3E  009B               	movwf	27	;volatile
  9854  0E3F                     l514:
  9855  0E3F  0008               	return
  9856  0E40                     __end_of_TMR1_Initialize:
  9857                           
  9858                           	psect	text37
  9859  0CA7                     __ptext37:	
  9860 ;; *************** function _TMR1_SetInterruptHandler *****************
  9861 ;; Defined at:
  9862 ;;		line 145 in file "tmr1.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9865 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;		None
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  1    wreg      void 
  9870 ;; Registers used:
  9871 ;;		wreg
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9877 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9880 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9881 ;;Total ram usage:        2 bytes
  9882 ;; Hardware stack levels used: 1
  9883 ;; Hardware stack levels required when called: 4
  9884 ;; This function calls:
  9885 ;;		Nothing
  9886 ;; This function is called by:
  9887 ;;		_TMR1_Initialize
  9888 ;; This function uses a non-reentrant model
  9889 ;;
  9890                           
  9891  0CA7                     _TMR1_SetInterruptHandler:	
  9892                           ;psect for function _TMR1_SetInterruptHandler
  9893                           
  9894  0CA7                     l3663:	
  9895                           ;incstack = 0
  9896                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  9897                           
  9898                           
  9899                           ;tmr1.c: 146:     TMR1_InterruptHandler = InterruptHandler;
  9900  0CA7  0020               	movlb	0	; select bank0
  9901  0CA8  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  9902  0CA9  0021               	movlb	1	; select bank1
  9903  0CAA  00C7               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  9904  0CAB  0020               	movlb	0	; select bank0
  9905  0CAC  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  9906  0CAD  0021               	movlb	1	; select bank1
  9907  0CAE  00C6               	movwf	_TMR1_InterruptHandler^(0+128)
  9908  0CAF                     l547:
  9909  0CAF  0008               	return
  9910  0CB0                     __end_of_TMR1_SetInterruptHandler:
  9911                           
  9912                           	psect	text38
  9913  04D3                     __ptext38:	
  9914 ;; *************** function _JSN_Sensor_Init *****************
  9915 ;; Defined at:
  9916 ;;		line 43 in file "JSN_Sensor.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;  Sensor          1    wreg     PTR struct .
  9919 ;;		 -> Sens1(6), 
  9920 ;;  trigPin         1    4[BANK0 ] enum E7110
  9921 ;;  echoPin         1    5[BANK0 ] enum E7110
  9922 ;; Auto vars:     Size  Location     Type
  9923 ;;  Sensor          1    8[BANK0 ] PTR struct .
  9924 ;;		 -> Sens1(6), 
  9925 ;; Return value:  Size  Location     Type
  9926 ;;                  1    wreg      unsigned char 
  9927 ;; Registers used:
  9928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9929 ;; Tracked objects:
  9930 ;;		On entry : 0/0
  9931 ;;		On exit  : 0/0
  9932 ;;		Unchanged: 0/0
  9933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9934 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9936 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9937 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9938 ;;Total ram usage:        5 bytes
  9939 ;; Hardware stack levels used: 1
  9940 ;; Hardware stack levels required when called: 5
  9941 ;; This function calls:
  9942 ;;		_SetPin
  9943 ;;		_WritePin
  9944 ;; This function is called by:
  9945 ;;		_JSN_Library_Init
  9946 ;; This function uses a non-reentrant model
  9947 ;;
  9948                           
  9949  04D3                     _JSN_Sensor_Init:	
  9950                           ;psect for function _JSN_Sensor_Init
  9951                           
  9952                           
  9953                           ;incstack = 0
  9954                           ; Regs used in _JSN_Sensor_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9955                           ;JSN_Sensor_Init@Sensor stored from wreg
  9956  04D3  0020               	movlb	0	; select bank0
  9957  04D4  00A8               	movwf	JSN_Sensor_Init@Sensor
  9958  04D5                     l3113:
  9959                           
  9960                           ;JSN_Sensor.c: 46:     switch(echoPin) {
  9961  04D5  2CDD               	goto	l3119
  9962  04D6                     l39:	
  9963                           ;JSN_Sensor.c: 49:         case C3:
  9964                           
  9965  04D6                     l3115:
  9966                           
  9967                           ;JSN_Sensor.c: 51:             SetPin(echoPin, 1);
  9968  04D6  01A0               	clrf	SetPin@io
  9969  04D7  0AA0               	incf	SetPin@io,f
  9970  04D8  0825               	movf	JSN_Sensor_Init@echoPin,w
  9971  04D9  3182  22FE  3184   	fcall	_SetPin
  9972                           
  9973                           ;JSN_Sensor.c: 52:             break;
  9974  04DC  2CFF               	goto	l3125
  9975  04DD                     l3119:
  9976  04DD  0825               	movf	JSN_Sensor_Init@echoPin,w
  9977  04DE  00A6               	movwf	??_JSN_Sensor_Init
  9978  04DF  01A7               	clrf	??_JSN_Sensor_Init+1
  9979                           
  9980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9981                           ; Switch size 1, requested type "simple"
  9982                           ; Number of cases is 1, Range of values is 0 to 0
  9983                           ; switch strategies available:
  9984                           ; Name         Instructions Cycles
  9985                           ; simple_byte            4     3 (average)
  9986                           ; direct_byte            8     6 (fixed)
  9987                           ; jumptable            260     6 (fixed)
  9988                           ;	Chosen strategy is simple_byte
  9989  04E0  0827               	movf	??_JSN_Sensor_Init+1,w
  9990  04E1  3A00               	xorlw	0	; case 0
  9991  04E2  1903               	skipnz
  9992  04E3  2CE5               	goto	l4185
  9993  04E4  2D53               	goto	l43
  9994  04E5                     l4185:
  9995                           
  9996                           ; Switch size 1, requested type "simple"
  9997                           ; Number of cases is 4, Range of values is 1 to 11
  9998                           ; switch strategies available:
  9999                           ; Name         Instructions Cycles
 10000                           ; simple_byte           13     7 (average)
 10001                           ; direct_byte           31     9 (fixed)
 10002                           ; jumptable            263     9 (fixed)
 10003                           ;	Chosen strategy is simple_byte
 10004  04E5  0826               	movf	??_JSN_Sensor_Init,w
 10005  04E6  3A01               	xorlw	1	; case 1
 10006  04E7  1903               	skipnz
 10007  04E8  2CD6               	goto	l3115
 10008  04E9  3A02               	xorlw	2	; case 3
 10009  04EA  1903               	skipnz
 10010  04EB  2CD6               	goto	l3115
 10011  04EC  3A06               	xorlw	6	; case 5
 10012  04ED  1903               	skipnz
 10013  04EE  2CD6               	goto	l3115
 10014  04EF  3A0E               	xorlw	14	; case 11
 10015  04F0  1903               	skipnz
 10016  04F1  2CD6               	goto	l39
 10017  04F2  2D53               	goto	l43
 10018  04F3                     l48:	
 10019                           ;JSN_Sensor.c: 62:         case C7:
 10020                           
 10021  04F3                     l3121:
 10022                           
 10023                           ;JSN_Sensor.c: 72:             SetPin(trigPin, 0);
 10024  04F3  01A0               	clrf	SetPin@io
 10025  04F4  0824               	movf	JSN_Sensor_Init@trigPin,w
 10026  04F5  3182  22FE  3184   	fcall	_SetPin
 10027                           
 10028                           ;JSN_Sensor.c: 73:             WritePin(trigPin, 0);
 10029  04F8  0020               	movlb	0	; select bank0
 10030  04F9  01A0               	clrf	WritePin@val
 10031  04FA  0824               	movf	JSN_Sensor_Init@trigPin,w
 10032  04FB  3182  2243  3184   	fcall	_WritePin
 10033                           
 10034                           ;JSN_Sensor.c: 74:             break;
 10035  04FE  2D31               	goto	l3127
 10036  04FF                     l3125:
 10037  04FF  0020               	movlb	0	; select bank0
 10038  0500  0824               	movf	JSN_Sensor_Init@trigPin,w
 10039  0501  00A6               	movwf	??_JSN_Sensor_Init
 10040  0502  01A7               	clrf	??_JSN_Sensor_Init+1
 10041                           
 10042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10043                           ; Switch size 1, requested type "simple"
 10044                           ; Number of cases is 1, Range of values is 0 to 0
 10045                           ; switch strategies available:
 10046                           ; Name         Instructions Cycles
 10047                           ; simple_byte            4     3 (average)
 10048                           ; direct_byte            8     6 (fixed)
 10049                           ; jumptable            260     6 (fixed)
 10050                           ;	Chosen strategy is simple_byte
 10051  0503  0827               	movf	??_JSN_Sensor_Init+1,w
 10052  0504  3A00               	xorlw	0	; case 0
 10053  0505  1903               	skipnz
 10054  0506  2D08               	goto	l4187
 10055  0507  2D53               	goto	l43
 10056  0508                     l4187:
 10057                           
 10058                           ; Switch size 1, requested type "simple"
 10059                           ; Number of cases is 13, Range of values is 0 to 17
 10060                           ; switch strategies available:
 10061                           ; Name         Instructions Cycles
 10062                           ; simple_byte           40    21 (average)
 10063                           ; direct_byte           42     6 (fixed)
 10064                           ; jumptable            260     6 (fixed)
 10065                           ;	Chosen strategy is simple_byte
 10066  0508  0826               	movf	??_JSN_Sensor_Init,w
 10067  0509  3A00               	xorlw	0	; case 0
 10068  050A  1903               	skipnz
 10069  050B  2CF3               	goto	l48
 10070  050C  3A04               	xorlw	4	; case 4
 10071  050D  1903               	skipnz
 10072  050E  2CF3               	goto	l48
 10073  050F  3A02               	xorlw	2	; case 6
 10074  0510  1903               	skipnz
 10075  0511  2CF3               	goto	l48
 10076  0512  3A01               	xorlw	1	; case 7
 10077  0513  1903               	skipnz
 10078  0514  2CF3               	goto	l3121
 10079  0515  3A0F               	xorlw	15	; case 8
 10080  0516  1903               	skipnz
 10081  0517  2CF3               	goto	l3121
 10082  0518  3A01               	xorlw	1	; case 9
 10083  0519  1903               	skipnz
 10084  051A  2CF3               	goto	l3121
 10085  051B  3A03               	xorlw	3	; case 10
 10086  051C  1903               	skipnz
 10087  051D  2CF3               	goto	l3121
 10088  051E  3A06               	xorlw	6	; case 12
 10089  051F  1903               	skipnz
 10090  0520  2CF3               	goto	l3121
 10091  0521  3A01               	xorlw	1	; case 13
 10092  0522  1903               	skipnz
 10093  0523  2CF3               	goto	l3121
 10094  0524  3A03               	xorlw	3	; case 14
 10095  0525  1903               	skipnz
 10096  0526  2CF3               	goto	l3121
 10097  0527  3A01               	xorlw	1	; case 15
 10098  0528  1903               	skipnz
 10099  0529  2CF3               	goto	l3121
 10100  052A  3A1F               	xorlw	31	; case 16
 10101  052B  1903               	skipnz
 10102  052C  2CF3               	goto	l3121
 10103  052D  3A01               	xorlw	1	; case 17
 10104  052E  1903               	skipnz
 10105  052F  2CF3               	goto	l3121
 10106  0530  2D53               	goto	l43
 10107  0531                     l3127:
 10108                           
 10109                           ;JSN_Sensor.c: 80:     Sensor->distance = 0;
 10110  0531  0020               	movlb	0	; select bank0
 10111  0532  0828               	movf	JSN_Sensor_Init@Sensor,w
 10112  0533  3E02               	addlw	2
 10113  0534  0086               	movwf	6
 10114  0535  0187               	clrf	7
 10115  0536  3000               	movlw	0
 10116  0537  3FC0               	movwi [0]fsr1
 10117  0538  3FC1               	movwi [1]fsr1
 10118  0539                     l3129:
 10119                           
 10120                           ;JSN_Sensor.c: 81:     Sensor->echoHighTime = 0;
 10121  0539  0828               	movf	JSN_Sensor_Init@Sensor,w
 10122  053A  0086               	movwf	6
 10123  053B  0187               	clrf	7
 10124  053C  3000               	movlw	0
 10125  053D  3FC0               	movwi [0]fsr1
 10126  053E  3FC1               	movwi [1]fsr1
 10127  053F                     l3131:
 10128                           
 10129                           ;JSN_Sensor.c: 82:     Sensor->echoPin = echoPin;
 10130  053F  0825               	movf	JSN_Sensor_Init@echoPin,w
 10131  0540  00A6               	movwf	??_JSN_Sensor_Init
 10132  0541  0828               	movf	JSN_Sensor_Init@Sensor,w
 10133  0542  3E05               	addlw	5
 10134  0543  0086               	movwf	6
 10135  0544  0187               	clrf	7
 10136  0545  0826               	movf	??_JSN_Sensor_Init,w
 10137  0546  0081               	movwf	1
 10138  0547                     l3133:
 10139                           
 10140                           ;JSN_Sensor.c: 83:     Sensor->trigPin = trigPin;
 10141  0547  0824               	movf	JSN_Sensor_Init@trigPin,w
 10142  0548  00A6               	movwf	??_JSN_Sensor_Init
 10143  0549  0828               	movf	JSN_Sensor_Init@Sensor,w
 10144  054A  3E04               	addlw	4
 10145  054B  0086               	movwf	6
 10146  054C  0187               	clrf	7
 10147  054D  0826               	movf	??_JSN_Sensor_Init,w
 10148  054E  0081               	movwf	1
 10149  054F                     l3135:
 10150                           
 10151                           ;JSN_Sensor.c: 85:     lastTrig = Sensor;
 10152  054F  0828               	movf	JSN_Sensor_Init@Sensor,w
 10153  0550  00A6               	movwf	??_JSN_Sensor_Init
 10154  0551  0826               	movf	??_JSN_Sensor_Init,w
 10155  0552  00F6               	movwf	_lastTrig
 10156  0553                     l43:
 10157  0553  0008               	return
 10158  0554                     __end_of_JSN_Sensor_Init:
 10159                           
 10160                           	psect	text39
 10161  0243                     __ptext39:	
 10162 ;; *************** function _WritePin *****************
 10163 ;; Defined at:
 10164 ;;		line 174 in file "PIC16Xpress_DevBoard.c"
 10165 ;; Parameters:    Size  Location     Type
 10166 ;;  pin             1    wreg     enum E7110
 10167 ;;  val             1    0[BANK0 ] unsigned char 
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;  pin             1    3[BANK0 ] enum E7110
 10170 ;; Return value:  Size  Location     Type
 10171 ;;                  1    wreg      unsigned char 
 10172 ;; Registers used:
 10173 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10174 ;; Tracked objects:
 10175 ;;		On entry : 0/0
 10176 ;;		On exit  : 0/0
 10177 ;;		Unchanged: 0/0
 10178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10179 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10180 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10181 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10182 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10183 ;;Total ram usage:        4 bytes
 10184 ;; Hardware stack levels used: 1
 10185 ;; Hardware stack levels required when called: 4
 10186 ;; This function calls:
 10187 ;;		Nothing
 10188 ;; This function is called by:
 10189 ;;		_JSN_Sensor_Init
 10190 ;;		_JSN_Sensor_Trig
 10191 ;;		_main
 10192 ;; This function uses a non-reentrant model
 10193 ;;
 10194                           
 10195  0243                     _WritePin:	
 10196                           ;psect for function _WritePin
 10197                           
 10198                           
 10199                           ;incstack = 0
 10200                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
 10201                           ;WritePin@pin stored from wreg
 10202  0243  0020               	movlb	0	; select bank0
 10203  0244  00A3               	movwf	WritePin@pin
 10204  0245                     l2835:
 10205                           
 10206                           ;PIC16Xpress_DevBoard.c: 175:     switch(pin) {
 10207  0245  2ABD               	goto	l2907
 10208  0246                     l2837:
 10209                           
 10210                           ;PIC16Xpress_DevBoard.c: 177:             LATAbits.LATA5 = val;
 10211  0246  0C20               	rrf	WritePin@val,w
 10212  0247  0022               	movlb	2	; select bank2
 10213  0248  1C03               	skipc
 10214  0249  128C               	bcf	12,5	;volatile
 10215  024A  1803               	skipnc
 10216  024B  168C               	bsf	12,5	;volatile
 10217  024C  2AFD               	goto	l246
 10218  024D                     l2841:
 10219                           
 10220                           ;PIC16Xpress_DevBoard.c: 180:             LATAbits.LATA4 = val;
 10221  024D  0C20               	rrf	WritePin@val,w
 10222  024E  0022               	movlb	2	; select bank2
 10223  024F  1C03               	skipc
 10224  0250  120C               	bcf	12,4	;volatile
 10225  0251  1803               	skipnc
 10226  0252  160C               	bsf	12,4	;volatile
 10227  0253  2AFD               	goto	l246
 10228  0254                     l2845:
 10229                           
 10230                           ;PIC16Xpress_DevBoard.c: 185:             LATCbits.LATC5 = val;
 10231  0254  0C20               	rrf	WritePin@val,w
 10232  0255  0022               	movlb	2	; select bank2
 10233  0256  1C03               	skipc
 10234  0257  128E               	bcf	14,5	;volatile
 10235  0258  1803               	skipnc
 10236  0259  168E               	bsf	14,5	;volatile
 10237  025A  2AFD               	goto	l246
 10238  025B                     l2849:
 10239                           
 10240                           ;PIC16Xpress_DevBoard.c: 188:             LATCbits.LATC4 = val;
 10241  025B  0C20               	rrf	WritePin@val,w
 10242  025C  0022               	movlb	2	; select bank2
 10243  025D  1C03               	skipc
 10244  025E  120E               	bcf	14,4	;volatile
 10245  025F  1803               	skipnc
 10246  0260  160E               	bsf	14,4	;volatile
 10247  0261  2AFD               	goto	l246
 10248  0262                     l2853:
 10249                           
 10250                           ;PIC16Xpress_DevBoard.c: 191:             LATCbits.LATC3 = val;
 10251  0262  0C20               	rrf	WritePin@val,w
 10252  0263  0022               	movlb	2	; select bank2
 10253  0264  1C03               	skipc
 10254  0265  118E               	bcf	14,3	;volatile
 10255  0266  1803               	skipnc
 10256  0267  158E               	bsf	14,3	;volatile
 10257  0268  2AFD               	goto	l246
 10258  0269                     l2857:
 10259                           
 10260                           ;PIC16Xpress_DevBoard.c: 194:             LATCbits.LATC6 = val;
 10261  0269  0C20               	rrf	WritePin@val,w
 10262  026A  0022               	movlb	2	; select bank2
 10263  026B  1C03               	skipc
 10264  026C  130E               	bcf	14,6	;volatile
 10265  026D  1803               	skipnc
 10266  026E  170E               	bsf	14,6	;volatile
 10267  026F  2AFD               	goto	l246
 10268  0270                     l2861:
 10269                           
 10270                           ;PIC16Xpress_DevBoard.c: 197:             LATCbits.LATC7 = val;
 10271  0270  0C20               	rrf	WritePin@val,w
 10272  0271  0022               	movlb	2	; select bank2
 10273  0272  1C03               	skipc
 10274  0273  138E               	bcf	14,7	;volatile
 10275  0274  1803               	skipnc
 10276  0275  178E               	bsf	14,7	;volatile
 10277  0276  2AFD               	goto	l246
 10278  0277                     l2865:
 10279                           
 10280                           ;PIC16Xpress_DevBoard.c: 200:             LATBbits.LATB7 = val;
 10281  0277  0C20               	rrf	WritePin@val,w
 10282  0278  0022               	movlb	2	; select bank2
 10283  0279  1C03               	skipc
 10284  027A  138D               	bcf	13,7	;volatile
 10285  027B  1803               	skipnc
 10286  027C  178D               	bsf	13,7	;volatile
 10287  027D  2AFD               	goto	l246
 10288  027E                     l2869:
 10289                           
 10290                           ;PIC16Xpress_DevBoard.c: 203:             LATAbits.LATA0 = val;
 10291  027E  0C20               	rrf	WritePin@val,w
 10292  027F  0022               	movlb	2	; select bank2
 10293  0280  1C03               	skipc
 10294  0281  100C               	bcf	12,0	;volatile
 10295  0282  1803               	skipnc
 10296  0283  140C               	bsf	12,0	;volatile
 10297  0284  2AFD               	goto	l246
 10298  0285                     l2873:
 10299                           
 10300                           ;PIC16Xpress_DevBoard.c: 206:             LATAbits.LATA1 = val;
 10301  0285  0C20               	rrf	WritePin@val,w
 10302  0286  0022               	movlb	2	; select bank2
 10303  0287  1C03               	skipc
 10304  0288  108C               	bcf	12,1	;volatile
 10305  0289  1803               	skipnc
 10306  028A  148C               	bsf	12,1	;volatile
 10307  028B  2AFD               	goto	l246
 10308  028C                     l2877:
 10309                           
 10310                           ;PIC16Xpress_DevBoard.c: 209:             LATAbits.LATA2 = val;
 10311  028C  0C20               	rrf	WritePin@val,w
 10312  028D  0022               	movlb	2	; select bank2
 10313  028E  1C03               	skipc
 10314  028F  110C               	bcf	12,2	;volatile
 10315  0290  1803               	skipnc
 10316  0291  150C               	bsf	12,2	;volatile
 10317  0292  2AFD               	goto	l246
 10318  0293                     l2881:
 10319                           
 10320                           ;PIC16Xpress_DevBoard.c: 212:             LATCbits.LATC0 = val;
 10321  0293  0C20               	rrf	WritePin@val,w
 10322  0294  0022               	movlb	2	; select bank2
 10323  0295  1C03               	skipc
 10324  0296  100E               	bcf	14,0	;volatile
 10325  0297  1803               	skipnc
 10326  0298  140E               	bsf	14,0	;volatile
 10327  0299  2AFD               	goto	l246
 10328  029A                     l2885:
 10329                           
 10330                           ;PIC16Xpress_DevBoard.c: 215:             LATCbits.LATC1 = val;
 10331  029A  0C20               	rrf	WritePin@val,w
 10332  029B  0022               	movlb	2	; select bank2
 10333  029C  1C03               	skipc
 10334  029D  108E               	bcf	14,1	;volatile
 10335  029E  1803               	skipnc
 10336  029F  148E               	bsf	14,1	;volatile
 10337  02A0  2AFD               	goto	l246
 10338  02A1                     l2889:
 10339                           
 10340                           ;PIC16Xpress_DevBoard.c: 218:             LATCbits.LATC2 = val;
 10341  02A1  0C20               	rrf	WritePin@val,w
 10342  02A2  0022               	movlb	2	; select bank2
 10343  02A3  1C03               	skipc
 10344  02A4  110E               	bcf	14,2	;volatile
 10345  02A5  1803               	skipnc
 10346  02A6  150E               	bsf	14,2	;volatile
 10347  02A7  2AFD               	goto	l246
 10348  02A8                     l2893:
 10349                           
 10350                           ;PIC16Xpress_DevBoard.c: 221:             LATBbits.LATB4 = val;
 10351  02A8  0C20               	rrf	WritePin@val,w
 10352  02A9  0022               	movlb	2	; select bank2
 10353  02AA  1C03               	skipc
 10354  02AB  120D               	bcf	13,4	;volatile
 10355  02AC  1803               	skipnc
 10356  02AD  160D               	bsf	13,4	;volatile
 10357  02AE  2AFD               	goto	l246
 10358  02AF                     l2897:
 10359                           
 10360                           ;PIC16Xpress_DevBoard.c: 224:             LATBbits.LATB5 = val;
 10361  02AF  0C20               	rrf	WritePin@val,w
 10362  02B0  0022               	movlb	2	; select bank2
 10363  02B1  1C03               	skipc
 10364  02B2  128D               	bcf	13,5	;volatile
 10365  02B3  1803               	skipnc
 10366  02B4  168D               	bsf	13,5	;volatile
 10367  02B5  2AFD               	goto	l246
 10368  02B6                     l2901:
 10369                           
 10370                           ;PIC16Xpress_DevBoard.c: 227:             LATBbits.LATB6 = val;
 10371  02B6  0C20               	rrf	WritePin@val,w
 10372  02B7  0022               	movlb	2	; select bank2
 10373  02B8  1C03               	skipc
 10374  02B9  130D               	bcf	13,6	;volatile
 10375  02BA  1803               	skipnc
 10376  02BB  170D               	bsf	13,6	;volatile
 10377  02BC  2AFD               	goto	l246
 10378  02BD                     l2907:
 10379  02BD  0823               	movf	WritePin@pin,w
 10380  02BE  00A1               	movwf	??_WritePin
 10381  02BF  01A2               	clrf	??_WritePin+1
 10382                           
 10383                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10384                           ; Switch size 1, requested type "simple"
 10385                           ; Number of cases is 1, Range of values is 0 to 0
 10386                           ; switch strategies available:
 10387                           ; Name         Instructions Cycles
 10388                           ; simple_byte            4     3 (average)
 10389                           ; direct_byte            8     6 (fixed)
 10390                           ; jumptable            260     6 (fixed)
 10391                           ;	Chosen strategy is simple_byte
 10392  02C0  0822               	movf	??_WritePin+1,w
 10393  02C1  3A00               	xorlw	0	; case 0
 10394  02C2  1903               	skipnz
 10395  02C3  2AC5               	goto	l4189
 10396  02C4  2AFD               	goto	l246
 10397  02C5                     l4189:
 10398                           
 10399                           ; Switch size 1, requested type "simple"
 10400                           ; Number of cases is 18, Range of values is 0 to 17
 10401                           ; switch strategies available:
 10402                           ; Name         Instructions Cycles
 10403                           ; direct_byte           42     6 (fixed)
 10404                           ; simple_byte           55    28 (average)
 10405                           ; jumptable            260     6 (fixed)
 10406                           ;	Chosen strategy is simple_byte
 10407  02C5  0821               	movf	??_WritePin,w
 10408  02C6  3A00               	xorlw	0	; case 0
 10409  02C7  1903               	skipnz
 10410  02C8  2A46               	goto	l2837
 10411  02C9  3A01               	xorlw	1	; case 1
 10412  02CA  1903               	skipnz
 10413  02CB  2A4D               	goto	l2841
 10414  02CC  3A03               	xorlw	3	; case 2
 10415  02CD  1903               	skipnz
 10416  02CE  2AFD               	goto	l246
 10417  02CF  3A01               	xorlw	1	; case 3
 10418  02D0  1903               	skipnz
 10419  02D1  2A54               	goto	l2845
 10420  02D2  3A07               	xorlw	7	; case 4
 10421  02D3  1903               	skipnz
 10422  02D4  2A5B               	goto	l2849
 10423  02D5  3A01               	xorlw	1	; case 5
 10424  02D6  1903               	skipnz
 10425  02D7  2A62               	goto	l2853
 10426  02D8  3A03               	xorlw	3	; case 6
 10427  02D9  1903               	skipnz
 10428  02DA  2A69               	goto	l2857
 10429  02DB  3A01               	xorlw	1	; case 7
 10430  02DC  1903               	skipnz
 10431  02DD  2A70               	goto	l2861
 10432  02DE  3A0F               	xorlw	15	; case 8
 10433  02DF  1903               	skipnz
 10434  02E0  2A77               	goto	l2865
 10435  02E1  3A01               	xorlw	1	; case 9
 10436  02E2  1903               	skipnz
 10437  02E3  2A7E               	goto	l2869
 10438  02E4  3A03               	xorlw	3	; case 10
 10439  02E5  1903               	skipnz
 10440  02E6  2A85               	goto	l2873
 10441  02E7  3A01               	xorlw	1	; case 11
 10442  02E8  1903               	skipnz
 10443  02E9  2A8C               	goto	l2877
 10444  02EA  3A07               	xorlw	7	; case 12
 10445  02EB  1903               	skipnz
 10446  02EC  2A93               	goto	l2881
 10447  02ED  3A01               	xorlw	1	; case 13
 10448  02EE  1903               	skipnz
 10449  02EF  2A9A               	goto	l2885
 10450  02F0  3A03               	xorlw	3	; case 14
 10451  02F1  1903               	skipnz
 10452  02F2  2AA1               	goto	l2889
 10453  02F3  3A01               	xorlw	1	; case 15
 10454  02F4  1903               	skipnz
 10455  02F5  2AA8               	goto	l2893
 10456  02F6  3A1F               	xorlw	31	; case 16
 10457  02F7  1903               	skipnz
 10458  02F8  2AAF               	goto	l2897
 10459  02F9  3A01               	xorlw	1	; case 17
 10460  02FA  1903               	skipnz
 10461  02FB  2AB6               	goto	l2901
 10462  02FC  2AFD               	goto	l246
 10463  02FD                     l246:
 10464  02FD  0008               	return
 10465  02FE                     __end_of_WritePin:
 10466                           
 10467                           	psect	text40
 10468  02FE                     __ptext40:	
 10469 ;; *************** function _SetPin *****************
 10470 ;; Defined at:
 10471 ;;		line 67 in file "PIC16Xpress_DevBoard.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;  pin             1    wreg     enum E7110
 10474 ;;  io              1    0[BANK0 ] unsigned char 
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;  pin             1    3[BANK0 ] enum E7110
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  1    wreg      unsigned char 
 10479 ;; Registers used:
 10480 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10486 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10487 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10489 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10490 ;;Total ram usage:        4 bytes
 10491 ;; Hardware stack levels used: 1
 10492 ;; Hardware stack levels required when called: 4
 10493 ;; This function calls:
 10494 ;;		Nothing
 10495 ;; This function is called by:
 10496 ;;		_JSN_Sensor_Init
 10497 ;;		_main
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501  02FE                     _SetPin:	
 10502                           ;psect for function _SetPin
 10503                           
 10504                           
 10505                           ;incstack = 0
 10506                           ; Regs used in _SetPin: [wreg-fsr0h+status,2+status,0]
 10507                           ;SetPin@pin stored from wreg
 10508  02FE  0020               	movlb	0	; select bank0
 10509  02FF  00A3               	movwf	SetPin@pin
 10510  0300                     l2755:
 10511                           
 10512                           ;PIC16Xpress_DevBoard.c: 68:     switch(pin) {
 10513  0300  2B78               	goto	l2827
 10514  0301                     l2757:
 10515                           
 10516                           ;PIC16Xpress_DevBoard.c: 70:             TRISAbits.TRISA5 = io;
 10517  0301  0C20               	rrf	SetPin@io,w
 10518  0302  0021               	movlb	1	; select bank1
 10519  0303  1C03               	skipc
 10520  0304  128C               	bcf	12,5	;volatile
 10521  0305  1803               	skipnc
 10522  0306  168C               	bsf	12,5	;volatile
 10523  0307  2BB8               	goto	l198
 10524  0308                     l2761:
 10525                           
 10526                           ;PIC16Xpress_DevBoard.c: 73:             TRISAbits.TRISA4 = io;
 10527  0308  0C20               	rrf	SetPin@io,w
 10528  0309  0021               	movlb	1	; select bank1
 10529  030A  1C03               	skipc
 10530  030B  120C               	bcf	12,4	;volatile
 10531  030C  1803               	skipnc
 10532  030D  160C               	bsf	12,4	;volatile
 10533  030E  2BB8               	goto	l198
 10534  030F                     l2765:
 10535                           
 10536                           ;PIC16Xpress_DevBoard.c: 78:             TRISCbits.TRISC5 = io;
 10537  030F  0C20               	rrf	SetPin@io,w
 10538  0310  0021               	movlb	1	; select bank1
 10539  0311  1C03               	skipc
 10540  0312  128E               	bcf	14,5	;volatile
 10541  0313  1803               	skipnc
 10542  0314  168E               	bsf	14,5	;volatile
 10543  0315  2BB8               	goto	l198
 10544  0316                     l2769:
 10545                           
 10546                           ;PIC16Xpress_DevBoard.c: 81:             TRISCbits.TRISC4 = io;
 10547  0316  0C20               	rrf	SetPin@io,w
 10548  0317  0021               	movlb	1	; select bank1
 10549  0318  1C03               	skipc
 10550  0319  120E               	bcf	14,4	;volatile
 10551  031A  1803               	skipnc
 10552  031B  160E               	bsf	14,4	;volatile
 10553  031C  2BB8               	goto	l198
 10554  031D                     l2773:
 10555                           
 10556                           ;PIC16Xpress_DevBoard.c: 84:             TRISCbits.TRISC3 = io;
 10557  031D  0C20               	rrf	SetPin@io,w
 10558  031E  0021               	movlb	1	; select bank1
 10559  031F  1C03               	skipc
 10560  0320  118E               	bcf	14,3	;volatile
 10561  0321  1803               	skipnc
 10562  0322  158E               	bsf	14,3	;volatile
 10563  0323  2BB8               	goto	l198
 10564  0324                     l2777:
 10565                           
 10566                           ;PIC16Xpress_DevBoard.c: 87:             TRISCbits.TRISC6 = io;
 10567  0324  0C20               	rrf	SetPin@io,w
 10568  0325  0021               	movlb	1	; select bank1
 10569  0326  1C03               	skipc
 10570  0327  130E               	bcf	14,6	;volatile
 10571  0328  1803               	skipnc
 10572  0329  170E               	bsf	14,6	;volatile
 10573  032A  2BB8               	goto	l198
 10574  032B                     l2781:
 10575                           
 10576                           ;PIC16Xpress_DevBoard.c: 90:             TRISCbits.TRISC7 = io;
 10577  032B  0C20               	rrf	SetPin@io,w
 10578  032C  0021               	movlb	1	; select bank1
 10579  032D  1C03               	skipc
 10580  032E  138E               	bcf	14,7	;volatile
 10581  032F  1803               	skipnc
 10582  0330  178E               	bsf	14,7	;volatile
 10583  0331  2BB8               	goto	l198
 10584  0332                     l2785:
 10585                           
 10586                           ;PIC16Xpress_DevBoard.c: 93:             TRISBbits.TRISB7 = io;
 10587  0332  0C20               	rrf	SetPin@io,w
 10588  0333  0021               	movlb	1	; select bank1
 10589  0334  1C03               	skipc
 10590  0335  138D               	bcf	13,7	;volatile
 10591  0336  1803               	skipnc
 10592  0337  178D               	bsf	13,7	;volatile
 10593  0338  2BB8               	goto	l198
 10594  0339                     l2789:
 10595                           
 10596                           ;PIC16Xpress_DevBoard.c: 96:             TRISAbits.TRISA0 = io;
 10597  0339  0C20               	rrf	SetPin@io,w
 10598  033A  0021               	movlb	1	; select bank1
 10599  033B  1C03               	skipc
 10600  033C  100C               	bcf	12,0	;volatile
 10601  033D  1803               	skipnc
 10602  033E  140C               	bsf	12,0	;volatile
 10603  033F  2BB8               	goto	l198
 10604  0340                     l2793:
 10605                           
 10606                           ;PIC16Xpress_DevBoard.c: 99:             TRISAbits.TRISA1 = io;
 10607  0340  0C20               	rrf	SetPin@io,w
 10608  0341  0021               	movlb	1	; select bank1
 10609  0342  1C03               	skipc
 10610  0343  108C               	bcf	12,1	;volatile
 10611  0344  1803               	skipnc
 10612  0345  148C               	bsf	12,1	;volatile
 10613  0346  2BB8               	goto	l198
 10614  0347                     l2797:
 10615                           
 10616                           ;PIC16Xpress_DevBoard.c: 102:             TRISAbits.TRISA2 = io;
 10617  0347  0C20               	rrf	SetPin@io,w
 10618  0348  0021               	movlb	1	; select bank1
 10619  0349  1C03               	skipc
 10620  034A  110C               	bcf	12,2	;volatile
 10621  034B  1803               	skipnc
 10622  034C  150C               	bsf	12,2	;volatile
 10623  034D  2BB8               	goto	l198
 10624  034E                     l2801:
 10625                           
 10626                           ;PIC16Xpress_DevBoard.c: 105:             TRISCbits.TRISC0 = io;
 10627  034E  0C20               	rrf	SetPin@io,w
 10628  034F  0021               	movlb	1	; select bank1
 10629  0350  1C03               	skipc
 10630  0351  100E               	bcf	14,0	;volatile
 10631  0352  1803               	skipnc
 10632  0353  140E               	bsf	14,0	;volatile
 10633  0354  2BB8               	goto	l198
 10634  0355                     l2805:
 10635                           
 10636                           ;PIC16Xpress_DevBoard.c: 108:             TRISCbits.TRISC1 = io;
 10637  0355  0C20               	rrf	SetPin@io,w
 10638  0356  0021               	movlb	1	; select bank1
 10639  0357  1C03               	skipc
 10640  0358  108E               	bcf	14,1	;volatile
 10641  0359  1803               	skipnc
 10642  035A  148E               	bsf	14,1	;volatile
 10643  035B  2BB8               	goto	l198
 10644  035C                     l2809:
 10645                           
 10646                           ;PIC16Xpress_DevBoard.c: 111:             TRISCbits.TRISC2 = io;
 10647  035C  0C20               	rrf	SetPin@io,w
 10648  035D  0021               	movlb	1	; select bank1
 10649  035E  1C03               	skipc
 10650  035F  110E               	bcf	14,2	;volatile
 10651  0360  1803               	skipnc
 10652  0361  150E               	bsf	14,2	;volatile
 10653  0362  2BB8               	goto	l198
 10654  0363                     l2813:
 10655                           
 10656                           ;PIC16Xpress_DevBoard.c: 114:             TRISBbits.TRISB4 = io;
 10657  0363  0C20               	rrf	SetPin@io,w
 10658  0364  0021               	movlb	1	; select bank1
 10659  0365  1C03               	skipc
 10660  0366  120D               	bcf	13,4	;volatile
 10661  0367  1803               	skipnc
 10662  0368  160D               	bsf	13,4	;volatile
 10663  0369  2BB8               	goto	l198
 10664  036A                     l2817:
 10665                           
 10666                           ;PIC16Xpress_DevBoard.c: 117:             TRISBbits.TRISB5 = io;
 10667  036A  0C20               	rrf	SetPin@io,w
 10668  036B  0021               	movlb	1	; select bank1
 10669  036C  1C03               	skipc
 10670  036D  128D               	bcf	13,5	;volatile
 10671  036E  1803               	skipnc
 10672  036F  168D               	bsf	13,5	;volatile
 10673  0370  2BB8               	goto	l198
 10674  0371                     l2821:
 10675                           
 10676                           ;PIC16Xpress_DevBoard.c: 120:             TRISBbits.TRISB6 = io;
 10677  0371  0C20               	rrf	SetPin@io,w
 10678  0372  0021               	movlb	1	; select bank1
 10679  0373  1C03               	skipc
 10680  0374  130D               	bcf	13,6	;volatile
 10681  0375  1803               	skipnc
 10682  0376  170D               	bsf	13,6	;volatile
 10683  0377  2BB8               	goto	l198
 10684  0378                     l2827:
 10685  0378  0823               	movf	SetPin@pin,w
 10686  0379  00A1               	movwf	??_SetPin
 10687  037A  01A2               	clrf	??_SetPin+1
 10688                           
 10689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10690                           ; Switch size 1, requested type "simple"
 10691                           ; Number of cases is 1, Range of values is 0 to 0
 10692                           ; switch strategies available:
 10693                           ; Name         Instructions Cycles
 10694                           ; simple_byte            4     3 (average)
 10695                           ; direct_byte            8     6 (fixed)
 10696                           ; jumptable            260     6 (fixed)
 10697                           ;	Chosen strategy is simple_byte
 10698  037B  0822               	movf	??_SetPin+1,w
 10699  037C  3A00               	xorlw	0	; case 0
 10700  037D  1903               	skipnz
 10701  037E  2B80               	goto	l4191
 10702  037F  2BB8               	goto	l198
 10703  0380                     l4191:
 10704                           
 10705                           ; Switch size 1, requested type "simple"
 10706                           ; Number of cases is 18, Range of values is 0 to 17
 10707                           ; switch strategies available:
 10708                           ; Name         Instructions Cycles
 10709                           ; direct_byte           42     6 (fixed)
 10710                           ; simple_byte           55    28 (average)
 10711                           ; jumptable            260     6 (fixed)
 10712                           ;	Chosen strategy is simple_byte
 10713  0380  0821               	movf	??_SetPin,w
 10714  0381  3A00               	xorlw	0	; case 0
 10715  0382  1903               	skipnz
 10716  0383  2B01               	goto	l2757
 10717  0384  3A01               	xorlw	1	; case 1
 10718  0385  1903               	skipnz
 10719  0386  2B08               	goto	l2761
 10720  0387  3A03               	xorlw	3	; case 2
 10721  0388  1903               	skipnz
 10722  0389  2BB8               	goto	l198
 10723  038A  3A01               	xorlw	1	; case 3
 10724  038B  1903               	skipnz
 10725  038C  2B0F               	goto	l2765
 10726  038D  3A07               	xorlw	7	; case 4
 10727  038E  1903               	skipnz
 10728  038F  2B16               	goto	l2769
 10729  0390  3A01               	xorlw	1	; case 5
 10730  0391  1903               	skipnz
 10731  0392  2B1D               	goto	l2773
 10732  0393  3A03               	xorlw	3	; case 6
 10733  0394  1903               	skipnz
 10734  0395  2B24               	goto	l2777
 10735  0396  3A01               	xorlw	1	; case 7
 10736  0397  1903               	skipnz
 10737  0398  2B2B               	goto	l2781
 10738  0399  3A0F               	xorlw	15	; case 8
 10739  039A  1903               	skipnz
 10740  039B  2B32               	goto	l2785
 10741  039C  3A01               	xorlw	1	; case 9
 10742  039D  1903               	skipnz
 10743  039E  2B39               	goto	l2789
 10744  039F  3A03               	xorlw	3	; case 10
 10745  03A0  1903               	skipnz
 10746  03A1  2B40               	goto	l2793
 10747  03A2  3A01               	xorlw	1	; case 11
 10748  03A3  1903               	skipnz
 10749  03A4  2B47               	goto	l2797
 10750  03A5  3A07               	xorlw	7	; case 12
 10751  03A6  1903               	skipnz
 10752  03A7  2B4E               	goto	l2801
 10753  03A8  3A01               	xorlw	1	; case 13
 10754  03A9  1903               	skipnz
 10755  03AA  2B55               	goto	l2805
 10756  03AB  3A03               	xorlw	3	; case 14
 10757  03AC  1903               	skipnz
 10758  03AD  2B5C               	goto	l2809
 10759  03AE  3A01               	xorlw	1	; case 15
 10760  03AF  1903               	skipnz
 10761  03B0  2B63               	goto	l2813
 10762  03B1  3A1F               	xorlw	31	; case 16
 10763  03B2  1903               	skipnz
 10764  03B3  2B6A               	goto	l2817
 10765  03B4  3A01               	xorlw	1	; case 17
 10766  03B5  1903               	skipnz
 10767  03B6  2B71               	goto	l2821
 10768  03B7  2BB8               	goto	l198
 10769  03B8                     l198:
 10770  03B8  0008               	return
 10771  03B9                     __end_of_SetPin:
 10772                           
 10773                           	psect	text41
 10774  0DDF                     __ptext41:	
 10775 ;; *************** function _CCP1_Initialize *****************
 10776 ;; Defined at:
 10777 ;;		line 39 in file "ccp1.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;		None
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;		None
 10782 ;; Return value:  Size  Location     Type
 10783 ;;                  1    wreg      void 
 10784 ;; Registers used:
 10785 ;;		wreg, status,2, status,0, pclath, cstack
 10786 ;; Tracked objects:
 10787 ;;		On entry : 0/0
 10788 ;;		On exit  : 0/0
 10789 ;;		Unchanged: 0/0
 10790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;Total ram usage:        0 bytes
 10796 ;; Hardware stack levels used: 1
 10797 ;; Hardware stack levels required when called: 5
 10798 ;; This function calls:
 10799 ;;		_CCP1_SetCallBack
 10800 ;; This function is called by:
 10801 ;;		_JSN_Library_Init
 10802 ;;		_SYSTEM_Initialize
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806  0DDF                     _CCP1_Initialize:	
 10807                           ;psect for function _CCP1_Initialize
 10808                           
 10809  0DDF                     l3723:	
 10810                           ;incstack = 0
 10811                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10812                           
 10813                           
 10814                           ;ccp1.c: 44:  CCP1CON = 0x83;
 10815  0DDF  3083               	movlw	131
 10816  0DE0  0025               	movlb	5	; select bank5
 10817  0DE1  0093               	movwf	19	;volatile
 10818  0DE2                     l3725:
 10819                           
 10820                           ;ccp1.c: 47:  CCP1CAP = 0x00;
 10821  0DE2  0194               	clrf	20	;volatile
 10822  0DE3                     l3727:
 10823                           
 10824                           ;ccp1.c: 50:  CCPR1H = 0x00;
 10825  0DE3  0192               	clrf	18	;volatile
 10826  0DE4                     l3729:
 10827                           
 10828                           ;ccp1.c: 53:  CCPR1L = 0x00;
 10829  0DE4  0191               	clrf	17	;volatile
 10830  0DE5                     l3731:
 10831                           
 10832                           ;ccp1.c: 56:     CCP1_SetCallBack(CCP1_DefaultCallBack);
 10833  0DE5  302B               	movlw	low _CCP1_DefaultCallBack
 10834  0DE6  0020               	movlb	0	; select bank0
 10835  0DE7  00A0               	movwf	CCP1_SetCallBack@customCallBack
 10836  0DE8  300F               	movlw	high _CCP1_DefaultCallBack
 10837  0DE9  00A1               	movwf	CCP1_SetCallBack@customCallBack+1
 10838  0DEA  318C  249E  318D   	fcall	_CCP1_SetCallBack
 10839  0DED                     l3733:
 10840                           
 10841                           ;ccp1.c: 59:  CCPTMRSbits.C1TSEL = 0x1;
 10842  0DED  0025               	movlb	5	; select bank5
 10843  0DEE  081F               	movf	31,w	;volatile
 10844  0DEF  39FC               	andlw	-4
 10845  0DF0  3801               	iorlw	1
 10846  0DF1  009F               	movwf	31	;volatile
 10847  0DF2                     l3735:
 10848                           
 10849                           ;ccp1.c: 62:     PIR4bits.CCP1IF = 0;
 10850  0DF2  0020               	movlb	0	; select bank0
 10851  0DF3  1014               	bcf	20,0	;volatile
 10852  0DF4                     l3737:
 10853                           
 10854                           ;ccp1.c: 65:     PIE4bits.CCP1IE = 1;
 10855  0DF4  0021               	movlb	1	; select bank1
 10856  0DF5  1414               	bsf	20,0	;volatile
 10857  0DF6                     l421:
 10858  0DF6  0008               	return
 10859  0DF7                     __end_of_CCP1_Initialize:
 10860                           
 10861                           	psect	text42
 10862  0C9E                     __ptext42:	
 10863 ;; *************** function _CCP1_SetCallBack *****************
 10864 ;; Defined at:
 10865 ;;		line 87 in file "ccp1.c"
 10866 ;; Parameters:    Size  Location     Type
 10867 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
 10868 ;;		 -> CCP1_DefaultCallBack(1), 
 10869 ;; Auto vars:     Size  Location     Type
 10870 ;;		None
 10871 ;; Return value:  Size  Location     Type
 10872 ;;                  1    wreg      void 
 10873 ;; Registers used:
 10874 ;;		wreg
 10875 ;; Tracked objects:
 10876 ;;		On entry : 0/0
 10877 ;;		On exit  : 0/0
 10878 ;;		Unchanged: 0/0
 10879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10880 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10883 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10884 ;;Total ram usage:        2 bytes
 10885 ;; Hardware stack levels used: 1
 10886 ;; Hardware stack levels required when called: 4
 10887 ;; This function calls:
 10888 ;;		Nothing
 10889 ;; This function is called by:
 10890 ;;		_CCP1_Initialize
 10891 ;; This function uses a non-reentrant model
 10892 ;;
 10893                           
 10894  0C9E                     _CCP1_SetCallBack:	
 10895                           ;psect for function _CCP1_SetCallBack
 10896                           
 10897  0C9E                     l3657:	
 10898                           ;incstack = 0
 10899                           ; Regs used in _CCP1_SetCallBack: [wreg]
 10900                           
 10901                           
 10902                           ;ccp1.c: 88:     CCP1_CallBack = customCallBack;
 10903  0C9E  0020               	movlb	0	; select bank0
 10904  0C9F  0821               	movf	CCP1_SetCallBack@customCallBack+1,w
 10905  0CA0  0021               	movlb	1	; select bank1
 10906  0CA1  00D3               	movwf	(_CCP1_CallBack+1)^(0+128)
 10907  0CA2  0020               	movlb	0	; select bank0
 10908  0CA3  0820               	movf	CCP1_SetCallBack@customCallBack,w
 10909  0CA4  0021               	movlb	1	; select bank1
 10910  0CA5  00D2               	movwf	_CCP1_CallBack^(0+128)
 10911  0CA6                     l427:
 10912  0CA6  0008               	return
 10913  0CA7                     __end_of_CCP1_SetCallBack:
 10914                           
 10915                           	psect	text43
 10916  0C72                     __ptext43:	
 10917 ;; *************** function _FR_Timer_Init *****************
 10918 ;; Defined at:
 10919 ;;		line 33 in file "FR_Timer.c"
 10920 ;; Parameters:    Size  Location     Type
 10921 ;;		None
 10922 ;; Auto vars:     Size  Location     Type
 10923 ;;		None
 10924 ;; Return value:  Size  Location     Type
 10925 ;;                  1    wreg      void 
 10926 ;; Registers used:
 10927 ;;		wreg, status,2, status,0, pclath, cstack
 10928 ;; Tracked objects:
 10929 ;;		On entry : 0/0
 10930 ;;		On exit  : 0/0
 10931 ;;		Unchanged: 0/0
 10932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10937 ;;Total ram usage:        0 bytes
 10938 ;; Hardware stack levels used: 1
 10939 ;; Hardware stack levels required when called: 6
 10940 ;; This function calls:
 10941 ;;		_TMR0_Initialize
 10942 ;; This function is called by:
 10943 ;;		_main
 10944 ;; This function uses a non-reentrant model
 10945 ;;
 10946                           
 10947  0C72                     _FR_Timer_Init:	
 10948                           ;psect for function _FR_Timer_Init
 10949                           
 10950  0C72                     l3999:	
 10951                           ;incstack = 0
 10952                           ; Regs used in _FR_Timer_Init: [wreg+status,2+status,0+pclath+cstack]
 10953                           
 10954                           
 10955                           ;FR_Timer.c: 34:     TMR0_Initialize();
 10956  0C72  318D  255C  318C   	fcall	_TMR0_Initialize
 10957  0C75                     l94:
 10958  0C75  0008               	return
 10959  0C76                     __end_of_FR_Timer_Init:
 10960                           
 10961                           	psect	text44
 10962  0D5C                     __ptext44:	
 10963 ;; *************** function _TMR0_Initialize *****************
 10964 ;; Defined at:
 10965 ;;		line 18 in file "tmr0.c"
 10966 ;; Parameters:    Size  Location     Type
 10967 ;;		None
 10968 ;; Auto vars:     Size  Location     Type
 10969 ;;		None
 10970 ;; Return value:  Size  Location     Type
 10971 ;;                  1    wreg      void 
 10972 ;; Registers used:
 10973 ;;		wreg, status,2, status,0, pclath, cstack
 10974 ;; Tracked objects:
 10975 ;;		On entry : 0/0
 10976 ;;		On exit  : 0/0
 10977 ;;		Unchanged: 0/0
 10978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10983 ;;Total ram usage:        0 bytes
 10984 ;; Hardware stack levels used: 1
 10985 ;; Hardware stack levels required when called: 5
 10986 ;; This function calls:
 10987 ;;		_TMR0_SetInterruptHandler
 10988 ;; This function is called by:
 10989 ;;		_FR_Timer_Init
 10990 ;;		_SYSTEM_Initialize
 10991 ;; This function uses a non-reentrant model
 10992 ;;
 10993                           
 10994  0D5C                     _TMR0_Initialize:	
 10995                           ;psect for function _TMR0_Initialize
 10996                           
 10997  0D5C                     l3739:	
 10998                           ;incstack = 0
 10999                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11000                           
 11001                           
 11002                           ;tmr0.c: 23:     T0CON1 = 0x42;
 11003  0D5C  3042               	movlw	66
 11004  0D5D  0020               	movlb	0	; select bank0
 11005  0D5E  0098               	movwf	24	;volatile
 11006                           
 11007                           ;tmr0.c: 26:     TMR0H = 0xF9;
 11008  0D5F  30F9               	movlw	249
 11009  0D60  0096               	movwf	22	;volatile
 11010  0D61                     l3741:
 11011                           
 11012                           ;tmr0.c: 29:     TMR0L = 0x00;
 11013  0D61  0195               	clrf	21	;volatile
 11014  0D62                     l3743:
 11015                           
 11016                           ;tmr0.c: 32:     PIR0bits.TMR0IF = 0;
 11017  0D62  1290               	bcf	16,5	;volatile
 11018  0D63                     l3745:
 11019                           
 11020                           ;tmr0.c: 35:     PIE0bits.TMR0IE = 1;
 11021  0D63  0021               	movlb	1	; select bank1
 11022  0D64  1690               	bsf	16,5	;volatile
 11023  0D65                     l3747:
 11024                           
 11025                           ;tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 11026  0D65  3000               	movlw	0
 11027  0D66  0020               	movlb	0	; select bank0
 11028  0D67  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 11029  0D68  3000               	movlw	0
 11030  0D69  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 11031  0D6A  318C  2495  318D   	fcall	_TMR0_SetInterruptHandler
 11032  0D6D                     l3749:
 11033                           
 11034                           ;tmr0.c: 41:     T0CON0 = 0x80;
 11035  0D6D  3080               	movlw	128
 11036  0D6E  0020               	movlb	0	; select bank0
 11037  0D6F  0097               	movwf	23	;volatile
 11038  0D70                     l355:
 11039  0D70  0008               	return
 11040  0D71                     __end_of_TMR0_Initialize:
 11041                           
 11042                           	psect	text45
 11043  0C95                     __ptext45:	
 11044 ;; *************** function _TMR0_SetInterruptHandler *****************
 11045 ;; Defined at:
 11046 ;;		line 119 in file "tmr0.c"
 11047 ;; Parameters:    Size  Location     Type
 11048 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 11049 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 11050 ;; Auto vars:     Size  Location     Type
 11051 ;;		None
 11052 ;; Return value:  Size  Location     Type
 11053 ;;                  1    wreg      void 
 11054 ;; Registers used:
 11055 ;;		wreg
 11056 ;; Tracked objects:
 11057 ;;		On entry : 0/0
 11058 ;;		On exit  : 0/0
 11059 ;;		Unchanged: 0/0
 11060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11061 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11064 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11065 ;;Total ram usage:        2 bytes
 11066 ;; Hardware stack levels used: 1
 11067 ;; Hardware stack levels required when called: 4
 11068 ;; This function calls:
 11069 ;;		Nothing
 11070 ;; This function is called by:
 11071 ;;		_TMR0_Initialize
 11072 ;; This function uses a non-reentrant model
 11073 ;;
 11074                           
 11075  0C95                     _TMR0_SetInterruptHandler:	
 11076                           ;psect for function _TMR0_SetInterruptHandler
 11077                           
 11078  0C95                     l3655:	
 11079                           ;incstack = 0
 11080                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 11081                           
 11082                           
 11083                           ;tmr0.c: 120:     TMR0_InterruptHandler = InterruptHandler;
 11084  0C95  0020               	movlb	0	; select bank0
 11085  0C96  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 11086  0C97  0021               	movlb	1	; select bank1
 11087  0C98  00D7               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 11088  0C99  0020               	movlb	0	; select bank0
 11089  0C9A  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 11090  0C9B  0021               	movlb	1	; select bank1
 11091  0C9C  00D6               	movwf	_TMR0_InterruptHandler^(0+128)
 11092  0C9D                     l382:
 11093  0C9D  0008               	return
 11094  0C9E                     __end_of_TMR0_SetInterruptHandler:
 11095                           
 11096                           	psect	text46
 11097  0D37                     __ptext46:	
 11098 ;; *************** function _FR_Timer_GetMillis *****************
 11099 ;; Defined at:
 11100 ;;		line 40 in file "FR_Timer.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;		None
 11103 ;; Auto vars:     Size  Location     Type
 11104 ;;		None
 11105 ;; Return value:  Size  Location     Type
 11106 ;;                  4    0[BANK0 ] unsigned long 
 11107 ;; Registers used:
 11108 ;;		wreg
 11109 ;; Tracked objects:
 11110 ;;		On entry : 0/0
 11111 ;;		On exit  : 0/0
 11112 ;;		Unchanged: 0/0
 11113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11114 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11117 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11118 ;;Total ram usage:        4 bytes
 11119 ;; Hardware stack levels used: 1
 11120 ;; Hardware stack levels required when called: 4
 11121 ;; This function calls:
 11122 ;;		Nothing
 11123 ;; This function is called by:
 11124 ;;		_main
 11125 ;; This function uses a non-reentrant model
 11126 ;;
 11127                           
 11128  0D37                     _FR_Timer_GetMillis:	
 11129                           ;psect for function _FR_Timer_GetMillis
 11130                           
 11131  0D37                     l4003:	
 11132                           ;incstack = 0
 11133                           ; Regs used in _FR_Timer_GetMillis: [wreg]
 11134                           
 11135                           
 11136                           ;FR_Timer.c: 41:     return millis;
 11137  0D37  0021               	movlb	1	; select bank1
 11138  0D38  082F               	movf	(_millis+3)^(0+128),w
 11139  0D39  0020               	movlb	0	; select bank0
 11140  0D3A  00A3               	movwf	?_FR_Timer_GetMillis+3
 11141  0D3B  0021               	movlb	1	; select bank1
 11142  0D3C  082E               	movf	(_millis+2)^(0+128),w
 11143  0D3D  0020               	movlb	0	; select bank0
 11144  0D3E  00A2               	movwf	?_FR_Timer_GetMillis+2
 11145  0D3F  0021               	movlb	1	; select bank1
 11146  0D40  082D               	movf	(_millis+1)^(0+128),w
 11147  0D41  0020               	movlb	0	; select bank0
 11148  0D42  00A1               	movwf	?_FR_Timer_GetMillis+1
 11149  0D43  0021               	movlb	1	; select bank1
 11150  0D44  082C               	movf	_millis^(0+128),w
 11151  0D45  0020               	movlb	0	; select bank0
 11152  0D46  00A0               	movwf	?_FR_Timer_GetMillis
 11153  0D47                     l97:
 11154  0D47  0008               	return
 11155  0D48                     __end_of_FR_Timer_GetMillis:
 11156                           
 11157                           	psect	intentry
 11158  0004                     __pintentry:	
 11159 ;; *************** function _INTERRUPT_InterruptManager *****************
 11160 ;; Defined at:
 11161 ;;		line 5 in file "interrupt_manager.c"
 11162 ;; Parameters:    Size  Location     Type
 11163 ;;		None
 11164 ;; Auto vars:     Size  Location     Type
 11165 ;;		None
 11166 ;; Return value:  Size  Location     Type
 11167 ;;                  1    wreg      void 
 11168 ;; Registers used:
 11169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11170 ;; Tracked objects:
 11171 ;;		On entry : 0/0
 11172 ;;		On exit  : 0/0
 11173 ;;		Unchanged: 0/0
 11174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11179 ;;Total ram usage:        0 bytes
 11180 ;; Hardware stack levels used: 1
 11181 ;; Hardware stack levels required when called: 3
 11182 ;; This function calls:
 11183 ;;		Absolute function
 11184 ;;		_CCP1_CaptureISR
 11185 ;;		_CCP2_CaptureISR
 11186 ;;		_CCP3_CaptureISR
 11187 ;;		_EUSART_Receive_ISR
 11188 ;;		_EUSART_Transmit_ISR
 11189 ;;		_TMR0_ISR
 11190 ;;		_TMR1_ISR
 11191 ;; This function is called by:
 11192 ;;		Interrupt level 1
 11193 ;; This function uses a non-reentrant model
 11194 ;;
 11195                           
 11196  0004                     _INTERRUPT_InterruptManager:
 11197                           
 11198                           ;incstack = 0
 11199  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11200                           
 11201                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11202  0005  3180               	pagesel	$
 11203  0006                     i1l3439:
 11204                           
 11205                           ;interrupt_manager.c: 8:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 11206  0006  0021               	movlb	1	; select bank1
 11207  0007  1E90               	btfss	16,5	;volatile
 11208  0008  280A               	goto	u136_21
 11209  0009  280B               	goto	u136_20
 11210  000A                     u136_21:
 11211  000A  2814               	goto	i1l733
 11212  000B                     u136_20:
 11213  000B                     i1l3441:
 11214  000B  0020               	movlb	0	; select bank0
 11215  000C  1E90               	btfss	16,5	;volatile
 11216  000D  280F               	goto	u137_21
 11217  000E  2810               	goto	u137_20
 11218  000F                     u137_21:
 11219  000F  2814               	goto	i1l733
 11220  0010                     u137_20:
 11221  0010                     i1l3443:
 11222                           
 11223                           ;interrupt_manager.c: 9:     {;interrupt_manager.c: 10:         TMR0_ISR();
 11224  0010  318D  25C8  3180   	fcall	_TMR0_ISR
 11225                           
 11226                           ;interrupt_manager.c: 11:     }
 11227  0013  2872               	goto	i1l747
 11228  0014                     i1l733:	
 11229                           ;interrupt_manager.c: 12:     else if(INTCONbits.PEIE == 1)
 11230                           
 11231  0014  1F0B               	btfss	11,6	;volatile
 11232  0015  2817               	goto	u138_21
 11233  0016  2818               	goto	u138_20
 11234  0017                     u138_21:
 11235  0017  2872               	goto	i1l747
 11236  0018                     u138_20:
 11237  0018                     i1l3445:
 11238                           
 11239                           ;interrupt_manager.c: 13:     {;interrupt_manager.c: 14:         if(PIE4bits.CCP1IE == 1
      +                           && PIR4bits.CCP1IF == 1)
 11240  0018  0021               	movlb	1	; select bank1
 11241  0019  1C14               	btfss	20,0	;volatile
 11242  001A  281C               	goto	u139_21
 11243  001B  281D               	goto	u139_20
 11244  001C                     u139_21:
 11245  001C  2826               	goto	i1l736
 11246  001D                     u139_20:
 11247  001D                     i1l3447:
 11248  001D  0020               	movlb	0	; select bank0
 11249  001E  1C14               	btfss	20,0	;volatile
 11250  001F  2821               	goto	u140_21
 11251  0020  2822               	goto	u140_20
 11252  0021                     u140_21:
 11253  0021  2826               	goto	i1l736
 11254  0022                     u140_20:
 11255  0022                     i1l3449:
 11256                           
 11257                           ;interrupt_manager.c: 15:         {;interrupt_manager.c: 16:             CCP1_CaptureISR
      +                          ();
 11258  0022  318D  2586  3180   	fcall	_CCP1_CaptureISR
 11259                           
 11260                           ;interrupt_manager.c: 17:         }
 11261  0025  2872               	goto	i1l747
 11262  0026                     i1l736:	
 11263                           ;interrupt_manager.c: 18:         else if(PIE4bits.CCP2IE == 1 && PIR4bits.CCP2IF == 1)
 11264                           
 11265  0026  0021               	movlb	1	; select bank1
 11266  0027  1C94               	btfss	20,1	;volatile
 11267  0028  282A               	goto	u141_21
 11268  0029  282B               	goto	u141_20
 11269  002A                     u141_21:
 11270  002A  2834               	goto	i1l738
 11271  002B                     u141_20:
 11272  002B                     i1l3451:
 11273  002B  0020               	movlb	0	; select bank0
 11274  002C  1C94               	btfss	20,1	;volatile
 11275  002D  282F               	goto	u142_21
 11276  002E  2830               	goto	u142_20
 11277  002F                     u142_21:
 11278  002F  2834               	goto	i1l738
 11279  0030                     u142_20:
 11280  0030                     i1l3453:
 11281                           
 11282                           ;interrupt_manager.c: 19:         {;interrupt_manager.c: 20:             CCP2_CaptureISR
      +                          ();
 11283  0030  318D  259C  3180   	fcall	_CCP2_CaptureISR
 11284                           
 11285                           ;interrupt_manager.c: 21:         }
 11286  0033  2872               	goto	i1l747
 11287  0034                     i1l738:	
 11288                           ;interrupt_manager.c: 22:         else if(PIE4bits.CCP3IE == 1 && PIR4bits.CCP3IF == 1)
 11289                           
 11290  0034  0021               	movlb	1	; select bank1
 11291  0035  1D14               	btfss	20,2	;volatile
 11292  0036  2838               	goto	u143_21
 11293  0037  2839               	goto	u143_20
 11294  0038                     u143_21:
 11295  0038  2842               	goto	i1l740
 11296  0039                     u143_20:
 11297  0039                     i1l3455:
 11298  0039  0020               	movlb	0	; select bank0
 11299  003A  1D14               	btfss	20,2	;volatile
 11300  003B  283D               	goto	u144_21
 11301  003C  283E               	goto	u144_20
 11302  003D                     u144_21:
 11303  003D  2842               	goto	i1l740
 11304  003E                     u144_20:
 11305  003E                     i1l3457:
 11306                           
 11307                           ;interrupt_manager.c: 23:         {;interrupt_manager.c: 24:             CCP3_CaptureISR
      +                          ();
 11308  003E  318D  25B2  3180   	fcall	_CCP3_CaptureISR
 11309                           
 11310                           ;interrupt_manager.c: 25:         }
 11311  0041  2872               	goto	i1l747
 11312  0042                     i1l740:	
 11313                           ;interrupt_manager.c: 26:         else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 11314                           
 11315  0042  0021               	movlb	1	; select bank1
 11316  0043  1C11               	btfss	17,0	;volatile
 11317  0044  2846               	goto	u145_21
 11318  0045  2847               	goto	u145_20
 11319  0046                     u145_21:
 11320  0046  2850               	goto	i1l742
 11321  0047                     u145_20:
 11322  0047                     i1l3459:
 11323  0047  0020               	movlb	0	; select bank0
 11324  0048  1C11               	btfss	17,0	;volatile
 11325  0049  284B               	goto	u146_21
 11326  004A  284C               	goto	u146_20
 11327  004B                     u146_21:
 11328  004B  2850               	goto	i1l742
 11329  004C                     u146_20:
 11330  004C                     i1l3461:
 11331                           
 11332                           ;interrupt_manager.c: 27:         {;interrupt_manager.c: 28:             TMR1_ISR();
 11333  004C  318D  2503  3180   	fcall	_TMR1_ISR
 11334                           
 11335                           ;interrupt_manager.c: 29:         }
 11336  004F  2872               	goto	i1l747
 11337  0050                     i1l742:	
 11338                           ;interrupt_manager.c: 30:         else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 11339                           
 11340  0050  0021               	movlb	1	; select bank1
 11341  0051  1E91               	btfss	17,5	;volatile
 11342  0052  2854               	goto	u147_21
 11343  0053  2855               	goto	u147_20
 11344  0054                     u147_21:
 11345  0054  2861               	goto	i1l744
 11346  0055                     u147_20:
 11347  0055                     i1l3463:
 11348  0055  0020               	movlb	0	; select bank0
 11349  0056  1E91               	btfss	17,5	;volatile
 11350  0057  2859               	goto	u148_21
 11351  0058  285A               	goto	u148_20
 11352  0059                     u148_21:
 11353  0059  2861               	goto	i1l744
 11354  005A                     u148_20:
 11355  005A                     i1l3465:
 11356                           
 11357                           ;interrupt_manager.c: 31:         {;interrupt_manager.c: 32:             EUSART_RxDefaul
      +                          tInterruptHandler();
 11358  005A  0021               	movlb	1	; select bank1
 11359  005B  0843               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 11360  005C  008A               	movwf	10
 11361  005D  0842               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 11362  005E  000A               	callw
 11363  005F  3180               	pagesel	$
 11364                           
 11365                           ;interrupt_manager.c: 33:         }
 11366  0060  2872               	goto	i1l747
 11367  0061                     i1l744:	
 11368                           ;interrupt_manager.c: 34:         else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 11369                           
 11370  0061  0021               	movlb	1	; select bank1
 11371  0062  1E11               	btfss	17,4	;volatile
 11372  0063  2865               	goto	u149_21
 11373  0064  2866               	goto	u149_20
 11374  0065                     u149_21:
 11375  0065  2872               	goto	i1l741
 11376  0066                     u149_20:
 11377  0066                     i1l3467:
 11378  0066  0020               	movlb	0	; select bank0
 11379  0067  1E11               	btfss	17,4	;volatile
 11380  0068  286A               	goto	u150_21
 11381  0069  286B               	goto	u150_20
 11382  006A                     u150_21:
 11383  006A  2872               	goto	i1l741
 11384  006B                     u150_20:
 11385  006B                     i1l3469:
 11386                           
 11387                           ;interrupt_manager.c: 35:         {;interrupt_manager.c: 36:             EUSART_TxDefaul
      +                          tInterruptHandler();
 11388  006B  0021               	movlb	1	; select bank1
 11389  006C  0845               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 11390  006D  008A               	movwf	10
 11391  006E  0844               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 11392  006F  000A               	callw
 11393  0070  3180               	pagesel	$
 11394  0071  2872               	goto	i1l747
 11395  0072                     i1l741:
 11396  0072                     i1l747:
 11397  0072  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11398  0073  0009               	retfie
 11399  0074                     __end_of_INTERRUPT_InterruptManager:
 11400                           
 11401                           	psect	text48
 11402  0D03                     __ptext48:	
 11403 ;; *************** function _TMR1_ISR *****************
 11404 ;; Defined at:
 11405 ;;		line 120 in file "tmr1.c"
 11406 ;; Parameters:    Size  Location     Type
 11407 ;;		None
 11408 ;; Auto vars:     Size  Location     Type
 11409 ;;		None
 11410 ;; Return value:  Size  Location     Type
 11411 ;;                  1    wreg      void 
 11412 ;; Registers used:
 11413 ;;		wreg, status,2, status,0, pclath, cstack
 11414 ;; Tracked objects:
 11415 ;;		On entry : 0/0
 11416 ;;		On exit  : 0/0
 11417 ;;		Unchanged: 0/0
 11418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11423 ;;Total ram usage:        0 bytes
 11424 ;; Hardware stack levels used: 1
 11425 ;; Hardware stack levels required when called: 1
 11426 ;; This function calls:
 11427 ;;		_TMR1_WriteTimer
 11428 ;; This function is called by:
 11429 ;;		_INTERRUPT_InterruptManager
 11430 ;; This function uses a non-reentrant model
 11431 ;;
 11432                           
 11433  0D03                     _TMR1_ISR:	
 11434                           ;psect for function _TMR1_ISR
 11435                           
 11436  0D03                     i1l3339:	
 11437                           ;incstack = 0
 11438                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 11439                           
 11440                           
 11441                           ;tmr1.c: 124:     PIR1bits.TMR1IF = 0;
 11442  0D03  0020               	movlb	0	; select bank0
 11443  0D04  1011               	bcf	17,0	;volatile
 11444  0D05                     i1l3341:
 11445                           
 11446                           ;tmr1.c: 125:     TMR1_WriteTimer(timer1ReloadVal);
 11447  0D05  0021               	movlb	1	; select bank1
 11448  0D06  0849               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 11449  0D07  00F8               	movwf	TMR1_WriteTimer@timerVal+1
 11450  0D08  0848               	movf	_timer1ReloadVal^(0+128),w	;volatile
 11451  0D09  00F7               	movwf	TMR1_WriteTimer@timerVal
 11452  0D0A  318D  2526  318D   	fcall	_TMR1_WriteTimer
 11453  0D0D                     i1l540:
 11454  0D0D  0008               	return
 11455  0D0E                     __end_of_TMR1_ISR:
 11456                           
 11457                           	psect	text49
 11458  0D26                     __ptext49:	
 11459 ;; *************** function _TMR1_WriteTimer *****************
 11460 ;; Defined at:
 11461 ;;		line 75 in file "tmr1.c"
 11462 ;; Parameters:    Size  Location     Type
 11463 ;;  timerVal        2    0[COMMON] unsigned short 
 11464 ;; Auto vars:     Size  Location     Type
 11465 ;;		None
 11466 ;; Return value:  Size  Location     Type
 11467 ;;                  1    wreg      void 
 11468 ;; Registers used:
 11469 ;;		wreg, status,2
 11470 ;; Tracked objects:
 11471 ;;		On entry : 0/0
 11472 ;;		On exit  : 0/0
 11473 ;;		Unchanged: 0/0
 11474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11478 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11479 ;;Total ram usage:        2 bytes
 11480 ;; Hardware stack levels used: 1
 11481 ;; This function calls:
 11482 ;;		Nothing
 11483 ;; This function is called by:
 11484 ;;		_TMR1_ISR
 11485 ;;		_TMR1_Reload
 11486 ;; This function uses a non-reentrant model
 11487 ;;
 11488                           
 11489  0D26                     _TMR1_WriteTimer:	
 11490                           ;psect for function _TMR1_WriteTimer
 11491                           
 11492  0D26                     i1l3175:	
 11493                           ;incstack = 0
 11494                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 11495                           
 11496                           
 11497                           ;tmr1.c: 75: void TMR1_WriteTimer(uint16_t timerVal);tmr1.c: 76: {;tmr1.c: 77:     if (T
      +                          1CONbits.T1SYNC == 1)
 11498  0D26  0020               	movlb	0	; select bank0
 11499  0D27  1D1B               	btfss	27,2	;volatile
 11500  0D28  2D2A               	goto	u110_21
 11501  0D29  2D2B               	goto	u110_20
 11502  0D2A                     u110_21:
 11503  0D2A  2D32               	goto	i1l3185
 11504  0D2B                     u110_20:
 11505  0D2B                     i1l3177:
 11506                           
 11507                           ;tmr1.c: 78:     {;tmr1.c: 80:         T1CONbits.TMR1ON = 0;
 11508  0D2B  101B               	bcf	27,0	;volatile
 11509  0D2C                     i1l3179:
 11510                           
 11511                           ;tmr1.c: 83:         TMR1H = (uint8_t)(timerVal >> 8);
 11512  0D2C  0878               	movf	TMR1_WriteTimer@timerVal+1,w
 11513  0D2D  009A               	movwf	26	;volatile
 11514  0D2E                     i1l3181:
 11515                           
 11516                           ;tmr1.c: 84:         TMR1L = (uint8_t)timerVal;
 11517  0D2E  0877               	movf	TMR1_WriteTimer@timerVal,w
 11518  0D2F  0099               	movwf	25	;volatile
 11519  0D30                     i1l3183:
 11520                           
 11521                           ;tmr1.c: 87:         T1CONbits.TMR1ON =1;
 11522  0D30  141B               	bsf	27,0	;volatile
 11523                           
 11524                           ;tmr1.c: 88:     }
 11525  0D31  2D36               	goto	i1l528
 11526  0D32                     i1l3185:
 11527                           
 11528                           ;tmr1.c: 90:     {;tmr1.c: 92:         TMR1H = (uint8_t)(timerVal >> 8);
 11529  0D32  0878               	movf	TMR1_WriteTimer@timerVal+1,w
 11530  0D33  009A               	movwf	26	;volatile
 11531  0D34                     i1l3187:
 11532                           
 11533                           ;tmr1.c: 93:         TMR1L = (uint8_t)timerVal;
 11534  0D34  0877               	movf	TMR1_WriteTimer@timerVal,w
 11535  0D35  0099               	movwf	25	;volatile
 11536  0D36                     i1l528:
 11537  0D36  0008               	return
 11538  0D37                     __end_of_TMR1_WriteTimer:
 11539                           
 11540                           	psect	text50
 11541  0DC8                     __ptext50:	
 11542 ;; *************** function _TMR0_ISR *****************
 11543 ;; Defined at:
 11544 ;;		line 90 in file "tmr0.c"
 11545 ;; Parameters:    Size  Location     Type
 11546 ;;		None
 11547 ;; Auto vars:     Size  Location     Type
 11548 ;;		None
 11549 ;; Return value:  Size  Location     Type
 11550 ;;                  1    wreg      void 
 11551 ;; Registers used:
 11552 ;;		wreg, status,2, status,0, pclath, cstack
 11553 ;; Tracked objects:
 11554 ;;		On entry : 0/0
 11555 ;;		On exit  : 0/0
 11556 ;;		Unchanged: 0/0
 11557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11562 ;;Total ram usage:        0 bytes
 11563 ;; Hardware stack levels used: 1
 11564 ;; Hardware stack levels required when called: 2
 11565 ;; This function calls:
 11566 ;;		_TMR0_CallBack
 11567 ;; This function is called by:
 11568 ;;		_INTERRUPT_InterruptManager
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572  0DC8                     _TMR0_ISR:	
 11573                           ;psect for function _TMR0_ISR
 11574                           
 11575  0DC8                     i1l3313:	
 11576                           ;incstack = 0
 11577                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 11578                           
 11579                           
 11580                           ;tmr0.c: 92:     static volatile uint16_t CountCallBack = 0;;tmr0.c: 95:     PIR0bits.TM
      +                          R0IF = 0;
 11581  0DC8  0020               	movlb	0	; select bank0
 11582  0DC9  1290               	bcf	16,5	;volatile
 11583  0DCA                     i1l3315:
 11584                           
 11585                           ;tmr0.c: 97:     if (++CountCallBack >= 4)
 11586  0DCA  3001               	movlw	1
 11587  0DCB  0021               	movlb	1	; select bank1
 11588  0DCC  07D4               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
 11589  0DCD  3000               	movlw	0
 11590  0DCE  3DD5               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
 11591  0DCF  3000               	movlw	0
 11592  0DD0  0255               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
 11593  0DD1  3004               	movlw	4
 11594  0DD2  1903               	skipnz
 11595  0DD3  0254               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
 11596  0DD4  1C03               	skipc
 11597  0DD5  2DD7               	goto	u124_21
 11598  0DD6  2DD8               	goto	u124_20
 11599  0DD7                     u124_21:
 11600  0DD7  2DDE               	goto	i1l376
 11601  0DD8                     u124_20:
 11602  0DD8                     i1l3317:
 11603                           
 11604                           ;tmr0.c: 98:     {;tmr0.c: 100:         TMR0_CallBack();
 11605  0DD8  318C  2480  318D   	fcall	_TMR0_CallBack
 11606  0DDB                     i1l3319:
 11607                           
 11608                           ;tmr0.c: 103:         CountCallBack = 0;
 11609  0DDB  0021               	movlb	1	; select bank1
 11610  0DDC  01D4               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
 11611  0DDD  01D5               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
 11612  0DDE                     i1l376:
 11613  0DDE  0008               	return
 11614  0DDF                     __end_of_TMR0_ISR:
 11615                           
 11616                           	psect	text51
 11617  0C80                     __ptext51:	
 11618 ;; *************** function _TMR0_CallBack *****************
 11619 ;; Defined at:
 11620 ;;		line 111 in file "tmr0.c"
 11621 ;; Parameters:    Size  Location     Type
 11622 ;;		None
 11623 ;; Auto vars:     Size  Location     Type
 11624 ;;		None
 11625 ;; Return value:  Size  Location     Type
 11626 ;;                  1    wreg      void 
 11627 ;; Registers used:
 11628 ;;		wreg, status,2, status,0, pclath, cstack
 11629 ;; Tracked objects:
 11630 ;;		On entry : 0/0
 11631 ;;		On exit  : 0/0
 11632 ;;		Unchanged: 0/0
 11633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11638 ;;Total ram usage:        0 bytes
 11639 ;; Hardware stack levels used: 1
 11640 ;; Hardware stack levels required when called: 1
 11641 ;; This function calls:
 11642 ;;		_FR_Timer_IncMicros
 11643 ;;		_FR_Timer_IncMillis
 11644 ;; This function is called by:
 11645 ;;		_TMR0_ISR
 11646 ;; This function uses a non-reentrant model
 11647 ;;
 11648                           
 11649  0C80                     _TMR0_CallBack:	
 11650                           ;psect for function _TMR0_CallBack
 11651                           
 11652  0C80                     i1l3157:	
 11653                           ;incstack = 0
 11654                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 11655                           
 11656                           
 11657                           ;tmr0.c: 113:     FR_Timer_IncMillis();
 11658  0C80  318C  24F9  318C   	fcall	_FR_Timer_IncMillis
 11659                           
 11660                           ;tmr0.c: 114:     FR_Timer_IncMicros();
 11661  0C83  318C  24EF  318C   	fcall	_FR_Timer_IncMicros
 11662  0C86                     i1l379:
 11663  0C86  0008               	return
 11664  0C87                     __end_of_TMR0_CallBack:
 11665                           
 11666                           	psect	text52
 11667  0CF9                     __ptext52:	
 11668 ;; *************** function _FR_Timer_IncMillis *****************
 11669 ;; Defined at:
 11670 ;;		line 52 in file "FR_Timer.c"
 11671 ;; Parameters:    Size  Location     Type
 11672 ;;		None
 11673 ;; Auto vars:     Size  Location     Type
 11674 ;;		None
 11675 ;; Return value:  Size  Location     Type
 11676 ;;                  1    wreg      void 
 11677 ;; Registers used:
 11678 ;;		wreg
 11679 ;; Tracked objects:
 11680 ;;		On entry : 0/0
 11681 ;;		On exit  : 0/0
 11682 ;;		Unchanged: 0/0
 11683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11688 ;;Total ram usage:        0 bytes
 11689 ;; Hardware stack levels used: 1
 11690 ;; This function calls:
 11691 ;;		Nothing
 11692 ;; This function is called by:
 11693 ;;		_TMR0_CallBack
 11694 ;; This function uses a non-reentrant model
 11695 ;;
 11696                           
 11697  0CF9                     _FR_Timer_IncMillis:	
 11698                           ;psect for function _FR_Timer_IncMillis
 11699                           
 11700  0CF9                     i1l2935:	
 11701                           ;incstack = 0
 11702                           ; Regs used in _FR_Timer_IncMillis: [wreg]
 11703                           
 11704                           
 11705                           ;FR_Timer.c: 53:     millis ++;
 11706  0CF9  3001               	movlw	1
 11707  0CFA  0021               	movlb	1	; select bank1
 11708  0CFB  07AC               	addwf	_millis^(0+128),f
 11709  0CFC  3000               	movlw	0
 11710  0CFD  3DAD               	addwfc	(_millis+1)^(0+128),f
 11711  0CFE  3000               	movlw	0
 11712  0CFF  3DAE               	addwfc	(_millis+2)^(0+128),f
 11713  0D00  3000               	movlw	0
 11714  0D01  3DAF               	addwfc	(_millis+3)^(0+128),f
 11715  0D02                     i1l103:
 11716  0D02  0008               	return
 11717  0D03                     __end_of_FR_Timer_IncMillis:
 11718                           
 11719                           	psect	text53
 11720  0CEF                     __ptext53:	
 11721 ;; *************** function _FR_Timer_IncMicros *****************
 11722 ;; Defined at:
 11723 ;;		line 59 in file "FR_Timer.c"
 11724 ;; Parameters:    Size  Location     Type
 11725 ;;		None
 11726 ;; Auto vars:     Size  Location     Type
 11727 ;;		None
 11728 ;; Return value:  Size  Location     Type
 11729 ;;                  1    wreg      void 
 11730 ;; Registers used:
 11731 ;;		wreg
 11732 ;; Tracked objects:
 11733 ;;		On entry : 0/0
 11734 ;;		On exit  : 0/0
 11735 ;;		Unchanged: 0/0
 11736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11741 ;;Total ram usage:        0 bytes
 11742 ;; Hardware stack levels used: 1
 11743 ;; This function calls:
 11744 ;;		Nothing
 11745 ;; This function is called by:
 11746 ;;		_TMR0_CallBack
 11747 ;; This function uses a non-reentrant model
 11748 ;;
 11749                           
 11750  0CEF                     _FR_Timer_IncMicros:	
 11751                           ;psect for function _FR_Timer_IncMicros
 11752                           
 11753  0CEF                     i1l2939:	
 11754                           ;incstack = 0
 11755                           ; Regs used in _FR_Timer_IncMicros: [wreg]
 11756                           
 11757                           
 11758                           ;FR_Timer.c: 60:     micros += 1000;
 11759  0CEF  30E8               	movlw	232
 11760  0CF0  0021               	movlb	1	; select bank1
 11761  0CF1  07A8               	addwf	_micros@FR_Timer$F164^(0+128),f
 11762  0CF2  3003               	movlw	3
 11763  0CF3  3DA9               	addwfc	(_micros@FR_Timer$F164+1)^(0+128),f
 11764  0CF4  3000               	movlw	0
 11765  0CF5  3DAA               	addwfc	(_micros@FR_Timer$F164+2)^(0+128),f
 11766  0CF6  3000               	movlw	0
 11767  0CF7  3DAB               	addwfc	(_micros@FR_Timer$F164+3)^(0+128),f
 11768  0CF8                     i1l106:
 11769  0CF8  0008               	return
 11770  0CF9                     __end_of_FR_Timer_IncMicros:
 11771                           
 11772                           	psect	text54
 11773  0EB0                     __ptext54:	
 11774 ;; *************** function _EUSART_Transmit_ISR *****************
 11775 ;; Defined at:
 11776 ;;		line 181 in file "eusart.c"
 11777 ;; Parameters:    Size  Location     Type
 11778 ;;		None
 11779 ;; Auto vars:     Size  Location     Type
 11780 ;;		None
 11781 ;; Return value:  Size  Location     Type
 11782 ;;                  1    wreg      void 
 11783 ;; Registers used:
 11784 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11785 ;; Tracked objects:
 11786 ;;		On entry : 0/0
 11787 ;;		On exit  : 0/0
 11788 ;;		Unchanged: 0/0
 11789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11792 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11793 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11794 ;;Total ram usage:        1 bytes
 11795 ;; Hardware stack levels used: 1
 11796 ;; This function calls:
 11797 ;;		Nothing
 11798 ;; This function is called by:
 11799 ;;		_EUSART_Initialize
 11800 ;;		_INTERRUPT_InterruptManager
 11801 ;; This function uses a non-reentrant model
 11802 ;;
 11803                           
 11804  0EB0                     _EUSART_Transmit_ISR:	
 11805                           ;psect for function _EUSART_Transmit_ISR
 11806                           
 11807  0EB0                     i1l3365:	
 11808                           ;incstack = 0
 11809                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 11810                           
 11811                           
 11812                           ;eusart.c: 185:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 11813  0EB0  3008               	movlw	8
 11814  0EB1  0273               	subwf	_eusartTxBufferRemaining,w	;volatile
 11815  0EB2  1803               	skipnc
 11816  0EB3  2EB5               	goto	u127_21
 11817  0EB4  2EB6               	goto	u127_20
 11818  0EB5                     u127_21:
 11819  0EB5  2ECE               	goto	i1l662
 11820  0EB6                     u127_20:
 11821  0EB6                     i1l3367:
 11822                           
 11823                           ;eusart.c: 186:     {;eusart.c: 187:         TX1REG = eusartTxBuffer[eusartTxTail++];
 11824  0EB6  0874               	movf	_eusartTxTail,w
 11825  0EB7  3E28               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 11826  0EB8  0086               	movwf	6
 11827  0EB9  3001               	movlw	1	; select bank2/3
 11828  0EBA  0087               	movwf	7
 11829  0EBB  0801               	movf	1,w
 11830  0EBC  0023               	movlb	3	; select bank3
 11831  0EBD  009A               	movwf	26	;volatile
 11832  0EBE                     i1l3369:
 11833  0EBE  3001               	movlw	1
 11834  0EBF  00F7               	movwf	??_EUSART_Transmit_ISR
 11835  0EC0  0877               	movf	??_EUSART_Transmit_ISR,w
 11836  0EC1  07F4               	addwf	_eusartTxTail,f	;volatile
 11837  0EC2                     i1l3371:
 11838                           
 11839                           ;eusart.c: 188:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 11840  0EC2  3008               	movlw	8
 11841  0EC3  0274               	subwf	_eusartTxTail,w	;volatile
 11842  0EC4  1C03               	skipc
 11843  0EC5  2EC7               	goto	u128_21
 11844  0EC6  2EC8               	goto	u128_20
 11845  0EC7                     u128_21:
 11846  0EC7  2EC9               	goto	i1l3375
 11847  0EC8                     u128_20:
 11848  0EC8                     i1l3373:
 11849                           
 11850                           ;eusart.c: 189:         {;eusart.c: 190:             eusartTxTail = 0;
 11851  0EC8  01F4               	clrf	_eusartTxTail	;volatile
 11852  0EC9                     i1l3375:
 11853                           
 11854                           ;eusart.c: 192:         eusartTxBufferRemaining++;
 11855  0EC9  3001               	movlw	1
 11856  0ECA  00F7               	movwf	??_EUSART_Transmit_ISR
 11857  0ECB  0877               	movf	??_EUSART_Transmit_ISR,w
 11858  0ECC  07F3               	addwf	_eusartTxBufferRemaining,f	;volatile
 11859                           
 11860                           ;eusart.c: 193:     }
 11861  0ECD  2ED0               	goto	i1l665
 11862  0ECE                     i1l662:	
 11863                           ;eusart.c: 194:     else
 11864                           
 11865                           
 11866                           ;eusart.c: 195:     {;eusart.c: 196:         PIE1bits.TXIE = 0;
 11867  0ECE  0021               	movlb	1	; select bank1
 11868  0ECF  1211               	bcf	17,4	;volatile
 11869  0ED0                     i1l665:
 11870  0ED0  0008               	return
 11871  0ED1                     __end_of_EUSART_Transmit_ISR:
 11872                           
 11873                           	psect	text55
 11874  0FC7                     __ptext55:	
 11875 ;; *************** function _EUSART_Receive_ISR *****************
 11876 ;; Defined at:
 11877 ;;		line 202 in file "eusart.c"
 11878 ;; Parameters:    Size  Location     Type
 11879 ;;		None
 11880 ;; Auto vars:     Size  Location     Type
 11881 ;;		None
 11882 ;; Return value:  Size  Location     Type
 11883 ;;                  1    wreg      void 
 11884 ;; Registers used:
 11885 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11886 ;; Tracked objects:
 11887 ;;		On entry : 0/0
 11888 ;;		On exit  : 0/0
 11889 ;;		Unchanged: 0/0
 11890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11895 ;;Total ram usage:        0 bytes
 11896 ;; Hardware stack levels used: 1
 11897 ;; Hardware stack levels required when called: 2
 11898 ;; This function calls:
 11899 ;;		Absolute function
 11900 ;;		_EUSART_DefaultErrorHandler
 11901 ;;		_EUSART_DefaultFramingErrorHandler
 11902 ;;		_EUSART_DefaultOverrunErrorHandler
 11903 ;;		_EUSART_RxDataHandler
 11904 ;; This function is called by:
 11905 ;;		_EUSART_Initialize
 11906 ;;		_INTERRUPT_InterruptManager
 11907 ;; This function uses a non-reentrant model
 11908 ;;
 11909                           
 11910  0FC7                     _EUSART_Receive_ISR:	
 11911                           ;psect for function _EUSART_Receive_ISR
 11912                           
 11913  0FC7                     i1l3377:	
 11914                           ;incstack = 0
 11915                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11916                           
 11917                           
 11918                           ;eusart.c: 205:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 11919  0FC7  0872               	movf	_eusartRxHead,w	;volatile
 11920  0FC8  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 11921  0FC9  0086               	movwf	6
 11922  0FCA  0187               	clrf	7
 11923  0FCB  0181               	clrf	1
 11924  0FCC                     i1l3379:
 11925                           
 11926                           ;eusart.c: 207:     if(RC1STAbits.FERR){
 11927  0FCC  0023               	movlb	3	; select bank3
 11928  0FCD  1D1D               	btfss	29,2	;volatile
 11929  0FCE  2FD0               	goto	u129_21
 11930  0FCF  2FD1               	goto	u129_20
 11931  0FD0                     u129_21:
 11932  0FD0  2FDC               	goto	i1l3385
 11933  0FD1                     u129_20:
 11934  0FD1                     i1l3381:
 11935                           
 11936                           ;eusart.c: 208:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 11937  0FD1  0872               	movf	_eusartRxHead,w	;volatile
 11938  0FD2  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 11939  0FD3  0086               	movwf	6
 11940  0FD4  0187               	clrf	7
 11941  0FD5  1481               	bsf	1,1
 11942  0FD6                     i1l3383:
 11943                           
 11944                           ;eusart.c: 209:         EUSART_FramingErrorHandler();
 11945  0FD6  0021               	movlb	1	; select bank1
 11946  0FD7  0841               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 11947  0FD8  008A               	movwf	10
 11948  0FD9  0840               	movf	_EUSART_FramingErrorHandler^(0+128),w
 11949  0FDA  000A               	callw
 11950  0FDB  318F               	pagesel	$
 11951  0FDC                     i1l3385:
 11952                           
 11953                           ;eusart.c: 212:     if(RC1STAbits.OERR){
 11954  0FDC  0023               	movlb	3	; select bank3
 11955  0FDD  1C9D               	btfss	29,1	;volatile
 11956  0FDE  2FE0               	goto	u130_21
 11957  0FDF  2FE1               	goto	u130_20
 11958  0FE0                     u130_21:
 11959  0FE0  2FEC               	goto	i1l3391
 11960  0FE1                     u130_20:
 11961  0FE1                     i1l3387:
 11962                           
 11963                           ;eusart.c: 213:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 11964  0FE1  0872               	movf	_eusartRxHead,w	;volatile
 11965  0FE2  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 11966  0FE3  0086               	movwf	6
 11967  0FE4  0187               	clrf	7
 11968  0FE5  1501               	bsf	1,2
 11969  0FE6                     i1l3389:
 11970                           
 11971                           ;eusart.c: 214:         EUSART_OverrunErrorHandler();
 11972  0FE6  0021               	movlb	1	; select bank1
 11973  0FE7  083F               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 11974  0FE8  008A               	movwf	10
 11975  0FE9  083E               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 11976  0FEA  000A               	callw
 11977  0FEB  318F               	pagesel	$
 11978  0FEC                     i1l3391:
 11979                           
 11980                           ;eusart.c: 217:     if(eusartRxStatusBuffer[eusartRxHead].status){
 11981  0FEC  0872               	movf	_eusartRxHead,w	;volatile
 11982  0FED  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 11983  0FEE  0086               	movwf	6
 11984  0FEF  0187               	clrf	7
 11985  0FF0  0801               	movf	1,w
 11986  0FF1  1903               	btfsc	3,2
 11987  0FF2  2FF4               	goto	u131_21
 11988  0FF3  2FF5               	goto	u131_20
 11989  0FF4                     u131_21:
 11990  0FF4  2FFC               	goto	i1l3395
 11991  0FF5                     u131_20:
 11992  0FF5                     i1l3393:
 11993                           
 11994                           ;eusart.c: 218:         EUSART_ErrorHandler();
 11995  0FF5  0021               	movlb	1	; select bank1
 11996  0FF6  083D               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 11997  0FF7  008A               	movwf	10
 11998  0FF8  083C               	movf	_EUSART_ErrorHandler^(0+128),w
 11999  0FF9  000A               	callw
 12000  0FFA  318F               	pagesel	$
 12001                           
 12002                           ;eusart.c: 219:     } else {
 12003  0FFB  2FFF               	goto	i1l672
 12004  0FFC                     i1l3395:
 12005                           
 12006                           ;eusart.c: 220:         EUSART_RxDataHandler();
 12007  0FFC  318E  2640  318F   	fcall	_EUSART_RxDataHandler
 12008  0FFF                     i1l672:
 12009  0FFF  0008               	return
 12010  1000                     __end_of_EUSART_Receive_ISR:
 12011                           
 12012                           	psect	text56
 12013  0C6E                     __ptext56:	
 12014 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 12015 ;; Defined at:
 12016 ;;		line 244 in file "eusart.c"
 12017 ;; Parameters:    Size  Location     Type
 12018 ;;		None
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;		None
 12021 ;; Return value:  Size  Location     Type
 12022 ;;                  1    wreg      void 
 12023 ;; Registers used:
 12024 ;;		None
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;Total ram usage:        0 bytes
 12035 ;; Hardware stack levels used: 1
 12036 ;; This function calls:
 12037 ;;		Nothing
 12038 ;; This function is called by:
 12039 ;;		_EUSART_Initialize
 12040 ;;		_EUSART_Receive_ISR
 12041 ;; This function uses a non-reentrant model
 12042 ;;
 12043                           
 12044  0C6E                     _EUSART_DefaultOverrunErrorHandler:	
 12045                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 12046                           
 12047  0C6E                     i1l3189:	
 12048                           ;incstack = 0
 12049                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 12050                           
 12051                           
 12052                           ;eusart.c: 247:     RC1STAbits.CREN = 0;
 12053  0C6E  0023               	movlb	3	; select bank3
 12054  0C6F  121D               	bcf	29,4	;volatile
 12055                           
 12056                           ;eusart.c: 248:     RC1STAbits.CREN = 1;
 12057  0C70  161D               	bsf	29,4	;volatile
 12058  0C71                     i1l682:
 12059  0C71  0008               	return
 12060  0C72                     __end_of_EUSART_DefaultOverrunErrorHandler:
 12061                           
 12062                           	psect	text57
 12063  0003                     __ptext57:	
 12064 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 12065 ;; Defined at:
 12066 ;;		line 240 in file "eusart.c"
 12067 ;; Parameters:    Size  Location     Type
 12068 ;;		None
 12069 ;; Auto vars:     Size  Location     Type
 12070 ;;		None
 12071 ;; Return value:  Size  Location     Type
 12072 ;;                  1    wreg      void 
 12073 ;; Registers used:
 12074 ;;		None
 12075 ;; Tracked objects:
 12076 ;;		On entry : 0/0
 12077 ;;		On exit  : 0/0
 12078 ;;		Unchanged: 0/0
 12079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12084 ;;Total ram usage:        0 bytes
 12085 ;; Hardware stack levels used: 1
 12086 ;; This function calls:
 12087 ;;		Nothing
 12088 ;; This function is called by:
 12089 ;;		_EUSART_Initialize
 12090 ;;		_EUSART_Receive_ISR
 12091 ;; This function uses a non-reentrant model
 12092 ;;
 12093                           
 12094  0003                     _EUSART_DefaultFramingErrorHandler:	
 12095                           ;psect for function _EUSART_DefaultFramingErrorHandler
 12096                           
 12097  0003                     i1l679:	
 12098                           ;incstack = 0
 12099                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 12100                           
 12101  0003  0008               	return
 12102  0004                     __end_of_EUSART_DefaultFramingErrorHandler:
 12103                           
 12104                           	psect	text58
 12105  0C6A                     __ptext58:	
 12106 ;; *************** function _EUSART_DefaultErrorHandler *****************
 12107 ;; Defined at:
 12108 ;;		line 254 in file "eusart.c"
 12109 ;; Parameters:    Size  Location     Type
 12110 ;;		None
 12111 ;; Auto vars:     Size  Location     Type
 12112 ;;		None
 12113 ;; Return value:  Size  Location     Type
 12114 ;;                  1    wreg      void 
 12115 ;; Registers used:
 12116 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12117 ;; Tracked objects:
 12118 ;;		On entry : 0/0
 12119 ;;		On exit  : 0/0
 12120 ;;		Unchanged: 0/0
 12121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12126 ;;Total ram usage:        0 bytes
 12127 ;; Hardware stack levels used: 1
 12128 ;; Hardware stack levels required when called: 1
 12129 ;; This function calls:
 12130 ;;		_EUSART_RxDataHandler
 12131 ;; This function is called by:
 12132 ;;		_EUSART_Initialize
 12133 ;;		_EUSART_Receive_ISR
 12134 ;; This function uses a non-reentrant model
 12135 ;;
 12136                           
 12137  0C6A                     _EUSART_DefaultErrorHandler:	
 12138                           ;psect for function _EUSART_DefaultErrorHandler
 12139                           
 12140  0C6A                     i1l3191:	
 12141                           ;incstack = 0
 12142                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12143                           
 12144                           
 12145                           ;eusart.c: 255:     EUSART_RxDataHandler();
 12146  0C6A  318E  2640  318C   	fcall	_EUSART_RxDataHandler
 12147  0C6D                     i1l685:
 12148  0C6D  0008               	return
 12149  0C6E                     __end_of_EUSART_DefaultErrorHandler:
 12150                           
 12151                           	psect	text59
 12152  0E40                     __ptext59:	
 12153 ;; *************** function _EUSART_RxDataHandler *****************
 12154 ;; Defined at:
 12155 ;;		line 228 in file "eusart.c"
 12156 ;; Parameters:    Size  Location     Type
 12157 ;;		None
 12158 ;; Auto vars:     Size  Location     Type
 12159 ;;		None
 12160 ;; Return value:  Size  Location     Type
 12161 ;;                  1    wreg      void 
 12162 ;; Registers used:
 12163 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12164 ;; Tracked objects:
 12165 ;;		On entry : 0/0
 12166 ;;		On exit  : 0/0
 12167 ;;		Unchanged: 0/0
 12168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12171 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12172 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12173 ;;Total ram usage:        1 bytes
 12174 ;; Hardware stack levels used: 1
 12175 ;; This function calls:
 12176 ;;		Nothing
 12177 ;; This function is called by:
 12178 ;;		_EUSART_Receive_ISR
 12179 ;;		_EUSART_DefaultErrorHandler
 12180 ;; This function uses a non-reentrant model
 12181 ;;
 12182                           
 12183  0E40                     _EUSART_RxDataHandler:	
 12184                           ;psect for function _EUSART_RxDataHandler
 12185                           
 12186  0E40                     i1l3061:	
 12187                           ;incstack = 0
 12188                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12189                           
 12190                           
 12191                           ;eusart.c: 230:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 12192  0E40  0023               	movlb	3	; select bank3
 12193  0E41  0819               	movf	25,w	;volatile
 12194  0E42  00F7               	movwf	??_EUSART_RxDataHandler
 12195  0E43  0872               	movf	_eusartRxHead,w
 12196  0E44  3E20               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 12197  0E45  0086               	movwf	6
 12198  0E46  3001               	movlw	1	; select bank2/3
 12199  0E47  0087               	movwf	7
 12200  0E48  0877               	movf	??_EUSART_RxDataHandler,w
 12201  0E49  0081               	movwf	1
 12202  0E4A                     i1l3063:
 12203  0E4A  3001               	movlw	1
 12204  0E4B  00F7               	movwf	??_EUSART_RxDataHandler
 12205  0E4C  0877               	movf	??_EUSART_RxDataHandler,w
 12206  0E4D  07F2               	addwf	_eusartRxHead,f	;volatile
 12207  0E4E                     i1l3065:
 12208                           
 12209                           ;eusart.c: 231:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 12210  0E4E  3008               	movlw	8
 12211  0E4F  0272               	subwf	_eusartRxHead,w	;volatile
 12212  0E50  1C03               	skipc
 12213  0E51  2E53               	goto	u106_21
 12214  0E52  2E54               	goto	u106_20
 12215  0E53                     u106_21:
 12216  0E53  2E55               	goto	i1l3069
 12217  0E54                     u106_20:
 12218  0E54                     i1l3067:
 12219                           
 12220                           ;eusart.c: 232:     {;eusart.c: 233:         eusartRxHead = 0;
 12221  0E54  01F2               	clrf	_eusartRxHead	;volatile
 12222  0E55                     i1l3069:
 12223                           
 12224                           ;eusart.c: 235:     eusartRxCount++;
 12225  0E55  3001               	movlw	1
 12226  0E56  00F7               	movwf	??_EUSART_RxDataHandler
 12227  0E57  0877               	movf	??_EUSART_RxDataHandler,w
 12228  0E58  07F0               	addwf	_eusartRxCount,f	;volatile
 12229  0E59                     i1l676:
 12230  0E59  0008               	return
 12231  0E5A                     __end_of_EUSART_RxDataHandler:
 12232                           
 12233                           	psect	text60
 12234  0DB2                     __ptext60:	
 12235 ;; *************** function _CCP3_CaptureISR *****************
 12236 ;; Defined at:
 12237 ;;		line 94 in file "ccp3.c"
 12238 ;; Parameters:    Size  Location     Type
 12239 ;;		None
 12240 ;; Auto vars:     Size  Location     Type
 12241 ;;  module          2    3[COMMON] struct CCPR3Reg_tag
 12242 ;; Return value:  Size  Location     Type
 12243 ;;                  1    wreg      void 
 12244 ;; Registers used:
 12245 ;;		wreg, status,2, status,0, pclath, cstack
 12246 ;; Tracked objects:
 12247 ;;		On entry : 0/0
 12248 ;;		On exit  : 0/0
 12249 ;;		Unchanged: 0/0
 12250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12252 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12253 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12254 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12255 ;;Total ram usage:        3 bytes
 12256 ;; Hardware stack levels used: 1
 12257 ;; Hardware stack levels required when called: 1
 12258 ;; This function calls:
 12259 ;;		Absolute function
 12260 ;;		_CCP3_DefaultCallBack
 12261 ;; This function is called by:
 12262 ;;		_INTERRUPT_InterruptManager
 12263 ;; This function uses a non-reentrant model
 12264 ;;
 12265                           
 12266  0DB2                     _CCP3_CaptureISR:	
 12267                           ;psect for function _CCP3_CaptureISR
 12268                           
 12269  0DB2                     i1l3333:	
 12270                           ;incstack = 0
 12271                           ; Regs used in _CCP3_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
 12272                           
 12273                           
 12274                           ;ccp3.c: 96:     CCP3_PERIOD_REG_T module;;ccp3.c: 99:     PIR4bits.CCP3IF = 0;
 12275  0DB2  0020               	movlb	0	; select bank0
 12276  0DB3  1114               	bcf	20,2	;volatile
 12277  0DB4                     i1l3335:
 12278                           
 12279                           ;ccp3.c: 102:     module.ccpr3l = CCPR3L;
 12280  0DB4  0026               	movlb	6	; select bank6
 12281  0DB5  0811               	movf	17,w	;volatile
 12282  0DB6  00F9               	movwf	??_CCP3_CaptureISR
 12283  0DB7  0879               	movf	??_CCP3_CaptureISR,w
 12284  0DB8  00FA               	movwf	CCP3_CaptureISR@module
 12285                           
 12286                           ;ccp3.c: 103:     module.ccpr3h = CCPR3H;
 12287  0DB9  0812               	movf	18,w	;volatile
 12288  0DBA  00F9               	movwf	??_CCP3_CaptureISR
 12289  0DBB  0879               	movf	??_CCP3_CaptureISR,w
 12290  0DBC  00FB               	movwf	CCP3_CaptureISR@module+1
 12291  0DBD                     i1l3337:
 12292                           
 12293                           ;ccp3.c: 106:     CCP3_CallBack(module.ccpr3_16Bit);
 12294  0DBD  087B               	movf	CCP3_CaptureISR@module+1,w
 12295  0DBE  00F8               	movwf	CCP3_DefaultCallBack@capturedValue+1
 12296  0DBF  087A               	movf	CCP3_CaptureISR@module,w
 12297  0DC0  00F7               	movwf	CCP3_DefaultCallBack@capturedValue
 12298  0DC1  0021               	movlb	1	; select bank1
 12299  0DC2  084B               	movf	(_CCP3_CallBack+1)^(0+128),w
 12300  0DC3  008A               	movwf	10
 12301  0DC4  084A               	movf	_CCP3_CallBack^(0+128),w
 12302  0DC5  000A               	callw
 12303  0DC6  318D               	pagesel	$
 12304  0DC7                     i1l484:
 12305  0DC7  0008               	return
 12306  0DC8                     __end_of_CCP3_CaptureISR:
 12307                           
 12308                           	psect	text61
 12309  0002                     __ptext61:	
 12310 ;; *************** function _CCP3_DefaultCallBack *****************
 12311 ;; Defined at:
 12312 ;;		line 60 in file "ccp3.c"
 12313 ;; Parameters:    Size  Location     Type
 12314 ;;  capturedValu    2    0[COMMON] unsigned short 
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;		None
 12317 ;; Return value:  Size  Location     Type
 12318 ;;                  1    wreg      void 
 12319 ;; Registers used:
 12320 ;;		None
 12321 ;; Tracked objects:
 12322 ;;		On entry : 0/0
 12323 ;;		On exit  : 0/0
 12324 ;;		Unchanged: 0/0
 12325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12329 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12330 ;;Total ram usage:        2 bytes
 12331 ;; Hardware stack levels used: 1
 12332 ;; This function calls:
 12333 ;;		Nothing
 12334 ;; This function is called by:
 12335 ;;		_CCP3_Initialize
 12336 ;;		_CCP3_CaptureISR
 12337 ;; This function uses a non-reentrant model
 12338 ;;
 12339                           
 12340  0002                     _CCP3_DefaultCallBack:	
 12341                           ;psect for function _CCP3_DefaultCallBack
 12342                           
 12343  0002                     i1l478:	
 12344                           ;incstack = 0
 12345                           ; Regs used in _CCP3_DefaultCallBack: []
 12346                           
 12347  0002  0008               	return
 12348  0003                     __end_of_CCP3_DefaultCallBack:
 12349                           
 12350                           	psect	text62
 12351  0D9C                     __ptext62:	
 12352 ;; *************** function _CCP2_CaptureISR *****************
 12353 ;; Defined at:
 12354 ;;		line 94 in file "ccp2.c"
 12355 ;; Parameters:    Size  Location     Type
 12356 ;;		None
 12357 ;; Auto vars:     Size  Location     Type
 12358 ;;  module          2    3[COMMON] struct CCPR2Reg_tag
 12359 ;; Return value:  Size  Location     Type
 12360 ;;                  1    wreg      void 
 12361 ;; Registers used:
 12362 ;;		wreg, status,2, status,0, pclath, cstack
 12363 ;; Tracked objects:
 12364 ;;		On entry : 0/0
 12365 ;;		On exit  : 0/0
 12366 ;;		Unchanged: 0/0
 12367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12369 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12370 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12371 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12372 ;;Total ram usage:        3 bytes
 12373 ;; Hardware stack levels used: 1
 12374 ;; Hardware stack levels required when called: 1
 12375 ;; This function calls:
 12376 ;;		Absolute function
 12377 ;;		_CCP2_DefaultCallBack
 12378 ;; This function is called by:
 12379 ;;		_INTERRUPT_InterruptManager
 12380 ;; This function uses a non-reentrant model
 12381 ;;
 12382                           
 12383  0D9C                     _CCP2_CaptureISR:	
 12384                           ;psect for function _CCP2_CaptureISR
 12385                           
 12386  0D9C                     i1l3327:	
 12387                           ;incstack = 0
 12388                           ; Regs used in _CCP2_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
 12389                           
 12390                           
 12391                           ;ccp2.c: 96:     CCP2_PERIOD_REG_T module;;ccp2.c: 99:     PIR4bits.CCP2IF = 0;
 12392  0D9C  0020               	movlb	0	; select bank0
 12393  0D9D  1094               	bcf	20,1	;volatile
 12394  0D9E                     i1l3329:
 12395                           
 12396                           ;ccp2.c: 102:     module.ccpr2l = CCPR2L;
 12397  0D9E  0025               	movlb	5	; select bank5
 12398  0D9F  0815               	movf	21,w	;volatile
 12399  0DA0  00F9               	movwf	??_CCP2_CaptureISR
 12400  0DA1  0879               	movf	??_CCP2_CaptureISR,w
 12401  0DA2  00FA               	movwf	CCP2_CaptureISR@module
 12402                           
 12403                           ;ccp2.c: 103:     module.ccpr2h = CCPR2H;
 12404  0DA3  0816               	movf	22,w	;volatile
 12405  0DA4  00F9               	movwf	??_CCP2_CaptureISR
 12406  0DA5  0879               	movf	??_CCP2_CaptureISR,w
 12407  0DA6  00FB               	movwf	CCP2_CaptureISR@module+1
 12408  0DA7                     i1l3331:
 12409                           
 12410                           ;ccp2.c: 106:     CCP2_CallBack(module.ccpr2_16Bit);
 12411  0DA7  087B               	movf	CCP2_CaptureISR@module+1,w
 12412  0DA8  00F8               	movwf	CCP2_DefaultCallBack@capturedValue+1
 12413  0DA9  087A               	movf	CCP2_CaptureISR@module,w
 12414  0DAA  00F7               	movwf	CCP2_DefaultCallBack@capturedValue
 12415  0DAB  0021               	movlb	1	; select bank1
 12416  0DAC  084D               	movf	(_CCP2_CallBack+1)^(0+128),w
 12417  0DAD  008A               	movwf	10
 12418  0DAE  084C               	movf	_CCP2_CallBack^(0+128),w
 12419  0DAF  000A               	callw
 12420  0DB0  318D               	pagesel	$
 12421  0DB1                     i1l454:
 12422  0DB1  0008               	return
 12423  0DB2                     __end_of_CCP2_CaptureISR:
 12424                           
 12425                           	psect	text63
 12426  0C69                     __ptext63:	
 12427 ;; *************** function _CCP2_DefaultCallBack *****************
 12428 ;; Defined at:
 12429 ;;		line 60 in file "ccp2.c"
 12430 ;; Parameters:    Size  Location     Type
 12431 ;;  capturedValu    2    0[COMMON] unsigned short 
 12432 ;; Auto vars:     Size  Location     Type
 12433 ;;		None
 12434 ;; Return value:  Size  Location     Type
 12435 ;;                  1    wreg      void 
 12436 ;; Registers used:
 12437 ;;		None
 12438 ;; Tracked objects:
 12439 ;;		On entry : 0/0
 12440 ;;		On exit  : 0/0
 12441 ;;		Unchanged: 0/0
 12442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12447 ;;Total ram usage:        2 bytes
 12448 ;; Hardware stack levels used: 1
 12449 ;; This function calls:
 12450 ;;		Nothing
 12451 ;; This function is called by:
 12452 ;;		_CCP2_Initialize
 12453 ;;		_CCP2_CaptureISR
 12454 ;; This function uses a non-reentrant model
 12455 ;;
 12456                           
 12457  0C69                     _CCP2_DefaultCallBack:	
 12458                           ;psect for function _CCP2_DefaultCallBack
 12459                           
 12460  0C69                     i1l448:	
 12461                           ;incstack = 0
 12462                           ; Regs used in _CCP2_DefaultCallBack: []
 12463                           
 12464  0C69  0008               	return
 12465  0C6A                     __end_of_CCP2_DefaultCallBack:
 12466                           
 12467                           	psect	text64
 12468  0D86                     __ptext64:	
 12469 ;; *************** function _CCP1_CaptureISR *****************
 12470 ;; Defined at:
 12471 ;;		line 70 in file "ccp1.c"
 12472 ;; Parameters:    Size  Location     Type
 12473 ;;		None
 12474 ;; Auto vars:     Size  Location     Type
 12475 ;;  module          2    5[COMMON] struct CCPR1Reg_tag
 12476 ;; Return value:  Size  Location     Type
 12477 ;;                  1    wreg      void 
 12478 ;; Registers used:
 12479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12480 ;; Tracked objects:
 12481 ;;		On entry : 0/0
 12482 ;;		On exit  : 0/0
 12483 ;;		Unchanged: 0/0
 12484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12486 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12487 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12488 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12489 ;;Total ram usage:        3 bytes
 12490 ;; Hardware stack levels used: 1
 12491 ;; Hardware stack levels required when called: 2
 12492 ;; This function calls:
 12493 ;;		Absolute function
 12494 ;;		_CCP1_DefaultCallBack
 12495 ;; This function is called by:
 12496 ;;		_INTERRUPT_InterruptManager
 12497 ;; This function uses a non-reentrant model
 12498 ;;
 12499                           
 12500  0D86                     _CCP1_CaptureISR:	
 12501                           ;psect for function _CCP1_CaptureISR
 12502                           
 12503  0D86                     i1l3321:	
 12504                           ;incstack = 0
 12505                           ; Regs used in _CCP1_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12506                           
 12507                           
 12508                           ;ccp1.c: 72:     CCP1_PERIOD_REG_T module;;ccp1.c: 75:     PIR4bits.CCP1IF = 0;
 12509  0D86  0020               	movlb	0	; select bank0
 12510  0D87  1014               	bcf	20,0	;volatile
 12511  0D88                     i1l3323:
 12512                           
 12513                           ;ccp1.c: 78:     module.ccpr1l = CCPR1L;
 12514  0D88  0025               	movlb	5	; select bank5
 12515  0D89  0811               	movf	17,w	;volatile
 12516  0D8A  00FB               	movwf	??_CCP1_CaptureISR
 12517  0D8B  087B               	movf	??_CCP1_CaptureISR,w
 12518  0D8C  00FC               	movwf	CCP1_CaptureISR@module
 12519                           
 12520                           ;ccp1.c: 79:     module.ccpr1h = CCPR1H;
 12521  0D8D  0812               	movf	18,w	;volatile
 12522  0D8E  00FB               	movwf	??_CCP1_CaptureISR
 12523  0D8F  087B               	movf	??_CCP1_CaptureISR,w
 12524  0D90  00FD               	movwf	CCP1_CaptureISR@module+1
 12525  0D91                     i1l3325:
 12526                           
 12527                           ;ccp1.c: 82:     CCP1_CallBack(module.ccpr1_16Bit);
 12528  0D91  087D               	movf	CCP1_CaptureISR@module+1,w
 12529  0D92  00F8               	movwf	CCP1_DefaultCallBack@capturedValue+1
 12530  0D93  087C               	movf	CCP1_CaptureISR@module,w
 12531  0D94  00F7               	movwf	CCP1_DefaultCallBack@capturedValue
 12532  0D95  0021               	movlb	1	; select bank1
 12533  0D96  0853               	movf	(_CCP1_CallBack+1)^(0+128),w
 12534  0D97  008A               	movwf	10
 12535  0D98  0852               	movf	_CCP1_CallBack^(0+128),w
 12536  0D99  000A               	callw
 12537  0D9A  318D               	pagesel	$
 12538  0D9B                     i1l424:
 12539  0D9B  0008               	return
 12540  0D9C                     __end_of_CCP1_CaptureISR:
 12541                           
 12542                           	psect	text65
 12543  0F2B                     __ptext65:	
 12544 ;; *************** function _CCP1_DefaultCallBack *****************
 12545 ;; Defined at:
 12546 ;;		line 22 in file "ccp1.c"
 12547 ;; Parameters:    Size  Location     Type
 12548 ;;  capturedValu    2    0[COMMON] unsigned short 
 12549 ;; Auto vars:     Size  Location     Type
 12550 ;;		None
 12551 ;; Return value:  Size  Location     Type
 12552 ;;                  1    wreg      void 
 12553 ;; Registers used:
 12554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12555 ;; Tracked objects:
 12556 ;;		On entry : 0/0
 12557 ;;		On exit  : 0/0
 12558 ;;		Unchanged: 0/0
 12559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12560 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12562 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12563 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12564 ;;Total ram usage:        4 bytes
 12565 ;; Hardware stack levels used: 1
 12566 ;; Hardware stack levels required when called: 1
 12567 ;; This function calls:
 12568 ;;		_JSN_GetLastTrig
 12569 ;; This function is called by:
 12570 ;;		_CCP1_Initialize
 12571 ;;		_CCP1_CaptureISR
 12572 ;; This function uses a non-reentrant model
 12573 ;;
 12574                           
 12575  0F2B                     _CCP1_DefaultCallBack:	
 12576                           ;psect for function _CCP1_DefaultCallBack
 12577                           
 12578  0F2B                     i1l3159:	
 12579                           ;incstack = 0
 12580                           ; Regs used in _CCP1_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12581                           
 12582                           
 12583                           ;ccp1.c: 22: static void CCP1_DefaultCallBack(uint16_t capturedValue);ccp1.c: 23: {;ccp1
      +                          .c: 24:     switch(PORTCbits.RC5) {
 12584  0F2B  2F49               	goto	i1l3169
 12585  0F2C                     i1l3161:
 12586                           
 12587                           ;ccp1.c: 27:             ticksUp = capturedValue;
 12588  0F2C  0878               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 12589  0F2D  0021               	movlb	1	; select bank1
 12590  0F2E  00D1               	movwf	(_ticksUp+1)^(0+128)
 12591  0F2F  0877               	movf	CCP1_DefaultCallBack@capturedValue,w
 12592  0F30  00D0               	movwf	_ticksUp^(0+128)
 12593                           
 12594                           ;ccp1.c: 28:             break;
 12595  0F31  2F5C               	goto	i1l418
 12596  0F32                     i1l3163:
 12597                           
 12598                           ;ccp1.c: 31:             ticksDown = capturedValue;
 12599  0F32  0878               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 12600  0F33  0021               	movlb	1	; select bank1
 12601  0F34  00CF               	movwf	(_ticksDown+1)^(0+128)
 12602  0F35  0877               	movf	CCP1_DefaultCallBack@capturedValue,w
 12603  0F36  00CE               	movwf	_ticksDown^(0+128)
 12604  0F37                     i1l3165:
 12605                           
 12606                           ;ccp1.c: 32:             JSN_GetLastTrig()->echoHighTime = ((ticksDown - ticksUp)>>1);
 12607  0F37  0850               	movf	_ticksUp^(0+128),w
 12608  0F38  024E               	subwf	_ticksDown^(0+128),w
 12609  0F39  00F9               	movwf	??_CCP1_DefaultCallBack
 12610  0F3A  0851               	movf	(_ticksUp+1)^(0+128),w
 12611  0F3B  3B4F               	subwfb	(_ticksDown+1)^(0+128),w
 12612  0F3C  00FA               	movwf	??_CCP1_DefaultCallBack+1
 12613  0F3D  36FA               	lsrf	??_CCP1_DefaultCallBack+1,f
 12614  0F3E  0CF9               	rrf	??_CCP1_DefaultCallBack,f
 12615  0F3F  3187  27FE  318F   	fcall	_JSN_GetLastTrig
 12616  0F42  0086               	movwf	6
 12617  0F43  0187               	clrf	7
 12618  0F44  0879               	movf	??_CCP1_DefaultCallBack,w
 12619  0F45  3FC0               	movwi [0]fsr1
 12620  0F46  087A               	movf	??_CCP1_DefaultCallBack+1,w
 12621  0F47  3FC1               	movwi [1]fsr1
 12622                           
 12623                           ;ccp1.c: 33:             break;
 12624  0F48  2F5C               	goto	i1l418
 12625  0F49                     i1l3169:
 12626  0F49  0020               	movlb	0	; select bank0
 12627  0F4A  0E0E               	swapf	14,w	;volatile
 12628  0F4B  0C89               	rrf	9,f
 12629  0F4C  3901               	andlw	1
 12630  0F4D  00F9               	movwf	??_CCP1_DefaultCallBack
 12631  0F4E  01FA               	clrf	??_CCP1_DefaultCallBack+1
 12632                           
 12633                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12634                           ; Switch size 1, requested type "simple"
 12635                           ; Number of cases is 1, Range of values is 0 to 0
 12636                           ; switch strategies available:
 12637                           ; Name         Instructions Cycles
 12638                           ; simple_byte            4     3 (average)
 12639                           ; direct_byte            8     6 (fixed)
 12640                           ; jumptable            260     6 (fixed)
 12641                           ;	Chosen strategy is simple_byte
 12642  0F4F  087A               	movf	??_CCP1_DefaultCallBack+1,w
 12643  0F50  3A00               	xorlw	0	; case 0
 12644  0F51  1903               	skipnz
 12645  0F52  2F54               	goto	i1l4193
 12646  0F53  2F5C               	goto	i1l418
 12647  0F54                     i1l4193:
 12648                           
 12649                           ; Switch size 1, requested type "simple"
 12650                           ; Number of cases is 2, Range of values is 0 to 1
 12651                           ; switch strategies available:
 12652                           ; Name         Instructions Cycles
 12653                           ; simple_byte            7     4 (average)
 12654                           ; direct_byte           10     6 (fixed)
 12655                           ; jumptable            260     6 (fixed)
 12656                           ;	Chosen strategy is simple_byte
 12657  0F54  0879               	movf	??_CCP1_DefaultCallBack,w
 12658  0F55  3A00               	xorlw	0	; case 0
 12659  0F56  1903               	skipnz
 12660  0F57  2F32               	goto	i1l3163
 12661  0F58  3A01               	xorlw	1	; case 1
 12662  0F59  1903               	skipnz
 12663  0F5A  2F2C               	goto	i1l3161
 12664  0F5B  2F5C               	goto	i1l418
 12665  0F5C                     i1l418:
 12666  0F5C  0008               	return
 12667  0F5D                     __end_of_CCP1_DefaultCallBack:
 12668                           
 12669                           	psect	text66
 12670  07FE                     __ptext66:	
 12671 ;; *************** function _JSN_GetLastTrig *****************
 12672 ;; Defined at:
 12673 ;;		line 125 in file "JSN_Sensor.c"
 12674 ;; Parameters:    Size  Location     Type
 12675 ;;		None
 12676 ;; Auto vars:     Size  Location     Type
 12677 ;;		None
 12678 ;; Return value:  Size  Location     Type
 12679 ;;                  1    wreg      PTR struct .
 12680 ;; Registers used:
 12681 ;;		wreg
 12682 ;; Tracked objects:
 12683 ;;		On entry : 0/0
 12684 ;;		On exit  : 0/0
 12685 ;;		Unchanged: 0/0
 12686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12691 ;;Total ram usage:        0 bytes
 12692 ;; Hardware stack levels used: 1
 12693 ;; This function calls:
 12694 ;;		Nothing
 12695 ;; This function is called by:
 12696 ;;		_CCP1_DefaultCallBack
 12697 ;; This function uses a non-reentrant model
 12698 ;;
 12699                           
 12700  07FE                     _JSN_GetLastTrig:	
 12701                           ;psect for function _JSN_GetLastTrig
 12702                           
 12703  07FE                     i1l2915:	
 12704                           ;incstack = 0
 12705                           ; Regs used in _JSN_GetLastTrig: [wreg]
 12706                           
 12707                           
 12708                           ;JSN_Sensor.c: 126:     return lastTrig;
 12709  07FE  0876               	movf	_lastTrig,w
 12710  07FF                     i1l71:
 12711  07FF  0008               	return
 12712  0800                     __end_of_JSN_GetLastTrig:
 12713  007E                     btemp	set	126	;btemp
 12714  007E                     int$flags	set	126
 12715  007E                     wtemp0	set	126
 12716                           
 12717                           	psect	idloc
 12718                           
 12719                           ;Config register IDLOC0 @ 0x8000
 12720                           ;	unspecified, using default values
 12721  8000                     	org	32768
 12722  8000  3FFF               	dw	16383
 12723                           
 12724                           ;Config register IDLOC1 @ 0x8001
 12725                           ;	unspecified, using default values
 12726  8001                     	org	32769
 12727  8001  3FFF               	dw	16383
 12728                           
 12729                           ;Config register IDLOC2 @ 0x8002
 12730                           ;	unspecified, using default values
 12731  8002                     	org	32770
 12732  8002  3FFF               	dw	16383
 12733                           
 12734                           ;Config register IDLOC3 @ 0x8003
 12735                           ;	unspecified, using default values
 12736  8003                     	org	32771
 12737  8003  3FFF               	dw	16383
 12738                           
 12739                           	psect	config
 12740                           
 12741                           ;Config register CONFIG1 @ 0x8007
 12742                           ;	FEXTOSC External Oscillator mode Selection bits
 12743                           ;	FEXTOSC = OFF, Oscillator not enabled
 12744                           ;	Power-up default value for COSC bits
 12745                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 12746                           ;	Clock Out Enable bit
 12747                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 12748                           ;	Clock Switch Enable bit
 12749                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12750                           ;	Fail-Safe Clock Monitor Enable
 12751                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 12752  8007                     	org	32775
 12753  8007  3F8C               	dw	16268
 12754                           
 12755                           ;Config register CONFIG2 @ 0x8008
 12756                           ;	Master Clear Enable bit
 12757                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 12758                           ;	Power-up Timer Enable bit
 12759                           ;	PWRTE = OFF, PWRT disabled
 12760                           ;	Watchdog Timer Enable bits
 12761                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 12762                           ;	Low-power BOR enable bit
 12763                           ;	LPBOREN = OFF, ULPBOR disabled
 12764                           ;	Brown-out Reset Enable bits
 12765                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 12766                           ;	Brown-out Reset Voltage selection bit
 12767                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 12768                           ;	PPSLOCK bit One-Way Set Enable bit
 12769                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 12770                           ;	Stack Overflow/Underflow Reset Enable bit
 12771                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 12772                           ;	Debugger enable bit
 12773                           ;	DEBUG = OFF, Background debugger disabled
 12774  8008                     	org	32776
 12775  8008  3FF3               	dw	16371
 12776                           
 12777                           ;Config register CONFIG3 @ 0x8009
 12778                           ;	User NVM self-write protection bits
 12779                           ;	WRT = OFF, Write protection off
 12780                           ;	Low Voltage Programming Enable bit
 12781                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 12782  8009                     	org	32777
 12783  8009  3FFF               	dw	16383
 12784                           
 12785                           ;Config register CONFIG4 @ 0x800A
 12786                           ;	User NVM Program Memory Code Protection bit
 12787                           ;	CP = OFF, User NVM code protection disabled
 12788                           ;	Data NVM Memory Code Protection bit
 12789                           ;	CPD = OFF, Data NVM code protection disabled
 12790  800A                     	org	32778
 12791  800A  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         130
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     80      80
    BANK1            80     14      77
    BANK2            80      0      60
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1918$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    S1918$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP3_DefaultCallBack(), 

    CCP2_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP2_DefaultCallBack(), 

    CCP2_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP2_DefaultCallBack(), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP1_DefaultCallBack(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    sp__JSN_GetLastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK1[6]), 

    JSN_Sensor_GetDistance@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK1[6]), 

    JSN_Sensor_Trig@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK1[6]), 

    lastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK1[6]), 

    JSN_Sensor_Init@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK1[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _TMR1_ISR->_TMR1_WriteTimer
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _CCP3_CaptureISR->_CCP3_DefaultCallBack
    _CCP2_CaptureISR->_CCP2_DefaultCallBack
    _CCP1_CaptureISR->_CCP1_DefaultCallBack

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _CCP3_Initialize->_CCP3_SetCallBack
    _CCP2_Initialize->_CCP2_SetCallBack
    _JSN_Sensor_Trig->_FR_Timer_GetMicros
    _FR_Timer_GetMicros->_TMR0_ReadTimer
    _JSN_Sensor_GetDistance->___lldiv
    ___lldiv->___lmul
    _JSN_Library_Init->_JSN_Sensor_Init
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _JSN_Sensor_Init->_SetPin
    _JSN_Sensor_Init->_WritePin
    _CCP1_Initialize->_CCP1_SetCallBack
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   13521
                                              2 BANK1     12    12      0
                 _FR_Timer_GetMillis
                      _FR_Timer_Init
                   _JSN_Library_Init
             _JSN_Sensor_GetDistance
                    _JSN_Sensor_Trig
                         _PIC16_Init
                             _SetPin
                           _WritePin
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6607
                                             76 BANK0      4     0      4
                                              0 BANK1      2     2      0
             _JSN_Sensor_GetDistance (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6436
                                             68 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    6001
                                             52 BANK0     16    14      2
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                24    16      8    4310
                                             28 BANK0     24    16      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3141
                                             19 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1411
                                             11 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3    1019
                                              3 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      75
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             18     2     16     311
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             26    10     16     314
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _PIC16_Init                                           0     0      0    1210
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0    1210
                    _CCP1_Initialize
                    _CCP2_Initialize
                    _CCP3_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Initialize                                    1     1      0     605
                                              2 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP3_Initialize                                      0     0      0     121
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP3_SetCallBack                                     2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP2_Initialize                                      0     0      0     121
                   _CCP2_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP2_SetCallBack                                     2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Trig                                      5     5      0    1040
                                              6 BANK0      5     5      0
                 _FR_Timer_GetMicros
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _FR_Timer_GetMicros                                   4     0      4      23
                                              2 BANK0      4     0      4
                     _TMR0_ReadTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_ReadTimer                                       2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_GetDistance                               5     3      2     795
                                             26 BANK0      5     3      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     316
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _JSN_Library_Init                                     2     2      0    2167
                                              9 BANK0      2     2      0
                    _CCP1_Initialize
                    _JSN_Sensor_Init
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR1_Initialize                                      0     0      0     121
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR1_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _JSN_Sensor_Init                                      5     3      2    1925
                                              4 BANK0      5     3      2
                             _SetPin
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _WritePin                                             4     3      1     852
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetPin                                               4     3      1     624
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _CCP1_Initialize                                      0     0      0     121
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP1_SetCallBack                                     2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _FR_Timer_Init                                        0     0      0     121
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _FR_Timer_GetMillis                                   4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0     584
                   Absolute function *
                    _CCP1_CaptureISR
                    _CCP2_CaptureISR
                    _CCP3_CaptureISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR0_CallBack                                       0     0      0       0
                 _FR_Timer_IncMicros
                 _FR_Timer_IncMillis
 ---------------------------------------------------------------------------------
 (13) _FR_Timer_IncMillis                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _FR_Timer_IncMicros                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CCP3_CaptureISR                                     3     3      0     100
                                              2 COMMON     3     3      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (12) _CCP3_DefaultCallBack                                2     0      2      53
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _CCP2_CaptureISR                                     3     3      0     100
                                              2 COMMON     3     3      0
                   Absolute function *
               _CCP2_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (12) _CCP2_DefaultCallBack                                2     0      2      53
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _CCP1_CaptureISR                                     3     3      0     144
                                              4 COMMON     3     3      0
                   Absolute function *
               _CCP1_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (12) _CCP1_DefaultCallBack                                4     2      2      97
                                              0 COMMON     4     2      2
                    _JSN_GetLastTrig
 ---------------------------------------------------------------------------------
 (13) _JSN_GetLastTrig                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FR_Timer_GetMillis
   _FR_Timer_Init
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _JSN_Library_Init
     _CCP1_Initialize
       _CCP1_SetCallBack
     _JSN_Sensor_Init
       _SetPin
       _WritePin
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _JSN_Sensor_GetDistance
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _JSN_Sensor_Trig
     _FR_Timer_GetMicros
       _TMR0_ReadTimer
     _WritePin
   _PIC16_Init
     _SYSTEM_Initialize
       _CCP1_Initialize
       _CCP2_Initialize
         _CCP2_SetCallBack
       _CCP3_Initialize
         _CCP3_SetCallBack
       _EUSART_Initialize
         _EUSART_SetErrorHandler
         _EUSART_SetFramingErrorHandler
         _EUSART_SetOverrunErrorHandler
         _EUSART_SetRxInterruptHandler
         _EUSART_SetTxInterruptHandler
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _TMR0_Initialize
       _TMR1_Initialize
       _WDT_Initialize
   _SetPin
   _WritePin
   _printf
     _JSN_Sensor_GetDistance (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc
             _strlen

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _CCP1_CaptureISR *
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
       _JSN_GetLastTrig
   _CCP2_CaptureISR *
     Absolute function(Fake) *
     _CCP2_DefaultCallBack *
   _CCP3_CaptureISR *
     Absolute function(Fake) *
     _CCP3_DefaultCallBack *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     _TMR0_CallBack
       _FR_Timer_IncMicros
       _FR_Timer_IncMillis
   _TMR1_ISR *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      E      4D       7       96.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3C       9       75.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E7      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E7      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Jan 29 22:08:52 2022

                ?_EUSART_SetRxInterruptHandler 0020                         ??_CCP3_DefaultCallBack 0079  
                                           l33 0D5B                                             l43 0553  
                                           l39 04D6                                             l48 04F3  
                                           l65 06CE                                             l68 0797  
                                           l94 0C75                                             l97 0D47  
                      __end_of_CCP1_Initialize 0DF7                                            l100 0E90  
                                          l320 0D19                                            l314 0EAF  
                                          l323 0C79                                            l421 0DF6  
                                          l317 0D15                                            l246 02FD  
                                          l326 0D25                                            l193 07D1  
                                          l514 0E3F                                            l355 0D70  
                                          l427 0CA6                                            l451 0E0E  
                                          l364 0C8D                                            l700 0CE5  
                                          l382 0C9D                                            l198 03B8  
                                          l457 0CB8                                            l481 0E26  
                                          l625 0714                                            l802 0FC6  
                                          l650 07E3                                            l547 0CAF  
                                          l653 07FD                                            l487 0CC1  
                                          l649 07D9                                            l691 0CDC  
                                          l659 0C94                                            l694 0CCA  
                                          l688 0CD3                                            l697 0CEE  
                                          l971 0F90                                            l993 061F  
                                          u900 0561                                            u901 0560  
                                          u910 0574                                            u911 0573  
                                          u920 0596                                            u760 07D9  
                                          u840 0E6E                                            u921 0595  
                                          u761 07D8                                            u841 0E6D  
                                          u850 0457                                            u930 05B4  
                                          u770 07DE                                            u931 05B3  
                                          u771 07DD                                            u860 0466  
                                          u780 07F8                                            u861 0465  
                                          u925 0592                                            u781 07F7  
                                          u870 0479                                            u871 0478  
                                          u880 04A3                                            u881 04A2  
                                          u890 04C2                                            u891 04C1  
                                          u885 049F                                _timer1ReloadVal 00C8  
                       ??_EUSART_RxDataHandler 0077                                            _pad 0620  
               ?_EUSART_SetFramingErrorHandler 0020                                            wreg 0009  
                                         l1200 05B4                                           l1207 05C4  
                                         l1420 0D85                                           l1190 04C2  
                 JSN_Sensor_GetDistance@Sensor 003E                                           l1503 0E74  
                                         l3121 04F3                                           l3113 04D5  
                                         l1450 0678                                           l4003 0D37  
                                         l3131 053F                                           l3115 04D6  
                                         l3211 05D9                                           l3133 0547  
                                         l3125 04FF                                           l3221 0609  
                                         l3213 05E4                                           l1197 04D2  
                                         l1445 063C                                           l1453 009C  
                                         l4021 03CB                                           l4013 03B9  
                                         l1470 0242                                           l3135 054F  
                                         l3127 0531                                           l3119 04DD  
                                         l3223 060A                                           l3215 05E8  
                                         l3207 05C5                                           l4007 0D71  
                                         l4031 0409                                           l4023 03D1  
                                         l4015 03BF                                           l1448 065E  
                                         l3129 0539                                           l3225 0611  
                                         l3217 05EF                                           l3209 05D6  
                                         l1449 066C                                           l1465 017F  
                                         l1457 00B9                                           l4009 0D76  
                                         l4041 043F                                           l4033 0417  
                                         l4025 03D7                                           l4017 03C2  
                                         l3219 0601                                           l3227 0617  
                                         l2603 0E5C                                           l4043 0443  
                                         l4035 041E                                           l4027 03DB  
                                         l4019 03C2                                           l2621 0471  
                                         l2613 044F                                           l2605 0E61  
                                         l1477 0F2A                                           l4037 0428  
                                         l4029 03EE                                           l2631 04B3  
                                         l2623 0475                                           l2615 045A  
                                         l2607 0E65                                           l4039 042E  
                                         l2801 034E                                           l2633 04B4  
                                         l2625 0479                                           l2617 0466  
                                         l2641 056C                                           l2561 07D4  
                                         l1489 0757                                           l1497 0EF9  
                                         l2609 0E6E                                           l2627 0481  
                                         l2619 0469                                           l2643 0570  
                                         l2635 0554                                           l2571 07F2  
                                         l2563 07D4                                           l3611 0C90  
                                         l2821 0371                                           l2813 0363  
                                         l2805 0355                                           l2901 02B6  
                                         l2629 04A3                                           l2645 0574  
                                         l2637 0561                                           l2573 07F8  
                                         l2565 07DE                                           l3621 072F  
                                         l3613 0715                                           l3701 014C  
                                         l4191 0380                                           l3711 0E27  
                                         l2647 0596                                           l2639 0564  
                                         l2575 07F9                                           l2567 07E4  
                                         l3623 074D                                           l3615 071B  
                                         l3631 0EE4                                           l3703 0159  
                                         l2817 036A                                           l2809 035C  
                                         l2761 0308                                           l2841 024D  
                                         l4185 04E5                                           l3721 0E3C  
                                         l3713 0E2B                                           l3801 0D14  
                                         l2649 05A6                                           l2569 07EE  
                                         l2577 07FB                                           l3617 0720  
                                         l3633 0EE9                                           l3641 0635  
                                         l3705 0167                                           l3731 0DE5  
                                         l3723 0DDF                                           l2827 0378  
                                         l2755 0300                                           l2907 02BD  
                                         l2835 0245                                           l4187 0508  
                                         l3715 0E2C                                           l2931 0C87  
                                         l3811 0DFC                                           l3803 0C76  
                                         l3619 0725                                           l3627 0ED3  
                                         l3651 0663                                           l3643 063A  
                                         l3635 0622                                           l3707 016C  
                                         l3741 0D61                                           l3733 0DED  
                                         l3725 0DE2                                           l2781 032B  
                                         l2773 031D                                           l2765 030F  
                                         l2757 0301                                           l4189 02C5  
                                         l2861 0270                                           l2853 0262  
                                         l2845 0254                                           l2837 0246  
                                         l3717 0E33                                           l3813 0DFD  
                                         l3805 0DF7                                           l3661 0CB9  
                                         l3821 0E0F                                           l3629 0ED6  
                                         l3645 063F                                           l3637 0627  
                                         ?_pad 0033                                           l3655 0C95  
                                         l3743 0D62                                           l3735 0DF2  
                                         l3727 0DE3                                           l3663 0CA7  
                                         l3719 0E34                                           l3911 0E75  
                                         l3815 0E05                                           l3807 0DFA  
                                         l3831 0E1D                                           l3823 0E12  
                                         l3671 0CD4                                           l3751 0D1A  
                                         l3647 064B                                           l3639 0630  
                                         l3903 021F                                           l3745 0D63  
                                         l3657 0C9E                                           l3737 0DF4  
                                         l3729 0DE4                                           l2793 0340  
                                         l2785 0332                                           l2777 0324  
                                         l2769 0316                                           l2881 0293  
                                         l2873 0285                                           l2865 0277  
                                         l2857 0269                                           l2849 025B  
                                         l3921 0F6A                                           l3817 0E0A  
                                         l3809 0DFB                                           l3833 0E22  
                                         l3825 0E13                                           l3673 0CC2  
                                         l3665 0CDD                                           l3841 06D9  
                                         l3761 0F91                                           l3753 0D1C  
                                         l3649 0650                                           l3681 00B1  
                                         l3905 0238                                           l3747 0D65  
                                         l3739 0D5C                                           l3923 0F72  
                                         l3659 0CB0                                           l3819 0E0C  
                                         l3835 0E24                                           l3827 0E14  
                                         l3667 0CE6                                           l3851 06EC  
                                         l3843 06E3                                           l3771 0F9F  
                                         l3763 0F95                                           l3755 0D1E  
                                         l3915 0E91                                           l3691 0104  
                                         l3683 00C1                                           l3675 0093  
                                         l3931 0EFC                                           l3749 0D6D  
                                         l2797 0347                                           l2789 0339  
                                         l2893 02A8                                           l2885 029A  
                                         l2877 028C                                           l2869 027E  
                                         l3925 0F79                                           l3917 0F5D  
                                         l3829 0E15                                           l3669 0CCB  
                                         l3861 0708                                           l3853 06EE  
                                         l3845 06E6                                           l3837 06CF  
                                         l3781 0FB2                                           l3773 0FA1  
                                         l3765 0F98                                           l3757 0D20  
                                         l3693 0108                                           l3685 00D5  
                                         l3677 0098                                           l3933 0F00  
                                         l3943 0D48                                           l3927 0F88  
                                         l3919 0F66                                           l3951 068E  
                                         l3863 0709                                           l3855 06F6  
                                         l3847 06E8                                           l3839 06D1  
                                         l3791 0FBE                                           l3783 0FB5  
                                         l3775 0FAB                                           l3767 0F9A  
                                         l3759 0D22                                           l3695 010C  
                                         l3687 00D8                                           l3679 00AB  
                                         l3871 0193                                           l3935 0F04  
                                         l2897 02AF                                           l2889 02A1  
                                         l3945 0D4E                                           l3961 075A  
                                         l3953 0699                                           l3865 070A  
                                         l3857 06FE                                           l3849 06EA  
                                         l3793 0FC0                                           l3785 0FB7  
                                         l3777 0FAE                                           l3769 0F9C  
                                         l3689 00DD                                           l3697 0139  
                                         l3881 01BE                                           l3873 019B  
                                         l3937 0F18                                           l3963 078F  
                                         l3955 06BF                                           l3867 0712  
                                         l3859 0706                                           l3795 0FC3  
                                         l3787 0FB9                                           l3779 0FB0  
                                         l3971 07A5                                           l3699 0140  
                                         l3891 0203                                           l3883 01D0  
                                         l3875 01A0                                           l3939 0F22  
                                         l3957 06C9                                           l3949 067B  
                                         l3797 0D0E                                           l3789 0FBC  
                                         l3981 07B8                                           l3973 07A7  
                                         l3893 020E                                           l3877 01A4  
                                         l3869 0182                                           l3799 0D12  
                                         l3991 07C4                                           l3983 07BB  
                                         l3975 07A9                                           l3967 0798  
                                         l3879 01B6                                           l3887 01EA  
                                         l3993 07CC                                           l3985 07BD  
                                         l3977 07AC                                           l3969 07A2  
                                         l3889 01FB                                           l3897 0214  
                                         l3995 07CF                                           l3987 07BF  
                                         l3979 07AE                                           l3899 021C  
                                         l3997 07D0                                           l3989 07C2  
                                         l3999 0C72                                           STR_1 1000  
                                         u1210 0617                                           u1211 0616  
                                         u1205 060B                                           u1150 05D6  
                                         u1151 05D5                                           u1170 05E8  
                                         u1171 05E7                                           u1165 05DA  
                                         _LATA 010C                                           u1190 0601  
                                         u1510 071B                                           _LATB 010D  
                                         u1191 0600                                           u1511 071A  
                                         _LATC 010E                                           u1520 0720  
                                         u1600 0098                                           u1185 05E9  
                                         u1521 071F                                           u1601 0097  
                                         u1530 072F                                           u1610 00AB  
                                         u1195 05FD                                           u1531 072E  
                                         u1611 00AA                                           u1540 074D  
                                         u1620 0140                                           u1700 01FB  
                                         u1541 074C                                           u1621 013F  
                                         u1701 01FA                                           u1710 0F6A  
                                         u1550 0EF9                                           u1630 014C  
                                         u1711 0F69                                           u1551 0EF8  
                                         u1631 014B                                           u1615 00A7  
                                         u1560 0627                                           u1640 0159  
                                         u1545 0749                                           u1561 0626  
                                         u1641 0158                                           u1570 0635  
                                         u1650 0167                                           u1571 0634  
                                         u1651 0166                                           u1740 0F88  
                                         u1580 065E                                           u1660 016C  
                                         u1741 0F87                                           u1725 0F73  
                                         u1581 065D                                           u1661 016B  
                                         u1645 0155                                           u1670 0D19  
                                         u1590 0663                                           u1750 0F22  
                                         _PIE0 0090                                           u1735 0F7A  
                                         u1671 0D18                                           u1591 0662  
                                         u1655 0163                                           u1751 0F21  
                                         _PIE1 0091                                           u1760 06BF  
                                         u1680 0193                                           _PIE2 0092  
                                         u1761 06BE                                           u1585 065A  
                                         u1681 0192                                           _PIE3 0093  
                                         u1690 01B6                                           u1770 0409  
                                         _PIE4 0094                                           u1691 01B5  
                                         u1771 0408                                           u1780 0417  
                                         u1781 0416                                           u1790 0428  
                                         u1791 0427                                           _PMD0 0911  
                                         _PMD1 0912                                           _PMD2 0913  
                                         _PMD3 0914                                           _PMD4 0915  
                                         _PMD5 0916                                           i1l71 07FF  
                                         _PIR0 0010                                           _PIR1 0011  
                                         _PIR2 0012                                           _PIR3 0013  
                                         _PIR4 0014                                           _PLLR 48E0  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                           _dbuf 013C  
                      __end_of_CCP2_Initialize 0E0F                                           _main 03B9  
                                         _prec 00B8                                           _nout 00B4  
                                         pad@i 0037                                           pad@p 0034  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 0039                                           btemp 007E  
                                         _utoa 0091                                           start 0074  
                     __end_of_CCP1_SetCallBack 0CA7                     ??_TMR1_SetInterruptHandler 0022  
                             ?_CCP1_CaptureISR 0077                           _micros@FR_Timer$F164 00A8  
                                        ??_pad 0036                        __end_of_TMR0_Initialize 0D71  
                                ?_EUSART_Write 0077                  __end_of_OSCILLATOR_Initialize 0D1A  
                            ?_JSN_Library_Init 0077                        __end_of_CCP3_Initialize 0E27  
                                        ?_main 0077                                __end_of___lldiv 0620  
                                        ?_utoa 003C                                __end_of___lodiv 04D3  
                                        _T1CON 001B                                __end_of___lomod 05C5  
                                        i1l103 0D02                                          i1l106 0CF8  
                                        i1l424 0D9B                                          i1l418 0F5C  
                                        i1l540 0D0D                                          i1l454 0DB1  
                                        i1l448 0C69                                          i1l376 0DDE  
                                        i1l528 0D36                                          i1l379 0C86  
                                        i1l484 0DC7                                          i1l740 0042  
                                        i1l741 0072                                          i1l733 0014  
                                        i1l478 0002                                          i1l662 0ECE  
                                        i1l742 0050                                          i1l672 0FFF  
                                        i1l744 0061                                          i1l736 0026  
                                        i1l665 0ED0                                          i1l682 0C71  
                                        i1l738 0034                                          i1l747 0072  
                                        i1l676 0E59                                          i1l685 0C6D  
                                        i1l679 0003                                          _OSCEN 091D  
                                 vfpfcnvrt@fmt 0054                             ??_JSN_Library_Init 0029  
                                        _TMR0H 0016                                   vfpfcnvrt@llu 005B  
                                        _TMR1H 001A                                          _TMR0L 0015  
                                        _TMR1L 0019                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _RXPPS 0E24                            ___lmul@multiplicand 0024  
                    ?_TMR0_SetInterruptHandler 0020                                          _Sens1 00D9  
                                        _Sens2 0136                                          _Sens3 0130  
                             __end_of_TMR0_ISR 0DDF                               __end_of_TMR1_ISR 0D0E  
                             ?_CCP2_CaptureISR 0077                                          _flags 00BA  
                               _WDT_Initialize 0C76                                          _fputc 0715  
                                        _fputs 0ED1                                          pad@fp 003B  
                                        _width 00B6                                          _putch 0C8E  
                      __end_of_TMR1_Initialize 0E40                                          pclath 000A  
                                        utoa@d 003C                                          utoa@i 0052  
                                        utoa@n 004A                                          utoa@p 0046  
                                        utoa@w 0048                                          status 0003  
                                        wtemp0 007E                          __end_of_FR_Timer_Init 0C76  
                             ___lodiv@dividend 0028                                _TMR1_WriteTimer 0D26  
                     __end_of_CCP2_SetCallBack 0CB9                                __initialization 0076  
                             ?_CCP3_CaptureISR 0077                                   __end_of_main 044F  
                                 __end_of_utoa 0180                                 ??_EUSART_Write 0020  
                  ?_INTERRUPT_InterruptManager 0077                 ??_EUSART_SetRxInterruptHandler 0022  
                                       ??_main 00E1                               ?_CCP1_Initialize 0077  
                                       ??_utoa 0044                               ___lodiv@quotient 0031  
                       __end_of_WDT_Initialize 0C7A                                _JSN_GetLastTrig 07FE  
    __end_of_EUSART_DefaultFramingErrorHandler 0004            ??_EUSART_DefaultFramingErrorHandler 0077  
           ?_EUSART_DefaultFramingErrorHandler 0077              _EUSART_DefaultFramingErrorHandler 0003  
                   _EUSART_OverrunErrorHandler 00BE                                         ?_fputc 0023  
                                       ?_fputs 002B                                         _CCPR1H 0292  
                                       _CCPR2H 0296                                         _CCPR3H 0312  
                                       _CCPR1L 0291                                         _CCPR2L 0295  
                                       _CCPR3L 0311                                         _ANSELA 018C  
                                       ?_putch 0077                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _T0CON0 0017  
                                       _T0CON1 0018                                         _T1GCON 001C  
                                       _RC1REG 0199                               __end_of_WritePin 02FE  
                                       _RC1STA 019D                                         u110_20 0D2B  
                                       u110_21 0D2A                        TMR1_WriteTimer@timerVal 0077  
                                       _RC4PPS 0EA4                                         _ODCONA 028C  
                                       _ODCONB 028D                                         _ODCONC 028E  
                                       i1l3061 0E40                                         i1l3063 0E4A  
                                       i1l3161 0F2C                                         i1l3321 0D86  
                                       i1l3065 0E4E                                         i1l3313 0DC8  
                                       i1l3163 0F32                                         i1l3323 0D88  
                                       i1l3331 0DA7                                         i1l3067 0E54  
                                       i1l3315 0DCA                                         i1l3165 0F37  
                                       i1l3325 0D91                                         i1l3333 0DB2  
                                       i1l3069 0E55                                         i1l3157 0C80  
                                       i1l3317 0DD8                                         i1l3181 0D2E  
                                       i1l3341 0D05                                         i1l3159 0F2B  
                                       i1l3327 0D9C                                         i1l3335 0DB4  
                                       i1l3191 0C6A                                         i1l3319 0DDB  
                                       i1l3183 0D30                                         i1l3175 0D26  
                                       u106_20 0E54                                         u130_20 0FE1  
                                       i1l3169 0F49                                         i1l3329 0D9E  
                                       i1l3337 0DBD                                         u106_21 0E53  
                                       u130_21 0FE0                                         i1l3177 0D2B  
                                       i1l3185 0D32                                         i1l3441 000B  
                                       i1l3371 0EC2                                         i1l3187 0D34  
                                       i1l3179 0D2C                                         i1l3339 0D03  
                                       i1l3451 002B                                         i1l3443 0010  
                                       i1l3189 0C6E                                         i1l3381 0FD1  
                                       i1l3373 0EC8                                         i1l3365 0EB0  
                                       i1l3461 004C                                         i1l3453 0030  
                                       i1l3445 0018                                         i1l3391 0FEC  
                                       i1l3383 0FD6                                         i1l3375 0EC9  
                                       i1l3367 0EB6                                         i1l3463 0055  
                                       i1l3455 0039                                         i1l3447 001D  
                                       i1l3439 0006                                         u131_20 0FF5  
                                       i1l4193 0F54                                         i1l3393 0FF5  
                                       u131_21 0FF4                                         i1l3385 0FDC  
                                       i1l3377 0FC7                                         i1l3369 0EBE  
                                       i1l3465 005A                                         i1l3457 003E  
                                       i1l3449 0022                                         i1l2915 07FE  
                                       i1l3395 0FFC                                         i1l3387 0FE1  
                                       i1l3379 0FCC                                         i1l3467 0066  
                                       i1l3459 0047                                         i1l3389 0FE6  
                                       i1l3469 006B                                         i1l2935 0CF9  
                                       u124_20 0DD8                                         u140_20 0022  
                                       u124_21 0DD7                                         u140_21 0021  
                                       i1l2939 0CEF                                         u141_20 002B  
                                       u141_21 002A                                         u150_20 006B  
                                       u142_20 0030                                         u150_21 006A  
                                       u142_21 002F                                         u127_20 0EB6  
                                       u143_20 0039                                         u127_21 0EB5  
                                       u143_21 0038                                         u128_20 0EC8  
                                       u144_20 003E                                         u136_20 000B  
                                       u128_21 0EC7                                         u144_21 003D  
                                       u136_21 000A                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       u129_20 0FD1                                         u145_20 0047  
                                       u137_20 0010                                         u129_21 0FD0  
                                       u145_21 0046                                         u137_21 000F  
                                       u146_20 004C                                         u138_20 0018  
                                       u146_21 004B                                         u138_21 0017  
                                       u147_20 0055                                         u139_20 001D  
                                       u147_21 0054                                         u139_21 001C  
                                       u148_20 005A                                         u148_21 0059  
                                       u149_20 0066                                         u149_21 0065  
                                main@currMilli 00E9                                         _OSCFRQ 091F  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                               ?_CCP2_Initialize 0077  
                            ??_JSN_Sensor_Init 0026                              ??_JSN_Sensor_Trig 0026  
                                _CCP1_CallBack 00D2                       __end_of_CCP3_SetCallBack 0CC2  
                                       _SetPin 02FE                   _TMR1_DefaultInterruptHandler 0000  
                                _CCP2_CallBack 00CC                                   vfprintf@cfmt 006A  
                                       ___lmul 0F5D                                      ??___lldiv 0034  
                                    ??___lodiv 0030                                      ??___lomod 0030  
                                _CCP3_CallBack 00CA                            _EUSART_Transmit_ISR 0EB0  
                             ?_TMR0_Initialize 0077                                         _micros 00B0  
                                       _millis 00AC                                         _printf 0D71  
                                       pad@buf 0033                                  main@prevMilli 00E5  
                             ?_CCP3_Initialize 0077                                         _strlen 0E5A  
                                       fputc@c 0023                                 _PMD_Initialize 0D1A  
                                       fputs@c 002F                                         fputs@i 0030  
                                       fputs@s 0032              CCP2_DefaultCallBack@capturedValue 0077  
                              ?_WDT_Initialize 0077                          __end_of_TMR0_CallBack 0C87  
                             __end_of_vfprintf 0F2B                                         utoa@fp 0045  
     TMR1_SetInterruptHandler@InterruptHandler 0020       TMR0_SetInterruptHandler@InterruptHandler 0020  
                      __end_of_TMR1_WriteTimer 0D37                           ?_EUSART_Transmit_ISR 0077  
                             ?_TMR1_Initialize 0077                              _SYSTEM_Initialize 0E91  
                      __end_of__initialization 008D                             ?_SYSTEM_Initialize 0077  
         __end_of_EUSART_SetTxInterruptHandler 0CEF                   _EUSART_SetTxInterruptHandler 0CE6  
                                 ??_PIC16_Init 0023                                 __pcstackCOMMON 0077  
                          ??_SYSTEM_Initialize 0023                                      ?_TMR0_ISR 0077  
                                    ?_TMR1_ISR 0077                                  __end_of_fputc 0758  
                                __end_of_fputs 0EFA                                  __end_of_putch 0C95  
                       __end_of_PMD_Initialize 0D26                        __end_of_JSN_GetLastTrig 0800  
                        CCP3_CaptureISR@module 007A                          TMR0_ISR@CountCallBack 00D4  
                         _eusartRxStatusBuffer 00A0                 CCP3_SetCallBack@customCallBack 0020  
              ??_EUSART_SetOverrunErrorHandler 0022                             __end_of_PIC16_Init 07D2  
                                      ??_fputc 0026                      __end_of_SYSTEM_Initialize 0EB0  
                                      ??_fputs 002C                          ??_EUSART_Transmit_ISR 0077  
                                      ??_putch 0022                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 07FE  
                     ??_JSN_Sensor_GetDistance 003C                                        ?_SetPin 0020  
                            ?_CCP1_SetCallBack 0020                                     __pmaintext 03B9  
                ?_EUSART_SetTxInterruptHandler 0020               _EUSART_TxDefaultInterruptHandler 00C4  
             __end_of_TMR0_SetInterruptHandler 0C9E                                        ?___lmul 0020  
                                   ??_TMR0_ISR 0077                                     ??_TMR1_ISR 0079  
                           ??_CCP1_SetCallBack 0022                                     __pintentry 0004  
                                      _CCP1CAP 0294                                        _CCP2CAP 0298  
                                      _CCP3CAP 0314                                        _CCP1CON 0293  
                                      _CCP2CON 0297                                        _CCP3CON 0313  
                                      _CCP1PPS 0E14                                        _CCP2PPS 0E15  
                                      _CCP3PPS 0E16                                 ___lmul@product 0028  
                 ??_EUSART_DefaultErrorHandler 0078                                        ?_printf 006C  
                              ?_PMD_Initialize 0077                                      ?_WritePin 0020  
                                      ?_strlen 0020                                  _eusartRxCount 0070  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                                      _OSCCON1 0919                                        _OSCCON3 091B  
                                      _OSCTUNE 091E                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 0022                               ?_TMR1_WriteTimer 0077  
                             ___lomod@dividend 0028              CCP1_DefaultCallBack@capturedValue 0077  
                            ?_CCP2_SetCallBack 0020                                        ___lldiv 05C5  
                                      ___lodiv 044F                             ??_CCP2_SetCallBack 0022  
                                      ___lomod 0554                                      ?_vfprintf 0064  
                                   ??_WritePin 0021                                        __ptext1 0D71  
                                      __ptext2 0EFA                                        __ptext3 0180  
                                      __ptext4 0091                                        __ptext5 0620  
                                      __ptext6 0E5A                                        __ptext7 0ED1  
                                      __ptext8 0715                                        __ptext9 0C8E  
                             ?_JSN_GetLastTrig 0077                                      _T1CONbits 001B  
                        _OSCILLATOR_Initialize 0D0E                       ??_PIN_MANAGER_Initialize 0020  
                    ?_TMR1_SetInterruptHandler 0020                                        _ticksUp 00D0  
                              _JSN_Sensor_Init 04D3                                _JSN_Sensor_Trig 0679  
                                      clrloop0 0C7B                           end_of_initialization 008D  
        __end_of_EUSART_SetOverrunErrorHandler 0CDD                  _EUSART_SetOverrunErrorHandler 0CD4  
                                      fputc@fp 0025                                        fputs@fp 002B  
                            _EUSART_Initialize 06CF                                ___lldiv@divisor 002C  
                              ___lldiv@counter 0039                             ?_EUSART_Initialize 0077  
                            __end_of_vfpfcnvrt 0243                              ?_CCP3_SetCallBack 0020  
                        TMR0_ReadTimer@readVal 0021                   __end_of_CCP1_DefaultCallBack 0F5D  
                           ??_CCP3_SetCallBack 0022                                     ??_vfprintf 0067  
                               _TMR0_ReadTimer 0C87                                        strlen@a 0023  
                                      strlen@s 0024                            ??_EUSART_Initialize 0022  
                             ??_WDT_Initialize 0020                 ??_EUSART_SetTxInterruptHandler 0022  
                     _TMR0_SetInterruptHandler 0C95                                      _PORTAbits 000C  
                                    _PORTBbits 000D                                      _PORTCbits 000E  
                                    _TRISAbits 008C                                      _TRISBbits 008D  
                                    _TRISCbits 008E                      __end_of_EUSART_Initialize 0715  
                       __end_of_TMR0_ReadTimer 0C8E                                 __end_of_SetPin 03B9  
                               __end_of___lmul 0F91             __end_of_EUSART_DefaultErrorHandler 0C6E  
                   _EUSART_DefaultErrorHandler 0C6A                                    vfpfcnvrt@ap 0055  
                                  vfpfcnvrt@fp 0063                                   _EUSART_Write 07D2  
                      __end_of_JSN_Sensor_Init 0554                         _JSN_Sensor_GetDistance 0758  
                       ?_OSCILLATOR_Initialize 0077                        __end_of_JSN_Sensor_Trig 06CF  
                 __end_of_CCP2_DefaultCallBack 0C6A                                 __end_of_printf 0D86  
                               __end_of_strlen 0E75                            start_initialization 0076  
                              ___lodiv@divisor 0020                                ___lodiv@counter 0039  
               CCP2_SetCallBack@customCallBack 0020                                      SetPin@pin 0023  
                                  __end_of_pad 0679                              ??_CCP1_CaptureISR 007B  
 EUSART_SetRxInterruptHandler@interruptHandler 0020   EUSART_SetTxInterruptHandler@interruptHandler 0020  
                                  putch@txData 0022                               _JSN_Library_Init 0D48  
                   __end_of_FR_Timer_GetMicros 0E91                     __end_of_FR_Timer_GetMillis 0D48  
                                _FR_Timer_Init 0C72                 ?_EUSART_SetOverrunErrorHandler 0020  
                                     ??_SetPin 0021                     __end_of_FR_Timer_IncMicros 0CF9  
                   __end_of_FR_Timer_IncMillis 0D03                                    vfprintf@fmt 0064  
                   _EUSART_FramingErrorHandler 00C0                               ??_PMD_Initialize 0020  
                              ?_TMR0_ReadTimer 0077                                       ??___lmul 0028  
                            ??_CCP2_CaptureISR 0079                         _EUSART_SetErrorHandler 0CC2  
                       JSN_Sensor_Init@echoPin 0025                                    _CCPTMRSbits 029F  
                                     ??_printf 00DF                                       ??_strlen 0022  
                        CCP1_CaptureISR@module 007C                    __end_of_EUSART_Transmit_ISR 0ED1  
                                  __pbssCOMMON 0070                                      ___latbits 0002  
                       JSN_Sensor_Init@trigPin 0024                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00DF                              ??_CCP3_CaptureISR 0079  
                 __end_of_CCP3_DefaultCallBack 0003                           _CCP1_DefaultCallBack 0F2B  
                   __end_of_EUSART_Receive_ISR 1000               _EUSART_RxDefaultInterruptHandler 00C2  
                               ?_FR_Timer_Init 0077                          _TMR0_InterruptHandler 00D6  
                            ??_CCP1_Initialize 0022                                    WritePin@pin 0023  
                                  WritePin@val 0020                   __end_of_EUSART_RxDataHandler 0E5A  
                       _PIN_MANAGER_Initialize 0F91               __end_of_TMR1_SetInterruptHandler 0CB0  
            CCP3_DefaultCallBack@capturedValue 0077                                       ?___lldiv 002C  
                                     ?___lodiv 0020                                       ?___lomod 0020  
                                 _eusartRxHead 0072                                   _eusartTxHead 0075  
                                 _eusartRxTail 0071                                   _eusartTxTail 0074  
                 ??_INTERRUPT_InterruptManager 007E                               ?_JSN_Sensor_Init 0024  
                             ?_JSN_Sensor_Trig 0077                        _eusartTxBufferRemaining 0073  
                              ___lomod@divisor 0020                                       _BAUD1CON 019F  
                            ??_CCP2_Initialize 0022                                ___lomod@counter 0031  
                                _TMR0_CallBack 0C80                          ?_CCP1_DefaultCallBack 0077  
                               _eusartRxBuffer 0120                              ??_TMR0_Initialize 0022  
                               _eusartTxBuffer 0128                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0020                                       _LATBbits 010D  
                                     _LATCbits 010E                                      clear_ram0 0C7A  
                            ??_CCP3_Initialize 0022                                       _PIE0bits 0090  
                                     _PIE1bits 0091                                       _PIE4bits 0094  
                            _eusartRxLastError 00D8                           _CCP2_DefaultCallBack 0C69  
                   ??_TMR0_SetInterruptHandler 0022                                       _PIR0bits 0010  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0022  
                                    _ticksDown 00CE                                       _PIR4bits 0014  
                                     _TMR0_ISR 0DC8      __end_of_EUSART_DefaultOverrunErrorHandler 0C72  
          ??_EUSART_DefaultOverrunErrorHandler 0077             ?_EUSART_DefaultOverrunErrorHandler 0077  
            _EUSART_DefaultOverrunErrorHandler 0C6E                                       _TMR1_ISR 0D03  
                                    _vfpfcnvrt 0180                              ??_TMR1_Initialize 0022  
                               ?_TMR0_CallBack 0077                              ___lmul@multiplier 0020  
                              ??_FR_Timer_Init 0022                                       SetPin@io 0020  
                        ?_CCP2_DefaultCallBack 0077                          JSN_Sensor_Init@Sensor 0028  
                                   vfprintf@ap 0066                                     vfprintf@fp 0069  
                      ?_JSN_Sensor_GetDistance 003A                        ??_OSCILLATOR_Initialize 0020  
                          _EUSART_ErrorHandler 00BC                           _CCP3_DefaultCallBack 0002  
                  ?_EUSART_DefaultErrorHandler 0077                                     ?_vfpfcnvrt 0054  
                     __end_of_JSN_Library_Init 0D5C                                _CCP1_CaptureISR 0D86  
                                     _WritePin 0243                       _TMR1_SetInterruptHandler 0CA7  
                        _TMR1_InterruptHandler 00C6                                     _T0CON0bits 0017  
                             _CCP1_SetCallBack 0C9E                           _EUSART_RxDataHandler 0E40  
               CCP1_SetCallBack@customCallBack 0020                                       __ptext10 07D2  
                                     __ptext11 0554                                       __ptext20 0CE6  
                                     __ptext12 044F                                       __ptext21 0CDD  
                                     __ptext13 0798                                     _T1GCONbits 001C  
                                     __ptext30 0E75                                       __ptext22 0CD4  
                                     __ptext14 0E91                                       __ptext31 0C87  
                                     __ptext23 0CCB                                       __ptext15 0C76  
                                     __ptext40 02FE                                       __ptext32 0758  
                                     __ptext24 0CC2                                       __ptext16 0D1A  
                                     __ptext41 0DDF                                       __ptext33 0F5D  
                                     __ptext25 0E0F                                       __ptext17 0F91  
                                     __ptext50 0DC8                                       __ptext42 0C9E  
                                     __ptext34 05C5                                       __ptext26 0CB9  
                                     __ptext18 0D0E                                       __ptext51 0C80  
                                     __ptext43 0C72                                       __ptext35 0D48  
                                     __ptext27 0DF7                                       __ptext19 06CF  
                                     __ptext60 0DB2                                       __ptext52 0CF9  
                                     __ptext44 0D5C                                       __ptext36 0E27  
                                     __ptext28 0CB0                                       __ptext61 0002  
                                     __ptext53 0CEF                                       __ptext45 0C95  
                                     __ptext37 0CA7                                       __ptext29 0679  
                                     __ptext62 0D9C                                       __ptext54 0EB0  
                                     __ptext46 0D37                                       __ptext38 04D3  
                                     __ptext63 0C69                                       __ptext55 0FC7  
                                     __ptext39 0243                                       __ptext64 0D86  
                                     __ptext56 0C6E                                       __ptext48 0D03  
                                     __ptext65 0F2B                                       __ptext57 0003  
                                     __ptext49 0D26                                       __ptext66 07FE  
                                     __ptext58 0C6A                                       __ptext59 0E40  
                       ??_CCP1_DefaultCallBack 0079                                       _lastTrig 0076  
                              _CCP2_CaptureISR 0D9C                               ??_TMR0_ReadTimer 0020  
                 _TMR0_DefaultInterruptHandler 0000                        ?_EUSART_SetErrorHandler 0020  
                                   _PIC16_Init 0798                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0020                 __end_of_JSN_Sensor_GetDistance 0798  
                                     int$flags 007E                          ?_CCP3_DefaultCallBack 0077  
                                     _vfprintf 0EFA             __end_of_INTERRUPT_InterruptManager 0074  
                   _INTERRUPT_InterruptManager 0004                                      printf@fmt 006C  
        __end_of_EUSART_SetFramingErrorHandler 0CD4                  _EUSART_SetFramingErrorHandler 0CCB  
                            ??_TMR1_WriteTimer 0079                             _FR_Timer_GetMicros 0E75  
                           _FR_Timer_GetMillis 0D37                                _CCP3_CaptureISR 0DB2  
                           _FR_Timer_IncMicros 0CEF                             _FR_Timer_IncMillis 0CF9  
                                   _INTCONbits 000B                                ??_TMR0_CallBack 0077  
                             _CCP2_SetCallBack 0CB0                          ?_EUSART_RxDataHandler 0077  
                          ?_FR_Timer_GetMicros 0022                            ?_FR_Timer_GetMillis 0020  
                              _CCP1_Initialize 0DDF                            ?_FR_Timer_IncMicros 0077  
                          ?_FR_Timer_IncMillis 0077                                       intlevel1 0000  
                             ___lldiv@dividend 0030                        ?_PIN_MANAGER_Initialize 0077  
                       ??_CCP2_DefaultCallBack 0079                 __end_of_EUSART_SetErrorHandler 0CCB  
                            ??_JSN_GetLastTrig 0077           __end_of_EUSART_SetRxInterruptHandler 0CE6  
                 _EUSART_SetRxInterruptHandler 0CDD                           ??_FR_Timer_GetMicros 0026  
                         ??_FR_Timer_GetMillis 0024                        __end_of_CCP1_CaptureISR 0D9C  
                              _CCP2_Initialize 0DF7                                       printf@ap 00E0  
                         ??_FR_Timer_IncMicros 0077                           ??_FR_Timer_IncMillis 0077  
                           _EUSART_Receive_ISR 0FC7  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                                  ??_vfpfcnvrt 0056                                  __pstringtext1 1000  
                                __pstringtext2 0000                          CCP2_CaptureISR@module 007A  
                          ?_EUSART_Receive_ISR 0077                               ___lldiv@quotient 0035  
                              _TMR0_Initialize 0D5C                               _CCP3_SetCallBack 0CB9  
                      __end_of_CCP2_CaptureISR 0DB2                                _CCP3_Initialize 0E0F  
                                   _TX1STAbits 019E                             EUSART_Write@txData 0021  
               __end_of_PIN_MANAGER_Initialize 0FC7                           ??_EUSART_Receive_ISR 0078  
                        JSN_Sensor_Trig@Sensor 002A                                _TMR1_Initialize 0E27  
                                  ?_PIC16_Init 0077                        __end_of_CCP3_CaptureISR 0DC8  
